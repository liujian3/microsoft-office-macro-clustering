Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforeClose(Cancel As Boolean)

Dim cbSpecialMenu As CommandBarControl
'Fehlerbehandlung ausschalten
'sonst entsteht ein Fehler wenn die Men|fffd|bar nicht mehr sichtbar ist
    On Error Resume Next
'Objektvariablen f|fffd|llen
    Set cbSpecialMenu = Application.CommandBars("Worksheet Menu Bar").Controls("SAP")
'Men|fffd|leiste l|fffd|schen
    cbSpecialMenu.Delete

End Sub

Private Sub Workbook_Open()
    'CommandBars("Makro_ausfuehren").Visible = True
Dim cbMenu As CommandBar
Dim cbSpecialMenu As CommandBarPopup
Dim cbCommand As CommandBarControl
    Set cbMenu = Application.CommandBars("Worksheet Menu Bar")
    Set cbSpecialMenu = cbMenu.Controls.Add(Type:=msoControlPopup)
    cbSpecialMenu.Caption = "SAP"
    
    Set cbCommand = cbSpecialMenu.Controls.Add(Type:=msoControlButton)
    cbCommand.Caption = "Datenupload an SAP"
    cbCommand.OnAction = "Schaltfl|fffd|che1_KlickenSieAuf"

End Sub

Attribute VB_Name = "Modul1"
'Muster aktueller Stand 12.04.2012
'Werte mit 0 werden nicht als Fehler behandelt.
'18.06.2012
'Steuerschl|fffd|ssel AD hinzugef|fffd|gt

'06.08.2012
'Das Feld Zusatztext wird nun auf L|fffd|nge |fffd|berpr|fffd|ft

'02.05.2014
'Sonderzeichen entfernen

Option Explicit
Public strUsername As String
Public strPassword As String
'Die Funktion wir nur ben|fffd|tigt, um den Benutzer abzufragen und die Funktion subBeleg aufzurufen. Dies ist n|fffd|tig,
'da die Schaltfl|fffd|che SAP nur Makros aufrufen kann. Der Button ist in Spalte "X" versteckt, damit kein Anwender ihn sieht.
Sub Schaltfl|fffd|che1_KlickenSieAuf()
    'Dim strIufirm As String
    'Dim strIublnr As String
    
    'LoginDaten abfragen
    UserFormLogin.Show
    
    'Pr|fffd|fen der Benutzerdaten
    If (strUsername = "" Or strPassword = "") Then
        Exit Sub
    End If
    'Webservice aufrufen
    subBeleg
End Sub

Public Function subBeleg() As String
    
    'declarations
    Dim env, zeile, http, host, error
    error = ""
    'create envelope object, method name and namespace
    Set env = CreateObject("pocketSOAP.Envelope.12")
    env.SetMethod "MT_EXCEL", "urn:one2one-it.de:xi:global:basis"
    '|fffd|berpr|fffd|fen, ob 2. Zeile gef|fffd|llt ist
    If Not (IsEmpty(Cells(2, 1)) And IsEmpty(Cells(2, 2)) And IsEmpty(Cells(2, 3)) And IsEmpty(Cells(2, 4)) And IsEmpty(Cells(2, 5))) Then
    'Schleifenvariable anlegen
    Dim i As Integer
    i = 2
    'Schleife f|fffd|r jede aktive Zeile
        Do
            'Formate der Zellen l|fffd|schen
            Cells(i, 1).ClearFormats
            Cells(i, 2).ClearFormats
            Cells(i, 3).ClearFormats
            Cells(i, 4).ClearFormats
            Cells(i, 5).ClearFormats
            Cells(i, 6).ClearFormats
            Cells(i, 7).ClearFormats
            Cells(i, 8).ClearFormats
            Cells(i, 9).ClearFormats
            Cells(i, 10).ClearFormats
            Cells(i, 11).ClearFormats
            Cells(i, 12).ClearFormats
            Cells(i, 13).ClearFormats
            Cells(i, 14).ClearFormats
            Cells(i, 15).ClearFormats
            Cells(i, 16).ClearFormats
            Cells(i, 17).ClearFormats
            Cells(i, 18).ClearFormats
            Cells(i, 19).ClearFormats
            Cells(i, 20).ClearFormats
            Cells(i, 21).ClearFormats
            Cells(i, 22).ClearFormats
            Cells(i, 23).ClearFormats
            Cells(i, 24).ClearFormats
            Cells(i, 25).ClearFormats
            Cells(i, 26).ClearFormats
' Sonderzeichen entfernen
            Dim TmpStr As String
            Dim j As Integer
            j = 0
            TmpStr = ""
            For j = 1 To Len(Cells(i, 18).Value)
                If Asc(Mid(Cells(i, 18).Value, j, 1)) >= 32 Then
                    TmpStr = TmpStr & Mid(Cells(i, 18).Value, j, 1)
                End If
            Next j
            Cells(i, 18).Value = TmpStr
    'Zuweisen der Zeilen aus Excel gegen die Importparameter des SOAP-Dienstes
            Set zeile = env.Parameters.Create("row", Empty)
            zeile.Nodes.Create "IUERFNAM", Cells(i, 1).Value
            zeile.Nodes.Create "BELART", Cells(i, 2).Value
            zeile.Nodes.Create "IUBLNR", Cells(i, 3).Value
            zeile.Nodes.Create "IUYBCH", Cells(i, 4).Value
            zeile.Nodes.Create "IUFIRM", Cells(i, 5).Value
            zeile.Nodes.Create "IUPKNR", Cells(i, 6).Value
            zeile.Nodes.Create "IUKSTL", Cells(i, 7).Value
            zeile.Nodes.Create "IAUFNR1SOLL", Cells(i, 8).Value
            zeile.Nodes.Create "IUMWSL", Cells(i, 9).Value
            zeile.Nodes.Create "IFIRMG", Cells(i, 10).Value
            zeile.Nodes.Create "IUGKTO", Cells(i, 11).Value
            zeile.Nodes.Create "IUKSTG", Cells(i, 12).Value
            zeile.Nodes.Create "IAUFNR1HABEN", Cells(i, 13).Value
            zeile.Nodes.Create "IUMWSLH", Cells(i, 14).Value
            zeile.Nodes.Create "IUBETR", Cells(i, 15).Value
            zeile.Nodes.Create "IUKZSH", Cells(i, 16).Value
            zeile.Nodes.Create "IUMWBT", Cells(i, 17).Value
            zeile.Nodes.Create "IUZTXT", Cells(i, 18).Value
            zeile.Nodes.Create "IUKTTV", Cells(i, 19).Value
            zeile.Nodes.Create "IUKTTN", Cells(i, 20).Value
            zeile.Nodes.Create "IUPKAR", Cells(i, 21).Value
            zeile.Nodes.Create "IUBUKR", Cells(i, 22).Value
            zeile.Nodes.Create "IURENR", Cells(i, 23).Value
            zeile.Nodes.Create "IUPFIN", Cells(i, 24).Value
            zeile.Nodes.Create "IUYRCH", Cells(i, 25).Value
            zeile.Nodes.Create "IUXZWG", Cells(i, 26).Value
            
            'Fehlerhafte Eingaben werden rot hinterlegt
            If (IsEmpty(Cells(i, 15))) Then
                Cells(i, 15).Interior.Color = vbRed
                error = True
            End If
            If (Len(Cells(i, 1)) > 25) Then
                Cells(i, 1).Interior.Color = vbRed
                error = True
            End If
            If (Len(Cells(i, 3)) > 10) Then
                Cells(i, 3).Interior.Color = vbRed
                error = True
            End If
            If Not (IsNumeric(Cells(i, 15))) Then
                Cells(i, 15).Interior.Color = vbRed
                error = True
            End If
            If (Not IsEmpty(Cells(i, 7)) And Not (IsEmpty(Cells(i, 8)))) Then
                Cells(i, 7).Interior.Color = vbRed
                Cells(i, 8).Interior.Color = vbRed
                error = True
            End If
            If (Not IsEmpty(Cells(i, 12)) And Not (IsEmpty(Cells(i, 13)))) Then
                Cells(i, 12).Interior.Color = vbRed
                Cells(i, 13).Interior.Color = vbRed
                error = True
            End If
            '|fffd|berpr|fffd|fung der Feldl|fffd|nge V1.4
            'Incident 20120711-0070
            If (Len(Cells(i, 18)) > 50) Then
                Cells(i, 18).Interior.Color = vbRed
                error = True
            End If
            ' Ende der Erweiterung
            i = i + 1
        Loop Until (IsEmpty(Cells(i, 1)) Or IsEmpty(Cells(i, 2)) Or IsEmpty(Cells(i, 3)) Or IsEmpty(Cells(i, 4)) Or IsEmpty(Cells(i, 5)))
    'Fehlermeldung wenn Betrag nicht gef|fffd|llt wurde
    If (error = True) Then
        MsgBox "Rote Eingaben bitte |fffd|berpr|fffd|fen"
    Else
        'create transport object, authentificaction and soap header
        Set http = CreateObject("pocketSOAP.HTTPTransport.2")
        http.Authentication strUsername, strPassword
        'http.SOAPAction = "http://sap.com/xi/WebService/soap1.1"
        host = "http://blsappap01.wiv-dom.com:50000/XISOAPAdapter/MessageServlet?senderParty=&senderService=BC_GLOBAL_EXCEL&receiverParty=&receiverService=&interface=SI_OB_EXCEL_UPLOAD&interfaceNamespace=urn:one2one-it.de:xi:global:basis"
        'serializes it out over the HTTP request
        http.Send host, env.Serialize
        'parse response
        env.Parse http
        'r|fffd|ckemldung und authentifizierungsfehler abfangen
        
        'If env.Parameters.ItemByName("ERROR").Value <> "E" Then
        '   subBestellanforderung =|fffd|"Verarbeitung erfolgreich!"
        'Else
        '   subBestellanforderung = soaps.Parameters.ItemByName("ERROR_MSG"|fffd|).Value
        'End|fffd|If
        Cells(i + 1, 1) = "Die |fffd|bertragung ist abgeschlossen. Es wurden " & i - 2 & " Datens|fffd|tze |fffd|bertragen."
    End If
    End If
End Function
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub ClearEmptyCells()
    'bereinigt pseude-leere Zellen im aktiven Tabellenblatt
    'popUp = MsgBox(Prompt:="Das Tapellenblatt 'Upload' wurde bereinigt und kann nun nach SAP geladen werden.", Buttons:=vbOKOnly, Title:="Fertig zum Upload")
    Dim Zelle As Range, StatusCalc As Long, WshShell
        Set WshShell = CreateObject("WScript.Shell")
            WshShell.popup "Das Tapellenblatt 'Upload' wurde bereinigt und kann nun nach SAP geladen werden.", 3, "Fertig zum Upload"
    If ActiveSheet.Type = xlWorksheet Then
     With Application
         .ScreenUpdating = False
         .EnableEvents = False
      StatusCalc = .Calculation
         .Calculation = xlCalculationManual
     End With
    For Each Zelle In ActiveSheet.UsedRange.Cells
      If Not Zelle.HasFormula Then
        If Not IsEmpty(Zelle) And Zelle.Value = "" Then
          Zelle.ClearContents
        End If
      End If
     Next
       With Application
           .ScreenUpdating = True
           .EnableEvents = True
           .Calculation = StatusCalc
       End With
    End If
  'MsgBox popUp
End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserFormLogin"
Attribute VB_Base = "0{A9323902-B932-4B02-AF02-2DF3FAB96B7F}{F3AA0C00-7E98-4AEC-B8D1-E47B0F67A571}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdLogin_Click()
    'Login Daten auslesen
    strUsername = txtUsername.Text
    strPassword = txtPassword.Text
    
    'Login Formular ausblenden
    UserFormLogin.Hide
End Sub

Private Sub UserForm_Click()

End Sub

' InQuest injected base64 decoded content
' az{b~,

INQUEST-PP=macro
