Attribute VB_Name = "GBCode"
Global aaConn1 As Object
Global aaUser As String

Public Sub Test()
    
    Load frmCriteria
    frmCriteria.Show

End Sub
Public Sub ClearGrid()

   Worksheets("Nominal Enquiries").Range("A5:AL" & Worksheets("Nominal Enquiries").UsedRange.Rows(Worksheets("Nominal Enquiries").UsedRange.Rows.Count).Row).ClearContents

End Sub
Public Sub UpdateNomGridDetails()

    Dim UpdateNomGrid As Object
    Dim Test1 As Boolean
    Dim Test2 As Boolean

    aaUser = "AC1"
       
    Worksheets("Nominal Enquiries").Range("A5:AL" & Worksheets("Nominal Enquiries").UsedRange.Rows(Worksheets("Nominal Enquiries").UsedRange.Rows.Count).Row).ClearContents
    
    If aaConn1 Is Nothing Then MakeConnection
    
    If Not MakeConnection Then
    Exit Sub
    End If
    
    On Error GoTo UpdateNomGridError
        
    Loop1 = 5
    
    Worksheets("Nominal Enquiries").Range("A4").Value = "Entity"
    Worksheets("Nominal Enquiries").Range("B4").Value = "Ent. Name"
    Worksheets("Nominal Enquiries").Range("C4").Value = "Costcentre"
    Worksheets("Nominal Enquiries").Range("D4").Value = "Dept. Name"
    Worksheets("Nominal Enquiries").Range("E4").Value = "Attrib. Link"
    Worksheets("Nominal Enquiries").Range("F4").Value = "Nominal"
    Worksheets("Nominal Enquiries").Range("G4").Value = "Nominal Description"
    Worksheets("Nominal Enquiries").Range("H4").Value = "PLC"
    Worksheets("Nominal Enquiries").Range("I4").Value = "PLC Name"
    Worksheets("Nominal Enquiries").Range("J4").Value = "Division"
    Worksheets("Nominal Enquiries").Range("K4").Value = "Division Name"
    Worksheets("Nominal Enquiries").Range("L4").Value = "Territory"
    Worksheets("Nominal Enquiries").Range("M4").Value = "Territory Name"
    Worksheets("Nominal Enquiries").Range("N4").Value = "Business Unit"
    Worksheets("Nominal Enquiries").Range("O4").Value = "Business Unit Name"
    Worksheets("Nominal Enquiries").Range("P4").Value = "Cat8"
    Worksheets("Nominal Enquiries").Range("Q4").Value = "Cat8 Name"
    Worksheets("Nominal Enquiries").Range("R4").Value = "Attrib. Code"
    Worksheets("Nominal Enquiries").Range("S4").Value = "Attrib. NValue"
    Worksheets("Nominal Enquiries").Range("T4").Value = "Attrib. Name"
    Worksheets("Nominal Enquiries").Range("U4").Value = "Year"
    Worksheets("Nominal Enquiries").Range("V4").Value = "Period"
    Worksheets("Nominal Enquiries").Range("W4").Value = "Nominal Code"
    Worksheets("Nominal Enquiries").Range("X4").Value = "Nominal Name"
    Worksheets("Nominal Enquiries").Range("Y4").Value = "Date"
    Worksheets("Nominal Enquiries").Range("Z4").Value = "Tran. Ref."
    Worksheets("Nominal Enquiries").Range("AA4").Value = "Batch Ref."
    Worksheets("Nominal Enquiries").Range("AB4").Value = "Ledger"
    Worksheets("Nominal Enquiries").Range("AC4").Value = "Type"
    Worksheets("Nominal Enquiries").Range("AD4").Value = "Entered By"
    Worksheets("Nominal Enquiries").Range("AE4").Value = "Date Entered"
    Worksheets("Nominal Enquiries").Range("AF4").Value = "Cost/Supp Code"
    Worksheets("Nominal Enquiries").Range("AG4").Value = "Description"
    Worksheets("Nominal Enquiries").Range("AH4").Value = "Debit"
    Worksheets("Nominal Enquiries").Range("AI4").Value = "Credit"
    Worksheets("Nominal Enquiries").Range("AJ4").Value = "Value"
    Worksheets("Nominal Enquiries").Range("AK4").Value = "Audit"
    Worksheets("Nominal Enquiries").Range("AL4").Value = "Internal Ref."

    Worksheets("Nominal Enquiries").Range("A4:AL4").Font.Bold = True

                            
        SQL = "SELECT TOP 1000000 NCATEGORYCODE1,NCATNAME1,NCATEGORYCODE2,NCATNAME2,NCATPRIM2,NCATEGORYCODE3,NCATNAME3,NCATEGORYCODE4," & _
        "NCATNAME4,NCATEGORYCODE5,NCATNAME5,NCATEGORYCODE6,NCATNAME6,NCATEGORYCODE7,NCATNAME7,NCATEGORYCODE8,NCATNAME8," & _
        "NATT_CODE, NATV_CODE, NATV_NAME, DET_NOM_YEAR, DET_NOM_PERIOD, NCODE, NNAME, DET_DATE, DET_HEADER_REF, DET_BATCH_REF," & _
        "DET_ORIGIN,DET_TYPE,DET_USER_PUTIN,DET_DATE_PUTIN,DET_ACCOUNT,DET_DESCRIPTION,HOME_DEBIT,HOME_CREDIT,HOME_BALANCE,DET_PRIMARY,DET_PL_INTERNAL" & _
        " FROM UDEF_NOMINAL_ENQUIRY (NOLOCK) WHERE "
        
        
        'Test for Year criteria
        If Worksheets("Setup").Range("F5").Value = Null Or Worksheets("Setup").Range("F5").Value = "" Then
            Else
            SQL = SQL & " DET_NOM_YEAR='" & Worksheets("Setup").Range("F5") & "'"
        End If
        
        'Test for Period criteria
        If frmCriteria.ListBoxPeriod2.ListCount = 0 Then
            Else
            SQL = SQL & " AND DET_NOM_PERIOD in ("
            For i = 0 To frmCriteria.ListBoxPeriod2.ListCount - 1
                    SQL = SQL & frmCriteria.ListBoxPeriod2.List(i) & ","
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If
        
        'Test for Entity criteria
        If frmCriteria.ListBoxEntity2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE1 in ("
            For i = 0 To frmCriteria.ListBoxEntity2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxEntity2.List(i), 1, InStr(1, frmCriteria.ListBoxEntity2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If

        'Test for Cost Centre criteria
        If frmCriteria.ListBoxCC2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE2 in ("
            For i = 0 To frmCriteria.ListBoxCC2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxCC2.List(i), 1, InStr(1, frmCriteria.ListBoxCC2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If
               
        'Test for Nominal criteria
        If frmCriteria.ListBoxNom2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE3 in ("
            For i = 0 To frmCriteria.ListBoxNom2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxNom2.List(i), 1, InStr(1, frmCriteria.ListBoxNom2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If
        
        'Test for PLC criteria
        If frmCriteria.ListBoxPLC2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE4 in ("
            For i = 0 To frmCriteria.ListBoxPLC2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxPLC2.List(i), 1, InStr(1, frmCriteria.ListBoxPLC2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If

        'Test for Division criteria
        If frmCriteria.ListBoxDiv2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE5 in ("
            For i = 0 To frmCriteria.ListBoxDiv2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxDiv2.List(i), 1, InStr(1, frmCriteria.ListBoxDiv2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If

        'Test for Territory criteria
        If frmCriteria.ListBoxTerr2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE6 in ("
            For i = 0 To frmCriteria.ListBoxTerr2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxTerr2.List(i), 1, InStr(1, frmCriteria.ListBoxTerr2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If
        
        'Test for Business Unit criteria
        If frmCriteria.ListBoxBus2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE7 in ("
            For i = 0 To frmCriteria.ListBoxBus2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxBus2.List(i), 1, InStr(1, frmCriteria.ListBoxBus2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If

         'Test for Category 8 criteria
        If frmCriteria.ListBoxCat2.ListCount = 0 Then
            Else
            SQL = SQL & " AND NCATEGORYCODE8 in ("
            For i = 0 To frmCriteria.ListBoxCat2.ListCount - 1
                    SQL = SQL & "'" & Mid(frmCriteria.ListBoxCat2.List(i), 1, InStr(1, frmCriteria.ListBoxCat2.List(i), "-") - 2) & "',"
            Next i
            SQL = Left(SQL, Len(SQL) - 1) & ")"
        End If
      
        GetRecordSet SQL, UpdateNomGrid
        Test1 = UpdateNomGrid.BOF
        Test2 = UpdateNomGrid.EOF
        Test1 = UpdateNomGrid.BOF

        If Test1 = True And Test2 = True Then
            Else
            Worksheets("Nominal Enquiries").Range("A5").CopyFromRecordset UpdateNomGrid
    
            Loop1 = Worksheets("Nominal Enquiries").UsedRange.Rows(Worksheets("Nominal Enquiries").UsedRange.Rows.Count).Row
        
            Worksheets("Nominal Enquiries").Columns("Y").NumberFormat = "dd/mm/yyyy"
            Worksheets("Nominal Enquiries").Columns("AE").NumberFormat = "dd/mm/yyyy"
            Worksheets("Nominal Enquiries").Columns("E").NumberFormat = "#0"
            Worksheets("Nominal Enquiries").Columns("V").NumberFormat = "#0"
            Worksheets("Nominal Enquiries").Columns("AH:AJ").NumberFormat = "#,##0.00;(#,##0.00)"
            Worksheets("Nominal Enquiries").Range("AH2").Value = "=SUM(AH5:AH" & Loop1 & ")"
            Worksheets("Nominal Enquiries").Range("AI2").Value = "=SUM(AI5:AI" & Loop1 & ")"
            Worksheets("Nominal Enquiries").Range("AJ2").Value = "=SUM(AJ5:AJ" & Loop1 & ")"
            Worksheets("Nominal Enquiries").Columns("A:AL").AutoFit
            Worksheets("Nominal Enquiries").Columns("AG").ColumnWidth = 100
    
        End If
        
        frmCriteria.Hide

Exit Sub

UpdateNomGridError:
    MsgBox "An error has occurred when attempting to select Data from Dimensions." & vbCrLf & Err.Description


End Sub

Public Sub UpdateInvoiceDetails()

Dim UpdateInvoice As Object
Dim Test1 As Boolean
Dim Test2 As Boolean

'AC160516 Added to update customer details
   Worksheets("Sales Ledger Enquiries").Range("A24:O40").ClearContents

   If aaConn1 Is Nothing Then MakeConnection
   
   If Not MakeConnection Then
   Exit Sub
   End If
   
   On Error GoTo UpdateInvoiceError
        
    Loop1 = 24
    
    Worksheets("Sales Ledger Enquiries").Range("A23").Value = "Type"
    Worksheets("Sales Ledger Enquiries").Range("B23").Value = "Reapit"
    Worksheets("Sales Ledger Enquiries").Range("C23").Value = "Inv No."
    Worksheets("Sales Ledger Enquiries").Range("D23").Value = "Property"
    Worksheets("Sales Ledger Enquiries").Range("E23").Value = "Inv Date"
    Worksheets("Sales Ledger Enquiries").Range("F23").Value = "Comp"
    Worksheets("Sales Ledger Enquiries").Range("G23").Value = "Nett"
    Worksheets("Sales Ledger Enquiries").Range("H23").Value = "VAT"
    Worksheets("Sales Ledger Enquiries").Range("I23").Value = "Gross"
    Worksheets("Sales Ledger Enquiries").Range("J23").Value = "O/S"
    Worksheets("Sales Ledger Enquiries").Range("K23").Value = "Reference"
    Worksheets("Sales Ledger Enquiries").Range("L23").Value = "Period"
    Worksheets("Sales Ledger Enquiries").Range("M23").Value = "Year"
    Worksheets("Sales Ledger Enquiries").Range("N23").Value = "Office"
    Worksheets("Sales Ledger Enquiries").Range("O23").Value = "Contact"
    Worksheets("Sales Ledger Enquiries").Range("A23:O23").Font.Bold = True
        
        SQL = "Select ST_TRANTYPE, ST_COPYCUST, ST_HEADER_REF, ST_DESCRIPTION, ST_DATE, ST_DUEDATE, ST_NETT, ST_VAT,ST_GROSS , ST_UNALLOCATED, ST_BATCH_REF, ST_PERIODNUMBER, ST_YEAR, ST_USER1, ST_USER2 FROM SL_TRANSACTIONS(NOLOCK) where ST_HEADER_REF='" & Worksheets("Sales Ledger Enquiries").Range("B21") & "'"
        'Worksheets("Sales Ledger Enquiries").Range("d25").Value = SQL
        GetRecordSet SQL, UpdateInvoice
        Test1 = UpdateInvoice.BOF
        Test2 = UpdateInvoice.EOF
        Test1 = UpdateInvoice.BOF

        If Test1 = True And Test2 = True Then
            Else
            UpdateInvoice.movefirst
            Do While UpdateInvoice.EOF = False
                
            
                Worksheets("Sales Ledger Enquiries").Range("A" & Loop1).Value = UpdateInvoice.Fields("ST_TRANTYPE")
                Worksheets("Sales Ledger Enquiries").Range("B" & Loop1).Value = UpdateInvoice.Fields("ST_COPYCUST")
                Worksheets("Sales Ledger Enquiries").Range("C" & Loop1).Value = UpdateInvoice.Fields("ST_HEADER_REF")
                Worksheets("Sales Ledger Enquiries").Range("D" & Loop1).Value = UpdateInvoice.Fields("ST_DESCRIPTION")
                Worksheets("Sales Ledger Enquiries").Range("E" & Loop1).Value = UpdateInvoice.Fields("ST_DATE")
                Worksheets("Sales Ledger Enquiries").Range("F" & Loop1).Value = UpdateInvoice.Fields("ST_DUEDATE")
                Worksheets("Sales Ledger Enquiries").Range("G" & Loop1).Value = UpdateInvoice.Fields("ST_NETT")
                Worksheets("Sales Ledger Enquiries").Range("H" & Loop1).Value = UpdateInvoice.Fields("ST_VAT")
                Worksheets("Sales Ledger Enquiries").Range("I" & Loop1).Value = UpdateInvoice.Fields("ST_GROSS")
                Worksheets("Sales Ledger Enquiries").Range("J" & Loop1).Value = UpdateInvoice.Fields("ST_UNALLOCATED")
                Worksheets("Sales Ledger Enquiries").Range("K" & Loop1).Value = UpdateInvoice.Fields("ST_BATCH_REF")
                Worksheets("Sales Ledger Enquiries").Range("L" & Loop1).Value = UpdateInvoice.Fields("ST_PERIODNUMBER")
                Worksheets("Sales Ledger Enquiries").Range("M" & Loop1).Value = UpdateInvoice.Fields("ST_YEAR")
                Worksheets("Sales Ledger Enquiries").Range("N" & Loop1).Value = UpdateInvoice.Fields("ST_USER1")
                Worksheets("Sales Ledger Enquiries").Range("O" & Loop1).Value = UpdateInvoice.Fields("ST_USER2")
            
                UpdateInvoice.movenext
                Loop1 = Loop1 + 1
            Loop
        
            End If
        

    Worksheets("Sales Ledger Enquiries").Columns("A:O").AutoFit

Exit Sub

UpdateInvoiceError:
    MsgBox "An error has occurred when attempting to update Data from Dimensions." & vbCrLf & Err.Description


End Sub

Public Sub UpdateCustGridDetails()

Dim UpdateCustGrid As Object
Dim Test1 As Boolean
Dim Test2 As Boolean

'AC160516 Added to update customer details
   Worksheets("Sales Ledger Enquiries").Range("A5:O16").ClearContents

   If aaConn1 Is Nothing Then MakeConnection
   
   If Not MakeConnection Then
   Exit Sub
   End If
   
   On Error GoTo UpdateCustGridError
        
    Loop1 = 5
    
    Worksheets("Sales Ledger Enquiries").Range("A4").Value = "Type"
    Worksheets("Sales Ledger Enquiries").Range("B4").Value = "Reapit"
    Worksheets("Sales Ledger Enquiries").Range("C4").Value = "Inv No."
    Worksheets("Sales Ledger Enquiries").Range("D4").Value = "Property"
    Worksheets("Sales Ledger Enquiries").Range("E4").Value = "Inv Date"
    Worksheets("Sales Ledger Enquiries").Range("F4").Value = "Comp"
    Worksheets("Sales Ledger Enquiries").Range("G4").Value = "Nett"
    Worksheets("Sales Ledger Enquiries").Range("H4").Value = "VAT"
    Worksheets("Sales Ledger Enquiries").Range("I4").Value = "Gross"
    Worksheets("Sales Ledger Enquiries").Range("J4").Value = "O/S"
    Worksheets("Sales Ledger Enquiries").Range("K4").Value = "Reference"
    Worksheets("Sales Ledger Enquiries").Range("L4").Value = "Period"
    Worksheets("Sales Ledger Enquiries").Range("M4").Value = "Year"
    Worksheets("Sales Ledger Enquiries").Range("N4").Value = "Office"
    Worksheets("Sales Ledger Enquiries").Range("O4").Value = "Contact"
    Worksheets("Sales Ledger Enquiries").Range("A4:O4").Font.Bold = True
        
        SQL = "Select ST_TRANTYPE, ST_COPYCUST, ST_HEADER_REF, ST_DESCRIPTION, ST_DATE, ST_DUEDATE, ST_NETT, ST_VAT,ST_GROSS , ST_UNALLOCATED, ST_BATCH_REF, ST_PERIODNUMBER, ST_YEAR, ST_USER1, ST_USER2 FROM SL_TRANSACTIONS(NOLOCK) where ST_COPYCUST='" & Worksheets("Sales Ledger Enquiries").Range("B2") & "'"
        'Worksheets("Sales Ledger Enquiries").Range("d25").Value = SQL
        GetRecordSet SQL, UpdateCustGrid
        Test1 = UpdateCustGrid.BOF
        Test2 = UpdateCustGrid.EOF
        Test1 = UpdateCustGrid.BOF

        If Test1 = True And Test2 = True Then
            Else
            UpdateCustGrid.movefirst
            Do While UpdateCustGrid.EOF = False
                
            
                Worksheets("Sales Ledger Enquiries").Range("A" & Loop1).Value = UpdateCustGrid.Fields("ST_TRANTYPE")
                Worksheets("Sales Ledger Enquiries").Range("B" & Loop1).Value = UpdateCustGrid.Fields("ST_COPYCUST")
                Worksheets("Sales Ledger Enquiries").Range("C" & Loop1).Value = UpdateCustGrid.Fields("ST_HEADER_REF")
                Worksheets("Sales Ledger Enquiries").Range("D" & Loop1).Value = UpdateCustGrid.Fields("ST_DESCRIPTION")
                Worksheets("Sales Ledger Enquiries").Range("E" & Loop1).Value = UpdateCustGrid.Fields("ST_DATE")
                Worksheets("Sales Ledger Enquiries").Range("F" & Loop1).Value = UpdateCustGrid.Fields("ST_DUEDATE")
                Worksheets("Sales Ledger Enquiries").Range("G" & Loop1).Value = UpdateCustGrid.Fields("ST_NETT")
                Worksheets("Sales Ledger Enquiries").Range("H" & Loop1).Value = UpdateCustGrid.Fields("ST_VAT")
                Worksheets("Sales Ledger Enquiries").Range("I" & Loop1).Value = UpdateCustGrid.Fields("ST_GROSS")
                Worksheets("Sales Ledger Enquiries").Range("J" & Loop1).Value = UpdateCustGrid.Fields("ST_UNALLOCATED")
                Worksheets("Sales Ledger Enquiries").Range("K" & Loop1).Value = UpdateCustGrid.Fields("ST_BATCH_REF")
                Worksheets("Sales Ledger Enquiries").Range("L" & Loop1).Value = UpdateCustGrid.Fields("ST_PERIODNUMBER")
                Worksheets("Sales Ledger Enquiries").Range("M" & Loop1).Value = UpdateCustGrid.Fields("ST_YEAR")
                Worksheets("Sales Ledger Enquiries").Range("N" & Loop1).Value = UpdateCustGrid.Fields("ST_USER1")
                Worksheets("Sales Ledger Enquiries").Range("O" & Loop1).Value = UpdateCustGrid.Fields("ST_USER2")
            
                UpdateCustGrid.movenext
                Loop1 = Loop1 + 1
            Loop
        
            End If
        

    Worksheets("Sales Ledger Enquiries").Columns("A:O").AutoFit

Exit Sub

UpdateCustGridError:
    MsgBox "An error has occurred when attempting to update Data from Dimensions." & vbCrLf & Err.Description


End Sub
Public Function GetNextSeq(SequenceName As String) As Long
        
    Dim SQL As String
    Dim Dummy As Variant
    Dim rNewSequence As Object
        
    SQL = "Update SYS_SEQCONTRL set CTL_SEQ_NUMBER=CTL_SEQ_NUMBER+1 where CTL_SEQ_NAME='" & SequenceName & "'"
    MakeConnection
    aaConn1.Execute SQL
    SQL = "Select CTL_SEQ_NUMBER from SYS_SEQCONTRL (NOLOCK) where CTL_SEQ_NAME='" & SequenceName & "'"
    GetRecordSet SQL, rNewSequence
    GetNextSeq = rNewSequence.Fields("CTL_SEQ_NUMBER")

End Function

Public Function GetRecordSet(ByVal SQL As String, ByRef RecordSet As Object) As Variant
    
    On Error GoTo SQLError
    
    Set RecordSet = CreateObject("ADODB.Recordset")
    
    'MsgBox (SQL)
    If aaConn1 Is Nothing Then Call MakeConnection
    Set RecordSet = aaConn1.Execute(SQL)
    
    If RecordSet.EOF Then
        GetRecordSet = ""
    ElseIf IsNull(RecordSet(0)) Then
        GetRecordSet = ""
    Else
        GetRecordSet = RecordSet(0)
    End If
    
    Exit Function

SQLError:
    MsgBox "An error has occurred when attempting to update Dimensions." & vbCrLf & Err.Description
End Function

Public Function ExecuteSQL(SQL As String) As Boolean
    
    On Error GoTo SQLError
    
    If aaConn1 Is Nothing Then Call MakeConnection
    aaConn1.Execute SQL
    
    ExecuteSQL = True
    Exit Function

SQLError:
    MsgBox "An error has occurred when attempting to update Dimensions." & vbCrLf & Err.Description
    ExecuteSQL = False
End Function

   Public Function MakeConnection() As Boolean

    Dim ConnectionString
    Dim SQL
    
    AccountsUser = frmAccessImport.txtUser.Value
    AccountsDatabase = frmAccessImport.cmbDatabases.Value
    
    
    On Error GoTo ConnectionError
    
    ConnectionString = "Driver={SQL Server Native Client 11.0};Server=CWCLOUDSQL01;Database=" & AccountsDatabase & ";Trusted_Connection=yes;"
    Set aaConn1 = CreateObject("ADODB.Connection")
    aaConn1.Open = ConnectionString
    ConnectionOK = True
    
    MakeConnection = True
    aaConn1.commandtimeout = 480
    
    Exit Function

ConnectionError:
    frmErrorMessages.Add (Err.Description)
        frmAccessImport.Hide
        frmErrorMessages.Show
    MakeConnection = False
    Exit Function

End Function

Public Sub ShowError(strFriendlyMsg As String)

    Dim errLoop     As Object
    Dim strMsg      As String
    
    ' clear the message & create an error object
    strMsg = strFriendlyMsg & vbCrLf
    Set errLoop = CreateObject("ADODB.Error")
    
    If Not aaConn1 Is Nothing Then
    
        ' loop each error adding to the message string
        For Each errLoop In g_cnnConn.Errors
            If errLoop.Description > "" Then
                strMsg = strMsg & "Error #" & errLoop.Number & "  -  " & _
                errLoop.Description & vbCr
            End If
            
        Next errLoop
        
    End If
    
    ' if the message is blank, then the connection isn't the problem
    If strMsg = strFriendlyMsg & vbCrLf Then
        If (Err.Number <> 0) And (Err.Description <> "") Then
            strMsg = strFriendlyMsg & vbCrLf & "Error #" & Err.Number & vbCr & "  -  " & Err.Description & vbCr
        End If
    End If
    
    Beep
    MsgBox strMsg, vbCritical + vbOKOnly, c_AppTitle
    
End Sub

Public Function GetAccessStyleDate(d As Date) As String
    If d = #12:00:00 AM# Then
    d = Now()
    End If
    GetAccessStyleDate = VBA.Format(d, "d mmm yyyy")
End Function

Public Sub CreateSheet()
    Dim ws As Worksheet
    With ThisWorkbook
        Set ws = .Sheets.Add(After:=.Sheets(.Sheets.Count))
        ws.Name = "Criteria"
    End With
End Sub
Attribute VB_Name = "Menu"
Option Explicit

Global Const CompanyName = "Nominal Enquiry Setup"
Public Sub RemoveMenu()
    Dim MenuBar As CommandBarPopup
    
    For Each MenuBar In Application.CommandBars("Worksheet Menu Bar").Controls
        If MenuBar.Caption = "&" & CompanyName Then
            MenuBar.Delete
        End If
    Next
End Sub

Public Sub InstallMenu()
    Dim MenuBar As CommandBarPopup
    Dim MenuItem As CommandBarButton
    Dim InstalledModules As CommandBarPopup
    Dim IMItems As CommandBarButton
    Dim g As Integer
    Dim x As Integer
    
    For g = 1 To Application.CommandBars("Worksheet Menu Bar").Controls.Count
        If Application.CommandBars("Worksheet Menu Bar").Controls(g).Caption = "&" & CompanyName Then
            Application.CommandBars("Worksheet Menu Bar").Controls(g).Delete
            Exit For
        End If
    Next g
    
    x = Application.CommandBars("Worksheet Menu Bar").Controls.Count + 1
    Set MenuBar = Application.CommandBars("Worksheet Menu Bar").Controls.Add(msoControlPopup, , , x, True)
    MenuBar.Caption = "&" & CompanyName
    
    Set MenuItem = MenuBar.Controls.Add()
    MenuItem.Caption = "&Options..."
    MenuItem.Enabled = True
    MenuItem.OnAction = "OpenImport"
    
    
End Sub

Public Sub OpenImport()
    Dim strLogin
    Dim strDIM
    Dim Test
    Load frmAccessImport
        Test = GetLogin(strLogin, strDIM)
        frmAccessImport.txtLogin = strLogin
        frmAccessImport.txtUser = strDIM
        frmAccessImport.txtLogin.Enabled = False
        frmAccessImport.txtUser.Enabled = False
    frmAccessImport.Show
End Sub

Attribute VB_Name = "Module3"

Function GetLogin(strLogin, strDIM)
  Dim objUser
  Dim strName
  Dim arrLDAP
  Dim intIdx
  Dim objInfo As Object
  Dim TestUser As Object
  
  On Error GoTo NoAccessError
  'Routine to collect LDAP Login
  
    Set objInfo = CreateObject("ADSystemInfo")
    strLDAP = objInfo.UserName
    Set objInfo = Nothing
  
  On Error Resume Next
  strName = ""
  Set objUser = GetObject("LDAP://" & strLDAP)
  If Err.Number = 0 Then
    strName = objUser.Get("samAccountName")
  End If
  If Err.Number <> 0 Then
    arrLDAP = Split(strLDAP, ",")
    For intIdx = 0 To UBound(arrLDAP)
      If UCase(Left(arrLDAP(intIdx), 3)) = "DC=" Then
        strName = Trim(Mid(arrLDAP(intIdx), 4))
      End If
    Next

  End If
  Set objUser = Nothing
  
  strLogin = strName
  
  'Routine to fetch Dimensions Windows authenticated user
  
   If aaConn1 Is Nothing Then MakeConnection
   
   If Not MakeConnection Then
   Exit Function
   End If

        SQL = "Select USER_ID from SYS_USER (NOLOCK) where USER_NAME='" & strName & "'"
        GetRecordSet SQL, TestUser
        Test1 = TestUser.BOF
        Test2 = TestUser.EOF
        If Test1 = True And Test2 = True Then
            DetailValidation = False
            strDIM = ""
            frmErrorMessages.Add "Your Windows Login does not allow adding records"
        Else
            strDIM = TestUser.Fields("USER_ID")
        End If
  
  'Routine to Permanently hide the setup page
  'Worksheets("Setup").Visible = True
   Worksheets("Setup").Visible = xlSheetVeryHidden
   Worksheets("Criteria").Visible = xlSheetVeryHidden
   
Exit Function

NoAccessError:
    frmErrorMessages.Add (Err.Description)
        frmAccessImport.Hide
        frmErrorMessages.Show
Exit Function

End Function

Attribute VB_Name = "Setup"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    RemoveMenu
End Sub

Private Sub Workbook_Open()
    InstallMenu
End Sub



Attribute VB_Name = "frmAccessImport"
Attribute VB_Base = "0{510B49FD-C755-4BEF-A1E7-760A3402CD38}{68A1D191-9A7B-4607-ACC2-6A1D7E2EE3AA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub cmbDatabases_Change()

End Sub

Private Sub cmdContinue_Click()
frmAccessImport.Hide
End Sub

Private Sub UserForm_Click()

End Sub
Attribute VB_Name = "frmCriteria"
Attribute VB_Base = "0{3F6EBB60-3BDC-472C-91D6-E0E8A8CCBE6D}{F66ADDB2-0D23-4A38-B004-85A3FAA50412}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub butEntityA_Click()
    For i = 0 To ListBoxEntity1.ListCount - 1
        If ListBoxEntity1.Selected(i) = True Then ListBoxEntity2.AddItem ListBoxEntity1.List(i)
    Next i
End Sub
Private Sub butEntityR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxEntity2.ListCount - 1
        If ListBoxEntity2.Selected(i - counter) Then
            ListBoxEntity2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub
Private Sub butCCA_Click()
    For i = 0 To ListBoxCC1.ListCount - 1
        If ListBoxCC1.Selected(i) = True Then ListBoxCC2.AddItem ListBoxCC1.List(i)
    Next i
End Sub
Private Sub butCCR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxCC2.ListCount - 1
        If ListBoxCC2.Selected(i - counter) Then
            ListBoxCC2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub
Private Sub butNomA_Click()
    For i = 0 To ListBoxNom1.ListCount - 1
        If ListBoxNom1.Selected(i) = True Then ListBoxNom2.AddItem ListBoxNom1.List(i)
    Next i
End Sub
Private Sub butNomR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxNom2.ListCount - 1
        If ListBoxNom2.Selected(i - counter) Then
            ListBoxNom2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub
Private Sub butPLCA_Click()
    For i = 0 To ListBoxPLC1.ListCount - 1
        If ListBoxPLC1.Selected(i) = True Then ListBoxPLC2.AddItem ListBoxPLC1.List(i)
    Next i
End Sub
Private Sub butPLCR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxPLC2.ListCount - 1
        If ListBoxPLC2.Selected(i - counter) Then
            ListBoxPLC2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub
Private Sub butPeriodA_Click()
    For i = 0 To ListBoxPeriod1.ListCount - 1
        If ListBoxPeriod1.Selected(i) = True Then ListBoxPeriod2.AddItem ListBoxPeriod1.List(i)
    Next i
End Sub
Private Sub butPeriodR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxPeriod2.ListCount - 1
        If ListBoxPeriod2.Selected(i - counter) Then
            ListBoxPeriod2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub
Private Sub butDivA_Click()
    For i = 0 To ListBoxDiv1.ListCount - 1
        If ListBoxDiv1.Selected(i) = True Then ListBoxDiv2.AddItem ListBoxDiv1.List(i)
    Next i
End Sub
Private Sub butDivR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxDiv2.ListCount - 1
        If ListBoxDiv2.Selected(i - counter) Then
            ListBoxDiv2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub


Private Sub butTerrA_Click()
    For i = 0 To ListBoxTerr1.ListCount - 1
        If ListBoxTerr1.Selected(i) = True Then ListBoxTerr2.AddItem ListBoxTerr1.List(i)
    Next i
End Sub
Private Sub butTerrR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxTerr2.ListCount - 1
        If ListBoxTerr2.Selected(i - counter) Then
            ListBoxTerr2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub
Private Sub butBusA_Click()
    For i = 0 To ListBoxBus1.ListCount - 1
        If ListBoxBus1.Selected(i) = True Then ListBoxBus2.AddItem ListBoxBus1.List(i)
    Next i
End Sub
Private Sub butBusR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxBus2.ListCount - 1
        If ListBoxBus2.Selected(i - counter) Then
            ListBoxBus2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub
Private Sub butCatA_Click()
    For i = 0 To ListBoxCat1.ListCount - 1
        If ListBoxCat1.Selected(i) = True Then ListBoxCat2.AddItem ListBoxCat1.List(i)
    Next i
End Sub
Private Sub butCatR_Click()
    Dim counter As Integer
    counter = 0
    For i = 0 To ListBoxCat2.ListCount - 1
        If ListBoxCat2.Selected(i - counter) Then
            ListBoxCat2.RemoveItem (i - counter)
            counter = counter + 1
        End If
    Next i
End Sub

Private Sub butSearch_Click()

    UpdateNomGridDetails

End Sub
Private Sub butCancel_Click()

    frmCriteria.Hide

End Sub

Private Sub butClear_Click()

    Worksheets("Setup").Range("F1:G10").ClearContents
    Worksheets("Setup").Range("F5") = "C"
    
    Worksheets("Nominal Enquiries").Range("A5:AL" & Worksheets("Nominal Enquiries").UsedRange.Rows(Worksheets("Nominal Enquiries").UsedRange.Rows.Count).Row).ClearContents

    'Clear Listbox
Dim counter As Integer
counter = 0

    Do While ListBoxEntity2.ListCount > 0
            ListBoxEntity2.RemoveItem (0)
    Loop
    Do While ListBoxCC2.ListCount > 0
            ListBoxCC2.RemoveItem (0)
    Loop
    Do While ListBoxNom2.ListCount > 0
            ListBoxNom2.RemoveItem (0)
    Loop
    Do While ListBoxPLC2.ListCount > 0
            ListBoxPLC2.RemoveItem (0)
    Loop
    Do While ListBoxPeriod2.ListCount > 0
            ListBoxPeriod2.RemoveItem (0)
    Loop
    Do While ListBoxDiv2.ListCount > 0
            ListBoxDiv2.RemoveItem (0)
    Loop
    Do While ListBoxTerr2.ListCount > 0
            ListBoxTerr2.RemoveItem (0)
    Loop
    Do While ListBoxBus2.ListCount > 0
            ListBoxBus2.RemoveItem (0)
    Loop
    Do While ListBoxCat2.ListCount > 0
            ListBoxCat2.RemoveItem (0)
    Loop
End Sub

Private Sub butSave_Click()

'Clear Listbox
Dim counter As Integer
counter = 0

With Worksheets("Criteria")

    .Range("A1:J" & .UsedRange.Rows(.UsedRange.Rows.Count).Row).ClearContents


    If Worksheets("Setup").Range("F5").Value = Null Or Worksheets("Setup").Range("F5").Value = "" Then
        Else
            .Range("J" & 1).Value = Worksheets("Setup").Range("F5")
    End If

    If frmCriteria.ListBoxEntity2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxEntity2.ListCount - 1
            .Range("A" & i + 1).Value = ListBoxEntity2.List(i)
        Next i
    End If
    

    If frmCriteria.ListBoxCC2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxCC2.ListCount - 1
            .Range("B" & i + 1).Value = ListBoxCC2.List(i)
        Next i
    End If
    
    
    If frmCriteria.ListBoxNom2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxNom2.ListCount - 1
            .Range("C" & i + 1).Value = ListBoxNom2.List(i)
        Next i
    End If
    
    If frmCriteria.ListBoxPLC2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxPLC2.ListCount - 1
            .Range("D" & i + 1).Value = ListBoxPLC2.List(i)
        Next i
    End If
    
    If frmCriteria.ListBoxPeriod2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxPeriod2.ListCount - 1
            .Range("E" & i + 1).Value = ListBoxPeriod2.List(i)
        Next i
    End If
    
    If frmCriteria.ListBoxDiv2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxDiv2.ListCount - 1
            .Range("F" & i + 1).Value = ListBoxDiv2.List(i)
        Next i
    End If
    
    If frmCriteria.ListBoxTerr2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxTerr2.ListCount - 1
            .Range("G" & i + 1).Value = ListBoxTerr2.List(i)
        Next i
    End If
    
    If frmCriteria.ListBoxBus2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxBus2.ListCount - 1
            .Range("H" & i + 1).Value = ListBoxBus2.List(i)
        Next i
    End If
    
    If frmCriteria.ListBoxCat2.ListCount = 0 Then
        Else
        For i = 0 To frmCriteria.ListBoxCat2.ListCount - 1
            .Range("I" & i + 1).Value = ListBoxCat2.List(i)
        Next i
    End If
    
    End With
End Sub

Private Sub butRecall_Click()

    'Clear Listbox
Dim counter As Integer
counter = 0

    Do While ListBoxEntity2.ListCount > 0
            ListBoxEntity2.RemoveItem (0)
    Loop
    Do While ListBoxCC2.ListCount > 0
            ListBoxCC2.RemoveItem (0)
    Loop
    Do While ListBoxNom2.ListCount > 0
            ListBoxNom2.RemoveItem (0)
    Loop
    Do While ListBoxPLC2.ListCount > 0
            ListBoxPLC2.RemoveItem (0)
    Loop
    Do While ListBoxPeriod2.ListCount > 0
            ListBoxPeriod2.RemoveItem (0)
    Loop
    Do While ListBoxDiv2.ListCount > 0
            ListBoxDiv2.RemoveItem (0)
    Loop
    Do While ListBoxTerr2.ListCount > 0
            ListBoxTerr2.RemoveItem (0)
    Loop
    Do While ListBoxBus2.ListCount > 0
            ListBoxBus2.RemoveItem (0)
    Loop
    Do While ListBoxCat2.ListCount > 0
            ListBoxCat2.RemoveItem (0)
    Loop
    
'Add in items from sheet

With Worksheets("Criteria")
 
    Loop1 = 1
    Do While .Range("A" & Loop1).Value <> ""
            ListBoxEntity2.AddItem (.Range("A" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
    
    Loop1 = 1
    Do While .Range("B" & Loop1).Value <> ""
            ListBoxCC2.AddItem (.Range("B" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop

    Loop1 = 1
    Do While .Range("C" & Loop1).Value <> ""
            ListBoxNom2.AddItem (.Range("C" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
    
    Loop1 = 1
    Do While .Range("D" & Loop1).Value <> ""
            ListBoxPLC2.AddItem (.Range("D" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
    
    Loop1 = 1
    Do While .Range("E" & Loop1).Value <> ""
            ListBoxPeriod2.AddItem (.Range("E" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
    
    Loop1 = 1
    Do While .Range("F" & Loop1).Value <> ""
            ListBoxDiv2.AddItem (.Range("F" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
    
    Loop1 = 1
    Do While .Range("G" & Loop1).Value <> ""
            ListBoxTerr2.AddItem (.Range("G" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
    
    Loop1 = 1
    Do While .Range("H" & Loop1).Value <> ""
            ListBoxBus2.AddItem (.Range("H" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
    
    Loop1 = 1
    Do While .Range("I" & Loop1).Value <> ""
            ListBoxCat2.AddItem (.Range("I" & Loop1).Value)
            Loop1 = Loop1 + 1
    Loop
End With
End Sub

Private Sub ListBoxEntity1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxEntity1.ListCount - 1
        If ListBoxEntity1.Selected(i) = True Then ListBoxEntity2.AddItem ListBoxEntity1.List(i)
    Next i
End Sub
Private Sub ListBoxCC1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxCC1.ListCount - 1
        If ListBoxCC1.Selected(i) = True Then ListBoxCC2.AddItem ListBoxCC1.List(i)
    Next i
End Sub
Private Sub ListBoxNom1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxNom1.ListCount - 1
        If ListBoxNom1.Selected(i) = True Then ListBoxNom2.AddItem ListBoxNom1.List(i)
    Next i
End Sub
Private Sub ListBoxPLC1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxPLC1.ListCount - 1
        If ListBoxPLC1.Selected(i) = True Then ListBoxPLC2.AddItem ListBoxPLC1.List(i)
    Next i
End Sub
Private Sub ListBoxPeriod1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxPeriod1.ListCount - 1
        If ListBoxPeriod1.Selected(i) = True Then ListBoxPeriod2.AddItem ListBoxPeriod1.List(i)
    Next i
End Sub
Private Sub ListBoxDiv1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxDiv1.ListCount - 1
        If ListBoxDiv1.Selected(i) = True Then ListBoxDiv2.AddItem ListBoxDiv1.List(i)
    Next i
End Sub
Private Sub ListBoxTerr1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxTerr1.ListCount - 1
        If ListBoxTerr1.Selected(i) = True Then ListBoxTerr2.AddItem ListBoxTerr1.List(i)
    Next i
End Sub
Private Sub ListBoxBus1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxBus1.ListCount - 1
        If ListBoxBus1.Selected(i) = True Then ListBoxBus2.AddItem ListBoxBus1.List(i)
    Next i
End Sub
Private Sub ListBoxCat1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    For i = 0 To ListBoxCat1.ListCount - 1
        If ListBoxCat1.Selected(i) = True Then ListBoxCat2.AddItem ListBoxCat1.List(i)
    Next i
End Sub

Sub UserForm_Initialize()
Dim UpdateCategoriesGrid As Object

    
    'Populate Grid
    With ListBoxPeriod1
        .AddItem "1"
        .AddItem "2"
        .AddItem "3"
        .AddItem "4"
        .AddItem "5"
        .AddItem "6"
        .AddItem "7"
        .AddItem "8"
        .AddItem "9"
        .AddItem "10"
        .AddItem "11"
        .AddItem "12"
    End With
    
    cbdYear.List = Array("L", "C", "N")
    
    ListBoxEntity1.MultiSelect = 2
    ListBoxEntity2.MultiSelect = 2
    ListBoxCC1.MultiSelect = 2
    ListBoxCC2.MultiSelect = 2
    ListBoxNom1.MultiSelect = 2
    ListBoxNom2.MultiSelect = 2
    ListBoxPLC1.MultiSelect = 2
    ListBoxPLC2.MultiSelect = 2
    ListBoxPeriod1.MultiSelect = 2
    ListBoxPeriod2.MultiSelect = 2
    ListBoxDiv1.MultiSelect = 2
    ListBoxDiv2.MultiSelect = 2
    ListBoxTerr1.MultiSelect = 2
    ListBoxTerr2.MultiSelect = 2
    ListBoxBus1.MultiSelect = 2
    ListBoxBus2.MultiSelect = 2
    ListBoxCat1.MultiSelect = 2
    ListBoxCat2.MultiSelect = 2
   
    
    SQL = "SELECT NCAT_CODE,NCAT_NAME,NCAT_NUMBER FROM NL_CATEGORIES (NOLOCK) ORDER BY NCAT_NUMBER,NCAT_CODE"
    'MsgBox SQL
    
    GetRecordSet SQL, UpdateCategoriesGrid
    Test1 = UpdateCategoriesGrid.BOF
    Test2 = UpdateCategoriesGrid.EOF
    Test1 = UpdateCategoriesGrid.BOF

    Loop1 = 1
    If Test1 = True And Test2 = True Then
        Else
        UpdateCategoriesGrid.movefirst
        Do While UpdateCategoriesGrid.EOF = False
        Select Case UpdateCategoriesGrid.Fields("NCAT_NUMBER")
             Case 1
                ListBoxEntity1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
             Case 2
                ListBoxCC1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
             Case 3
                ListBoxNom1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
             Case 4
                ListBoxPLC1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
             Case 5
                ListBoxDiv1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
             Case 6
                ListBoxTerr1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
             Case 7
                ListBoxBus1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
             Case 8
                ListBoxCat1.AddItem UpdateCategoriesGrid.Fields("NCAT_CODE") & " - " & UpdateCategoriesGrid.Fields("NCAT_NAME")
            End Select
            UpdateCategoriesGrid.movenext
            Loop1 = Loop1 + 1
        Loop
      End If



End Sub

Attribute VB_Name = "frmErrorMessages"
Attribute VB_Base = "0{B3415A0C-4821-46F4-BB26-0384FF77CFA7}{DAD56053-D143-4849-89D7-D47C2BE9678E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Private ErrorText As String

Public Sub Clear()
    ErrorText = ""
    ListBox1.Clear
End Sub

Public Sub Add(ByVal ErrorMessage As String)
    ErrorText = ErrorText & ErrorMessage & vbCrLf & vbCrLf
    ListBox1.AddItem ErrorMessage
End Sub

Public Function ErrorsOccured() As Boolean
    If Len(ErrorText) > 0 Then
        ErrorsOccured = True
    Else
        ErrorsOccured = False
    End If
End Function

Public Sub DisplayErrors()
    Me.Show
End Sub

Private Sub CommandButton1_Click()
    Me.Hide
    ErrorText = ""
    ListBox1.Clear
End Sub

Private Sub ListBox1_Click()
    If ListBox1.ListIndex > -1 Then
        Label1.Caption = ListBox1.List(ListBox1.ListIndex)
    Else
        Label1.Caption = ""
    End If
End Sub



INQUEST-PP=macro
