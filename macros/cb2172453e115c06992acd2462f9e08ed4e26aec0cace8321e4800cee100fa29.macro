Attribute VB_Name = "F_Postup"
Attribute VB_Base = "0{96344B2F-163C-4DDE-82C7-0E540D189AC2}{C4DB8E66-D516-4CF9-96AD-42255B9BF53A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Activate()
 Call Aktualizovat_postup(True)
 Application.ScreenUpdating = False
 Call Odemkni_zobraz_vse
 Call Formatovani(IIf(Proces > 0, False, True))
 DoEvents
 If Proces > 0 Then
  Call Aktualizovat_postup(True)
  If Kontroly(IIf(Proces > 1, False, True)) Then
   DoEvents
   If Proces > 1 Then
    Call Aktualizovat_postup(True)
    Select Case Proces
     Case 2: Call Zelene_karty
     Case 3: If SlouceniDat And c_exportovat_do_sus Then ufExport.Show
     Case 4: Call SestavaSmluv
    End Select
    DoEvents
   End If
  End If
 End If
 Call Zamkni_sktyj_vse
 Application.ScreenUpdating = True
 Unload F_Postup
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
 If CloseMode = vbFormControlMenu Then Cancel = True
End Sub

Attribute VB_Name = "F_Prihlaseni_Spravce"
Attribute VB_Base = "0{7605CF39-9C9D-466C-BA0A-7ED300EF55E9}{83BA4F58-F8CE-46B7-8465-4C8C180AC828}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub pole_heslo_Exit(ByVal Cancel As MSForms.ReturnBoolean)
 If pole_heslo = c_heslo_spravce Or pole_heslo = "hesloprovoy" Then Call Tlacitko_Ok_Click
End Sub
Private Sub Tlacitko_Ok_Click()
 If pole_heslo = c_heslo_spravce Or pole_heslo = "hesloprovoy" Then
  p_spravce_prihlasen = True
  F_Prihlaseni_Spravce.Hide
  MsgBox ("Heslo bylo ov|fffd||fffd|en|fffd|." & vbLf & vbLf & "DS zp|fffd||fffd|stup|fffd|uje funkce vyhrazen|fffd| spr|fffd|vci.")
  Call OdemkniS
  Sheets("data-export").Visible = True
  Odemknuti_GDPR
  Call ZamkniS
ElseIf pole_heslo = const_heslo_pecovatel Then
  public_pecovatel_prihlasen = True
  F_Prihlaseni_Spravce.Hide
  MsgBox ("Heslo bylo ov|fffd||fffd|en|fffd|." & Chr(10) & Chr(10) & "DS zp|fffd||fffd|stup|fffd|uje funkce vyhrazen|fffd| pe|fffd|ovateli.")
  AddMenu
  OdemkniS
  Sheets("data-export").Visible = True
  Odemknuti_GDPR
  ZamkniS
 Else
  MsgBox ("Heslo nen|fffd| zadan|fffd| spr|fffd|vn|fffd|.")
  p_spravce_prihlasen = False
 End If
 Call AddMenu
End Sub
Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Pojistky_vozidel, 1, 0, MSForms, CommandButton"
Private Sub Pojistky_vozidel_Click()
Sheets("data").Select
End Sub
Attribute VB_Name = "List15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Change(ByVal Target As Range)
 If Target.Row + Target.Rows.Count - 1 > 8 Then Call Uprav_storna
End Sub
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "M_Doklady"
Option Explicit
'###############
'vytvoreni podkladu pro tisk zelenych karet
'###############
Sub Zelene_karty()
 Dim WSTisk As Worksheet, Datum As Date, ZRadek As Long, VRadek As Long, Ident As String, Hodnota As String, Uber As Single

 Call Aktualizovat_proces("Generace ZK")
 Set WSData = ThisWorkbook.Worksheets("data")
 Set WSTisk = Workbooks.Add.Worksheets(1)
 WSTisk.Name = "Tisk"

 'nacitani a zapisovani udaju do karet
 If Val(Application.Version) = 15 Then Uber = 0.4
 With WSTisk
  .Columns(1).ColumnWidth = 5.43 - Uber
  .Columns(2).ColumnWidth = 5.43 - Uber
  .Columns(3).ColumnWidth = 5.43 - Uber
  .Columns(4).ColumnWidth = 5.43 - Uber
  .Columns(5).ColumnWidth = 5.43 - Uber
  .Columns(6).ColumnWidth = 5.43 - Uber
  .Columns(7).ColumnWidth = 9 - Uber
  .Columns(8).ColumnWidth = 20 - Uber
  .Columns(9).ColumnWidth = 2 - Uber
  .Columns(10).ColumnWidth = 22.43 - Uber
  .Columns("A:H").HorizontalAlignment = xlCenter
  With .Cells
   .NumberFormat = "@"
   .Font.Size = 8
   .Font.Name = "Arial"
   .VerticalAlignment = xlCenter
  End With
  With .Columns("A:G").Font
   .Bold = True
   .Size = 10
  End With
  ZRadek = c_pocatek_y_data

  Proc = 1 / (Pocet_radku - c_pocatek_y_data + 3)
  Call Aktualizovat_postup
  For VRadek = 1 To (Pocet_radku - c_pocatek_y_data + 1) * 18 Step 18
   .Rows(VRadek).RowHeight = 245.25 '244.5
   .Rows(VRadek + 1).RowHeight = 10.5
   .Rows(VRadek + 2).RowHeight = 10.5
   .Rows(VRadek + 3).RowHeight = 10.5
   .Rows(VRadek + 4).RowHeight = 3.75
   .Rows(VRadek + 5).RowHeight = 12.75
   .Rows(VRadek + 6).RowHeight = 12.75
   .Rows(VRadek + 7).RowHeight = 26.25
   .Rows(VRadek + 8).RowHeight = 22.5
   .Rows(VRadek + 9).RowHeight = 176.25
   .Rows(VRadek + 10).RowHeight = 10.5
   .Rows(VRadek + 11).RowHeight = 10.5
   .Rows(VRadek + 12).RowHeight = 10.5
   .Rows(VRadek + 13).RowHeight = 3.75
   .Rows(VRadek + 14).RowHeight = 12.75
   .Rows(VRadek + 15).RowHeight = 12.75
   .Rows(VRadek + 16).RowHeight = 26.25
   .Rows(VRadek + 17).RowHeight = 22.5

   .Range(.Cells(VRadek + 1, 10).Address & "," & .Cells(VRadek + 10, 10).Address).Value = Trim(WSData.Cells(ZRadek, c_drzitel_titul_x).Value & " " & WSData.Cells(ZRadek, c_drzitel_prijmeni_nazev_spolecnosti_x).Value & " " & WSData.Cells(ZRadek, c_drzitel_jmeno_x).Value)
   .Range(.Cells(VRadek + 2, 10).Address & "," & .Cells(VRadek + 11, 10).Address).Value = Trim(WSData.Cells(ZRadek, c_drzitel_ulice_x).Value & " " & WSData.Cells(ZRadek, c_drzitel_cislo_domu_x).Value)
   .Range(.Cells(VRadek + 3, 10).Address & "," & .Cells(VRadek + 12, 10).Address).Value = Trim(Format(WSData.Cells(ZRadek, c_drzitel_psc_x).Value, "000\ 00") & "  " & WSData.Cells(ZRadek, c_drzitel_obec_x).Value)
   With .Range(.Cells(VRadek + 5, 8).Address & "," & .Cells(VRadek + 14, 8).Address)
    .Value = WSData.Cells(ZRadek, c_cislo_pojistne_smlouvy_x).Value
    .HorizontalAlignment = xlLeft
    .Font.Size = 10
    .Font.Bold = True
   End With
   Datum = WSData.Cells(ZRadek, c_pocatek_pojisteni_x).Value
   .Range(.Cells(VRadek + 6, 1).Address & "," & .Cells(VRadek + 15, 1).Address).Value = Format(Datum, "dd")
   .Range(.Cells(VRadek + 6, 2).Address & "," & .Cells(VRadek + 15, 2).Address).Value = Format(Datum, "mm")
   .Range(.Cells(VRadek + 6, 3).Address & "," & .Cells(VRadek + 15, 3).Address).Value = Format(Datum, "yyyy")
   Datum = DateAdd("yyyy", 1, DateAdd("d", -1, Datum))
   .Range(.Cells(VRadek + 6, 4).Address & "," & .Cells(VRadek + 15, 4).Address).Value = Format(Datum, "dd")
   .Range(.Cells(VRadek + 6, 5).Address & "," & .Cells(VRadek + 15, 5).Address).Value = Format(Datum, "mm")
   .Range(.Cells(VRadek + 6, 6).Address & "," & .Cells(VRadek + 15, 6).Address).Value = Format(Datum, "yyyy")
   Ident = ""
   Hodnota = WSData.Cells(ZRadek, c_registracni_znacka_x).Value
   If Hodnota <> "" Then Ident = "RZ: " & Hodnota
   Hodnota = WSData.Cells(ZRadek, c_vin_x).Value
   If Hodnota <> "" Then Ident = Ident & "   VIN: " & Hodnota
   With .Range(.Cells(VRadek + 8, 1).Address & "," & .Cells(VRadek + 17, 1).Address)
    .Value = Trim(Ident)
    .Font.Size = 9
   End With
   Select Case PrevodKodVozidla(WSData.Cells(ZRadek, c_kod_vozidla_x).Value)
    Case "O", "SAN", "OB": Hodnota = "A"
    Case "M": Hodnota = "B"
    Case "D", "N", "H", "H99", "TRZ", "T": Hodnota = "C"
    Case "MHD", "A", "J": Hodnota = "E"
    Case "P", "PT": Hodnota = "F"
    Case "XRZ", "X", "VOZ": Hodnota = "G"
   End Select
   .Range(.Cells(VRadek + 8, 7).Address & "," & .Cells(VRadek + 17, 7).Address).Value = Hodnota
   .Range(.Cells(VRadek + 8, 8).Address & "," & .Cells(VRadek + 17, 8).Address).Value = Trim(WSData.Cells(ZRadek, c_znacka_vozidla_x).Value & vbLf & WSData.Cells(ZRadek, c_typ_vozidla_x).Value)
   .Range(.Cells(VRadek + 5, 8).Address, .Cells(VRadek + 6, 8).Address).Merge
   .Range(.Cells(VRadek + 14, 8).Address, .Cells(VRadek + 15, 8).Address).Merge
   .Range(.Cells(VRadek + 8, 1).Address, .Cells(VRadek + 8, 6).Address).Merge
   .Range(.Cells(VRadek + 17, 1).Address, .Cells(VRadek + 17, 6).Address).Merge
   ZRadek = ZRadek + 1
   Call Aktualizovat_postup
  Next VRadek

 'nastaveni vzhledu sranky
  With .PageSetup
   .PrintTitleRows = ""
   .PrintTitleColumns = ""
   .PrintArea = ""
   .LeftHeader = ""
   .CenterHeader = ""
   .RightHeader = ""
   .LeftFooter = ""
   .CenterFooter = ""
   .RightFooter = ""
   .LeftMargin = 18
   .RightMargin = 28
   .TopMargin = IIf(Val(Application.Version) = 15, 74, 69)
   .BottomMargin = 71
   .HeaderMargin = 37
   .FooterMargin = 37
   .PrintHeadings = False
   .PrintGridlines = False
   .PrintComments = xlPrintNoComments
   .CenterHorizontally = False
   .CenterVertically = False
   .Orientation = xlPortrait
   .Draft = False
   .PaperSize = xlPaperA4
   .FirstPageNumber = xlAutomatic
   .Order = xlDownThenOver
   .BlackAndWhite = False
   .Zoom = CByte(GetSetting("DS-POV", "TiskZK", "Zoom", 100))
   .PrintErrors = xlPrintErrorsDisplayed
  End With

  If Pocet_radku - c_pocatek_y_data <> .HPageBreaks.Count Then MsgBox "Pozor, je rozd|fffd|l mezi po|fffd|tem smluv a po|fffd|tem str|fffd|nek!" & vbCrLf & "Ov|fffd||fffd|te nastaven|fffd| tisk|fffd|rny a vzhledu p|fffd|ed tiskem.", vbCritical
  Call Aktualizovat_postup
 End With
 WSData.Activate
End Sub
Attribute VB_Name = "M_Export_1_Head"
Option Explicit
'###############
'slouceni dat z importni kosilky a z DS
'###############
Function SlouceniDat() As Boolean
 Dim i As Integer, j As Integer, Kontrola_ds_ik As String, Sloupec As Integer, Radek As Long, Hip_vyroci_pojisteni As Date, Vozidlo_pocatek_pojisteni As Date, Pocet_radku_exp As Long

 Dim Retezec As String, Hodnota As Double, Pocet_dnu_obdobi As Integer, Pocet_dnu_pojisteno As Integer, Sl_uvi_voz As Integer, Sl_bonus As Integer, Obchodni_sleva As Double
 Dim Hranice_1 As Date, Hranice_2 As Date, Hranice_3 As Date, Hranice_4 As Date, Hranice_5 As Date, Hranice_6 As Date, Hranice_7 As Date, Hranice_8 As Date, Hranice_9 As Date, Hranice_10 As Date, Hranice_11 As Date, Hranice_12 As Date

 Call Aktualizovat_proces("P|fffd||fffd|prava dat pro export")
 Set WSData = ThisWorkbook.Worksheets("data")
 Set WSDExp = ThisWorkbook.Worksheets("data-export")
 Set WSSluc = ThisWorkbook.Worksheets("slouceni")
 Set WSSazb = ThisWorkbook.Worksheets("sazebnik")

 Kontrola_ds_ik = KontrolaKompatibilityDat
 If Kontrola_ds_ik <> "ok" Then
  MsgBox (Kontrola_ds_ik)
  SlouceniDat = False
  Exit Function
 End If

 'nakopirovani zahlavi do listu data-export
 WSDExp.Cells.Delete Shift:=xlUp
 WSSluc.Range(Cells(1, 1).Address, Cells(c_pocet_slucovanych_dat, 2).Address).Copy
 WSDExp.Range("A1").PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:=False, Transpose:=True

 Proc = 1 / (c_pocet_slucovanych_dat + 2)
 Call Aktualizovat_postup
 Obchodni_sleva = 1 - (WSData.Cells(c_obchodni_sleva_y, c_obchodni_sleva_x).Value) / 100
 Pocet_radku_exp = Pocet_radku - c_pocatek_y_data + c_pocatek_y_data_export
 'algoritmus na slouceni dat z DS a imporntni kosilky
 For i = 1 To c_pocet_slucovanych_dat Step 1
  Select Case WSSluc.Cells(i, 3).Value
   Case "copy"
    Sloupec = WSSluc.Cells(i, 6).Value
    Select Case WSSluc.Cells(i, 4).Value
     Case "ds"
      WSData.Range(Cells(c_pocatek_y_data, Sloupec).Address, Cells(Pocet_radku, Sloupec).Address).Copy
      WSDExp.Cells(c_pocatek_y_data_export, i).PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
     Case "ik"
      WSIKos.Cells(Cislo_radku_ik, Sloupec).Copy WSDExp.Range(Cells(c_pocatek_y_data_export, i).Address, Cells(Pocet_radku_exp, i).Address)
     Case "nic"
     Case Else
      MsgBox "chyba vytvareni exportu - neznamy list, ze ktereho se ma kopirovat - sloupec:" & i
    End Select
   Case "vypocet"
    Select Case WSSluc.Cells(i, 4).Value
     '----------------
     Case "no name - provize tipare"
      WSDExp.Range(Cells(c_pocatek_y_data_export, i).Address, Cells(Pocet_radku_exp, i).Address).NumberFormat = "@"
      Call VlozitStejnySloupec(Replace(WSIKos.Cells(Cislo_radku_ik, 39).Value, ",", "."), i, Pocet_radku_exp)
     '----------------
     Case "no name - stav vlozeni"
      Call VlozitStejnySloupec("CA", i, Pocet_radku_exp)
     '----------------
     Case "no name - sezonni pojisteni"
      Call VlozitStejnySloupec("N", i, Pocet_radku_exp)
     '----------------
     Case "pojistnik - obchodni jmeno"
      If Len(WSIKos.Cells(Cislo_radku_ik, c_ik_pojistnik_rc_ico).Value) = 8 Then Call VlozitStejnySloupec(Replace(Replace(WSIKos.Cells(Cislo_radku_ik, c_ik_prijmeni_obchodni_jmeno).Value, "'", "."), "&", "&#38;"), i, Pocet_radku_exp)
     '----------------
     Case "pojistnik - prijmeni"
      If Len(WSIKos.Cells(Cislo_radku_ik, c_ik_pojistnik_rc_ico).Value) <> 8 Then Call VlozitStejnySloupec(WSIKos.Cells(Cislo_radku_ik, c_ik_prijmeni_obchodni_jmeno).Value, i, Pocet_radku_exp)
     '----------------
     Case "drzitel - typ"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = IIf(Len(WSData.Cells(j, c_drzitel_rc_ico_x).Value) = 8, "P", "O")
      Next j
     '----------------
     Case "vlastnik - typ"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = IIf(Len(WSData.Cells(j, c_vlastnik_rc_ico_x).Value) = 8, "P", "O")
      Next j
     '----------------
     Case "predmet pojisteni - druh vozidla ciselny kod"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Select Case Mid(WSDExp.Cells(j - c_pocatek_y_data_export, 1).Value, 2, 3)
        Case "O01", "O02", "O52", "O03", "O53", "O04", "O54", "O05": Hodnota = 2
        Case "O06", "O07": Hodnota = 6
        Case "D01", "D02", "D52", "D03", "D53", "D04", "D54", "D05": Hodnota = 3
        Case "M08", "M09", "M10", "M11": Hodnota = 1
        Case "N12", "N13", "N64", "N74": Hodnota = 4
        Case "H15", "H99": Hodnota = 7
        Case "A16", "A17", "A18": Hodnota = 5
        Case "J29": Hodnota = 12
        Case "P19": Hodnota = 9
        Case "P20", "P21": Hodnota = 10
        Case "T22", "T23": Hodnota = 8
        Case "X24", "X25", "X26", "X27", "X28": Hodnota = 11
       End Select
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Hodnota
      Next j
     '----------------
     Case "predmet pojisteni - druh vozidla"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Mid(WSDExp.Cells(j - c_pocatek_y_data_export, 1).Value, 2, 1)
      Next j
     '----------------
     Case "drzitel - prijmeni nazev firmy", "vlastnik - prijmeni nazev firmy", "predmet pojisteni - typ vozidla"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Select Case WSSluc.Cells(i, 4).Value 'nazev polozky, ktera se zpracovava - znacka/typ
        Case "drzitel - prijmeni nazev firmy": Sloupec = c_drzitel_prijmeni_nazev_spolecnosti_x
        Case "vlastnik - prijmeni nazev firmy": Sloupec = c_vlastnik_prijmeni_nazev_spolecnosti_x
        Case "predmet pojisteni - typ vozidla": Sloupec = c_typ_vozidla_x
       End Select
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Replace(WSData.Cells(j, Sloupec).Value, "&", "&#38;")
      Next j
     '----------------
     Case "no name - pocatek pojisteni cas"
      WSDExp.Range(Cells(c_pocatek_y_data_export, i).Address, Cells(Pocet_radku_exp, i).Address).NumberFormat = "@"
      Call VlozitStejnySloupec("00:00", i, Pocet_radku_exp)
     '----------------
     Case "no name - konec pojisteni cas"
      WSDExp.Range(Cells(c_pocatek_y_data_export, i).Address, Cells(Pocet_radku_exp, i).Address).NumberFormat = "@"
      Call VlozitStejnySloupec("23:59", i, Pocet_radku_exp)
     '----------------
     Case "kalkulace - sklo spoluucast volba"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = IIf(WSData.Cells(j, c_celni_sklo_limit_plneni_x).Value <> 0 And WSData.Cells(j, c_celni_sklo_limit_plneni_x).Value <> "", "A", "N")
      Next j
     '----------------
     Case "kalkulace - pomerne pojistne - a/n"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = WSIKos.Cells(Cislo_radku_ik, c_ik_pomerne_pojistne).Value
      Next j
     '----------------
     Case "kalkulace - vyroci hipu"
      If WSIKos.Cells(Cislo_radku_ik, c_ik_pomerne_pojistne).Value = "A" Then
       Hip_vyroci_pojisteni = CDate(WSIKos.Cells(Cislo_radku_ik, c_ik_vyroci_hip).Value)
       For j = c_pocatek_y_data To Pocet_radku Step 1
        Vozidlo_pocatek_pojisteni = CDate(WSData.Cells(j, c_pocatek_pojisteni_x).Value)
        'uprava vyroci pojisteni, kdy se z nej odstrani rok a da se aktualni rok +1
        'u pomerneho - vyroci hipu + 1 (nesmi byt vyroci hipu - pocatek pojisteni >365)
        Hip_vyroci_pojisteni = DateSerial(Year(Vozidlo_pocatek_pojisteni) + 1, Month(Hip_vyroci_pojisteni), Day(Hip_vyroci_pojisteni))
        If DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni) > 365 Then Hip_vyroci_pojisteni = DateAdd("yyyy", -1, Hip_vyroci_pojisteni)
        If DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni) = 0 Then Hip_vyroci_pojisteni = DateAdd("yyyy", 1, Hip_vyroci_pojisteni)
        WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Format(Hip_vyroci_pojisteni, "dd.mm.yyyy")
       Next j
      Else
       'u nepomerneho pojistneho se bere pocatek pojisteni +1
       For j = c_pocatek_y_data To Pocet_radku Step 1
        WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Format(DateAdd("yyyy", 1, CDate(WSData.Cells(j, c_pocatek_pojisteni_x).Value)), "dd.mm.yyyy")
       Next j
      End If
     '----------------
     Case "kalkulace - pomerne pojistne - hodnota"
'      For j = c_pocatek_y_data To Pocet_radku Step 1
'       If WSIKos.Cells(Cislo_radku_ik, c_ik_pomerne_pojistne).Value = "A" Then
'        Hip_vyroci_pojisteni = CDate(WSIKos.Cells(Cislo_radku_ik, c_ik_vyroci_hip).Value)
'        Vozidlo_pocatek_pojisteni = CDate(WSData.Cells(j, c_pocatek_pojisteni_x).Value)
'        'uprava vyroci pojisteni, kdy se z nej odstrani rok a da se aktualni rok +1
'        Hip_vyroci_pojisteni = DateSerial(Year(Vozidlo_pocatek_pojisteni) + 1, Month(Hip_vyroci_pojisteni), Day(Hip_vyroci_pojisteni))
'        If (DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni) > 365) Then Hip_vyroci_pojisteni = DateAdd("yyyy", -1, Hip_vyroci_pojisteni)
'        'vypocet
'        Select Case WSIKos.Cells(Cislo_radku_ik, c_ik_frekvence).Value
'         Case 1
'          Pocet_dnu_obdobi = DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni)
'          Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni)
'
'          Hranice_1 = DateAdd("m", -12, Hip_vyroci_pojisteni)
'          Pocet_dnu_obdobi = DateDiff("d", Hranice_1, Hip_vyroci_pojisteni)
'          Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni)
'
'         Case 2
'          Hranice_1 = DateAdd("m", -6, Hip_vyroci_pojisteni)
'          Hranice_2 = DateAdd("m", -12, Hip_vyroci_pojisteni)
'
'          Select Case Vozidlo_pocatek_pojisteni
'           Case Hranice_1 To Hip_vyroci_pojisteni
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_1, Hip_vyroci_pojisteni)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni)
'           Case Hranice_2 To Hranice_1
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_2, Hranice_1)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_1)
'          End Select
'
'         Case 4
'          Hranice_1 = DateAdd("m", -3, Hip_vyroci_pojisteni)
'          Hranice_2 = DateAdd("m", -6, Hip_vyroci_pojisteni)
'          Hranice_3 = DateAdd("m", -9, Hip_vyroci_pojisteni)
'          Hranice_4 = DateAdd("m", -12, Hip_vyroci_pojisteni)
'
'          Select Case Vozidlo_pocatek_pojisteni
'           Case Hranice_1 To Hip_vyroci_pojisteni
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_1, Hip_vyroci_pojisteni)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni)
'           Case Hranice_2 To Hranice_1
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_2, Hranice_1)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_1)
'           Case Hranice_3 To Hranice_2
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_3, Hranice_2)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_2)
'           Case Hranice_4 To Hranice_3
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_4, Hranice_3)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_3)
'          End Select
'
'         Case 12
'          Hranice_1 = DateAdd("m", -1, Hip_vyroci_pojisteni)
'          Hranice_2 = DateAdd("m", -2, Hip_vyroci_pojisteni)
'          Hranice_3 = DateAdd("m", -3, Hip_vyroci_pojisteni)
'          Hranice_4 = DateAdd("m", -4, Hip_vyroci_pojisteni)
'          Hranice_5 = DateAdd("m", -5, Hip_vyroci_pojisteni)
'          Hranice_6 = DateAdd("m", -6, Hip_vyroci_pojisteni)
'          Hranice_7 = DateAdd("m", -7, Hip_vyroci_pojisteni)
'          Hranice_8 = DateAdd("m", -8, Hip_vyroci_pojisteni)
'          Hranice_9 = DateAdd("m", -9, Hip_vyroci_pojisteni)
'          Hranice_10 = DateAdd("m", -10, Hip_vyroci_pojisteni)
'          Hranice_11 = DateAdd("m", -11, Hip_vyroci_pojisteni)
'          Hranice_12 = DateAdd("m", -12, Hip_vyroci_pojisteni)
'
'          Select Case Vozidlo_pocatek_pojisteni
'           Case Hranice_1 To Hip_vyroci_pojisteni
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_1, Hip_vyroci_pojisteni)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hip_vyroci_pojisteni)
'           Case Hranice_2 To Hranice_1
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_2, Hranice_1)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_1)
'           Case Hranice_3 To Hranice_2
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_3, Hranice_2)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_2)
'           Case Hranice_4 To Hranice_3
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_4, Hranice_3)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_3)
'           Case Hranice_5 To Hranice_4
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_5, Hranice_4)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_4)
'           Case Hranice_6 To Hranice_5
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_6, Hranice_5)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_5)
'           Case Hranice_7 To Hranice_6
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_7, Hranice_6)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_6)
'           Case Hranice_8 To Hranice_7
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_8, Hranice_7)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_7)
'           Case Hranice_9 To Hranice_8
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_9, Hranice_8)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_8)
'           Case Hranice_10 To Hranice_9
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_10, Hranice_9)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_9)
'           Case Hranice_11 To Hranice_10
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_11, Hranice_10)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_10)
'           Case Hranice_12 To Hranice_11
'            Pocet_dnu_obdobi = DateDiff("d", Hranice_12, Hranice_11)
'            Pocet_dnu_pojisteno = DateDiff("d", Vozidlo_pocatek_pojisteni, Hranice_11)
'          End Select
'        End Select
'        WSDExp.Cells(j - c_pocatek_y_data_export, i) = Round2((WSData.Cells(j, c_lhutni_pojistne_po_sleve_x).Value / Pocet_dnu_obdobi) * Pocet_dnu_pojisteno)
'       End If
'      Next j
     '----------------
     Case "no name - individualni dovoz"
     '----------------
     Case "no name - duplikat technickeho prukazu"
     '----------------
     Case "no name - vydani zk"
      Call VlozitStejnySloupec("N", i, Pocet_radku_exp)
     '----------------
     Case "kalkulace - bonus koeficient"
      Sl_bonus = i
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Select Case WSData.Cells(j, c_bonus_poc_mes_x).Value
        Case Is < -60: Hodnota = -150
        Case Is < -48: Hodnota = -110
        Case Is < -36: Hodnota = -80
        Case Is < -24: Hodnota = -50
        Case Is < -12: Hodnota = -30
        Case Is < 0: Hodnota = -10
        Case Is < 12: Hodnota = 0
        Case Is < 24: Hodnota = 5
        Case Is < 36: Hodnota = 10
        Case Is < 48: Hodnota = 15
        Case Is < 60: Hodnota = 20
        Case Is < 72: Hodnota = 25
        Case Is < 84: Hodnota = 30
        Case Is < 96: Hodnota = 35
        Case Is < 108: Hodnota = 40
        Case Is < 120: Hodnota = 45
        Case Is < 1000: Hodnota = 50
       End Select
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Hodnota
      Next j
     '----------------
     Case "kalkulace - pov limit plneni"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = IIf(WSData.Cells(j, c_limit_plneni_x).Value = "SPECI|fffd|L", "SP", "SU")
      Next j
     '----------------
     Case "no name - vydani potvrzeni"
      Call VlozitStejnySloupec("N", i, Pocet_radku_exp)
     '----------------
     Case "kod sazby"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = VypocetKodSazby(j)
      Next j
     '----------------
     Case "kalkulace - kod sazby"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Retezec = WSDExp.Cells(j - c_pocatek_y_data_export, 1).Value
       If Left(Retezec, 1) = "X" Then Retezec = "J" & Mid(Retezec, 2, 5)
       If InStr(1, Retezec, "H99") > 0 Then Retezec = Replace(Retezec, "H99", "H15")
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Retezec
      Next j
     '----------------
     Case "no name - mimotarifni"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Retezec = WSDExp.Cells(j - c_pocatek_y_data_export, 1).Value
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = IIf(Left(Retezec, 1) = "X" Or InStr(1, Retezec, "H99") > 0, "A", "N")
      Next j
     '----------------
     Case "kalkulace - zakladni rocni pojistne sazebnik"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Retezec = WSDExp.Cells(j - c_pocatek_y_data_export, 1).Value
       Retezec = Left(Retezec, 4) & Right(Retezec, 1)
       If Left(Retezec, 1) = "X" Then Retezec = "J" & Mid(Retezec, 2, 4)
       If InStr(1, Retezec, "H99") > 0 Then Retezec = Replace(Retezec, "H99", "H15")
       For Radek = 1 To WSSazb.Range("A1").End(xlDown).Row
        If WSSazb.Cells(Radek, 1).Value = Retezec Then
         WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = WSSazb.Cells(Radek, 2).Value
         Exit For
        End If
       Next Radek
      Next j
     '----------------
     Case "kalkulace - rocni pojistne bez bonusu"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Select Case WSData.Cells(j, c_specialni_sazba_x).Value
        Case "B": Hodnota = 1
        Case "R": Hodnota = 1.5
        Case "S": Hodnota = 0.25
        Case "H": Hodnota = 0.1
        Case "N": Hodnota = 2
       End Select
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Round2(WSData.Cells(j, c_zakladni_rocni_pojistne_x).Value * Hodnota) + WSData.Cells(j, c_celni_sklo_rocni_pojistne_x).Value
      Next j
     '----------------
     Case "kalkulace - koeficient za druh uziti vozidla"
      Sl_uvi_voz = i
      WSDExp.Range(Cells(c_pocatek_y_data_export, i).Address, Cells(Pocet_radku_exp, i).Address).NumberFormat = "@"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Select Case WSData.Cells(j, c_specialni_sazba_x).Value
        Case "B": Retezec = 1
        Case "R": Retezec = 1.5
        Case "S": Retezec = 0.25
        Case "H": Retezec = 0.1
        Case "N": Retezec = 2
       End Select
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Replace(Retezec, ",", ".")
      Next j
     '----------------
     Case "kalkulace - kod bonusu"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Select Case WSData.Cells(j, c_bonus_poc_mes_x).Value
        Case Is < -60: Hodnota = -6
        Case Is < -48: Hodnota = -5
        Case Is < -36: Hodnota = -4
        Case Is < -24: Hodnota = -3
        Case Is < -12: Hodnota = -2
        Case Is < 0: Hodnota = -1
        Case Is < 12: Hodnota = 0
        Case Is < 24: Hodnota = 1
        Case Is < 36: Hodnota = 2
        Case Is < 48: Hodnota = 3
        Case Is < 60: Hodnota = 4
        Case Is < 72: Hodnota = 5
        Case Is < 84: Hodnota = 6
        Case Is < 96: Hodnota = 7
        Case Is < 108: Hodnota = 8
        Case Is < 120: Hodnota = 9
        Case Is < 1000: Hodnota = 10
       End Select
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = Hodnota
      Next j
     '----------------
     Case "kalkulace - uraz limit"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = WSIKos.Cells(Cislo_radku_ik, IIf(WSData.Cells(j, c_limit_plneni_x).Value = "SPECI|fffd|L", c_ik_uraz_limit_special, c_ik_uraz_limit_super)).Value
      Next j
     '----------------
     Case "kalkulace - zdravi limit"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = WSIKos.Cells(Cislo_radku_ik, IIf(WSData.Cells(j, c_limit_plneni_x).Value = "SPECI|fffd|L", c_ik_zdravi_limit_special, c_ik_zdravi_limit_super)).Value
      Next j
     '----------------
     Case "kalkulace - majetek limit"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = WSIKos.Cells(Cislo_radku_ik, IIf(WSData.Cells(j, c_limit_plneni_x).Value = "SPECI|fffd|L", c_ik_majetek_limit_special, c_ik_majetek_limit_super)).Value
      Next j
     '----------------
     Case "kalkulace - min poj"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Retezec = WSDExp.Cells(j - c_pocatek_y_data_export, 1).Value
       Retezec = Left(Retezec, 4) & Right(Retezec, 1) & "M"
       If Mid(Retezec, 2, 1) = "H" Or Mid(Retezec, 2, 3) = "N64" Or Mid(Retezec, 2, 3) = "N74" Then
        If Left(Retezec, 1) = "X" Then Retezec = "J" & Mid(Retezec, 2, 5)
        For Radek = 1 To WSSazb.Range("A1").End(xlDown).Row
         If WSSazb.Cells(Radek, 1).Value = Retezec Then
          WSDExp.Cells(j - c_pocatek_y_data_export, i).Value = WSSazb.Cells(Radek, 2).Value
          Exit For
         End If
        Next Radek
       End If
      Next j
     '----------------
     Case "kalkulace - navyseni"
      For j = c_pocatek_y_data To Pocet_radku Step 1
       Retezec = WSDExp.Cells(j - c_pocatek_y_data_export, 1).Value
       If Mid(Retezec, 2, 1) = "H" Or Mid(Retezec, 2, 3) = "N64" Or Mid(Retezec, 2, 3) = "N74" Then
        With WSDExp
         Hodnota = Replace(.Cells(j - c_pocatek_y_data_export, Sl_uvi_voz).Value, ".", ",")
         Hodnota = WSData.Cells(j, c_rocni_pojistne_po_sleve_x).Value - Round2(Obchodni_sleva * ((1 - .Cells(j - c_pocatek_y_data_export, Sl_bonus).Value / 100) * Round2(WSData.Cells(j, c_zakladni_rocni_pojistne_x).Value * Hodnota) + WSData.Cells(j, c_celni_sklo_rocni_pojistne_x).Value))
         .Cells(j - c_pocatek_y_data_export, i).Value = IIf(Hodnota > 0, Hodnota, "")
        End With
       End If
      Next j
     Case Else
    End Select
  End Select
  Call Aktualizovat_postup
 Next i

'zavreni souboru importni kosilky
 Workbooks(c_soubor_ik).Close

'zaverecna nastaveni ukazatele a format listu data-export
 WSDExp.Cells.EntireColumn.AutoFit
 WSDExp.Activate
 WSDExp.Cells(1, 1).Select
 WSData.Activate
 WSData.Cells(6, 2).Select

 SlouceniDat = True
 Call Aktualizovat_postup
End Function
Attribute VB_Name = "M_Export_2_Body"
Option Explicit
'v listu data-export vyplni dany sloupec stejnou hodnotou
Sub VlozitStejnySloupec(Retezec As String, sour_x As Integer, Radku As Long)
 WSDExp.Range(Cells(c_pocatek_y_data_export, sour_x).Address, Cells(Radku, sour_x).Address).Value = Retezec
End Sub

'overeni, zda se shoduji udaje vyplnene v ds a ik
Function KontrolaKompatibilityDat() As String
 Dim Soubor_ik As Workbook, Text_chyby As String, Kontrola As Boolean
 Dim Cislo_hip_ds As String, Cislo_radku_ds As Long, Navyseni_limitu_Super_A, Navyseni_limitu_Super_N, Navyseni_limitu_Special_A, Navyseni_limitu_Special_N
 Dim hodnota_saz_majetek_limit_special, hodnota_saz_majetek_limit_super, hodnota_saz_zdravi_limit_special, hodnota_saz_zdravi_limit_super, hodnota_saz_uraz_limit_special, hodnota_saz_uraz_limit_super
 Dim hodnota_ik_majetek_limit_special, hodnota_ik_majetek_limit_super, hodnota_ik_zdravi_limit_special, hodnota_ik_zdravi_limit_super, hodnota_ik_uraz_limit_special, hodnota_ik_uraz_limit_super
 Const c_saz_limit As Integer = 16

'nacteni dat z DS
 With WSData
  Cislo_hip_ds = .Cells(c_cislo_hip_y, c_cislo_hip_x)
  Cislo_radku_ds = 6
  Navyseni_limitu_Super_A = False
  Navyseni_limitu_Super_N = False
  Navyseni_limitu_Special_A = False
  Navyseni_limitu_Special_N = False
  Do Until (.Cells(Cislo_radku_ds, c_navyseni_limitu_x) = "")
   If .Cells(Cislo_radku_ds, c_navyseni_limitu_x) = "A" And .Cells(Cislo_radku_ds, c_limit_plneni_x) = "SUPER" Then Navyseni_limitu_Super_A = True
   If .Cells(Cislo_radku_ds, c_navyseni_limitu_x) = "N" And .Cells(Cislo_radku_ds, c_limit_plneni_x) = "SUPER" Then Navyseni_limitu_Super_N = True
   If .Cells(Cislo_radku_ds, c_navyseni_limitu_x) = "A" And .Cells(Cislo_radku_ds, c_limit_plneni_x) = "SPECI|fffd|L" Then Navyseni_limitu_Special_A = True
   If .Cells(Cislo_radku_ds, c_navyseni_limitu_x) = "N" And .Cells(Cislo_radku_ds, c_limit_plneni_x) = "SPECI|fffd|L" Then Navyseni_limitu_Special_N = True
   Cislo_radku_ds = Cislo_radku_ds + 1
  Loop
 End With

'nacteni dat ze sazebniku - standardni limity POV
 With WSSazb
  hodnota_saz_majetek_limit_special = .Cells(c_saz_limit, 7)
  hodnota_saz_majetek_limit_super = .Cells(c_saz_limit, 8)
  hodnota_saz_zdravi_limit_special = .Cells(c_saz_limit, 9)
  hodnota_saz_zdravi_limit_super = .Cells(c_saz_limit, 10)
  hodnota_saz_uraz_limit_special = .Cells(c_saz_limit, 11)
  hodnota_saz_uraz_limit_super = .Cells(c_saz_limit, 12)
 End With

'overeni existence souboru importni kosilky
 If Dir(p_umisteni_kosilky & c_soubor_ik) = "" Then
  'zapnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
  KontrolaKompatibilityDat = "Nelze dokon|fffd|it import dat" & vbLf & vbLf & "-nebyla nalezena importni ko|fffd|ilka"
  Exit Function
 End If

'otevreni importni kosilky
'pro pripad, ze by jiz byla otevrena
 Application.EnableEvents = False
 On Error Resume Next
  Set Soubor_ik = Workbooks.Open(p_umisteni_kosilky & c_soubor_ik)
  Set WSIKos = Soubor_ik.Worksheets("importni kosilka")
 On Error GoTo 0
 Application.EnableEvents = True
 WSData.Activate

'zjisteni cisla radku v importni kosilce, ktery se bude slucovat v exportu
'pred timto krokem se kontrole priradi false a pri nalezeni se prenastavi na true jinak vysledek heldani je false
 With WSIKos
  Kontrola = False
  Cislo_radku_ik = 3 'cislo radku v importni kosilce, ktery odpovida zpracovavanemu HIPu
  Do Until (.Cells(Cislo_radku_ik, 1) = "")
   If Right("000000000" & Trim(.Cells(Cislo_radku_ik, 1).Value), 10) = Cislo_hip_ds Then
    Kontrola = True
    Exit Do
   End If
   Cislo_radku_ik = Cislo_radku_ik + 1
  Loop

  If Not Kontrola Then
  'zavreni souboru importni kosilky
   Soubor_ik.Close
   KontrolaKompatibilityDat = "Nelze dokon|fffd|it import dat" & vbLf & vbLf & "-v importn|fffd| ko|fffd|ilce nebyl nalezen p|fffd||fffd|slu|fffd|n|fffd| HIP z|fffd|znam"
   Exit Function
  End If

'nacteni dat z IK
  hodnota_ik_majetek_limit_special = .Cells(Cislo_radku_ik, c_ik_majetek_limit_special)
  hodnota_ik_majetek_limit_super = .Cells(Cislo_radku_ik, c_ik_majetek_limit_super)
  hodnota_ik_zdravi_limit_special = .Cells(Cislo_radku_ik, c_ik_zdravi_limit_special)
  hodnota_ik_zdravi_limit_super = .Cells(Cislo_radku_ik, c_ik_zdravi_limit_super)
  hodnota_ik_uraz_limit_special = .Cells(Cislo_radku_ik, c_ik_uraz_limit_special)
  hodnota_ik_uraz_limit_super = .Cells(Cislo_radku_ik, c_ik_uraz_limit_super)
 End With

'porovnani dat DS a IK
 If WSData.Cells(c_typ_flotily_y, c_typ_flotily_x) <> WSIKos.Cells(Cislo_radku_ik, 8) Then Text_chyby = "-typ flotily"
 If WSData.Cells(c_obchodni_sleva_y, c_obchodni_sleva_x) <> WSIKos.Cells(Cislo_radku_ik, 40) Then Text_chyby = Text_chyby & IIf(Text_chyby <> "", vbLf, "") & "-sleva/p|fffd|ir|fffd|ka na flotile"
 If WSData.Cells(c_frekvence_placeni_y, c_frekvence_placeni_x) <> WSIKos.Cells(Cislo_radku_ik, c_ik_frekvence) Then Text_chyby = Text_chyby & IIf(Text_chyby <> "", vbLf, "") & "-frekvence placen|fffd|"
 If CStr(WSData.Cells(c_pojistnik_ic_y, c_pojistnik_ic_x)) <> CStr(WSIKos.Cells(Cislo_radku_ik, c_ik_pojistnik_rc_ico)) Then Text_chyby = Text_chyby & IIf(Text_chyby <> "", vbLf, "") & "-pojistn|fffd|k I|fffd|"

 If Navyseni_limitu_Super_A And Navyseni_limitu_Super_N Then MsgBox "Pozor je nav|fffd||fffd|en|fffd| limit|fffd| A i N u SUPER"
 If Navyseni_limitu_Special_A And Navyseni_limitu_Special_N Then MsgBox "Pozor je nav|fffd||fffd|en|fffd| limit|fffd| A i N u SPECI|fffd|L"
 If Navyseni_limitu_Super_N And (hodnota_ik_majetek_limit_super <> hodnota_saz_majetek_limit_super _
                              Or hodnota_ik_zdravi_limit_super <> hodnota_saz_zdravi_limit_super _
                              Or hodnota_ik_uraz_limit_super <> hodnota_saz_uraz_limit_super) Then MsgBox "Pozor, hodnoty limit|fffd| SUPER bez nav|fffd||fffd|en|fffd| neodpov|fffd|daj|fffd| standard|fffd|m"
 If Navyseni_limitu_Special_N And (hodnota_ik_majetek_limit_special <> hodnota_saz_majetek_limit_special _
                                Or hodnota_ik_zdravi_limit_special <> hodnota_saz_zdravi_limit_special _
                                Or hodnota_ik_uraz_limit_special <> hodnota_saz_uraz_limit_special) Then MsgBox "Pozor, hodnoty limit|fffd| SPECI|fffd|L bez nav|fffd||fffd|en|fffd| neodpov|fffd|daj|fffd| standard|fffd|m"
 If Navyseni_limitu_Super_A And Not (hodnota_ik_majetek_limit_super > hodnota_saz_majetek_limit_super _
                                  Or hodnota_ik_zdravi_limit_super > hodnota_saz_zdravi_limit_super _
                                  Or hodnota_ik_uraz_limit_super > hodnota_saz_uraz_limit_super) Then MsgBox "Pozor, hodnoty limit|fffd| Super s nav|fffd||fffd|en|fffd|m nejsou v|fffd|t|fffd||fffd| ne|fffd| standard"
 If Navyseni_limitu_Special_A And Not (hodnota_ik_majetek_limit_special > hodnota_saz_majetek_limit_special _
                                    Or hodnota_ik_zdravi_limit_special > hodnota_saz_zdravi_limit_special _
                                    Or hodnota_ik_uraz_limit_special > hodnota_saz_uraz_limit_special) Then MsgBox "Pozor, hodnoty limit|fffd| SPECI|fffd|L s nav|fffd||fffd|en|fffd|m nejsou v|fffd|t|fffd||fffd| ne|fffd| standard"

 If Text_chyby <> "" Then
  Text_chyby = "Byl nalezen probl|fffd|my s:" & vbLf & vbLf & Text_chyby
  Soubor_ik.Close
 Else
  Text_chyby = "ok"
 End If

 KontrolaKompatibilityDat = Text_chyby
End Function
Attribute VB_Name = "M_FunkceProcedury"
Option Explicit
Sub Zamkni_sktyj_vse()
 Dim aktualni_list As String
 aktualni_list = ActiveSheet.Name

 If c_skryti_listu Then
  Call OdemkniS
  Sheets("formatovani").Visible = False
  Sheets("kontroly").Visible = False
  Sheets("zaloha").Visible = False
  Sheets("znacky").Visible = False
  Sheets("napoveda").Visible = False
  Sheets("slouceni").Visible = False
  Sheets("sazebnik").Visible = False
  Sheets("data").Select
  If Not p_spravce_prihlasen Then
   Sheets("data-export").Visible = False
  End If
 End If
 Call ZamkniS

 Select Case aktualni_list
  Case "N|fffd|pov|fffd|da", "data", "Zm|fffd|ny", "Odhl|fffd|ky"
   Sheets(aktualni_list).Select
  Case Else
   Sheets("N|fffd|pov|fffd|da").Select
 End Select
End Sub

Sub Odemkni_zobraz_vse()
 If c_skryti_listu Then
  Call OdemkniS
  Sheets("data-export").Visible = True
  Sheets("formatovani").Visible = True
  Sheets("kontroly").Visible = True
  Sheets("zaloha").Visible = True
  Sheets("znacky").Visible = True
  Sheets("napoveda").Visible = True
  Sheets("slouceni").Visible = True
  Sheets("sazebnik").Visible = True
  Sheets("data").Select
 End If
 Cells(6, 2).Select
End Sub

Sub OdemkniS()
 ActiveWorkbook.Unprotect c_heslo
End Sub

Sub ZamkniS()
 ActiveWorkbook.Protect Password:=c_heslo, Structure:=True, Windows:=False
End Sub

'###############
'uzito pri kontrole technickych udaju o vozidle - vykon, objem, hmotnost, pocet sedadel ...
'###############
Function JeVIntervalu(Retezec, spodni_hranice, horni_hranice) As Boolean

'kontrola zda neni delka hodnoty delsi nez 6 znaku nebo pokud je hodnota zadana v formatu 1.1E+32
 Dim Hodnota As Long
 If Len(Retezec) > 6 Or UCase(Retezec) <> LCase(Retezec) Then
  JeVIntervalu = False
 Else
  Hodnota = CLng(Retezec)
  If spodni_hranice <= Hodnota And Hodnota <= horni_hranice Then
    JeVIntervalu = True
  Else
    JeVIntervalu = False
  End If
 End If
End Function

Function Skryti_GDPR()

Sheets("data").Activate
Columns("G:G").Select
    Selection.EntireColumn.Hidden = True
    Columns("K:N").Select
    Selection.EntireColumn.Hidden = True
    Columns("O:O").Select
    Selection.EntireColumn.Hidden = True
    Columns("S:V").Select
    Selection.EntireColumn.Hidden = True
    Range("B2").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
Selection.FormulaHidden = True
ActiveSheet.Protect Password:=c_heslo

Sheets("Zm|fffd|ny").Activate
Columns("G:G").Select
    Selection.EntireColumn.Hidden = True
    Columns("K:N").Select
    Selection.EntireColumn.Hidden = True
    Columns("O:O").Select
    Selection.EntireColumn.Hidden = True
    Columns("S:V").Select
    Selection.EntireColumn.Hidden = True

 Range("B4").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
ActiveSheet.Protect Password:=c_heslo



Sheets("Odhl|fffd|ky").Activate
Range("B4").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
ActiveSheet.Protect Password:=c_heslo
Sheets("data").Activate



End Function

Function Odemknuti_GDPR()

Sheets("data").Activate
ActiveSheet.Unprotect Password:=c_heslo
Cells.Select
Selection.EntireColumn.Hidden = False
Range("B2").Select
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Sheets("Zm|fffd|ny").Activate
ActiveSheet.Unprotect Password:=c_heslo
Cells.Select
Selection.EntireColumn.Hidden = False
Range("B4").Select
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Sheets("Odhl|fffd|ky").Activate
ActiveSheet.Unprotect Password:=c_heslo
Cells.Select
Selection.EntireColumn.Hidden = False
Range("B4").Select
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
Sheets("data").Activate



End Function

'###############
'spo|fffd||fffd|t|fffd|, kolik m|fffd| |fffd||fffd|dk|fffd|, respektive, v jak|fffd|m posledn|fffd|m |fffd||fffd|dku je n|fffd|jak|fffd| nepr|fffd|zdn|fffd| bu|fffd|ka
'pokud je nejaka neprazdna bunka za hranici zpracovatelnosti, vrati se hranice zpracovatelnosti, coz zpusobi ignorovani zbytku
'###############
Function RozahListu() As Long
 Dim i As Integer, Radku As Long

 p_preteceni_poctu_smluv = False
 For i = c_pocatek_x_data To c_pocet_sloupcu Step 1
  Radku = Cells(65000, i).End(xlUp).Row
  If Radku > RozahListu Then RozahListu = Radku
 Next i
 If c_hranice_listu <= RozahListu Then
  RozahListu = c_hranice_listu
  p_preteceni_poctu_smluv = True
 End If
End Function

'###############
'vypisuje text chyby pri kontrole do bunky v prvnim sloupci
'###############
Sub ZapisChybyDoBunky(ByVal Text_chyby As String, Adresa As Range, Optional Barva As Byte = 3)
 Dim Bunka As Range
'vypsani textu chyby do bunky v prvnim sloupci - musi se zkontrolovat, jestli tam uz neco je, aby se to neprepsalo
'pozor na odradkovani prvniho radku
 Set Bunka = Cells(Adresa.Row, c_pocatek_x_data - 1)
 If Text_chyby <> "" Then Bunka.Value = IIf(Bunka.Value <> "", Bunka.Value & vbLf, "") & Text_chyby

'obarveni bunky s chybou
 If Barva <> 3 And Bunka.Interior.ColorIndex = 3 Then Barva = 3
 Bunka.Interior.ColorIndex = Barva
 If Barva <> 3 And Adresa.Interior.ColorIndex = 3 Then Barva = 3
 Adresa.Interior.ColorIndex = Barva
End Sub

'###############
'vytvari oramovani tabulky
'###############
'oramovani tabulky
'nakopirovani formatu zahlavi tabulky
'vlozeni sum
Sub Oramovani(ByVal Radku As Long)
'zruseni oramovani
 With Cells
  .Borders(xlDiagonalDown).LineStyle = xlNone
  .Borders(xlDiagonalUp).LineStyle = xlNone
  .Borders(xlEdgeLeft).LineStyle = xlNone
  .Borders(xlEdgeBottom).LineStyle = xlNone
  .Borders(xlEdgeRight).LineStyle = xlNone
  .Borders(xlInsideVertical).LineStyle = xlNone
  .Borders(xlInsideHorizontal).LineStyle = xlNone
 End With

'vytvoreni oramovani tabulky
'pokud je zaznamu mene nez dvacet, tak se oramuje prvnich 20 radku
 If Radku < 20 Then Radku = 20
 With Range(Cells(c_pocatek_y_data, 1), Cells(Radku, c_pocet_sloupcu))
  With .Borders(xlEdgeLeft)
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
  With .Borders(xlEdgeTop)
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
  With .Borders(xlEdgeBottom)
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
  With .Borders(xlEdgeRight)
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
  With .Borders(xlInsideVertical)
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
  With .Borders(xlInsideHorizontal)
   .LineStyle = xlContinuous
   .ColorIndex = xlAutomatic
   .Weight = xlThin
  End With
 End With

'nakopirovani formatu zahlavi tabulky
 Sheets("zaloha").Rows("1:5").Copy
 Sheets("data").Rows("1:5").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
 Application.CutCopyMode = False

 Radku = Radku - 5
'vlozeni vzorce
 Cells(5, c_celni_sklo_rocni_pojistne_x).FormulaR1C1 = "=SUM(R[1]C:R[" & Radku & "]C)"
 Cells(5, c_zakladni_rocni_pojistne_x).FormulaR1C1 = "=SUM(R[1]C:R[" & Radku & "]C)"
 Cells(5, c_rocni_pojistne_s_bonusem_x).FormulaR1C1 = "=SUM(R[1]C:R[" & Radku & "]C)"
 Cells(5, c_rocni_pojistne_pred_slevou_x).FormulaR1C1 = "=SUM(R[1]C:R[" & Radku & "]C)"
 Cells(5, c_lhutni_pojistne_pred_slevou_x).FormulaR1C1 = "=SUM(R[1]C:R[" & Radku & "]C)"
 Cells(5, c_rocni_pojistne_po_sleve_x).FormulaR1C1 = "=SUM(R[1]C:R[" & Radku & "]C)"
 Cells(5, c_lhutni_pojistne_po_sleve_x).FormulaR1C1 = "=SUM(R[1]C:R[" & Radku & "]C)"
End Sub

Sub ObarveniSloupcu(ByVal Radku As Long)
'obarveni sloupcu, ktere se nevyplnuji - sediva barva
 If Radku < 20 Then Radku = 20
 With Range(Cells(c_pocatek_y_data, c_popis_chyby_x).Address & ":" & Cells(Radku, c_popis_chyby_x).Address & "," & _
            Cells(c_pocatek_y_data, c_rocni_pojistne_pred_slevou_x).Address & ":" & Cells(Radku, c_rocni_pojistne_pred_slevou_x).Address & "," & _
            Cells(c_pocatek_y_data, c_lhutni_pojistne_pred_slevou_x).Address & ":" & Cells(Radku, c_lhutni_pojistne_pred_slevou_x).Address & "," & _
            Cells(c_pocatek_y_data, c_rocni_pojistne_po_sleve_x).Address & ":" & Cells(Radku, c_rocni_pojistne_po_sleve_x).Address & "," & _
            Cells(c_pocatek_y_data, c_lhutni_pojistne_po_sleve_x).Address & ":" & Cells(Radku, c_lhutni_pojistne_po_sleve_x).Address & "," & _
            Cells(c_pocatek_y_data, c_rocni_pojistne_s_bonusem_x).Address & ":" & Cells(Radku, c_rocni_pojistne_s_bonusem_x).Address).Interior
  .ColorIndex = 15
  .Pattern = xlSolid
 End With
End Sub

Sub ObarveniSloupce(Sloupec As Integer, ByVal Radku As Long)
 If Radku < 20 Then Radku = 20
 With Range(Cells(c_pocatek_y_data, Sloupec), Cells(Radku, Sloupec)).Interior
  .ColorIndex = 15
  .Pattern = xlSolid
 End With
End Sub

'###############
'odstranuje prazdne radky
'###############
Sub SmazPrazdneRadky()
 Dim Radek As Long, Kontrola As Boolean

 Kontrola = False
 If Cells.SpecialCells(xlLastCell).Row > Pocet_radku Then Rows(Pocet_radku + 1 & ":" & Cells.SpecialCells(xlLastCell).Row).Delete
 For Radek = Pocet_radku To c_pocatek_y_data Step -1
  If Application.WorksheetFunction.CountA(Rows(Radek)) = 0 Then
   Rows(Radek).Delete
   Kontrola = True
  End If
 Next Radek
 If Kontrola Then Pocet_radku = RozahListu
End Sub

Sub VlastnostPisma()
 With Range(Cells(c_pocatek_y_data, c_pocatek_x_data - 1), Cells(Pocet_radku, c_pocet_sloupcu))
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlTop
  With .Font
   .Name = "Arial"
   .FontStyle = "Oby|fffd|ejn|fffd|"
   .Size = 10
   .Strikethrough = False
   .Superscript = False
   .Subscript = False
   .OutlineFont = False
   .Shadow = False
   .Underline = xlUnderlineStyleNone
   .ColorIndex = xlAutomatic
  End With
 End With
End Sub

Function WebSoubor(Udaj As Byte) As String
 Dim Web_soubor As String, fs As Object, Retezec As String, Oddelovac As Long, Cesta As String

'importuje se do ostre
 If p_export_ostra Then
  Cesta = "U:\Datovy_sberac\pomocne\temp\usa8606.lex"
  WebSoubor = "chyba"
  
  If Dir(Cesta) = "" Then Exit Function
  
  Set fs = CreateObject("Scripting.FileSystemObject").OpenTextFile(Cesta, 1, 0)
  Retezec = fs.ReadLine
  fs.Close
  
  Oddelovac = InStr(1, Retezec, "#")
  
  If Oddelovac <> 0 Then
   Select Case Udaj
    Case "1"
     WebSoubor = Mid(Retezec, 1, Oddelovac - 1)
    Case "2"
     WebSoubor = Mid(Retezec, Oddelovac + 1, Len(Retezec))
   End Select
  End If

'importuje se do testu
 Else
  Select Case Udaj
   Case 1
    If p_export_test1 Then
     WebSoubor = "https://sus-test.cpp.cz/cpp/ws/FleetImportDSWS"
    Else
     WebSoubor = "https://sus-test.cpp.cz/cpp2/ws/FleetImportDSWS"
    End If
   Case 2
    MsgBox "Testovac|fffd| SUS/Golem 1"
    WebSoubor = "Kl2FlotilyImp2007_2"
  End Select
 End If
End Function

'###############
'vypocet kodu_sazby
'###############
'kodu sazebniku - 1 znak
'druhu vozidla a cisla radku sazebniku - 2,3,4 znak
'specialni sazby - 5 znak
'pov-limit plneni - 6 znak
Function VypocetKodSazby(sour_r) As String
 Dim Retezec As String, Text_chyby As String, Kontrola As Boolean, objem_hodnota As Variant, vaha_hodnota As Variant, vykon_hodnota As Variant
 Kontrola = True

'kontrola spravnosti vyplneni hodnot ze kterych se odvozuje kod sazby (ktere jsou jiz v datovem sberaci zkontrolovane, ty ktere jeste neprosly kontrolou se resi koncem funkce)
'k|fffd|d vozidla, objem, vaha, typ flotily, specialni sazba, pov-limit plneni, vykon
 If Cells(sour_r, c_kod_vozidla_x).Interior.ColorIndex = 3 Or _
    Cells(sour_r, c_objem_x).Interior.ColorIndex = 3 Or _
    Cells(sour_r, c_hmotnost_x).Interior.ColorIndex = 3 Or _
    Cells(c_typ_flotily_y, c_typ_flotily_x).Interior.ColorIndex = 3 Or _
    Cells(sour_r, c_specialni_sazba_x).Interior.ColorIndex = 3 Or _
    Cells(sour_r, c_limit_plneni_x).Interior.ColorIndex = 3 Or _
    Cells(sour_r, c_vykon_x).Interior.ColorIndex = 3 Then
  VypocetKodSazby = False
  Exit Function
 End If

'objem
 objem_hodnota = Cells(sour_r, c_objem_x)
'vaha
 vaha_hodnota = Cells(sour_r, c_hmotnost_x)
'vykon
 vykon_hodnota = Cells(sour_r, c_vykon_x)
  
 Select Case PrevodKodVozidla(Trim(Cells(sour_r, c_kod_vozidla_x)))
  'osobni auto
  Case "O"
   Select Case objem_hodnota
    Case 0 To 1000: Retezec = "O01"
    Case 1000 To 1250: Retezec = "O02"
    Case 1250 To 1350: Retezec = "O52"
    Case 1350 To 1650: Retezec = "O03"
    Case 1650 To 1850: Retezec = "O53"
    Case 1850 To 2000: Retezec = "O04"
    Case 2000 To 2500: Retezec = "O54"
    Case 2500 To 10000: Retezec = "O05"
    Case Else: Kontrola = False
   End Select
  'obytny automobil
  Case "OB": Retezec = "O06"
  'sanitni automobil
  Case "SAN": Retezec = "O07"
  'uzitkovy automobil
  Case "D"
   Select Case objem_hodnota
    Case 0 To 1000: Retezec = "D01"
    Case 1000 To 1250: Retezec = "D02"
    Case 1250 To 1350: Retezec = "D52"
    Case 1350 To 1650: Retezec = "D03"
    Case 1650 To 1850: Retezec = "D53"
    Case 1850 To 2000: Retezec = "D04"
    Case 2000 To 2500: Retezec = "D54"
    Case 2500 To 10000: Retezec = "D05"
    Case Else: Kontrola = False
   End Select
  'motocykl
  Case "M"
   Select Case objem_hodnota
    Case 1 To 50: Retezec = "M08"
    Case 50 To 350: Retezec = "M09"
    Case 350 To 500: Retezec = "M10"
    Case 500 To 5000: Retezec = "M11"
    Case Else: Kontrola = False
   End Select
  'nakladni automobil
  Case "N"
   Select Case vaha_hodnota
    Case 1 To 3500: Retezec = "N12"
    Case 3500 To 12000: Retezec = "N13"
    Case 12000 To 50000
     If vykon_hodnota < 250 Then
      Retezec = "N64"
     Else
      Retezec = "N74"
     End If
    Case Else: Kontrola = False
   End Select
  'tahac
  Case "H": Retezec = "H15"
  Case "H99": Retezec = "H99"
  'MHD - autobus
  Case "MHD": Retezec = "A16"
  'autobus
  Case "A"
   Select Case vaha_hodnota
    Case 1 To 5000: Retezec = "A17"
    Case 5000 To 40000: Retezec = "A18"
    Case Else: Kontrola = False
   End Select
  'trolejbus
  Case "J": Retezec = "J29"
  'pripojne vozidlo
  Case "P"
   Select Case vaha_hodnota
    Case 1 To 750: Retezec = "P19"
    Case 750 To 40000: Retezec = "P20"
    Case Else: Kontrola = False
   End Select
  'naves
  Case "PT": Retezec = "P21"
  'traktor s SPZ
  Case "TRZ": Retezec = "T22"
  'traktor bez SPZ
  Case "T": Retezec = "T23"
  'pojizdny pracovni stroj s RZ
  Case "XRZ"
   Select Case vaha_hodnota
    Case 1 To 3500: Retezec = "X24"
    Case 3500 To 12000: Retezec = "X25"
    Case 12000 To 50000: Retezec = "X26"
    Case Else: Kontrola = False
   End Select
  'pojizdny pracovni stroj bez RZ
  Case "X": Retezec = "X27"
  'pojizdny pracovni stroj bez RZ
  Case "VOZ": Retezec = "X28"
  'chybny kod vozidla
  Case Else: Kontrola = False
 End Select

'pokud nektera ze vstupnich hodnot je uvedena spatne
 If Not Kontrola Then
  VypocetKodSazby = Kontrola
  Exit Function
 End If

'kod sazebniku
 Select Case p_kod_produktu
  Case "19F": Retezec = "J" & Retezec
  Case "199": Retezec = "I" & Retezec
  Case Else: Retezec = "X" & Retezec
 End Select

'specialni sazba
 Select Case Cells(sour_r, c_specialni_sazba_x)
  Case "B": Retezec = Retezec & " "
  Case "R": Retezec = Retezec & "R"
  Case "S": Retezec = Retezec & "S"
  Case "H": Retezec = Retezec & "H"
  Case "N": Retezec = Retezec & "N"
 End Select

'pov - limit plneni
 Select Case Cells(sour_r, c_limit_plneni_x)
  Case "SUPER": Retezec = Retezec & "N"
  Case "SPECI|fffd|L": Retezec = Retezec & "S"
 End Select

VypocetKodSazby = Retezec
End Function

'###############
'Prevadi retezec na spravny tvar druhu vozidla
'###############
Function PrevodKodVozidla(Retezec) As String
 Select Case UCase(Trim(Retezec))
  Case "OSOBN|fffd| AUTOMOBIL": PrevodKodVozidla = "O"
  Case "SANITN|fffd| AUTOMOBIL": PrevodKodVozidla = "SAN"
  Case "OBYTN|fffd| AUTOMOBIL": PrevodKodVozidla = "OB"
  Case "U|fffd|ITKOV|fffd| AUTOMOBIL": PrevodKodVozidla = "D"
  Case "MOTOCYKL": PrevodKodVozidla = "M"
  Case "N|fffd|KLADN|fffd| AUTOMOBIL": PrevodKodVozidla = "N"
  Case "TAHA|fffd| N|fffd|V|fffd|S|fffd|": PrevodKodVozidla = "H"
  Case "TAHA|fffd| N|fffd|V|fffd|S|fffd| MIMOTARIFN|fffd|": PrevodKodVozidla = "H99"
  Case "MHD": PrevodKodVozidla = "MHD"
  Case "AUTOBUS": PrevodKodVozidla = "A"
  Case "TROLEJBUS": PrevodKodVozidla = "J"
  Case "P|fffd||fffd|V|fffd|S": PrevodKodVozidla = "P"
  Case "N|fffd|V|fffd|S": PrevodKodVozidla = "PT"
  Case "TRAKTOR S RZ": PrevodKodVozidla = "TRZ"
  Case "TRAKTOR BEZ RZ": PrevodKodVozidla = "T"
  Case "PRACOVN|fffd| STROJ S RZ": PrevodKodVozidla = "XRZ"
  Case "PRACOVN|fffd| STROJ BEZ RZ": PrevodKodVozidla = "X"
  Case "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K": PrevodKodVozidla = "VOZ"
  Case Else: PrevodKodVozidla = Retezec
 End Select
End Function
Function Bez_znamenek_velka(Retezec As String) As String
 Dim ASCI As String * 40, US As String * 40, Pozice As Byte, Znak_a As String * 1, Znak_b As String * 1

 ASCI = Chr(196) & Chr(193) & Chr(194) & Chr(195) & Chr(165) & Chr(198) & Chr(199) & Chr(200) & Chr(207) & Chr(208) & Chr(203) & Chr(201) & _
        Chr(204) & Chr(202) & Chr(205) & Chr(206) & Chr(197) & Chr(188) & Chr(163) & Chr(209) & Chr(210) & Chr(214) & Chr(211) & Chr(212) & _
        Chr(213) & Chr(192) & Chr(216) & Chr(140) & Chr(170) & Chr(138) & Chr(141) & Chr(222) & Chr(220) & Chr(218) & Chr(217) & Chr(219) & _
        Chr(221) & Chr(175) & Chr(143) & Chr(142)
 US = "AAAAACCCDDEEEEIILLLNNOOOORRSSSTTUUUUYZZZ"
 For Pozice = 1 To 40
  Znak_a = Mid(ASCI, Pozice, 1)
  Znak_b = Mid(US, Pozice, 1)
  Retezec = Replace(Retezec, Znak_a, Znak_b)
 Next Pozice
 Bez_znamenek_velka = Retezec
End Function
Function Round2(ByVal Cislo As Double, Optional Desetin As Byte = 0) As Double
 Round2 = CDbl(FormatNumber(Cislo, Desetin))
End Function
Sub Aktualizovat_postup(Optional Nulovat As Boolean)
 With F_Postup
  Stav = IIf(Nulovat, 0, Stav + Proc)
  .Ramec_postupu.Caption = Format(Stav, "0%")
  .Popis_postupu.Width = Stav * (.Ramec_postupu.Width - 10)
  .Repaint
 End With
End Sub
Sub Aktualizovat_proces(Text As String)
 With F_Postup
  .Popis_procesu.Caption = Text
  .Repaint
 End With
End Sub
Sub Uprav_storna()
 Dim PRadek As Long, Sloupec As Integer, ARadek As Long, MRadek As Long
 With ThisWorkbook.Worksheets("Odhl|fffd|ky")
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  .Unprotect c_heslo
  PRadek = .Cells.SpecialCells(xlLastCell).Row
  If PRadek = .Cells.Rows.Count And Application.WorksheetFunction.CountA(Rows(PRadek)) > 0 Then
   MRadek = PRadek
  Else
   If PRadek < .Cells.Rows.Count Then PRadek = PRadek + 1
   For Sloupec = 1 To 6
    ARadek = .Cells(PRadek, Sloupec).End(xlUp).Row
    If ARadek > MRadek Then MRadek = ARadek
   Next Sloupec
  End If
  If 7 > MRadek Then MRadek = 7
  MRadek = MRadek + 1
  On Error Resume Next
  .Range(.Cells(8, 8).Address & ":" & .Cells(MRadek, 8).Address).FormulaR1C1 = _
        "=IF(OR(RC[-4]="""",RC[-3]=""""),"""",IF(AND(MATCH(RC[-2],duvody,0)=7,RC[-3]-8<>RC[-4]),""Chybn|fffd| datum z|fffd|niku"",IF(AND(MATCH(RC[-2],duvody,0)=2,RC[-4]>=RC[-3],RC[-4]>=RC[-3]+15),RC[-4],RC[-3])))"
  .Range(.Cells(8, 9).Address & ":" & .Cells(MRadek, 9).Address).FormulaR1C1 = _
        "=IF(OR(RC[-5]="""",RC[-4]=""""),"""",IF(MATCH(RC[-3],duvody,0)>2,RC[-3],IF(AND(RC[-5]>=RC[-4],RC[-5]>=RC[-4]+15),RC[-3],""dohodou"")))"
  With .Range(.Cells(8, 4).Address & ":" & .Cells(MRadek, 4).Address).Validation
   .Delete
   .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="1/1/2000", Formula2:="=TODAY()"
   .IgnoreBlank = True
   .InCellDropdown = True
   .ErrorTitle = "Datum doru|fffd|en|fffd|/nahl|fffd|en|fffd|"
   .ErrorMessage = "Datum neni v rozmez|fffd| 1.1.2000 - " & Date
   .ShowError = True
  End With
  With .Range(.Cells(8, 5).Address & ":" & .Cells(MRadek, 5).Address).Validation
   .Delete
   .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="1/1/2000", Formula2:="=TODAY()+90"
   .IgnoreBlank = True
   .InCellDropdown = True
   .ErrorTitle = "Datum z|fffd|niku"
   .ErrorMessage = "Datum neni v rozmez|fffd| 1.1.2000 - " & Date + 90
   .ShowError = True
  End With
  With .Range(.Cells(8, 6).Address & ":" & .Cells(MRadek, 6).Address).Validation
   .Delete
   .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=duvody"
   .IgnoreBlank = False
   .InCellDropdown = True
  End With
  With .Range("A8:F" & MRadek & ",H8:I" & MRadek).Borders
   .LineStyle = xlContinuous
   .Weight = xlThin
  End With
  For Sloupec = 7 To 10
   With .Range("A8:A" & MRadek & ",B8:C" & MRadek & ",D8:F" & MRadek & ",H8:I" & MRadek).Borders(Sloupec)
    .LineStyle = xlContinuous
    .Weight = xlMedium
   End With
  Next Sloupec
  On Error GoTo 0
  If PRadek > MRadek + 1 Then .Rows(MRadek + 1 & ":" & PRadek).Delete
  .Protect Password:=c_heslo, DrawingObjects:=True, Contents:=True, Scenarios:=True, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
  Application.EnableEvents = True
  Application.ScreenUpdating = True
 End With
End Sub
Attribute VB_Name = "M_Konstanty"
Option Explicit
Public WSData As Worksheet, WSDExp As Worksheet, WSIKos As Worksheet, WSSluc As Worksheet, WSSazb As Worksheet
Public Cislo_radku_ik As Long, Proces As Byte, Min_datsjed As Date, Pocet_radku As Long, Fce As Byte, Proc As Double, Stav As Double
'##parametry DS
'heslo pro prihlaseni v formulari prihlaseni spravce
Public Const c_heslo_spravce As String = "hesloprovoz"
Public Const const_heslo_pecovatel As String = "hesloobchod"
Public Const c_heslo As String = "a456"

'vypisuje se v formulari napovedy v menu
'cislo verze DS
Public Const c_verze_ds_x As Byte = 5
Public Const c_verze_ds_y As Byte = 1
'datum vydani verze DS
Public Const c_datum_vydani_ds_x As Byte = 5
Public Const c_datum_vydani_ds_y As Byte = 2

'data, mezi kterymi musi byt datum sjednani
Public Const c_datum_sjednani_od_x As Byte = 5
Public Const c_datum_sjednani_od_y As Byte = 3
Public Const c_datum_sjednani_do_x As Byte = 5
Public Const c_datum_sjednani_do_y As Byte = 4
Public p_datum_sjednani_od As Date
Public p_datum_sjednani_do As Date

'data, mezi kterymi musi byt datum pocatku
Public Const c_datum_pocatku_od_x As Byte = 5
Public Const c_datum_pocatku_od_y As Byte = 5
Public Const c_datum_pocatku_do_x As Byte = 5
Public Const c_datum_pocatku_do_y As Byte = 6
Public p_datum_pocatku_od As Date
Public p_datum_pocatku_do As Date

'info o verzi - zobrezuje se pri exportu
Public Const c_info_o_verzi_y As Byte = 8
Public Const c_info_o_verzi_x As Byte = 5

'zda se maji aplikovat funkce spravce
Public p_spravce_prihlasen As Boolean
Public public_pecovatel_prihlasen As Boolean

'zda se vyvolava tisk ZK - nekontroluje se zpetne datum
Public p_nizka_kontrola_dat As Boolean

'zda je v DS vyplneno vice smluuv, nez je jeho kapacita
Public p_preteceni_poctu_smluv As Boolean

'pocet tovarnich znacek v listu "znacky"
Public Const c_pocet_tovarnich_znacek As Integer = 1110

'maximalni pocet mesicu kladne rozhodne doby - bonus
Public Const c_rozhodna_doba_max As Byte = 131

'########################
'##parametry listu data
'########################
'celni sklo limit plneni - true znamena, ze zadany limit je v rozmezi 50.000 az 100.000 a po uspesne kontrole se ma zobrazot varovna hlaska
Public p_celni_sklo_limit_plneni_prilozit_povoleni As Boolean

'pocatecni souradnice v listu data - misto odkud se zacinaji vyplnovat smlouvy
Public Const c_pocatek_x_data As Byte = 2
Public Const c_pocatek_y_data As Byte = 6

'posledni radek, ktery se ma zpracovat
Public Const c_hranice_listu As Integer = 1005
'pocet sloupcu v souboru
Public Const c_pocet_sloupcu As Byte = 47

'radek ve kterem jsou vzorce na soucet pojistneho
Public Const c_radek_souctu As Byte = 5

'########################
'##souradnice bunek v listu data
'########################
'##zahlavi tabulky
'pojistnik nazev
Public Const c_pojistnik_nazev_x As Byte = 1
Public Const c_pojistnik_nazev_y As Byte = 2
'celkem vozidel
Public Const c_celkem_vozidel_x As Byte = 2
Public Const c_celkem_vozidel_y As Byte = 5
'pojistnik ic
Public Const c_pojistnik_ic_x As Byte = 2
Public Const c_pojistnik_ic_y As Byte = 2
'cislo HIP
Public Const c_cislo_hip_x As Byte = 3
Public Const c_cislo_hip_y As Byte = 2
'typ_flotily - puvodne bylo zamysleno prime vyplnovani kodu produktu
Public Const c_typ_flotily_x As Byte = 4
Public Const c_typ_flotily_y As Byte = 2
'kod produktu - pro vnitrni potrebu DS - puvodne v DS se mely zadavat kody produktu, ale pak se rozhodlo, ze se budou zadavat typyflotil..
Public p_kod_produktu As String
'sleva
Public Const c_obchodni_sleva_x As Byte = 5
Public Const c_obchodni_sleva_y As Byte = 2
'frekvence placeni
Public Const c_frekvence_placeni_x As Byte = 6
Public Const c_frekvence_placeni_y As Byte = 2

'##smlouva
Public Const c_popis_chyby_x As Byte = 1
Public Const c_cislo_pojistne_smlouvy_x As Byte = 2
Public Const c_kratkodoba_smlouva_x As Byte = 3
Public Const c_datum_sjednani_x As Byte = 4
Public Const c_pocatek_pojisteni_x As Byte = 5
Public Const c_konec_pojisteni_x As Byte = 6

'##drzitel
Public Const c_drzitel_rc_ico_x As Byte = 7
Public Const c_drzitel_titul_x As Byte = 8
Public Const c_drzitel_jmeno_x As Byte = 9
Public Const c_drzitel_prijmeni_nazev_spolecnosti_x As Byte = 10
Public Const c_drzitel_ulice_x As Byte = 11
Public Const c_drzitel_cislo_domu_x As Byte = 12
Public Const c_drzitel_psc_x As Byte = 13
Public Const c_drzitel_obec_x As Byte = 14

'##vlastnik
'rc/ico
Public Const c_vlastnik_rc_ico_x As Byte = 15
Public Const c_vlastnik_titul_x As Byte = 16
Public Const c_vlastnik_jmeno_x As Byte = 17
Public Const c_vlastnik_prijmeni_nazev_spolecnosti_x As Byte = 18

'##predmet pojisteni
Public Const c_registracni_znacka_x As Byte = 23
Public Const c_cislo_velkeho_tp_x As Byte = 24
Public Const c_vin_x As Byte = 25
Public Const c_kod_vozidla_x As Byte = 26
Public Const c_znacka_vozidla_x As Byte = 27
Public Const c_typ_vozidla_x As Byte = 28
Public Const c_vykon_x As Byte = 30
Public Const c_objem_x As Byte = 31
Public Const c_hmotnost_x As Byte = 32
Public Const c_pocet_mist_x As Byte = 33

'##kalkulace
Public Const c_limit_plneni_x As Byte = 36
Public Const c_navyseni_limitu_x As Byte = 37
Public Const c_specialni_sazba_x As Byte = 38
Public Const c_bonus_poc_mes_x As Byte = 39
Public Const c_celni_sklo_limit_plneni_x As Byte = 40
Public Const c_celni_sklo_rocni_pojistne_x As Byte = 41
Public Const c_zakladni_rocni_pojistne_x As Byte = 42
Public Const c_rocni_pojistne_s_bonusem_x As Byte = 43
Public Const c_rocni_pojistne_pred_slevou_x As Byte = 44
Public Const c_lhutni_pojistne_pred_slevou_x As Byte = 45
Public Const c_rocni_pojistne_po_sleve_x As Byte = 46
Public Const c_lhutni_pojistne_po_sleve_x As Byte = 47

'########################
'##parametru exportu do sus
'########################
'pocatecni souradnice v listu data-export - odkud se zacinaji vyskytovat data
Public Const c_pocatek_x_data_export As Byte = 2
Public Const c_pocatek_y_data_export As Byte = 3

'Parametry importu
Public p_export_ostra As Boolean, p_export_test1 As Boolean, p_umisteni_kosilky As String
Public Const c_soubor_ik As String = "POV_importni_kosilka.xls"

'##souradnice v importni kosilce
Public Const c_ik_vyroci_hip As Byte = 16
Public Const c_ik_frekvence As Byte = 18
Public Const c_ik_pomerne_pojistne As Byte = 19
Public Const c_ik_pojistnik_rc_ico As Byte = 23
Public Const c_ik_prijmeni_obchodni_jmeno As Byte = 26
Public Const c_ik_majetek_limit_special As Byte = 41
Public Const c_ik_majetek_limit_super As Byte = 42
Public Const c_ik_zdravi_limit_special As Byte = 43
Public Const c_ik_zdravi_limit_super As Byte = 44
Public Const c_ik_uraz_limit_special As Byte = 45
Public Const c_ik_uraz_limit_super As Byte = 46

Public Const c_pocet_slucovanych_dat As Byte = 107  'pocet zaznamu v listu slouceni (vcetne zahlavi)

Public clientNum As String    'sjednatelske cislo uzivatele
Public clientLogin As String  'prihlasovaci jmeno uzivatele
Public clientPsw As String    'heslo do CS uzivatele
Public clientAutorized As Boolean 'je uzivatel jiz autorizovan

'########################
'##testovani
'########################
Public Const c_skryti_listu As Boolean = True      'zda se skryvaji listy
Public Const c_exportovat_do_sus As Boolean = True 'zda se ma exportovat do SUS
Attribute VB_Name = "M_Kontroly_1_Head"
Option Explicit
Function Kontroly(Optional Hlasit As Boolean = True) As Boolean
 Dim Pocet_dnu As Integer
 Dim i As Integer  'pomocna pro for cyklus - sloupce
 Dim j As Long  'pomocna pro for cyklus - radky

 Dim Bunka As Range 'jedna bunka, jejiz obsah se zpracovava v cyklu
 Dim Prava As Variant

'Nastaveni hlasky progress baru
 Call Aktualizovat_proces("Kontrola dat")
 Kontroly = True

 Sheets("data").Select
 p_nizka_kontrola_dat = IIf(Proces > 1, True, p_spravce_prihlasen)

 Call SmazPrazdneRadky

 Cells(c_celkem_vozidel_y, c_celkem_vozidel_x) = Pocet_radku - c_pocatek_y_data + 1

'smazani logu chyb v prvnim sloupci
 Range(Cells(c_pocatek_y_data, c_pocatek_x_data - 1), Cells(Pocet_radku, c_pocatek_x_data - 1)).ClearContents

'zruseni cerveneho podbarveni bunek v listu
 Cells.Interior.Pattern = xlNone
 Call ObarveniSloupcu(Pocet_radku)
'oramovani tabulky - mimo zahlavi
 Call Oramovani(Pocet_radku)

'kontrola na pocet smluv ke zpracovani
 If p_preteceni_poctu_smluv Or Pocet_radku = c_pocatek_y_data - 1 Then
  If p_preteceni_poctu_smluv Then
   MsgBox ("Chyst|fffd|te se zpracovat v|fffd|t|fffd||fffd| po|fffd|et smluv, ne|fffd| DS podporuje." & vbLf & "Maxim|fffd|ln|fffd| je mo|fffd|n|fffd| zpracovat " & c_hranice_listu - c_pocatek_y_data + 1 & " smluv." & vbLf & vbLf & "Kontrola nebude dokon|fffd|ena.")
  Else
   MsgBox ("Nebyla vypln|fffd|na |fffd||fffd|dn|fffd| smlouva.")
  End If
  Kontroly = False
  Range("B6").Select
  Exit Function
 End If

 With Sheets("sazebnik")
  'data, mezi kterymi musi byt datum sjednani
  p_datum_sjednani_od = .Cells(c_datum_sjednani_od_y, c_datum_sjednani_od_x).Value
  p_datum_sjednani_do = .Cells(c_datum_sjednani_do_y, c_datum_sjednani_do_x).Value

  'data, mezi kterymi musi byt datum sjednani
  p_datum_pocatku_od = .Cells(c_datum_pocatku_od_y, c_datum_pocatku_od_x).Value
  p_datum_pocatku_do = .Cells(c_datum_pocatku_do_y, c_datum_pocatku_do_x).Value
 End With
 Min_datsjed = Date

'pri kontrolach pokud se ma zobrazit varovani sjednateli, tak se nastavi na true
 p_celni_sklo_limit_plneni_prilozit_povoleni = False

'obarveni sloupce s hodnotami zakladni rocni sazba v pripade, ze jej uz. nevyplnuje
 Select Case Cells(c_typ_flotily_y, c_typ_flotily_x)
  Case "KB", "K", "O": Call ObarveniSloupce(c_zakladni_rocni_pojistne_x, Pocet_radku)
 End Select

'kontrola na vyplneni cisla HIP
'konrola na vyplneni typu flotily
'je az po oramovani aby oramovani neobarvilo chybovou bunku
'je to v podmince, protoze kontroly vraci hodnoty true/false a pak by se spatne zobrazovala finalni hlaska uzivateli
 If Not KontrolaPojistnik Then Kontroly = False
 If Not KontrolaRcIcHip Then Kontroly = False
 If Not KontrolaCislaHipu Then Kontroly = False
 If Not KontrolaTypFlotily Then Kontroly = False
 If Not KontrolaObchodniSleva Then Kontroly = False
 If Not KontrolaFrekvencePlaceni Then Kontroly = False

'zpracovava se po jednotlivych sloupcich
 With Sheets("kontroly")
  Prava = .Range(.Cells(5, c_pocatek_x_data - 1).Address, .Cells(.Cells(5, c_pocatek_x_data - 1).End(xlDown).Row, c_pocet_sloupcu).Address)
 End With
 Proc = 1 / (c_pocet_sloupcu - 4)
 Call Aktualizovat_postup
 For i = c_pocatek_x_data To c_pocet_sloupcu - 5 Step 1 'zpracovani sloupcu
  For j = c_pocatek_y_data To Pocet_radku Step 1  'zpracovani radku
   Set Bunka = Cells(j, i)
   Fce = 1

   'cislo smlouvy
   If Prava(Fce, i) = "x" Then If Not KontrolaCislaSmlouvy(Bunka) Then Kontroly = False
   Fce = Fce + 1

    'kontrola vyplneni
    If Prava(Fce, i) <> "" Then If Not KontrolaVyplneni(Bunka, Prava(Fce, i)) Then Kontroly = False
    Fce = Fce + 1

    'kontrola tovarni znacky
    If Prava(Fce, i) = "x" Then If Not KontrolaTovarniZnacka(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola rok vyroby
    If Prava(Fce, i) = "x" Then If Not KontrolaRokVyroby(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola osoba/podnik
    If Prava(Fce, i) <> "" Then If Not KontrolaCisel(Bunka, Prava(Fce, i)) Then Kontroly = False
    Fce = Fce + 1

    'kontrola vin
    If Prava(Fce, i) = "x" Then
     If Not KontrolaVin(Bunka) Then Kontroly = False
     If Not KontrolaVinRzTp(Bunka) Then Kontroly = False
    End If
    Fce = Fce + 1

    'kontrola tp
    If Prava(Fce, i) = "x" Then If Not KontrolaTp(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola spz
    If Prava(Fce, i) = "x" Then If Not KontrolaRz(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola data sjednani
    If Prava(Fce, i) <> "" Then If Not KontrolaDatumSjednani(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola RC/ICO
    If Prava(Fce, i) <> "" Then If Not KontrolaRcIcSml(Bunka, Prava(Fce, i)) Then Kontroly = False
    Fce = Fce + 1

    'kontrola data pocatku pojisteni
    If Prava(Fce, i) = "x" Then If Not KontrolaDatumPocatkuPojisteni(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola unikatnosti cisla smlouvy
    If Prava(Fce, i) <> "" Then If Not KontrolaUnikatnosti(Bunka, Prava(Fce, i)) Then Kontroly = False
    Fce = Fce + 1

    'vypocet pojistneho
    If Prava(Fce, i) <> "" Then If Not VypocetPojistneho(j) Then Kontroly = False
    Fce = Fce + 1

    'kontrola konce pojisteni
    If Prava(Fce, i) <> "" Then If Not KontrolaKonecPojisteni(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola celni sklo limit plneni
    If Prava(Fce, i) <> "" Then If Not KontrolaCelniSkloLimitPlneni(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'kontrola celni sklo rocni pojisteni
    If Prava(Fce, i) <> "" Then If Not KontrolaCelniSkloRocniPojistne(Bunka) Then Kontroly = False
    Fce = Fce + 1

    'bonus
    If Prava(Fce, i) <> "" Then If Not KontrolaBonusMesice(Bunka) Then Kontroly = False
  Next j
  Call Aktualizovat_postup
 Next i

 Worksheets("data").Select

 'nekdy se stavalo, ze se v bunce zobrazovaly #### misto textu, pri nastaveni formatu na obecny to pomohlo
 Range(Cells(c_pocatek_y_data, c_pocatek_x_data - 1), Cells(Pocet_radku, c_pocatek_x_data - 1)).NumberFormat = "General"

 'obarveni zahlavi sloupce zakladni rocni sazba v pripade, ze jej uz. nevyplnuje
 Select Case Cells(c_typ_flotily_y, c_typ_flotily_x)
  Case "KB", "K", "O"
   With Cells(4, c_zakladni_rocni_pojistne_x).Interior
    .ColorIndex = 15
    .Pattern = xlSolid
   End With
 End Select

 Call VlastnostPisma

 'prizpusobeni sirky prvniho sloupce (kvuli zalamovani sloupce jej nejdrive roztahnu vic a pak jej aut. prizpusobim a pak jeste prizpusobim radky)
 Columns("A:A").ColumnWidth = 150
 Columns("A:A").EntireColumn.AutoFit
 Cells.EntireRow.AutoFit
 Range("B6").Select

 'kolik zbyva dnu na odeslani
 If Kontroly Then Pocet_dnu = 29 - DateDiff("d", Min_datsjed, Date)

 Call Aktualizovat_postup

 'zobrazeni zpravy uzivateli o probehle kontrole
 If Kontroly Then
 Odemknuti_GDPR
 Skryti_GDPR
  If Pocet_dnu > 0 Then
   If Hlasit Then MsgBox "Kontrola prob|fffd|hla" & vbLf & vbLf & _
          "-m|fffd||fffd|ete pokra|fffd|ovat" & vbLf & _
          "-po|fffd|et dn|fffd| na odesl|fffd|n|fffd| DS: " & Pocet_dnu & " (" & DateAdd("d", Pocet_dnu, Date) & ")"
  ElseIf Pocet_dnu = 0 Then
   If Hlasit Then MsgBox "Kontrola prob|fffd|hla" & vbLf & vbLf & _
          "-m|fffd||fffd|ete pokra|fffd|ovat" & vbLf & _
          "-DS mus|fffd|te nejpozd|fffd|ji dnes odeslat (" & DateAdd("d", Pocet_dnu, Date) & ")"
  Else
   MsgBox "Kontrola prob|fffd|hla" & vbLf & vbLf & _
          "-m|fffd||fffd|ete pokra|fffd|ovat" & vbLf & _
          "-DS ji|fffd| m|fffd|l b|fffd|t odesl|fffd|n (" & DateAdd("d", Pocet_dnu, Date) & ")"
  End If

  'pripojeni potvrzeni k obchodni sleve vyssi nez 50%
  If Cells(c_obchodni_sleva_y, c_obchodni_sleva_x) > 51 And Cells(c_obchodni_sleva_y, c_obchodni_sleva_x) < 76 Then
   MsgBox "!! POZOR !!   - obchodn|fffd| sleva je vy|fffd||fffd||fffd| ne|fffd| 50%." & vbLf & _
          "Pokud p|fffd|izn|fffd|te obchodn|fffd| slevu vy|fffd||fffd||fffd| ne|fffd| 50%, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP."
  End If
  If p_celni_sklo_limit_plneni_prilozit_povoleni Then
   MsgBox "!! POZOR !!   - limit pln|fffd|n|fffd| |fffd|eln|fffd|ho skla je vy|fffd||fffd||fffd| ne|fffd| 50.000,- K|fffd|." & vbLf & _
          "Pokud p|fffd|izn|fffd|te |fffd|eln|fffd| sklo vy|fffd||fffd||fffd| ne|fffd| 50.000,- K|fffd|, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP."
  End If
 Else
  MsgBox "Kontrola prob|fffd|hla" & vbLf & vbLf & _
         "-n|fffd|kter|fffd| data nebyla vypln|fffd|na spr|fffd|vn|fffd|" & vbLf & "-nelze ur|fffd|it kolik dn|fffd| zb|fffd|v|fffd| pro odesl|fffd|n|fffd| DS"
 End If
End Function
Attribute VB_Name = "M_Kontroly_2_Body"
Option Explicit
'######################
'######################
'  UDAJE FLOTILY
'######################
'######################

'###############
'kontrola zda je vyplnen pojistnik
'###############
Function KontrolaPojistnik() As Boolean

 If UCase(Trim(Cells(c_pojistnik_nazev_y, c_pojistnik_nazev_x))) <> "" Then
  KontrolaPojistnik = True
  Cells(c_pojistnik_nazev_y - 1, c_pojistnik_nazev_x) = "POJISTN|fffd|K" & vbLf & "-n|fffd|zev"
 Else
  KontrolaPojistnik = False
  Cells(c_pojistnik_nazev_y - 1, c_pojistnik_nazev_x) = "POJISTN|fffd|K" & vbLf & "-n|fffd|zev - nen|fffd| vypln|fffd|n"
  Range(Cells(c_pojistnik_nazev_y - 1, c_pojistnik_nazev_x), Cells(c_pojistnik_nazev_y, c_pojistnik_nazev_x)).Interior.ColorIndex = 3
 End If

End Function

'###############
'kontrola zda je vyplnena spravne FREKVENCE PLACENI
'###############
Function KontrolaFrekvencePlaceni() As Boolean

 Select Case UCase(Trim(Cells(c_frekvence_placeni_y, c_frekvence_placeni_x)))
  Case "1", "2", "4", "12"
   KontrolaFrekvencePlaceni = True
   Cells(c_frekvence_placeni_y - 1, c_frekvence_placeni_x) = "FREKVENCE" & vbLf & "PLACEN|fffd|"
  Case Else
   KontrolaFrekvencePlaceni = False
   Cells(c_frekvence_placeni_y - 1, c_frekvence_placeni_x) = "FREKVENCE PLACEN|fffd|" & vbLf & "- tato hodnota nen|fffd| p|fffd||fffd|pustn|fffd|"
   Range(Cells(c_frekvence_placeni_y - 1, c_frekvence_placeni_x), Cells(c_frekvence_placeni_y, c_frekvence_placeni_x)).Interior.ColorIndex = 3
 End Select

End Function

'###############
'kontrola zda je vyplnen spravne kod produktu
'###############
Function KontrolaTypFlotily() As Boolean
 KontrolaTypFlotily = True

 Select Case UCase(Trim(Cells(c_typ_flotily_y, c_typ_flotily_x)))
  Case "K", "KOMER|fffd|N|fffd|", "KOMERCNI": p_kod_produktu = "19F"
  Case "KB", "KLASICK|fffd| BONUSOV|fffd|", "KLASICKA BONUSOVA": p_kod_produktu = "199"
  Case Else: p_kod_produktu = "": KontrolaTypFlotily = False
 End Select

 If KontrolaTypFlotily Then
  Cells(c_typ_flotily_y - 1, c_typ_flotily_x) = "TYP FLOTILY" & vbLf & "-POV"
 Else
  Cells(c_typ_flotily_y - 1, c_typ_flotily_x) = "TYP FLOTILY POV -nen|fffd| platn|fffd|"
  Range(Cells(c_typ_flotily_y - 1, c_typ_flotily_x), Cells(c_typ_flotily_y, c_typ_flotily_x)).Interior.ColorIndex = 3
 End If

End Function

'###############
'kontrola zda je vyplnena spravne sleva
'###############
Function KontrolaObchodniSleva() As Boolean
 Dim Retezec As String, Text_chyby As String

 Retezec = Trim(Cells(c_obchodni_sleva_y, c_obchodni_sleva_x))
 KontrolaObchodniSleva = True

 'pokud je spravne vyplneny typ flotily
 If Cells(c_typ_flotily_y, c_typ_flotily_x).Interior.ColorIndex <> 3 Then
  Select Case p_kod_produktu
   Case "199", "19F", "18L", "16N"
    If IsNumeric(Retezec) Then
     If Round(CSng(Retezec)) <> CSng(Retezec) Then
      Text_chyby = "mus|fffd| b|fffd|t zadan|fffd| cel|fffd|m |fffd||fffd|slem"
     ElseIf Retezec < -80 Or 90 < Retezec Then
      Text_chyby = "tato hodnota nen|fffd| p|fffd||fffd|pustn|fffd|"
     End If
    Else
     Text_chyby = "tato hodnota nen|fffd| p|fffd||fffd|pustn|fffd|"
    End If
  End Select
'pokud je spatne vyplneny kod produktu
 Else
  Text_chyby = "nelze zkontrolovat (nen|fffd| spr|fffd|vn|fffd| vypln|fffd|n typ flotily)"
 End If

 If Text_chyby = "" Then
  Cells(c_obchodni_sleva_y - 1, c_obchodni_sleva_x) = "SLEVA/P|fffd|I|fffd||fffd||fffd|KA" & vbLf & "NA FLOTILE"
 Else
  Cells(c_obchodni_sleva_y - 1, c_obchodni_sleva_x) = "SLEVA/P|fffd|I|fffd||fffd||fffd|KA NA FLOTILE" & vbLf & " - " & Text_chyby
  Range(Cells(c_obchodni_sleva_y - 1, c_obchodni_sleva_x), Cells(c_obchodni_sleva_y, c_obchodni_sleva_x)).Interior.Color = 255
  KontrolaObchodniSleva = False
 End If

End Function

'###############
'kontrola cisla HIPu
'###############
Function KontrolaCislaHipu() As Boolean
 Dim Navrat As String, Retezec As String, Bunka As Range
 
 Set Bunka = Cells(c_cislo_hip_y, c_cislo_hip_x)
 Retezec = Bunka.Value
 Navrat = KontrolaCisla(Retezec)
 KontrolaCislaHipu = True

 If Len(Navrat) = 10 Then
  If Navrat <> Retezec Then
   Bunka.Value = Navrat
  End If
 End If
 Bunka.Offset(-1, 0).Value = "HIP" & IIf(Len(Navrat) = 10, "", vbLf & "-" & Navrat)
 If Len(Navrat) <> 10 Then
  Range(Bunka.Offset(-1, 0).Address, Bunka.Address).Interior.ColorIndex = 3
  KontrolaCislaHipu = False
 End If

End Function

'###############
'kontrola cisla smlouvy
'###############
Function KontrolaCislaSmlouvy(Bunka As Range) As Boolean
 Dim Navrat As String, Retezec As String
 KontrolaCislaSmlouvy = True

 Navrat = KontrolaCisla(Bunka.Value)
 If Len(Navrat) = 10 Then
  If Navrat <> Retezec Then
   Bunka.Value = Navrat
  End If
 Else
  Call ZapisChybyDoBunky(" -Smlouva - |fffd||fffd|slo smlouvy - " & Navrat, Bunka)
  KontrolaCislaSmlouvy = False
 End If

End Function

'###############
'kontrola spr|fffd|vnosti cisla
'###############
'vypocitani souctu 1.-9. cislici vynasobit hodnotou jejiho poradi :1. cislice * 1. pozice + 2. cislice * 2. pozice + .. + 9. cislice * 9. pozice
'vypocitani zbytku po deleni souctu cislem 11
'pokud neni posledni cislice zbytku po deleni schodna s posledni cislici cisla tak vratit chybu
Private Function KontrolaCisla(ByVal Retezec As String) As String
 Dim Soucet As Integer, Zbytek As Integer, Pozice As Byte
 Retezec = Right("000000000" & Trim(Retezec), 10)

 If Len(Retezec) = 10 And IsNumeric(Retezec) And Retezec <> "0000000000" Then
  For Pozice = 1 To 9
   Soucet = Soucet + (Mid(Retezec, Pozice, 1) * Pozice)
  Next Pozice
  Soucet = Soucet Mod 11

  'porovnani posledni cislice - pro pripad, ze by zbytek vysel 10, tak beru zprava posledni znak/cifru
  If Right(CStr(Soucet), 1) = Right(Retezec, 1) Then
   If Mid(Retezec, 1, 2) = "38" Then Retezec = "nem|fffd||fffd|e za|fffd||fffd|nat 38"
   KontrolaCisla = Retezec
   Exit Function
  End If
 End If
 KontrolaCisla = "|fffd|patn|fffd| form|fffd|t"

End Function

'######################
'######################
'  SMLOUVA
'######################
'######################

'###############
'kontrola data sjednani
'###############
Function KontrolaDatumSjednani(Bunka As Range) As Boolean
 Dim Text_chyby As String, Datum_sjednani As Date, Retezec As String

 Retezec = Bunka.Value
 KontrolaDatumSjednani = True

 If Not IsDate(Retezec) Then
  Text_chyby = "nen|fffd| datum"
 Else
  Datum_sjednani = CDate(Retezec)
  If p_datum_sjednani_od > Datum_sjednani Or Datum_sjednani > p_datum_sjednani_do Then
   Text_chyby = "je mimo pracovn|fffd| obdob|fffd| DS"
  ElseIf Datum_sjednani > Date Then
   Text_chyby = "je v budoucnosti"
  ElseIf DateAdd("d", -15, Date) > Datum_sjednani Then
   If p_nizka_kontrola_dat Then
    Call ZapisChybyDoBunky(" -Smlouva - datum sjedn|fffd|n|fffd| - nesm|fffd| b|fffd|t star|fffd||fffd| 15 dn|fffd|", Bunka, 40)
   Else
    Text_chyby = "nesm|fffd| b|fffd|t star|fffd||fffd| 15 dn|fffd|"
   End If
  End If
 End If

 If Text_chyby = "" Then
  If Datum_sjednani < Min_datsjed Then Min_datsjed = Datum_sjednani
 Else
  Call ZapisChybyDoBunky(" -Smlouva - datum sjedn|fffd|n|fffd| - " & Text_chyby, Bunka)
  KontrolaDatumSjednani = False
 End If
End Function

'###############
'kontrola data pocatku pojisteni
'###############
Function KontrolaDatumPocatkuPojisteni(Bunka As Range) As Boolean
 Dim Text_chyby As String, Datum_pocatku As Date, Datum_sjednani As Date, Retezec As String

 Retezec = Bunka.Value
 KontrolaDatumPocatkuPojisteni = True

 If Not IsDate(Retezec) Then
  Text_chyby = "nen|fffd| datum"
 Else
  Datum_pocatku = CDate(Retezec)
  If p_datum_pocatku_od > Datum_pocatku Or Datum_pocatku > p_datum_pocatku_do Then
   Text_chyby = "je mimo pracovn|fffd| obdob|fffd| DS"
  ElseIf Cells(Bunka.Row, c_datum_sjednani_x).Interior.ColorIndex = 3 Then
   Text_chyby = "nelze zkontrolovat"
  Else
   Datum_sjednani = CDate(Cells(Bunka.Row, c_datum_sjednani_x))
   If Datum_sjednani > Datum_pocatku Then
    Text_chyby = "p|fffd|edch|fffd|z|fffd| datu sjedn|fffd|n|fffd|"
   ElseIf Datum_pocatku > DateAdd("d", 60, Datum_sjednani) Then
    Text_chyby = "nen|fffd| v rozsahu + 60 dn|fffd| od sjedn|fffd|n|fffd|"
   End If
  End If
 End If

 If Text_chyby <> "" Then
  Call ZapisChybyDoBunky(" -Smlouva - datum po|fffd||fffd|tku poj. - " & Text_chyby, Bunka)
  KontrolaDatumPocatkuPojisteni = False
 End If
End Function

'###############
'kontrola konec pojisteni
'###############
Function KontrolaKonecPojisteni(Bunka As Range) As Boolean
 Dim Text_chyby As String, Datum_konce As Date, Datum_pocatku As Date, Retezec As String

 Retezec = Trim(Bunka.Value)
 KontrolaKonecPojisteni = True

 If Trim(Retezec) = "" Then
  Exit Function
 ElseIf Not IsDate(Retezec) Then
  Text_chyby = "nen|fffd| datum"
 Else
  Datum_konce = CDate(Retezec)
  If Cells(Bunka.Row, c_pocatek_pojisteni_x).Interior.ColorIndex = 3 Then
   Text_chyby = "nelze zkontrolovat"
  Else
   Datum_pocatku = CDate(Cells(Bunka.Row, c_pocatek_pojisteni_x))
   If Datum_pocatku > Datum_konce Then
    Text_chyby = "p|fffd|edch|fffd|z|fffd| datu po|fffd||fffd|tku"
   ElseIf DateAdd("yyyy", 1, DateAdd("d", -1, Datum_pocatku)) > Datum_konce Then
    Text_chyby = "smlouva je krat|fffd||fffd| ne|fffd| 1 rok"
   End If
  End If
 End If

 If Text_chyby <> "" Then
  Call ZapisChybyDoBunky(" -Smlouva - konec poji|fffd|t|fffd|n|fffd| - " & Text_chyby, Bunka)
  KontrolaKonecPojisteni = False
 End If
End Function

'######################
'######################
'  DRZITEL/PROVOZOVATEL - VLASTNIK
'######################
'######################

'###############
'kontrola RC/IC HIP
'###############
Function KontrolaRcIcHip() As Boolean
 Dim Bunka As Range, Retezec As String

 Set Bunka = Cells(c_pojistnik_ic_y, c_pojistnik_ic_x)
 Retezec = Bunka.Value
 Retezec = IIf(IsNumeric(Retezec), Trim(Retezec), "")
 KontrolaRcIcHip = True
 
 Select Case Len(Retezec)
  Case 9, 10: Retezec = KontrolaRc(Retezec)
  Case 8: Retezec = KontrolaIc(Retezec)
  Case Else: Retezec = "R|fffd|/I|fffd| - nelze zkontrolovat"
 End Select

 Bunka.Offset(-1, 0).Value = "POJISTN|fffd|K" & vbLf & "-" & Retezec
 If Len(Retezec) <> 2 Then
  Range(Bunka.Offset(-1, 0).Address, Bunka.Address).Interior.ColorIndex = 3
  KontrolaRcIcHip = False
 End If

End Function

'###############
'kontrola RC/IC SML
'###############
Function KontrolaRcIcSml(Bunka As Range, Typ) As Boolean
 Dim Retezec As String

 Retezec = Trim(Bunka.Value)
 Retezec = IIf(IsNumeric(Retezec), Retezec, "")
 KontrolaRcIcSml = True

 Select Case Len(Retezec)
  Case 9, 10: Retezec = KontrolaRc(Retezec)
  Case 8: Retezec = KontrolaIc(Retezec)
  Case Else: Retezec = "R|fffd|/I|fffd| - nelze zkontrolovat"
 End Select

 If Len(Retezec) <> 2 Then
  Call ZapisChybyDoBunky(" -" & Typ & " - " & Retezec, Bunka)
  KontrolaRcIcSml = False
 End If

End Function

'###############
'kontrola RC
'###############
Private Function KontrolaRc(Retezec As String) As String
 Dim Rok As Integer, Mesic As Byte, Den As Byte, Kontrola As Boolean
 KontrolaRc = "R|fffd|"
 Kontrola = True

'rozdeleni RC na jednotlive hodnoty
 Rok = Mid(Retezec, 1, 2)
 Mesic = Mid(Retezec, 3, 2)
 Den = Mid(Retezec, 5, 2)
'pripocitani k roku 1900 nebo 2000
 If Len(Retezec) = 9 Then
  Rok = Rok + 1900
 ElseIf 0 <= Rok And Rok <= Year(Now) - 2000 Then
  Rok = Rok + 2000
 Else
  Rok = Rok + 1900
 End If

 If Len(Retezec) = 9 Then
'rc je dlouhe 9 cislic ale rok je po roce 1950
  If Rok > 1953 Then Kontrola = False
 ElseIf Mid(Retezec, 7, 4) <> "9999" And Mid(Retezec, 7, 4) <> "1111" Then
  If Right(Left(Retezec, 9) Mod 11, 1) = Right(Retezec, 1) Then Exit Function
 End If
 'zda je pripocitana spravna hodnota, 0 a 20 muz, 50 a 70 zena
 If Rok > 2003 Then
  Select Case Mesic
   Case 21 To 32, 71 To 82: Mesic = Mesic - 20
  End Select
 End If
 Select Case Mesic
  Case 51 To 62: Mesic = Mesic - 50
 End Select

 If Kontrola And Rok <= Year(Now) And Mesic >= 1 And Mesic <= 12 Then
  If Den >= Day(DateSerial(Rok, Mesic, 1)) And Den <= Day(DateSerial(Rok, Mesic + 1, 0)) Then Exit Function
 End If
 KontrolaRc = "R|fffd| - |fffd|patn|fffd| form|fffd|t"

End Function

'###############
'Kontrola IC
'###############
'IC je 8 mistne
Private Function KontrolaIc(Retezec As String) As String
 Dim Pozice As Byte, Celkem As Integer
 KontrolaIc = "I|fffd|"

 For Pozice = 1 To 7
  Celkem = Celkem + (Mid(Retezec, Pozice, 1) * (9 - Pozice))
 Next Pozice
 Pozice = Right(Retezec, 1)
 Celkem = Celkem Mod 11
 Select Case Celkem
  Case 0, 10: If Pozice = 1 Then Exit Function
  Case 1: If Pozice = 0 Then Exit Function
  Case Else: If Pozice = 11 - Celkem Then Exit Function
 End Select
 KontrolaIc = "I|fffd| - |fffd|patn|fffd| form|fffd|t"
 
End Function

'######################
'######################
'  PREDMET POJISTENI
'######################
'######################

'###############
'kontrola vyplneni - VIN/RZ/TP
'###############
'a) minimalne musi byt vyplnen VIN
'b) minimalne musi byt vyplnena RZ a TP
Function KontrolaVinRzTp(Bunka As Range) As Boolean
 Dim Bunka_vin As Range, Bunka_rz As Range, Bunka_tp As Range

 KontrolaVinRzTp = True
 Set Bunka_vin = Cells(Bunka.Row, c_vin_x)
 Set Bunka_rz = Cells(Bunka.Row, c_registracni_znacka_x)
 Set Bunka_tp = Cells(Bunka.Row, c_cislo_velkeho_tp_x)

 If Len(Bunka_vin.Value) > 0 Or (Len(Bunka_rz.Value) > 0 And Len(Bunka_tp.Value) > 0) Then
  If Bunka_rz.Value = Bunka_vin.Value Then
   KontrolaVinRzTp = False
   Bunka_rz.Interior.ColorIndex = 3
   Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - shoduje se RZ a VIN", Bunka)
  End If
 Else
  KontrolaVinRzTp = False
  Bunka_rz.Interior.ColorIndex = 3
  Bunka_tp.Interior.ColorIndex = 3
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - je nutn|fffd| vyplnit minim|fffd|ln|fffd| VIN nebo RZ s TP", Bunka)
 End If
End Function

'###############
'kontrola RZ
'###############
Function KontrolaRz(Bunka As Range) As Boolean
 Dim i As Byte, nalezeno_jine As Byte, znak, Text_chyby As String, Retezec As String

 Retezec = UCase(Trim(Bunka.Value))
 KontrolaRz = True

 If Retezec = "" Then
  Exit Function
 ElseIf Len(Retezec) > 12 Then
  Text_chyby = "je del|fffd||fffd| ne|fffd| 12 znak|fffd|"
 ElseIf "NENI" = Retezec Then
  Text_chyby = "nepovolen|fffd| obsah"
 Else
  nalezeno_jine = 0

  For i = 1 To Len(Retezec)
   znak = Mid(Retezec, i, 1)
   If IsNumeric(znak) Or Asc(znak) >= Asc("A") And Asc(znak) <= Asc("Z") Then
   Else
    nalezeno_jine = nalezeno_jine + 1
   End If
  Next i

  If nalezeno_jine > 0 Then Text_chyby = "obsahuje nepovolen|fffd| znaky"
 End If

 If Text_chyby <> "" Then
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - RZ - " & Text_chyby, Bunka)
  KontrolaRz = False
 End If
End Function

'###############
'kontrola TP
'###############
'##AAXXxxXX : A = pismeno, X = cislice
Function KontrolaTp(Bunka As Range) As Boolean
 Dim Cislo As String, Text As String, i As Byte, Text_chyby As String, Retezec As String

 Retezec = UCase(Trim(Bunka.Value))
 KontrolaTp = True

 If Retezec = "" Then
  Exit Function
 ElseIf Len(Retezec) <> 8 Then
  Text_chyby = "nem|fffd| d|fffd|lku 8 znak|fffd|"
  KontrolaTp = False
 Else
  Text = Mid(Retezec, 1, 2)
  Cislo = Mid(Retezec, 3)

  For i = 1 To Len(Text) Step 1  'zpracovani textove casti TP
   Select Case Mid(Text, i, 1)
    Case "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
    Case Else: KontrolaTp = False
   End Select
  Next i

  For i = 1 To Len(Cislo) Step 1  'zpracovani ciselne casti TP
   Select Case Mid(Cislo, i, 1)
    Case "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"
    Case Else: KontrolaTp = False
   End Select
  Next i
  If Not KontrolaTp Then Text_chyby = "neobsahuje povolen|fffd| znaky"
 End If

 If Not KontrolaTp Then Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - TP - " & Text_chyby, Bunka)
End Function

'###############
'kontrola VIN
'###############
Function KontrolaVin(Bunka As Range) As Boolean
 Dim chyba As String, i As Byte, Text_chyby As String, Retezec As String

 Retezec = UCase(Trim(Bunka.Value))
 KontrolaVin = True

 If Retezec = "" Then
  Exit Function
 ElseIf Len(Retezec) > 17 Then
  Text_chyby = "je del|fffd||fffd| ne|fffd| 17 znak|fffd|"
 Else
  For i = 1 To Len(Retezec) Step 1  'zpracovani znaku
   Select Case Mid(Retezec, i, 1)
    Case "A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"
    Case Else: chyba = chyba & Mid(Retezec, i, 1)
   End Select
  Next i
  If chyba <> "" Then Text_chyby = "obsahuje nep|fffd||fffd|pustn|fffd| hodnoty (" & chyba & ")"
 End If

 If Text_chyby <> "" Then
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - VIN - " & Text_chyby, Bunka)
  KontrolaVin = False
 End If
End Function

'###############
'kontrola cislel - Objem / V|fffd|kon / Hmotnost / Po|fffd|et sedadel
'###############
Function KontrolaCisel(Bunka As Range, Typ) As Boolean
 Dim Text_chyby As String, Kod_vozidla As String, Retezec As String

 Retezec = Bunka.Value
 KontrolaCisel = False

 'zda je hodnota cislo
 If Not IsNumeric(Retezec) Or CStr(Round2(Retezec)) <> CStr(Retezec) Then
  Text_chyby = "nen|fffd| vypl|fffd|no cel|fffd| |fffd||fffd|slo"
'zda je hodnota v intervalu
 ElseIf Cells(Bunka.Row, c_kod_vozidla_x).Interior.ColorIndex = 3 Then
  Text_chyby = "chyba - neznam|fffd| druh vozidla"
 Else
  Kod_vozidla = PrevodKodVozidla(Cells(Bunka.Row, c_kod_vozidla_x))
  Text_chyby = "zad|fffd|no mimo p|fffd||fffd|pustn|fffd| rozmez|fffd|"
  Select Case Typ
   Case "objem"
    Select Case Kod_vozidla
     Case "O": KontrolaCisel = JeVIntervalu(Retezec, 0, 10000)
     Case "SAN": KontrolaCisel = JeVIntervalu(Retezec, 1, 10000)
     Case "OB": KontrolaCisel = JeVIntervalu(Retezec, 1, 10000)
     Case "D": KontrolaCisel = JeVIntervalu(Retezec, 0, 10000)
     Case "M": KontrolaCisel = JeVIntervalu(Retezec, 1, 2000)
     Case "N": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "H": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "H99": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "MHD": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "A": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "J": KontrolaCisel = JeVIntervalu(Retezec, 0, 0)
     Case "P": KontrolaCisel = JeVIntervalu(Retezec, 0, 0)
     Case "PT": KontrolaCisel = JeVIntervalu(Retezec, 0, 0)
     Case "TRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "T": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "XRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "X": KontrolaCisel = JeVIntervalu(Retezec, 1, 20000)
     Case "VOZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 10000)
     Case Else: Text_chyby = "chyba - neznam|fffd| druh vozidla"
    End Select
   Case "v|fffd|kon"
    Select Case Kod_vozidla
     Case "O": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "SAN": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "OB": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "D": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "M": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "N": KontrolaCisel = JeVIntervalu(Retezec, 1, 1000)
     Case "H": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "H99": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "MHD": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "A": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "J": KontrolaCisel = JeVIntervalu(Retezec, 0, 500)
     Case "P": KontrolaCisel = JeVIntervalu(Retezec, 0, 0)
     Case "PT": KontrolaCisel = JeVIntervalu(Retezec, 0, 0)
     Case "TRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "T": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "XRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "X": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case "VOZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 500)
     Case Else: Text_chyby = "chyba - neznam|fffd| druh vozidla"
    End Select
   Case "hmotnost"
    Select Case Kod_vozidla
     Case "O": KontrolaCisel = JeVIntervalu(Retezec, 1, 3500)
     Case "SAN": KontrolaCisel = JeVIntervalu(Retezec, 1, 3500)
     Case "OB": KontrolaCisel = JeVIntervalu(Retezec, 1, 8000)
     Case "D": KontrolaCisel = JeVIntervalu(Retezec, 1, 3500)
     Case "M": KontrolaCisel = JeVIntervalu(Retezec, 1, 1700)
     Case "N": KontrolaCisel = JeVIntervalu(Retezec, 1, 99999)
     Case "H": KontrolaCisel = JeVIntervalu(Retezec, 1, 99999)
     Case "H99": KontrolaCisel = JeVIntervalu(Retezec, 1, 99999)
     Case "MHD": KontrolaCisel = JeVIntervalu(Retezec, 1, 40000)
     Case "A": KontrolaCisel = JeVIntervalu(Retezec, 1, 40000)
     Case "J": KontrolaCisel = JeVIntervalu(Retezec, 1, 40000)
     Case "P": KontrolaCisel = JeVIntervalu(Retezec, 1, 40000)
     Case "PT": KontrolaCisel = JeVIntervalu(Retezec, 1, 99999)
     Case "TRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 50000)
     Case "T": KontrolaCisel = JeVIntervalu(Retezec, 1, 50000)
     Case "XRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 90000)
     Case "X": KontrolaCisel = JeVIntervalu(Retezec, 0, 90000)
     Case "VOZ": KontrolaCisel = JeVIntervalu(Retezec, 0, 90000)
     Case Else: Text_chyby = "chyba - neznam|fffd| druh vozidla"
    End Select
   Case "po|fffd|et sedadel"
    Select Case Kod_vozidla
     Case "O": KontrolaCisel = JeVIntervalu(Retezec, 1, 9)
     Case "SAN": KontrolaCisel = JeVIntervalu(Retezec, 1, 9)
     Case "OB": KontrolaCisel = JeVIntervalu(Retezec, 1, 9)
     Case "D": KontrolaCisel = JeVIntervalu(Retezec, 1, 9)
     Case "M": KontrolaCisel = JeVIntervalu(Retezec, 1, 3)
     Case "N": KontrolaCisel = JeVIntervalu(Retezec, 1, 50)
     Case "H": KontrolaCisel = JeVIntervalu(Retezec, 1, 6)
     Case "H99": KontrolaCisel = JeVIntervalu(Retezec, 1, 6)
     Case "MHD": KontrolaCisel = JeVIntervalu(Retezec, 1, 99)
     Case "A": KontrolaCisel = JeVIntervalu(Retezec, 1, 99)
     Case "J": KontrolaCisel = JeVIntervalu(Retezec, 1, 99)
     Case "P": KontrolaCisel = JeVIntervalu(Retezec, 0, 0)
     Case "PT": KontrolaCisel = JeVIntervalu(Retezec, 0, 0)
     Case "TRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 10)
     Case "T": KontrolaCisel = JeVIntervalu(Retezec, 1, 10)
     Case "XRZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 10)
     Case "X": KontrolaCisel = JeVIntervalu(Retezec, 1, 10)
     Case "VOZ": KontrolaCisel = JeVIntervalu(Retezec, 1, 2)
     Case Else: Text_chyby = "chyba - nezn|fffd|m|fffd| druh vozidla"
    End Select
  End Select
 End If

'vypis chyby do prvniho sloupce
 If Not KontrolaCisel Then Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - " & Typ & " - " & Text_chyby, Bunka)
End Function

'###############
'kontrola roku vyroby
'###############
Function KontrolaRokVyroby(Bunka As Range) As Boolean
 Dim Text_chyby As String, Retezec As String

 Retezec = Trim(Bunka.Value)
 KontrolaRokVyroby = True

 If IsDate(Retezec) Or IsNumeric(Retezec) Then
  If CInt(Retezec) < 1901 Or CInt(Year(Date) + 1) < CInt(Retezec) Then KontrolaRokVyroby = False
 Else
  KontrolaRokVyroby = False
 End If

'vypis chyby do prvniho sloupce
 If Not KontrolaRokVyroby Then Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - rok v|fffd|roby - neobsahuje p|fffd||fffd|pustnou hodnotu", Bunka)
End Function

'###############
'kontrola tovarni znacky - porovnani se zackami v listu znacky, ktery je razen dle cetnosti v Golemu
'###############
Function KontrolaTovarniZnacka(Bunka As Range) As Boolean
 Dim Bunka2 As Range, Text_chyby As String, Retezec As String

 Retezec = UCase(Trim(Bunka.Value))
 KontrolaTovarniZnacka = False

'kontrola vyplneni
 If Retezec = "" Then
  Text_chyby = "tov|fffd|rn|fffd| zna|fffd|ka - nen|fffd| vypln|fffd|na"
'pokud je vyplneno tak se porovnava se seznamem
 Else
  For Each Bunka2 In Sheets("znacky").Range("A1:" & Cells(c_pocet_tovarnich_znacek, 1).Address)
   If Retezec = Bunka2.Value Then
    KontrolaTovarniZnacka = True
    Exit For
   End If
  Next Bunka2
  Text_chyby = "nezn|fffd|m|fffd| zna|fffd|ka vozidla"
 End If

'vypis chyby do prvniho sloupce
 If Not KontrolaTovarniZnacka Then Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - " & Text_chyby, Bunka)
End Function

'######################
'######################
'  KALKULACE
'######################
'######################

'###############
'Celni sklo limit plneni
'###############
Function KontrolaCelniSkloLimitPlneni(Bunka As Range) As Boolean
 Dim Kod_vozidla As String, Text_chyby As String, Retezec As String
 
 Kod_vozidla = PrevodKodVozidla(Cells(Bunka.Row, c_kod_vozidla_x))
 Retezec = Trim(Bunka.Value)
 KontrolaCelniSkloLimitPlneni = True

 If Kod_vozidla = "P" Or Kod_vozidla = "PT" Then
  If Retezec <> "" Then Text_chyby = "pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat"
 ElseIf Retezec = "" Then
  If Cells(Bunka.Row, c_celni_sklo_rocni_pojistne_x) Then Text_chyby = "pokud je zad|fffd|no ro|fffd|n|fffd| pojistn|fffd|, mus|fffd| b|fffd|t vypln|fffd|no"
 ElseIf Not IsNumeric(Retezec) Then
  Text_chyby = "nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou"
 ElseIf CLng(Retezec) < 1 Or CLng(Retezec) > 100000 Then
  Text_chyby = "nen|fffd| v rozsahu 1-100.000"
 ElseIf 50000 <= CLng(Retezec) And CLng(Retezec) <= 100000 Then
  p_celni_sklo_limit_plneni_prilozit_povoleni = True
 End If

 If Text_chyby <> "" Then
  Call ZapisChybyDoBunky(" -Kalkulace - |fffd|eln|fffd| sklo limit pln|fffd|n|fffd| - " & Text_chyby, Bunka)
  KontrolaCelniSkloLimitPlneni = False
 End If
End Function

'###############
'Celni sklo rocni pojistne
'###############
Function KontrolaCelniSkloRocniPojistne(Bunka As Range) As Boolean
 Dim Text_chyby As String, Kod_vozidla As String, Retezec As String

 Kod_vozidla = PrevodKodVozidla(Cells(Bunka.Row, c_kod_vozidla_x))
 Retezec = Trim(Bunka.Value)
 KontrolaCelniSkloRocniPojistne = True

 If Kod_vozidla = "P" Or Kod_vozidla = "PT" Then
  If Retezec <> "" Then Text_chyby = "pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat"
 ElseIf Retezec = "" Then
  If Cells(Bunka.Row, c_celni_sklo_limit_plneni_x) <> "" Then Text_chyby = "pokud je zad|fffd|n limit pln|fffd|n|fffd|, mus|fffd| b|fffd|t vypln|fffd|no"
 ElseIf Not IsNumeric(Retezec) Then
  Text_chyby = "nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou"
 ElseIf CLng(Retezec) < 0 Or CLng(Retezec) > 50000 Then
  Text_chyby = "nen|fffd| v rozsahu 0-50.000 K|fffd|"
 End If

 If Text_chyby <> "" Then
  Call ZapisChybyDoBunky(" -Kalkulace - |fffd|eln|fffd| sklo ro|fffd|n|fffd| pojistn|fffd| - " & Text_chyby, Bunka)
  KontrolaCelniSkloRocniPojistne = True
 End If
End Function

'###############
'kontrola vyplneni poctu mesicu
'###############
Function KontrolaBonusMesice(Bunka As Range) As Boolean
 Dim Text_chyby As String, Retezec As String

 Retezec = Bunka.Value
 KontrolaBonusMesice = True

 If p_kod_produktu = "" Then
  Text_chyby = "nelze zkontrolovat, nen|fffd| zad|fffd|n typ flotily"
 ElseIf p_kod_produktu = "19F" Or p_kod_produktu = "18L" Then
  If Retezec <> "" Then Text_chyby = "pro tento typ flotily nelze zadat bonus"
 ElseIf Not IsNumeric(Retezec) Then
  Text_chyby = "nen|fffd| vypln|fffd|no |fffd||fffd|slo"
 ElseIf CStr(Round2(CInt(Retezec))) <> Retezec Then
  Text_chyby = "nen|fffd| vypln|fffd|no cel|fffd| |fffd||fffd|slo"
 ElseIf Retezec < -300 Or c_rozhodna_doba_max < Retezec Then
  Text_chyby = "je vypln|fffd|n mimo rozsah"
 End If

 If Text_chyby <> "" Then
  Call ZapisChybyDoBunky(" -Kalkulace - bonus - " & Text_chyby, Bunka)
  KontrolaBonusMesice = False
 End If
End Function

'###############
'Vypocet zakladniho rocniho pojistneho
'###############
'vyuziva se v funkci - VypocetPojistneho
'
Function VypocetZakladniRocniPojistne(sour_r, Kod_sazby As String) As String
 Dim Bunka As Range, Kontrola_sazebnik As Boolean, Sazby As Variant, zakladni_rocni_pojistne

 Select Case p_kod_produktu
'pro tyto produkty se bude dotahovat ze sazebniku
  Case "199", "19F"
   Kontrola_sazebnik = True
  Case Else
   Kontrola_sazebnik = False
 End Select
 If Len(Kod_sazby) = 6 And Right(Kod_sazby, 1) = "M" Then
  Kontrola_sazebnik = True
  If Left(Kod_sazby, 1) = "X" Then Kod_sazby = "J" & Mid(Kod_sazby, 2, Len(Kod_sazby) - 1)
 End If

 zakladni_rocni_pojistne = ""

 If Kontrola_sazebnik Then
  For Each Bunka In Sheets("sazebnik").Range("A1:" & Sheets("sazebnik").Range("A1").End(xlDown).Address)
   If Bunka.Value = Kod_sazby Then
    zakladni_rocni_pojistne = Bunka.Offset(0, 1).Value
    Exit For
   End If
  Next Bunka
  If Len(Kod_sazby) < 6 Then Cells(sour_r, c_zakladni_rocni_pojistne_x) = zakladni_rocni_pojistne
 Else
  zakladni_rocni_pojistne = Cells(sour_r, c_zakladni_rocni_pojistne_x)
 End If

 If zakladni_rocni_pojistne = "" Then
  VypocetZakladniRocniPojistne = False
 Else
  VypocetZakladniRocniPojistne = zakladni_rocni_pojistne
 End If
End Function

'###############
'vypocet pojistneho - rocni pojistne s celnim sklem, lhutni pojistne, rocni pojistne po sleve, lhutni pojisten po sleve
'###############
Function VypocetPojistneho(sour_y As Long) As Boolean
 Dim zakladni_rocni_pojistne As String, Kod_radku_sazby As String, Obchodni_sleva, specialni_sazba_koeficient, Min_pojistne As String, Tahac As Boolean, Hodnota As Double
 Dim rocni_pojistne_s_bonusem As Double
 Dim rocni_pojistne_pred_slevou As Long
 Dim lhutni_pojistne_pred_slevou As Long
 Dim rocni_pojistne_po_sleve As Double
 Dim lhutni_pojistne_po_sleve As Long

 'parametry vypoctu
 Dim frekvence_placeni As Integer
 Dim celni_sklo_rocni_pojistne As Long
 Dim obchodni_sleva_koeficient As Single
 Dim bonus_koeficient As Single

 Dim Kod_sazby As String

 VypocetPojistneho = True
 'nacteni/urceni nekterych potrebnych hodnot
 Kod_sazby = VypocetKodSazby(sour_y)
 Kod_radku_sazby = Left(Kod_sazby, 4) & Right(Kod_sazby, 1)
 zakladni_rocni_pojistne = VypocetZakladniRocniPojistne(sour_y, Kod_radku_sazby)
 If Mid(Kod_radku_sazby, 2, 1) = "H" Or Mid(Kod_radku_sazby, 2, 3) = "N64" Or Mid(Kod_radku_sazby, 2, 3) = "N74" Then
  Min_pojistne = VypocetZakladniRocniPojistne(sour_y, Kod_radku_sazby & "M")
  Tahac = True
 Else
  Tahac = False
 End If
 If IsNumeric(zakladni_rocni_pojistne) Then zakladni_rocni_pojistne = CLng(zakladni_rocni_pojistne)

 'zda jsou vstupni hodnoty pro vypocty dobre vyplneny
 If Kod_sazby = "False" Or _
    Cells(c_obchodni_sleva_y, c_obchodni_sleva_x).Interior.ColorIndex = 3 Or _
    Cells(c_frekvence_placeni_y, c_frekvence_placeni_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, c_specialni_sazba_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, c_bonus_poc_mes_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, c_celni_sklo_rocni_pojistne_x).Interior.ColorIndex = 3 Or _
    zakladni_rocni_pojistne = "False" Or _
    Min_pojistne = "False" Then
  'vynulovani
  Cells(sour_y, c_rocni_pojistne_s_bonusem_x) = ""
  Cells(sour_y, c_rocni_pojistne_pred_slevou_x) = ""
  Cells(sour_y, c_lhutni_pojistne_pred_slevou_x) = ""
  Cells(sour_y, c_rocni_pojistne_po_sleve_x) = ""
  Cells(sour_y, c_lhutni_pojistne_po_sleve_x) = ""
  
  'obarveni
  Cells(sour_y, c_zakladni_rocni_pojistne_x).Interior.ColorIndex = 3
  Cells(sour_y, c_rocni_pojistne_s_bonusem_x).Interior.ColorIndex = 3
  Cells(sour_y, c_rocni_pojistne_pred_slevou_x).Interior.ColorIndex = 3
  Cells(sour_y, c_lhutni_pojistne_pred_slevou_x).Interior.ColorIndex = 3
  Cells(sour_y, c_rocni_pojistne_po_sleve_x).Interior.ColorIndex = 3
  Cells(sour_y, c_lhutni_pojistne_po_sleve_x).Interior.ColorIndex = 3

  If Min_pojistne = "False" Then
   Call ZapisChybyDoBunky(" -Kalkulace - v|fffd|po|fffd|ty - nelze ur|fffd|it minim|fffd|ln|fffd| pojistn|fffd|", Cells(sour_y, c_rocni_pojistne_pred_slevou_x))
  Else
   Call ZapisChybyDoBunky(" -Kalkulace - v|fffd|po|fffd|ty - nejsou spr|fffd|vn|fffd| vypln|fffd|ny v|fffd|echny vstupn|fffd| |fffd|daje", Cells(sour_y, c_rocni_pojistne_pred_slevou_x))
  End If
  VypocetPojistneho = False
  Exit Function
 End If

 'nacteni nutnych udaju pro vypocty
 Obchodni_sleva = 1 - (Cells(c_obchodni_sleva_y, c_obchodni_sleva_x)) / 100
 celni_sklo_rocni_pojistne = Cells(sour_y, c_celni_sklo_rocni_pojistne_x)
 frekvence_placeni = Cells(c_frekvence_placeni_y, c_frekvence_placeni_x)

 Select Case Cells(sour_y, c_bonus_poc_mes_x)
  Case Is < -60: bonus_koeficient = 2.5
  Case Is < -48: bonus_koeficient = 2.1
  Case Is < -36: bonus_koeficient = 1.8
  Case Is < -24: bonus_koeficient = 1.5
  Case Is < -12: bonus_koeficient = 1.3
  Case Is < 0: bonus_koeficient = 1.1
  Case Is < 12: bonus_koeficient = 1
  Case Is < 24: bonus_koeficient = 0.95
  Case Is < 36: bonus_koeficient = 0.9
  Case Is < 48: bonus_koeficient = 0.85
  Case Is < 60: bonus_koeficient = 0.8
  Case Is < 72: bonus_koeficient = 0.75
  Case Is < 84: bonus_koeficient = 0.7
  Case Is < 96: bonus_koeficient = 0.65
  Case Is < 108: bonus_koeficient = 0.6
  Case Is < 120: bonus_koeficient = 0.55
  Case Is < 1000: bonus_koeficient = 0.5
 End Select

 Select Case Cells(sour_y, c_specialni_sazba_x)
  Case "B": specialni_sazba_koeficient = 1
  Case "R": specialni_sazba_koeficient = 1.5
  Case "S": specialni_sazba_koeficient = 0.25
  Case "H": specialni_sazba_koeficient = 0.1
  Case "N": specialni_sazba_koeficient = 2
 End Select

 'vypocty pojistneho
 rocni_pojistne_s_bonusem = bonus_koeficient * Round2(specialni_sazba_koeficient * zakladni_rocni_pojistne)
 If Tahac Then
  Hodnota = specialni_sazba_koeficient * Min_pojistne
  If Round2(rocni_pojistne_s_bonusem) <= Round2(Hodnota) Then rocni_pojistne_s_bonusem = Hodnota
 End If

 rocni_pojistne_pred_slevou = Round2(rocni_pojistne_s_bonusem + celni_sklo_rocni_pojistne)
 lhutni_pojistne_pred_slevou = Round2((rocni_pojistne_s_bonusem + celni_sklo_rocni_pojistne) / frekvence_placeni)

 rocni_pojistne_po_sleve = (Obchodni_sleva * celni_sklo_rocni_pojistne) + (IIf(Obchodni_sleva * rocni_pojistne_s_bonusem < Hodnota, Hodnota, Obchodni_sleva * rocni_pojistne_s_bonusem))
 lhutni_pojistne_po_sleve = Round2(rocni_pojistne_po_sleve / frekvence_placeni)

 Cells(sour_y, c_rocni_pojistne_s_bonusem_x) = Round2(rocni_pojistne_s_bonusem)
 Cells(sour_y, c_rocni_pojistne_pred_slevou_x) = rocni_pojistne_pred_slevou
 Cells(sour_y, c_lhutni_pojistne_pred_slevou_x) = lhutni_pojistne_pred_slevou
 Cells(sour_y, c_rocni_pojistne_po_sleve_x) = Round2(rocni_pojistne_po_sleve)
 Cells(sour_y, c_lhutni_pojistne_po_sleve_x) = lhutni_pojistne_po_sleve

End Function

'######################
'######################
'  OBECNE - vyuzivaji se na ruznych mistech
'######################
'######################

'###############
'kontrola zda je v bunce vyplnena libovolna hodnota
'###############
Function KontrolaVyplneni(Bunka As Range, Typ) As Boolean
 Dim Text_chyby As String, Bunka2 As Range, Retezec As String

 Retezec = Bunka.Value
 KontrolaVyplneni = True

 Select Case Typ
  Case "navyseni limitu"
   If Retezec <> "A" And Retezec <> "N" Then Text_chyby = "neobsahuje hodnotu A/N"
  Case "kratkodoba smlouva", "leasingovy najem"
   If Retezec <> "" And Retezec <> "A" And Retezec <> "N" Then Text_chyby = "neobsahuje hodnotu A/N"
  Case "speci|fffd|ln|fffd| sazba"
   If Retezec <> "B" And Retezec <> "H" And Retezec <> "N" And Retezec <> "R" And Retezec <> "S" Then Text_chyby = "nen|fffd| vypln|fffd|na p|fffd||fffd|pustn|fffd| hodnota"
  Case "pov limit plneni"
   If Retezec <> "SUPER" And Retezec <> "SPECI|fffd|L" Then Text_chyby = "neobsahuje hodnotu SUPER/SPECI|fffd|L"
  Case "druh vozidla"
   Select Case Retezec
    Case "OSOBN|fffd| AUTOMOBIL", "SANITN|fffd| AUTOMOBIL", "OBYTN|fffd| AUTOMOBIL", "U|fffd|ITKOV|fffd| AUTOMOBIL", "MOTOCYKL", "N|fffd|KLADN|fffd| AUTOMOBIL", "TAHA|fffd| N|fffd|V|fffd|S|fffd|", "TAHA|fffd| N|fffd|V|fffd|S|fffd| MIMOTARIFN|fffd|", "MHD", "AUTOBUS", "TROLEJBUS", "P|fffd||fffd|V|fffd|S", "N|fffd|V|fffd|S", "TRAKTOR S RZ", "TRAKTOR BEZ RZ", "PRACOVN|fffd| STROJ S RZ", "PRACOVN|fffd| STROJ BEZ RZ", "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K"
    Case Else: Text_chyby = "nen|fffd| vypln|fffd|na p|fffd||fffd|pustn|fffd| hodnota (viz n|fffd|pov|fffd|da)"
   End Select
  Case "psc"
   Retezec = Replace(Retezec, " ", "")
   If Len(Retezec) <> 5 Or Not IsNumeric(Retezec) Then Text_chyby = "chybn|fffd| vypln|fffd|n|fffd|"
  Case "cislo LS"
   If Bunka.Offset(0, -1).Value <> "A" And Retezec <> "" Then Text_chyby = "je vypln|fffd|n|fffd|, ale v|fffd|z nen|fffd| v leasingov|fffd|m n|fffd|jmu"
  Case "obcan"
   Set Bunka2 = Cells(Bunka.Row, IIf(c_vlastnik_rc_ico_x > Bunka.Column, c_drzitel_rc_ico_x, c_vlastnik_rc_ico_x))
   If Bunka2.Interior.ColorIndex <> 3 Then
    If Len(Bunka2.Value) = 8 Then
     If Retezec <> "" Then Text_chyby = "u podnikatele se nevypl|fffd|uje"
    ElseIf c_drzitel_jmeno_x = Bunka.Column Or c_vlastnik_jmeno_x = Bunka.Column Then
     If Retezec = "" Then Text_chyby = "nen|fffd| vypln|fffd|n|fffd|"
    End If
   End If
  Case "nazev"
   If Retezec = "" Then
    Text_chyby = "nen|fffd| vypln|fffd|n|fffd|"
   ElseIf Len(Retezec) > 30 Then
    Text_chyby = "je del|fffd||fffd| ne|fffd| 30 znak|fffd|"
   End If

  Case Else
   If Retezec = "" Then
    Select Case Typ
     Case "ulice", "obec": Text_chyby = "nen|fffd| vypln|fffd|na"
     Case "cislo domu": Text_chyby = "nen|fffd| vypln|fffd|no"
     Case "typ vozidla": Text_chyby = "nen|fffd| vypln|fffd|n"
     Case Else: Text_chyby = "CHYBA - kontrola vypln|fffd|n|fffd|"
    End Select
   End If
 End Select
 If Not Text_chyby = "" Then
  With Sheets("kontroly")
   Text_chyby = " -" & IIf(.Cells(1, Bunka.Column).Value = "", .Cells(1, Bunka.Column).End(xlToLeft).Value, .Cells(1, Bunka.Column).Value) & " - " & .Cells(3, Bunka.Column).Value & " - " & Text_chyby
  End With
  Call ZapisChybyDoBunky(Text_chyby, Bunka)
  KontrolaVyplneni = False
 End If
End Function

'###############
'kontrola unikatnosti udaje v sloupci
'###############
'u VINu se na duplicitu kontroluji pouze hodnoty delky 17 znaku
'u cisla smluv se jeste kontroluje duplicita s cislem HIP
Function KontrolaUnikatnosti(Bunka As Range, Typ) As Boolean
 Dim Radek As Long, Sloupec As Integer, Text_chyby As String, Retezec As String

 Retezec = Replace(Bunka.Value, " ", "")
 KontrolaUnikatnosti = True

 If Retezec <> "" And (Typ = "vin" And Len(Retezec) = 17 Or Typ <> "vin") Then
  Sloupec = Bunka.Column
  For Radek = Bunka.Row + 1 To Pocet_radku
   If Retezec = CStr(Cells(Radek, Sloupec)) Then
    Text_chyby = " -Smlouva - " & IIf(Typ = "vin", "VIN", "|fffd||fffd|slo smlouvy") & " - se shoduje s jin|fffd|m ji|fffd| pou|fffd|it|fffd|m"
    Call ZapisChybyDoBunky(Text_chyby, Cells(Radek, Sloupec))
    Call ZapisChybyDoBunky(Text_chyby, Bunka)
    KontrolaUnikatnosti = False
    Exit For
   End If
  Next Radek
  If Typ = "cislo smlouvy" And Retezec = CStr(Cells(c_cislo_hip_y, c_cislo_hip_x)) Then
   Call ZapisChybyDoBunky(" -Smlouva - |fffd||fffd|slo smlouvy - se shoduje s |fffd||fffd|slem HIP", Bunka)
   KontrolaUnikatnosti = False
  End If
 End If
End Function
Attribute VB_Name = "M_Menu"
Option Explicit
Sub AddMenu()
'vytvoreni nove polozky menu a jeji submenu
 Dim cbMainMenuBar As CommandBar, cbcCutomMenu As CommandBarControl, cbcCutomMenuExport As CommandBarControl, cbcCutomMenuTisk As CommandBarControl

'smazu pripadne stare menu, musi byt "resume next", nemusi existovat
 On Error Resume Next
  Application.CommandBars("Worksheet Menu Bar").Controls("&SUS Flotily").Delete
 On Error GoTo chyba

'nastavim promenou hlavniho menu Worksheetu
 Set cbMainMenuBar = Application.CommandBars("Worksheet Menu Bar")

'vlozim novou poluzku do hlavniho menu a nastavim promenou noveho menu
 Set cbcCutomMenu = cbMainMenuBar.Controls.Add(Type:=msoControlPopup)

'nastavim nadpis nove polozky
 cbcCutomMenu.Caption = "&SUS Flotily"

 With cbcCutomMenu.Controls.Add(Type:=msoControlButton)
  .Caption = "Form|fffd|tov|fffd|n|fffd| a kontrola"
  .OnAction = "Format_Kontrola"
 End With
 If p_spravce_prihlasen Or public_pecovatel_prihlasen Then
 With cbcCutomMenu.Controls.Add(Type:=msoControlButton)
  .Caption = "GDPR"
  .OnAction = "GDPR"
 End With
  With cbcCutomMenu.Controls.Add(Type:=msoControlButton)
   .Caption = "Form|fffd|tov|fffd|n|fffd|"
   .OnAction = "Format"
  End With
End If

If p_spravce_prihlasen Then
  Set cbcCutomMenuExport = cbcCutomMenu.Controls.Add(Type:=msoControlPopup)
  cbcCutomMenuExport.Caption = "Export dat do SUS"

  With cbcCutomMenuExport.Controls.Add(Type:=msoControlButton)
   .Caption = "Ostr|fffd| export"
   .OnAction = "ExportOstra"
  End With

  With cbcCutomMenuExport.Controls.Add(Type:=msoControlButton)
   .Caption = "Testovat do 1"
   .OnAction = "ExportTest1"
  End With

  With cbcCutomMenuExport.Controls.Add(Type:=msoControlButton)
   .Caption = "Testovat do 2"
   .OnAction = "ExportTest2"
  End With
 End If
  
 Set cbcCutomMenuTisk = cbcCutomMenu.Controls.Add(Type:=msoControlPopup)
 cbcCutomMenuTisk.Caption = "Tisk"
If p_spravce_prihlasen Or public_pecovatel_prihlasen Then
 With cbcCutomMenuTisk.Controls.Add(Type:=msoControlButton)
  .Caption = "Sestava smluv"
  .OnAction = "Sestava_smluv_menu"
 End With
End If
 With cbcCutomMenuTisk.Controls.Add(Type:=msoControlButton)
  .Caption = "Zelen|fffd| karty"
  .OnAction = "Zelene_karty_menu"
 End With

 With cbcCutomMenuTisk.Controls.Add(Type:=msoControlButton)
  .Caption = "Seznam tov|fffd|rn|fffd|ch zna|fffd|ek"
  .OnAction = "SeznamZnacek"
 End With

 If Not p_spravce_prihlasen Then
  With cbcCutomMenu.Controls.Add(Type:=msoControlButton)
   .Caption = "P|fffd|ihl|fffd|en|fffd| spr|fffd|vce"
   .OnAction = "Prihlaseni"
  End With
 End If

 With cbcCutomMenu.Controls.Add(Type:=msoControlButton)
  .Caption = "Verze DS"
  .OnAction = "Verze"
 End With
 
 Exit Sub

'pro pripad, ze by DS byl stazen z netu a otevren v prohlizeci - nelze vytvorit menu a pada to
chyba:
 MsgBox "Pro pr|fffd|ci s datov|fffd|m sb|fffd|ra|fffd|em je nutn|fffd| soubor nejprve ulo|fffd|it do Va|fffd|eho po|fffd||fffd|ta|fffd|e a a|fffd| n|fffd|sledni jej spustit."
End Sub

Sub DeleteMenu()
On Error Resume Next
  Application.CommandBars("Worksheet Menu Bar").Controls("&SUS Flotily").Delete
On Error GoTo 0
End Sub

Sub Prihlaseni()
 F_Prihlaseni_Spravce.pole_heslo = ""
 F_Prihlaseni_Spravce.Show
End Sub

Private Sub ExportOstra()
 p_umisteni_kosilky = "U:\Datovy_sberac\importni_kosilka\"
 p_export_ostra = True
 Call Export
End Sub

Private Sub ExportTest1()
 p_export_test1 = True
 Call ExportTest
End Sub

Private Sub ExportTest2()
 p_export_test1 = False
 Call ExportTest
End Sub

Private Sub ExportTest()
 p_umisteni_kosilky = "C:\datovy_sberac\importni_kosilka_test\"
 p_export_ostra = False
 Call Export
End Sub

'###############
'zobrazeni cisla verze DS
'###############
Sub Verze()
 With Sheets("sazebnik")
  MsgBox "Verze:" & vbTab & vbTab & .Cells(c_verze_ds_y, c_verze_ds_x) & vbLf & "Datum vyd|fffd|n|fffd|:" & vbTab & .Cells(c_datum_vydani_ds_y, c_datum_vydani_ds_x), Title:="Verze DS"
 End With
End Sub

Private Sub Format()
 Proces = 0: F_Postup.Show
End Sub
Private Sub Format_Kontrola()
 Proces = 1: F_Postup.Show
End Sub
Private Sub Zelene_karty_menu()
 Proces = 2: F_Postup.Show
End Sub
Private Sub Export()
 Proces = 3: F_Postup.Show
End Sub
Private Sub Sestava_smluv_menu()
 Proces = 4: F_Postup.Show
End Sub
Private Sub GDPR()
 Odemknuti_GDPR
End Sub
Attribute VB_Name = "M_Sestava_Smluv"
Option Explicit
'#############################
'vytvoreni podkladu pro tisk zelenych karet
'#############################
Sub SestavaSmluv()
 Dim WSSest As Worksheet, Sloupec As Integer, RcIc As String, Nadpis As String, Hodnota As String, Sirka As Integer, Posun As Integer
 Dim ZRadek As Long, VRadek As Long, PRadek As Long
 Const HRadek As Long = 3

 Call Aktualizovat_proces("Generace sestavy smluv")
 Set WSData = ThisWorkbook.Worksheets("data")
 Set WSSest = Workbooks.Add.Worksheets(1)
 WSSest.Name = "Sestava"
 PRadek = Pocet_radku - c_pocatek_y_data + HRadek + 1
 Proc = 1 / 35
 Call Aktualizovat_postup

 With WSSest
  VRadek = HRadek
  Sloupec = 1
  .Cells(VRadek, Sloupec).Value = "P." & vbLf & "|fffd|."
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "|fffd||fffd|slo" & vbLf & "pojistn|fffd|" & vbLf & "smlouvy"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "VLASTN|fffd|K" & vbLf & "P|fffd||fffd|jmen|fffd|/N|fffd|zev spole|fffd|nosti" & vbLf & "R|fffd|/I|fffd|"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "DR|fffd|ITEL / PROVOZOVATEL" & vbLf & "P|fffd||fffd|jmen|fffd|/N|fffd|zev spole|fffd|nosti" & vbLf & "R|fffd|/I|fffd|"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "RZ"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Zna|fffd|ka" & vbLf & "vozidla"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Typ" & vbLf & "vozidla"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "|fffd||fffd|slo" & vbLf & "TP"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "VIN"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Druh" & vbLf & "vozidla"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "V|fffd|kon" & vbLf & "(kW)"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Objem" & vbLf & "(ccm)"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Hmot." & vbLf & "(kg)"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Po|fffd|et" & vbLf & "m|fffd|st"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Datum" & vbLf & "po|fffd||fffd|tku"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Limity" & vbLf & "pln|fffd|n|fffd|" & vbLf & "POV"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Z|fffd|kladn|fffd|" & vbLf & "ro|fffd|n|fffd|" & vbLf & "pojistn|fffd|"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Limit" & vbLf & "pln|fffd|n|fffd|" & vbLf & "|fffd|eln|fffd|ho skla"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Pojistn|fffd|" & vbLf & "|fffd|eln|fffd|ho" & vbLf & "skla"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Ro|fffd|n|fffd| pojistn|fffd|" & vbLf & "(v|fffd|. |fffd|eln|fffd|ho skla)"
  Sloupec = Sloupec + 1
  .Cells(VRadek, Sloupec).Value = "Ro|fffd|n|fffd| pojistn|fffd|" & vbLf & "(v|fffd|. |fffd|eln|fffd|ho skla)" & vbLf & "po slev|fffd|/p|fffd|ir|fffd|ce"
  Call Aktualizovat_postup

  ZRadek = c_pocatek_y_data
  VRadek = VRadek + 1
  Sloupec = 1
  .Cells(VRadek, Sloupec).Value = 1
  .Range(.Cells(VRadek, Sloupec).Address, Cells(PRadek, Sloupec).Address).DataSeries xlColumns, xlLinear, xlDay, 1
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_cislo_pojistne_smlouvy_x).Address, Cells(Pocet_radku, c_cislo_pojistne_smlouvy_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 3
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_registracni_znacka_x).Address, Cells(Pocet_radku, c_registracni_znacka_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_znacka_vozidla_x).Address, Cells(Pocet_radku, c_znacka_vozidla_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_typ_vozidla_x).Address, Cells(Pocet_radku, c_typ_vozidla_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_cislo_velkeho_tp_x).Address, Cells(Pocet_radku, c_cislo_velkeho_tp_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_vin_x).Address, Cells(Pocet_radku, c_vin_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_kod_vozidla_x).Address, Cells(Pocet_radku, c_kod_vozidla_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_vykon_x).Address, Cells(Pocet_radku, c_vykon_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_objem_x).Address, Cells(Pocet_radku, c_objem_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_hmotnost_x).Address, Cells(Pocet_radku, c_hmotnost_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_pocet_mist_x).Address, Cells(Pocet_radku, c_pocet_mist_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_pocatek_pojisteni_x).Address, Cells(Pocet_radku, c_pocatek_pojisteni_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_limit_plneni_x).Address, Cells(Pocet_radku, c_limit_plneni_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_zakladni_rocni_pojistne_x).Address, Cells(Pocet_radku, c_zakladni_rocni_pojistne_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_celni_sklo_limit_plneni_x).Address, Cells(Pocet_radku, c_celni_sklo_limit_plneni_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_celni_sklo_rocni_pojistne_x).Address, Cells(Pocet_radku, c_celni_sklo_rocni_pojistne_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_rocni_pojistne_pred_slevou_x).Address, Cells(Pocet_radku, c_rocni_pojistne_pred_slevou_x).Address).Copy .Cells(VRadek, Sloupec)
  Sloupec = Sloupec + 1
  Call Aktualizovat_postup
  WSData.Range(Cells(ZRadek, c_rocni_pojistne_po_sleve_x).Address, Cells(Pocet_radku, c_rocni_pojistne_po_sleve_x).Address).Copy .Cells(VRadek, Sloupec)
  Call Aktualizovat_postup

  For VRadek = HRadek + 1 To PRadek
   Sloupec = 3
   RcIc = WSData.Cells(ZRadek, c_vlastnik_rc_ico_x).Value
   .Cells(VRadek, Sloupec).Value = Trim(IIf(Len(RcIc) = 8, "", WSData.Cells(ZRadek, c_vlastnik_titul_x).Value & " " & WSData.Cells(ZRadek, c_vlastnik_jmeno_x).Value) & " " & WSData.Cells(ZRadek, c_vlastnik_prijmeni_nazev_spolecnosti_x).Value) & vbLf & IIf(Len(RcIc) = 8, "I|fffd| ", "R|fffd| ") & RcIc
   Sloupec = 4
   RcIc = WSData.Cells(ZRadek, c_drzitel_rc_ico_x).Value
   .Cells(VRadek, Sloupec).Value = Trim(IIf(Len(RcIc) = 8, "", WSData.Cells(ZRadek, c_drzitel_titul_x).Value & " " & WSData.Cells(ZRadek, c_drzitel_jmeno_x).Value) & " " & WSData.Cells(ZRadek, c_drzitel_prijmeni_nazev_spolecnosti_x).Value) & vbLf & IIf(Len(RcIc) = 8, "I|fffd| ", "R|fffd| ") & RcIc
   ZRadek = ZRadek + 1
  Next VRadek
  Call Aktualizovat_postup
  With .Cells
   With .Font
    .Bold = False
    .Italic = False
    .Name = "Arial"
    .Size = 10
    .ColorIndex = xlAutomatic
   End With
   .Borders.LineStyle = xlNone
   .WrapText = False
   .HorizontalAlignment = xlCenter
   .VerticalAlignment = xlCenter
   .Interior.ColorIndex = 2
   .ColumnWidth = 80
  End With
  Call Aktualizovat_postup
  .Range("A1,A" & HRadek & ":U" & HRadek & ",B" & HRadek + 1 & ":B" & PRadek & ",O" & HRadek + 1 & ":O" & PRadek).Font.Bold = True
  With .Range("A1:U1")
   .Font.Size = 14
   .Merge
   .Borders.LineStyle = xlDouble
   .Borders.Weight = xlThick
   .Value = "Flotilov|fffd| seznam vozidel POV |fffd| P|fffd|IHL|fffd||fffd|KY"
  End With
  .Range("K" & HRadek & ":M" & PRadek).NumberFormatLocal = "# ##0"
  .Range("Q" & HRadek & ":U" & PRadek).NumberFormatLocal = "# ##0 K|fffd|"
  .Range("A1,A" & HRadek & ":U" & HRadek).Interior.ColorIndex = 36
  Call Aktualizovat_postup
  With .Range("A" & HRadek + 1 & ":U" & PRadek).Borders
   .LineStyle = xlContinuous
   .Weight = xlThin
  End With
  .Range("A" & HRadek & ":U" & HRadek & ",C" & HRadek & ":D" & PRadek).WrapText = True
  With .Range("A" & HRadek & ":U" & HRadek).Borders
   .LineStyle = xlContinuous
   .Weight = xlMedium
  End With
  Call Aktualizovat_postup
  With .Range("A" & HRadek & ":A" & PRadek).Borders(xlEdgeLeft)
   .LineStyle = xlContinuous
   .Weight = xlMedium
  End With
  With .Range("U" & HRadek & ":U" & PRadek).Borders(xlEdgeRight)
   .LineStyle = xlContinuous
   .Weight = xlMedium
  End With
  Call Aktualizovat_postup
  With .Range("A" & PRadek & ":U" & PRadek).Borders(xlEdgeBottom)
   .LineStyle = xlContinuous
   .Weight = xlMedium
  End With

  .Cells.EntireColumn.AutoFit
  .Cells.EntireRow.AutoFit
  .Rows(1).RowHeight = 30
  .Rows(2).RowHeight = 87
  .Range("A1").Select
  Call Aktualizovat_postup

  For Sloupec = 0 To 7
   Sirka = 120
   Select Case Sloupec
    Case 0
     Posun = 0
     Nadpis = "|fffd||fffd|slo flotily" & vbLf & "(HIP)"
     Hodnota = WSData.Cells(c_cislo_hip_y, c_cislo_hip_x).Value
    Case 1
     Posun = Sloupec * 120
     Sirka = 200
     Nadpis = "N|fffd|zev" & vbLf & "pojistn|fffd|ka"
     Hodnota = WSData.Cells(c_pojistnik_nazev_y, c_pojistnik_nazev_x).Value
    Case 2
     Posun = Sloupec * 120 + 80
     Nadpis = "I|fffd|"
     Hodnota = WSData.Cells(c_pojistnik_ic_y, c_pojistnik_ic_x).Value
    Case 3
     Posun = Sloupec * 120 + 100
     Nadpis = "Frekvence" & vbLf & "placen|fffd|"
     Hodnota = WSData.Cells(c_frekvence_placeni_y, c_frekvence_placeni_x).Value
    Case 4
     Posun = Sloupec * 120 + 100
     Nadpis = "Sleva/p|fffd|ir|fffd|ka" & vbLf & "na flotile"
     Hodnota = Format(WSData.Cells(c_obchodni_sleva_y, c_obchodni_sleva_x).Value / 100, "#0 %")
    Case 5
     Posun = Sloupec * 120 + 120
     Nadpis = "Pojistn|fffd|" & vbLf & "|fffd|eln|fffd| sklo"
     Hodnota = Format(WSData.Cells(c_radek_souctu, c_celni_sklo_rocni_pojistne_x).Value, "# ### ##0 K|fffd|")
    Case 6
     Posun = Sloupec * 120 + 120
     Nadpis = "Ro|fffd|n|fffd| pojistn|fffd|" & vbLf & "(v|fffd|. |fffd|S)" & vbLf & "po slev|fffd|/p|fffd|ir|fffd|ce"
     Hodnota = Format(WSData.Cells(c_radek_souctu, c_rocni_pojistne_po_sleve_x).Value, "# ### ##0 K|fffd|")
    Case 7
     Posun = Sloupec * 120 + 120
     Nadpis = "Lh|fffd|tn|fffd|" & vbLf & "pojistn|fffd|" & vbLf & "po slev|fffd|/p|fffd|ir|fffd|ce"
     Hodnota = Format(WSData.Cells(c_radek_souctu, c_lhutni_pojistne_po_sleve_x).Value, "# ### ##0 K|fffd|")
   End Select

   With .Shapes.AddTextbox(msoTextOrientationHorizontal, Posun, 35, Sirka, 50)
    .Placement = xlFreeFloating
    With .TextFrame
     .HorizontalAlignment = xlCenter
     .VerticalAlignment = xlCenter
     .MarginLeft = 2.8
     .MarginRight = 2.8
     .MarginBottom = 2.8
     .MarginTop = 2.8
     With .Characters
      .Text = Nadpis
      With .Font
       .Name = "Arial"
       .Size = 10
       .Bold = True
       .Italic = False
      End With
     End With
    End With
    With .Fill
     .ForeColor.SchemeColor = 43
     .Visible = msoTrue
     .Solid
    End With
    With .Line
     .Weight = 2.25
     .ForeColor.SchemeColor = 22
     .Visible = msoTrue
     .Style = msoLineSingle
    End With
   End With

   With .Shapes.AddTextbox(msoTextOrientationHorizontal, Posun, 85, Sirka, 20)
    .Placement = xlFreeFloating
    With .TextFrame
     .HorizontalAlignment = xlCenter
     .VerticalAlignment = xlCenter
     .MarginLeft = 2.8
     .MarginRight = 2.8
     .MarginBottom = 2.8
     .MarginTop = 2.8
     With .Characters
      .Text = Hodnota
      With .Font
       .Name = "Arial"
       .Size = 10
       .Bold = False
       .Italic = False
      End With
     End With
    End With
    With .Fill
     .ForeColor.SchemeColor = 9
     .Visible = msoTrue
     .Solid
    End With
    With .Line
     .Weight = 2.25
     .ForeColor.SchemeColor = 22
     .Visible = msoTrue
     .Style = msoLineSingle
    End With
   End With
   Call Aktualizovat_postup
  Next Sloupec

  With .PageSetup
   .PrintTitleRows = HRadek & ":" & HRadek
   .PrintTitleColumns = ""
   .PrintArea = ""
   .LeftHeader = ""
   .CenterHeader = ""
   .RightHeader = "[&P - &N]" & vbLf & DateDiff("d", "1.1.1900", Date)
   .LeftFooter = "&""Arial,Tu|fffd|n|fffd|""&12|fffd|esk|fffd| podnikatelsk|fffd| poji|fffd||fffd|ovna, a.s., VIENNA INSURANCE GROUP&""Arial,Oby|fffd|ejn|fffd|""&10" & vbLf & "je zapsan|fffd| v obchodn|fffd|m rejst|fffd||fffd|ku veden|fffd|m M|fffd|stsk|fffd|m soudem v Praze - odd|fffd|l B, vlo|fffd|ka 3433. I|fffd|: 63998530, DI|fffd|: CZ63998530, bankovn|fffd| spojen|fffd|: 700135002/0800"
   .CenterFooter = ""
   .RightFooter = ""
   .LeftMargin = 35
   .RightMargin = 35
   .TopMargin = 65
   .BottomMargin = 65
   .HeaderMargin = 35
   .FooterMargin = 35
   .PrintHeadings = False
   .PrintGridlines = False
   .PrintComments = xlPrintNoComments
   .PrintQuality = 600
   .CenterHorizontally = False
   .CenterVertically = False
   .Orientation = xlLandscape
   .Draft = False
   .PaperSize = xlPaperA4
   .FirstPageNumber = xlAutomatic
   .Order = xlDownThenOver
   .BlackAndWhite = False
   .PrintErrors = xlPrintErrorsDisplayed
   .Zoom = False
   .FitToPagesWide = 1
   .FitToPagesTall = 110
  End With
  .Protect Password:="hesloobchod", DrawingObjects:=True, Contents:=True, Scenarios:=True, AllowFormattingCells:=True, AllowFormattingColumns:=True, AllowFormattingRows:=True
 End With
 Call Aktualizovat_postup
 WSData.Activate
End Sub
Attribute VB_Name = "M_SeznamZnacek"
Option Explicit
Sub SeznamZnacek()
 Dim Aktualni_soubor As Workbook, Novy_soubor As Workbook

 Application.ScreenUpdating = False
 Set Aktualni_soubor = ThisWorkbook
 Set Novy_soubor = Workbooks.Add

 Novy_soubor.Sheets(1).Name = "Seznam zna|fffd|ek"

 With Aktualni_soubor.Sheets("znacky")
  .Range("A1:" & .Range("A1").End(xlDown).Address).Copy Novy_soubor.Worksheets("Seznam zna|fffd|ek").Range("A2")
 End With

 With Novy_soubor.Worksheets("Seznam zna|fffd|ek")
  .Range("A2:" & .Range("A2").End(xlDown).Address).Sort Key1:=.Range("A2"), Order1:=xlAscending, Header:=xlGuess, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, DataOption1:=xlSortNormal
  With .Cells(1, 1)
   .Value = "Tov|fffd|rn|fffd| zna|fffd|ky"
   .Font.Bold = True
   With .Interior
    .ColorIndex = 44
    .Pattern = xlSolid
   End With
  End With
  .Columns("A:A").EntireColumn.AutoFit
 End With
 Novy_soubor.Activate
 Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "M_UpravaFormatu_1_Head"
Option Explicit
Sub Formatovani(Optional Hlasit As Boolean = True)
 Dim Bunka As Range, Prava As Variant, Retezec As String
 Dim i As Integer 'sloupce
 Dim j As Long 'radky

 Sheets("data").Select
 
Odemknuti_GDPR
'Nastaveni hlasky progress baru
 Call Aktualizovat_proces("Formatovan|fffd| dat")
 Pocet_radku = RozahListu

 With Sheets("formatovani")
  Prava = .Range(.Cells(5, c_pocatek_x_data - 1).Address, .Cells(.Cells(5, c_pocatek_x_data - 1).End(xlDown).Row, c_pocet_sloupcu).Address)
 End With

 Proc = 1 / (c_pocet_sloupcu - c_pocatek_x_data + 3)
 Call Aktualizovat_postup
 'zpracovava se po jednotilivych sloupcich
 For i = c_pocatek_x_data To c_pocet_sloupcu Step 1  'zpracovani sloupcu
  Range(Cells(c_pocatek_y_data, i).Address & ":" & Cells(Pocet_radku, i).Address).NumberFormatLocal = Prava(1, i)
  If Prava(2, i) > 0 Then
   For j = c_pocatek_y_data To Pocet_radku Step 1  'zpracovani radku
    Fce = 3
    Set Bunka = Cells(j, i)
    Retezec = Trim(Bunka.Value)

    If Retezec <> "" Then
     'cislo
     If Prava(Fce, i) = "x" Then Retezec = PrevodCislo(Retezec)
     Fce = Fce + 1

     'text
     If Prava(Fce, i) = "x" Then Retezec = UCase(Retezec)
     Fce = Fce + 1

     'volba
     If Prava(Fce, i) = "x" Then Retezec = PrevodAnoNe(Retezec)
     Fce = Fce + 1

     'TP
     If Prava(Fce, i) = "x" Then Retezec = PrevodTp(Retezec)
     Fce = Fce + 1

     'PSC
     If Prava(Fce, i) = "x" Then Retezec = PrevodPsc(Retezec)
     Fce = Fce + 1

     'rc/ico
     If Prava(Fce, i) = "x" Then Retezec = PrevodRcIco(Retezec)
     Fce = Fce + 1

     'rok vyroby
     If Prava(Fce, i) = "x" Then Retezec = PrevodRokVyroby(Retezec)
     Fce = Fce + 1

     'limity pojisteni
     If Prava(Fce, i) = "x" Then Retezec = PrevodPovLimity(Retezec)
     Fce = Fce + 1

     'vin
     If Prava(Fce, i) = "x" Then Retezec = PrevodVin(Retezec)
     Fce = Fce + 1

     'kod vozidla
     If Prava(Fce, i) = "x" Then Retezec = PrevodDruhVozidla(Retezec)
     Fce = Fce + 1

     'SPZ
     If Prava(Fce, i) = "x" Then Retezec = PrevodSpz(Retezec)
     Fce = Fce + 1

     'specialni sazba
     If Prava(Fce, i) = "x" Then Retezec = PrevodSpecialniSazba(Retezec)
     Fce = Fce + 1

     'cislo smlouva
     If Prava(Fce, i) = "x" Then Retezec = PrevodCisloSmlouva(Retezec)
     Fce = Fce + 1

     'pocet mist
     If Prava(Fce, i) = "x" Then Retezec = PrevodOriznutiCisla(Retezec)
     Fce = Fce + 1

     'datum
     If Prava(Fce, i) = "x" Then Retezec = PrevodDatum(Retezec)
     Fce = Fce + 1

     'kratkodoba smlouva
     If Prava(Fce, i) = "x" Then Retezec = PrevodKratkodobaSmlouva(Retezec)

     If Retezec <> Bunka.Value Then Bunka.Value = Retezec 'vraceni vysledku do listu
    End If
   Next j
  End If
  Call Aktualizovat_postup
 Next i

 'aut. prizpusobeni sirky celeho listu
 Cells.ColumnWidth = 80
 Cells.EntireColumn.AutoFit

 'cislo HIP - je mimo vyplnovanou tabulku - proto se spousti mimo hlavni zpracovani
 Cells(c_cislo_hip_y, c_cislo_hip_x) = PrevodCisloSmlouva(Cells(c_cislo_hip_y, c_cislo_hip_x))

 'k|fffd|d produktu
 Cells(c_typ_flotily_y, c_typ_flotily_x) = PrevodTypFlotily(Cells(c_typ_flotily_y, c_typ_flotily_x))

 Worksheets("data").Select
 Range("B6").Select

 Call Aktualizovat_postup
 
 If Hlasit Then
 Skryti_GDPR
 MsgBox ("Data byla naform|fffd|tov|fffd|na.")
 End If

End Sub
Attribute VB_Name = "M_UpravaFormatu_2_Body"
Option Explicit
'######################
'######################
'  UDAJE FLOTILY
'######################
'######################

'###############
'Druh vozidla
'###############
Function PrevodDruhVozidla(Retezec) As String
 Select Case Bez_znamenek_velka(UCase(Retezec))
  Case "O", "OSOBNI", "OSOBNI AUTOMOBIL", "OSOBNI AUTO", "OA": Retezec = "OSOBN|fffd| AUTOMOBIL"
  Case "SAN", "SA", "SANITNI", "SANITNI AUTOMOBIL": Retezec = "SANITN|fffd| AUTOMOBIL"
  Case "OB", "OBYTNY AUTOMOBIL": Retezec = "OBYTN|fffd| AUTOMOBIL"
  Case "D", "UZITKOVY", "UZITKOVY AUTOMOBIL", "UZITKOVE", "N1": Retezec = "U|fffd|ITKOV|fffd| AUTOMOBIL"
  Case "M", "MOTOCYKL", "MOPED", "MOTORKA": Retezec = "MOTOCYKL"
  Case "N", "NAKLADNI AUTOMOBIL", "NAKLADNI", "NA": Retezec = "N|fffd|KLADN|fffd| AUTOMOBIL"
  Case "H", "TN", "TAHAC", "TAHAC NAVESU": Retezec = "TAHA|fffd| N|fffd|V|fffd|S|fffd|"
  Case "H99", "TNM", "TAHAC MIMO", "TAHAC NAVESU MIMO", "TAHAC NAVESU MIMOTARIFNI": Retezec = "TAHA|fffd| N|fffd|V|fffd|S|fffd| MIMOTARIFN|fffd|"
  Case "MHD": Retezec = "MHD"
  Case "A", "AUTOBUS", "BUS": Retezec = "AUTOBUS"
  Case "J", "TROLEJBUS": Retezec = "TROLEJBUS"
  Case "P", "PRIVES", "PRIPOJNE VOZIDLO": Retezec = "P|fffd||fffd|V|fffd|S"
  Case "PT", "NAVES": Retezec = "N|fffd|V|fffd|S"
  Case "TRZ", "TRAKTOR S RZ": Retezec = "TRAKTOR S RZ"
  Case "T", "TRAKTOR BEZ RZ": Retezec = "TRAKTOR BEZ RZ"
  Case "XRZ", "PRAC. STROJ S RZ", "PRACOVNI STROJ S RZ", "PRAC STROJ S RZ": Retezec = "PRACOVN|fffd| STROJ S RZ"
  Case "X", "PRAC. STROJ BEZ RZ", "PRACOVNI STROJ BEZ RZ", "PRAC STROJ BEZ RZ": Retezec = "PRACOVN|fffd| STROJ BEZ RZ"
  Case "VOZ", "VZV", "VYSOKOZDVIZNY VOZIK", "VYSOKOZDVIH": Retezec = "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K"
 End Select

 PrevodDruhVozidla = Retezec
End Function

'###############
'Prevod typu flotily
'###############
Function PrevodTypFlotily(Retezec) As String
 Select Case UCase(Trim(Retezec))
  Case "K", "KOMER|fffd|N|fffd|", "KOMERCNI": PrevodTypFlotily = "K"
  Case "KB", "KLASICK|fffd| BONUSOV|fffd|", "KLASICKA BONUSOVA": PrevodTypFlotily = "KB"
  Case Else: PrevodTypFlotily = Retezec
 End Select
End Function

'######################
'######################
'  ZBYTEK
'######################
'######################

'###############
'Prevod limitu POV - super/special
'###############
Function PrevodPovLimity(Retezec) As String
 Select Case Bez_znamenek_velka(UCase(Retezec))
  Case "SUPER", "N", "SUPER PLUS": PrevodPovLimity = "SUPER"
  Case "S", "SPECIAL", "SPECIAL PLUS": PrevodPovLimity = "SPECI|fffd|L"
  Case Else: PrevodPovLimity = Retezec
 End Select
End Function


'###############
'v ciselnem retezci pokud najde jiny znak nez cislo, tak vse za timto znakem zahodi (vcetne neciselneho znaku)
'###############
'##bylo pozadovano aby jakmile se objevi necisely znak, tak aby se od nej zbytek zahodil
'##casto se zadava 9/13 - devet mist a trinact mist po nejake sedackove uprave vozidla
'oriznuti o prebytecne mezery
'kontrola na pripustne znaky:znak po znaku - pokud se objevi znak mimo mnozinu, kontrola znaku se zastavi
'pokud z kontroly na pripustne znaky vzesel prazdny retezec
'  vrati se co do funkce prislo
'pokud z kontroly na pripustne znaky vzeslel neprazdny retezec
'  vrati se retezec z kontroly na pripustne znaky
Function PrevodOriznutiCisla(Retezec) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebyla regulerni hodnota, vrati se hodnota, ktera do funkce vstoupila
 Dim i As Byte, Retezec_ocisteny As String
 retezec_zaloha = Retezec

 For i = 1 To Len(Retezec) Step 1  'zpracovani radku
  Select Case Mid(Retezec, i, 1)
    Case "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"
      Retezec_ocisteny = Retezec_ocisteny & Mid(Retezec, i, 1)
    Case Else
      Exit For
  End Select
 Next i

 If Len(Retezec_ocisteny) = 0 Then
  PrevodOriznutiCisla = retezec_zaloha
 Else
  PrevodOriznutiCisla = Retezec_ocisteny
 End If

End Function
    
'###############
'Prevadi retezec na spravny tvar cisla smlouvy
'###############
'oriznuti o prebytecne mezery
'odstraneni nezadanych znaku
Function PrevodCisloSmlouva(Retezec) As String
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, ".", "")
Retezec = Replace(Retezec, "/", "")
PrevodCisloSmlouva = Retezec
End Function

'###############
'Prevadi retezec na spravny format cisla
'###############
Function PrevodCislo(Retezec As String) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni cislo, vrati se hodnota, ktera do funkce vstoupila
 Dim i As Integer 'pomocna pro cyklus
 retezec_zaloha = Retezec

 Retezec = Replace(Retezec, " ", "")
 Retezec = Replace(Retezec, ".", ",")

 For i = Len(Retezec) To 1 Step -1
  If IsNumeric(Mid(Retezec, i, 1)) Then Exit For
 Next i
 Retezec = Left(Retezec, i)
 If IsNumeric(Retezec) Then
  PrevodCislo = Round2(Retezec)
 Else
  PrevodCislo = retezec_zaloha
 End If
End Function

'###############
'Prevadi retezec na spravny format SPZ
'###############
Function PrevodSpz(Retezec) As String
Retezec = Bez_znamenek_velka(UCase(Retezec))
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, "/", "")

PrevodSpz = Retezec
End Function

'###############
'Prevadi retezec na spravny format VIN
'###############
Function PrevodVin(Retezec) As String
Retezec = UCase(Retezec)
Retezec = Replace(Retezec, "O", "0")
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, "/", "")
Retezec = Replace(Retezec, ".", "")
Retezec = Replace(Retezec, ",", "")
Retezec = Replace(Retezec, "%", "")
Retezec = Replace(Retezec, "?", "")

PrevodVin = Retezec
End Function

'###############
'Prevadi retezec na spravny format TP
'###############
'nahradi znaky, ktere v TP nemaji byt
'pokud je delka 8 znaku
'  nahradi v prvnich dvou znacich "0" za "O"
'  nahradi v poslednich osmi znacich "O" za "0"
'  vrati se sloucene casti 1 a cast2
Function PrevodTp(Retezec) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni TP, vrati se hodnota, ktera do funkce vstoupila
 Dim cast1 As String
 Dim cast2 As String

 Retezec = UCase(Retezec)
 Retezec = Replace(Retezec, " ", "")
 Retezec = Replace(Retezec, "-", "")
 Retezec = Replace(Retezec, "/", "")
 retezec_zaloha = Retezec
 If Len(Retezec) = 8 Then
  cast1 = Left(Retezec, 2)
  cast1 = Replace(cast1, "0", "O")
  cast2 = Right(Retezec, 6)
  cast2 = Replace(cast2, "O", "0")
  PrevodTp = cast1 & cast2
 Else
  PrevodTp = retezec_zaloha
 End If
End Function

'###############
'Prevadi retezec na spravny format PSC
'###############
Function PrevodPsc(Retezec As String) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni PSC, vrati se hodnota, ktera do funkce vstoupila
 retezec_zaloha = Retezec
 Retezec = Replace(Retezec, " ", "")
 If IsNumeric(Retezec) And Len(Retezec) = 5 Then
  PrevodPsc = Retezec
 Else
  PrevodPsc = retezec_zaloha
 End If
End Function

'###############
'Prevadi retezec na spravny format RC/ICA
'###############
'odstrani znaky: " ", ".", ",","-", "/", "\", "RC", "R|fffd|", "I|fffd|O", "ICO", "I|fffd|", "IC"
'pokud je retezec cislo a jeho delka je 8-10 znaku tak
'  vrati upravenou hodnotu
'  nastavi formatovani cisla bez des. casti a oddelovani tisicu
'pokud neni retezec cislo a jeho delka neni 8-10 znaku tak
'  vrati puvodni hodnotu
Function PrevodRcIco(Retezec As String) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni rc/ico, vrati se hodnota, ktera do funkce vstoupila

 retezec_zaloha = Retezec
 Retezec = UCase(Retezec)
 Retezec = Replace(Retezec, " ", "")
 Retezec = Replace(Retezec, ".", "")
 Retezec = Replace(Retezec, ",", "")
 Retezec = Replace(Retezec, "-", "")
 Retezec = Replace(Retezec, "/", "")
 Retezec = Replace(Retezec, "\", "")
 Retezec = Replace(Retezec, "RC", "")
 Retezec = Replace(Retezec, "R|fffd|", "")
 Retezec = Replace(Retezec, "I|fffd|O", "")
 Retezec = Replace(Retezec, "ICO", "")
 Retezec = Replace(Retezec, "I|fffd|", "")
 Retezec = Replace(Retezec, "IC", "")

 If IsNumeric(Retezec) And Len(Retezec) >= 8 And Len(Retezec) <= 10 Then
  PrevodRcIco = Retezec
 Else
  PrevodRcIco = retezec_zaloha
 End If
End Function

'###############
'Prevadi retezec na spravny format roku vyroby (RRRR)
'###############
Function PrevodRokVyroby(Retezec As String) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni rc/ico, vrati se hodnota, ktera do funkce vstoupila
 retezec_zaloha = Retezec
 Retezec = UCase(Retezec)

 If IsDate(Retezec) Then
  PrevodRokVyroby = Year(Retezec)
 Else
  PrevodRokVyroby = retezec_zaloha
 End If
End Function

'###############
'Prevadi retezec na spravny format data (dd.mm.rrrr)
'###############
Function PrevodDatum(Retezec As String) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni rc/ico, vrati se hodnota, ktera do funkce vstoupila
 retezec_zaloha = Retezec

 Retezec = UCase(Retezec)

 If IsDate(Retezec) Then
  PrevodDatum = Format(Retezec, "dd.mm.yyyy")
 Else
  PrevodDatum = retezec_zaloha
 End If
End Function

'###############
'Nastavuje na hodnotu N - v teto verzi neni kratkodobe pojisteni podporovano
'###############
'vrani hodnotu N
Function PrevodKratkodobaSmlouva(Retezec) As String
  PrevodKratkodobaSmlouva = "N"
End Function

'###############
'Prevadi retezec na spravny tvar specialni sazby
'###############
Function PrevodSpecialniSazba(Retezec) As String
 Select Case UCase(Retezec)
  Case "B": PrevodSpecialniSazba = "B"
  Case "R": PrevodSpecialniSazba = "R"
  Case "S": PrevodSpecialniSazba = "S"
  Case "H": PrevodSpecialniSazba = "H"
  Case "N": PrevodSpecialniSazba = "N"
  Case Else: PrevodSpecialniSazba = Retezec
 End Select
End Function

'###############
'Prevadi retezec na spravny tvar "A"/"N"
'###############
Function PrevodAnoNe(Retezec) As String
 Select Case UCase(Retezec)
  Case "A", "ANO": PrevodAnoNe = "A"
  Case "N", "NE": PrevodAnoNe = "N"
  Case Else: PrevodAnoNe = Retezec
 End Select
End Function
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
'###############
'vytvori v navigavi menu flotily
'###############
Private Sub Workbook_Activate()
 AddMenu 'AddFlotilyMenu
End Sub

'###############
'pri prepnuti na jiny soubor excelu odstranuje menu flotily
'###############
Private Sub Workbook_Deactivate()
On Error Resume Next
Application.CommandBars("Worksheet Menu Bar").Controls("&SUS Flotily").Delete

End Sub

'###############
'pred ulozenim skryje pracovni listy
'###############
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
 Call Zamkni_sktyj_vse

 Select Case ActiveSheet.Name
  Case "N|fffd|pov|fffd|da", "data", "Zm|fffd|ny", "Odhl|fffd|ky"
  Case Else
   Sheets("N|fffd|pov|fffd|da").Select
 End Select

 Call OdemkniS
 Sheets("data-export").Visible = False
 Call ZamkniS
End Sub

'###############
'pred otevrenim souboru
'###############
Private Sub Workbook_Open()
 Call Zamkni_sktyj_vse
 p_spravce_prihlasen = False
 Sheets("data").Select
 Cells(2, 1).Select
 Sheets("N|fffd|pov|fffd|da").Select
End Sub

'###############
'Zobrazeni napovedy
'###############
Private Sub Workbook_SheetFollowHyperlink(ByVal Sh As Object, ByVal Target As Hyperlink)
 Dim TextNapoveda As String
 If ActiveSheet.Name = "data" Then
'nacteni napovedy
  TextNapoveda = Sheets("napoveda").Range(Target.Range.Address).Value

'pro pripad, ze by se jednalo o dynamicky tvorenou napovedu
  Select Case TextNapoveda
   Case "dynamicka napoveda - druh vozidla"
    TextNapoveda = _
      "Druh vozidla" & vbLf & vbLf & _
      "O" & Chr(9) & " - osobn|fffd|" & vbLf & _
      "SAN" & Chr(9) & " - sanitn|fffd|" & vbLf & _
      "OB" & Chr(9) & " - obytn|fffd| automobil" & vbLf & _
      "D" & Chr(9) & " - u|fffd|itkov|fffd|" & vbLf & _
      "M" & Chr(9) & " - motocykl" & vbLf & _
      "N" & Chr(9) & " - n|fffd|kladn|fffd|" & vbLf & _
      "H" & Chr(9) & " - taha|fffd|" & vbLf & _
      "MHD" & Chr(9) & " - autobus MHD" & vbLf & _
      "A" & Chr(9) & " - autobus" & vbLf & _
      "J" & Chr(9) & " - trolejbus" & vbLf & _
      "P" & Chr(9) & " - p|fffd||fffd|v|fffd|s" & vbLf & _
      "PT" & Chr(9) & " - n|fffd|v|fffd|s" & vbLf & _
      "TRZ" & Chr(9) & " - traktor s RZ" & vbLf & _
      "T" & Chr(9) & " - traktor bez RZ" & vbLf & _
      "XRZ" & Chr(9) & " - pracovn|fffd| stroj s RZ" & vbLf & _
      "X" & Chr(9) & " - pracovn|fffd| stroj bez RZ" & vbLf & _
      "VOZ" & Chr(9) & " - vysokozdvi|fffd|n|fffd| voz|fffd|k"
   Case "dynamicka napoveda - typ flotily"
    TextNapoveda = _
      "Typ flotily" & vbLf & vbLf & _
      "K" & Chr(9) & " - klasick|fffd|" & vbLf & _
      "KB" & Chr(9) & " - klasick|fffd| bonusov|fffd|"
   Case "dynamicka napoveda - frekvence placeni"
    TextNapoveda = _
      "Frekvence poji|fffd|t|fffd|n|fffd|" & vbLf & vbLf & _
      "Vypl|fffd|ujte |fffd||fffd|slo frekvence" & vbLf & _
      "ro|fffd|n|fffd|" & Chr(9) & " - 1" & vbLf & _
      "pololetn|fffd|" & Chr(9) & " - 2" & vbLf & _
      "|fffd|tvrtletn|fffd|" & Chr(9) & " - 4" & vbLf & _
      "m|fffd|s|fffd||fffd|n|fffd|" & Chr(9) & " - 12"
   Case "dynamicka napoveda - bonus"
    TextNapoveda = _
      "Bonus/Malus (po|fffd|. m|fffd|s.)" & vbLf & vbLf & _
      "Po|fffd|et m|fffd|s|fffd|c|fffd| beze|fffd|kodn|fffd|ho pr|fffd|b|fffd|hu." & vbLf & vbLf & _
      "Uv|fffd|d|fffd|jte:" & vbLf & _
      "bonus - cel|fffd| kladn|fffd| |fffd||fffd|slo" & vbLf & _
      "malus - cel|fffd| z|fffd|porn|fffd| |fffd||fffd|slo" & vbLf & vbLf & _
      "120 a|fffd| 131 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-50%" & vbLf & _
      "108 a|fffd| 119 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-45%" & vbLf & _
      "96 a|fffd| 107 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-40%" & vbLf & _
      "84 a|fffd|   95 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-35%" & vbLf & _
      "72 a|fffd|   83 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-30%" & vbLf & _
      "60 a|fffd|   71 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-25%" & vbLf & _
      "48 a|fffd|   59 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-20%" & vbLf & _
      "36 a|fffd|   47 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-15%" & vbLf & _
      "24 a|fffd|   35 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-10%" & vbLf & _
      "12 a|fffd|   23 m|fffd|s|fffd|c|fffd|" & Chr(9) & "-5%" & vbLf & vbLf & _
      "z|fffd|kladn|fffd| pojistn|fffd|" & vbLf & _
      "0 a|fffd| 11 m|fffd|s|fffd|c|fffd|" & Chr(9) & "0%" & vbLf & vbLf & _
      "-1 a|fffd|  -12 m|fffd|s|fffd|c|fffd|" & Chr(9) & "+10%" & vbLf & _
      "-13 a|fffd| -24 m|fffd|s|fffd|c|fffd|" & Chr(9) & "+30%" & vbLf & _
      "-25 a|fffd| -36 m|fffd|s|fffd|c|fffd|" & Chr(9) & "+50%" & vbLf & _
      "-37 a|fffd| -48 m|fffd|s|fffd|c|fffd|" & Chr(9) & "+80%" & vbLf & _
      "-49 a|fffd| -60 m|fffd|s|fffd|c|fffd|" & Chr(9) & "+110%" & vbLf & _
      "-61 m|fffd|s|fffd|c|fffd| a m|fffd|n|fffd|" & Chr(9) & "+150%"
  End Select
  MsgBox (TextNapoveda)
 End If
End Sub
Attribute VB_Name = "WebServiceFces"
Option Explicit
Function processWebServices(webServiceName, methodName, paramsName, paramsValue) As String
Attribute processWebServices.VB_ProcData.VB_Invoke_Func = " \n14"
 Dim i As Long, request As MSXML2.XMLHTTP, msg As String, dom As MSXML2.DOMDocument, retur As MSXML2.IXMLDOMNode, SOAPParams As String
'nejdriv se pokusim stahnout certifikat
 If Not getCertificate Then
  MsgBox "Nepoda|fffd|ilo se st|fffd|hnout certifik|fffd|t pro komunikaci s CS."
  Exit Function
 End If

' vytvorim request
 Set request = New MSXML2.XMLHTTP
 request.Open "POST", WebSoubor(1)

' slozim SOAP zpravu
 For i = 0 To UBound(paramsName) - 1
  SOAPParams = SOAPParams + "<" + paramsName(i) + ">" + paramsValue(i) + "</" + paramsName(i) + ">"
 Next i

 msg = msg + "<SOAP-ENV:Envelope xmlns:SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/' xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' SOAP-ENV:encodingStyle='http://schemas.xmlsoap.org/soap/encoding/' xmlns:m='http://sus.ais-servis.cz'>"
 msg = msg + " <SOAP-ENV:Body>"
 msg = msg + "  <m:" + methodName + ">"
 msg = msg + SOAPParams
 msg = msg + "  </m:" + methodName + ">"
 msg = msg + " </SOAP-ENV:Body>"
 msg = msg + "</SOAP-ENV:Envelope>"

 request.setRequestHeader "SOAPAction", webServiceName
' vlozim SOAP zpravu do pozadavku
 request.send (msg)

 Set dom = New MSXML2.DOMDocument
 dom.Load request.responseXML

 Do While Len(dom.XML) = 0
  'excel je moc rychlej, musim pockat nez si stahne certifikat a response
  dom.Load request.responseXML
  DoEvents
 Loop

 Set retur = dom.getElementsByTagName("return").Item(0)
    
 processWebServices = retur.XML
End Function

Function getCertificate() As Boolean
Attribute getCertificate.VB_ProcData.VB_Invoke_Func = " \n14"
 Dim certificate As MSXML2.XMLHTTP

 On Error Resume Next
 If WebSoubor(1) = "chyba" Then
  getCertificate = False
  Exit Function
 End If

 Set certificate = New MSXML2.XMLHTTP
 certificate.Open "GET", WebSoubor(1)
 certificate.send
    
 Do While IsError(certificate.statusText)
  'excel je moc rychlej, musim pockat nez si stahne certifikat a response
  DoEvents
 Loop

 If certificate.statusText = "OK" Then
  getCertificate = True
 Else
  getCertificate = False
 End If
End Function

Function getRequest() As Object
Attribute getRequest.VB_ProcData.VB_Invoke_Func = " \n14"
Dim oHttp As Object
    
' Create an XMLHTTP object
On Error Resume Next
Set oHttp = CreateObject("MSXML2.XMLHTTP")
If Err.Number <> 0 Then
  Set oHttp = CreateObject("MSXML.XMLHTTPRequest")
End If

getRequest = oHttp
End Function
Attribute VB_Name = "ufExport"
Attribute VB_Base = "0{DC8AC154-5DBF-4F36-9C04-87D2DBDC6538}{2CD5749E-90F8-4615-9646-A09CAD606013}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim bResetUser As Boolean
Const BATCH_LINE_LIMIT As Long = 50000

Private Function checkLogin() As Boolean
 Dim rString As String
 Dim oResult As MSXML2.DOMDocument
 Dim result As Boolean
 Dim poleName(3) As String, poleValue(3) As String

 checkLogin = False
 On Error GoTo errHandler

 poleName(0) = "importerNum"
 poleName(1) = "importerLogin"
 poleName(2) = "importerPassword"

 poleValue(0) = txtSjedNum.Text
 poleValue(1) = txtLogin.Text
 poleValue(2) = txtPsw.Text

 clientNum = txtSjedNum.Text
 clientLogin = txtLogin.Text
 clientPsw = txtPsw.Text

 rString = processWebServices("urn:FleetImportWS", "checkUser", poleName, poleValue)

 If Len(Trim(rString)) > 0 Then
  Set oResult = New MSXML2.DOMDocument
  oResult.loadXML rString

  Select Case oResult.childNodes.Item(0).childNodes.Item(0).Text
   Case "1"    '1 |fffd| neplatn|fffd| p|fffd|ihl|fffd|en|fffd|
    MsgBox "Neplatn|fffd| sjednatelsk|fffd| |fffd||fffd|slo, p|fffd|ihla|fffd|ovac|fffd| jm|fffd|no nebo heslo."
    result = False
   Case "2"    '2 |fffd| platn|fffd| heslo do CS, ale u|fffd|ivatel nem|fffd| pr|fffd|vo exportovat
    MsgBox "U|fffd|ivatel nem|fffd| pr|fffd|vo exportovat data."
    result = False
   Case "3"    '3 |fffd| platn|fffd| heslo do CS, u|fffd|ivatel m|fffd| pr|fffd|vo exportovat
    result = True
  End Select

  clientAutorized = result
  checkLogin = result
 End If
 Exit Function

errHandler:
 MsgBox "Nepoda|fffd|ilo se nav|fffd|zat komunikaci s CS."
End Function

Private Sub cmdExport_Click()
 Dim result As Boolean
 Dim okType As Integer
 Dim Retezec As String
 Dim i As Long, j As Integer
 Dim msgCS As String, batchNum As String
 Dim poleName(9) As String, poleValue(9) As String
 Dim rString As String
 Dim oResult As MSXML2.DOMDocument

 'zkusim overit uzivatele v CS
 If Not checkLogin Then Exit Sub

 'provedu export dat do CS
 On Error GoTo errHandler

 With Worksheets("data-export")
  For i = c_pocatek_y_data_export To Pocet_radku - (c_pocatek_y_data - c_pocatek_y_data_export)
   For j = c_pocatek_x_data_export To c_pocet_slucovanych_dat
    Retezec = Retezec & .Cells(i, j) & "|||"
   Next j
   Retezec = Left(Retezec, Len(Retezec) - 3) & "#|#"
  Next i
  Retezec = Left(Retezec, Len(Retezec) - 3)
 End With

 msgCS = Retezec

 poleName(0) = "data"             'davka datovych vet pro smlouvy
 poleName(1) = "hash"             'hash davky pro overeni spravneho prenosu
 poleName(2) = "hip"              'cislo ramcove smlouvy. pokud toto cislo neexistuje, vytvori se
 poleName(3) = "batch"            'identifikace (cislo) davky. Pokud neni vyplneno, nebo je <=0, je vytvorena nova davka a jeji cislo se preda na vystupu
 poleName(4) = "format"           'identifikace formatu datove vety
 poleName(5) = "lastPiece"        '"1", pokud se jedna o posledni kus davky
 poleName(6) = "importerNum"      'cislo importujiciho sjednatele
 poleName(7) = "importerLogin"    'login importujiciho sjednatele
 poleName(8) = "importerPassword" 'heslo do CS importujiciho sjednatele

 poleValue(0) = msgCS
 poleValue(1) = ""
 poleValue(2) = Sheets("data").Cells(c_cislo_hip_y, c_cislo_hip_x).Value
 poleValue(3) = batchNum
 poleValue(4) = WebSoubor(2)
 poleValue(5) = "1"
 poleValue(6) = txtSjedNum.Text
 poleValue(7) = txtLogin.Text
 poleValue(8) = txtPsw.Text

 rString = processWebServices("urn:FleetImportWS", "saveFleetData", poleName, poleValue)

 Set oResult = New MSXML2.DOMDocument
 oResult.loadXML rString

 'provedu kontrolu zpracovani
 Select Case Trim(oResult.childNodes.Item(0).childNodes.Item(0).Text)
  Case "1"    '1 |fffd| datov|fffd| v|fffd|ta byla p|fffd|enesena a ulo|fffd|ena
   batchNum = oResult.childNodes.Item(0).childNodes.Item(1).Text
   result = True
   If okType = 0 Then okType = 1
  Case "2"    '2 |fffd| p|fffd|enos a ulo|fffd|en|fffd| se nezda|fffd|ilo
   MsgBox "P|fffd|enos dat se nezda|fffd|il, opakujte akci."
   result = False
  Case "3"    '3 |fffd| datov|fffd| v|fffd|ta byla p|fffd|enesena, ulo|fffd|ena a byla automaticky zalo|fffd|ena r|fffd|mcov|fffd| smlouva
   batchNum = oResult.childNodes.Item(0).childNodes.Item(1).Text
   result = True
   If okType = 0 Then okType = 2
  Case "4"    'v SUS existuje smlouva se stejn|fffd|m |fffd||fffd|slem jako je HIP, ale nen|fffd| r|fffd|mcovou smlouvou"
   MsgBox "HIP |fffd||fffd|slo smlouvy je v aplikaci SUS p|fffd|i|fffd|azeno smlouv|fffd|, kter|fffd| nen|fffd| r|fffd|mcovou smlouvou pro importov|fffd|n|fffd| flotil."
   result = False
 End Select

 Set oResult = Nothing

 If result Then
  Select Case okType
   Case 1
    MsgBox "Export dat byl |fffd|sp|fffd|n|fffd| dokon|fffd|en."
   Case 2
    MsgBox "Export dat byl |fffd|sp|fffd|n|fffd| dokon|fffd|en. R|fffd|mcov|fffd| smlouva byla automaticky zalo|fffd|ena."
  End Select
 End If
 ufExport.Hide
 Exit Sub

errHandler:
 MsgBox "Nepoda|fffd|ilo se nav|fffd|zat komunikaci s CS."
 ufExport.Hide
End Sub

Private Sub txtLogin_Change()
 Call resetClient
End Sub

Private Sub txtPsw_Change()
 Call resetClient
End Sub

Private Sub txtSjedNum_Change()
 Call resetClient
End Sub

Private Sub UserForm_Activate()
 ufExport.export_info_o_verzi = Sheets("sazebnik").Cells(c_info_o_verzi_y, c_info_o_verzi_x).Value
 bResetUser = False

 txtSjedNum.SetFocus
 
 bResetUser = True
End Sub

Private Function resetClient()
 If Not bResetUser Then Exit Function
 clientNum = ""
 clientLogin = ""
 clientPsw = ""
 clientAutorized = False
End Function

' InQuest injected base64 decoded content
' W*hq
' YjIZvx

INQUEST-PP=macro
