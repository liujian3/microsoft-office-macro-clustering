Attribute VB_Name = "Module1"

Public isValidateMandatory As String
Public isValidCountry As String
Public isValidState As String
Public isValidDistrict As String
Public isValidInvType As String
Public isAlphaNumeic As String
Public isAlphaNumeic1 As String
Public isIndianPincode As String
Public isForgienPincode As String
Public isValidFolioNumber As String
Public isValidDpIdClientIdAccountNo As String
Public isValidInvestorFirstName As String
Public isValidInvestotMiddleName As String
Public isValidInvestorLastName As String
Public isValidFatherHusbandFirstName As String
Public isValidFatherHusbandMiddleName As String
Public isValidFatherHusbandLastName As String
Public isNumeric1 As String

Public rowCount As Double
Public errorCounter  As Double
Public isPrefillClicked  As Boolean

Sub Validate()
    isValidateMandatory = ""
    isValidCountry = ""
    isValidState = ""
    isValidDistrict = ""
    isValidInvType = ""
    isValidAll = ""
    isIndianPincode = ""
    isForgienPincode = ""
    isValidFolioNumber = ""
    isValidDpIdClientIdAccountNo = ""
    isValidInvestorFirstName = ""
    isValidInvestotMiddleName = ""
    isValidInvestorLastName = ""
    isValidFatherHusbandFirstName = ""
    isValidFatherHusbandMiddleName = ""
    isValidFatherHusbandLastName = ""
    isAlphaNumeic = ""
    isAlphaNumeic1 = ""
    isNumeric1 = ""
    
    Call Remove_Spaces
    
    Sheets("Error").Unprotect ("pass")
    errorCounter = 1
    Sheets("Error").Cells.Clear
    rowCount = getRowCount()
    
    strCIN = Trim(Sheets("Investor Details").Range("B2").Text)
    strCompanyName = Trim(Sheets("Investor Details").Range("G2").Text)
    strDateOfAGM = Trim(Sheets("Investor Details").Range("L2").Text)
     
    If strCIN = "" Then
        MsgBox "Please enter CIN"
        Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=True
        Exit Sub
    ElseIf strCompanyName = "" Then
         MsgBox "Please Prefill Company Name"
         Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=True
         Exit Sub
    ElseIf strDateOfAGM = "" Then
         MsgBox "Please Enter AGM Date"
         Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=True
         Exit Sub
         
     End If
          
    If IsDate(strDateOfAGM) Then
        If (Len(strDateOfAGM) = 11) Then
        ff = Mid(UCase(strDateOfAGM), 4, 3)
        If ff = "JAN" Or ff = "FEB" Or ff = "MAR" Or ff = "APR" Or ff = "MAY" Or ff = "JUN" Or ff = "JUL" Or ff = "AUG" Or ff = "SEP" Or ff = "OCT" Or ff = "NOV" Or ff = "DEC" Then
            gg = InStr(1, strDateOfAGM, "-", vbTextCompare)
            hh = InStr(gg + 1, strDateOfAGM, "-", vbTextCompare)
            ii = Mid(strDateOfAGM, hh + 1, Len(strDateOfAGM) - hh)
            If (Len(ii) <> 4) Then
                MsgBox "Invalid date format for AGM Date"
                Exit Sub
            End If
        Else
            MsgBox "Invalid date format for AGM Date"
            Exit Sub
        End If
    Else
        MsgBox "Invalid date format for AGM Date"
        Exit Sub
    End If
    Else
        MsgBox "Invalid date format for AGM Date"
        Exit Sub
    End If
    
    
     
     
    
    Call FindFirstBlankRow
    
    errorCounter = 1
    Sheets("Error").Cells.Clear
    rowCount = getRowCount()
    
    sumCalculate = Calculate()
    isValidAll = ValidateAll()
    
    If ((isValidAll = "Stop") And (errorCounter < 65537)) Then
        Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=True
        MsgBox "Error! Please refer Error"
        'Sheets("Error").Protect ("pass")
        Exit Sub
    ElseIf (errorCounter >= 65537) Then
        MsgBox "Invalid data present at row no::" & rowCount & " .Kindly refer ErrorSheet", vbOKOnly, "Error! Please refer Error"
        Exit Sub
    End If
    
    Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=True
End Sub

Function Calculate()
    Dim Sumact As Range
    'Workbooks("InvestorDetailExcel.xls").Sheets("Investor Details").Unprotect "pass"
    On Error GoTo ErrHandlerCalc
    Sheets("Investor Details").Unprotect "pass"
    'MsgBox rowCount
    
    'ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row
    Sheets("Investor Details").Protect UserInterfaceOnly:=True
    Set Sumact = Sheets(2).Range("A1")
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Amount for unclaimed and unpaid dividend", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(4, 5).Value = sumdiv
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Amount for matured deposits", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(6, 5).Value = sumdiv
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Amount for matured debentures", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(8, 5).Value = sumdiv
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Amount for application money due for refund", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(10, 5).Value = sumdiv
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Interest on matured debentures", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(4, 12).Value = sumdiv
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Interest on matured deposits", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(6, 12).Value = sumdiv
  
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Interest on application money due for refund", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(8, 12).Value = sumdiv
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Redemption amount of preference shares", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(10, 12).Value = sumdiv
    
    sumdiv = Application.SumIf(Range("N15:N" & rowCount), "Sales proceed for fractional shares", Range("O15:O" & rowCount))
    Sheets("Investor Details").Cells(12, 5).Value = sumdiv
    
    'Workbooks("InvestorDetailExcel.xls").
    Sheets("Investor Details").Protect "pass"
    
    Sheets("Investor Details").Protect UserInterfaceOnly:=False
    Exit Function
ErrHandlerCalc:
        Sheets("Investor Details").Protect "pass"
        Sheets("Investor Details").Protect UserInterfaceOnly:=False
End Function

Sub Prefill_WS1()

Sheets("Investor Details").Unprotect "pass"
    Dim xmlhtp As New MSXML2.XMLHTTP60
    Dim xmlDoc As New DOMDocument60
    Dim sURL As String
    Dim sEnv As String
    
    Dim strCIN As String
    Dim strCompanyName As String
    
    strCIN = Range("B2").Text
    
    strVersion = Trim(Sheets("Sheet3").Range("AP1").Text)
    strCIN = Trim(Sheets("Investor Details").Range("B2").Text)

    If strCIN = "" Then
        Sheets("Investor Details").Range("G2").Value = " "
        MsgBox "Please enter CIN"
        Sheets("Investor Details").Protect "pass"
        Exit Sub
    End If
  
    sURL = "http://www.mca.gov.in/FOServicesWeb/NCAPrefillService"
     
    sEnv = "<?xml version=""1.0"" encoding=""utf-8""?>"
    sEnv = sEnv & "<soap:Envelope xmlns:soap=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:wsdl=""http://ncaprifill.org/wsdl"" >"
    sEnv = sEnv & "  <soap:Body>"
    sEnv = sEnv & "    <getNCAPrefillDetails> "
    sEnv = sEnv & "       <NCAPrefillProcessorDTO>"
    sEnv = sEnv & "             <callID>" & "CIN" & "</callID>"
    sEnv = sEnv & "             <cin>" & strCIN & "</cin>"
    sEnv = sEnv & "             <formID>" & "ZIE2" & "</formID>"
    sEnv = sEnv & "             <sid>" & "NCA" & "</sid>"
    sEnv = sEnv & "       </NCAPrefillProcessorDTO>"
    sEnv = sEnv & "    </getNCAPrefillDetails>"
    sEnv = sEnv & "  </soap:Body>"
    sEnv = sEnv & "</soap:Envelope>"
     
    With xmlhtp
        .Open "post", sURL, False
        .setRequestHeader "Host", "http://www.mca.gov.in/FOServicesWeb/NCAPrefillService"
        .setRequestHeader "Content-Type", "text/xml; charset=utf-8"
        .setRequestHeader "soapAction", "http://www.mca.gov.in/FOServicesWeb/NCAPrefillService/getNCAPrefillDetails"
        .setRequestHeader "Accept-encoding", "zip"
        .send sEnv
        xmlDoc.LoadXML .responseText
    End With
    
    strCompanyName = xmlDoc.SelectSingleNode("//companyOrg1").Text
     
    If (strCompanyName = "") Then
        Sheets("Investor Details").Unprotect "pass"
        Sheets("Investor Details").Range("G2").Value = ""
        Sheets("Investor Details").Range("B2").Value = ""
        Sheets("Investor Details").Protect "pass"
        MsgBox "Invalid CIN/BCIN"
    End If

    If (strCompanyName <> "") Then
        Sheets("Investor Details").Unprotect "pass"
        Sheets("Investor Details").Range("G2").Value = strCompanyName
        Sheets("Investor Details").Protect "pass"
    End If
End Sub



Sub Remove_Spaces()
    'MACROS BY EXCELZOOM.COM
    Dim rangeSheet As Range
    Dim rangeText As Range
    
    'Set rangeSheet = Cells.Range("A15:O65536")
    Sheets("Investor Details").Unprotect "pass"
    On Error GoTo RS
    Set rangeText = Range("A15:O65536").SpecialCells( _
    xlCellTypeConstants, _
    xlTextValues)
    For Each rangeSheet In rangeText
        If Trim(rangeSheet.Value) = "" Then
            rangeSheet.ClearContents
        End If
    Next
RS:
    Set rangeText = Nothing
    Set rangeSheet = Nothing
    Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=True
End Sub

Function ValidateAll()

    Dim ColNumber(15) As Double
    ColNumber(0) = 1
    ColNumber(1) = 2
    ColNumber(2) = 3
    ColNumber(3) = 4
    ColNumber(4) = 5
    ColNumber(5) = 6
    ColNumber(6) = 7
    ColNumber(7) = 8
    ColNumber(8) = 9
    ColNumber(9) = 10
    ColNumber(10) = 11
    ColNumber(11) = 12
    ColNumber(12) = 13
    ColNumber(13) = 14
    ColNumber(14) = 15
    ColNumber(15) = 16
    
    Dim colCounter As Double
    Dim rowCounter As Double

    DataRow = 15
    'MsgBox "RowCount Value ::::" & rowCount
    For rowCounter = DataRow To rowCount
        If (errorCounter >= 65537) Then
            ValidateAll = "Stop"
            Exit Function
        End If
        For colCounter = LBound(ColNumber) To UBound(ColNumber)
            'If ((colCounter = 1) Or (colCounter = 4) Or (colCounter = 9) Or (colCounter = 10)) Then
            If ((colCounter = 1) Or (colCounter = 4) Or (colCounter = 10)) Then
                fieldText = Sheets("Investor Details").Cells(14, ColNumber(colCounter)).Text
                fieldValue = Trim(Worksheets("Investor Details").Cells(rowCounter, ColNumber(colCounter)))
                If (colCounter = 1) Then
                    IsValid = validateInvestorMiddleNameLength("Investor Details", rowCounter, ColNumber(colCounter))
                End If
                If (colCounter = 4) Then
                    IsValid = validateFatherHusbandMiddleNameLength("Investor Details", rowCounter, ColNumber(colCounter))
                End If
                If (fieldValue <> "" And colCounter <> 10) Then
                    IsValid = alphaNumeric("Investor Details", rowCounter, ColNumber(colCounter))
                ElseIf (fieldValue <> "" And colCounter = 10) Then
                    countrynm = Trim(Worksheets("Investor Details").Cells(rowCounter, 8))
                    If (UCase(countrynm) = "INDIA") Then
                        IsValid = indianPincode("Investor Details", rowCounter, ColNumber(colCounter))
                        flag = IsValid
                    Else
                        IsValid = foriegnPincode("Investor Details", rowCounter, ColNumber(colCounter))
                        flag = IsValid
                    End If
                End If
            Else
                IsValid = validateMandatory("Investor Details", rowCounter, ColNumber(colCounter))
            End If
        Next colCounter
    Next rowCounter

    If IsValid = "Stop" Or flag = "Stop" Then
        ValidateAll = "Stop"
    End If
End Function

Public Sub FindFirstBlankRow()
   Dim LastRowWithValue  As Long
   LastRowWithValue = Cells.Find("*", SearchDirection:=xlPrevious).Row
   For CurrRow = 15 To LastRowWithValue
        If IsBlankRow(CurrRow) Then
            With Rows(CurrRow & ":" & LastRowWithValue)
                msg = "Blank Rows Found.Do you want to Clear Rows from row no. " & CurrRow & " to " & LastRowWithValue & "  ???"
                resp = MsgBox(msg, vbQuestion + vbOKCancel, "Deletion Confirmation")
                If resp = vbOK Then .ClearContents
                Exit Sub
            End With
            Exit Sub
        End If
    Next CurrRow
End Sub

Public Function IsBlankRow(CurrRow) As Boolean
    On Error GoTo IsBlank
    x = Rows(CurrRow & ":" & CurrRow).SpecialCells(xlCellTypeConstants, 23).Count
    IsBlankRow = False
    Exit Function
IsBlank:
        IsBlankRow = True
End Function

Function validateMandatory(SheetData As String, rowCounter As Double, colCounter As Double)
    Dim errMsg As String
    Dim flag As String
    Dim fieldText As String
    Dim fieldValue As String
    
    On Error Resume Next
    
    fieldText = Sheets(SheetData).Cells(14, colCounter).Text
    fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
    
    If fieldValue = "" Then
        If (colCounter = 1) Then
            If (Trim(Worksheets(SheetData).Cells(rowCounter, 3))) = "" Then
                errMsg = "Error at line number " & rowCounter & " column 1 or 3 (Investor First or Last Name)  " & " : Mandatory Field"
                If errorCounter >= 65537 Then
                    Exit Function
                End If
                Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                errorCounter = errorCounter + 1
                flag = "Stop"
            End If
        ElseIf (colCounter = 3) Then
        ElseIf (colCounter = 4) Then
            If (Trim(Worksheets(SheetData).Cells(rowCounter, 6))) = "" Then
                errMsg = "Error at line number " & rowCounter & " column 4 or 6 (Father/Husband's First or Last Name)  " & " : Mandatory Field"
                If errorCounter >= 65537 Then
                    Exit Function
                End If
                Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                errorCounter = errorCounter + 1
                flag = "Stop"
            End If
        ElseIf (colCounter = 6) Then
        ElseIf (colCounter = 10) Then
            If (Trim(Worksheets(SheetData).Cells(rowCounter, 11))) = "" Then
                errMsg = "Error at line number " & rowCounter & " column 10 or 11 either District or Pincode is mandatory"
                If errorCounter >= 65537 Then
                    Exit Function
                End If
                Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                errorCounter = errorCounter + 1
                flag = "Stop"
            End If
        ElseIf (colCounter = 11) Then
        ElseIf (colCounter = 12) Then
            If (Trim(Worksheets(SheetData).Cells(rowCounter, 12))) = "" Then
                If (Trim(Worksheets(SheetData).Cells(rowCounter, 13))) = "" Then
                    errMsg = "Error at line number " & rowCounter & " Column " & colCounter & "  Either Folio Number of Securities or DP Id-Client Id Accout Number is mandatory"
                    If errorCounter >= 65537 Then
                        Exit Function
                    End If
                    Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                    errorCounter = errorCounter + 1
                    flag = "Stop"
                End If
            End If
        ElseIf (colCounter = 13) Then
            If (Trim(Worksheets(SheetData).Cells(rowCounter, 13))) = "" Then
                If (Trim(Worksheets(SheetData).Cells(rowCounter, 12))) = "" Then
                    errMsg = "Error at line number " & rowCounter & " Column " & colCounter & "  Either Folio Number of Securities or DP Id-Client Id Accout Number is mandatory"
                    If errorCounter >= 65537 Then
                        Exit Function
                    End If
                    Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                    errorCounter = errorCounter + 1
                    flag = "Stop"
                End If
            End If
        Else
            On Error GoTo 0
            errMsg = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Mandatory Field"
            If errorCounter >= 65537 Then
                Exit Function
            End If
            Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
            errorCounter = errorCounter + 1
            flag = "Stop"
        End If
    Else
        If (colCounter = 1 Or colCounter = 3 Or colCounter = 4 Or colCounter = 6) Then
            IsValid = alphaNumeric("Investor Details", rowCounter, colCounter)
        End If
        If (colCounter = 12) Then
            IsValid = alphaNumeric("Investor Details", rowCounter, colCounter)
        End If
        If (colCounter = 13) Then
            IsValid = alphaNumeric1("Investor Details", rowCounter, colCounter)
        End If
        If (colCounter = 15) Then
            IsValid = Numeric("Investor Details", rowCounter, colCounter)
        End If
        'For Country
        If (colCounter = 8) Then
            IsValid = validateCountry("Investor Details", rowCounter, colCounter, "Sheet3", "A2")
        End If
        'For FolioNo
        If (colCounter = 12) Then
            'IsValid = validFolioNO("Investor Details", rowCounter, colCounter)
        End If
        'For DpIdClientIdAccountNo
        If (colCounter = 13) Then
            IsValid = validDpIdClientIdAccountNo("Investor Details", rowCounter, colCounter)
        End If
        'For State
        If (colCounter = 9) Then
            IsValid = validateState("Investor Details", rowCounter, colCounter, "Sheet3", "B2")
            districtName = Worksheets(SheetData).Cells(rowCounter, 10)
            If (IsValid <> "Stop" And districtName <> "") Then
                isValidDistrict = validateDistrict("Investor Details", rowCounter, 10, "Sheet3")
            End If
        End If
        'For Character Length
        If (colCounter = 1) Then
            IsValid = validateInvestorFirstNameLength("Investor Details", rowCounter, colCounter)
        End If
        If (colCounter = 3) Then
            IsValid = validateInvestorLastNameLength("Investor Details", rowCounter, colCounter)
        End If
        If (colCounter = 4) Then
            IsValid = validateFatherHusbandFirstNameLength("Investor Details", rowCounter, colCounter)
        End If
        If (colCounter = 6) Then
            IsValid = validateFatherHusbandLastNameLength("Investor Details", rowCounter, colCounter)
        End If
        'For Investment Type
        If (colCounter = 14) Then
            IsValid = validateInvType("Investor Details", rowCounter, colCounter, "Sheet3", "InvestmentType")
        End If
        
        'For Proposed date
        If (colCounter = 16) Then
            If IsDate(fieldValue) Then
                cc = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
                If (Len(cc) = 11) Then
                    ff = Mid(UCase(cc), 4, 3)
                    If ff = "JAN" Or ff = "FEB" Or ff = "MAR" Or ff = "APR" Or ff = "MAY" Or ff = "JUN" Or ff = "JUL" Or ff = "AUG" Or ff = "SEP" Or ff = "OCT" Or ff = "NOV" Or ff = "DEC" Then
                       ' prop_date_of_transfer = Worksheets("Investor Details").Range("L2").Value
                        'currentDate = prop_date_of_transfer
                        'currentDate = Date
                        gg = InStr(1, cc, "-", vbTextCompare)
                        hh = InStr(gg + 1, cc, "-", vbTextCompare)
                        ii = Mid(cc, hh + 1, Len(cc) - hh)
                        If (Len(ii) <> 4) Then
                            errMsg = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Invalid Date Format"
                            If errorCounter >= 65537 Then
                                Exit Function
                            End If
                            Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                            errorCounter = errorCounter + 1
                            flag = "Stop"
                        End If
                        If (DateValue(fieldValue) < DateValue(Now)) Then
                            errMsg = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : should be greater than system date."
                            If errorCounter >= 65537 Then
                                Exit Function
                            End If
                            Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                            errorCounter = errorCounter + 1
                            flag = "Stop"
                        End If
                        If (DateValue(fieldValue) = DateValue(Now)) Then
                            errMsg = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : should be greater than system date."
                            If errorCounter >= 65537 Then
                                Exit Function
                            End If
                            Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                            errorCounter = errorCounter + 1
                            flag = "Stop"
                        End If
                    Else
                        errMsg = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Invalid Date Format"
                        If errorCounter >= 65537 Then
                            Exit Function
                        End If
                        Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                        errorCounter = errorCounter + 1
                        flag = "Stop"
                    End If
                Else
                    errMsg = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Invalid Date Format"
                    If errorCounter >= 65537 Then
                        Exit Function
                    End If
                    Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                    errorCounter = errorCounter + 1
                    flag = "Stop"
                End If
            Else
                errMsg = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Invalid Date"
                If errorCounter >= 65537 Then
                        Exit Function
                End If
                Worksheets("Error").Cells(errorCounter, 1).Value = errMsg
                errorCounter = errorCounter + 1
                flag = "Stop"
            End If
        End If
    End If
    If flag = "Stop" Or isValidCountry = "Stop" Or isValidDistrict = "Stop" Or isValidState = "Stop" Or isValidInvType = "Stop" Or isAlphaNumeic = "Stop" Or isAlphaNumeic1 = "Stop" Or isNumeric1 = "Stop" Or isIndianPincode = "Stop" Or isForiegnPincode = "Stop" Or isValidFolioNumber = "Stop" Or isValidInvestorFirstName = "Stop" Or isValidInvestorMiddleName = "Stop" Or isValidInvestorLastName = "Stop" Or isValidFatherHusbandFirstName = "Stop" Or isValidFatherHusbandMiddleName = "Stop" Or isValidFatherHusbandLastName = "Stop" Or isValidDpIdClientIdAccountNo = "Stop" Then
        isValidateMandatory = "Stop"
    End If
    If isValidateMandatory = "Stop" Then
        validateMandatory = "Stop"
    End If
End Function

Function validateCountry(SheetData As String, rowCounter As Double, colCounter As Double, SheetList As String, DataList As String)
    ListRow = Range(DataList).Row
    ListCol = Range(DataList).Column

fieldText = Sheets(SheetData).Cells(14, colCounter).Text
  
On Error Resume Next
        
    countryName = Worksheets(SheetData).Cells(rowCounter, colCounter)
    conNameChk = Application.Match(countryName, Worksheets("Sheet3").Range("A1:A248"), 0)
        
        If IsError(conNameChk) Then
           On Error GoTo 0
           strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Invalid Country"
           If errorCounter >= 65537 Then
                    Exit Function
           End If
           Worksheets("Error").Cells(errorCounter, 1).Value = strName
           errorCounter = errorCounter + 1
           flag = "Stop"
                
        End If
        
    If flag = "Stop" Then
        isValidCountry = "Stop"
    End If
    
    If isValidCountry = "Stop" Then
        validateCountry = "Stop"
    End If

End Function

Function validateState(SheetData As String, rowCounter As Double, colCounter As Double, SheetList As String, DataList As String)

ListRow = Range(DataList).Row
ListCol = Range(DataList).Column

fieldText = Sheets(SheetData).Cells(14, colCounter).Text
  
On Error Resume Next

countryName = Worksheets(SheetData).Cells(rowCounter, colCounter - 1)
stateName = Worksheets(SheetData).Cells(rowCounter, colCounter)

stateNameChk = Application.Match(stateName, Worksheets("Sheet3").Range("B2:B37"), 0)

If IsError(stateNameChk) Then

    If stateName = "NA" And countryName <> "INDIA" Then
    
        countryMatch = Application.Match(countryName, Worksheets("Sheet3").Range("A1:A248"), 0)
        
        If IsError(countryMatch) Then 'stateName=NA and CountryName=invalid
            On Error GoTo 0
            strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Incorrect Country State Mapping. Please select an option from the drop-down"
            If errorCounter >= 65537 Then
                    Exit Function
            End If
            Worksheets("Error").Cells(errorCounter, 1).Value = strName
            errorCounter = errorCounter + 1
            flag = "Stop"
        End If
        
     Else '(stateName = NA and CountryName = INDIA) OR stateName = invalid and CountryName = 'INDIA'
            strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Incorrect Country State Mapping. Please select an option from the drop-down"
            If errorCounter >= 65537 Then
                    Exit Function
            End If
            Worksheets("Error").Cells(errorCounter, 1).Value = strName
            errorCounter = errorCounter + 1
            flag = "Stop"
    End If
         
Else 'stateName = valid and CountryName <> India

    If UCase(countryName) <> "INDIA" Then
      strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Incorrect Country State Mapping. Please select an option from the drop-down"
      If errorCounter >= 65537 Then
                    Exit Function
      End If
      Worksheets("Error").Cells(errorCounter, 1).Value = strName
      errorCounter = errorCounter + 1
      flag = "Stop"
    End If
    
End If

  If flag = "Stop" Then
        isValidState = "Stop"
  End If
  
  If isValidState = "Stop" Then
        validateState = "Stop"
  End If

'Next Counter
End Function


Function validateInvType(SheetData As String, rowCounter As Double, colCounter As Double, SheetList As String, DataList As String)

ListRow = Range(DataList).Row
ListCol = Range(DataList).Column

fieldText = Sheets(SheetData).Cells(14, colCounter).Text
  
On Error Resume Next
        
    invType = Worksheets(SheetData).Cells(rowCounter, colCounter)
    invTypeChk = Application.Match(invType, Worksheets("Sheet3").Range("AN2:AN10"), 0)
        
        If IsError(invTypeChk) Then
           On Error GoTo 0
                                    
           strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldText & ")" & " : Invalid Investment Type"
           If errorCounter >= 65537 Then
                    Exit Function
           End If
           Worksheets("Error").Cells(errorCounter, 1).Value = strName
           errorCounter = errorCounter + 1
           flag = "Stop"
                
        End If
        
    If flag = "Stop" Then
        isValidInvType = "Stop"
    End If
    
  
  If isValidInvType = "Stop" Then
    validateInvType = "Stop"
  End If

End Function

Function getRowCount() As Double

Dim rowColumn1 As Double
Dim rowColumn3 As Double
Dim rowColumn4 As Double
Dim rowColumn6 As Double
Dim counter As Double

rowColumn1 = ActiveSheet.Cells(Rows.Count, 1).End(xlUp).Row
rowColumn2 = ActiveSheet.Cells(Rows.Count, 2).End(xlUp).Row
rowColumn3 = ActiveSheet.Cells(Rows.Count, 3).End(xlUp).Row
rowColumn4 = ActiveSheet.Cells(Rows.Count, 4).End(xlUp).Row
rowColumn5 = ActiveSheet.Cells(Rows.Count, 5).End(xlUp).Row
rowColumn6 = ActiveSheet.Cells(Rows.Count, 6).End(xlUp).Row
rowColumn7 = ActiveSheet.Cells(Rows.Count, 7).End(xlUp).Row
rowColumn8 = ActiveSheet.Cells(Rows.Count, 8).End(xlUp).Row
rowColumn9 = ActiveSheet.Cells(Rows.Count, 9).End(xlUp).Row
rowColumn10 = ActiveSheet.Cells(Rows.Count, 10).End(xlUp).Row
rowColumn11 = ActiveSheet.Cells(Rows.Count, 11).End(xlUp).Row
rowColumn12 = ActiveSheet.Cells(Rows.Count, 12).End(xlUp).Row
rowColumn13 = ActiveSheet.Cells(Rows.Count, 13).End(xlUp).Row
rowColumn14 = ActiveSheet.Cells(Rows.Count, 14).End(xlUp).Row
rowColumn15 = ActiveSheet.Cells(Rows.Count, 15).End(xlUp).Row

'MsgBox "rowColumn11: rowColumn11 value is " & rowColumn11

 If ((rowColumn1 >= rowColumn2) And (rowColumn1 >= rowColumn3) And (rowColumn1 >= rowColumn4) And (rowColumn1 >= rowColumn5) And (rowColumn1 >= rowColumn6) And (rowColumn1 >= rowColumn7) And (rowColumn1 >= rowColumn8) And (rowColumn1 >= rowColumn9) And (rowColumn1 >= rowColumn10) And (rowColumn1 >= rowColumn11) And (rowColumn1 >= rowColumn12) And (rowColumn1 >= rowColumn13) And (rowColumn1 >= rowColumn14) And (rowColumn1 >= rowColumn15)) Then
    getRowCount = rowColumn1
ElseIf ((rowColumn2 >= rowColumn1) And (rowColumn2 >= rowColumn3) And (rowColumn2 >= rowColumn4) And (rowColumn2 >= rowColumn5) And (rowColumn2 >= rowColumn6) And (rowColumn2 >= rowColumn7) And (rowColumn2 >= rowColumn8) And (rowColumn2 >= rowColumn9) And (rowColumn2 >= rowColumn10) And (rowColumn2 >= rowColumn11) And (rowColumn2 >= rowColumn12) And (rowColumn2 >= rowColumn13) And (rowColumn2 >= rowColumn14) And (rowColumn2 >= rowColumn15)) Then
    getRowCount = rowColumn2
ElseIf ((rowColumn3 >= rowColumn1) And (rowColumn3 >= rowColumn2) And (rowColumn3 >= rowColumn4) And (rowColumn3 >= rowColumn5) And (rowColumn3 >= rowColumn6) And (rowColumn3 >= rowColumn7) And (rowColumn3 >= rowColumn8) And (rowColumn3 >= rowColumn9) And (rowColumn3 >= rowColumn10) And (rowColumn3 >= rowColumn11) And (rowColumn3 >= rowColumn12) And (rowColumn3 >= rowColumn13) And (rowColumn3 >= rowColumn14) And (rowColumn3 >= rowColumn15)) Then
    getRowCount = rowColumn3
ElseIf ((rowColumn4 >= rowColumn1) And (rowColumn4 >= rowColumn2) And (rowColumn4 >= rowColumn3) And (rowColumn4 >= rowColumn5) And (rowColumn4 >= rowColumn6) And (rowColumn4 >= rowColumn7) And (rowColumn4 >= rowColumn8) And (rowColumn4 >= rowColumn9) And (rowColumn4 >= rowColumn10) And (rowColumn4 >= rowColumn11) And (rowColumn4 >= rowColumn12) And (rowColumn4 >= rowColumn13) And (rowColumn4 >= rowColumn14) And (rowColumn4 >= rowColumn15)) Then
    getRowCount = rowColumn4
ElseIf ((rowColumn5 >= rowColumn1) And (rowColumn5 >= rowColumn2) And (rowColumn5 >= rowColumn3) And (rowColumn5 >= rowColumn4) And (rowColumn5 >= rowColumn6) And (rowColumn5 >= rowColumn7) And (rowColumn5 >= rowColumn8) And (rowColumn5 >= rowColumn9) And (rowColumn5 >= rowColumn10) And (rowColumn5 >= rowColumn11) And (rowColumn5 >= rowColumn12) And (rowColumn5 >= rowColumn13) And (rowColumn5 >= rowColumn14) And (rowColumn5 >= rowColumn15)) Then
    getRowCount = rowColumn5
ElseIf ((rowColumn6 >= rowColumn1) And (rowColumn6 >= rowColumn2) And (rowColumn6 >= rowColumn3) And (rowColumn6 >= rowColumn4) And (rowColumn6 >= rowColumn5) And (rowColumn6 >= rowColumn7) And (rowColumn6 >= rowColumn8) And (rowColumn6 >= rowColumn9) And (rowColumn6 >= rowColumn10) And (rowColumn6 >= rowColumn11) And (rowColumn6 >= rowColumn12) And (rowColumn6 >= rowColumn13) And (rowColumn6 >= rowColumn14) And (rowColumn6 >= rowColumn15)) Then
    getRowCount = rowColumn6
ElseIf ((rowColumn7 >= rowColumn1) And (rowColumn7 >= rowColumn2) And (rowColumn7 >= rowColumn3) And (rowColumn7 >= rowColumn4) And (rowColumn7 >= rowColumn5) And (rowColumn7 >= rowColumn6) And (rowColumn7 >= rowColumn8) And (rowColumn7 >= rowColumn9) And (rowColumn7 >= rowColumn10) And (rowColumn7 >= rowColumn11) And (rowColumn7 >= rowColumn12) And (rowColumn7 >= rowColumn13) And (rowColumn7 >= rowColumn14) And (rowColumn7 >= rowColumn15)) Then
    getRowCount = rowColumn7
ElseIf ((rowColumn8 >= rowColumn1) And (rowColumn8 >= rowColumn2) And (rowColumn8 >= rowColumn3) And (rowColumn8 >= rowColumn4) And (rowColumn8 >= rowColumn5) And (rowColumn8 >= rowColumn6) And (rowColumn8 >= rowColumn7) And (rowColumn8 >= rowColumn9) And (rowColumn8 >= rowColumn10) And (rowColumn8 >= rowColumn11) And (rowColumn8 >= rowColumn12) And (rowColumn8 >= rowColumn13) And (rowColumn8 >= rowColumn14) And (rowColumn8 >= rowColumn15)) Then
    getRowCount = rowColumn8
ElseIf ((rowColumn9 >= rowColumn1) And (rowColumn9 >= rowColumn2) And (rowColumn9 >= rowColumn3) And (rowColumn9 >= rowColumn4) And (rowColumn9 >= rowColumn5) And (rowColumn9 >= rowColumn6) And (rowColumn9 >= rowColumn7) And (rowColumn9 >= rowColumn8) And (rowColumn9 >= rowColumn10) And (rowColumn9 >= rowColumn11) And (rowColumn9 >= rowColumn12) And (rowColumn9 >= rowColumn13) And (rowColumn9 >= rowColumn14) And (rowColumn9 >= rowColumn15)) Then
    getRowCount = rowColumn9
ElseIf ((rowColumn10 >= rowColumn1) And (rowColumn10 >= rowColumn2) And (rowColumn10 >= rowColumn3) And (rowColumn10 >= rowColumn4) And (rowColumn10 >= rowColumn5) And (rowColumn10 >= rowColumn6) And (rowColumn10 >= rowColumn7) And (rowColumn10 >= rowColumn8) And (rowColumn10 >= rowColumn9) And (rowColumn10 >= rowColumn11) And (rowColumn10 >= rowColumn12) And (rowColumn10 >= rowColumn13) And (rowColumn10 >= rowColumn14) And (rowColumn10 >= rowColumn15)) Then
    getRowCount = rowColumn10
ElseIf ((rowColumn11 >= rowColumn1) And (rowColumn11 >= rowColumn2) And (rowColumn11 >= rowColumn3) And (rowColumn11 >= rowColumn4) And (rowColumn11 >= rowColumn5) And (rowColumn11 >= rowColumn6) And (rowColumn11 >= rowColumn7) And (rowColumn11 >= rowColumn8) And (rowColumn11 >= rowColumn9) And (rowColumn11 >= rowColumn10) And (rowColumn11 >= rowColumn12) And (rowColumn11 >= rowColumn13) And (rowColumn11 >= rowColumn14) And (rowColumn11 >= rowColumn15)) Then
    getRowCount = rowColumn11
ElseIf ((rowColumn12 >= rowColumn1) And (rowColumn12 >= rowColumn2) And (rowColumn12 >= rowColumn3) And (rowColumn12 >= rowColumn4) And (rowColumn12 >= rowColumn5) And (rowColumn12 >= rowColumn6) And (rowColumn12 >= rowColumn7) And (rowColumn12 >= rowColumn8) And (rowColumn12 >= rowColumn9) And (rowColumn12 >= rowColumn10) And (rowColumn12 >= rowColumn11) And (rowColumn12 >= rowColumn13) And (rowColumn12 >= rowColumn14) And (rowColumn12 >= rowColumn15)) Then
    getRowCount = rowColumn12
ElseIf ((rowColumn13 >= rowColumn1) And (rowColumn13 >= rowColumn2) And (rowColumn13 >= rowColumn3) And (rowColumn13 >= rowColumn4) And (rowColumn13 >= rowColumn5) And (rowColumn13 >= rowColumn6) And (rowColumn13 >= rowColumn7) And (rowColumn13 >= rowColumn8) And (rowColumn13 >= rowColumn9) And (rowColumn13 >= rowColumn10) And (rowColumn13 >= rowColumn11) And (rowColumn13 >= rowColumn12) And (rowColumn13 >= rowColumn14) And (rowColumn13 >= rowColumn15)) Then
    getRowCount = rowColumn13
ElseIf ((rowColumn14 >= rowColumn1) And (rowColumn14 >= rowColumn2) And (rowColumn14 >= rowColumn3) And (rowColumn14 >= rowColumn4) And (rowColumn14 >= rowColumn5) And (rowColumn14 >= rowColumn6) And (rowColumn14 >= rowColumn7) And (rowColumn14 >= rowColumn8) And (rowColumn14 >= rowColumn9) And (rowColumn14 >= rowColumn10) And (rowColumn14 >= rowColumn11) And (rowColumn14 >= rowColumn12) And (rowColumn14 >= rowColumn13) And (rowColumn14 >= rowColumn15)) Then
    getRowCount = rowColumn14
ElseIf ((rowColumn15 >= rowColumn1) And (rowColumn15 >= rowColumn2) And (rowColumn15 >= rowColumn3) And (rowColumn15 >= rowColumn4) And (rowColumn15 >= rowColumn5) And (rowColumn15 >= rowColumn6) And (rowColumn15 >= rowColumn7) And (rowColumn15 >= rowColumn8) And (rowColumn15 >= rowColumn9) And (rowColumn15 >= rowColumn10) And (rowColumn15 >= rowColumn11) And (rowColumn15 >= rowColumn12) And (rowColumn15 >= rowColumn13) And (rowColumn15 >= rowColumn14)) Then
    getRowCount = rowColumn15
End If
 
  
 
 
End Function


Function validateDistrict(SheetData As String, rowCounter As Double, colCounter As Double, SheetList As String)

    fieldText = Sheets(SheetData).Cells(14, colCounter).Text
    
    On Error Resume Next
    
    countryName = Worksheets(SheetData).Cells(rowCounter, colCounter - 2)
    stateName = Worksheets(SheetData).Cells(rowCounter, colCounter - 1)
    districtName = Worksheets(SheetData).Cells(rowCounter, colCounter)
    countryName = UCase(countryName)
    Select Case countryName
        Case ("INDIA")
            Select Case stateName
                Case ("Andaman and Nicobar Islands")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("AndamanandNicobarIslands"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                
                Case ("Andhra Pradesh")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("AndhraPradesh"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Arunachal Pradesh")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("ArunachalPradesh"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Assam")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Assam"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Bihar")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Bihar"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Chandigarh")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Chandigarh"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Chhattisgarh")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Chhattisgarh"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                        flag = "Stop"
                    End If
                Case ("Dadar Nagar Haveli")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("DadarNagarHaveli"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Daman and Diu")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("DamanandDiu"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Delhi")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Delhi"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Goa")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Goa"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Gujarat")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Gujarat"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Haryana")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Haryana"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Himachal Pradesh")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("HimachalPradesh"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Jammu and Kashmir")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("JammuandKashmir"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Jharkhand")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Jharkhand"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Karnataka")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Karnataka"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Kerala")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Kerala"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Lakshadweep")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Lakshadweep"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Madhya Pradesh")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("MadhyaPradesh"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Maharashtra")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Maharashtra"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Manipur")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Manipur"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Meghalaya")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Meghalaya"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Mizoram")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Mizoram"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Nagaland")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Nagaland"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Orissa")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Orissa"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Pondicherry")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Pondicherry"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Punjab")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Punjab"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Rajasthan")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Rajasthan"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Sikkim")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Sikkim"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Tamil Nadu")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("TamilNadu"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Telangana")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Telangana"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Tripura")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Tripura"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Uttar Pradesh")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("UttarPradesh"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("Uttarakhand")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("Uttarakhand"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
                Case ("West Bengal")
                    districtName = Application.Match(districtName, Worksheets("Sheet3").Range("WestBengal"), 0)
                    If IsError(districtName) Then
                        IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
                    End If
            End Select
    End Select
    
    If (countryName <> "INDIA") Then
        If (stateName <> "NA") Then
            If (districtName <> "NA") Then
                IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
            End If
        Else
            If (stateName = "NA") And (districtName <> "NA") Then
                IsValid = error("Investor Details", rowCounter, 10, "Sheet3")
            End If
        End If
    End If
    
    
    If flag = "Stop" Then
        isValidDistrict = "Stop"
    End If
    
    
    If isValidDistrict = "Stop" Then
        validateDistrict = "Stop"
    End If
    
End Function

Function error(SheetData As String, rowCounter As Double, DataColumn As Double, SheetList As String)

            strName = "Error at line number " & rowCounter & " column " & DataColumn & " ( " & Sheets(SheetData).Cells(14, DataColumn).Text & ") : Incorrect Country State District Mapping"
            If errorCounter >= 65537 Then
                    Exit Function
            End If
            Worksheets("Error").Cells(errorCounter, 1).Value = strName
            errorCounter = errorCounter + 1
            

End Function


Sub Clear()

 Sheets("Investor Details").Unprotect "pass"
 Sheets("Investor Details").Range("E4").Value = ""
 Sheets("Investor Details").Range("E6").Value = ""
 Sheets("Investor Details").Range("E8").Value = ""
 Sheets("Investor Details").Range("E10").Value = ""
 Sheets("Investor Details").Range("E12").Value = ""
 Sheets("Investor Details").Range("L4").Value = ""
 Sheets("Investor Details").Range("L6").Value = ""
 Sheets("Investor Details").Range("L8").Value = ""
 Sheets("Investor Details").Range("L10").Value = ""
 
 Sheets("Investor Details").Protect "pass"

End Sub

Function alphaNumeric(SheetData As String, rowCounter As Double, colCounter As Double)
    Dim i
    Dim acounter As Double
    Dim ncounter As Double
    acounter = 0
    ncounter = 0
    Dim arrAlNum()
    
    fieldName = Sheets(SheetData).Cells(14, colCounter).Text
    fieldValue = Worksheets(SheetData).Cells(rowCounter, colCounter)
    Length = Len(fieldValue) - 1
    ReDim arrAlNum(Length)
    
    For i = 0 To UBound(arrAlNum)
        arrAlNum(i) = Mid(fieldValue, i + 1, 1)
        
        If ((arrAlNum(i) > Chr(64) And arrAlNum(i) < Chr(91)) _
            Or (arrAlNum(i) > Chr(96) And arrAlNum(i) < Chr(123)) _
            Or (arrAlNum(i) > Chr(47) And arrAlNum(i) < Chr(58))) _
        Then
            If ((arrAlNum(i) > Chr(64) And arrAlNum(i) < Chr(91)) _
              Or (arrAlNum(i) > Chr(96) And arrAlNum(i) < Chr(123))) Then
                acounter = acounter + 1
            End If
            If (arrAlNum(i) > Chr(47) And arrAlNum(i) < Chr(58)) Then
                ncounter = ncounter + 1
            End If
        Else
            strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Special Characters are not allowed."
            If errorCounter >= 65537 Then
                Exit Function
            End If
            Worksheets("Error").Cells(errorCounter, 1).Value = strName
            errorCounter = errorCounter + 1
            flag = "Stop"
            Exit For
        End If
    Next
    
    If ((acounter = 0 Or ncounter = 0) And (fieldName = "Folio Number")) Then
        strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Should be alphanumeric."
        If errorCounter >= 65537 Then
            Exit Function
        End If
        Worksheets("Error").Cells(errorCounter, 1).Value = strName
        errorCounter = errorCounter + 1
        flag = "Stop"
    End If
    
    If flag = "Stop" Then
        isAlphaNumeic = "Stop"
    End If
        
    If isAlphaNumeic = "Stop" Then
        alphaNumeric = "Stop"
    End If
End Function
Function alphaNumeric1(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
Dim acounter As Double
acounter = 0
Dim ncounter As Double
ncounter = 0
Dim arrAlNum()

fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Worksheets(SheetData).Cells(rowCounter, colCounter)
Length = Len(fieldValue) - 1

ReDim arrAlNum(Length)

Dim hypCount As Integer
hypCount = 0

Dim consecutiveFlag As Integer
consecutiveFlag = 0

Dim specialCharFlag As Integer
specialCharFlag = 0

Dim firstLastHyp As Integer
firstLastHyp = 0

For i = 0 To UBound(arrAlNum)
    arrAlNum(i) = Mid(fieldValue, i + 1, 1)
 
    If (((arrAlNum(i) > Chr(64) And arrAlNum(i) < Chr(91)) _
        Or (arrAlNum(i) > Chr(96) And arrAlNum(i) < Chr(123))) _
        Or (arrAlNum(i) = Chr(45)) _
        Or (arrAlNum(i) > Chr(47) And arrAlNum(i) < Chr(58))) _
    Then
        If ((arrAlNum(i) > Chr(64) And arrAlNum(i) < Chr(91)) _
            Or (arrAlNum(i) > Chr(96) And arrAlNum(i) < Chr(123))) Then
            acounter = acounter + 1
        End If
        If (arrAlNum(i) > Chr(47) And arrAlNum(i) < Chr(58)) Then
            ncounter = ncounter + 1
        End If
        If arrAlNum(i) = Chr(45) Then
            If i = 0 Or i = Length Then
                firstLastHyp = 1
            End If
            hypCount = hypCount + 1
            nextval = Mid(fieldValue, i + 2, 1)
            If nextval = "-" Then
                consecutiveFlag = 1
                'counter = counter + 1
                strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : More than one consecutive '-'(hyphen) is not allowed"
                If errorCounter >= 65537 Then
                    Exit Function
                End If
                Worksheets("Error").Cells(errorCounter, 1).Value = strName
                errorCounter = errorCounter + 1
                flag = "Stop"
                Exit For
            End If
        End If
    Else
        specialCharFlag = 1
        strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Special Characters are not allowed."
        If errorCounter >= 65537 Then
            Exit Function
        End If
        Worksheets("Error").Cells(errorCounter, 1).Value = strName
        errorCounter = errorCounter + 1
        flag = "Stop"
        Exit For
    End If
    Next
    
    If (acounter = 0 Or ncounter = 0) Then
        strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Should be alphanumeric."
        If errorCounter >= 65537 Then
            Exit Function
        End If
        Worksheets("Error").Cells(errorCounter, 1).Value = strName
        errorCounter = errorCounter + 1
        flag = "Stop"
    End If
    
    If ((hypCount <> 2 Or firstLastHyp = 1) And consecutiveFlag = 0 And specialCharFlag = 0) Then
        strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Invalid Format."
        If errorCounter >= 65537 Then
            Exit Function
        End If
        Worksheets("Error").Cells(errorCounter, 1).Value = strName
        errorCounter = errorCounter + 1
        flag = "Stop"
    End If

    If flag = "Stop" Then
        isAlphaNumeic1 = "Stop"
    End If
    
    If isAlphaNumeic1 = "Stop" Then
        alphaNumeric1 = "Stop"
    End If
End Function
Function Numeric(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
Dim counter As Double
counter = 0
Dim arrAlNum()

fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Worksheets(SheetData).Cells(rowCounter, colCounter)
Length = Len(fieldValue) - 1

ReDim arrAlNum(Length)

For i = 0 To UBound(arrAlNum)
 arrAlNum(i) = Mid(fieldValue, i + 1, 1)
 
 If ((arrAlNum(i) > Chr(47) And arrAlNum(i) < Chr(58))) _
    Then
 Else
        If arrAlNum(i) = Chr(46) Then
            nextval = Mid(fieldValue, i + 2, 1)
            counter = counter + 1
            If nextval = "." Then
                
                strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : More one decimal point is not allowed"
                
                End If
                If (counter > 1) Then
                strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : More than one decimal point is not allowed"
                If errorCounter >= 65537 Then
                    Exit Function
                End If
                Worksheets("Error").Cells(errorCounter, 1).Value = strName
                errorCounter = errorCounter + 1
                flag = "Stop"
                Exit For
             End If
             
        Else
                strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Special Characters and Alphabets are not allowed."
                If errorCounter >= 65537 Then
                    Exit Function
                End If
                Worksheets("Error").Cells(errorCounter, 1).Value = strName
                errorCounter = errorCounter + 1
                flag = "Stop"
                Exit For
        End If
        
End If
  
        
   Next

 If flag = "Stop" Then
        isNumeric1 = "Stop"
    End If
    
    If isNumeric1 = "Stop" Then
        Numeric = "Stop"
    End If


End Function
Function validFolioNO(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
Length = Len(fieldValue)
If (Length > 20) Then
strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Folio Number Should be alphanumeric and less than or equal to 20 Characters"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
End If
 
 If flag = "Stop" Then
    isValidFolioNumber = "Stop"
 End If
    
 If isValidFolioNumber = "Stop" Then
    validFolioNO = "Stop"
 End If

End Function
Function validDpIdClientIdAccountNo(SheetData As String, rowCounter As Double, colCounter As Double)
    Dim i
    fieldName = Sheets(SheetData).Cells(14, colCounter).Text
    fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
    Length = Len(fieldValue)
    If (Length > 60) Then
    strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : DP Id-Client Id-Account Number Should be Less Than or equal to 60 Characters"
        If errorCounter >= 65537 Then
                        Exit Function
        End If
        Worksheets("Error").Cells(errorCounter, 1).Value = strName
        errorCounter = errorCounter + 1
        flag = "Stop"
    End If
      
     If flag = "Stop" Then
        isValidDpIdClientIdAccountNo = "Stop"
    End If
          
     If isValidDpIdClientIdAccountNo = "Stop" Then
        validDpIdClientIdAccountNo = "Stop"
   End If
   
End Function

Function validateInvestorFirstNameLength(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
Length = Len(fieldValue)
If (Length > 35) Then
strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Investor First Name Should be Less Than or equal to 35 Characters"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
End If
 
 If flag = "Stop" Then
    isValidInvestorFirstName = "Stop"
 End If
    
 If isValidInvestorFirstName = "Stop" Then
    validateInvestorFirstNameLength = "Stop"
 End If
End Function
Function validateInvestorMiddleNameLength(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
Length = Len(fieldValue)
If (Length > 35) Then
strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Investor Middle Name Should be Less Than or equal to 35 Characters"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
End If
 
 If flag = "Stop" Then
    isValidInvestorMiddleName = "Stop"
 End If
    
 If isValidInvestorMiddleName = "Stop" Then
    validateInvestorMiddleNameLength = "Stop"
 End If
End Function
Function validateInvestorLastNameLength(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
Length = Len(fieldValue)
If (Length > 35) Then
strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Investor Last Name Should be Less Than or equal to 35 Characters"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
End If
 
 If flag = "Stop" Then
    isValidInvestorLastName = "Stop"
 End If
    
 If isValidInvestorLastName = "Stop" Then
    validateInvestorLastNameLength = "Stop"
 End If
End Function
Function validateFatherHusbandFirstNameLength(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
Length = Len(fieldValue)
If (Length > 35) Then
strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Father/Husband's First Name Should be Less Than or equal to 35 Characters"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
End If
 
 If flag = "Stop" Then
    isValidFatherHusbandFirstName = "Stop"
 End If
    
 If isValidFatherHusbandFirstName = "Stop" Then
    validateFatherHusbandFirstNameLength = "Stop"
 End If
End Function
Function validateFatherHusbandMiddleNameLength(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
Length = Len(fieldValue)
If (Length > 35) Then
strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Father/Husband's Middle Name Should be Less Than or equal to 35 Characters"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
End If
 
 If flag = "Stop" Then
    isValidFatherHusbandMiddleName = "Stop"
 End If
    
 If isValidFatherHusbandMiddleName = "Stop" Then
    validateFatherHusbandMiddleNameLength = "Stop"
 End If
End Function
Function validateFatherHusbandLastNameLength(SheetData As String, rowCounter As Double, colCounter As Double)
Dim i
fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Trim(Worksheets(SheetData).Cells(rowCounter, colCounter))
Length = Len(fieldValue)
If (Length > 35) Then
strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Father/Husband's Last Name Should be Less Than or equal to 35 Characters"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
End If
 
 If flag = "Stop" Then
    isValidFatherHusbandLastName = "Stop"
 End If
    
 If isValidFatherHusbandLastName = "Stop" Then
    validateFatherHusbandLastNameLength = "Stop"
 End If
End Function

Function indianPincode(SheetData As String, rowCounter As Double, colCounter As Double)
    Dim i
    Dim counter As Double
    counter = 0
    Dim arrAlNum()
    Dim validFlag
    validFlag = True
    
    fieldName = Sheets(SheetData).Cells(14, colCounter).Text
    fieldValue = Worksheets(SheetData).Cells(rowCounter, colCounter)
    statefieldValue = Worksheets(SheetData).Cells(rowCounter, 9)
    
    Length = Len(fieldValue)
    
    If (Length <> 6) Then
        validFlag = False
    Else
        ReDim arrAlNum(Length)
        For i = 0 To UBound(arrAlNum) - 1
            arrAlNum(i) = Mid(fieldValue, i + 1, 1)
            If ((arrAlNum(i) > Chr(47) And arrAlNum(i) < Chr(58))) Then
            Else
                validFlag = False
                Exit For
            End If
        Next
    End If
    
    If validFlag <> False Then
        If (fieldValue > 110000 And fieldValue < 890000) Then
            fieldValue = Left((fieldValue / 10000), 2)
            
            If (fieldValue = 11 And UCase(statefieldValue) = "DELHI") Then
            ElseIf (fieldValue >= 12 And fieldValue < 14) Then
                If (UCase(statefieldValue) = "HARYANA") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 14 And fieldValue < 17) Then
                If (UCase(statefieldValue) = "CHANDIGARH" Or UCase(statefieldValue) = "PUNJAB") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 17 And fieldValue < 18) Then
                If (UCase(statefieldValue) = "HIMACHAL PRADESH") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 18 And fieldValue < 20) Then
                If (UCase(statefieldValue) = "JAMMU AND KASHMIR") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 20 And fieldValue < 29) Then
                If (UCase(statefieldValue) = "UTTAR PRADESH" Or UCase(statefieldValue) = "UTTARAKHAND") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 30 And fieldValue < 35) Then
                If (UCase(statefieldValue) = "RAJASTHAN") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 36 And fieldValue < 40) Then
                If (UCase(statefieldValue) = "DADAR NAGAR HAVELI" Or UCase(statefieldValue) = "GUJARAT" Or UCase(statefieldValue) = "DAMAN AND DIU") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 40 And fieldValue < 45) Then
                If (UCase(statefieldValue) = "GOA" Or UCase(statefieldValue) = "MAHARASHTRA") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 45 And fieldValue < 50) Then
            
                If (UCase(statefieldValue) = "MADHYA PRADESH" Or Trim(UCase(statefieldValue)) = "CHHATTISGARH") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 50 And fieldValue < 54) Then
                If (UCase(statefieldValue) = "ANDHRA PRADESH" Or UCase(statefieldValue) = "TELANGANA" Or UCase(statefieldValue) = "PONDICHERRY") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 56 And fieldValue < 60) Then
                If (UCase(statefieldValue) = "KARNATAKA") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 60 And fieldValue < 65) Then
                If (UCase(statefieldValue) = "TAMIL NADU" Or UCase(statefieldValue) = "PONDICHERRY") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 67 And fieldValue < 70) Then
                If (UCase(statefieldValue) = "KERALA" Or UCase(statefieldValue) = "LAKSHADWEEP" Or UCase(statefieldValue) = "PONDICHERRY") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 70 And fieldValue < 75) Then
                If (UCase(statefieldValue) = "WEST BENGAL" Or UCase(statefieldValue) = "ANDAMAN AND NICOBAR ISLANDS" Or UCase(statefieldValue) = "SIKKIM") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 75 And fieldValue < 78) Then
                If (UCase(statefieldValue) = "ORISSA") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 78 And fieldValue < 79) Then
                If (UCase(statefieldValue) = "ASSAM" Or UCase(statefieldValue) = "ARUNACHAL PRADESH") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 79 And fieldValue < 80) Then
                If (UCase(statefieldValue) = "NAGALAND" Or UCase(statefieldValue) = "MIZORAM" Or UCase(statefieldValue) = "MEGHALAYA" Or UCase(statefieldValue) = "MANIPUR" Or UCase(statefieldValue) = "TRIPURA" Or UCase(statefieldValue) = "ARUNACHAL PRADESH") Then
                Else
                    validFlag = False
                End If
            ElseIf (fieldValue >= 80 And fieldValue < 86) Then
                If (UCase(statefieldValue) = "BIHAR" Or UCase(statefieldValue) = "JHARKHAND") Then
                Else
                    validFlag = False
                End If
            Else
                validFlag = False
            End If
        Else
            validFlag = False
        End If
    End If
    If validFlag = False Then
        strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Invalid Pincode"
        If errorCounter >= 65537 Then
            Exit Function
        End If
        Worksheets("Error").Cells(errorCounter, 1).Value = strName
        errorCounter = errorCounter + 1
        flag = "Stop"
    End If
    
    If flag = "Stop" Then
        isIndianPincode = "Stop"
    End If
        
    If isIndianPincode = "Stop" Then
        indianPincode = "Stop"
    End If
End Function

Function foriegnPincode(SheetData As String, rowCounter As Double, colCounter As Double)

Dim i
Dim counter As Double
counter = 0
Dim arrAlNum()

fieldName = Sheets(SheetData).Cells(14, colCounter).Text
fieldValue = Worksheets(SheetData).Cells(rowCounter, colCounter)

Length = Len(fieldValue)

If (Len(fieldValue) > 12) Then
    strName = "Error at line number " & rowCounter & " column " & colCounter & "(" & fieldName & ")" & " : Invalid Pincode"
    If errorCounter >= 65537 Then
                    Exit Function
    End If
    Worksheets("Error").Cells(errorCounter, 1).Value = strName
    errorCounter = errorCounter + 1
    flag = "Stop"
    ' insert here else part
End If
 
 If flag = "Stop" Then
    isForiegnPincode = "Stop"
 End If
    
 If isForiegnPincode = "Stop" Then
    foriegnPincode = "Stop"
 End If


End Function


Sub FindMultipleOccurrences()
'finding multiple occurrences of a value in a range - find the string "OldItem" in a search range, and replace with string "NewItem" and change its font color.
MsgBox "entered in FindMultipleOccurrences"
Dim rngSearch As Range, rngLast As Range, rngFound As Range
Dim strFirstAddress As String
MsgBox "11111"

'set the search range:
Set rngSearch = Range("Q15:Q15")
MsgBox "22222rngSearch " + rngSearch
'specify last cell in range:
Set rngLast = rngSearch.Cells(rngSearch.Cells.Count)
MsgBox "333333"
MsgBox "fgfdgfd" + rngLast
'Find the string "OldItem" in search range, when it first occurrs. Note that the After argument is used to begin search
'after the last cell in the search range.
Set rngFound = rngSearch.Find("-", rngLast)
MsgBox "444444rngFound"

'if "OldItem" is found in search range:
If Not rngFound Is Nothing Then
MsgBox "5555555"
'saves the address of the first occurrence of "OldItem", in the strFirstAddress variable:
strFirstAddress = rngFound.Address
MsgBox "666666"
Do
MsgBox "777777"
'Find next occurrence of "OldItem". Note, that we do not start from the first occurrence of "OldItem" (ie. strFirstAddress).
Set rngFound = rngSearch.FindNext(rngFound)
MsgBox "88888"
'replace "OldItem" with "NewItem":
rngFound.Value = "NewItem"
MsgBox "9999999"
'font color is changed:

rngFound.Font.Color = vbRed
MsgBox "101010101"
'The Loop ends on reaching the first occurrence of "OldItem" (ie. strFirstAddress). We have retained the value of "OldItem" till this step because if in the first occurrence, "OldItem" had been replaced by "NewItem", this step would give an error.

Loop Until rngFound.Address = strFirstAddress
MsgBox "11 11 11 11"
Else
MsgBox "- not found"
End If
MsgBox "12 12 12 12"
End Sub



Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 2, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Call Prefill_WS1
End Sub

Private Sub CommandButton2_Click()
    Call Validate
End Sub

Private Sub CommandButton3_Click()
    Call Clear
End Sub

Private Sub Worksheet_Activate()
    'Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=False
    Sheets("Investor Details").Protect ("pass")
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    'Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=False
    Sheets("Error").Protect ("pass")
End Sub

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    'Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=False
    Sheets("Sheet3").Protect ("pass")
End Sub


Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    'Worksheets("Investor Details").Protect Password:="pass", UserInterfaceOnly:=False
    Sheets("Read Me").Protect ("pass")
End Sub


Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' +2']
' bt:Ht)bz{Ht
' %jwl

INQUEST-PP=macro
