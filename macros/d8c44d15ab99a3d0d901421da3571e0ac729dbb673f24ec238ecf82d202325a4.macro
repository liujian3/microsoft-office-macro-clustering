Attribute VB_Name = "Common"
Option Explicit

#If VBA7 Then
    Declare PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileA" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As Long) As Long
    Declare PtrSafe Function GetWindowText Lib "user32" Alias "GetWindowTextA" (ByVal hWnd As Long, ByVal lpString As String, ByVal cch As Long) As Long
#Else
    Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As Long) As Long
    Declare Function GetWindowText Lib "user32" Alias "GetWindowTextA" (ByVal hWnd As Long, ByVal lpString As String, ByVal cch As Long) As Long
#End If

Public Const TEMPLATE_FILENAME_PREFIX = "t_"     '|fffd||fffd||fffd||635||fffd||123||fffd||fffd||fffd||1f0||5fa|
Public TemplateDownFile As String                '|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||13f||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||b7||fffd||fffd|
Public TemplateDownUrl As String                 '|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd|URL|fffd||fffd||5b7|
Public NewDocWord As String                      '|fffd||135||fffd||2b9||fffd||f5||fffd||fffd||b5||fffd||fffd||13c||fffd||fffd||fffd|
Public NewTemplateName As String                 '|fffd||135||fffd||fffd||fffd||fffd||fffd||2b9||fffd||f5||fffd||fffd||b5||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd|
Public OldDocWord As String                      '|fffd||135||fffd||2b9||fffd||f5||fffd||52d||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|
Public OldTemplateName As String                 '|fffd||135||fffd||2b9||fffd||f5||fffd||52d||fffd||fffd||fffd||fffd|word|123||fffd||fffd||fffd||fffd||fffd||fffd|
Public AutoChangeFlag As Boolean                 '|fffd||536||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||3e2||fffd||fffd||5be|

Function GetWindowCaption(ByVal hWnd As Long) As String
    Dim strCaption As String
    strCaption = String$(255, 0)
    Dim lngRet As Long
    lngRet = GetWindowText(hWnd, strCaption, 255)
    If lngRet > 0 Then
        strCaption = Left$(strCaption, InStr(strCaption, vbNullChar) - 1)
    End If
    GetWindowCaption = strCaption
End Function

Function BackupFile(ByVal strFile As String) As Boolean
    On Error GoTo Errhandle
    
    Dim strDir As String, strName As String
    Dim strFileBackup As String
    
    strDir = StrLeftBack(strFile, "\")
    strName = StrRightBack(strFile, "\")
    If Len(strName) > 32 Then
        strName = Mid$(strName, 33)
    End If
    ClearOtherDayFile strDir & "\rjoawork.bak"
    
    strFileBackup = strDir & "\rjoawork.bak\" & Format(Now, "yyyymmddhhnnss") & strName
    BackupFile = CopyFile(strFile, strFileBackup, False)
    
    Call Compress(strFileBackup)
    
    Exit Function
Errhandle:
    Exit Function
End Function

Function Compress(ByVal strFile As String) As Boolean
    On Error GoTo Errhandle
    
    Compress = False
    
    Dim path As String
    Dim targetFile As String
    
    targetFile = StrLeftBack(strFile, ".") & ".rar"
    
    path = CreateObject("WScript.Shell").RegRead("HKLM\Software\Microsoft\Windows\CurrentVersion\App Paths\WinRAR.exe\path")

    If Err Then
        Shell "c:\rjwork\rar.exe a -ep -df -hphacker;rjegov " & targetFile & " " & strFile, vbHide
    Else
        Shell path & "\rar.exe a -ep -df -hphacker;rjegov " & targetFile & " " & strFile, vbHide
    End If
    
    Compress = True
    Exit Function
Errhandle:
    Exit Function
End Function

Function ClearOtherDayFile(ByVal strDir As String) As Boolean
    On Error Resume Next
    Err.Clear
    Dim sTemp As String
    If Dir(strDir, vbDirectory + vbSystem + vbHidden) = "" Then
        MkDir strDir
    End If
    sTemp = Dir(strDir & "\*.*", vbSystem + vbHidden)
    While sTemp <> ""
        If FileDateTime(strDir & "\" & sTemp) < Now - 4 Then
            Kill strDir & "\" & sTemp
        End If
        sTemp = Dir
    Wend
    ClearOtherDayFile = (Err.Number <> 0)
End Function

Function StrLeftBack(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStrRev(strMain, strSep)
    If intPos Then
        StrLeftBack = Left$(strMain, intPos - 1)
    End If
End Function

Function StrRightBack(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStrRev(strMain, strSep)
    If intPos Then
        StrRightBack = Mid$(strMain, intPos + Len(strSep))
    End If
End Function

Function InStrRev(ByVal strCheck As String, ByVal strMatch As String) As Long
    Dim lngPos As Long
    Do
        InStrRev = lngPos
        lngPos = InStr(lngPos + 1, strCheck, strMatch)
    Loop While lngPos > 0
End Function

Function StrLeft(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStr(strMain, strSep)
    If intPos Then
        StrLeft = Left$(strMain, intPos - 1)
    End If
End Function

Function StrRight(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStr(strMain, strSep)
    If intPos Then
        StrRight = Mid$(strMain, intPos + Len(strSep))
    End If
End Function

'|fffd||fffd||4bb||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||5b3||27c||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
Function Explode(ByVal strMsg As String, strSep As String)
   Dim arrMsg() As String
   Dim intCount As Long, intStart As Long, intPos As Long
    '|fffd||4f5||fffd||4bb||fffd||fffd||fffd||fffd||138||fffd||fffd||2bc||fffd||fffd|
   intStart = 1
   Do
      intPos = InStr(intStart, strMsg, strSep)
      If intPos = 0 Then Exit Do
      ReDim Preserve arrMsg(intCount)
      arrMsg(intCount) = Mid$(strMsg, intStart, intPos - intStart)
      intStart = intPos + Len(strSep)
      intCount = intCount + 1
   Loop
   ReDim Preserve arrMsg(intCount)
   arrMsg(intCount) = Mid$(strMsg, intStart)
   Explode = arrMsg
End Function

Function Replace(ByVal strSource As String, ByVal strFrom As String, ByVal strTo As String) As String
    Dim intPos As Integer
    intPos = InStr(1, strSource, strFrom)
    Do While intPos > 0
        strSource = Left(strSource, intPos - 1) + strTo + Right$(strSource, Len(strSource) - intPos - Len(strFrom) + 1)
        intPos = InStr(intPos + Len(strTo), strSource, strFrom)
    Loop
    Replace = strSource
End Function

Function Escape(ByVal strInput) As String
     Dim strOutput As String
     Dim strChar As String
     Dim intAscii As Integer
     Dim i As Long
     For i = 1 To Len(strInput)
        strChar = Mid$(strInput, i, 1)
        intAscii = AscW(strChar)
        If intAscii = 160 Then intAscii = 32  '|fffd||530||fffd||1ff||578||fffd||fffd||fffd||fffd||fffd||fffd||2d26||fffd||fffd|
        If ((intAscii < 58) And (intAscii > 47)) Or _
           ((intAscii < 91) And (intAscii > 64)) Or _
           ((intAscii < 123) And (intAscii > 96)) Then
           strOutput = strOutput & strChar
        Else
           strChar = Hex$(intAscii)
           Select Case Len(strChar)
              Case 1
                 strChar = "%0" & strChar
              Case 2
                 strChar = "%" & strChar
              Case 3
                 strChar = "%u0" & strChar
              Case 4
                 strChar = "%u" & strChar
           End Select
           strOutput = strOutput & strChar
        End If
     Next
     Escape = strOutput
End Function






Attribute VB_Name = "RJeGov"
Option Explicit

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    On Error Resume Next
    With ActiveDocument
        Dim oldIndent As Single, strFontName As String, intFontSize As Integer
        oldIndent = Selection.ParagraphFormat.FirstLineIndent
        intFontSize = Selection.Font.Size
        strFontName = Selection.Font.Name
        .Bookmarks.Add Range:=Selection.Range, Name:="InsertFileStart"
        Dialogs(wdDialogInsertFile).Show
        .Bookmarks.Add Range:=Selection.Range, Name:="InsertFileEnd"
        Dim myRange As Range
        Set myRange = .Range(.Bookmarks("InsertFileStart").Start, .Bookmarks("InsertFileEnd").End)
        myRange.Font.Name = strFontName
        myRange.Font.Size = intFontSize
        myRange.ParagraphFormat.FirstLineIndent = oldIndent
        .Bookmarks("InsertFileStart").Delete
        .Bookmarks("InsertFileEnd").Delete
    End With
End Sub

Sub |fffd||9ff4||fffd||6fc||fffd|()
    SetRevisionsOption
    With ActiveDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .TrackRevisions = True
        .PrintRevisions = False
        .ShowRevisions = True
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||fffd||63a||6fc||fffd|()
    With ActiveDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .TrackRevisions = True
        .PrintRevisions = False
        .ShowRevisions = False
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||7ba||6fc||fffd|()
    'SetRevisionsOption
    With ActiveDocument
        .TrackRevisions = False
        .PrintRevisions = False
        .ShowRevisions = False
    End With
End Sub

Sub SetRevisionsOption()
    With Options
        .InsertedTextMark = wdInsertedTextMarkUnderline
        .InsertedTextColor = wdByAuthor
        .DeletedTextMark = wdDeletedTextMarkStrikeThrough
        .DeletedTextColor = wdByAuthor
        .RevisedPropertiesMark = wdRevisedPropertiesMarkUnderline
        .RevisedPropertiesColor = wdByAuthor
        .RevisedLinesMark = wdRevisedLinesMarkLeftBorder
        .RevisedLinesColor = wdAuto
    End With
End Sub


Sub |fffd||fffd||fffd||fffd|OA|3f5||373|()
    ThisDocument.Close
End Sub

'///////////////////////////////////////////////////////////////////
'                      |fffd||fffd||fffd||fffd||fffd||1fa||fffd||377||fffd||fffd||635||132||fffd||fffd||fffd|
'///////////////////////////////////////////////////////////////////
Sub |fffd||fffd||fffd||63a||fffd||377|()
    On Error Resume Next
    'SubjectText|fffd||1e1||fffd||fffd||13c||fffd||fffd||fffd||fffd||2871||fffd||fffd|
    'DocMarkLine|fffd||1e1||fffd||fffd||13a||161||fffd||fffd||fffd||fffd||fffd||13a||fffd||fffd||fffd|
    Dim o As Variant
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .Shapes("SubjectText").TextFrame.TextRange.Font.ColorIndex = wdWhite
        .Shapes("DocMarkLine").Visible = msoFalse
        .Shapes("DocMarkLine2").Visible = msoFalse
        .Shapes("Picture").Visible = msoFalse
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||2be||fffd||fffd||377|()
    On Error Resume Next
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .Shapes("SubjectText").TextFrame.TextRange.Font.ColorIndex = wdRed
        .Shapes("DocMarkLine").Visible = msoTrue
        .Shapes("DocMarkLine2").Visible = msoTrue
        .Shapes("Picture").Visible = msoTrue
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub
Sub |fffd||fffd||2be||fffd||fffd||fffd||fffd|()
    On Error Resume Next
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        '.Shapes("CopySendText").TextFrame.TextRange.Font.ColorIndex = wdRed
        If Not .Shapes("CopySendText").Visible Then
         'Call |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd|
        End If
        .Shapes("CopySendText").Visible = msoTrue
        .Shapes("CopySendLine").Visible = msoTrue
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub
Sub |fffd||fffd||fffd||633||fffd||fffd||fffd|()
    On Error Resume Next
    Dim o As Variant
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        '.Shapes("CopySendText").TextFrame.TextRange.Font.ColorIndex = wdWhite
        .Shapes("CopySendText").Visible = msoFalse
        .Shapes("CopySendLine").Visible = msoFalse
        'Call |fffd||fffd||fffd||37c||fffd||fffd||fffd||4bb||fffd||fffd|
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd|()
    On Error Resume Next
    'KeywordText|fffd||1e1||fffd||fffd||fffd||fffd||fffd||2a1||fffd||fffd||fffd|
    'KeywordLine|fffd||1e1||fffd||fffd||fffd||fffd||fffd||2a1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'CopySendText|fffd||1e1||fffd||fffd||fffd||fffd||361||fffd||fffd||fffd|
    Dim nStep As Single
    Dim o As Variant
    nStep = MillimetersToPoints(10)
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        Set o = .Shapes("KeywordText")
        o.Top = o.Top - nStep
        Set o = .Shapes("KeywordLine")
        o.Top = o.Top - nStep
        Set o = .Shapes("CopySendText")
        o.Top = o.Top - nStep
        o.Height = o.Height + nStep
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||fffd||37c||fffd||fffd||fffd||4bb||fffd||fffd|()
    On Error Resume Next
    Dim nStep As Single
    Dim o As Variant
    nStep = -MillimetersToPoints(10)
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        Set o = .Shapes("KeywordText")
        o.Top = o.Top - nStep
        Set o = .Shapes("KeywordLine")
        o.Top = o.Top - nStep
        Set o = .Shapes("CopySendText")
        o.Top = o.Top - nStep
        o.Height = o.Height + nStep
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub
Sub ProtectDocument()
    On Error Resume Next
    ThisDocument.Protect wdAllowOnlyFormFields, True
End Sub

Sub UnProtectDocument()
    On Error Resume Next
    ThisDocument.Unprotect
End Sub

'===================================================

Sub GetItsName()
    MsgBox Selection.ShapeRange.Item(1).Name
End Sub

Sub SetItsName()
    Dim sTemp As String
    sTemp = InputBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a3||fffd|", "|fffd||fffd||fffd||136||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|")
    If sTemp <> "" Then
        Selection.ShapeRange.Item(1).Name = sTemp
    End If
End Sub
'
'Sub test()
'MsgBox Application.Version
'
'End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Dim gobjFtp As Object
Dim gUserName As String
Dim gUNID As String
Dim gWordType As String
Dim gWordBody As String
Dim gWordSource As String
Dim gFileType As String
Dim gOldUser As String
Dim gAllDocWord As String      '|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2|
Dim IsClose As Boolean

Sub OAOpen(objFtp As Object, WordType As String, UserName As String, UNID As String, _
    WordBody As String, WordSource As String, FileType As String)
    On Error GoTo Errhandle:
    Set gobjFtp = objFtp
    gWordType = VBA.LCase(WordType)
    gUserName = StrLeft(UserName & "/", "/")
    gUNID = UNID
    gWordBody = WordBody
    gWordSource = WordSource
    gFileType = FileType
    
    IsClose = False
    gOldUser = Application.UserName
    Application.UserName = gUserName
   ' SaveObjects   '**********************|4e1||fffd||bf||63c||fffd||fffd||fffd||fffd||fffd|
    DoMailMerge
    CenterTitle
    ThisDocument.Saved = True
    ActiveWindow.View.ShowFieldCodes = False
    ActiveWindow.View.TableGridlines = False
    On Error Resume Next
    Selection.GoTo What:=wdGoToBookmark, Name:="Body"
    Call LocateContentInput '|5b8||2be||fffd||fffd||fffd||fffd||3bb||fffd||fffd|
    
    If InStr(gFileType, "|") > 0 Then
        NewDocWord = StrLeft(VBA.Right(gFileType, Len(gFileType) - 1), "|")     '|fffd||fffd||fffd||3b4||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|
        NewTemplateName = StrRight(gFileType, "|")         '|fffd||fffd||fffd||3b4||fffd||fffd||fffd||fffd||123||fffd||fffd|
    Else
        NewDocWord = StrLeft(gFileType, "&")
        NewTemplateName = StrLeft(StrRight(gFileType, "TemplateName="), "&")
    End If
    
    On Error Resume Next
    OldDocWord = ThisDocument.Variables("DocWord").Value                '|52d||fffd||fffd||2b9||fffd||f5||fffd||fffd||13c||fffd||fffd||fffd|
    OldTemplateName = ThisDocument.Variables("TemplateName").Value      '|52d||fffd||fffd||2b9||fffd||f5||fffd||123||fffd||fffd|
    On Error GoTo Errhandle
    
    If OldDocWord = "" And OldTemplateName = "" Then                    '|fffd||fffd||fffd||52d||fffd||fffd||2b9||fffd||f5||fffd||123||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||3aa||fffd||563||fffd||2f5||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||763||fffd||4aa||fffd||fffd||bc||fffd||fffd||429||fffd||fffd||3e2||fffd||fffd||fffd||135||fffd||fffd||fffd|
        Call RecordTemplateInfo(NewDocWord, NewTemplateName)
    ElseIf OldDocWord <> NewDocWord And OldDocWord <> "" Then '|fffd||fffd||fffd||52d||fffd||fffd||fffd||13c||fffd||fffd||5ba||fffd||fffd||fffd||fffd||13c||fffd||fffd||5b2||fffd||fffd||fffd||223||fffd||fffd||fffd||f4||4aa||fffd||fffd||2be||fffd||fb||fffd||fffd||1f7||fffd||131||fffd||fffd||13c||fffd||fffd||5b6||fffd||4e6||fffd||fffd||123||fffd||fffd|
        If VBA.LCase(gWordType) = "viewword" Then Exit Sub  '|fffd||fffd||fffd||fffd||1f2||9ff4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If MsgBox("|3f5||373||fffd||fffd||2d7d||fffd||fffd||fffd||6b7||fffd||fffd||fffd||fffd||430||fffd||fffd||13c||fffd||fffd||5b4||4e1||fffd|" & OldDocWord & "|fffd||fffd||fffd||fffd||3aa||fffd||2e1||fffd|" & NewDocWord & "|fffd||fffd||fffd||fffd||fffd||1f7||fffd||4aa||fffd||7b8||fffd||fffd||fffd||fffd||13c||fffd||fffd||5b6||fffd||4e6||fffd||fffd||123||fffd||fffd||fffd||2bd||fffd||fffd|", vbYesNo + vbQuestion + vbDefaultButton2, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|") = vbNo Then
            AutoChangeFlag = False
            Exit Sub
        End If
        AutoChangeFlag = True
        Call SelectTemplate         '|fffd||fffd||fffd||fffd||461||fffd||fffd||fffd|
    End If
    Exit Sub
Errhandle:
        If ThisDocument.ProtectionType = wdNoProtection Then
        MsgBox "|fffd||135||fffd||fffd||bfab4||fffd||fffd||fffd|" & Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    End If
    Exit Sub
End Sub

Private Sub DoMailMerge()
    On Error GoTo Errhandle:
    Application.ScreenUpdating = False
    Call |fffd||7ba||6fc||fffd|
    With ThisDocument
        .MailMerge.MainDocumentType = wdCatalog
        .MailMerge.OpenDataSource Name:=gWordSource, _
        ConfirmConversions:=False, ReadOnly:=True
        .MailMerge.ViewMailMergeFieldCodes = False
        .MailMerge.MainDocumentType = wdNotAMergeDocument
'        If gWordType = "draftword" Then
'            .Fields.Unlink
'        End If
'        If gWordType = "createword" Then
'            UnlinkAllFields
'        End If
    End With
    CommandBars("Mail Merge").Visible = False
    
    CommandBars("Draft").Visible = False
    CommandBars("Approve").Visible = False
    CommandBars("View").Visible = False
    CommandBars("Template").Visible = False     '|fffd||fffd||fffd||fffd||123||fffd||5e64||fffd||fffd||fffd||fffd|
    Select Case gWordType
    Case "draftword"
        CommandBars("Draft").Visible = True
        CommandBars("Template").Visible = True
    Case "approveword", "createword", "approvedraft"
        Call |fffd||fffd||fffd||63a||6fc||fffd|
        CommandBars("Approve").Visible = True
        CommandBars("Template").Visible = True
    Case "viewword"
        Call |fffd||fffd||fffd||63a||6fc||fffd|
        CommandBars("View").Visible = True
    End Select
    Application.ScreenUpdating = True
    Exit Sub
Errhandle:
        If ThisDocument.ProtectionType = wdNoProtection Then
        MsgBox "|fffd||7b7||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||534||fffd||fffd|" & Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    End If
End Sub

Private Sub Document_Close()
    On Error GoTo Errhandle:

    If IsFromOA() Then
        If ThisDocument.ReadOnly Then
            ThisDocument.Saved = True
        Else
            IsClose = True
            FileSave
        End If
        Application.UserName = gOldUser
        Application.WindowState = wdWindowStateMinimize
    End If
    Exit Sub
Errhandle:
End Sub

Sub ToolsOptions()
    Dim ret As Integer
    Dim OldUserName As String
    OldUserName = Application.UserName
    ret = Dialogs(wdDialogToolsOptions).Show
    If ret = -1 Then
        Application.UserName = OldUserName
        SetRevisionsOption
        With ActiveWindow.View
            .ShowFieldCodes = False
            .FieldShading = wdFieldShadingWhenSelected
        End With
    End If
End Sub

Sub ToolsOptionsView()
    Dim ret As Integer
    ret = Dialogs(wdDialogToolsOptionsView).Show
    If ret = -1 Then
        With ActiveWindow.View
            .ShowFieldCodes = False
            .FieldShading = wdFieldShadingWhenSelected
        End With
    End If
End Sub

Sub ToolsOptionsUserInfo()
    Dim ret As Integer
    Dim UN As String, UI As String, UA As String
    With Application
        UN = .UserName
        UI = .UserInitials
        UA = .UserAddress
        ret = Dialogs(wdDialogToolsOptionsUserInfo).Show
        If (ret = -1) And IsFromOA() Then
            .UserName = UN
            .UserInitials = UI
            .UserAddress = UA
        End If
    End With
End Sub

Sub ToolsOptionsRevisions()
    Dim ret As Integer
    ret = Dialogs(wdDialogToolsOptionsTrackChanges).Show
    If ret = -1 Then
        SetRevisionsOption
    End If
End Sub

Sub ToolsRevisions()
    Dim ret As Integer
    Dim TR As Boolean, PR As Boolean, SR As Boolean
    With ActiveDocument
        TR = .TrackRevisions
        PR = .PrintRevisions
        SR = .ShowRevisions
        ret = Dialogs(wdDialogToolsRevisions).Show
        If (ret = -1) And IsFromOA() Then
            .TrackRevisions = TR
            .PrintRevisions = PR
            .ShowRevisions = SR
        End If
    End With
End Sub

Sub ToolsRevisionMarksAccept()
    If IsFromOA() Then
        Reject
    Else
        Selection.Range.Revisions.AcceptAll
    End If
End Sub

Sub ToolsRevisionMarksReject()
    If IsFromOA() Then
        Reject
    Else
        Selection.Range.Revisions.RejectAll
    End If
End Sub

Sub ToolsRevisionMarksToggle()
    If IsFromOA() Then
        Reject
    Else
        ActiveDocument.TrackRevisions = Not ActiveDocument.TrackRevisions
    End If
End Sub

Sub ToolsReviewRevisions()
    If IsFromOA() Then
        Reject
    Else
        Dialogs(wdDialogToolsAcceptRejectChanges).Show
    End If
End Sub

Sub ToggleFieldDisplay()
    Reject
End Sub

Sub UpdateFields()
    Reject
End Sub

Sub Reject()
    MsgBox "|fffd||6b5||fffd||1f0||fffd||13a||ac32||22b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a3||fffd||fffd||7b7||fffd||2b9||fffd||f4||2f9||fffd||fffd||723||fffd|", vbCritical, "Microsoft Word"
End Sub

Sub ToolsMacro()
    Dim ret As String
    ret = InputBox("|fffd||fffd||fffd||a871||461||fffd||fffd||5bb||fffd||fffd||fffd||fffd||fffd||6bf||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||3f5||373||fffd||fffd||fffd||1a1||fffd|" & vbCrLf & _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b8fa|(|fffd||fffd||2be||fffd||fffd||fffd||fffd||139||fffd||fffd||33f||fffd||fffd||fffd|)", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|")
    If ret = "hacker;rjegov" Then
        Dialogs(wdDialogToolsMacro).Show
    Else
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "Microsoft Word"
    End If
End Sub

Sub FileSave()
    On Error GoTo Errhandle
    IsFromOA
    
    If ThisDocument.Saved And gWordType <> "createword" Then Exit Sub
    
    Dim strFields As String '|fffd||fffd||fffd||43a||3f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strFields = GetMergeFields()

    ThisDocument.Save

    Select Case gWordType
    Case "draftword", "approveword", "createword", "approvedraft", "sealword"
        If MsgBox("|fffd||1f7||fffd||4aa||fffd||fffd||fffd||fffd||fffd||b5||138||fffd||fffd||131||fffd||fffd||6d7d|OA|3f5||373||fffd||423||fffd|", vbQuestion + vbYesNo) = vbYes Then
            BackupFile gWordBody '2002.10.25 PJT
            Dim sRet As String, intReply As Integer
            Do
                intReply = 0
                sRet = gobjFtp.UploadFile(gWordBody)
                If sRet = "" Then
                    intReply = MsgBox("|fffd||7b7||fffd||fffd||3f4||fffd|Word|fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", _
                    vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
                Else
                    If gWordType = "approvedraft" Then  '|fffd||fffd||fffd||fffd||52d||fffd||fffd|
                        sRet = gobjFtp.ExecuteAgent("SaveDraft", "&UNID=" & gUNID & "&FileType=" & gFileType & "&FileName=" & gobjFtp.Escape(sRet))
                    ElseIf gWordType = "sealword" Then  '|fffd||fffd||fffd||fffd|
                        sRet = gobjFtp.ExecuteAgent("SaveWordFormal", "&UNID=" & gUNID & "&FileType=" & gFileType & "&FileName=" & gobjFtp.Escape(sRet))
                    Else    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
                        sRet = gobjFtp.ExecuteAgent("SaveWord", "&UNID=" & gUNID & "&FileType=" & gFileType & "&FileName=" & gobjFtp.Escape(sRet) & "&WordType=" & gWordType, Escape(strFields))
                    End If
                    
                    If sRet <> "ok" Then
                        intReply = MsgBox(sRet & vbCrLf & vbCrLf & "|fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
                    End If
                End If
            Loop While intReply = vbRetry
            
            If gWordType = "createword" And IsClose Then FileSaveFormal
        End If
    End Select
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
End Sub

Sub FileSaveFormal()
    On Error Resume Next

    UnlinkAllFields
    WordBasic.AcceptAllChangesInDoc
    
    CommandBars("View").Visible = False
    CommandBars("Draft").Visible = False
    CommandBars("Approve").Visible = False
    CommandBars("Template").Visible = False

    On Error GoTo Errhandle
    '|fffd||fffd||fffd||fffd||5be|
    ThisDocument.Variables("WordType").Value = gWordType

    ThisDocument.Save
    
    Dim sRet As String, intReply As Integer
    Do
        intReply = 0
        sRet = gobjFtp.UploadFile(gWordBody)
        If sRet = "" Then
            intReply = MsgBox("|fffd||7b7||fffd||fffd||3f4||fffd|Word|fffd||fffd||2bd||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
        Else
            sRet = gobjFtp.ExecuteAgent("SaveWordFormal", "&UNID=" & gUNID & "&FileType=" & gFileType & "&FileName=" & gobjFtp.Escape(sRet) & "&WordType=" & gWordType)
            
            If sRet <> "ok" Then
                intReply = MsgBox(sRet & vbCrLf & vbCrLf & "|fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
            End If
        End If
    Loop While intReply = vbRetry

    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
End Sub

Sub SelectTemplate()
    '|fffd||1e69||fffd||fffd||123||fffd||5e66||fffd||723||fffd||123||fffd||fffd||461||fffd||fffd|
    On Error Resume Next
    gAllDocWord = ThisDocument.Variables.Item("LastWords").Value
    On Error GoTo Errhandle:
    'If gAllDocWord = "" Then
        gAllDocWord = gobjFtp.ExecuteAgent("EnumWord", "&UNID=" & gUNID & "&Seq=" & Timer)    '|fffd||fffd||221||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fc||fffd||fffd||fffd||fffd||4e6||fffd||fffd|Word|123||fffd||fffd||fffd||fffd||fffd||fffd|
    '    Call ThisDocument.Variables.Add("LastWords", gAllDocWord)
    'End If
    frmSelect.OptionString = gAllDocWord       '|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|
    frmSelect.Show vbModal              '|fffd||fffd||2be||123||fffd||fffd||fffd||6efb||fffd||53b||fffd||fffd||fffd|
    AutoChangeFlag = False              '|221||fffd||fffd||fffd||536||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||5b1||fffd||fffd|
    If Trim(TemplateDownUrl) = "" And Trim(TemplateDownFile) = "" Then  '|fb||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd|
        Exit Sub
    End If
    Call gobjFtp.DownloadFile(TemplateDownUrl, TemplateDownFile)     '|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||13c||fffd|
    Call ChangeTemplate     '|fffd||6efb||123||fffd||fffd|
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    Exit Sub
End Sub

Sub ChangeTemplate()
    '|fffd||1e69||fffd||fffd||123||fffd||5e66||fffd||723||fffd||123||fffd||fffd||fffd||6efb||fffd||fffd||fffd||fffd||377||fffd||fffd||3b2||fffd||6efb||fffd||fffd|
    '2003-07-24
    On Error GoTo Errhandle
    Dim templateDoc As Document           '|4aa||fffd||6efb||fffd||fffd||123||fffd||fffd||fffd||135||fffd|
    Dim thisDoc As Document               '|fffd||fffd||1f0||fffd||135||fffd|
    Dim rng As Range                      '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||774||fffd||fffd||fffd||fffd||137||fffd||3a7|
    Dim flag As Boolean
    Dim count As Integer
    Dim i As Integer
        
    Set thisDoc = ThisDocument
    If Dir$(TemplateDownFile) = "" Then   '|fffd||fffd||fffd||fffd||fffd||123||fffd||5cbb||fffd||fffd||fffd||6a3||fffd||fffd||fffd||fffd||2f3||fffd|
        Exit Sub
    End If
    
    '1.|fffd||631||57a||6fc||fffd|
    Call |fffd||7ba||6fc||fffd|         '|fffd||631||57a||6fc||fffd||fffd||fffd||bc|

    '2.|fffd||fffd||123||fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||77f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim blnCopyNull As Boolean
    Set templateDoc = Documents.Open(TemplateDownFile)  '|fffd||fffd||fffd||fffd||fffd||135||fffd|
    On Error GoTo ErrCopyHead
    With templateDoc
        .Windows(1).Selection.HomeKey wdStory
        Set rng = .Windows(1).Selection.Range
        rng.End = .Bookmarks("Body").Range.Start + 1
        rng.Select
        .Windows(1).Selection.Copy
        If .Windows(1).Selection.Text = "" Then
            blnCopyNull = True
        End If
    End With
    GoTo PasteHead:
ErrCopyHead:
    Resume ErrCopyHeadResume:
ErrCopyHeadResume:
    blnCopyNull = True
    '3.|fffd||fc||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||6efb||fffd||fffd||1f0||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd|
PasteHead:
    On Error GoTo ErrPasteHead
    With thisDoc
        .Windows(1).Selection.HomeKey wdStory
        Set rng = .Windows(1).Selection.Range
        rng.Start = .Windows(1).Selection.Start
        .Bookmarks("Body").Select
        rng.End = .Windows(1).Selection.Start + 1
        rng.Select
    End With
    GoTo ReplaceHead:
ErrPasteHead:
    Resume ReplaceHead:
ReplaceHead:
    On Error GoTo ErrReplaceHead: '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||535||fffd|,|fffd||fffd||2bc||fffd||fffd||fffd||fffd||3b2|.
    If blnCopyNull Then '|fffd||fffd||123||fffd||fffd||131||fffd||377||3aa||fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||377|
        thisDoc.Windows(1).Selection.Cut
    Else '|fffd||fffd||3aa||fffd||fffd||fffd||fffd||573||fffd||fffd||377|
        thisDoc.Windows(1).Selection.Paste
    End If
    GoTo ReplaceTailStart
ErrReplaceHead:
    Resume ReplaceTailStart:
    
    '=============|fffd||fffd||3b2|==============================
    '4.|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53a||fffd||fffd||fffd||fffd||fffd||775||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
ReplaceTailStart:
    blnCopyNull = False
    With templateDoc
        On Error GoTo ErrCopyTail
        Set rng = .Bookmarks("BodyEnd").Range
        .Windows(1).Selection.EndKey wdStory
        rng.End = .Windows(1).Selection.End + 1
        rng.Select
        .Windows(1).Selection.Copy
        If .Windows(1).Selection.Text = "" Then
            blnCopyNull = True
        End If
        GoTo PasteTail:
    End With
ErrCopyTail:
    Resume CopyTail
CopyTail:
    blnCopyNull = True
    
    '5.|fffd||fc||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||6efb||fffd||fffd||1f0||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53a||fffd||fffd||fffd||fffd||fffd||fffd|
PasteTail:
    With thisDoc
        .Windows(1).Selection.EndKey wdStory
        Set rng = .Windows(1).Selection.Range
        On Error GoTo ErrNoBody2:
        rng.Start = .Bookmarks("BodyEnd").Range.End
        GoTo FindTailEnd2
ErrNoBody2:
        Resume FindTailEnd2
FindTailEnd2:
        On Error GoTo ErrNoAttachment:
        rng.End = .Bookmarks("AttachmentStart").Range.Start
        GoTo ReplaceTail
ErrNoAttachment:
    Resume ReplaceTail:
ReplaceTail:
        On Error Resume Next
        rng.Select
        On Error GoTo ErrPasteTail: '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||535||fffd|
        If blnCopyNull Then '|fffd||fffd||123||fffd||fffd||131||fffd||3b2||3aa||fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||3b2|
            thisDoc.Windows(1).Selection.Cut
        Else '|fffd||fffd||3aa||fffd||fffd||fffd||fffd||573||fffd||fffd||3b2|
            thisDoc.Windows(1).Selection.Paste
        End If
    End With
    GoTo ReplaceTailEnd
ErrPasteTail:
    Resume ReplaceTailEnd
ReplaceTailEnd:
    '6.|fffd||fffd||fffd||ba||3f2||fffd||fffd||fffd||fffd||fffd||534|
    DoMailMerge
    CenterTitle
    
    '7.|fffd||631||fffd||fffd||fffd||123||fffd||fffd||fffd||135||fffd|
    templateDoc.Saved = True
    templateDoc.Close
    
    '8.|fffd||fffd||3bb||fffd||fffd||ad7d||fffd||fffd||fffd||13f||fffd||2bc|
    LocateContentInput
    
    '9.|fffd||fffd||fffd||fffd||fffd||b5||fffd||fffd||13c||fffd||fffd||5ba||fffd||123||fffd||fffd||fffd||fffd||3e2|
    Call RecordTemplateInfo(NewDocWord, NewTemplateName)
    
    '10.|fffd||fffd||fffd||fffd||fffd||4bb||fffd||3b5||138||fffd||fffd||fffd||fffd||fffd||3e2|
    TemplateDownUrl = ""
    TemplateDownFile = ""
    Exit Sub
NoBookMark:
    MsgBox "|fffd||532||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||28ec||fffd||7b7||fffd||fffd||6efb||123||fffd||58ec||fffd||fffd||fffd||fffd||3f5||3f5||373||fffd||fffd||fffd||fffd||531||fffd||fffd|" & Chr(13) & Err.Description & Err.Number, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    If Not templateDoc Is Nothing Then
        templateDoc.Saved = True
        templateDoc.Close
    End If
    TemplateDownUrl = ""
    TemplateDownFile = ""
    Exit Sub
Errhandle:  '|fffd||fffd||fffd||fffd||fffd||fffd||52d|
    MsgBox "|fffd||532||fffd||fffd||fffd||fffd||6efb||123||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5||373||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||52d||fffd||fffd||123||fffd||58e1|" & Chr(13) & Err.Description & Err.Number, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    thisDoc.Undo 1
    If Not templateDoc Is Nothing Then
        templateDoc.Saved = True
        templateDoc.Close
    End If
    TemplateDownUrl = ""
    TemplateDownFile = ""
    
    Exit Sub
End Sub

Sub LocateContentInput()
    '|fffd||479||fffd||fffd||fffd||1b6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||2bc|
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||5b8||2be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||775||fffd||fffd||fffd||2be|
    '2003-07-24
    On Error Resume Next
    ThisDocument.Bookmarks("Body").Select
    Selection.MoveRight , 1
End Sub
Sub RecordTemplateInfo(DocWord As String, TemplateName As String)
    '|fffd||fffd||bc||fffd||135||fffd||2b9||fffd||f5||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||123||fffd||fffd||fffd||fffd||3e2||fffd||fffd|word|fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'DowWord|fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'TemplateName|fffd||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd|
    'word|fffd||135||fffd||fffd||435||131||fffd||fffd||fffd||fffd||fffd||fffd||1ba||371||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||1b6||fffd||4e6|
    '2003-7-25
    If Not ThisDocument.Variables("DocWord") Is Nothing Then    '|fffd||fffd||fffd||fffd||47e||fffd||fffd||fffd||fffd||6b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7b8||fffd||fffd||fffd||5b5|
        ThisDocument.Variables("DocWord").Value = DocWord
    Else                                                        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4f1||fffd||fffd||fffd|
        Call ThisDocument.Variables.Add("DocWord", DocWord)
    End If
    If Not ThisDocument.Variables("TemplateName") Is Nothing Then
        ThisDocument.Variables("TemplateName").Value = TemplateName
    Else
        Call ThisDocument.Variables.Add("TemplateName", TemplateName)
    End If
End Sub

Function GetMergeFields(Optional ByVal strFieldName As String)
    On Error Resume Next
    With ThisDocument
        Dim fld As Field
        For Each fld In .Fields
            GetMergeFields = GetMergeFields & GetMergeField(fld, strFieldName)
        Next
        Dim shp As Shape
        For Each shp In .Shapes
            For Each fld In shp.TextFrame.TextRange.Fields
                GetMergeFields = GetMergeFields & GetMergeField(fld, strFieldName)
            Next
        Next
    End With
End Function

Function GetMergeField(fld As Field, ByVal strFieldName As String)
    Dim strCode As String, strName As String
    strCode = Trim$(fld.Code)
    If InStr(strCode, "MERGEFIELD") = 1 Then
        strName = Trim(Mid$(strCode, 12))
        If strName = strFieldName Or strFieldName = "" Then
            GetMergeField = "&" & strName & "=" & fld.Result
        End If
    End If
End Function

Sub UnlinkAllFields()
    '|fffd||3f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ActiveDocument.Fields.Unlink
    
    Dim i As Integer
    Dim count As Integer
    
    count = ActiveDocument.Shapes.count
    
    On Error Resume Next
    For i = 0 To count
        ActiveDocument.Shapes(i).TextFrame.TextRange.Fields.Unlink
    Next
    
    ActiveDocument.Saved = False
    
End Sub

Sub DeleteObjects()
    On Error Resume Next
    ThisDocument.Variables("ServerURL").Delete
    ThisDocument.Variables("DbURL").Delete
    ThisDocument.Variables("Cookies").Delete
    ThisDocument.Variables("DataServer").Delete
    ThisDocument.Variables("DataDbName").Delete
    ThisDocument.Variables("ExecuteAgentPath").Delete
    ThisDocument.Variables("gUserName").Delete
    ThisDocument.Variables("gUNID").Delete
    ThisDocument.Variables("gWordType").Delete
    ThisDocument.Variables("gWordBody").Delete
    ThisDocument.Variables("gWordSource").Delete
    ThisDocument.Variables("gFileType").Delete
    ThisDocument.Variables("gOldUser").Delete
    ThisDocument.Variables("gAllDocWord").Delete
'    ThisDocument.Variables("WordType").Delete
End Sub

Sub SaveObjects()
    Call SetVariablesSetting("ServerURL", gobjFtp.ServerURL)
    Call SetVariablesSetting("DbURL", gobjFtp.DbURL)
    Call SetVariablesSetting("Cookies", gobjFtp.Cookies)
    Call SetVariablesSetting("DataServer", gobjFtp.DataServer)
    Call SetVariablesSetting("DataDbName", gobjFtp.DataDbName)
    Call SetVariablesSetting("ExecuteAgentPath", gobjFtp.ExecuteAgentPath)
    Call SetVariablesSetting("gUserName", gUserName)
    Call SetVariablesSetting("gUNID", gUNID)
    Call SetVariablesSetting("gWordType", gWordType)
    Call SetVariablesSetting("gWordBody", gWordBody)
    Call SetVariablesSetting("gWordSource", gWordSource)
    Call SetVariablesSetting("gFileType", gFileType)
    Call SetVariablesSetting("gOldUser", gOldUser)
    Call SetVariablesSetting("gAllDocWord", gAllDocWord)
    
    'Call SetVariablesSetting("gExistBodyBookMark", gExistBodyBookMark)
End Sub

Function GetVariablesSetting(ByVal strName As String, Optional ByVal strValue As String) As String
    On Error GoTo Errhandle:
    GetVariablesSetting = ThisDocument.Variables(strName).Value
    Exit Function
Errhandle:
    GetVariablesSetting = strValue
End Function

Sub SetVariablesSetting(ByVal strName As String, ByVal strValue As String)
    On Error GoTo Errhandle:
    ThisDocument.Variables(strName).Value = strValue
    Exit Sub
Errhandle:
    Call ThisDocument.Variables.Add(strName, strValue)
End Sub

Function IsFromOA() As Boolean
    On Error GoTo Errhandle

    If gUserName <> "" Then
        IsFromOA = True
    Else
        Dim strWordType As String
        strWordType = GetVariablesSetting("WordType", "")

        '|fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||738||fffd||fffd||fffd|,|fffd||fffd||fffd||fffd||5be|WordType="createword"
        If strWordType <> "createword" Then
            IsFromOA = False
            Exit Function
        End If
        
 '       Dim lngHWND As Long
 '       lngHWND = GetSetting("RJeGov.RJWord", "Window", GetVariablesSetting("gUNID", "HWND"), 0)
'        If ThisDocument.ActiveWindow.Caption = GetWindowCaption(lngHWND) Then
         gUserName = GetVariablesSetting("gUserName", "")
           If gUserName = "" Then
             IsFromOA = False
             Exit Function
           Else
           
            IsFromOA = True
            ThisDocument.Saved = False
            Set gobjFtp = CreateObject("RJeGov.RJWord")
            gobjFtp.ServerURL = GetVariablesSetting("ServerURL", "") 'objFtp.ServerURL
            gobjFtp.DbURL = GetVariablesSetting("DbURL", "") 'objFtp.DbURL
            gobjFtp.Cookies = GetVariablesSetting("Cookies", "") 'objFtp.Cookies
            gobjFtp.DataServer = GetVariablesSetting("DataServer", "")
            gobjFtp.DataDbName = GetVariablesSetting("DataDbName", "")
            gobjFtp.ExecuteAgentPath = GetVariablesSetting("ExecuteAgentPath", "")
            gUNID = GetVariablesSetting("gUNID", "")
     
            gWordType = GetVariablesSetting("gWordType", "")
            gWordBody = GetVariablesSetting("gWordBody", "")
            gWordSource = GetVariablesSetting("gWordSource", "")
            gFileType = GetVariablesSetting("gFileType", "")
            gOldUser = GetVariablesSetting("gOldUser", "")
            gAllDocWord = GetVariablesSetting("gAllDocWord", "")
            'gExistBodyBookMark = GetVariablesSetting("gExistBodyBookMark", 0)
       End If

    End If
    
    DeleteObjects
    
    Exit Function
Errhandle:
    MsgBox Err.Description
    Exit Function
End Function

Sub CenterTitle()
    On Error GoTo Errhandle:
    Dim fld As Field
    Dim strCode As String, strName As String
    For Each fld In ThisDocument.Fields
        strCode = Trim$(fld.Code)
'        If InStr(strCode, "MERGEFIELD") = 1 Then
'            strName = Mid$(strCode, 12)
'            If Right$(strName, 2) = "|fffd||fffd||fffd||fffd|" Then
'                fld.Result.ParagraphFormat.Alignment = wdAlignParagraphCenter
'            End If
'        End If
        If InStr(strCode, "MERGEFIELD") = 1 And InStr(strCode, "|fffd||fffd||fffd||fffd|") > 0 Then
            fld.Result.ParagraphFormat.Alignment = wdAlignParagraphCenter
        End If
    Next
    Exit Sub
Errhandle:
    Exit Sub
End Sub
'2005.6.6 for officexp or office2003 only
'Sub AcceptAllChangesInDoc()
    'Reject
'End Sub

Sub AcceptAllChangesInDocAndStopTracking()
    Reject
End Sub

Sub AcceptAllChangesShown()
    Reject
End Sub

Sub AcceptChangesSelected()
    Reject
End Sub

Sub RejectAllChangesInDoc()
    Reject
End Sub

Sub RejectAllChangesShown()
    Reject
End Sub

Sub RejectChangesSelected()
    Reject
End Sub



Attribute VB_Name = "frmSelect"
Attribute VB_Base = "0{C1B5D367-2699-4EDE-BB70-10BD1AE31CFA}{B69EA7F5-3A7F-4F9C-BE69-D27D18528C48}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private strOption As String     'EnumWord|fffd||fffd||fffd||fffd||fffd||137||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
Private varOption As Variant    '|fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||5b7||fffd||fffd||fffd|
Private strUrl As String        '|fffd||fffd||fffd||77f||fffd|url

Public Property Get OptionString() As String
    OptionString = strOption
End Property

Public Property Let OptionString(ByVal strValue As String)
    strOption = strValue
    strUrl = StrRight(strOption, "~")
    varOption = Explode(StrLeft(strOption, "~"), ",")
    FillWordList
End Property

Private Sub FillWordList()
    If AutoChangeFlag Then  '|fffd||fffd||fffd||fffd||1f4||fffd|word|2b1||fffd||fffd||2be||fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd|word|123||fffd||fffd||135||fffd||237||fffd||3e3||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||5bb||fffd||fffd||2be||fffd||b5||fffd||fffd||13c||fffd||fffd||fffd|
        cboWord.AddItem NewDocWord
        If cboWord.ListCount > 0 Then
            cboWord.ListIndex = 0
        End If
        FillTypeList
        Exit Sub
    End If
    
    Dim varFile, strWord As String, i As Integer
    cboWord.Clear
    For Each varFile In varOption
        strWord = StrLeft(varFile, "\")
        For i = 0 To cboWord.ListCount - 1
            If cboWord.List(i) = strWord Then
                Exit For
            End If
        Next
        If i >= cboWord.ListCount Then
            cboWord.AddItem strWord
        End If
    Next
    If cboWord.ListCount > 0 Then
        cboWord.ListIndex = 0
    End If
End Sub

Private Sub cboWord_Click()
    FillTypeList
End Sub

Private Sub FillTypeList()
    Dim varFile, strWord As String, strType As String, i As Integer
    lstType.Clear
    For Each varFile In varOption
        strWord = StrLeft(varFile, "\")
        strType = StrLeft(StrRight(varFile, "\"), "|")
        If strWord = cboWord.Text Then
            For i = 0 To lstType.ListCount - 1
                If lstType.List(i) = strType Then
                    Exit For
                End If
            Next
            If i >= lstType.ListCount Then
                lstType.AddItem strType
            End If
        End If
    Next
    If lstType.ListCount > 0 Then
        lstType.ListIndex = 0
    End If
End Sub

Private Sub cmdOK_Click()
    On Error GoTo Errhandle
    Dim opt As Variant          '|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2|
    Dim sel As String           '|461||fffd||fffd||fffd||fffd||fb||fffd|
    
    sel = cboWord.Text & "\" & lstType.Text
    For Each opt In varOption
        If InStr(opt, sel) > 0 Then    '|fffd||4b5||fffd||461||fffd||435||fffd||fffd||13c||fffd||fffd||5ba||fffd||123||fffd||fffd||fffd||fffd||3e2|
            NewTemplateName = StrLeft(StrRight(opt, "|"), "!")
            TemplateDownFile = ThisDocument.path & "\" & TEMPLATE_FILENAME_PREFIX & NewTemplateName    '|fffd||fffd||fffd||635||fffd||123||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd|t_|fffd||fffd||377||fffd||fffd||fffd||fffd||123||fffd||fffd||52d||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|
            TemplateDownUrl = StrRight(strOption, "~") & "/0/" & StrRight(opt, "!") & "/$FILE/" & NewTemplateName
        End If
    Next
    Unload Me
    Exit Sub
Errhandle:
    MsgBox "|3f5||373||fffd||fffd||fffd||fffd|" & Err.Description & Err.Number & Err.Source
    Exit Sub
End Sub

Private Sub cmdCancel_Click()
    Unload Me
End Sub


' InQuest injected base64 decoded content
' bzWR
' jZ N
' jZ N
' jZ N
' jZ N
' jZ N

INQUEST-PP=macro
