Attribute VB_Name = "API"
Option Explicit
Option Private Module

#If Win64 And VBA7 Then
Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
Declare PtrSafe Function HtmlHelp Lib "HHCtrl.ocx" Alias "HtmlHelpA" (ByVal hwndCaller As Long, ByVal pszFile As String, ByVal uCommand As Long, dwData As Any) As Long
#Else
Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
Declare Function HtmlHelp Lib "HHCtrl.ocx" Alias "HtmlHelpA" (ByVal hwndCaller As Long, ByVal pszFile As String, ByVal uCommand As Long, dwData As Any) As Long
#End If

Const HH_DISPLAY_TOPIC = &H0
Const HH_HELP_CONTEXT = &HF

Private Const SW_HIDE = 0
Private Const SW_SHOWNORMAL = 1
Private Const SW_NORMAL = 1
Private Const SW_SHOWMINIMIZED = 2
Private Const SW_SHOWMAXIMIZED = 3
Private Const SW_MAXIMIZE = 3
Private Const SW_SHOWNOACTIVATE = 4
Private Const SW_SHOW = 5
Private Const SW_MINIMIZE = 6
Private Const SW_SHOWMINNOACTIVE = 7
Private Const SW_SHOWNA = 8
Private Const SW_RESTORE = 9
Private Const SW_SHOWDEFAULT = 10
Private Const SW_MAX = 10

Private Const ERROR_OUT_OF_MEMORY = 0       'The operating system is out of memory or resources.
Private Const ERROR_FILE_NOT_FOUND = 2      'The specified file was not found.
Private Const ERROR_PATH_NOT_FOUND = 3  'The specified path was not found.
Private Const ERROR_BAD_FORMAT = 11         'The .exe file is invalid (non-Microsoft Win32|fffd| .exe or error in .exe image).
Private Const SE_ERR_FNF = 2                            'The specified file was not found.
Private Const SE_ERR_PNF = 3                        'The specified path was not found.
Private Const SE_ERR_ACCESSDENIED = 5       'The operating system denied access to the specified file.
Private Const SE_ERR_OOM = 8                        'There was not enough memory to complete the operation.
Private Const SE_ERR_SHARE = 26                 'A sharing violation occurred.
Private Const SE_ERR_ASSOCINCOMPLETE = 27   'The file name association is incomplete or invalid.
Private Const SE_ERR_DDETIMEOUT = 28            'The DDE transaction could not be completed because the request timed out.
Private Const SE_ERR_DDEFAIL = 29               'The DDE transaction failed.
Private Const SE_ERR_DDEBUSY = 30               'The Dynamic Data Exchange (DDE) transaction could not be completed because other DDE transactions were being processed.
Private Const SE_ERR_NOASSOC = 31               'There is no application associated with the given file name extension. This error will also be returned if you attempt to print a file that is not printable.
Private Const SE_ERR_DLLNOTFOUND = 32       'The specified dynamic-link library (DLL) was not found.

Public Sub Show_metodika()

    Dim sfilename As String, sHomeDir As String, retval As Long, str As String
    
    sfilename = Range("rgHelp").Cells(1, 1)
    sfilename = sfilename & vbNullString
    sHomeDir = ThisWorkbook.Path & vbNullString
    
    retval = ShellExecute(0, "open", sfilename, vbNullString, sHomeDir, SW_SHOW)
    If retval <= 32 Then
        str = "Nepodarilo sa otvori|fffd| s|fffd|bor '" & sfilename & "'."
        MsgBox str, vbInformation
    End If

End Sub

Public Sub Show_Help()

    Dim sHelpfile As String
    
    sHelpfile = Range("rgHelp").Cells(2, 1)
    sHelpfile = ThisWorkbook.Path & "\" & sHelpfile & vbNullString
    Call HtmlHelp(0, sHelpfile, HH_DISPLAY_TOPIC, ByVal "uvod2.htm")
    
End Sub
Attribute VB_Name = "Data"
Option Explicit
Option Private Module

Public Function GetRowIndex(sModul As String, iRow As Integer) As Integer
    
    GetRowIndex = -1
    Select Case sModul
        Case "dModul01"
            Select Case iRow
                Case 1, 2
                    GetRowIndex = iRow - 1
                Case 4 To 15
                    GetRowIndex = iRow - 2
                Case 17 To 35
                    GetRowIndex = iRow - 3
                Case 99
                    GetRowIndex = 33
            End Select
        Case Else
            GetRowIndex = iRow - 1
    End Select
    
End Function

Public Function GetColumnIndex(sModul As String, iColumn As Integer) As Integer

    GetColumnIndex = -1
    Select Case sModul
        Case "dModul01"
            Select Case iColumn
                Case 1 To 8
                    GetColumnIndex = iColumn - 1
                Case 11 To 16
                    GetColumnIndex = iColumn - 3
                Case 19 To 26
                    GetColumnIndex = iColumn - 5
                Case 37, 38
                    GetColumnIndex = iColumn - 15
                Case 27 To 36
                    GetColumnIndex = iColumn - 3
                Case 99
                    GetColumnIndex = 33
            End Select
        Case Else
            GetColumnIndex = iColumn
    End Select
    
End Function

Public Function GetModVal(sRangeName As String, iRow As Integer, iColumn As Integer, Optional sWbName As String) As Variant
    
    Dim sWbName2 As String, iRowIndex As Integer, iColumnIndex As Integer, vArr As Variant
    
    sWbName2 = IIf(Len(sWbName) = 0, ThisWorkbook.Name, sWbName)
    iRowIndex = GetRowIndex(sRangeName, iRow)
    iColumnIndex = GetColumnIndex(sRangeName, iColumn)
    
    If iRowIndex < 0 Or iColumnIndex < 0 Then
        GetModVal = CVErr(xlErrNA)
    Else
        vArr = GetModulValue(sWbName2, sRangeName, iRowIndex, iColumnIndex)
        GetModVal = vArr(0)
    End If

End Function

Public Function GetModulValue(sWbName As String, sRangeName As String, iRowIndex As Integer, iColumnIndex As Integer) As Variant
    
    ' funkcia vrati hodnotu z danej oblasti pre konkretny riadok a stlpec
    '
    ' sRangename - nazov oblasti s datami z listu Data, napr. dModul01, dModul02, a pod..
    ' iRowIndex, iColumnIndex - index riadku, stlpca, zacina 0 (nie podla hlavicky v module!!)
    
    Dim rg As Excel.Range, rgakt As Excel.Range, val As Variant, i As Integer, bLocked As Boolean
    
    Application.Workbooks(sWbName).Activate
    Set rg = Application.Names(sRangeName).RefersToRange
    
    Set rgakt = rg.Cells(1, 1)
    For i = 1 To iRowIndex
        Set rgakt = rgakt.Offset(1, 0)
    Next
    For i = 1 To iColumnIndex
        Set rgakt = rgakt.Offset(0, 1)
    Next
    
    ' vratim v poli hodnotu bunky a stav zamknuty/odomknuty
    val = rgakt.Value
    bLocked = rgakt.Locked
    GetModulValue = Array(val, bLocked)
    
End Function

Public Function GetModulValArray(sWbName As String, sRangeName As String, iRowIndexMax As Integer, iColumnIndexMax As Integer) As Variant
    
    ' funkcia nacita vsteky hodnoty z danej oblasti a vrati ich ako 2-rozmerne pole hodnot.
    ' vysledok da sa priamo kopirovat do inej cielovej oblasti buniek na inom liste
    '
    ' sRangename - nazov oblasti s datami z listu Data, napr. dModul01, dModul02, a pod..
    ' iRowMax, iColumnMax - max. pocet riadkov, resp. max. pocet stlpcov
    
    Dim valarr() As Variant, i As Integer, j As Integer, retval As Variant
    Dim vHodnota As Variant, bLocked As Boolean
    
    ' vratim 3D pole, matica imaxriadkov x jmaxstlcov x stavbunky zamknuty/odomknuty
    ReDim valarr(iRowIndexMax - 1, iColumnIndexMax - 1, 1)
    For i = 1 To iRowIndexMax
        For j = 1 To iColumnIndexMax
            retval = GetModulValue(sWbName, sRangeName, i, j)
            vHodnota = retval(0)
            bLocked = retval(1)
            valarr(i - 1, j - 1, 0) = vHodnota
            valarr(i - 1, j - 1, 1) = bLocked
        Next
    Next
    
    GetModulValArray = valarr
    
End Function
Attribute VB_Name = "General"
Option Explicit
Option Private Module

Public Const sHelpfile As String = "Navod.chm"

Public X As New xlEvents
Public bNoIdentControl As Boolean
Public iFixModulNr As Integer

Public lErrCritNr As Long
Public lErrWarnNr As Long

Sub setXLEvent()
    
    Set X.XLApp = Application

End Sub

Public Sub SysErrmsg()
    
    Dim str As String
    
    str = "Chyba |fffd||fffd|slo: " & Err.Number & vbCrLf & "Popis chyby: " & Err.Description
    MsgBox str, vbCritical

End Sub

Public Function TestSJ() As Boolean
    
    Dim srange As String, stitle As String, sPolNazov As String, str As String, stext As String
    Dim vRangeArr(2, 2) As Variant, i As Integer, bKodOK As Boolean, vbretval As Integer
    Dim sAddmsg As String, lSumErrNr As Long
    
    On Error GoTo lbl
    
    lErrCritNr = 0
    lErrWarnNr = 0
    If bNoIdentControl Then
        ' nekontrolujem vstupny modul
        TestSJ = True
        Exit Function
    End If
    
    ThisWorkbook.Activate
    Worksheets("Data").Activate
    
    ' kontrolujem vstupny modul
    TestSJ = False
    stitle = "Kontrola vstupn|fffd|ho modulu"
    sAddmsg = "Pokra|fffd|ova|fffd| |fffd|alej v kontrole ident. modulu?"
        
    vRangeArr(0, 0) = "dICO"
    vRangeArr(0, 1) = "I|fffd|O"
    vRangeArr(1, 0) = "dNazovSJ"
    vRangeArr(1, 1) = "N|fffd|zov spolo|fffd|nosti"
    vRangeArr(2, 0) = "dOUNazovObce"
    vRangeArr(2, 1) = "Adresa s|fffd|dla spolo|fffd|nosti - n|fffd|zov obce"

    
    For i = 0 To 2
        srange = vRangeArr(i, 0)
        sPolNazov = vRangeArr(i, 1)
        If Len(Range(srange)) = 0 Or IsEmpty(Range(srange)) Then
            lErrCritNr = lErrCritNr + 1
            str = "Polo|fffd|ka '" & sPolNazov & "' nem|fffd||fffd|e by|fffd| pr|fffd|zdna. " & vbCrLf & vbCrLf & sAddmsg
            vbretval = MsgBox(str, vbYesNoCancel + vbCritical, stitle)
            If vbretval = vbNo Then
                Range(srange).Activate
                Exit Function
            ElseIf vbretval = vbCancel Then
                Exit Function
            End If
        End If
    Next
    
    sPolNazov = "dICO"
    If Len(Range(sPolNazov)) > 0 And Not IsNumeric(Range(sPolNazov)) Then
        lErrCritNr = lErrCritNr + 1
        str = "Polo|fffd|ka 'I|fffd|O' mus|fffd| obsahova|fffd| iba |fffd||fffd|slice. " & vbCrLf & vbCrLf & sAddmsg
        vbretval = MsgBox(str, vbYesNoCancel + vbCritical, stitle)
            If vbretval = vbNo Then
                Range(srange).Activate
                Exit Function
            ElseIf vbretval = vbCancel Then
                Exit Function
            End If
    End If
    
    sAddmsg = "Pokra|fffd|ova|fffd| |fffd|alej v kontrole v|fffd|kazu?"
    stitle = "Kontrola v|fffd|kazu"
    lSumErrNr = Range("dErrSum")
    If lSumErrNr > 0 Then
        lErrWarnNr = lErrWarnNr + 1
        str = "V|fffd|kaz obsahuje chyby v d|fffd|tov|fffd|ch moduloch. Celkov|fffd| po|fffd|et ch|fffd|b je: " & lSumErrNr & vbCrLf & vbCrLf & sAddmsg
        vbretval = MsgBox(str, vbYesNoCancel + vbExclamation, stitle)
        If vbretval = vbNo Then
            'Range(srange).Activate
            Exit Function
        ElseIf vbretval = vbCancel Then
            Exit Function
        End If
        
    End If
    
    TestSJ = True
    Exit Function

lbl:
    SysErrmsg
    
End Function

Public Function GetVykazName() As String
    
    Dim sKodVykazu As String, sUIP As String, sIDZZ As String, sKodOdb As String, sKodSpec As String, sUtvarCislo As String
    Dim sAppendKod As String
    
    sIDZZ = "02"
    sKodVykazu = Range("PrintModul").Cells(1, 2)
    If Len(Range("dKodPoskytovatela")) = 12 Then
        ' kod 12-znakov
        sUIP = Left(Range("dKodPoskytovatela"), 6)
        sAppendKod = Mid(Range("dKodPoskytovatela"), 7, 6)
        GetVykazName = "Form_" & sKodVykazu & "-" & sUIP & "-" & sIDZZ & "-" & sAppendKod
    ElseIf Len(Range("dKodPoskytovatela")) = 6 Then
        ' kod 6-znakov
        sUIP = Left(Range("dKodPoskytovatela"), 6)
        sAppendKod = "000000"
        GetVykazName = "Form_" & sKodVykazu & "-" & sUIP & "-" & sIDZZ & "-" & sAppendKod
    Else
        ' Kod poskytovatela je prazdny
        sUIP = Range("dICO")
        sAppendKod = ""
        GetVykazName = "Form_" & sKodVykazu & "-" & sUIP & "-" & sIDZZ
    End If
    
    'GetVykazName = "Vyk_" & sKodVykazu & "_" & Range("dICO") & "_" & Range("dKodPoskytovatela")
    
End Function

Public Function TestSJ2() As Boolean
    
    Dim srange As String, stitle As String, sPolNazov As String, str As String, stext As String
    Dim vRangeArr(2, 2) As Variant, i As Integer, bKodOK As Boolean, vbretval As Integer
    Dim sAddmsg As String, lSumErrNr As Long
    
    On Error GoTo lbl
    
    lErrCritNr = 0
    lErrWarnNr = 0
    If bNoIdentControl Then
        ' nekontrolujem vstupny modul
        TestSJ2 = True
        Exit Function
    End If
    
    ThisWorkbook.Activate
    Worksheets("Data").Activate
    
    ' kontrolujem vstupny modul
    TestSJ2 = False
    stitle = "Kontrola vstupn|fffd|ho modulu"
    sAddmsg = "Pokra|fffd|ova|fffd| |fffd|alej v kontrole ident. modulu?"
    
    vRangeArr(0, 0) = "dICO"
    vRangeArr(0, 1) = "I|fffd|O"
    vRangeArr(1, 0) = "dNazovSJ"
    vRangeArr(1, 1) = "N|fffd|zov spolo|fffd|nosti"
    vRangeArr(2, 0) = "dOUNazovObce"
    vRangeArr(2, 1) = "Adresa s|fffd|dla spolo|fffd|nosti - n|fffd|zov obce"
    
    For i = 0 To 2
        srange = vRangeArr(i, 0)
        sPolNazov = vRangeArr(i, 1)
        If Len(Range(srange)) = 0 Or IsEmpty(Range(srange)) Then
            lErrCritNr = lErrCritNr + 1
            str = "Polo|fffd|ka '" & sPolNazov & "' nem|fffd||fffd|e by|fffd| pr|fffd|zdna. " & vbCrLf & vbCrLf & sAddmsg
            vbretval = MsgBox(str, vbYesNoCancel + vbCritical, stitle)
            If vbretval = vbNo Then
                Range(srange).Activate
                Exit Function
            ElseIf vbretval = vbCancel Then
                Exit Function
            End If
        End If
    Next
    
    sPolNazov = "dICO"
    If Len(Range(sPolNazov)) > 0 And Not IsNumeric(Range(sPolNazov)) Then
        lErrCritNr = lErrCritNr + 1
        str = "Polo|fffd|ka 'I|fffd|O' mus|fffd| obsahova|fffd| iba |fffd||fffd|slice. " & vbCrLf & vbCrLf & sAddmsg
        vbretval = MsgBox(str, vbYesNoCancel + vbCritical, stitle)
            If vbretval = vbNo Then
                Range(srange).Activate
                Exit Function
            ElseIf vbretval = vbCancel Then
                Exit Function
            End If
    End If
    
    TestSJ2 = True
    Exit Function

lbl:
    SysErrmsg
    
End Function

Public Sub Menu_UlozitVykazAko()
    
    Dim sWbName As String, msgstr As String, stitle As String
    
    On Error GoTo lbl
    
    stitle = "Kontrola v|fffd|kazu"
    If TestSJ2 Then
        If lErrCritNr > 0 Then
            msgstr = "Pri kontrole v|fffd|kazu boli hl|fffd|sen|fffd| kritick|fffd| chyby. Najprv je potrebn|fffd| odstr|fffd|ni|fffd| v|fffd|etky kritick|fffd| chyby, a|fffd| potom mo|fffd|n|fffd| ulo|fffd|i|fffd| v|fffd|kaz."
            MsgBox msgstr, vbCritical, stitle
            Exit Sub
        Else
            sWbName = GetVykazName
            Application.Dialogs(xlDialogSaveAs).Show sWbName
        End If
    End If
    
    Exit Sub

lbl:
    SysErrmsg

End Sub

Public Sub Menu_UlozitVykaz()
    
    Dim sWbName As String, msgstr As String, stitle As String
    
    On Error GoTo lbl
    stitle = "Kontrola v|fffd|kazu"
    If TestSJ2 Then
        If lErrCritNr > 0 Then
            msgstr = "Pri kontrole v|fffd|kazu boli hl|fffd|sen|fffd| kritick|fffd| chyby. Najprv je potrebn|fffd| odstr|fffd|ni|fffd| v|fffd|etky kritick|fffd| chyby, a|fffd| potom mo|fffd|n|fffd| ulo|fffd|i|fffd| v|fffd|kaz."
            MsgBox msgstr, vbCritical, stitle
            Exit Sub
        Else
            ThisWorkbook.Save
        End If
    End If
    
    Exit Sub

lbl:
    SysErrmsg
    
End Sub


Public Sub Menu_ExportovatVykaz()

    Dim sWbName As String, msgstr As String, stitle As String, sKodVykazu As String
    Dim isSaved As Boolean
    
    On Error GoTo lbl
    isSaved = ThisWorkbook.Saved
    sKodVykazu = Range("PrintModul").Cells(1, 2)
    If vbCancel = MsgBox("Exportova|fffd| d|fffd|ta z v|fffd|kazu '" & sKodVykazu & "' do s|fffd|boru pre NCZI?", vbOKCancel + vbQuestion) Then
        Exit Sub
    End If
    
    stitle = "Kontrola v|fffd|kazu"
    If TestSJ Then
        If lErrCritNr > 0 Then
            msgstr = "Pri kontrole v|fffd|kazu boli hl|fffd|sen|fffd| kritick|fffd| chyby. Najprv je potrebn|fffd| odstr|fffd|ni|fffd| v|fffd|etky kritick|fffd| chyby, a|fffd| potom mo|fffd|n|fffd| exportova|fffd| v|fffd|kaz."
            MsgBox msgstr, vbCritical, stitle
            ThisWorkbook.Saved = isSaved
            Exit Sub
        End If
        
        If lErrCritNr = 0 And lErrWarnNr > 0 Then
            msgstr = "Pri kontrole v|fffd|kazu boli hl|fffd|sen|fffd| varovn|fffd| upozornenia. Napriek tomu exportova|fffd| v|fffd|kaz?"
            If vbCancel = MsgBox(msgstr, vbExclamation + vbOKCancel, stitle) Then
                ThisWorkbook.Saved = isSaved
                Exit Sub
            End If
        End If
        sWbName = GetVykazName
        ExportData
    End If
    
    ThisWorkbook.Saved = isSaved
    Exit Sub

lbl:
    SysErrmsg

End Sub

Public Sub Menu_TlacitVykaz()
    
    Dim sWbName As String, msgstr As String, stitle As String
    
    On Error GoTo lbl
    stitle = "Kontrola v|fffd|kazu"
    Load frmPrint
    frmPrint.Show
    Exit Sub
    
    
    If TestSJ Then
        If lErrCritNr > 0 Then
            msgstr = "Pri kontrole v|fffd|kazu boli hl|fffd|sen|fffd| kritick|fffd| chyby. Najprv je potrebn|fffd| odstr|fffd|ni|fffd| v|fffd|etky kritick|fffd| chyby, a|fffd| potom mo|fffd|n|fffd| vytla|fffd|i|fffd| v|fffd|kaz."
            MsgBox msgstr, vbCritical, stitle
            Exit Sub
        End If
        
        If lErrCritNr = 0 And lErrWarnNr > 0 Then
            msgstr = "Pri kontrole v|fffd|kazu boli hl|fffd|sen|fffd| varovn|fffd| upozornenia. Napriek tomu vytla|fffd|i|fffd| v|fffd|kaz?"
            If vbCancel = MsgBox(msgstr, vbExclamation + vbOKCancel, stitle) Then
                Exit Sub
            End If
        End If
        Load frmPrint
        frmPrint.Show
    End If
    Exit Sub

lbl:
    SysErrmsg


End Sub

Public Sub DisableToolbars()

    Dim cb As CommandBar
    
    For Each cb In CommandBars
        If cb.BuiltIn And cb.Type = msoBarTypeNormal Then
            cb.Enabled = False
        End If
    Next
    
End Sub

Public Sub EnableToolbars()

    Dim cb As CommandBar
    
    For Each cb In CommandBars
        If cb.BuiltIn And cb.Type = msoBarTypeNormal Then
            cb.Enabled = True
        End If
    Next
    
End Sub

Public Sub ToogleMenubar()

    If CommandBars.ActiveMenuBar.BuiltIn Then
        CommandBars(DisMenuName).Visible = True
    Else
        CommandBars("Worksheet Menu Bar").Visible = True
    End If
    
End Sub

Public Sub ToogleFormulaPanel()
    
    If Application.DisplayFormulaBar Then
        Application.DisplayFormulaBar = False
    Else
        Application.DisplayFormulaBar = True
    End If
    
End Sub

Public Sub ToogleToolbars()

    Static isToolbarsEnabled As Boolean
    
    If isToolbarsEnabled Then
        DisableToolbars
        isToolbarsEnabled = False
    Else
        EnableToolbars
        isToolbarsEnabled = True
    End If
    
End Sub

Public Sub Menu_FreezePanes()
    
    'ThisWorkbook.Worksheets("Data").ScrollArea = ""
    If ActiveWindow.FreezePanes Then
        ActiveWindow.FreezePanes = False
    Else
        ActiveWindow.FreezePanes = True
    End If
    
End Sub

Public Sub Menu_FreezeModul()
    
    Load frmFixModul
    frmFixModul.Show
    
End Sub

Public Sub Menu_Exit()
    
    If vbOK = MsgBox("Naozaj chcete ukon|fffd|i|fffd| pr|fffd|cu s v|fffd|kazom?", vbQuestion + vbOKCancel) Then
        'ThisWorkbook.Close
        SendKeys "^{w}"
    End If
    
End Sub


Public Sub Menu_About()
    
    Load frmAbout
    frmAbout.Show
    
End Sub

Public Sub Menu_Metodika()

    Show_metodika

End Sub

Public Sub Menu_Help()
    
    'MsgBox "|fffd|iadna pomoc ani n|fffd|vod nie je k dispoz|fffd|cii.", vbInformation
    Show_Help
    
End Sub

Public Sub SetIdentControlMode()

    If bNoIdentControl Then
        bNoIdentControl = False
        MsgBox "Kontrola vstupn|fffd|ho modulu bola zapnut|fffd|.", vbInformation
    Else
        bNoIdentControl = True
        MsgBox "Kontrola vstupn|fffd|ho modulu bola vypnut|fffd|.", vbInformation
    End If
    
End Sub

Public Sub Menu_Option()
    
    Load frmOption
    frmOption.Show
    
End Sub

Public Function getRowSource(sRangeName As String) As String
    
    Dim maxrows As Integer, maxcolumns As Integer, vVal As Variant, i As Integer
    Dim sheetname As String, lastrow As Integer
    
    sheetname = Range(sRangeName).Worksheet.Name
    'maxrows = Range(sRangeName).Rows.Count
    i = 0
    maxcolumns = Range(sRangeName).Columns.Count
    Do
        i = i + 1
        vVal = Range(sRangeName).Cells(i, 1)
        If IsNull(vVal) Or IsEmpty(vVal) Then
            lastrow = i - 1
            Exit Do
        End If
    Loop
    
    getRowSource = sheetname & "!" & Range(sRangeName).Cells(1, 1).Address & ":" & Range(sRangeName).Cells(lastrow, maxcolumns).Address
    
End Function

Public Sub SetSheetHeader(sSheetName As String)
    
    Dim oldheader As String, newheader As String
    
    ' iba ak to nie je strana Uvod
    If StrComp(sSheetName, "Uvod", vbTextCompare) <> 0 Then
        oldheader = Sheets(sSheetName).PageSetup.RightHeader
        newheader = "&8" & GetVykazName
        If StrComp(oldheader, newheader, vbTextCompare) <> 0 Then
            ' prepisem, iba ka zmena, inak by stale sa zosit chcel ukladat
            Sheets(sSheetName).PageSetup.RightHeader = newheader
        End If
    End If
    
End Sub

Public Sub SetWindow_Normal()
    
    Dim i As Integer
    
    On Error GoTo lbl
    For i = 2 To ThisWorkbook.Windows.Count
        ActiveWindow.Close
    Next
    
    ActiveWindow.WindowState = xlMaximized
    Sheets("Data").Select
    
    Exit Sub
lbl: SysErrmsg

End Sub

Public Sub SetWindow_KontrolaR()

    On Error GoTo lbl
    If ThisWorkbook.Windows.Count = 1 Then
        Sheets("Data").Select
        ActiveWindow.NewWindow
        Windows.Arrange xlHorizontal, True
        Sheets("KontrolaR").Select
    Else
        Sheets("Data").Select
        ThisWorkbook.Windows(2).Activate
        Windows.Arrange xlHorizontal, True
        Sheets("KontrolaR").Select
    End If
    
    Exit Sub
lbl: SysErrmsg

End Sub

Public Sub SetWindow_KontrolaS()
    
    On Error GoTo lbl
    If ThisWorkbook.Windows.Count = 1 Then
        Sheets("Data").Select
        ActiveWindow.NewWindow
        Windows.Arrange xlVertical, True
        Sheets("KontrolaS").Select
    Else
        Sheets("Data").Select
        ThisWorkbook.Windows(2).Activate
        Windows.Arrange xlVertical, True
        Sheets("KontrolaS").Select
    End If
    
    Exit Sub
lbl: SysErrmsg

End Sub

Public Sub DelRangesWithQuestion()

    Dim rgname As Name, sname As String, srange As String, msgres As VbMsgBoxResult
    Dim smsg As String, sr1c1 As String
    
    On Error Resume Next
    For Each rgname In Application.Names
        sname = rgname.Name
        srange = rgname.RefersToRange.Address
        sr1c1 = rgname.RefersToR1C1
        smsg = "N|fffd|zov: " & sname & vbCrLf & _
                "RefersToRange: " & srange & vbCrLf & _
                "RefersToR1C1:  " & sr1c1 & vbCrLf & vbCrLf & _
                "Odstr|fffd|ni|fffd| t|fffd|to oblas|fffd| zo zo|fffd|ita?"
        
        msgres = MsgBox(smsg, vbYesNoCancel, "N|fffd|zvy oblast|fffd|")
        Select Case msgres
            Case vbOK
                Application.Names(sname).Delete
            Case vbCancel
                Exit Sub
        End Select
    Next

End Sub

Public Sub DelRangesA()

    Dim rgname As Name, sname As String, srange As String, msgres As VbMsgBoxResult
    Dim smsg As String, sr1c1 As String, icountdel As Integer, icount As Integer
    
    On Error Resume Next
    icount = Application.Names.Count
    For Each rgname In Application.Names
        sname = rgname.Name
        srange = rgname.RefersToRange.Address
        sr1c1 = rgname.RefersToR1C1
        
        If InStr(1, sr1c1, "#REF!", vbTextCompare) Then
            icountdel = icountdel + 1
            Application.Names(sname).Delete
        End If
    Next
    
    MsgBox "Zo zo|fffd|itu bolo odstr|fffd|nen|fffd|ch " & icountdel & " pomenovan|fffd|ch oblast|fffd| (chybn|fffd| odkaz) z celkov|fffd|ho po|fffd|tu " & icount & "."
    
End Sub

Public Sub DelRangesB()

    Dim rgname As Name, sname As String, srange As String, msgres As VbMsgBoxResult
    Dim smsg As String, sr1c1 As String, icountdel As Integer, icount As Integer
    
    On Error Resume Next
    icount = Application.Names.Count
    For Each rgname In Application.Names
        sname = rgname.Name
        srange = rgname.RefersToRange.Address
        sr1c1 = rgname.RefersToR1C1
        
        If InStr(1, sr1c1, "'", vbTextCompare) Then
            icountdel = icountdel + 1
            Application.Names(sname).Delete
        End If
    Next
    
    MsgBox "Zo zo|fffd|itu bolo odstr|fffd|nen|fffd|ch " & icountdel & " pomenovan|fffd|ch oblast|fffd| (extern|fffd| prepojenie) z celkov|fffd|ho po|fffd|tu " & icount & "."
    
End Sub

Public Sub SetIdentModulNames()

    Dim sRangeName As String, nmnames As Variant, imax As Integer, i As Integer
    Dim rg As Range, sadr As String, icount As Integer
    
    On Error GoTo lbl
    nmnames = Array("dRok", "dMesiac", "dICO", "dIDZZ", "dKodPoskytovatela", _
            "dNazovSJ", "dSJNazovObce", "dSJKodObce", "dSJUlica", "dSJCisloDomu", "dSJPSC", "dSJNazovOkresu", "dSJKodOkresu", _
            "dNazovOU", "dOUNazovObce", "dOUKodObce", "dOUUlica", "dOUCisloDomu", "dOUPSC", "dOUNazovOkresu", "dOUKodOkresu", _
            "dOdoslane", "dZostavil", "dTelefon", "dKlapka", "dEmail", "dPoznamka")
    
    sadr = Selection.Cells(1, 1).Address
    If vbCancel = MsgBox("Nastavi|fffd| oblasti pre ident. modul od bunky '" & sadr & "'?", vbQuestion + vbOKCancel) Then
        Exit Sub
    End If
    
    ThisWorkbook.Worksheets("Data").Activate
    Set rg = Range(sadr)
    
    imax = UBound(nmnames)
    For i = 0 To imax
        sRangeName = nmnames(i)
        With Application
            .Names(sRangeName).Delete
            sadr = "=Data!" & rg.Address
            .Names.Add sRangeName, sadr
        End With
        
        icount = icount + 1
        Set rg = rg.Offset(1, 0)
    Next
    
    MsgBox "V identifika|fffd|nom module bolo |fffd|spe|fffd|ne nastaven|fffd|ch " & icount & " oblasti.", vbInformation
    Exit Sub

lbl:
    If Err.Number = 1004 Then
        Resume Next
    Else
        MsgBox Err.Description, vbCritical
    End If
    
End Sub

Public Sub SetCiselnikNames()

    Dim sRangeName As String, nmnames As Variant, imax As Integer, i As Integer
    Dim rg As Range, sadr As String, icount As Integer
    
    On Error GoTo lbl
    
    With Application
        ThisWorkbook.Worksheets("ZUJObce").Activate
    
        sRangeName = "cisZUJObce"
        .Names(sRangeName).Delete
        Range("A1").Select
        Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
        Set rg = .Selection
        sadr = "=ZUJObce!" & rg.Address
        .Names.Add sRangeName, sadr
        
        sRangeName = "cisObecNazov"
        .Names(sRangeName).Delete
        Range("A2").Select
        Range(Selection, Selection.End(xlDown)).Select
        Set rg = .Selection
        sadr = "=ZUJObce!" & rg.Address
        .Names.Add sRangeName, sadr
        
        ThisWorkbook.Worksheets("Konfig").Activate
        
        sRangeName = "dKodVykazu"
        .Names(sRangeName).Delete
        Range("B2").Select
        Set rg = .Selection
        sadr = "=Konfig!" & rg.Address
        .Names.Add sRangeName, sadr
    End With
    
    MsgBox "Boli |fffd|spe|fffd|ne pomenovan|fffd| oblasti pre |fffd||fffd|seln|fffd|ky.", vbInformation
    Exit Sub

lbl:
    If Err.Number = 1004 Then
        Resume Next
    Else
        MsgBox Err.Description, vbCritical
    End If
    
End Sub

Public Sub ShiftAdress()

    Dim idelta As Integer, cl As Range, sadr As String, sadr1 As String, sadr2 As String
    Dim i As Integer, ipos As Integer, sNumber As String, sleft As String
    
    idelta = InputBox("Zadaj ve|fffd|kos|fffd| posunutia", , "13")
    If idelta = 0 Then
        Exit Sub
    End If
    
    For Each cl In Selection.Cells
        sadr = cl.Value
        ipos = InStr(1, sadr, ":", vbTextCompare)
    
        If ipos > 0 Then
            ' prva cast po :
            sadr1 = Left(sadr, ipos - 1)
            i = 0
            Do
                i = i + 1
                sleft = Right(sadr1, i)
                If Not IsNumeric(sleft) Then
                    i = i - 1
                    sleft = Right(sadr1, i)
                    Exit Do
                End If
            Loop
                            
            sNumber = val(sleft) + idelta
            sadr1 = Left(sadr1, Len(sadr1) - i) & sNumber
            
            ' druha cast od :
            sadr2 = Mid(sadr, ipos + 1)
            i = 0
            Do
                i = i + 1
                sleft = Right(sadr2, i)
                If Not IsNumeric(sleft) Then
                    i = i - 1
                    sleft = Right(sadr2, i)
                    Exit Do
                End If
            Loop
            
            sNumber = val(sleft) + idelta
            sadr2 = Left(sadr2, Len(sadr2) - i) & sNumber
            
            ' novy string
            cl.Value = sadr1 & ":" & sadr2
        Else
            ' okrem A2
            i = 0
            Do
                i = i + 1
                sleft = Right(sadr, i)
                If Not IsNumeric(sleft) Then
                    i = i - 1
                    sleft = Right(sadr, i)
                    Exit Do
                End If
            Loop
                            
            sNumber = val(sleft) + idelta
            sadr = Left(sadr, Len(sadr) - i) & sNumber
            
            cl.Value = sadr
        End If
    Next
    
End Sub

Public Sub ShowHidenSheets()

    Dim ws As Worksheet

    For Each ws In Worksheets
        ws.Visible = xlSheetVisible
        Select Case ws.Name
            Case "Data", "Konfig", "Uvod", "ZUJObce"
                ws.Unprotect
        End Select
    Next
    
End Sub

Public Sub Show_ZoznamObecSJ()

    On Error GoTo lbl
    Load frmObce
    frmObce.isObecSJ = True
    frmObce.Show
    Exit Sub
    
lbl: SysErrmsg

End Sub

Public Sub Show_ZoznamObecOU()

    On Error GoTo lbl
    Load frmObce
    frmObce.isObecSJ = False
    frmObce.Show
    Exit Sub
    
lbl: SysErrmsg

End Sub




Attribute VB_Name = "H|fffd|rok1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Option Explicit

Attribute VB_Name = "H|fffd|rok11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Option Explicit

Attribute VB_Name = "H|fffd|rok2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "H|fffd|rok3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "H|fffd|rok8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "H|fffd|rok9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Option Explicit

Attribute VB_Name = "Menu"
Option Explicit
Option Private Module

Public Const DisMenuName As String = "DisMenu"
Public Const DisUserToolbarname = "DisUserToolbar"
Public Const DisAdminToolbarname = "DisAdminToolbar"

Public Sub RemoveSafeAllMenu()
    
    Dim cbMenu As CommandBar
    
    ' odstani vsetky user menu
    On Error GoTo lbl
    For Each cbMenu In CommandBars
        If cbMenu.BuiltIn = False Then
            cbMenu.Delete
        End If
    Next
    Exit Sub

lbl:
    SysErrmsg
    
End Sub

Public Sub RemoveSafeMenu(sMenuName As String)
    
    Dim cbMenu As CommandBar
    
    On Error GoTo lbl
    ' ak existuje uz MB s takymto nazvom, odstranim ho
    For Each cbMenu In CommandBars
        If cbMenu.BuiltIn = False Then
            If StrComp(cbMenu.Name, sMenuName, vbTextCompare) = 0 Then
                cbMenu.Delete
                Exit For
            End If
        End If
    Next
    Exit Sub

lbl:
    SysErrmsg
    
End Sub

Public Sub CreateDisMenu()
    
    Dim cbMenu As CommandBar, ix As Integer, ix1 As Integer, sMenuItem As String
    
    On Error GoTo lbl
    
    ' ak existuje uz MB s takymto nazvom, odstranim ho
    For Each cbMenu In CommandBars
        If cbMenu.BuiltIn = False And StrComp(cbMenu.Name, DisMenuName, vbTextCompare) = 0 Then
            cbMenu.Delete
        End If
    Next
    
    ' pridam do kolekcie novy objekt
    Set cbMenu = Application.CommandBars.Add(DisMenuName, , True, True)
    
    ' menu V|fffd|kazy
    With cbMenu.Controls.Add(msoControlPopup)
        .Caption = "Formul|fffd|re"
        ix = .Index
    End With
    
    With cbMenu.Controls(ix).Controls.Add(msoControlButton)
        .BeginGroup = True
        .Caption = "Ulo|fffd|i|fffd| formul|fffd|r"
        '.FaceId = 3
        .OnAction = "Menu_UlozitVykaz"
        ix1 = .Index
    End With
    
    With cbMenu.Controls(ix).Controls.Add(msoControlButton)
        .Caption = "Ulo|fffd|i|fffd| formul|fffd|r ako..."
        .FaceId = 3
        .OnAction = "Menu_UlozitVykazAko"
        ix1 = .Index
    End With
    
    With cbMenu.Controls(ix).Controls.Add(msoControlButton)
        .Enabled = False
        .BeginGroup = True
        .Caption = "Vytla|fffd|i|fffd| formul|fffd|r"
        .FaceId = 4
        .OnAction = "Menu_TlacitVykaz"
        ix1 = .Index
    End With
    
'    With cbMenu.Controls(ix).Controls.Add(msoControlButton)
'        .Caption = "Exportova|fffd| v|fffd|kaz"
'        '.BeginGroup = True
'        .FaceId = 59
'        .OnAction = "Menu_ExportovatVykaz"
'        ix1 = .Index
'    End With
    
    
    With cbMenu.Controls(ix).Controls.Add(msoControlButton)
        .BeginGroup = True
        .Caption = "Koniec"
        .OnAction = "Menu_exit"
        ix1 = .Index
    End With
    
    ' menu Zobrazit
    sMenuItem = CommandBars(1).FindControl(, 30004).Caption
    CommandBars(1).Controls(sMenuItem).Copy cbMenu
    
    ' menu Okno
    sMenuItem = CommandBars(1).FindControl(, 30009).Caption
    CommandBars(1).Controls(sMenuItem).Copy cbMenu
    
    CommandBars(1).FindControl(, 178, , , True).Visible = False
    
    ' menu Pomoc
    With cbMenu.Controls.Add(msoControlPopup)
        .Caption = "Pomoc"
        ix = .Index
    End With

    With cbMenu.Controls(ix).Controls.Add(msoControlButton)
        .OnAction = "Menu_Help"
        .Caption = "Pomoc k programu"
    End With
    
    With cbMenu.Controls(ix).Controls.Add(msoControlButton)
        .OnAction = "Menu_About"
        .Caption = "O programe..."
        .BeginGroup = True
    End With
    
    With cbMenu
        .Visible = True
        .protection = msoBarNoCustomize
    End With
    Exit Sub

lbl:
    SysErrmsg
    
End Sub

Public Function CreateUserToolbar() As CommandBar
    
    Dim cb As CommandBar, cmdButton As CommandBarButton
    Dim cbxButton As CommandBarComboBox, cbx As CommandBarComboBox
    
    On Error GoTo lbl
    
    For Each cb In CommandBars
        If cb.BuiltIn = False And StrComp(cb.Name, DisUserToolbarname, vbTextCompare) = 0 Then
            cb.Delete
        End If
    Next
    
    Set cb = CommandBars.Add(DisUserToolbarname, , , True)
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .Caption = "Ulo|fffd|i|fffd| formul|fffd|r ako..."
        .Style = msoButtonIcon
        .FaceId = 3
        .OnAction = "Menu_UlozitVykazAko"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .Enabled = False
        .Caption = "Tla|fffd| formul|fffd|ru"
        .Style = msoButtonIcon
        .FaceId = 4
        .OnAction = "Menu_TlacitVykaz"
    End With
    
'    Set cmdButton = cb.Controls.Add(msoControlButton)
'    With cmdButton
'        .Caption = "Exportova|fffd| v|fffd|kaz"
'        .Style = msoButtonIcon
'        .FaceId = 59
'        .OnAction = "Menu_ExportovatVykaz"
'    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = False
        .Caption = "Ukotvi|fffd|/uvo|fffd|ni|fffd| modul"
        .Style = msoButtonIcon
        .FaceId = 611
        .OnAction = "Menu_FreezeModul"
    End With
    
    CommandBars("Standard").FindControl(, 1733).Copy cb
    
'    Set cbx = cb.Controls.Add(msoControlComboBox)
'    With cbx
'        .AddItem "ENTER vpravo"
'        .AddItem "ENTER dole"
'        .AddItem "ENTER v|fffd|avo"
'        .AddItem "ENTER hore"
'        .ListIndex = 2
'        .OnAction = "Menu_ENTER"
'        .Tag = "ENTER"
'    End With
'    Application.MoveAfterReturnDirection = xlDown
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = True
        .Caption = "Norm|fffd|lny re|fffd|im"
        .Style = msoButtonIcon
        .FaceId = 69
        .OnAction = "SetWindow_Normal"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .Caption = "Re|fffd|im kontroly riadkov"
        .Style = msoButtonIcon
        .FaceId = 97
        .OnAction = "SetWindow_KontrolaR"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .Caption = "Re|fffd|im kontroly st|fffd|pcov"
        .Style = msoButtonIcon
        .FaceId = 98
        .OnAction = "SetWindow_KontrolaS"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = True
        .Caption = "Nastavenie programu"
        .Style = msoButtonIcon
        .FaceId = 2933
        .OnAction = "Menu_Option"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        '.BeginGroup = True
        .Caption = "N|fffd|vod na obsluhu programu"
        .Style = msoButtonIcon
        .FaceId = 984
        .OnAction = "Menu_Help"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        '.BeginGroup = True
        .Caption = "Metodick|fffd| pokyny"
        .Style = msoButtonIcon
        .FaceId = 487
        .OnAction = "Menu_Metodika"
    End With
    
'    Set cmdButton = cb.Controls.Add(msoControlButton)
'    With cmdButton
'        .BeginGroup = True
'        .Caption = "Ukon|fffd|i|fffd| pr|fffd|cu s v|fffd|kazom"
'        .Style = msoButtonIcon
'        .FaceId = 1640
'        .OnAction = "Menu_Exit"
'    End With
    
    With cb
        cb.Position = msoBarTop
        cb.protection = msoBarNoCustomize
        cb.Visible = True
    End With
    
    Set CreateUserToolbar = cb
    Exit Function

lbl:
    SysErrmsg
    
End Function

Public Function CreateAdminToolbar() As CommandBar
    
    Dim cb As CommandBar, cmdButton As CommandBarButton
    Dim cbxButton As CommandBarComboBox
    
    On Error GoTo lbl
    
    For Each cb In CommandBars
        If cb.BuiltIn = False And StrComp(cb.Name, DisAdminToolbarname, vbTextCompare) = 0 Then
            cb.Delete
        End If
    Next
    
    Set cb = CommandBars.Add(DisAdminToolbarname, , , True)
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = True
        .Caption = "Vyme|fffd| menu Excel/DIS"
        .Style = msoButtonIcon
        .FaceId = 221
        .OnAction = "ToogleMenuBar"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .Caption = "Povoli|fffd|/Zak|fffd|za|fffd| vstaven|fffd| toolbary"
        .Style = msoButtonIcon
        .FaceId = 303
        .OnAction = "ToogleToolbars"
    End With
    
'    Set cmdButton = cb.Controls.Add(msoControlButton)
'    With cmdButton
'        .Caption = "Zapni/Vypni panel vzorcov "
'        .Style = msoButtonIcon
'        .FaceId = 477
'        .OnAction = "ToogleFormulaPanel"
'    End With
'
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = True
        .Caption = "Vyma|fffd| hodnoty v oblasti"
        .Style = msoButtonIcon
        .FaceId = 319
        .OnAction = "ClearCellValues"
    End With

    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .Caption = "Napl|fffd| oblas|fffd| hodnotami"
        .Style = msoButtonIcon
        .FaceId = 320
        .OnAction = "SetCellValues"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = True
        .Caption = "Vypni/zapni kontrolu vstup. modulu"
        .Style = msoButtonIcon
        .FaceId = 1082
        .OnAction = "SetIdentControlMode"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        '.BeginGroup = True
        .Caption = "Odomkn|fffd||fffd|/Zamkn|fffd||fffd| list"
        .Style = msoButtonIcon
        .FaceId = 225
        .OnAction = "Menu_UnprotectSheets"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        '.BeginGroup = True
        .Caption = "Uk|fffd|za|fffd|/skry|fffd| tla|fffd|ov|fffd| listy"
        .Style = msoButtonIcon
        .FaceId = 278
        .OnAction = "Menu_ShowPrintSheets"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        '.BeginGroup = True
        .Caption = "Uk|fffd|za|fffd|/skry|fffd| konfigura|fffd|n|fffd| list"
        .Style = msoButtonIcon
        .FaceId = 279
        .OnAction = "Menu_ShowConfigSheet"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = True
        .Caption = "Exportova|fffd| tla|fffd|ov|fffd| listy"
        .Style = msoButtonIcon
        .FaceId = 245
        .OnAction = "Menu_ExportPrintSheets"
    End With
    
    Set cmdButton = cb.Controls.Add(msoControlButton)
    With cmdButton
        .BeginGroup = True
        .Caption = "U01-Odstr|fffd|ni|fffd| nuly v priamych platb|fffd|ch"
        .Style = msoButtonIcon
        .FaceId = 202
        .OnAction = "Menu_FixDecimals"
    End With
    
    With cb
        cb.Position = msoBarTop
        cb.protection = msoBarNoCustomize
        cb.Visible = True
    End With
    
    Set CreateAdminToolbar = cb
    Exit Function

lbl:
    SysErrmsg
    
End Function




Attribute VB_Name = "PubModule"
Option Explicit

Public Sub Menu_FixDecimals()
Attribute Menu_FixDecimals.VB_ProcData.VB_Invoke_Func = "u\n14"

    Dim rgmod1 As Range, cl As Range
    
    On Error GoTo lbl
    If vbOK = MsgBox("Opravi|fffd| v|fffd|etky desatinn|fffd| |fffd||fffd|sla v module 2 v st|fffd|pcoch 'Pe|fffd|a|fffd|n|fffd| a nepe|fffd|a|fffd|n|fffd| plnenia'?", vbQuestion + vbOKCancel) Then
        
        ' natvrdo stlpce P-Q
        Set rgmod1 = Worksheets("Data").Range("O37:P2036")
        For Each cl In rgmod1.Cells
            If Not (IsNull(cl) Or IsEmpty(cl)) Then
                cl = Round(cl.Value2, 2)
            End If
        Next
        
        MsgBox "V|fffd|etky desatinn|fffd| |fffd||fffd|sla v module 2 boli |fffd|spe|fffd|ne opraven|fffd|.", vbInformation
    End If
    Exit Sub
    
lbl: SysErrmsg

End Sub

Public Sub Show_ZoznamObecA()

    On Error GoTo lbl
    If ActiveSheet.Name = "Data" Then
        If Not Intersect(ActiveCell, Range("dObecRangePZ")) Is Nothing Then
            Load frmObceA
            frmObceA.Show
        End If
        If Not Intersect(ActiveCell, Range("dObecRangeOs")) Is Nothing Then
            Load frmObceA
            frmObceA.Show
        End If
    End If
    Exit Sub
    
lbl: SysErrmsg

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_Activate()
    
    On Error GoTo lbl
    Application.ScreenUpdating = False
    
    'Application.DisplayFormulaBar = False
    DisableToolbars
    
    CreateDisMenu
    CreateUserToolbar
    If isAdminToolbarEnabled Then
        ' menu administratora
        CreateAdminToolbar
    End If
    
    ThisWorkbook.Activate
'    If Range("dActivRow") < 0 Then
'        Worksheets("Data").EnableSelection = xlNoSelection
'    End If
    
    Application.ScreenUpdating = False
    Exit Sub

lbl:
    Application.ScreenUpdating = True
    SysErrmsg
    
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    
    Dim msgres As Integer
    
    If Not ThisWorkbook.Saved Then
        msgres = MsgBox("Dokument sa zmenil, ale e|fffd|te nebol ulo|fffd|en|fffd|. Ulo|fffd|i|fffd| pred ukon|fffd|en|fffd|m?", vbYesNoCancel + vbQuestion)
        Select Case msgres
            Case vbYes
                Menu_UlozitVykaz
                If Not ThisWorkbook.Saved Then
                    Cancel = True
                End If
            Case vbNo
                ' aby sa uz nepytal ani Excel
                ThisWorkbook.Saved = True
            Case vbCancel
                Cancel = True
        End Select
    End If
    
End Sub

Private Sub Workbook_Deactivate()
    
    On Error GoTo lbl
    Application.ScreenUpdating = False
    
    'Application.DisplayFormulaBar = True
    EnableToolbars
    
    RemoveSafeMenu (DisMenuName)
    RemoveSafeMenu (DisUserToolbarname)
    RemoveSafeMenu (DisAdminToolbarname)
    
    Application.ScreenUpdating = True
    Exit Sub

lbl:
    Application.ScreenUpdating = True
    SysErrmsg
    
End Sub

Private Sub Workbook_Open()
    
    Dim ws As Worksheet, bSavedStatus As Boolean, i As Integer
    
    ' zapinam udalosti na urovni aplikacie
    On Error GoTo lbl
    Application.OnKey "{F1}", "Show_ZoznamObecA"
    'setXLEvent
    'CreateDisMenu
    'CreateDisToolbar
    
    ' nechcem, aby hlasilo ulozit zosit
    bSavedStatus = ThisWorkbook.Saved
    UnProtectThisWb
    
    ' zapnem iba list Data, ostatne vypnem
    ThisWorkbook.Worksheets("Data").Visible = True
    ActiveWindow.WindowState = xlMaximized
    For Each ws In ThisWorkbook.Worksheets
        Select Case ws.Name
            Case "Data", "KontrolaR", "KontrolaS", "Komentar"
                ws.Visible = True
            Case Else
                ws.Visible = False
        End Select
    Next
    
    ' necham iba jedno okno
    For i = 2 To Windows.Count
        ActiveWindow.Close
    Next
    
    ' vypnem ukotvenia
    With ThisWorkbook.Worksheets("Data")
        .Activate
        .ScrollArea = ""
    End With
    With ActiveWindow
        .FreezePanes = False
        .ScrollRow = 1
        .ScrollColumn = 1
    End With
    Range("dICO").Activate
    
    ProtectThisWb
    ThisWorkbook.Saved = True
    Exit Sub

lbl:
    ProtectThisWb
    SysErrmsg
    
End Sub






Attribute VB_Name = "Utility"
Option Explicit
Option Private Module

Public Sub TestCisOkr()
    
    Dim isOK As Boolean, i As Integer, j As Integer, sadr As String
    Dim sOrigRgName As String, sCopyRgName As String
    
    sOrigRgName = "cisOkr"
    sCopyRgName = "cisOKR2"
    
    On Error GoTo lbl
    isOK = True
    If Range(sOrigRgName).Rows.Count <> Range(sCopyRgName).Rows.Count Then
        isOK = False
    ElseIf Range(sOrigRgName).Columns.Count <> Range(sCopyRgName).Columns.Count Then
        isOK = False
    Else
        For i = 1 To Range(sOrigRgName).Rows.Count
            For j = 1 To Range(sOrigRgName).Columns.Count
                If Range(sOrigRgName).Cells(i, j) <> Range(sCopyRgName).Cells(i, j) Then
                    isOK = False
                End If
            Next
        Next
    End If
    
    If isOK Then
        MsgBox "K|fffd|pia |fffd||fffd|seln|fffd|ka okresov 'CisOKR2' je v poriadku.", vbOKOnly + vbInformation
    Else
        If vbOK = MsgBox("K|fffd|pia |fffd||fffd|seln|fffd|ka okresov 'CisOKR2' je po|fffd|koden|fffd|. Opravi|fffd|?", vbExclamation + vbOKCancel) Then
            ' velkost povodnej oblasti
            i = Range(sOrigRgName).Rows.Count - 1
            j = Range(sOrigRgName).Columns.Count - 1
            ' nova oblast bude na liste Data na povodnom mieste
            sadr = Range(sCopyRgName).Cells(1, 1).Address
            sadr = "=Data!" & sadr & ":" & Range(sadr).Offset(i, j).Address
            ' zmazem staru oblast i data
            Range(sCopyRgName).ClearContents
            Application.Names(sCopyRgName).Delete
            ' vytvorim novu
            Application.Names.Add sCopyRgName, sadr
            Range(sCopyRgName).Value = Range(sOrigRgName).Value
        End If
    End If
    Exit Sub
lbl:
    SysErrmsg
    
End Sub

Public Sub TestCisOKEC()
    
    Dim isOK As Boolean, i As Integer, j As Integer, sadr As String
    Dim sOrigRgName As String, sCopyRgName As String
    
    sOrigRgName = "cisOKEC"
    sCopyRgName = "cisOKEC2"
    
    On Error GoTo lbl
    isOK = True
    
    If Range(sOrigRgName).Rows.Count <> Range(sCopyRgName).Rows.Count Then
        isOK = False
    ElseIf Range(sOrigRgName).Columns.Count <> Range(sCopyRgName).Columns.Count Then
        isOK = False
    Else
        For i = 1 To Range(sOrigRgName).Rows.Count
            For j = 1 To Range(sOrigRgName).Columns.Count
                If Range(sOrigRgName).Cells(i, j) <> Range(sCopyRgName).Cells(i, j) Then
                    isOK = False
                End If
            Next
        Next
    End If
    
    If isOK Then
        MsgBox "K|fffd|pia |fffd||fffd|seln|fffd|ka |fffd|innost|fffd| 'CisOKEC2' je v poriadku.", vbOKOnly + vbInformation
    Else
        If vbOK = MsgBox("K|fffd|pia |fffd||fffd|seln|fffd|ka |fffd|innost|fffd| 'CisOKEC2' je po|fffd|koden|fffd|. Opravi|fffd|?", vbQuestion + vbOKCancel) Then
            ' velkost povodnej oblasti
            i = Range(sOrigRgName).Rows.Count - 1
            j = Range(sOrigRgName).Columns.Count - 1
            ' nova oblast bude na liste Data na povodnom mieste
            sadr = Range(sCopyRgName).Cells(1, 1).Address
            sadr = "=Data!" & sadr & ":" & Range(sadr).Offset(i, j).Address
            ' zmazem staru oblast i data
            Range(sCopyRgName).ClearContents
            Application.Names(sCopyRgName).Delete
            ' vytvorim novu
            Application.Names.Add sCopyRgName, sadr
            Range(sCopyRgName).Value = Range(sOrigRgName).Value
        End If
    End If
    Exit Sub
lbl:
    SysErrmsg
    
End Sub

Public Sub ClearCellValues()

    Dim rg As Range, jmax As Integer, imax As Integer, i As Integer, j As Integer
    Dim rgCell As Range
    
    Set rg = Selection
    jmax = rg.Columns.Count
    imax = rg.Rows.Count
    
    If vbOK = MsgBox("Vymaza|fffd| hodnoty vo vybranej oblasti?", vbOKCancel) Then
        For i = 1 To imax
            For j = 1 To jmax
                rg.Cells.Offset(i - 1, j - 1).Activate
                If Not ActiveCell.Locked And Not ActiveCell.HasFormula Then
                    ActiveCell.Value = Null
                End If
            Next
        Next
    End If
    
End Sub

Public Sub SetCellValues()

    Dim rg As Range, jmax As Integer, imax As Integer, i As Integer, j As Integer
    Dim vVal As Variant
    
    Set rg = Selection
    jmax = rg.Columns.Count
    imax = rg.Rows.Count
    
    vVal = InputBox("Zadaj po|fffd|iato|fffd|n|fffd| hodnotu pre naplnenie vybranej oblasti.")
    If vVal = "" Then
        Exit Sub
    End If
    
    For i = 1 To imax
        For j = 1 To jmax
            rg.Cells.Offset(i - 1, j - 1).Activate
            If Not ActiveCell.Locked And Not ActiveCell.HasFormula Then
                ActiveCell.Value = vVal
                vVal = vVal + 1
            End If
        Next
    Next

End Sub


Attribute VB_Name = "frmAbout"
Attribute VB_Base = "0{FEE2B7DB-2030-44F0-80BD-3A272A32DC9A}{C2A8C694-9829-426A-A996-B8B10EBB1D74}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdOK_Click()
    Unload Me
End Sub


Attribute VB_Name = "frmFixModul"
Attribute VB_Base = "0{AB3262CD-30C0-43EF-9FCE-0A930A8267EF}{0510BCC7-9D13-4B89-A713-5A8178038F19}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Option Explicit

Private Sub cmdCancel_Click()
    
    Unload Me
    
End Sub

Private Sub cmdFix_Click()
    
    Dim iScrollRow As Integer, iScrollColumn As Integer, sFixCell As String, sActiveCell As String
    Dim sScrollArea As String
    
    On Error GoTo lbl
    With lstModul
        sScrollArea = .Column(1, .ListIndex)
        iScrollRow = Range(sScrollArea).Cells(1, 1).Row
        iScrollColumn = Range(sScrollArea).Cells(1, 1).Column
        sFixCell = .Column(2, .ListIndex)
        sActiveCell = .Column(3, .ListIndex)
        iFixModulNr = .ListIndex
    End With
    
    With ThisWorkbook.Worksheets("Data")
        .Activate
        .ScrollArea = ""
    End With
    
    With ActiveWindow
        .FreezePanes = False
        .ScrollRow = iScrollRow
        .ScrollColumn = iScrollColumn
        Range(sFixCell).Activate
        .FreezePanes = True
        Range(sActiveCell).Activate
    End With
    ThisWorkbook.Worksheets("Data").ScrollArea = sScrollArea
    
    Unload Me
    Exit Sub

lbl:
    SysErrmsg
    Unload Me
    
End Sub

Private Sub cmdNormal_Click()
    
    On Error GoTo lbl
    With ThisWorkbook.Worksheets("Data")
        .Activate
        .ScrollArea = ""
    End With
    
    With ActiveWindow
        .FreezePanes = False
        '.ScrollRow = 1
        '.ScrollColumn = 1
        'ActiveSheet.Cells(1, 1).Activate
    End With
    
    iFixModulNr = 0
    Unload Me
    Exit Sub

lbl:
    SysErrmsg
    Unload Me
    
End Sub


Private Sub UserForm_Activate()
    
    On Error GoTo lbl
    lstModul.RowSource = getRowSource("FixModul")
    If lstModul.ListCount > 0 Then
        lstModul = lstModul.Column(0, iFixModulNr)
    End If
    Exit Sub
lbl:
    SysErrmsg
    
End Sub

Attribute VB_Name = "frmLockSheet"
Attribute VB_Base = "0{4E2293DD-5059-4242-9DE2-7F4558B5C26C}{1DC44AA1-8EE9-4B0D-AE86-30EC72DC284B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmdCancel_Click()
    
    Unload Me
    
End Sub

Private Sub cmdOK_Click()
    
    On Error GoTo lbl
    ThisWorkbook.Activate
    If optUnlockSheet Then
        ActiveSheet.Unprotect DataExpPwd
        Me.Hide
        MsgBox "Akt|fffd|vny list bol odomknut|fffd|.", vbInformation
    End If
    
    If optLockSheet Then
        ActiveSheet.Protect DataExpPwd
        Me.Hide
        MsgBox "Akt|fffd|vny list bol zamknut|fffd|.", vbInformation
    End If
    
    Unload Me
    Exit Sub

lbl:
    SysErrmsg
    
End Sub
Attribute VB_Name = "frmObce"
Attribute VB_Base = "0{1640C0E2-A3CB-46E0-8CD4-3B00EFCBA1D8}{27AD6E45-E506-4182-A5C0-AF6C0AE0FC1B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public isObecSJ As Boolean

Private Sub cmbObce_Error(ByVal Number As Integer, ByVal Description As MSForms.ReturnString, ByVal SCode As Long, ByVal Source As String, ByVal HelpFile As String, ByVal HelpContext As Long, ByVal CancelDisplay As MSForms.ReturnBoolean)
    
    Dim str As String
    
    str = Number & "," & Description
    MsgBox str
    
End Sub

Private Sub cmdCancel_Click()
    Unload Me
End Sub

Private Sub cmdOK_Click()
            
    If Not cmbObce.MatchFound Then
        MsgBox "Neexistuj|fffd|ci n|fffd|zov obce. N|fffd|zov obce je obmedzen|fffd| na v|fffd|ber zo zoznamu.", vbCritical, "V|fffd|ber obce - chyba"
        Exit Sub
    End If
            
    If isObecSJ Then
        Range("dSJNazovObce") = cmbObce.Text
    Else
        Range("dOUNazovObce") = cmbObce.Text
    End If
    Unload Me
    
End Sub

Private Sub UserForm_Activate()
    
    If cmbObce.ListCount > 0 Then
        With cmbObce
            .ListIndex = 0
            .SetFocus
            If isObecSJ Then
                If Len(Range("dSJNazovObce")) > 0 Then
                    cmbObce.Text = Range("dSJNazovObce")
                End If
            Else
                If Len(Range("dOUNazovObce")) > 0 Then
                    cmbObce.Text = Range("dOUNazovObce")
                End If
            End If
            .SelStart = 0
            .SelLength = Len(cmbObce.Text)
        End With
    End If
    
End Sub


Attribute VB_Name = "frmObceA"
Attribute VB_Base = "0{61C5F6A0-9D47-4EEB-AFEB-987582DBAC5D}{CF109C3D-C89F-41B2-829E-D760D1B8AC7D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmbObce_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    
    If KeyAscii = 27 Then
        Unload Me
    End If
    
End Sub

Private Sub cmdCancel_Click()
    Unload Me
End Sub

Private Sub cmdOK_Click()
            
    If Not cmbObce.MatchFound Then
        MsgBox "Neexistuj|fffd|ci n|fffd|zov obce. N|fffd|zov obce je obmedzen|fffd| na v|fffd|ber zo zoznamu.", vbCritical, "V|fffd|ber obce - chyba"
        Exit Sub
    Else
        ActiveCell.Value = cmbObce.Text
        Unload Me
    End If
    
End Sub

Private Sub UserForm_Activate()
    
    If cmbObce.ListCount > 0 Then
        With cmbObce
            .ListIndex = 0
            .SetFocus
            If Not IsEmpty(ActiveCell.Value) Then
                cmbObce.Text = ActiveCell.Value
            End If
            .SelStart = 0
            .SelLength = Len(cmbObce.Text)
        End With
    End If
    
End Sub

Private Sub UserForm_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    
    If KeyAscii = Asc("{ESC}") Then
        Unload Me
    End If
    
End Sub
Attribute VB_Name = "frmOption"
Attribute VB_Base = "0{B898FE9D-3F2A-43DD-A921-F081CD42AFB1}{18A77780-2B2B-4026-AF40-E8491428EA52}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmdCancel_Click()
    
    Unload Me
    
End Sub

Private Sub cmdOK_Click()
    
    bNoIdentControl = chkVstup
    
    If optEnterRight Then
        Application.MoveAfterReturnDirection = xlToRight
    End If
    If optEnterDown Then
        Application.MoveAfterReturnDirection = xlDown
    End If
    If optEnterLeft Then
        Application.MoveAfterReturnDirection = xlToLeft
    End If
    If optEnterUp Then
        Application.MoveAfterReturnDirection = xlUp
    End If
    
    Unload Me

End Sub

Private Sub UserForm_Activate()
        
    chkVstup = bNoIdentControl
    
    Select Case Application.MoveAfterReturnDirection
        Case xlToRight
            optEnterRight = True
        Case xlDown
            optEnterDown = True
        Case xlToLeft
            optEnterLeft = True
        Case xlUp
            optEnterUp = True
    End Select
    
End Sub

Attribute VB_Name = "frmPrint"
Attribute VB_Base = "0{747B21E3-96D2-4040-B74B-256DC2F712DC}{AFECCCE0-74F9-4BA8-8CBC-182F93A41078}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub cmbPrint_Change()
    
'    If cmbPrint.ListIndex = 0 Then
'        cmdPreview.Enabled = False
'    Else
'        cmdPreview.Enabled = True
'    End If
    
End Sub

Private Sub cmdCancel_Click()
    
    Unload frmPrint
    
End Sub

Private Sub cmdPreview_Click()
    
    Dim maxrow As Integer, i As Integer, sname As String
    Dim varNames(30) As Variant, bSavedStatus As Boolean
    Dim sSheetsArr() As String
    
    On Error GoTo lbl
    
    ' ulozim stav Saved
    bSavedStatus = ThisWorkbook.Saved
    UnProtectThisWb
    
    Me.Hide
    If cmbPrint.ListIndex = 0 Then
        'Application.ScreenUpdating = False
        
        maxrow = cmbPrint.ListCount - 2
        ReDim sSheetsArr(maxrow - 1)
        
        ' necham ich vsetky zobrazit
        For i = 1 To maxrow
            sname = cmbPrint.Column(1, i)
            sSheetsArr(i - 1) = sname
            Worksheets(sname).Visible = True
            SetSheetHeader sname
        Next
        
        ' urobim multivyber a nahlad
        Sheets(sSheetsArr).Select
        'Sheets(sSheetsArr(0)).Activate
        ActiveWindow.SelectedSheets.PrintPreview
        
        ' skryjem ich
        For i = 1 To maxrow
            sname = cmbPrint.Column(1, i)
            sSheetsArr(i - 1) = sname
            Worksheets(sname).Visible = False
        Next
        
        'Application.ScreenUpdating = True
    Else
        i = cmbPrint.ListIndex
        sname = cmbPrint.Column(1, i)
        SetSheetHeader sname
        With Worksheets(sname)
            .Visible = True
            .PrintPreview
            .Visible = False
        End With
    End If
    Unload frmPrint
    
    ' obnovim stav Saved
    With ThisWorkbook
        .Worksheets("Komentar").Visible = True
        .Worksheets("Data").Activate
        
        ProtectThisWb
        .Saved = bSavedStatus
    End With
    
    Exit Sub

lbl:
    SysErrmsg
    Unload frmPrint
    Worksheets(sname).Visible = False
    
End Sub

Private Sub cmdPrint_Click()
    
    Dim maxrow As Integer, i As Integer, sname As String
    Dim varNames(30) As Variant, bSavedStatus As Boolean
    
    On Error GoTo lbl
    
    ' ulozim stav Saved
    bSavedStatus = ThisWorkbook.Saved
    UnProtectThisWb
    
    Me.Hide
    If cmbPrint.ListIndex = 0 Then
'   funkcne, ale nie az take elegantne
'        Application.ScreenUpdating = False
'        maxrow = cmbPrint.ListCount - 1
'        For i = 1 To maxrow
'            sName = cmbPrint.Column(1, i)
'            With Worksheets(sName)
'                .Visible = True
'                .PrintOut
'                .Visible = False
'            End With
'        Next
'        Application.ScreenUpdating = True

        Application.ScreenUpdating = False
        
        ' POZOR - bez posledneho listu Tlac2a
        maxrow = cmbPrint.ListCount - 3
        ReDim sSheetsArr(maxrow - 1)
        
        
        ' necham ich vsetky zobrazit
        For i = 1 To maxrow
            sname = cmbPrint.Column(1, i)
            sSheetsArr(i - 1) = sname
            Worksheets(sname).Visible = True
            SetSheetHeader sname
        Next

        
        ' urobim multivyber a nahlad
        Sheets(sSheetsArr).Select
        ActiveWindow.SelectedSheets.PrintOut
        
        ' skryjem ich
        For i = 1 To maxrow
            sname = cmbPrint.Column(1, i)
            sSheetsArr(i - 1) = sname
            Worksheets(sname).Visible = False
        Next
        
        Application.ScreenUpdating = True
    Else
        i = cmbPrint.ListIndex
        sname = cmbPrint.Column(1, i)
        SetSheetHeader sname
        With Worksheets(sname)
            .Visible = True
            .PrintOut
            .Visible = False
        End With
    End If
    Unload frmPrint
    
    ' obnovim stav Saved
    With ThisWorkbook
        .Worksheets("Komentar").Visible = True
        .Worksheets("Data").Activate
        ProtectThisWb
        .Saved = bSavedStatus
    End With
    
    Exit Sub

lbl:
    SysErrmsg
    Unload frmPrint
    Worksheets(sname).Visible = False
    
End Sub

Private Sub cmdUvod_Click()
    
    Load frmUvod
    frmUvod.Show
    
End Sub

Private Sub cmdPrintDetail_Click()
    
    Load frmUvod
    frmUvod.Show
    
End Sub

Private Sub UserForm_Activate()
    
    cmbPrint.RowSource = getRowSource("PrintModul")
    If cmbPrint.ListCount > 0 Then
        cmbPrint.ListIndex = 0
        'cmdPreview.Enabled = False
    End If
    
End Sub


Attribute VB_Name = "frmUvod"
Attribute VB_Base = "0{D216917D-7B68-4386-97C0-523804A276D7}{D194D43D-EF9D-4422-936A-81D3585455C2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub cmdCancel_Click()
    Unload Me
End Sub

Private Sub cmdClear_Click()
    txtUlica = ""
    txtPSC = ""
    txtCisloDomu = ""
End Sub

Private Sub cmdSave_Click()

    Range("dOUUlica") = txtUlica
    Range("dOUCisloDomu") = txtCisloDomu
    Range("dOUPSC") = txtPSC
    Unload Me
    
End Sub

Private Sub UserForm_Initialize()
    
    txtUlica = Range("dOUUlica")
    txtCisloDomu = Range("dOUCisloDomu")
    txtPSC = Range("dOUPSC")
    
End Sub
Attribute VB_Name = "mExport"
Option Explicit
Option Private Module

Public Const DataExpPwd As String = "qaxc77"
Public Const WbExpPwd As String = "wsxc99"

Public Sub Menu_ExportPrintSheets()
    
    Dim msgstr As String, sKodVykazu As String
    
    sKodVykazu = Range("PrintModul").Cells(1, 2)
    msgstr = "Exportova|fffd| z v|fffd|kazu '" & sKodVykazu & "' listy pre tla|fffd|?"
    If vbOK = MsgBox(msgstr, vbQuestion + vbOKCancel) Then
        TlacExport
    End If
    
End Sub

Public Sub TlacExport()

    Dim ws As Worksheet, swbexpname As String, wsname As String, msgstr As String, bexportok As Boolean
    Dim lastwsname As String, fso As FileSystemObject, sexpfilename As String, swbexpname2 As String
    
    On Error GoTo lbl
    UnProtectThisWb
    bexportok = False
    ThisWorkbook.Activate
    lastwsname = "Uvod"
    With Worksheets(lastwsname)
        .Visible = True
        .Copy
        
        ' mazem vzorce
        ActiveSheet.Unprotect DataExpPwd
        ActiveSheet.Cells.SpecialCells(xlCellTypeFormulas, 23).Select
        Selection.ClearContents
        
        ' mazem hlavicky
        With ActiveSheet.PageSetup
            .LeftHeader = ""
            .CenterHeader = ""
            .RightHeader = ""
            .LeftFooter = ""
            .CenterFooter = ""
            .RightFooter = ""
        End With
                
        Range("A1").Select
        .Visible = False
    End With

    swbexpname = ActiveWorkbook.Name
    
    For Each ws In ThisWorkbook.Worksheets
        If InStr(1, ws.Name, "tlac", vbTextCompare) > 0 Then
            ThisWorkbook.Activate
            wsname = ws.Name
            
            With Worksheets(wsname)
                .Visible = True
                .Copy , Workbooks(swbexpname).Worksheets(lastwsname)
                
                ' mazem vzorce
                ActiveSheet.Unprotect DataExpPwd
                ActiveSheet.Cells.SpecialCells(xlCellTypeFormulas, 23).Select
                Selection.ClearContents
                
                ' mazem hlavicky
                With ActiveSheet.PageSetup
                    .LeftHeader = ""
                    .CenterHeader = ""
                    .RightHeader = ""
                    .LeftFooter = ""
                    .CenterFooter = ""
                    .RightFooter = ""
                End With
                
                Range("A1").Select
                .Visible = False
            End With
            
            lastwsname = wsname
        End If
    Next
    bexportok = True
    
    Set fso = New FileSystemObject
    swbexpname2 = fso.GetBaseName(ThisWorkbook.Name) & "_Tlac"
    sexpfilename = fso.BuildPath(ThisWorkbook.Path, swbexpname2)
    
    With Workbooks(swbexpname)
        .SaveAs sexpfilename
        swbexpname2 = .Name
        .Close
    End With
    ProtectThisWb
    MsgBox "Tla|fffd|ov|fffd| listy boli |fffd|spe|fffd|ne vyexportovan|fffd| do s|fffd|boru '" & swbexpname2 & "', ktor|fffd| je ulo|fffd|en|fffd| v aktu|fffd|lnom prie|fffd|inku.", vbInformation
    
    Exit Sub

lbl:
    ProtectThisWb
    If bexportok And Err.Number = 1004 Then
        MsgBox "Tla|fffd|ov|fffd| listy boli |fffd|spe|fffd|ne vyexportovan|fffd| do s|fffd|boru '" & swbexpname & "'.", vbInformation
    Else
        SysErrmsg
    End If
    
End Sub

Public Sub ExportData()
    
    Dim ws As Worksheet, swbexport As String, vbmsg As VbMsgBoxResult, msgstr As String, stitle As String
    Dim fso As FileSystemObject, swbexport2 As String, i As Integer, sfilename As String, sNumber As String
    Dim rgCopy As Range, rg As Range, isExportOK As Boolean, isSaved As Boolean, sDefaultExt As String
    
    On Error GoTo lbl
    isExportOK = False
    ThisWorkbook.Activate
    isSaved = ThisWorkbook.Saved
    Application.ScreenUpdating = False
    
    stitle = "Export datab|fffd|zy"
    
    ThisWorkbook.Activate
    Worksheets("Komentar").Copy
    swbexport = ActiveWorkbook.Name
    
    ThisWorkbook.Activate
    With Worksheets("Komentar")
        .Select
        .Cells.Select
        Selection.Copy
        
        Workbooks(swbexport).Activate
        Worksheets("Komentar").Select
        Range("A1").Activate
        Selection.PasteSpecial xlPasteValues
        Range("A1").Select
    End With
    
    ThisWorkbook.Activate
    Worksheets("Komentar").Activate
    Range("A1").Select
    Application.CutCopyMode = False
    
    With Workbooks(swbexport)
        .Activate
        
        .Worksheets.Add Worksheets("Komentar")
        .ActiveSheet.Name = "Data"
        
'        .Worksheets.Add , Worksheets("Data")
'        .ActiveSheet.Name = "KontrolaR"
'
'        .Worksheets.Add , Worksheets("KontrolaR")
'        .ActiveSheet.Name = "KontrolaS"
    End With
    
    ThisWorkbook.Activate
    With Worksheets("Data")
        .Unprotect DataExpPwd
        .Select
        Set rg = ActiveCell
        .Cells.Select
        Selection.Copy
        
        Workbooks(swbexport).Activate
        Worksheets("Data").Select
        Range("A1").Select
        Selection.PasteSpecial xlPasteValues
        Range("A1").Select
        Range("A1") = "Exp"
        Range("B1") = ThisWorkbook.Worksheets("Konfig").Range("PrintModul").Cells(1, 2)
        Range("C1") = ThisWorkbook.Worksheets("Data").Range("dErrSum")
        Range("D1") = Now
        
        ThisWorkbook.Activate
        Worksheets("Data").Activate
        
        Worksheets("Data").Protect DataExpPwd
        
        Application.CutCopyMode = False
        Worksheets("Data").Range(rg.Cells(1, 1).Address).Select
    End With
    
'    ThisWorkbook.Activate
'    With Worksheets("KontrolaR")
'        .Unprotect DataExpPwd
'        .Select
'        .Cells.Select
'        Selection.Copy
'
'        Workbooks(swbexport).Activate
'        Worksheets("KontrolaR").Select
'        Range("A1").Select
'        Selection.PasteSpecial xlPasteValues
'        Range("A1").Select
'
'        ThisWorkbook.Activate
'        Worksheets("KontrolaR").Activate
'        Worksheets("KontrolaR").Protect DataExpPwd
'
'        Application.CutCopyMode = False
'    End With

'    ThisWorkbook.Activate
'    With Worksheets("KontrolaS")
'        .Unprotect DataExpPwd
'        .Select
'        .Cells.Select
'        Selection.Copy
'
'        Workbooks(swbexport).Activate
'        Worksheets("KontrolaS").Select
'        Range("A1").Select
'        Selection.PasteSpecial xlPasteValues
'        Range("A1").Select
'
'        ThisWorkbook.Activate
'        Worksheets("KontrolaS").Activate
'        Worksheets("KontrolaS").Protect DataExpPwd
'
'        Application.CutCopyMode = False
'    End With
    
    Workbooks(swbexport).Activate
    Worksheets("Data").Protect DataExpPwd
'    Worksheets("KontrolaR").Protect DataExpPwd
'    Worksheets("KontrolaS").Protect DataExpPwd
    Workbooks(swbexport).Protect WbExpPwd
    
    isExportOK = True
    ThisWorkbook.Saved = isSaved
    sDefaultExt = ".xls"
    Application.DisplayAlerts = False
    
    ThisWorkbook.Activate
    Set fso = New FileSystemObject
    i = 0
    Do
        i = i + 1
        sNumber = IIf(i < 10, "0" & i, i)
        swbexport2 = GetVykazName
        swbexport2 = swbexport2 & "_" & sNumber & sDefaultExt
        sfilename = fso.BuildPath(ThisWorkbook.Path, swbexport2)
        If Not fso.FileExists(sfilename) Then
            Workbooks(swbexport).SaveAs sfilename, xlExcel7
            Workbooks(swbexport2).Close
            Exit Do
        End If
    Loop
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    
    'msgstr = "Export bol |fffd|spe|fffd|ne ukon|fffd|en|fffd|. D|fffd|ta z v|fffd|kazu boli vyexportovan|fffd| do zo|fffd|ita '" & swbexport2 & "' a s|fffd| ulo|fffd|en|fffd| v aktu|fffd|lnom prie|fffd|inku hlavn|fffd|ho programu."
    msgstr = "Data z v|fffd|kazu boli |fffd|spe|fffd|ne vyexportovan|fffd| do zo|fffd|itu '" & swbexport2 & "', ktor|fffd| je ulo|fffd|en|fffd| v aktu|fffd|lnom prie|fffd|inku hlavn|fffd|ho programu." & vbCrLf & vbCrLf
    msgstr = msgstr & "Pokia|fffd| s|fffd| v d|fffd|tach chyby, mali by ste ich opravi|fffd|, pokia|fffd| si mysl|fffd|te, |fffd|e vyexportovan|fffd| d|fffd|ta s|fffd| v poriadku, po|fffd|lite tento vyexportovan|fffd| s|fffd|bor mejlom na adresu 'podatelna@nczisk.sk'."
    MsgBox msgstr, vbInformation, stitle
    
    Exit Sub
lbl:
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    SysErrmsg
    If isExportOK Then
        MsgBox "Export d|fffd|t do s|fffd|boru bol |fffd|spe|fffd|n|fffd|, ale nepodarilo sa ulo|fffd|i|fffd| s|fffd|bor '" & swbexport2 & "' do zvolen|fffd|ho prie|fffd|inka. Sk|fffd|ste ulo|fffd|i|fffd| vyexportovan|fffd| s|fffd|bor na in|fffd| miesto.", vbCritical, "Chyba pri ukladan|fffd| exportu"
    Else
        MsgBox "Export sa nepodaril.", vbCritical, "Chyba exportu"
    End If
    
End Sub

Attribute VB_Name = "mProtection"
Option Explicit
Option Private Module

Public Const MyPwdOld As String = "nbusk"
Public Const sAdminModeStr As String = "AdminPNP1"

Public Sub LockSheets_NewPwd()

    Dim ws As Worksheet, msgstr As String
    
    On Error GoTo lbl
    For Each ws In ThisWorkbook.Worksheets
        If ws.Name <> "Komentar" Then
            ws.Protect DataExpPwd
        End If
    Next
    Exit Sub
    
lbl:
    msgstr = "Chyba |fffd|." & Err.Number & ": " & Err.Description & vbCrLf & "N|fffd|zov listu: " & ws.Name & vbCrLf & vbCrLf & "Ignorova|fffd| chybu a pokra|fffd|ova|fffd| |fffd|al|fffd||fffd|m listom?"
    If vbYes = MsgBox(msgstr, vbCritical + vbYesNo) Then
        Resume Next
    End If
    
End Sub

Public Sub UnlockSheets_NewPwd()

    Dim ws As Worksheet, msgstr As String
    
    On Error GoTo lbl
    For Each ws In ThisWorkbook.Worksheets
        If ws.Name <> "Komentar" Then
            ws.Unprotect DataExpPwd
        End If
    Next
    Exit Sub
    
lbl:
    msgstr = "Chyba |fffd|." & Err.Number & ": " & Err.Description & vbCrLf & "N|fffd|zov listu: " & ws.Name & vbCrLf & vbCrLf & "Ignorova|fffd| chybu a pokra|fffd|ova|fffd| |fffd|al|fffd||fffd|m listom?"
    If vbYes = MsgBox(msgstr, vbCritical + vbYesNo) Then
        Resume Next
    End If
    
End Sub

Public Sub UnlockSheets_OldPwd()

    Dim ws As Worksheet, msgstr As String
    
    On Error GoTo lbl
    For Each ws In ThisWorkbook.Worksheets
        If ws.Name <> "Komentar" Then
            ws.Unprotect MyPwdOld
        End If
    Next
    Exit Sub
    
lbl:
    msgstr = "Chyba |fffd|." & Err.Number & ": " & Err.Description & vbCrLf & "N|fffd|zov listu: " & ws.Name & vbCrLf & vbCrLf & "Ignorova|fffd| chybu a pokra|fffd|ova|fffd| |fffd|al|fffd||fffd|m listom?"
    If vbYes = MsgBox(msgstr, vbCritical + vbYesNo) Then
        Resume Next
    End If
    
End Sub

Public Sub Menu_UnprotectSheets()

    On Error GoTo lbl
    Load frmLockSheet
    frmLockSheet.Show
    Exit Sub

lbl:
    SysErrmsg
    
End Sub
Attribute VB_Name = "mTools"
Option Explicit
Option Private Module

Public Sub ShowPrintFiles()

    Dim ws As Worksheet
    
    ThisWorkbook.Activate
    Worksheets("Uvod").Visible = True
    
    For Each ws In ThisWorkbook.Worksheets
        If InStr(1, ws.Name, "tlac", vbTextCompare) > 0 Then
            ws.Visible = xlSheetVisible
        End If
    Next
    
End Sub

Public Sub HidePrintFiles()

    Dim ws As Worksheet
    
    ThisWorkbook.Activate
    Worksheets("Uvod").Visible = False
    
    For Each ws In ThisWorkbook.Worksheets
        If InStr(1, ws.Name, "tlac", vbTextCompare) > 0 Then
            ws.Visible = xlSheetHidden
        End If
    Next
    
End Sub

Public Function isAdminToolbarEnabled() As Boolean
    
    Dim sModeStr As String
    
    sModeStr = ThisWorkbook.Worksheets("Konfig").Range("dMode")
    If sModeStr = sAdminModeStr Then
        isAdminToolbarEnabled = True
    Else
        isAdminToolbarEnabled = False
    End If
    
End Function

Public Sub Menu_ShowPrintSheets()

    Static isOK As Boolean
    
    On Error GoTo lbl
    ThisWorkbook.Activate
    UnProtectThisWb
    
    If isOK Then
        HidePrintFiles
        isOK = False
        MsgBox "Tla|fffd|ov|fffd| listy boli skryt|fffd|.", vbInformation
    Else
        ShowPrintFiles
        isOK = True
        MsgBox "Tla|fffd|ov|fffd| listy boli zobrazen|fffd|.", vbInformation
    End If
    
    ProtectThisWb
    Exit Sub
    
lbl:
    ProtectThisWb
    SysErrmsg

End Sub

Public Sub ReplaceX()

    Dim rg As Range, icount As Integer

    For Each rg In Selection
        If rg.HasFormula And rg.Value = "x" Then
            icount = icount + 1
            rg.Value = "x"
        End If
    Next

    MsgBox "Celkov|fffd| po|fffd|et nahraden|fffd|=" & icount
    
End Sub

Public Sub ProtectThisWb()
    
    On Error GoTo lbl
    ' workbook false
    If Not Range("dwbp") = "WBPF" Then
        ThisWorkbook.Protect WbExpPwd
    End If
    Exit Sub
    
lbl:
    ' ak chyba, tak zamkni
    ThisWorkbook.Protect WbExpPwd
    
End Sub

Public Sub UnProtectThisWb()
    
    ThisWorkbook.Unprotect WbExpPwd
    
End Sub

Public Sub LockData()
    
    ThisWorkbook.Activate
    With Worksheets("Data")
        '.Protect Password:=DataExpPwd, DrawingObjects:=True, Contents:=True, Scenarios:=True
        .EnableSelection = xlNoSelection
    End With
    
End Sub

Public Sub UnLockData()
    
    ThisWorkbook.Activate
    With Worksheets("Data")
        '.Unprotect Password:=DataExpPwd, DrawingObjects:=True, Contents:=True, Scenarios:=True
        .EnableSelection = xlNoRestrictions
    End With
    
End Sub

Public Sub Menu_ShowConfigSheet()

    Static isOK As Boolean
    
    On Error GoTo lbl
    ThisWorkbook.Activate
    UnProtectThisWb
    
    If isOK Then
        Worksheets("Konfig").Visible = False
        isOK = False
        MsgBox "Konfigura|fffd|n|fffd| list bol skryt|fffd|.", vbInformation
    Else
        Worksheets("Konfig").Visible = True
        isOK = True
        MsgBox "Konfigura|fffd|n|fffd| list bol zobrazen|fffd|.", vbInformation
    End If
    
    ProtectThisWb
    Exit Sub
    
lbl:
    ProtectThisWb
    SysErrmsg

End Sub

Public Sub SetWBPF()

    With Worksheets("Konfig")
        .Activate
        .Visible = True
        .Unprotect DataExpPwd
        .Range("dWBP") = "WBPF"
        .Protect DataExpPwd
        .Visible = False
    End With
    
End Sub

Public Sub ReSetWBPF()

    With Worksheets("Konfig")
        .Activate
        .Visible = True
        .Unprotect DataExpPwd
        .Range("dWBP") = "WBP"
        .Protect DataExpPwd
        .Visible = False
    End With
    
End Sub
Attribute VB_Name = "xlEvents"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Public WithEvents XLApp As Application
Attribute XLApp.VB_VarHelpID = -1

Private Sub XLApp_WorkbookActivate(ByVal wb As Workbook)
        
    On Error GoTo lbl
    If wb.Name = ThisWorkbook.Name Then
        Application.ScreenUpdating = False
        CreateDisMenu
        CreateUserToolbar
        If isAdminToolbarEnabled Then
            ' menu administratora
            CreateAdminToolbar
        End If
        'CommandBars(DisMenuName).Visible = True
        'CommandBars(DisToolbarname).Visible = True
        'Application.DisplayFormulaBar = False
        DisableToolbars
        Application.ScreenUpdating = True
    End If
    Exit Sub
lbl:
    Application.ScreenUpdating = True
    SysErrmsg
    
End Sub

Private Sub XLApp_WorkbookDeactivate(ByVal wb As Workbook)
    
    On Error GoTo lbl
    If wb.Name = ThisWorkbook.Name Then
        Application.ScreenUpdating = False
        CommandBars("Worksheet Menu Bar").Visible = True
        CommandBars(DisUserToolbarname).Visible = False
        If isAdminToolbarEnabled Then
            CommandBars(DisAdminToolbarname).Visible = False
        End If
        Application.DisplayFormulaBar = True
        EnableToolbars
        Application.ScreenUpdating = True
    End If
    Exit Sub
lbl:
    Application.ScreenUpdating = True
    SysErrmsg
    
End Sub


INQUEST-PP=macro
