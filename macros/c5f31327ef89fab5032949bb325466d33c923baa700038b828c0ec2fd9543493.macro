Attribute VB_Name = "Basic"
' ******* SKRYTY list Vestnik *******

' Option Private Module

Type TSeznam
  Zdroj As String
  Ucet As String
  Znamenko As String
  Hodnota As String
End Type

Public Const TisiceRozvaha = "H15:L29, H33:J47"
Public Const TisiceVysled = "I19:K75"

Public Const lRozv = "Rozvaha"     ' jmena listu
Public Const lVysl = "V|fffd|sledovka"
Public Const lKapi = "Kapit|fffd|l"
Public Const lPred = "P|fffd|edvaha"
Public Const lKore = "Korekce"
Public Const lDefi = "Definice"
Public Const lPrCZ = "P|fffd||fffd|loha"
Public Const lAnal = "Anal|fffd|za"
Public Const lID = "ID"
Public Const lHM = "Hlavn|fffd| menu"
Public Const slBezneObdobiR = 8 ' sloupec bezneho obdobi v Rozvaze
Public Const slBezneObdobiV = 9 ' sloupec bezneho obdobi ve Vysledovce
Public Const R1 = 8             ' 1. radek predvahy
Public Const Rn = 557           ' posledni radek predvahy
Public Const hnZaverka = 1      ' heslo napovedy
Public Const hnDefinice = 2
Public Const hnDefDialog = 3
Public Const hnPredvaha = 4
Public Const hnKorekce = 5
Public Const hnKorDialog = 6
Public Const hnRozvaha = 7
Public Const hnVysledovka = 8
Public Const hnPriloha = 9
Public Const hnKapital = 10
Public Const hnAnalyza = 11
Public Const bCervena = &HFF&    ' barvy tlacitek se znamenky
Public Const bZluta = &HC0FFFF
Public Const bModra = &HFF0000
Public Const bSeda = &H8000000F
Public Const ibSeda = 40         ' index barvy - seda
Public Const ibVyrazna = 28      ' index barvy vyrazna (svetla modra)
Public Const Hes1 = "j"
Public Const Hes2 = "j"
Public Const SouborGrafu = "Graf.gif" ' soubor kam se ulozi graf zobrazeny v dialogovm okne
Public Const VerzeSW = "<Pisemnost nazevSW=""Appro"" verzeSW=""FinEx 2015"">" ' pro export do XML danoveho priznani

Public KodRadku As String       ' kod radku pro hledani zdrojovych uctu
Public BrutoKor As String       ' B - bruto, K - korekce
Public Vykaz As String          ' nazev vykazu
Public uObdobi As String        ' B - bezne, M - minule, P - predminule
Public RadekVykazu As String    ' cislo vyse uvedeneho radku
Public TextRadku As String      ' text ukazatele
Public HesloNapovedy As Integer
Public ZadanyUcet As String
Public Teplomer As String
Public CilExportu As String
Public ExportVykazy As String    ' ktere vykazy se maji exportovat do XML (Rozv, Vysl, Komplet)

' Inicializacni procedura
Sub Auto_Open()
Attribute Auto_Open.VB_ProcData.VB_Invoke_Func = " \n14"
  Application.ScreenUpdating = False
  ChDir ThisWorkbook.Path & "\"
  Sheets(lHM).Select
  Range("A1").Select
  Application.ScreenUpdating = True
End Sub

' Ukoncovaci procedura
Sub Auto_Close()
Attribute Auto_Close.VB_ProcData.VB_Invoke_Func = " \n14"
  Application.ScreenUpdating = False
  Application.ScreenUpdating = True
End Sub

Sub NaUcet()
  ZadanyUcet = ""
  frmUcet.Show
  If ZadanyUcet <> "" Then
    NastavUcet (ZadanyUcet)
  End If
End Sub

Sub DefinicePredvahy()
  On Error Resume Next
  If (ActiveCell.Row >= R1) And (ActiveCell.Row <= Rn) Then
    Odemkni
    frmDefinice.Show
    Zamkni
  End If
End Sub

Sub DefiniceKorekci()
  On Error Resume Next
  If (ActiveCell.Row >= R1) And (ActiveCell.Row <= Rn) Then
    Odemkni
    Application.EnableEvents = False
    frmKorekce.Show
    Application.EnableEvents = True
    Zamkni
  End If
End Sub

' Ulo|fffd||fffd| tento se|fffd|it na disk
Sub Ulo|fffd|it()
Attribute Ulo|fffd|it.VB_ProcData.VB_Invoke_Func = " \n14"
  ActiveWorkbook.Save
End Sub

Private Sub Tisk()
  frmTisk.Show
End Sub

Private Sub ExportDaneXML()
  frmExportXML.Show
End Sub

Sub ExportPrilohyXLS()
  frmExportPrilohy.Show
End Sub

' Konec editace se|fffd|itu
' ulo|fffd|en|fffd| dat na dotaz automaticky
Sub Konec()
Attribute Konec.VB_ProcData.VB_Invoke_Func = " \n14"
  Auto_Close
  ActiveWorkbook.Close
End Sub

' Smazat data v p|fffd|edvaze pouze na dotaz
Sub Nove_Obdobi()
  Dim Hlas As String
  Dim Titulek As String
  Dim Typ As Integer
  Dim Odpoved As Integer
  Titulek = "Nov|fffd| obdob|fffd|"
  Hlas = "POZOR !!!" & Chr(13) & _
         "M|fffd| doj|fffd|t k p|fffd|esunu dat n|fffd|sleduj|fffd|c|fffd|m zp|fffd|sobem:" & Chr(13) & _
         Range("dtaRok") - 2 & " <- " & _
         Range("dtaRok") - 1 & " <- " & _
         Range("dtaRok") & Chr(13) & _
         "a b|fffd|n|fffd| obdob|fffd| vynulovat?"
  Typ = vbYesNo + vbCritical + vbDefaultButton2
  Odpoved = MsgBox(Hlas, Typ, Titulek)
  If Odpoved = vbYes Then
    On Error Resume Next
    Application.ScreenUpdating = False   ' zrychleni
    Application.Calculation = xlManual
    Teplomer = "NoveObdobi"
    frmTeplomer.Show
    Range("dtaRok") = Range("dtaRok") + 1
    Range("dtaDatum") = "31. 12. " & Range("dtaRok")
    Range("dtaOkamzik") = Date & " " & Time
    Nastav_Predvahu
    Application.Calculation = xlAutomatic
    Application.ScreenUpdating = True
  End If
End Sub

Sub TeploNoveObdobi()
  Dim Radek As Long
  Dim PocetR As Long
  On Error Resume Next
  Call ZmenTeplomer(0.1)
  Sheets(lPred).Select   ' Predvaha
  For Radek = R1 To Rn
    Cells(Radek, 2) = Cells(Radek, 6)
    Cells(Radek, 4) = Cells(Radek, 8)
    Cells(Radek, 6) = Cells(Radek, 10)
    Cells(Radek, 8) = Cells(Radek, 12)
    Cells(Radek, 10).ClearContents
    Cells(Radek, 12).ClearContents
  Next Radek
  Range("B" & R1).Select
  Call ZmenTeplomer(0.3)
  Sheets(lDefi).Select   ' Definice
  Odemkni
  For Radek = R1 To Rn
    Cells(Radek, 3) = Cells(Radek, 7)
    Cells(Radek, 4) = Cells(Radek, 8)
    Cells(Radek, 7) = Cells(Radek, 12)
    Cells(Radek, 8) = Cells(Radek, 13)
  Next Radek
  Range("D" & R1).Select
  Zamkni
  Call ZmenTeplomer(0.5)
  Sheets(lKapi).Select    ' Kapital
  For Radek = 10 To 60
    Cells(Radek, 5) = Cells(Radek, 4)
    Cells(Radek, 4) = Cells(Radek, 3)
    Cells(Radek, 3).ClearContents
  Next Radek
  Range("C11").Select
  Call ZmenTeplomer(0.7)
  Sheets(lKore).Select    ' Korekce
  PocetR = Range("A" & R1).End(xlDown).Row
  Odemkni
  For Radek = R1 To PocetR
    Cells(Radek, 2) = Cells(Radek, 9)   '
    Cells(Radek, 4) = Cells(Radek, 11)
    Cells(Radek, 5) = Cells(Radek, 12)
    Cells(Radek, 6) = Cells(Radek, 13)
    Cells(Radek, 7) = Cells(Radek, 14)
    Cells(Radek, 9) = Cells(Radek, 16)  '
    Cells(Radek, 11) = Cells(Radek, 19)
    Cells(Radek, 12) = Cells(Radek, 20)
    Cells(Radek, 13) = Cells(Radek, 21)
    Cells(Radek, 14) = Cells(Radek, 22)
    Cells(Radek, 16).ClearContents
  Next Radek
  Range("B" & R1).Select
  Zamkni
  Call ZmenTeplomer(1)
  Unload frmTeplomer
End Sub

Sub Hlavni_M()
Attribute Hlavni_M.VB_ProcData.VB_Invoke_Func = "m\n14"
  If Nastav(lHM) Then Range("A1").Select
End Sub

Sub Hlavni_menu()
Attribute Hlavni_menu.VB_ProcData.VB_Invoke_Func = "M\n14"
  Hlavni_M
End Sub

Sub Nastav_Rozvahu()
Attribute Nastav_Rozvahu.VB_ProcData.VB_Invoke_Func = " \n14"
  If Nastav(lRozv) Then Range("H16").Select
End Sub

Sub Nastav_Predvahu()
Attribute Nastav_Predvahu.VB_ProcData.VB_Invoke_Func = " \n14"
  If Nastav(lPred) Then Range("B" & R1).Select
End Sub

Sub Nastav_Korekce()
  If Nastav(lKore) Then Range("D4").Select
End Sub

Sub Nastav_Definici()
  If Nastav(lDefi) Then Range("D8").Select
End Sub

Sub Nastav_Analyzu()
  If Nastav(lAnal) Then Range("C5").Select
End Sub

Sub Nastav_V|fffd|sledovku()
Attribute Nastav_V|fffd|sledovku.VB_ProcData.VB_Invoke_Func = " \n14"
  If Nastav(lVysl) Then Range("I19").Select
End Sub

Sub Nastav_Prilohu()
Attribute Nastav_Prilohu.VB_ProcData.VB_Invoke_Func = " \n14"
  If Nastav(lPrCZ) Then Range("C7").Select
End Sub

Sub Nastav_Kapital()
  If Nastav(lKapi) Then Range("C11").Select
End Sub

Sub Nastav_Inventury()
  If Nastav("Inventurn|fffd| soupis") Then Range("B6").Select
End Sub

Sub Nastav_ID()
Attribute Nastav_ID.VB_ProcData.VB_Invoke_Func = " \n14"
  If Nastav(lID) Then Range("D4").Select
End Sub

Sub Nastav_Grafy()
  If Nastav("Grafy") Then Range("A1").Select
End Sub

Sub Napov|fffd|da()
Attribute Napov|fffd|da.VB_ProcData.VB_Invoke_Func = " \n14"
  HesloNapovedy = hnZaverka
  frmNapoveda.Show
End Sub

' Nastaveni na zadany list
Function Nastav(Kam As String)
  Application.ScreenUpdating = False
  On Error GoTo Chyba
  Sheets(Kam).Select
  Nastav = True
  Application.ScreenUpdating = True
  Exit Function
Chyba:
  If Err = 1004 Then
    Beep
    MsgBox "Tento modul nem|fffd|te zakoupen!", vbOKOnly + vbExclamation, "Upozorn|fffd|n|fffd|"
  End If
  Application.ScreenUpdating = True
  Nastav = False
End Function

' Ulozeni sesitu pod jinym jmenem
Sub UlozJako()
Attribute UlozJako.VB_ProcData.VB_Invoke_Func = " \n14"
  Dim Soubor
  On Error GoTo Chyba
  Soubor = Application.GetSaveAsFilename(filefilter:="Se|fffd|ity Excelu (*.xls), *.xls")
  If Soubor <> False Then
    ActiveWorkbook.SaveAs Filename:=Soubor, FileFormat:=xlNormal, _
         Password:="", WriteResPassword:="", ReadOnlyRecommended:= _
         False, CreateBackup:=False
  End If
  Exit Sub
Chyba:
End Sub

' vrati jmeno souboru XML
Function DejJmenoSouboruXML(Jmeno As String)
  Dim Soubor
  On Error GoTo Chyba
  Soubor = Application.GetSaveAsFilename(initialfilename:=Jmeno, filefilter:="Soubory XML (*.xml), *.xml", Title:="V|fffd|sledn|fffd| soubor XML")
  If Soubor = False Then
    Soubor = ""
  End If
  DejJmenoSouboruXML = Soubor
Chyba:
End Function

' vrati jmeno souboru XML danoveho priznani
' do nej se pridaji vety vykazu jako priloha
Function DejJmenoDanPriXML()
  Dim Soubor
  On Error GoTo Chyba
  Soubor = Application.GetOpenFilename(filefilter:="Soubory XML (*.xml), *.xml", Title:="Da|fffd|ov|fffd| p|fffd|izn|fffd|n|fffd| pro vlo|fffd|en|fffd| z|fffd|v|fffd|rky")
  If Soubor = False Then
    Soubor = ""
  End If
  DejJmenoDanPriXML = Soubor
Chyba:
End Function
 
' vrati jmeno souboru samostatne prilohy XLS
Function DejJmenoPrilohyXLS(Jmeno As String)
  Dim Soubor
  On Error GoTo Chyba
  Soubor = Application.GetSaveAsFilename(initialfilename:=Jmeno, filefilter:="Soubory Excelu (*.xls), *.xls")
  If Soubor = False Then
    Soubor = ""
  End If
  DejJmenoPrilohyXLS = Soubor
Chyba:
End Function

' dialogove okno pro tisk listu
Sub Tiskni()
Attribute Tiskni.VB_ProcData.VB_Invoke_Func = " \n14"
  SendKeys ("^p")
End Sub

Sub PrepniNuly()
  Dim Nuly As Boolean
  On Error Resume Next
  Application.ScreenUpdating = False
  Nuly = Sheets(lID).Range("dtaNuly").Value
  Sheets(lPred).Select
  ActiveWindow.DisplayZeros = Nuly
  Sheets(lKore).Select
  ActiveWindow.DisplayZeros = Nuly
  Sheets(lRozv).Select
  ActiveWindow.DisplayZeros = Nuly
  Sheets(lVysl).Select
  ActiveWindow.DisplayZeros = Nuly
  Sheets(lPrCZ).Select
  ActiveWindow.DisplayZeros = Nuly
  Sheets(lKapi).Select
  ActiveWindow.DisplayZeros = Nuly
  Sheets(lID).Select
  Application.ScreenUpdating = True
End Sub

Sub NastavFiltr()
  If Worksheets(lPred).Range("dtaFiltr") Then
    FiltrZapni
  Else
    FiltrVypni
  End If
End Sub

Sub FiltrZapni()
  Dim Radek As Integer
  Dim Nic As Boolean
  Dim List As String
  Dim Bunka As Range
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  List = ActiveSheet.Name
  Set Bunka = ActiveCell
  Sheets(lPred).Select    ' Predvaha
  Odemkni
  Radek = R1
  While Radek <= Rn
    Nic = (CCur(Cells(Radek, 2).Value) = 0) And _
          (CCur(Cells(Radek, 3).Value) = 0) And _
          (CCur(Cells(Radek, 4).Value) = 0) And _
          (CCur(Cells(Radek, 6).Value) = 0) And _
          (CCur(Cells(Radek, 7).Value) = 0) And _
          (CCur(Cells(Radek, 8).Value) = 0) And _
          (CCur(Cells(Radek, 10).Value) = 0) And _
          (CCur(Cells(Radek, 11).Value) = 0) And _
          (CCur(Cells(Radek, 12).Value) = 0)
    If Nic Then
      Range(Cells(Radek, 1), Cells(Radek, 1)).EntireRow.Hidden = True
    End If
    Radek = Radek + 1
  Wend
  Zamkni
  Sheets(lDefi).Select    ' Definice
  Odemkni
  Radek = R1
  While Radek <= Rn
    Nic = (Cells(Radek, 2).Value = "") And _
          (Cells(Radek, 6).Value = "") And _
          (Cells(Radek, 10).Value = "")
    If Nic Then
      Range(Cells(Radek, 1), Cells(Radek, 1)).EntireRow.Hidden = True
    End If
    Radek = Radek + 1
  Wend
  Zamkni
  Sheets(List).Activate
  Bunka.Activate
  Application.ScreenUpdating = True
Chyba:
  Zamkni
End Sub

Sub FiltrVypni()
  Dim Bunka As Range
  Dim List As String
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  List = ActiveSheet.Name
  Set Bunka = ActiveCell
  Sheets(lPred).Select    ' Predvaha
  Odemkni
  Rows(R1 & ":" & Rn).EntireRow.Hidden = False
  Zamkni
  Sheets(lDefi).Select    ' Definice
  Odemkni
  Rows(R1 & ":" & Rn).EntireRow.Hidden = False
  Zamkni
  Application.ScreenUpdating = True
  Sheets(List).Activate
  Bunka.Activate
Chyba:
  Zamkni
End Sub

Sub Zamkni(Optional Finta As Integer) ' parametr je misto Private
  On Error Resume Next
  ActiveSheet.Protect Password:=Hes1 & Hes2
End Sub

Sub Odemkni(Optional Finta As Integer) ' parametr je misto Private
  On Error Resume Next
  ActiveSheet.Unprotect (Hes1 & Hes2)
End Sub

Sub ZamkniRVC(Optional Finta As Integer) ' parametr je misto Private
  On Error Resume Next
  Worksheets(lRozv).Protect Password:=Hes1 & Hes2
  Worksheets(lVysl).Protect Password:=Hes1 & Hes2
End Sub

Sub OdemkniRVC(Optional Finta As Integer) ' parametr je misto Private
  On Error Resume Next
  Worksheets(lRozv).Unprotect (Hes1 & Hes2)
  Worksheets(lVysl).Unprotect (Hes1 & Hes2)
End Sub

Public Function InRange(rng1, rng2) As Boolean
  InRange = False
  If rng1.Parent.Parent.Name = rng2.Parent.Parent.Name Then
    If rng1.Parent.Name = rng2.Parent.Name Then
      If Union(rng1, rng2).Address = rng2.Address Then
        InRange = True
      End If
    End If
  End If
End Function

Sub NastavUcet(Radek As String)
  Dim Bunka As Range
  On Error GoTo Chyba
  With ActiveSheet.Range("A" & R1 & ":A" & Rn + 1)
    Set Bunka = .Find(Radek, lookin:=xlValues, MatchCase:=True)
    If Not Bunka Is Nothing Then
      Bunka.Offset(0, ActiveCell.Column - 1).Select
    End If
  End With
Chyba:
End Sub

Sub Ucet0()
  NastavUcet ("010")
End Sub

Sub Ucet1()
  NastavUcet ("110")
End Sub

Sub Ucet2()
  NastavUcet ("210")
End Sub

Sub Ucet3()
  NastavUcet ("310")
End Sub

Sub Ucet4()
  NastavUcet ("410")
End Sub

Sub Ucet5()
  NastavUcet ("500")
End Sub

Sub Ucet6()
  NastavUcet ("600")
End Sub

Sub UcetT()
  NastavUcet ("T|fffd|. 0")
End Sub

Function NajdiOznaceni(Hledat As String) As String
  Dim r As Long
  On Error GoTo Chyba
  NajdiOznaceni = ""
  For r = R1 To Rn
    If Worksheets(lDefi).Cells(r, 17) = Hledat Then
      NajdiOznaceni = Worksheets(lDefi).Cells(r, 18)
      Exit Function
    End If
  Next r
Chyba:
End Function

' je ucet aktivni nebo pasivni ?
Function DejTypUctu(Hledat As String) As String
  Dim r As Long
  Dim Skupina As String
  Dim Konec As Boolean
  On Error GoTo Chyba
  DejTypUctu = ""
  Skupina = Left(Trim(Hledat), 2)
  r = R1
  Konec = False
  While Not Konec
    If InStr(1, Worksheets(lDefi).Cells(r, 16), Skupina) > 0 Then
      DejTypUctu = Left(Worksheets(lDefi).Cells(r, 17), 1)
      Konec = True
    End If
    r = r + 1
    If r > Rn Then Konec = True
  Wend
Chyba:
End Function

Function UcetExistuje(Ucet As String) As Boolean
  Dim r As Long
  On Error GoTo Chyba
  UcetExistuje = False
  For r = R1 To Rn
    If Worksheets(lDefi).Cells(r, 1) = Ucet Then
      UcetExistuje = True
      Exit Function
    End If
  Next r
Chyba:
End Function

Sub Kontrola()
  Dim Radek As Integer
  Dim Sloupec As Integer
  Dim Chyba As Boolean
  Dim Bunka As Range
  Dim Hlas As String
  Dim Titulek As String
  Dim Typ As Integer
  Dim Odpoved As Integer
  On Error Resume Next
  Application.ScreenUpdating = False
  Set Bunka = ActiveCell
  Chyba = False
  Sloupec = 0
  Radek = R1
  While Not Chyba And (Radek <= Rn)
    Chyba = (Cells(Radek, 2).Value <> "") And _
            (Cells(Radek, 4).Value = "")
    If Chyba Then Sloupec = 4
    If Not Chyba Then
      Chyba = (Cells(Radek, 6).Value <> "") And _
              (Cells(Radek, 8).Value = "")
      If Chyba Then Sloupec = 8
      If Not Chyba Then
        Chyba = (Cells(Radek, 10).Value <> "") And _
                (Cells(Radek, 13).Value = "")
        If Chyba Then Sloupec = 13
      End If
    End If
    Radek = Radek + 1
  Wend
  If Sloupec <> 0 Then
    Titulek = "Chyba"
    Hlas = "Byla nalezena chyba!" & Chr(13) & _
           "|fffd||fffd|et " & Cells(Radek - 1, 1) & " m|fffd| nenulov|fffd| z|fffd|statek, " & Chr(13) & _
           "a nepou|fffd||fffd|v|fffd| se ve v|fffd|po|fffd|tech."
    Typ = vbOKOnly + vbCritical
    Odpoved = MsgBox(Hlas, Typ, Titulek)
    Cells(Radek - 1, Sloupec).Select
    Odemkni
    DefinicePredvahy
    Zamkni
  Else
    Titulek = "V po|fffd||fffd|dku"
    Hlas = "V|fffd|echny |fffd||fffd|ty s nenulov|fffd|m z|fffd|statkem " & Chr(13) & _
           "se pou|fffd||fffd|vaj|fffd| ve v|fffd|po|fffd|tech."
    Typ = vbOKOnly + vbInformation
    Odpoved = MsgBox(Hlas, Typ, Titulek)
    Cells(Radek - 1, Sloupec).Select
    Bunka.Activate
  End If
  Application.ScreenUpdating = True
End Sub

Sub ZmenTeplomer(Proc)
  With frmTeplomer
    .ramTeplomer.Caption = Format(Proc, "0%")
    .lblTeplomer.Width = Proc * (.ramTeplomer.Width - 10)
    .Repaint
  End With
End Sub

' procedury pro dialogova okna DEFINIC

Function DejZnamenko(Znam As String) As String
  If Znam = "-" Then      ' znamenko se hned zmeni
    DejZnamenko = "+"    ' protoze se zavola kliknuti
  Else                    ' a tim se nastavi i barvy
    DejZnamenko = "-"
  End If
End Function

' Setrideni korekci podle uctu
Sub Setrideni()
  Dim r As Long
  Dim Skupina As String
  Dim Barva As Integer
  Const Cervena = 3
  Const Modra = 5
  On Error Resume Next
  Application.ScreenUpdating = False
  Odemkni
  r = Range("A" & R1).End(xlDown).Row
  Range("A" & R1 & ":S" & r).Select
  Selection.Sort Key1:=Range("A" & R1), Order1:=xlAscending, Header:=xlGuess, _
      OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
  Skupina = Left(Cells(R1, 1), 2)
  Barva = Cervena
  For r = R1 To Rn
    If Cells(r, 1) <> "" Then
      If Skupina <> Left(Cells(r, 1), 2) Then
        Skupina = Left(Cells(r, 1), 2)
        If Barva = Cervena Then
          Barva = Modra
        Else
          Barva = Cervena
        End If
      End If
      Cells(r, 1).Font.ColorIndex = Barva
    Else
      Exit For
    End If
  Next r
  Cells(R1, 2).Select
  Zamkni
End Sub

Sub RozvTisice(Tisice As Boolean)
  Worksheets(lRozv).Select
  With Range(TisiceRozvaha)
    If Tisice Then
      .Font.Size = 7
      .NumberFormat = "#,##0.00"
    Else
      .Font.Size = 10
      .NumberFormat = "#,##0"
    End If
  End With
End Sub

Sub VyslTisice(Tisice As Boolean)
  Worksheets(lVysl).Select
  With Range(TisiceVysled)
    If Tisice Then
      .Font.Size = 7
      .NumberFormat = "#,##0.00"
    Else
      .Font.Size = 9
      .NumberFormat = "#,##0"
    End If
  End With
End Sub

Sub Tisice()
  Dim List As Worksheet
  On Error GoTo Chyba
  Set List = ActiveSheet
  Application.ScreenUpdating = False
  OdemkniRVC
  If Worksheets(lID).Range("dtaTisice") Then
    RozvTisice False
    VyslTisice False
  Else
    RozvTisice True
    VyslTisice True
  End If
Chyba:
  ZamkniRVC
  List.Select
End Sub

Sub PocetObdobi(Pocet As Integer)
  Const BunkyA3 = "L12:L30"    'aktiva 3 obdobi
  Const BunkyA2 = "AA12:AA30"  'aktiva 2 obdobi
  Const BunkyP3 = "J32:J49"    'pasiva 3 obdobi
  Const BunkyP2 = "Y32:Y49"    'pasiva 2 obdobi
  Dim ListR As Worksheet
  Dim ListV As Worksheet
  On Error GoTo Chyba
  Set ListR = Worksheets(lRozv)
  Set ListV = Worksheets(lVysl)
  OdemkniRVC
  If Pocet = 2 Then
    ListR.Range(BunkyA3).Copy ListR.Range(BunkyA2)
    ListR.Range(BunkyA3).Clear
    ListR.Range(BunkyP3).Copy ListR.Range(BunkyP2)
    ListR.Range(BunkyP3).Clear
    ListV.Columns("K:K").ColumnWidth = 0.05
  Else
    ListR.Range(BunkyA2).Copy ListR.Range(BunkyA3)
    ListR.Range(BunkyA2).Clear
    ListR.Range(BunkyP2).Copy ListR.Range(BunkyP3)
    ListR.Range(BunkyP2).Clear
    ListV.Columns("K:K").ColumnWidth = 12
  End If
Chyba:
  ZamkniRVC
End Sub

Sub Obdobi()
  Application.ScreenUpdating = False
  If Worksheets(lID).Range("dtaTridoby") Then
    PocetObdobi 3
  Else
    PocetObdobi 2
  End If
  Worksheets(lID).Select
End Sub

Sub KontrCis()
  Const RadekA = "29:29"  'aktiva
  Const RadekP = "47:47"  'pasiva
  Const RadekV = "75:75"  'vysledovka
  Dim ListR As Worksheet
  Dim ListV As Worksheet
'  On Error GoTo Chyba
  Set ListR = Worksheets(lRozv)
  Set ListV = Worksheets(lVysl)
  Application.ScreenUpdating = False
  OdemkniRVC
  ListR.Select
  If Worksheets(lID).Range("dtaKontrCis") Then
    ListR.Rows(RadekA).RowHeight = 18
    ListR.Rows(RadekP).RowHeight = 18
    ListV.Rows(RadekV).RowHeight = 14.5
  Else
    ListR.Rows(RadekA).RowHeight = 0.05
    ListR.Rows(RadekP).RowHeight = 0.05
    ListV.Rows(RadekV).RowHeight = 0.05
  End If
  Worksheets(lID).Select
Chyba:
  ZamkniRVC
End Sub

Sub TaxEdit()
  frmTaxEdit.Show
End Sub

Function VlozNuly(ByVal Text As String, Delka As Integer)
  Dim Nuly As String, i As Integer
  Text = Trim(Text)
  If Len(Text) >= Delka Then
    VlozNuly = Text
  Else
    Nuly = ""
    For i = 1 To Delka - Len(Text)
      Nuly = Nuly & "0"
    Next
    VlozNuly = Nuly + Text
  End If
End Function

' zjisti jestli soubor na disku existuje
Function SouborExistuje(Soubor As String) As Boolean
  If Dir(Soubor) <> "" Then
    SouborExistuje = True
  Else
    SouborExistuje = False
  End If
End Function

' ulozi prilohu do samostatneho souboru aby sla pripojit k danovemu priznani
Sub ExportPrilohy()
  Dim Soubor As String
  Soubor = DejJmenoPrilohyXLS(Replace(ThisWorkbook.Name, ".xls", " - priloha.xls"))
  If Soubor = "" Then Exit Sub
  Application.ScreenUpdating = False
  Sheets(lP).Select
  Cells.Select
  Selection.Copy
  Workbooks.Add
  Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
      False, Transpose:=False
  Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
      False, Transpose:=False
  Application.CutCopyMode = False
  Range("C7").Select
  ActiveWindow.DisplayGridlines = False
  ActiveWorkbook.SaveAs Filename:=Soubor, FileFormat:= _
      xlNormal, Password:="", WriteResPassword:="", ReadOnlyRecommended:=False, _
      CreateBackup:=False
  ActiveWorkbook.Close
  Range("C7").Select
  Hlavni_M
End Sub

Function DejCislo(Txt As String) As String
  On Error Resume Next
  Txt = Trim(Txt)
  If Txt = "" Then
    DejCislo = "0"
  Else
    DejCislo = Txt
  End If
End Function

' velikost pisma v rozvaze a vysledovce pri zmene jazyka
Sub VelikostPisma()
  Dim r As Integer
  Dim s As Integer
  Dim Velikost As Integer
  Dim Jazyk As Integer
  Application.ScreenUpdating = False
  Jazyk = Worksheets(lID).Range("dtaJazyk")
  Select Case Jazyk
    Case 1: s = 32 ' CZ
    Case 2: s = 33 ' DE
    Case 3: s = 34 ' EN
  End Select
  ' rozvaha
  Sheets(lRozv).Select
  Odemkni
  For r = 15 To 60 ' s rezervou
    Velikost = DejCislo(Cells(r, s))
    If Velikost > 0 Then
      Cells(r, 3).Font.Size = Velikost ' sloupec C
    End If
  Next r
  Zamkni
  ' vysledovka
  Sheets(lVysl).Select
  Odemkni
  For r = 18 To 80 ' s rezervou
    Velikost = DejCislo(Cells(r, s))
    If Velikost > 0 Then
      Cells(r, 3).Font.Size = Velikost ' sloupec C
    End If
  Next r
  Zamkni
  Sheets(lID).Select
End Sub

' 1. naplnit vsechny ucty v predvaze, ktere maji vyplnenou definici
' 2. vynulovat ucty 431, ale jen Jarda vi proc
' 3. posledni ucet tridy 6 vynulovat
' 4. soucet 0-6 dat zaporne do posledni 6
' naplneni predvahy testovacimi daty
Sub NaplnPredvahu(Optional Finta As Integer)
   Dim Radek As Integer
   Dim ObdobiPre As Integer
   Dim ObdobiMin As Integer
   Dim ObdobiAkt As Integer
   Dim DefPre As Integer
   Dim DefMin As Integer
   Dim DefAkt As Integer
   Dim Cislo As Double
   Dim Ucet As Double
   Dim Posledni6pre As Integer
   Dim Posledni6min As Integer
   Dim Posledni6akt As Integer
   On Error Resume Next
   ObdobiPre = 2  ' predminule
   ObdobiMin = 6  ' minule
   ObdobiAkt = 10 ' aktualni obdobi
   DefPre = 15    ' definice ve sloupci O
   DefMin = 18    ' definice ve sloupci R
   DefAkt = 21    ' definice ve sloupci U
   Application.ScreenUpdating = False
   Application.Calculation = xlManual
   Sheets(lPred).Select
   Radek = R1
   Posledni6pre = Radek
   Posledni6min = Radek
   Posledni6akt = Radek
' 1. vyplneni vsech uctu
   While Radek <= Rn
      If Not Cells(Radek, ObdobiMin).Locked Then
        Ucet = Cells(Radek, 1) ' cislo uctu
        Cislo = Ucet * 1000 ' cislo uctu * 1000
        If Cells(Radek, DefPre) <> "" Then
          Cells(Radek, ObdobiPre) = Cislo
          Posledni6pre = Radek
        Else
          Cells(Radek, ObdobiPre) = 0
        End If
        If Cells(Radek, DefMin) <> "" Then
          Cells(Radek, ObdobiMin) = Cislo
          Posledni6min = Radek
        Else
          Cells(Radek, ObdobiMin) = 0
        End If
        If Cells(Radek, DefAkt) <> "" Then
          Cells(Radek, ObdobiAkt) = Cislo
          Posledni6akt = Radek
        Else
          Cells(Radek, ObdobiAkt) = 0
        End If
      End If
      Radek = Radek + 1
   Wend
   Application.Calculation = xlAutomatic
' 2. vynulovani 431
   Radek = 329 ' rucne
   Cells(Radek, ObdobiPre) = 0
   Cells(Radek, ObdobiMin) = 0
   Cells(Radek, ObdobiAkt) = 0
' 3. vynulovani posledniho uctu tridy 6
   Cells(Posledni6pre, ObdobiPre) = 0
   Cells(Posledni6min, ObdobiMin) = 0
   Cells(Posledni6akt, ObdobiAkt) = 0
' 4. soucet 0-6 do posledni sestky minusem
   Cells(Posledni6pre, ObdobiPre) = Cells(Rn + 8, ObdobiPre) * (-1)
   Cells(Posledni6pre, ObdobiMin) = Cells(Rn + 8, ObdobiMin) * (-1)
   Cells(Posledni6akt, ObdobiAkt) = Cells(Rn + 8, ObdobiAkt) * (-1)
   Application.ScreenUpdating = True
End Sub

' vynuluje predvahu
Sub VynulujPredvahu(Optional Finta As Integer)
   Dim Radek As Integer
   Dim ObdobiPre As Integer
   Dim ObdobiMin As Integer
   Dim ObdobiAkt As Integer
   On Error Resume Next
   ObdobiPre = 2  ' predminule
   ObdobiMin = 6  ' minule
   ObdobiAkt = 10 ' aktualni obdobi
   Application.ScreenUpdating = False
   Application.Calculation = xlManual
   Sheets(lPred).Select
   Radek = R1
   While Radek <= Rn
      If Not Cells(Radek, ObdobiMin).Locked Then
        Cells(Radek, ObdobiPre) = 0
        Cells(Radek, ObdobiMin) = 0
        Cells(Radek, ObdobiAkt) = 0
      End If
      Radek = Radek + 1
   Wend
   Application.Calculation = xlAutomatic
   Application.ScreenUpdating = True
End Sub

Sub NaplneniPredvahy()
  NaplnPredvahu
End Sub

Sub VynulovaniPredvahy()
  VynulujPredvahu
End Sub


' rozdeleni a slouceni oken jednoho sesitu
' nove okno vytvorene makrem zobrazi u vsech listu
' mrizky a zahlavi sloupcu a radku, zobrazi nuly, zrusi ukotveni pricek
' proto se to musi rucne nastavit
Sub Okna()
  Dim JmenoOkna As String
  Dim Dvojtecka As Integer
  On Error Resume Next
  Application.ScreenUpdating = False
  JmenoOkna = ActiveWindow.Caption
  Dvojtecka = InStr(JmenoOkna, ":")
  If Dvojtecka > 0 Then
    JmenoOkna = Left(JmenoOkna, Dvojtecka)
    JednoOkno (JmenoOkna)
  Else
    DveOkna (JmenoOkna)
  End If
  Application.ScreenUpdating = True
End Sub

' vytvoreni noveho okna aktualniho sesitu
' a naaranzovani tak, aby list definice/Korekce byl vlevo
Sub DveOkna(Jmeno As String)
  On Error Resume Next
  Dim AktListOkno As String
  Application.ScreenUpdating = False
  AktListOkno = ActiveSheet.Name
  ActiveWindow.NewWindow
  Windows(Jmeno & ":2").Activate
  With ActiveWindow ' nove okno doprava
    .Top = 0
    .Left = 200
  End With
  Mrizky (False)
  Sheets(lRozv).Select
  Windows(Jmeno & ":1").Activate
  With ActiveWindow ' okno s tlacitkem doleva
    .Top = 0
    .Left = 0
  End With
  Application.WindowState = xlMaximized
  Mrizky (False)
  PrepniNuly
  Sheets(AktListOkno).Select
  Windows.Arrange ArrangeStyle:=xlVertical
End Sub

Sub JednoOkno(Jmeno As String)
  Dim AktListOkno As String
  On Error Resume Next
  Application.ScreenUpdating = False
  AktListOkno = ActiveSheet.Name
  Windows(Jmeno & ":2").Activate
  ActiveWindow.Close
  ActiveWindow.WindowState = xlMaximized
  Application.WindowState = xlNormal
  Mrizky (False)
  PrepniNuly
  UkotviPricky
  Sheets(AktListOkno).Select
End Sub

' vypne mrizky a nastavi zobrazeni nul
Sub Mrizky(Nastavit As Boolean)
  Application.ScreenUpdating = False
  Sheets(Array("Hlavn|fffd| menu", "P|fffd|edvaha", "Definice", "Korekce", "Anal|fffd|za", "Rozvaha", _
    "V|fffd|sledovka", "P|fffd||fffd|loha", "P|fffd||fffd|loha DE", "P|fffd||fffd|loha EN", "Kapit|fffd|l", "ID")).Select
  With ActiveWindow
    .DisplayGridlines = False
    .DisplayHeadings = False
  End With
  Selection.Clear
End Sub

Sub UkotviPricky()
  Application.ScreenUpdating = False
  Sheets(lPred).Select
    Range("B8").Select
    ActiveWindow.FreezePanes = True
  Sheets(lDefi).Select
    Range("B8").Select
    ActiveWindow.FreezePanes = True
  Sheets(lKore).Select
    Range("B8").Select
    ActiveWindow.FreezePanes = True
End Sub

Sub JenTisice(Vykaz As String)
  Dim Hlas As String
  Dim Titulek As String
  Dim Typ As Integer
  Dim Odpoved As Integer
  If Not Worksheets(lID).Range("dtaTisice") Then
    Titulek = "Informace"
    Hlas = "V|fffd|kaz " & Vykaz & " je zpracov|fffd|n pouze v tis|fffd|c|fffd|ch K|fffd|."
    Typ = vbOKOnly + vbInformation + vbDefaultButton2
    Odpoved = MsgBox(Hlas, Typ, Titulek)
  End If
End Sub

Attribute VB_Name = "BasicImport_CSV"
Option Base 1

Dim SouborCSV As String ' hlavni kniha vs ouboru CSV
Dim DesCarka As Boolean ' jako oddelovac desetin se pouziva carka?

' zxjisti co se pouziva jako oddelovac desetin
Sub Desetiny()
  DesCarka = True
  On Error GoTo Chyba
  DesCarka = CDbl("1,1")
  Exit Sub
Chyba:
  DesCarka = False
End Sub

' import dat ze souboru CSV
' tohle se stara jen o otevreni CSV a jeho zavreni
' o nastaveni globalnich promennych apod
' hlavni cast importu se provadi pres Teplomer v TeploImportUcto
Sub Import_CSV(Optional Finta As Integer)
  Dim Hlas As String
  Dim Titulek As String
  Dim Typ As Integer
  Dim Odpoved As Integer
  On Error GoTo Chyba
' nalezeni souboru hlavni knihy CSV
  SouborCSV = Najdi_CSV("Soubor hlavn|fffd| knihy *.CSV")
  If (SouborCSV = "") Or Not SouborExistuje(SouborCSV) Then Exit Sub
  SouborCSV = LCase(SouborCSV)
' nacteni dat z CSV
  Application.ScreenUpdating = False
  On Error Resume Next
  Application.Calculation = xlManual
  Teplomer = "Import_CSV"
  frmTeplomer.Show
  Application.Calculation = xlAutomatic
  Nastav_Predvahu
  Application.ScreenUpdating = True
  Exit Sub
Chyba:
  On Error Resume Next
  Beep
  MsgBox "Chyba p|fffd|i importu!", vbOKOnly + vbCritical, "Chyba"
  Nastav_Predvahu
  Application.ScreenUpdating = True
End Sub

' vrati prvni pole oddelene znakem, asi strednik
' a nasledne o toto pole zkrati predavany text
Function DejPole(ByRef Txt As String) As String
  Dim Strednik As Integer
  DejPole = ""
  Strednik = InStr(1, Txt, ";", 1)
  If Strednik > 0 Then
    DejPole = Trim(Left(Txt, Strednik - 1))
    Txt = Mid(Txt, Strednik + 1, Len(Txt))
  Else
    DejPole = Trim(Txt)
    Txt = ""
  End If
End Function

' vrati cislo ze stringu
' muze mit desetinnou tecku nebo carku
Function DejCislo(Txt As String) As Double
  DejCislo = 0
  If DesCarka Then
    DejCislo = CDbl(Replace(Txt, ".", ","))
  Else
    DejCislo = CDbl(Replace(Txt, ",", "."))
  End If
End Function

' vlastni import dat ze souboru CSV
Sub TeploImport_CSV(Optional Finta As Integer)
  Dim Kanal As Integer
  Dim r As Long
  Dim Radek As String
  Dim Ucet As Integer
  Dim sUcet As String
  Dim sHC As String
  Dim sCastka As String
  Dim Castka As Double
' cislo sloupce poli v knize UU.dbf
  Dim Predvaha(700) As Double  ' predvaha
' vynulovani Predvahy
  For r = 1 To 700
    Predvaha(r) = 0
  Next r
' cteni souboru CSV
  On Error GoTo Chyba
  Desetiny
  Kanal = FreeFile
  Open SouborCSV For Input As Kanal
  Do While Not EOF(Kanal)
    Line Input #Kanal, Radek
    If Radek <> "" Then
      sUcet = DejPole(Radek)
      sCastka = DejPole(Radek)
      sCastka = Replace(sCastka, " ", "")
      Castka = DejCislo(sCastka)
      If sUcet <> "" Then
        Ucet = CInt(Left(sUcet, 3))
        Predvaha(Ucet) = Predvaha(Ucet) + Castka
      End If
    End If
  Loop
  Close Kanal
' vynulovani bezneho obdobi predvahy a zapis
  On Error Resume Next ' jsou zamknute nektere bunky
  Call ZmenTeplomer(0.5)
  Worksheets(lPred).Select
  For r = R1 To Rn
    Cells(r, 10).ClearContents
    Cells(r, 12).ClearContents
  Next r
  Cells(R1, 1).Select
  For r = R1 To Rn
    Ucet = CInt(Left(Cells(r, 1), 3))
    If Predvaha(Ucet) <> 0 Then
      Cells(r, 10) = Predvaha(Ucet)
    End If
  Next r
  Unload frmTeplomer
Chyba:
  Close Kanal
  Unload frmTeplomer
End Sub

' Otevre dialogove okno pro nalezeni souboru ucetnictvi CSV
Function Najdi_CSV(Titulek As String) As String
  Dim Soubor As String
  Soubor = Application.GetOpenFilename(filefilter:="Datov|fffd| soubory (*.csv), *.csv", Title:=Titulek)
  If Soubor = "False" Or Soubor = "Nepravda" Then
    Najdi_CSV = ""
  Else
    Najdi_CSV = Soubor
  End If
End Function

Attribute VB_Name = "BasicImport_Finex_XLS"
' typ vsech importovanych listu je tady cislo 3
' v roce 2002 to byla 1

Public Cil As String               ' tento sesit je verze ZJEDNODUSENA *********
Public Zdroj As String
Public JenPredvaha As Boolean      ' pri nesouladu verzi se prevede jen Predvaha
Public OknoCile As Workbook, OknoZdroje As Workbook
Public Const OblastB = "B8:B258"
Public Const OblastD = "D8:D258"
Public Const OblastF = "F8:F258"
Public Const OblastH = "H8:H258"
Public Const Priloha = "A10:E400"

Sub Import()
  frmImport.Show
End Sub

' Import dat ze starsi verze FinExu stejneho typu (plna do plne, zkracena do zkracene)
Sub Import_Finex_XLS()
  Dim Soubor As String
  Dim Hlas As String
  Dim Titulek As String
  Dim Typ As Integer
  Dim Odpoved As Integer
    
  On Error GoTo Chyba
  Set OknoCile = ActiveWorkbook
  Soubor = Najdi_XLS()
  If Soubor = "" Then Exit Sub
  If InStr(Soubor, ThisWorkbook.Name) Then
    MsgBox "Zdrojov|fffd| a c|fffd|lov|fffd| soubor nesm|fffd|j|fffd| m|fffd|t stejn|fffd| jm|fffd|no (" _
           & ThisWorkbook.Name & ")" & vbCrLf & vbTab _
           & "P|fffd|ejmenujte soubor z n|fffd|ho|fffd| chcete data na|fffd||fffd|st."
    Exit Sub
  End If
  Application.ScreenUpdating = False
  Nastav_Predvahu
  Cil = Replace(Worksheets(lHM).Range("C3").Value, " ", "")
  Workbooks.Open Filename:=Soubor, ReadOnly:=True
  Set OknoZdroje = ActiveWorkbook
  Application.ScreenUpdating = False
  OknoZdroje.Worksheets(lPred).Activate
  Zdroj = Replace(Worksheets(lHM).Range("C3").Value, " ", "")
  If Cil <> Zdroj Then
    MsgBox "Nesoulad verz|fffd| produktu FinEx." & vbCrLf & _
           "Bude p|fffd|evedena pouze p|fffd|edvaha.", vbOKOnly + vbExclamation, "Upozorn|fffd|n|fffd|"
    JenPredvaha = True
  End If
  On Error Resume Next
  Application.Calculation = xlManual
  Teplomer = "Import_Finex_XLS"
  frmTeplomer.Show
  Application.Calculation = xlAutomatic
  OknoZdroje.Close saveChanges:=False
  OknoCile.Activate
  Nastav_Predvahu
  Application.ScreenUpdating = True
  Exit Sub
Chyba:
  On Error Resume Next
  Beep
  MsgBox "Chyba p|fffd|i importu!", vbOKOnly + vbCritical, "Chyba"
  OknoZdroje.Close saveChanges:=False
  OknoCile.Activate
  Nastav_Predvahu
  Application.ScreenUpdating = True
End Sub

Sub TeploImport_Finex_XLS()
  If JenPredvaha Then
    PrevedPredvahu
    Call ZmenTeplomer(1)
  Else
    Call ZmenTeplomer(0.1)
    PrevedDefinice
    Call ZmenTeplomer(0.2)
    PrevedPredvahu
    Call ZmenTeplomer(0.4)
    PrevedKorekce
    Call ZmenTeplomer(0.7)
    PrevedKapital
    Call ZmenTeplomer(0.9)
    PrevedID
    Call ZmenTeplomer(1)
  End If
  Unload frmTeplomer
End Sub

Sub PrevedDefinice()
  Dim Zdroj As Worksheet
  Dim Radek As Integer
  Dim Ucet As String
  Dim VerzeZdroje As Integer
  On Error Resume Next
  If Not ThisWorkbook.Worksheets(lID).Range("dtaDefinice") Then Exit Sub
  If OknoZdroje.Worksheets(lPred).Range("A1") < 3 Then
    Exit Sub    ' neni to sesit s definici
  End If
  Set Zdroj = OknoZdroje.Worksheets("Definice")
  VerzeZdroje = Zdroj.Range("A1")
' z verze 3 (jen pro zkracenou zaverku) se ucty >5xx neprevadeji
' z verze 4 (s plnou vysledovkou) od 2016.06 se prevadi cela definice
  OknoCile.Worksheets(lDefi).Activate
  Odemkni
  For Radek = R1 To Rn
    Ucet = Zdroj.Cells(Radek, 1)
    If (VerzeZdroje >= 4) Or ((VerzeZdroje = 3) And (Ucet < "500")) Then
      Set Bunka = OknoCile.Worksheets(lDefi).Range("A" & R1 & ":A" & Rn).Find(Ucet, lookin:=xlValues)
      With Bunka
        .Offset(0, 2) = Zdroj.Cells(Radek, 3)
        .Offset(0, 3) = Zdroj.Cells(Radek, 4)
        .Offset(0, 6) = Zdroj.Cells(Radek, 7)
        .Offset(0, 7) = Zdroj.Cells(Radek, 8)
        .Offset(0, 10) = Zdroj.Cells(Radek, 11)
        .Offset(0, 11) = Zdroj.Cells(Radek, 12)
        .Offset(0, 12) = Zdroj.Cells(Radek, 13)
        If Left(.Offset(0, 12), 1) = "p" Then
          .Offset(0, 10) = ""   ' u pasiv neni bruto a korekce
        End If
      End With
    End If
  Next Radek
End Sub

Sub PrevedPredvahu()
  Dim Zdroj As Worksheet
  Dim Radek As Integer
  Dim Ucet As String
  On Error Resume Next
  Set Zdroj = OknoZdroje.Worksheets(lPred)
  If Zdroj.Range("A1") = 3 Then
' nova verze
    For Radek = R1 To Rn
      Ucet = Zdroj.Cells(Radek, 1)
      Set Bunka = OknoCile.Worksheets(lPred).Range("A" & R1 & ":A" & Rn).Find(Ucet, lookin:=xlValues)
      With Bunka
        .Offset(0, 1) = Zdroj.Cells(Radek, 2)
        .Offset(0, 3) = Zdroj.Cells(Radek, 4)
        .Offset(0, 5) = Zdroj.Cells(Radek, 6)
        .Offset(0, 7) = Zdroj.Cells(Radek, 8)
        .Offset(0, 9) = Zdroj.Cells(Radek, 10)
        .Offset(0, 11) = Zdroj.Cells(Radek, 12)
      End With
    Next Radek
  Else
' stara verze
    For Radek = 8 To 275
      Ucet = Zdroj.Cells(Radek, 1)
      Set Bunka = OknoCile.Worksheets(lPred).Range("A" & R1 & ":A" & Rn).Find(Ucet, lookin:=xlValues)
      With Bunka
        .Offset(0, 1) = Zdroj.Cells(Radek, 2)
        .Offset(0, 3) = Zdroj.Cells(Radek, 4)
        .Offset(0, 5) = Zdroj.Cells(Radek, 6)
        .Offset(0, 7) = Zdroj.Cells(Radek, 8)
      End With
    Next Radek
  End If
End Sub

Sub PrevedKorekce()
  Dim Zdroj As Worksheet
  Dim Radek As Integer
  On Error Resume Next
  If Not ThisWorkbook.Worksheets(lID).Range("dtaKorekce") Then Exit Sub
  Set Zdroj = OknoZdroje.Worksheets(lKore)
  If Zdroj.Range("A1") = 3 Then
' nova verze
    OknoCile.Worksheets(lKore).Activate
    Odemkni
    Radek = R1
    While Zdroj.Cells(Radek, 1) <> ""
      If Cells(Radek, 1) = "" Then  ' novy radek
        Range(Cells(Radek - 1, 1), Cells(Radek - 1, 31)).Copy Range("A" & Radek)
        Odemkni
        Application.CutCopyMode = False
      End If
      Cells(Radek, 1) = Zdroj.Cells(Radek, 1)
      Cells(Radek, 2) = Zdroj.Cells(Radek, 2)
      Cells(Radek, 4) = Zdroj.Cells(Radek, 4)
      Cells(Radek, 5) = Zdroj.Cells(Radek, 5)
      Cells(Radek, 6) = Zdroj.Cells(Radek, 6)
      Cells(Radek, 7) = Zdroj.Cells(Radek, 7)
         
      Cells(Radek, 9) = Zdroj.Cells(Radek, 9)
      Cells(Radek, 11) = Zdroj.Cells(Radek, 11)
      Cells(Radek, 12) = Zdroj.Cells(Radek, 12)
      Cells(Radek, 13) = Zdroj.Cells(Radek, 13)
      Cells(Radek, 14) = Zdroj.Cells(Radek, 14)
         
      Cells(Radek, 16) = Zdroj.Cells(Radek, 16)
      Cells(Radek, 18) = Zdroj.Cells(Radek, 18)
      Cells(Radek, 19) = Zdroj.Cells(Radek, 19)
      Cells(Radek, 20) = Zdroj.Cells(Radek, 20)
      Cells(Radek, 21) = Zdroj.Cells(Radek, 21)
      Cells(Radek, 22) = Zdroj.Cells(Radek, 22)
      If (Left(Cells(Radek, 20), 1) = "p") And (Left(Cells(Radek, 22), 1) = "p") Then
        Cells(Radek, 18) = ""   ' u pasiv neni bruto a korekce
      End If
        Radek = Radek + 1
    Wend
    Setrideni
    Zamkni
  Else
' stara verze
  End If
End Sub

Sub PrevedKapital()
  Dim Zdroj As Worksheet
  Dim Radek As Integer
  Dim Sloupec As Integer
  On Error Resume Next
  If OknoZdroje.Worksheets(lPred).Range("A1") < 3 Then
    Set Zdroj = OknoZdroje.Worksheets("Vlastn|fffd| kapit|fffd|l")
  Else
    Set Zdroj = OknoZdroje.Worksheets(lKapi)
  End If
  Set Zdroj = OknoZdroje.Worksheets(lKapi)
  OknoCile.Worksheets("Kapit|fffd|l").Activate
  If Zdroj.Range("A1") = 4 Then
' nova verze
    For Radek = 10 To 69
      For Sloupec = 3 To 5
        Cells(Radek, Sloupec) = Zdroj.Cells(Radek, Sloupec)
      Next Sloupec
    Next Radek
  Else
' stara verze
    For Radek = 10 To 21 ' do uctu 252
      For Sloupec = 3 To 5
        Cells(Radek, Sloupec) = Zdroj.Cells(Radek, Sloupec)
      Next Sloupec
    Next Radek
    Radek = 22 ' ucet 252 - zmena stavu na zvyseni nebo snezeni
    For Sloupec = 3 To 5
      If Zdroj.Cells(Radek, Sloupec) > 0 Then
        Cells(Radek, Sloupec) = Zdroj.Cells(Radek, Sloupec)
      Else
        Cells(Radek + 1, Sloupec) = Zdroj.Cells(Radek, Sloupec)
      End If
    Next Sloupec
    For Radek = 26 To 59 ' od azia do konce o radek niz
      For Sloupec = 3 To 5
        Cells(Radek + 1, Sloupec) = Zdroj.Cells(Radek, Sloupec)
      Next Sloupec
    Next Radek
  End If
End Sub

Sub PrevedID()
  Dim Zdroj As Worksheet
  Dim Cil As Worksheet
  Dim Radek As Integer
  On Error Resume Next
  Set Zdroj = OknoZdroje.Worksheets(lID)
  Set Cil = OknoCile.Worksheets(lID)
  OknoCile.Worksheets(lID).Activate
  Odemkni
  If (Zdroj.Range("A1") = 4) Then
' nova verze s registraci
    For Radek = 4 To 12
      Cells(Radek, 4) = Zdroj.Cells(Radek, 4)
    Next Radek
    For Radek = 14 To 18
      Cells(Radek, 4) = Zdroj.Cells(Radek, 4)
    Next Radek
    For Radek = 22 To 23
      Cells(Radek, 4) = Zdroj.Cells(Radek, 4)
    Next Radek
    For Radek = 25 To 26
      Cells(Radek, 4) = Zdroj.Cells(Radek, 4)
    Next Radek
  Else
' stara verze
    For Radek = 4 To 11
      Cells(Radek, 4) = Zdroj.Cells(Radek, 4)
    Next Radek
    For Radek = 14 To 18
      Cells(Radek, 4) = Zdroj.Cells(Radek - 1, 4)
    Next Radek
    For Radek = 22 To 23
      Cells(Radek, 4) = Zdroj.Cells(Radek - 1, 4)
    Next Radek
    For Radek = 25 To 26
      Cells(Radek, 4) = Zdroj.Cells(Radek - 1, 4)
    Next Radek
  End If
  For Radek = 3 To 6
    Cells(Radek, 8) = Zdroj.Cells(Radek, 8)
  Next Radek
  Zamkni
End Sub

' Otevre dialogove okno pro nalezeni souboru externich dat
Function Najdi_XLS() As String
  Dim Soubor As String
  Soubor = Application.GetOpenFilename(filefilter:="Finex s p|fffd|edvahou(*.xls), *.xls", Title:="Import p|fffd|edchoz|fffd| verze Finexu")
  If Soubor = "False" Or Soubor = "Nepravda" Then
    Najdi_XLS = ""
  Else
    Poloha = InStr(1, Soubor, ".DBF", 1)
    Najdi_XLS = Soubor
  End If
End Function
Attribute VB_Name = "BasicImport_Helios"
Option Base 1

Public OknoCile As Workbook
Public OknoUcto As Workbook

' import dat z exportovane HK Heliosu Red
' tohle se stara jen o otevreni XLS a jeho zavreni
' o nastaveni globalnich promennych apod
' hlavni cast importu se provadi pres Teplomer v TeploImportUcto
Sub Import_Helios(Optional Finta As Integer)
  Dim SouborHK As String ' hlavni kniha Export.xlsx
  On Error GoTo Chyba
  Set OknoCile = ActiveWorkbook
' nalezeni souboru hlavni knihy
  SouborHK = Najdi_Helios("Soubor hlavn|fffd| knihy *.XLS")
  If (SouborHK = "") Or Not SouborExistuje(SouborHK) Then Exit Sub
  Application.ScreenUpdating = False
' zpracovani hlavni knihy a ulozeni do predvahy
  Workbooks.Open Filename:=SouborHK, ReadOnly:=True
  Set OknoUcto = ActiveWorkbook
  Application.ScreenUpdating = False
  On Error Resume Next
  Application.Calculation = xlManual
  Teplomer = "Import_Helios"
  frmTeplomer.Show
  Application.Calculation = xlAutomatic
  OknoUcto.Close saveChanges:=False
  OknoCile.Activate
  Nastav_Predvahu
  Application.ScreenUpdating = True
  Exit Sub
Chyba:
  On Error Resume Next
  Beep
  MsgBox "Chyba p|fffd|i importu!", vbOKOnly + vbCritical, "Chyba"
  OknoUcto.Close saveChanges:=False
  OknoCile.Activate
  Nastav_Predvahu
  Application.ScreenUpdating = True
End Sub

' vlastni import dat z hlavni knihy OZO
' a kdyz je potreba ulozi i hospodarskou cinnost
Sub TeploImport_Helios(Optional Finta As Integer)
  Dim s As Integer
  Dim r As Long
  Dim i As Long
  Dim Radku As Long
  Dim Pole As String
  Dim Ucet As Integer
  Dim Castka As Double
' cislo sloupce poli v knize Export.xlsx
  Dim slUcet As Integer
  Dim slCastka As Integer
  Dim Predvaha(1000) As Double   ' predvaha
  
' nalezeni prvniho radku
  r = 1
  While UCase(Cells(r, 1)) <> "|fffd||fffd|ET"
    r = r + 1
  Wend
' prirazeni sloupcu polim
  OknoUcto.Activate
  s = 1
  Pole = UCase(Cells(r, s))
  While Pole <> ""
    If Pole = "|fffd||fffd|ET" Then slUcet = s
    If Pole = "KON.STAVY ROZD|fffd|L" Then slCastka = s
    s = s + 1
    Pole = UCase(Cells(r, s))
  Wend
' vynulovani Predvahy
  For i = 1 To 1000
    Predvaha(i) = 0
  Next i
' vlastni vypocet zustatku
  r = r + 1 ' prvni radek s daty
  Cells(r, 1).Select
  Radku = ActiveSheet.UsedRange.Rows.Count
  Pole = Cells(r, 1)
  While Pole <> ""
    sUcet = Trim(Cells(r, slUcet))
    Ucet = CInt(Left(sUcet, 3))
    Castka = Cells(r, slCastka)
    Predvaha(Ucet) = Predvaha(Ucet) + Castka
    r = r + 1
    Pole = UCase(Cells(r, 1))
    Call ZmenTeplomer(r / Radku)
  Wend
' vynulovani bezneho obdobi predvahy a zapis
  On Error Resume Next ' jsou zamknute nektere bunky
  OknoCile.Activate
  Worksheets(lPred).Select
  For r = R1 To Rn
    Cells(r, slBezneKc).ClearContents  ' predvaha
    Cells(r, slBezneZaokr).ClearContents
  Next r
  Cells(R1, 1).Select
  For r = R1 To Rn
    Ucet = CInt(Left(Cells(r, 1), 3))
    If Predvaha(Ucet) <> 0 Then
      Cells(r, slBezneKc) = Predvaha(Ucet)
    End If
  Next r
  Unload frmTeplomer
End Sub

' Otevre dialogove okno pro nalezeni souboru ucetnictvi DBF
Function Najdi_Helios(Titulek As String) As String
  Dim Soubor As String
  Soubor = Application.GetOpenFilename(filefilter:="Excelov|fffd| soubory (*.xls*), *.xls*", Title:=Titulek)
  If Soubor = "False" Or Soubor = "Nepravda" Then
    Najdi_Helios = ""
  Else
    Najdi_Helios = Soubor
  End If
End Function

Attribute VB_Name = "BasicImport_OZO"
Option Base 1

Public OknoCile As Workbook
Public OknoUcto As Workbook

' import dat primo z OZOGANU
' tohle se stara jen o otevreni DBF a jeho zavreni
' o nastaveni globalnich promennych apod
' hlavni cast importu se provadi pres Teplomer v TeploImportUcto
Sub Import_OZO(Optional Finta As Integer)
  Dim SouborHK As String ' hlavni kniha uu.dbf
  Dim SouborOS As String ' osnova xu.dbf
  On Error GoTo Chyba
  Set OknoCile = ActiveWorkbook
' nalezeni souboru hlavni knihy UU
  SouborHK = Najdi_DBF("Soubor hlavn|fffd| knihy UU.DBF")
  If SouborHK = "" Then Exit Sub
  SouborHK = LCase(SouborHK)
  If (InStr(1, SouborHK, "uu.dbf") = 0) And _
     (InStr(1, SouborHK, "uuk.dbf") = 0) Then
    MsgBox "Vybran|fffd| soubor nen|fffd| hlavn|fffd| kniha UU.DBF nebo UUK.DBF!", vbOKOnly + vbCritical, "Chyba"
    Exit Sub
  End If
  Application.ScreenUpdating = False
' zpracovani hlavni knihy a ulozeni do predvahy
  Workbooks.Open Filename:=SouborHK, ReadOnly:=True
  Set OknoUcto = ActiveWorkbook
  Application.ScreenUpdating = False
  On Error Resume Next
  Application.Calculation = xlManual
  Teplomer = "Import_OZO"
  frmTeplomer.Show
  Application.Calculation = xlAutomatic
  OknoUcto.Close saveChanges:=False
  OknoCile.Activate
  Nastav_Predvahu
  Application.ScreenUpdating = True
  Exit Sub
Chyba:
  On Error Resume Next
  Beep
  MsgBox "Chyba p|fffd|i importu!", vbOKOnly + vbCritical, "Chyba"
  OknoUcto.Close saveChanges:=False
  OknoCile.Activate
  Nastav_Predvahu
  Application.ScreenUpdating = True
End Sub

' vlastni import dat z hlavni knihy OZO
' a kdyz je potreba ulozi i hospodarskou cinnost
Sub TeploImport_OZO(Optional Finta As Integer)
  Dim s As Integer
  Dim r As Long
  Dim i As Long
  Dim Radku As Long
  Dim Pole As String
  Dim Ucet As Integer
  Dim Castka As Double
' cislo sloupce poli v knize UU.dbf
  Dim slUcet As Integer
  Dim slMR As Integer
  Dim slDR As Integer
  Dim slMO As Integer
  Dim slDO As Integer
  Dim slMM As Integer
  Dim slDM As Integer
  Dim slMMN As Integer
  Dim slDMN As Integer
  Dim slMD As Integer
  Dim slDD As Integer
  Dim Predvaha(1000) As Double   ' predvaha hlavni cinnost
  
' prirazeni sloupcu polim
  OknoUcto.Activate
  s = 1
  Pole = UCase(Cells(1, s))
  While Pole <> ""
    If Pole = "UCET" Then slUcet = s
    If Pole = "MR" Then slMR = s
    If Pole = "DR" Then slDR = s
    If Pole = "MO" Then slMO = s
    If Pole = "DO" Then slDO = s
    If Pole = "MM" Then slMM = s
    If Pole = "DM" Then slDM = s
    If Pole = "MMN" Then slMMN = s
    If Pole = "DMN" Then slDMN = s
    If Pole = "MD" Then slMD = s
    If Pole = "DD" Then slDD = s
    s = s + 1
    Pole = UCase(Cells(1, s))
  Wend
' vynulovani Predvahy
  For r = 1 To 1000
    Predvaha(r) = 0
  Next r
' vlastni vypocet zustatku
  Cells(1, 1).Select
  Radku = ActiveSheet.UsedRange.Rows.Count
  r = 2
  Pole = Cells(r, 1)
  While Pole <> ""
    sUcet = Trim(Cells(r, slUcet))
    Ucet = CInt(Left(sUcet, 3))
    Castka = Cells(r, slMR) - Cells(r, slDR) + _
             Cells(r, slMO) - Cells(r, slDO) + _
             Cells(r, slMM) - Cells(r, slDM) + _
             Cells(r, slMMN) - Cells(r, slDMN) + _
             Cells(r, slMD) - Cells(r, slDD)
    Predvaha(Ucet) = Predvaha(Ucet) + Castka
    r = r + 1
    Pole = UCase(Cells(r, 1))
    Call ZmenTeplomer(r / Radku)
  Wend
' vynulovani bezneho obdobi predvahy a zapis
  On Error Resume Next ' jsou zamknute nektere bunky
  OknoCile.Activate
  Worksheets(lPred).Select
  For r = R1 To Rn
    Cells(r, slBezneKc).ClearContents  ' predvaha
    Cells(r, slBezneZaokr).ClearContents
  Next r
  Cells(R1, 1).Select
  For r = R1 To Rn
    Ucet = CInt(Left(Cells(r, 1), 3))
    If Predvaha(Ucet) <> 0 Then
      Cells(r, slBezneKc) = Predvaha(Ucet)
    End If
  Next r
  Unload frmTeplomer
End Sub

' Otevre dialogove okno pro nalezeni souboru ucetnictvi DBF
Function Najdi_DBF(Titulek As String) As String
  Dim Soubor As String
  Soubor = Application.GetOpenFilename(filefilter:="Datab|fffd|zov|fffd| soubory (*.dbf), *.dbf", Title:=Titulek)
  If Soubor = "False" Or Soubor = "Nepravda" Then
    Najdi_DBF = ""
  Else
    Najdi_DBF = Soubor
  End If
End Function

Attribute VB_Name = "BasicIni"
Option Explicit

Sub NahradaKlicu()
  Dim Radek As String
  Dim Kanal As Integer
  Dim Klic As String
  Dim Hodnota As String
   
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Kanal = FreeFile
  Open ThisWorkbook.Path & "\ID.cfg" For Input As Kanal
  On Error Resume Next
  Do While Not EOF(Kanal)
    Input #Kanal, Radek
    If Radek <> "" Then
      Klic = DejKlic(Radek)
      Hodnota = DejHodnotuKlice(Radek)
      Select Case Klic
        Case "<<firma>>": Range("dtaKlient").Value = Hodnota
        Case "<<ulice>>": Range("dtaUlice").Value = Hodnota
        Case "<<psc>>": Range("dtaPSC").Value = Hodnota
        Case "<<mesto>>": Range("dtaMesto").Value = Hodnota
        Case "<<ico>>": Range("dtaICO").Value = Hodnota
        Case "<<dic>>": Range("dtaDIC").Value = Hodnota
        Case "<<ujmeno>>"
          Range("dtaUcetni").Value = Hodnota
          Range("dtaZaverka").Value = Hodnota
        Case "<<@jmeno>>": Range("dtaAuditor").Value = Hodnota
        Case "<<@dekret>>": Range("dtaDekret").Value = Hodnota
        Case "<<rok>>"
          Range("dtaRok").Value = Hodnota
          Range("dtaDatum").Value = "31.12." & Hodnota
      End Select
    End If
  Loop
Chyba:
  On Error Resume Next
  Close Kanal
  Application.ScreenUpdating = True
End Sub

Function DejKlic(Text As String) As String
  Dim Oddelovac As Integer
  DejKlic = ""
  Oddelovac = InStr(1, Text, "=")
  DejKlic = Trim(Left(Text, Oddelovac - 1))
End Function

Function DejHodnotuKlice(Text As String) As String
  Dim Oddelovac As Integer
  DejHodnotuKlice = ""
  Oddelovac = InStr(1, Text, "=")
  DejHodnotuKlice = Trim(Right(Text, Len(Text) - Oddelovac))
End Function

Attribute VB_Name = "BasicTaxEdit"
Public cbRozvaha As Boolean
Public cbVysledovka As Boolean
'Public cbCashFlow As Boolean
Public cbKapital As Boolean
Public cbAktiva As Boolean, Disketa As String

' Zapis dat do souboru, ktery cte programem TaxEdit
Sub ZapisTaxEdit()
  On Error GoTo Chyba
  CilExportu = ThisWorkbook.Path & "\" & Replace(ThisWorkbook.Name, ".xls", ".imp")
  Open CilExportu For Output As #1
  HlavaSouboru
  If cbRozvaha Then
    DetailVykazu lRozv, "2", 15, 29, RadekXML, 8, 9, 10, 11, 12
    DetailVykazu lRozv, "3", 34, 48, RadekXML, 8, 9, 10, 0, 0
    Print #1,
  End If
  If cbVysledovka Then
    DetailVykazu lVysl, "4", 19, 48, RadekXML, 9, 10, 11, 0, 0
    DetailVykazu lVysl, "4", 49, 74, RadekXML, 9, 10, 11, 0, 0
    Print #1,
  End If
  If cbKapital Then
    Kapital "6", 10, 7, 3
    Kapital "6", 15, 7, 3
    Kapital_C "6", 20, 7, 3
    Kapital "6", 26, 7, 3
    Kapital "6", 31, 7, 3
    Kapital "6", 36, 7, 3
    Kapital "6", 41, 7, 3
    Kapital "6", 46, 7, 3
    Kapital "6", 51, 7, 3
    Kapital "6", 56, 7, 3
    Kapital_K "6", 60, 7, 3
    Print #1,
  End If
Chyba:
  PataSouboru
  Close #1
End Sub

' Hlavicka souboru
Private Sub HlavaSouboru()
  On Error Resume Next
  Print #1, "TARGETTEMPLATE ""cff13.shd"""
  Print #1, "NAME ""FinEx""" & vbCrLf ' neni dulezite
  If Range("dtaTisice") Then
    Print #1, "1966,3 = 1"    ' v tisicich
  Else
    Print #1, "1966,3 = 0"    ' v Korunach
  End If
  Print #1, "1965,3 = ""K|fffd|""" ' v Korunach
  Print #1, "1963,3 = 1"      ' zjednodusena
  Print #1, "1962,3 = 1"      ' na 1 desetinne misto
  Print #1, "1962,3 = 0"      ' na 0 desetinnych mist, musi byt oba radky po sobe :o)
  Print #1, "1001,3 = """ & Range("dtaICO") & """"    ' ICO
  Print #1, "1003,3 = """ & Range("dtaDIC") & """"    ' DIC
  Print #1, "1011,3 = """ & Range("dtaKlient") & """" ' firma
  Print #1, "1013,3 = """ & Range("dtaUlice") & """"  ' ulice
  Print #1, "1014,3 = """ & Range("dtaMesto") & """"  ' mesto
  Print #1, "1015,3 = """ & Range("dtaPSC") & """"    ' PSC
  Print #1,
End Sub

Private Sub PataSouboru()
  Print #1, "1901,3 = 1"  ' konec dat
End Sub

' Detail vykazu - po strankach
' RadOd  - cislo radku od (zacatek bloku)
' RadDo  - cislo radku do (konec bloku)
' S0     - cislo sloupce, kde je cislo radku (to neni sranda)
' S1..S5 - cisla sloupcu, kde jsou vlastni hodnoty
Private Sub DetailVykazu(ByVal Vykaz, ByVal Kod As String, ByVal RadOd, ByVal RadDo, ByVal S0, _
                         ByVal S1, ByVal S2, ByVal S3, ByVal S4, ByVal S5 As Integer)
  Dim i As Integer
  Dim Radek As String
  Dim Cislo1 As Currency
  Dim Cislo2 As Currency
  Dim Cislo3 As Currency
  Dim Cislo4 As Currency
  Dim Cislo5 As Currency
  For i = RadOd To RadDo
    Cislo1 = 0
    Cislo2 = 0
    Cislo3 = 0
    Cislo4 = 0
    Cislo5 = 0
    Cislo1 = CCur(Worksheets(Vykaz).Cells(i, S1).Value)
    Cislo2 = CCur(Worksheets(Vykaz).Cells(i, S2).Value)
    If S3 > 0 Then Cislo3 = CCur(Worksheets(Vykaz).Cells(i, S3).Value)
    If S4 > 0 Then Cislo4 = CCur(Worksheets(Vykaz).Cells(i, S4).Value)
    If S5 > 0 Then Cislo5 = CCur(Worksheets(Vykaz).Cells(i, S5).Value)
    If (Cislo1 <> 0) Or (Cislo2 <> 0) Or (Cislo3 <> 0) Or (Cislo4 <> 0) Or (Cislo5 <> 0) Then
      Radek = Worksheets(Vykaz).Cells(i, S0).Value
      Radek = VlozNuly(Radek, 3)
      If S4 <> 0 Then 'rozvaha aktiva - 5 sloupce
        Print #1, Kod; Radek; ",3 = " & Cislo1 & ";" & Cislo2 & ";" & Cislo3 & ";" & Cislo4 & ";" & Cislo5
      Else ' rozvaha pasiva nebo vysledovka - 3 sloupce
        Print #1, Kod; Radek; ",3 = " & Cislo1 & ";" & Cislo2 & ";" & Cislo3
      End If
    End If
  Next i
End Sub

' Detail Kapitalu - po radcich
' RadOd  - cislo prvniho radku
' S0     - cislo sloupce, kde je cislo radku (to neni sranda)
' S1     - cislo sloupce, kde jsou vlastni hodnoty
Private Sub Kapital(ByVal Kod As String, ByVal RadOd, ByVal S0, ByVal S1 As Integer)
  Dim i As Integer
  Dim Radek As String
  Dim Cislo1 As Currency
  Dim Cislo2 As Currency
  Dim Cislo3 As Currency
  Dim Cislo4 As Currency
  Cislo1 = CCur(Worksheets(lKapi).Cells(RadOd, S1).Value)
  Cislo2 = CCur(Worksheets(lKapi).Cells(RadOd + 1, S1).Value)
  Cislo3 = CCur(Worksheets(lKapi).Cells(RadOd + 2, S1).Value)
  Cislo4 = CCur(Worksheets(lKapi).Cells(RadOd + 3, S1).Value)
  If (Cislo1 <> 0) Or (Cislo2 <> 0) Or (Cislo3 <> 0) Or (Cislo4 <> 0) Then
    Radek = Worksheets(lKapi).Cells(RadOd, S0).Value
    Radek = VlozNuly(Radek, 3)
    Print #1, Kod; Radek; ",3 = " & Cislo1 & ";" & Cislo2 & ";" & Cislo3 & ";" & Cislo4
  End If
End Sub

' Detail Kapitalu- radek C
' RadOd  - cislo prvniho radku
' S0     - cislo sloupce, kde je cislo radku (to neni sranda)
' S1     - cislo sloupce, kde jsou vlastni hodnoty
Private Sub Kapital_C(ByVal Kod As String, ByVal RadOd, ByVal S0, ByVal S1 As Integer)
  Dim i As Integer
  Dim Radek As String
  Dim Cislo1 As Currency
  Dim Cislo2 As Currency
  Dim Cislo3 As Currency
  Dim Cislo4 As Currency
  Cislo1 = CCur(Worksheets(lKapi).Cells(RadOd + 1, S1).Value)
  Cislo2 = CCur(Worksheets(lKapi).Cells(RadOd + 2, S1).Value)
  If Cislo2 > 0 Then
    Cislo3 = 0
  Else
    Cislo3 = Cislo2
    Cislo2 = 0
  End If
  If (Cislo1 <> 0) Or (Cislo2 <> 0) Or (Cislo3 <> 0) Or (Cislo4 <> 0) Then
    Radek = Worksheets(lKapi).Cells(RadOd + 1, S0).Value
    Radek = VlozNuly(Radek, 3)
    Print #1, Kod; Radek; ",3 = " & Cislo1 & ";" & Cislo2 & ";" & Cislo3 & ";" & Cislo4
  End If
End Sub

' Detail Kapitalu- radek K
' RadOd  - cislo prvniho radku
' S0     - cislo sloupce, kde je cislo radku (to neni sranda)
' S1     - cislo sloupce, kde jsou vlastni hodnoty
Private Sub Kapital_K(ByVal Kod As String, ByVal RadOd, ByVal S0, ByVal S1 As Integer)
  Dim i As Integer
  Dim Radek As String
  Dim Cislo1 As Currency
  Cislo1 = CCur(Worksheets(lKapi).Cells(RadOd, S1).Value)
  If (Cislo1 <> 0) Then
    Radek = Worksheets("Kapit|fffd|l").Cells(RadOd, S0).Value
    Radek = VlozNuly(Radek, 3)
    Print #1, Kod; Radek; ",3 = 0;0;0;" & Cislo1
  End If
End Sub

Attribute VB_Name = "BasicXML"
' export do souboru XML pro danove priznani PO

' data vet Ux se zapisuji do VetyUx,
' aby se dala data jednoduse ziskat ze sesitu danoveho priznani

Public SlozkaXML As String
Public CilExportuXML As String
Public PravnickaOsoba As Boolean

Dim VetyUx As String

Public Const RadekXML = 24 ' cislo radku XML danoveho priznani je ve sloupci "X"
Const UAod = 15 ' radky rozvahy - aktiva
Const UAdo = 29
Const UBod = 19 ' radky vysledovky
Const UBdo = 74
Const UDod = 34 ' radky rozvahy - pasiva
Const UDdo = 48

' export kompletniho souboru XML
Sub ExportXML(Optional Par As String)
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  VetyUx = ""
  PravnickaOsoba = Range("dtaPO")
  CilExportuXML = DejJmenoSouboruXML(Replace(ThisWorkbook.Name, ".xls", ".xml"))
  If CilExportuXML = "" Then Exit Sub
' vlastni export do XML
  Open CilExportuXML For Output As #1
  HlavaSouboru
  Veta_D ' DAP
  Veta_P ' poplatnik
  If (ExportVykazy = "K") Or (ExportVykazy = "R") Then Veta_UA ' rozvaha - aktiva
  If (ExportVykazy = "K") Or (ExportVykazy = "V") Then Veta_UB ' vysledovka
  If (ExportVykazy = "K") Or (ExportVykazy = "R") Then Veta_UD ' rozvaha - pasiva
  If Len(VetyUx) > 2 Then
    VetyUx = Left(VetyUx, Len(VetyUx) - 2)
  End If
  Print #1, VetyUx
  PataSouboru
  Hlavni_menu
  frmHlaska.Show
Chyba:
  Hlavni_menu
  Close #1
End Sub



' nacte jeden tag ze souboru dan. priznani
Function NactiTag(Poloha As Long) As String
  Dim Tag As String ' jeden tag ze zdroje vcetne pocatecnich mezer
  Dim Znak As String
  Tag = ""
  Znak = "" ' zacatek tagu <
  While (Poloha < LOF(1)) And (Znak <> "<")
    Znak = Input(1, #1)
    Tag = Tag & Znak
    Poloha = Loc(1)
  Wend
  Znak = "" ' konec tagu >
  While (Poloha < LOF(1)) And (Znak <> ">")
    Znak = Input(1, #1)
    Tag = Tag & Znak
    Poloha = Loc(1)
  Wend
  NactiTag = Tag
End Function

' nacte danove priznani ze souboru XML a vrati ho
' bez vet UA, UB a UD
Function NactiDP(Zdroj As String) As String
  Dim Tag As String ' jeden tag ze zdroje
  Dim DP As String  ' obsah souboru dan. priznani bez vet Ux
  Dim Poloha As Long
  On Error GoTo Chyba
  DP = ""
  Poloha = 0
  Open Zdroj For Binary Access Read As #1
  While Poloha < LOF(1)
    Tag = NactiTag(Poloha)
    If (InStr(1, LCase(Tag), "</dppdp") = 0) And _
       (InStr(1, LCase(Tag), "</pisemnost") = 0) And _
       (InStr(1, LCase(Tag), "<vetaua") = 0) And _
       (InStr(1, LCase(Tag), "<vetaub") = 0) And _
       (InStr(1, LCase(Tag), "<vetaud") = 0) Then
      DP = DP & Tag
    End If
    Poloha = Loc(1)
  Wend
  Close #1
  NactiDP = DP
Chyba:
  Close #1
End Function

' export vykazu do jiz existujiciho souboru XML
' precte vstupni soubor, prida k nemu vykazy a ulozi ho pod jinym jmenem
' pritom vynecha pripadne puvodni vety ucetni zaverky a nahradi je
Sub ExportXML_Slouceni(Optional Par As String)
  Dim Ux As String
  Dim Zdroj As String
  Dim Odp As Integer
  Dim VetyDP As String ' vety puvodniho dan. priznani bez vet zaverky
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Zdroj = DejJmenoDanPriXML
  If Zdroj = "" Then Exit Sub
  VetyDP = NactiDP(Zdroj)
  If InStr(1, LCase(VetyDP), "<dppdp") = 0 Then
    Odp = MsgBox("Soubor nen|fffd| da|fffd|ov|fffd| p|fffd|izn|fffd|n|fffd| ve form|fffd|tu EPO2.", vbOKOnly + vbCritical, "Chyba")
    Exit Sub
  End If
  CilExportuXML = DejJmenoSouboruXML(Replace(ThisWorkbook.Name, ".xls", ".xml"))
  If CilExportuXML = "" Then Exit Sub
' vlastni export do XML
  PravnickaOsoba = Range("dtaPO")
  Open CilExportuXML For Output As #1
  Ux = DejVetyUx
  Print #1, VetyDP
  If Len(Ux) > 0 Then Print #1, Ux
  PataSouboru
  Hlavni_menu
  frmHlaska.Show
Chyba:
  Hlavni_menu
  Close #1
End Sub

' export jen vet Ux do pomocneho souboru
' volano z danoveho priznani
Public Function DejVetyUx(Optional Par As String) As String
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  ExportVykazy = "K" ' vsechny vykazy
  VetyUx = ""
' vlastni export
  Veta_UA ' rozvaha - aktiva
  Veta_UB ' vysledovka
  Veta_UD ' rozvaha - pasiva
  If Len(VetyUx) > 2 Then
    VetyUx = Left(VetyUx, Len(VetyUx) - 2)
  End If
  DejVetyUx = VetyUx
Chyba:
End Function

' export typu zaverky
' volano z danoveho priznani
Public Function DejTypZaverky(Optional Par As String) As String
  Dim Typ As String
  Dim RozvRozsirena As Boolean
  Dim VyslPlna As Boolean
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  RozvRozsirena = Range("dtaRozvRozsirena")
  VyslPlna = Range("dtaVyslPlna")
  Typ = "uv_vyhl=""500"" "
  If RozvRozsirena And VyslPlna Then
    Typ = Typ & "uv_rozsah=""P"" "
    Typ = Typ & "uv_rozsah_vzz=""P"" "
    Typ = Typ & "uv_rozsah_rozv=""Z"" "
  ElseIf RozvRozsirena And Not VyslPlna Then
    Typ = Typ & "uv_rozsah=""Z"" "
    Typ = Typ & "uv_rozsah_vzz=""Z"" "
    Typ = Typ & "uv_rozsah_rozv=""Z"" "
  ElseIf Not RozvRozsirena And VyslPlna Then
    Typ = Typ & "uv_rozsah=""P"" "
    Typ = Typ & "uv_rozsah_vzz=""P"" "
    Typ = Typ & "uv_rozsah_rozv=""M"" "
  ElseIf Not RozvRozsirena And Not VyslPlna Then
    Typ = Typ & "uv_rozsah=""M"" "
    Typ = Typ & "uv_rozsah_vzz=""Z"" "
    Typ = Typ & "uv_rozsah_rozv=""M"" "
  End If
  Typ = Typ & "d_uv=""31.12." & Range("dtaRok") & """ "
  Typ = Typ & "uv_podpis=""" & Range("dtaZaverka") & """ "
  DejTypZaverky = Typ
Chyba:
End Function

' hlavicka souboru
Private Sub HlavaSouboru()
  On Error Resume Next
  Print #1, "<?xml version=""1.0"" encoding=""WINDOWS-1250""?>"
  Print #1, VerzeSW
  If PravnickaOsoba Then
    Print #1, "<DPPDP8 verzePis=""1.01"">"
  Else
    Print #1, "<DPFDP5 verzePis=""1.01"">"
  End If
End Sub

' pata souboru
Private Sub PataSouboru()
  On Error Resume Next
  If PravnickaOsoba Then
    Print #1, "</DPPDP8>"
  Else
    Print #1, "</DPFDP5>"
  End If
  Print #1, "</Pisemnost>"
  Close #1
End Sub


Function DejCislo(Txt As String) As String
  On Error Resume Next
  Txt = Trim(Txt)
  If Txt = "" Then
    DejCislo = "0"
  Else
    DejCislo = Txt
  End If
End Function

'----------------------------

' DAP - hlavni veta dani
Private Sub Veta_D()
  Dim Veta As String
  Dim Audit As String
  Audit = "N"
  Veta = "<VetaD "
  Veta = Veta & DejTypZaverky
  If PravnickaOsoba Then
    Veta = Veta & "dokument=""DP8"" "
    Veta = Veta & "k_uladis=""DPP"" "
    Veta = Veta & "typ_dapdpp=""A"" "
    Veta = Veta & "dapdpp_forma=""B"" "
    Veta = Veta & "dan_por=""N"" "
    Veta = Veta & "uc_zav=""A"" "
    Veta = Veta & "spoj_zahr=""N"" "
    Veta = Veta & "typ_popldpp=""1"" "
    Veta = Veta & "typ_zo=""A"" "
  Else
    Veta = Veta & "dokument=""DP5"" "
    Veta = Veta & "k_uladis=""DPF"" "
    Veta = Veta & "dap_typ=""B"" "
    Veta = Veta & "prop_zahr=""N"" "
    Veta = Veta & "rok=""" & Range("dtaRok") & """ "
  End If
  Veta = Veta & "audit=""" & Audit & """ "
  Veta = Veta & "zdobd_od=""1.1." & Range("dtaRok") & """ "
  Veta = Veta & "zdobd_do=""31.12." & Range("dtaRok") & """ "
  Veta = Veta & "/>"
  Print #1, Veta
' nastaveni pro TaxEdit v poznamce
  Veta = "<!-- VetaD "
  Veta = Veta & "rozsah=""1"" "   ' zjednodusena zaverka
'  If Range("dtaTridoby") Then
'    Veta = Veta & "obdobi=""2"" "   ' 3, 2 minula obdobi
'  Else
    Veta = Veta & "obdobi=""1"" "   ' 2, akt. a minule obdobi
'  End If
  If Range("dtaTisice") Then
    Veta = Veta & "jednotky=""1"" " ' v tisicich Kc
    Veta = Veta & "presnost=""0"" " ' pocet desetin
  Else
    Veta = Veta & "jednotky=""0"" " ' v Kc
    Veta = Veta & "presnost=""2"" " ' pocet desetin
  End If
  Veta = Veta & "mena=""CZK"" "   ' mena
  Veta = Veta & "ZapisSouctovychRadku =""0"" " ' nezapisovat do souctu
  Veta = Veta & " -->"
  Print #1, Veta
End Sub

' poplatnik
Private Sub Veta_P()
  Dim Veta As String
  Dim DIC As String
  DIC = Replace(Range("dtaDIC"), "CZ", "")
  Veta = "<VetaP "
  Veta = Veta & "dic=""" & DIC & """ "
  Veta = Veta & "rod_c=""" & Range("dtaICO") & """ "
  If PravnickaOsoba Then
    Veta = Veta & "zkrobchjm=""" & Range("dtaKlient") & """ "
  End If
  Veta = Veta & "ulice=""" & Range("dtaUlice") & """ "
  Veta = Veta & "psc=""" & Range("dtaPSC") & """ "
  Veta = Veta & "naz_obce=""" & Range("dtaMesto") & """ "
  Veta = Veta & "/>"
  Print #1, Veta
End Sub

' rozvaha - aktiva
Private Sub Veta_UA()
  Dim Veta As String
  Dim r As Integer
  Dim rXML As String
  Dim Brutto As String
  Dim Korekce As String
  Dim Netto As String
  Dim Minule As String
  Worksheets(lRozv).Select
  For r = UAod To UAdo
    rXML = Cells(r, RadekXML)
    If Trim(rXML) <> "" Then
      Brutto = DejCislo(Cells(r, 8))
      Korekce = Abs(DejCislo(Cells(r, 9)))
      Netto = DejCislo(Cells(r, 10))
      Minule = DejCislo(Cells(r, 11))
      If (Brutto <> "0") Or (Korekce <> "0") Or (Netto <> "0") Or (Minule <> "0") Then
        Veta = "<VetaUA "
        Veta = Veta & "c_radku=""" & rXML & """ "
        Veta = Veta & "kc_brutto=""" & Brutto & """ "
        Veta = Veta & "kc_korekce=""" & Korekce & """ "
        Veta = Veta & "kc_netto=""" & Netto & """ "
        Veta = Veta & "kc_netto_min=""" & Minule & """ "
        Veta = Veta & "/>"
        VetyUx = VetyUx & Veta & vbCrLf
      End If
    End If
  Next r
End Sub

' vysledovka - druhove cleneni
Private Sub Veta_UB()
  Dim Veta As String
  Dim r As Integer
  Dim rXML As String
  Dim Sledovane As String
  Dim Minule As String
  Worksheets(lVysl).Select
  For r = UBod To UBdo
    rXML = Cells(r, RadekXML)
    If Trim(rXML) <> "" Then
      Sledovane = DejCislo(Cells(r, 9))
      Minule = DejCislo(Cells(r, 10))
      If (Sledovane <> "0") Or (Minule <> "0") Then
        Veta = "<VetaUB "
        Veta = Veta & "c_radku=""" & rXML & """ "
        Veta = Veta & "kc_sled=""" & Sledovane & """ "
        Veta = Veta & "kc_min=""" & Minule & """ "
        Veta = Veta & "/>"
        VetyUx = VetyUx & Veta & vbCrLf
      End If
    End If
  Next r
End Sub

' rozvaha - pasiva
Private Sub Veta_UD()
  Dim Veta As String
  Dim r As Integer
  Dim rXML As String
  Dim Sledovane As String
  Dim Minule As String
  Worksheets(lRozv).Select
  For r = UDod To UDdo
    rXML = Cells(r, RadekXML)
    If Trim(rXML) <> "" Then
      Sledovane = DejCislo(Cells(r, 8))
      Minule = DejCislo(Cells(r, 9))
      If (Sledovane <> "0") Or (Minule <> "0") Then
        rXML = Cells(r, RadekXML)
        Veta = "<VetaUD "
        Veta = Veta & "c_radku=""" & rXML & """ "
        Veta = Veta & "kc_sled=""" & Sledovane & """ "
        Veta = Veta & "kc_min=""" & Minule & """ "
        Veta = Veta & "/>"
        VetyUx = VetyUx & Veta & vbCrLf
      End If
    End If
  Next r
End Sub


Attribute VB_Name = "Graf"
Option Explicit

Dim AktGraf As Chart

Sub UkazGraf()
  Dim Radek As Long
  On Error Resume Next
  Radek = ActiveCell.Row
  If IsEmpty(Cells(Radek, 2)) Then
    MsgBox "Nastavte nejd|fffd||fffd|ve kurzor na |fffd||fffd|dek s daty."
    Exit Sub
  End If
  Application.ScreenUpdating = False
  Odemkni
  VytvorGraf (Radek)
  Zamkni
  frmGraf.Show
End Sub

Sub VytvorGraf(r As Long)
  Dim GrafObj As ChartObject
  Dim Kategorie As Range
  Dim Zdroj As Range
  Dim ZdrojDat As Range
  Dim JmenoSouboru As String ' s grafem
  On Error Resume Next
  Application.ScreenUpdating = False
  Set Kategorie = ActiveSheet.Range("B2:E2")
  Set Zdroj = ActiveSheet.Range(Cells(r, 2), Cells(r, 5))
  Set ZdrojDat = Union(Kategorie, Zdroj)
  Set GrafObj = ActiveSheet.ChartObjects.Add(50, 40, 300, 180)
  Set AktGraf = GrafObj.Chart
  JmenoSouboru = ThisWorkbook.Path & Application.PathSeparator & SouborGrafu
  With AktGraf
    .ChartType = xlColumnClustered
    .SetSourceData Source:=ZdrojDat, PlotBy:=xlRows
    .HasLegend = False
    .ApplyDataLabels Type:=xlDataLabelsShowValue, LegendKey:=False
    .ChartTitle.Font.Size = 14
    .ChartTitle.Font.Bold = True
    .Axes(xlCategory).TickLabels.Font.Size = 10
    .Axes(xlCategory).TickLabels.Orientation = xlHorizontal
    With .ChartArea.Interior
      .ColorIndex = 19
      .PatternColorIndex = 1
      .Pattern = xlSolid
    End With
'  ulozit graf jako GIF
    .Export Filename:=JmenoSouboru, FilterName:="GIF"
  End With
  GrafObj.Delete
End Sub

Sub GrafyDoZakrytu(Optional Finta As Integer) ' parametr je misto Private
  Sheets("Grafy").Select
  With ActiveSheet
    .ChartObjects(1).Left = 8       ' siroky
    .ChartObjects(1).Width = 462
    .ChartObjects(2).Left = 80      ' uzky
    .ChartObjects(2).Width = 325
    .ChartObjects(3).Left = 8       ' siroky
    .ChartObjects(3).Width = 462
    .ChartObjects(4).Left = 80      ' uzky
    .ChartObjects(4).Width = 325
    .ChartObjects(5).Left = 8       ' siroky
    .ChartObjects(5).Width = 462
    .ChartObjects(6).Left = 80      ' uzky
    .ChartObjects(6).Width = 325
    .ChartObjects(7).Left = 8       ' siroky
    .ChartObjects(7).Width = 462
    .ChartObjects(8).Left = 80      ' uzky
    .ChartObjects(8).Width = 325
    .ChartObjects(9).Left = 80      ' uzky
    .ChartObjects(9).Width = 325
    .ChartObjects(10).Left = 8      ' siroky
    .ChartObjects(10).Width = 462
    .ChartObjects(11).Left = 80     ' uzky
    .ChartObjects(11).Width = 325
    .ChartObjects(12).Left = 8      ' siroky
    .ChartObjects(12).Width = 462
    .ChartObjects(13).Left = 80     ' uzky
    .ChartObjects(13).Width = 325
  End With
End Sub


Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True






Attribute VB_Name = "List10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnGraf, 2, 1, MSForms, CommandButton"
Const rStabilita = "4:57"
Const rSolventnost = "58:109"
Const rAktivita = "110:160"
Const rRentabilita = "161:213"
Const rCelkem = "214:236"
Const rBilance = "237:289"
Const rAltman = "290:340"

Private Sub btnPomoc_Click()
  HesloNapovedy = hnAnalyza
  frmNapoveda.Show
End Sub

Private Sub btnGraf_Click()
  UkazGraf
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
  btnGraf_Click
  Cancel = True
End Sub



Sub Stabilita()
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Odemkni
  If Range("K1") Then
    Rows(rStabilita).EntireRow.Hidden = False
  Else
    Rows(rStabilita).EntireRow.Hidden = True
  End If
  Range("A3").Select
Chyba:
  Zamkni
End Sub

Sub Solventnost()
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Odemkni
  If Range("K2") Then
    Rows(rSolventnost).EntireRow.Hidden = False
  Else
    Rows(rSolventnost).EntireRow.Hidden = True
  End If
  Range("A3").Select
Chyba:
  Zamkni
End Sub

Sub Aktivita()
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Odemkni
  If Range("K3") Then
    Rows(rAktivita).EntireRow.Hidden = False
  Else
    Rows(rAktivita).EntireRow.Hidden = True
  End If
  Range("A3").Select
Chyba:
  Zamkni
End Sub

Sub Rentabilita()
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Odemkni
  If Range("K4") Then
    Rows(rRentabilita).EntireRow.Hidden = False
  Else
    Rows(rRentabilita).EntireRow.Hidden = True
  End If
  Range("A3").Select
Chyba:
  Zamkni
End Sub

Sub Celkem()
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Odemkni
  If Range("K5") Then
    Rows(rCelkem).EntireRow.Hidden = False
  Else
    Rows(rCelkem).EntireRow.Hidden = True
  End If
  Range("A3").Select
Chyba:
  Zamkni
End Sub

Sub Bilance()
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Odemkni
  If Range("L1") Then
    Rows(rBilance).EntireRow.Hidden = False
  Else
    Rows(rBilance).EntireRow.Hidden = True
  End If
  Range("A3").Select
Chyba:
  Zamkni
End Sub

Sub Altman()
  On Error GoTo Chyba
  Application.ScreenUpdating = False
  Odemkni
  If Range("L2") Then
    Rows(rAltman).EntireRow.Hidden = False
  Else
    Rows(rAltman).EntireRow.Hidden = True
  End If
  Range("A3").Select
Chyba:
  Zamkni
End Sub

Attribute VB_Name = "List11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 3, 0, MSForms, CommandButton"
Private Sub btnPomoc_Click()
  HesloNapovedy = hnKapital
  frmNapoveda.Show
End Sub

Private Sub Worksheet_Activate()
  If Not Worksheets(lID).Range("dtaTisice") Then
    JenTisice ("P|fffd|ehled o vlastn|fffd|m kapit|fffd|lu")
  End If
End Sub
Attribute VB_Name = "List12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "List16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 11, 0, MSForms, CommandButton"
Private Sub btnPomoc_Click()
  HesloNapovedy = hnPredvaha
  frmNapoveda.Show
End Sub

Private Sub ZvyrazniRadek()
  If Worksheets(lID).Range("dtaUcet") Then   ' zvyraznit ucet
    Odemkni
    Range("A" & R1 & ":A" & Rn).Interior.ColorIndex = ibSeda
    Radek = ActiveCell.Row
    If (Radek >= R1) And (Radek <= Rn) Then
      Range("A" & Radek).Interior.ColorIndex = ibVyrazna
    End If
    Zamkni
  End If
End Sub

Private Sub Worksheet_Activate()
  ZvyrazniRadek
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Dim Radek As Long
  Dim Sloupec As String
  On Error GoTo Chyba
  Sloupec = ""
  Radek = Target.Row
  ZvyrazniRadek
  If InRange(Target, Range("pre1")) Then
    Sloupec = "O"
  ElseIf InRange(Target, Range("pre2")) Then
    Sloupec = "R"
  ElseIf InRange(Target, Range("pre3")) Then
    Sloupec = "U"
  Else
    Range("B3") = ""
    Exit Sub
  End If
  If (Range(Sloupec & Radek) = "0") Or (Range(Sloupec & Radek) = "") Then
    Range("B3") = Range("A" & Radek)
  Else
    Range("B3") = Range("A" & Radek) & "  " & _
                  Range(Sloupec & Radek) & " - " & _
                  NajdiOznaceni(Range(Sloupec & Radek))
  End If
Chyba:
  Zamkni
End Sub

Attribute VB_Name = "List19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 1, 0, MSForms, CommandButton"
Private Sub btnPomoc_Click()
  HesloNapovedy = hnPriloha
  frmNapoveda.Show
End Sub
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 16, 0, MSForms, CommandButton"
Attribute VB_Control = "btnOknaKorekce, 82, 1, MSForms, CommandButton"
Private Sub btnOknaKorekce_Click()
  Okna
End Sub

Private Sub btnPomoc_Click()
  HesloNapovedy = hnKorekce
  frmNapoveda.Show
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
  On Error Resume Next
  Odemkni
  DefiniceKorekci
  Zamkni
  Cancel = True
End Sub

Private Sub Worksheet_Activate()
  Dim Radku As Long
  Radku = Range("A" & R1).End(xlDown).Row
  If Worksheets(lID).Range("dtaUcet") Then   ' zvyraznit ucet
    Odemkni
    Range("A" & R1 & ":A" & Radku).Interior.ColorIndex = ibSeda
    Radek = ActiveCell.Row
    If (Radek >= R1) And (Radek <= Radku) Then
      Range("A" & Radek).Interior.ColorIndex = ibVyrazna
    End If
    Zamkni
  End If
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Dim Radek As Long
  Dim Radku As Long
  Dim Sloupec As Long
  Sloupec = Target.Column
  Radek = Target.Row
  Radku = Range("A" & R1).End(xlDown).Row
  If Worksheets(lID).Range("dtaUcet") Then   ' zvyraznit ucet
    Odemkni
    Range("A" & R1 & ":A" & Radku).Interior.ColorIndex = ibSeda
    If (Radek >= R1) And (Radek <= Radku) Then
      Range("A" & Radek).Interior.ColorIndex = ibVyrazna
    End If
    Zamkni
  End If
  If Radek < R1 Then
    Range("B3") = ""
    Exit Sub
  End If
  Select Case Sloupec
    Case 5, 7, 9, 12, 14, 20, 22
      Range("B3") = Range("A" & Radek) & "  " & _
                    Cells(Radek, Sloupec) & " - " & _
                    NajdiOznaceni(Cells(Radek, Sloupec))
    Case Else
      Range("B3") = Range("A" & Radek)
      Exit Sub
  End Select
End Sub






Attribute VB_Name = "List20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 1, 0, MSForms, CommandButton"
Private Sub btnPomoc_Click()
  HesloNapovedy = hnPriloha
  frmNapoveda.Show
End Sub
Attribute VB_Name = "List22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "rbZakladni, 39, 2, MSForms, OptionButton"
Attribute VB_Control = "rbRozsirena, 40, 3, MSForms, OptionButton"
Option Explicit

Private Sub btnPomoc_Click()
  HesloNapovedy = hnRozvaha
  frmNapoveda.Show
End Sub

Private Sub rbRozsirena_Click()
  PrepniVerze
End Sub

Private Sub rbZakladni_Click()
  PrepniVerze
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
  Dim Sloupec As Integer
  Dim AP As String
  On Error Resume Next
  Cancel = True
  If Target.HasFormula Then
    Odemkni
    If UCase(Left(Target.Formula, 6)) = "=SUMIF" Then
      Zamkni
      Vykaz = lRozv
      Sloupec = Target.Column - slBezneObdobiR
      AP = Left(Cells(Target.Row, 1), 1)
      RadekVykazu = Cells(Target.Row, 7)
      TextRadku = Cells(Target.Row, 3)
      BrutoKor = ""
      KodRadku = Cells(Target.Row, 1)
      Select Case AP
        Case "a"
          Select Case Sloupec
            Case 0
              uObdobi = "B"
              BrutoKor = "B"
            Case 1
              uObdobi = "B"
              BrutoKor = "K"
            Case 3: uObdobi = "M"
            Case 4: uObdobi = "P"
          End Select
        Case "p"
          Select Case Sloupec
            Case 0: uObdobi = "B"
            Case 1: uObdobi = "M"
            Case 2: uObdobi = "P"
          End Select
        End Select
      frmVypocetUkazatele.Show
    End If
  End If
  Zamkni
End Sub

' prepina rozsirenou a zakladni verzi rozvahy
Private Sub PrepniVerze()
  Dim Rozsirena As Boolean
  Dim Skryt As Boolean
  Dim r As Integer
  On Error Resume Next
  Application.ScreenUpdating = False
  Rozsirena = Range("dtaRozvRozsirena")
  Odemkni
  If Rozsirena Then
    Rows("15:59").EntireRow.Hidden = False
  Else
    For r = 15 To 59
      If Trim(Cells(r, 28)) = "" Then
        Rows(r & ":" & r).EntireRow.Hidden = True
      End If
    Next r
  End If
  Zamkni
End Sub
Attribute VB_Name = "List6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "rbZkracena, 3, 2, MSForms, OptionButton"
Attribute VB_Control = "rbPlna, 4, 3, MSForms, OptionButton"
Option Explicit

Private Sub btnPomoc_Click()
  HesloNapovedy = hnVysledovka
  frmNapoveda.Show
End Sub

Private Sub rbPlna_Click()
  PrepniVerze
End Sub

Private Sub rbZkracena_Click()
  PrepniVerze
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
  Dim Sloupec As Integer
  On Error Resume Next
  Cancel = True
  If Target.HasFormula Then
    Odemkni
    If UCase(Left(Target.Formula, 6)) = "=SUMIF" Then
      Zamkni
      Vykaz = lVysl
      BrutoKor = ""
      Sloupec = Target.Column - slBezneObdobiV
      RadekVykazu = Cells(Target.Row, 8)
      TextRadku = Cells(Target.Row, 3)
      KodRadku = Cells(Target.Row, 1)
      Select Case Sloupec
        Case 0: uObdobi = "B"
        Case 1: uObdobi = "M"
        Case 2: uObdobi = "P"
      End Select
      frmVypocetUkazatele.Show
    End If
  End If
  Zamkni
End Sub

' prepina plnou a zkracenou verzi vysledovky
Private Sub PrepniVerze()
  Dim Plna As Boolean
  Dim Skryt As Boolean
  Dim r As Integer
  On Error Resume Next
  Application.ScreenUpdating = False
  Plna = Range("dtaVyslPlna")
  Odemkni
  If Plna Then
    Rows("19:74").EntireRow.Hidden = False
    Range("A49").PageBreak = xlManual
  Else
    For r = 19 To 74
      If Trim(Cells(r, 28)) = "" Then
        Rows(r & ":" & r).EntireRow.Hidden = True
      End If
    Next r
    Cells.PageBreak = xlPageBreakNone
  End If
  Zamkni
End Sub

Attribute VB_Name = "List7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 42, 0, MSForms, CommandButton"
Attribute VB_Control = "btnOknaDefinice, 185, 1, MSForms, CommandButton"
Private Sub btnOknaDefinice_Click()
  Okna
End Sub

Private Sub btnPomoc_Click()
  HesloNapovedy = hnDefinice
  frmNapoveda.Show
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
  On Error Resume Next
  Odemkni
  DefinicePredvahy
  Zamkni
  Cancel = True
End Sub

Private Sub Worksheet_Activate()
  Odemkni
  Range("A" & R1 & ":A" & Rn).Interior.ColorIndex = ibSeda
  If Worksheets(lID).Range("dtaUcet") Then   ' zvyraznit ucet
    Radek = ActiveCell.Row
    If (Radek >= R1) And (Radek <= Rn) Then
      Range("A" & Radek).Interior.ColorIndex = ibVyrazna
    End If
  End If
  Zamkni
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Dim Radek As Long
  Dim Sloupec As String
  Sloupec = ""
  Radek = Target.Row
  If Worksheets(lID).Range("dtaUcet") Then   ' zvyraznit ucet
    Odemkni
    Range("A" & R1 & ":A" & Rn).Interior.ColorIndex = ibSeda
    If (Radek >= R1) And (Radek <= Rn) Then
      Range("A" & Radek).Interior.ColorIndex = ibVyrazna
    End If
    Zamkni
  End If
  If InRange(Target, Range("def1")) Then
    Sloupec = "D"
  ElseIf InRange(Target, Range("def2")) Then
    Sloupec = "H"
  ElseIf InRange(Target, Range("def3")) Then
    Sloupec = "M"
  Else
    Range("B3") = ""
    Exit Sub
  End If
  If (Range(Sloupec & Radek) = "0") Or (Range(Sloupec & Radek) = "") Then
    Range("B3") = Range("A" & Radek)
  Else
    Range("B3") = Range("A" & Radek) & "  " & _
                  Range(Sloupec & Radek) & " - " & _
                  NajdiOznaceni(Range(Sloupec & Radek))
  End If
End Sub
Attribute VB_Name = "List8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnPomoc, 1, 0, MSForms, CommandButton"
Private Sub btnPomoc_Click()
  HesloNapovedy = hnPriloha
  frmNapoveda.Show
End Sub
Attribute VB_Name = "List9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnTed, 13, 0, MSForms, CommandButton"
Attribute VB_Control = "OptionButton1, 19, 1, MSForms, OptionButton"
Attribute VB_Control = "OptionButton2, 20, 2, MSForms, OptionButton"
Private Sub btnTed_Click()
  Range("dtaOkamzik") = FormatDateTime(Now, vbGeneralDate)
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True






Attribute VB_Name = "frmDefinice"
Attribute VB_Base = "0{2C22BA71-D5ED-497A-B4F5-C662D6EE2AA4}{B9871582-43B6-43A6-A81F-66AF222B2D04}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Dim Radek As Long
Dim Sloupec As Long
Dim ZapisovatZnamenka As Boolean
Const sl1 = 2     ' zustatek 1. sloupec
Const sl2 = 6
Const sl3 = 10
Const slSkup = 16 ' sloupec skupin uctu

Function DalsiRadek(Krok As Integer) As Long
  Dim r As Long
  DalsiRadek = Radek
  r = Radek + Krok
  While Rows(r & ":" & r).EntireRow.Hidden And (r > R1) And (r < Rn)
    r = r + Krok
  Wend
  DalsiRadek = r
End Function

Private Sub Cisti()
  If Trim(txtOznac1.Text) = "" Then Cells(Radek, sl1 + 1) = ""
  If Trim(txtOznac2.Text) = "" Then Cells(Radek, sl2 + 1) = ""
  If Trim(txtOznac3.Text) = "" Then
    Cells(Radek, sl3 + 1) = ""
    Cells(Radek, sl3 + 2) = ""
  End If
  If Left(txtOznac3.Text, 1) = "p" Then
    Cells(Radek, sl3 + 1) = ""
  End If
End Sub

Private Sub NastavSeznam()
  Dim r As Long
  Dim Seznam() As String
  Dim sOznac() As String
  Dim sText() As String
  Dim Skupina As String
  Dim Prvni As String
  Dim Pocet As Integer
  Dim AktivniPasivni As String
  On Error Resume Next
  btnNahoru.Enabled = Radek <> R1
  btnDolu.Enabled = Radek <> Rn
  txtUcet.Text = Cells(Radek, 1)
  lblZustatek1.Caption = Cells(Radek, sl1)
  lblZustatek2.Caption = Cells(Radek, sl2)
  lblZustatek3.Caption = Cells(Radek, sl3)
  btnZnamenko1.Caption = DejZnamenko(Cells(Radek, sl1 + 1))
  btnZnamenko2.Caption = DejZnamenko(Cells(Radek, sl2 + 1))
  btnZnamenko3.Caption = DejZnamenko(Cells(Radek, sl3 + 2))
  ZapisovatZnamenka = False
  btnZnamenko1_Click
  btnZnamenko2_Click
  btnZnamenko3_Click
  ZapisovatZnamenka = True
  btnRok1.Caption = Range("dtaRok") - 2
  btnRok2.Caption = Range("dtaRok") - 1
  btnRok3.Caption = Range("dtaRok")
  AktivniPasivni = DejTypUctu(txtUcet.Text)
  btnSloupec.Caption = Cells(Radek, sl3 + 1)
  If (btnSloupec.Caption = "") And (AktivniPasivni = "a") Then
    btnSloupec.Caption = "B"   ' bruto nebo korekce
  End If
  Select Case btnSloupec.Caption
    Case "B": btnSloupec.ForeColor = &HFF0000
    Case "K": btnSloupec.ForeColor = &HFF&
  End Select
  Cells(Radek, sl3 + 1) = btnSloupec.Caption
  btnSloupec.Visible = AktivniPasivni = "a"
  If Cells(Radek, sl3 + 1) <> "" Then btnSloupec.Caption = Cells(Radek, sl3 + 1)
  txtOznac1.Text = Cells(Radek, sl1 + 2) & " " & NajdiOznaceni(Cells(Radek, sl1 + 2))
  txtOznac2.Text = Cells(Radek, sl2 + 2) & " " & NajdiOznaceni(Cells(Radek, sl2 + 2))
  txtOznac3.Text = Cells(Radek, sl3 + 3) & " " & NajdiOznaceni(Cells(Radek, sl3 + 3))
  Pocet = 0
  Prvni = ""
  ReDim sOznac(0 To Pocet)
  ReDim sText(0 To Pocet)
  Skupina = Left(Trim(txtUcet.Text), 2)
  r = R1
  While r <= Rn
    If InStr(1, Cells(r, slSkup), Skupina) > 0 Then
      ReDim Preserve sOznac(Pocet)
      ReDim Preserve sText(Pocet)
      sOznac(Pocet) = Cells(r, slSkup + 1)
      sText(Pocet) = Cells(r, slSkup + 2)
      If Prvni = "" Then
        Prvni = sOznac(Pocet)
      End If
      Pocet = Pocet + 1
    End If
    r = r + 1
  Wend
  ReDim Seznam(0 To Pocet - 1, 0 To 1)
  For r = 0 To Pocet - 1
    Seznam(r, 0) = sOznac(r)
    Seznam(r, 1) = sText(r)
  Next r
  lbOznac.List = Seznam
  lbOznac.Value = Prvni
End Sub

Private Sub btnDolu_Click()
  If Radek < Rn Then
    Cisti
    Radek = DalsiRadek(1)
    Cells(Radek, Sloupec).Select
    NastavSeznam
  End If
End Sub

Private Sub btnNahoru_Click()
  If Radek > R1 Then
    Cisti
    Radek = DalsiRadek(-1)
    Cells(Radek, Sloupec).Select
    NastavSeznam
  End If
End Sub

Private Sub btnPomoc_Click()
  HesloNapovedy = hnDefDialog
  frmNapoveda.Show
End Sub

Private Sub btnRok1_Click()
  txtOznac1.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  Cells(Radek, sl1 + 2) = lbOznac.Value
  If (Left(lbOznac.Value, 1) = "a") And (btnZnamenko1.Caption = "-") Then
    btnZnamenko1_Click
  End If
  If (Left(lbOznac.Value, 1) = "p") And (btnZnamenko1.Caption = "+") Then
    btnZnamenko1_Click
  End If
End Sub

Private Sub btnRok2_Click()
  txtOznac2.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  Cells(Radek, sl2 + 2) = lbOznac.Value
  If (Left(lbOznac.Value, 1) = "a") And (btnZnamenko2.Caption = "-") Then
    btnZnamenko2_Click
  End If
  If (Left(lbOznac.Value, 1) = "p") And (btnZnamenko2.Caption = "+") Then
    btnZnamenko2_Click
  End If
End Sub

Private Sub btnRok3_Click()
  txtOznac3.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  Cells(Radek, sl3 + 3) = lbOznac.Value
  If (Left(lbOznac.Value, 1) = "a") And (btnZnamenko3.Caption = "-") Then
    btnZnamenko3_Click
  End If
  If (Left(lbOznac.Value, 1) = "p") And (btnZnamenko3.Caption = "+") Then
    btnZnamenko3_Click
  End If
End Sub

Private Sub btnVse_Click()
  btnRok1_Click
  btnRok2_Click
  btnRok3_Click
End Sub

Private Sub btnSloupec_Click()
  With btnSloupec
    If .Caption = "V" Then Exit Sub
    If .Caption = "B" Then
      .Caption = "K"
      .ForeColor = bCervena
    Else
      .Caption = "B"
      .ForeColor = bModra
    End If
    Cells(Radek, sl3 + 1) = .Caption
  End With
End Sub

Private Sub btnSmaz1_Click()
  txtOznac1.Text = ""
  Cells(Radek, sl1 + 2) = ""
  Cells(Radek, sl1 + 1) = ""
End Sub

Private Sub btnSmaz2_Click()
  txtOznac2.Text = ""
  Cells(Radek, sl2 + 2) = ""
  Cells(Radek, sl2 + 1) = ""
End Sub

Private Sub btnSmaz3_Click()
  txtOznac3.Text = ""
  Cells(Radek, sl3 + 3) = ""
  Cells(Radek, sl3 + 2) = ""
End Sub

Private Sub btnSmazVse_Click()
  btnSmaz1_Click
  btnSmaz2_Click
  btnSmaz3_Click
End Sub

Private Sub btnStorno_Click()
  Unload frmDefinice
End Sub

Private Sub btnZnamenko1_Click()
  With btnZnamenko1
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl1 + 1) = .Caption
    End If
  End With
End Sub

Private Sub btnZnamenko2_Click()
  With btnZnamenko2
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl2 + 1) = .Caption
    End If
  End With
End Sub

Private Sub btnZnamenko3_Click()
  With btnZnamenko3
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl3 + 2) = .Caption
    End If
  End With
End Sub

Private Sub UserForm_Initialize()
  Dim Cislo As Integer
  ZapisovatZnamenka = True
  Radek = ActiveCell.Row
  Sloupec = ActiveCell.Column
  NastavSeznam
  frmDefinice.Caption = "  Definice v|fffd|po|fffd|t|fffd|"
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
  Cisti
End Sub
Attribute VB_Name = "frmExportPrilohy"
Attribute VB_Base = "0{BAF708BD-FC59-4AF1-A6CE-A55F00D1905A}{DC0979FC-9F06-47B5-B3DB-681C837F2C19}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnOK_Click()
  frmExportPrilohy.Hide
  ExportPrilohy
  Unload Me
End Sub

Private Sub btnStorno_Click()
  Unload Me
End Sub
Attribute VB_Name = "frmExportXML"
Attribute VB_Base = "0{648B0796-CC8C-4680-B43E-FDDD61FA37E9}{7BD2120B-2247-4A9C-ADDA-C393C6C1CAEE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub btnOK_Click()
  frmExportXML.Hide
  If rbKomplet Then
    ExportVykazy = "K"
  ElseIf rbRozvaha Then
    ExportVykazy = "R"
  ElseIf rbVysledovka Then
    ExportVykazy = "V"
  End If
  If rbSamostatny Then
    ExportXML
  Else
    ExportXML_Slouceni
  End If
  Unload Me
End Sub

Private Sub btnStorno_Click()
  Unload Me
End Sub

Private Sub lblDanovePriznani_Click()
  ActiveWorkbook.FollowHyperlink _
      Address:="http://www.approcz.cz/produkty.html", _
      NewWindow:=True, AddHistory:=True
  Application.WindowState = xlNormal
End Sub

Private Sub DanovyPortal_Click()
  ActiveWorkbook.FollowHyperlink _
      Address:="https://adisepo.mfcr.cz/adistc/adis/idpr_epo/epo2/uvod/nacteni_souboru.faces", _
      NewWindow:=True, AddHistory:=True
  Application.WindowState = xlNormal
End Sub

Attribute VB_Name = "frmGraf"
Attribute VB_Base = "0{378A3018-BB2B-46A1-945A-3981595EABED}{9429D613-85F5-476B-8046-6C58F938CF65}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btnStorno_Click()
  Unload Me
End Sub

Private Sub UserForm_Initialize()
  Dim JmenoSouboru As String
  On Error Resume Next
'  zobrazit graf
  JmenoSouboru = ThisWorkbook.Path & Application.PathSeparator & SouborGrafu
  Image1.Picture = LoadPicture(JmenoSouboru)
  Application.ScreenUpdating = True
  Kill JmenoSouboru
End Sub

Attribute VB_Name = "frmHlaska"
Attribute VB_Base = "0{EA0A7EDA-83C7-46DF-881A-A367EE2866B1}{02399E21-DE1E-4856-BA74-2F3FAB18A96F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnStorno_Click()
  Unload Me
End Sub

Private Sub lblPortal_Click()
  ActiveWorkbook.FollowHyperlink _
      Address:="https://adisepo.mfcr.cz/adistc/adis/idpr_pub/dpr/uvod.faces", _
      NewWindow:=True, AddHistory:=True
  Application.WindowState = xlNormal
  Unload Me
End Sub

Attribute VB_Name = "frmImport"
Attribute VB_Base = "0{79D036ED-D885-4985-ADB5-E4A468902562}{2F495FC1-9DF2-4A1A-A123-6C9D27696338}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub btnNacistUcto_Click()
  Dim TypDat As String
  TypDat = cbTypDat.Value
  Unload frmImport
  If TypDat = Range("dtaImportCSV") Then
    frmImport_CSV.Show
  ElseIf TypDat = Range("dtaImportOZO") Then
    frmImport_OZO.Show
  ElseIf TypDat = Range("dtaImportHeliosRed") Then
    frmImport_Helios.Show
  End If
End Sub

Private Sub btnNacistFinex_Click()
  frmImport.Hide
  Range("dtaDefinice") = chbDefinice.Value
  Range("dtaKorekce") = chbKorekce.Value
  Import_Finex_XLS      ' z excelu FINEX
  Unload frmImport
End Sub

Private Sub btnStorno_Click()
  Unload frmImport
End Sub

Private Sub UserForm_Initialize()
  chbDefinice.Value = Range("dtaDefinice")
  chbKorekce.Value = Range("dtaKorekce")
End Sub
Attribute VB_Name = "frmImport_CSV"
Attribute VB_Base = "0{6FB9BAD1-586C-4EAF-8225-4F263C7ABBBC}{F295A302-9CE7-46A9-9672-E7486C1E5890}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnOK_Click()
  frmImport_CSV.Hide
  Unload frmImport_CSV
  Import_CSV
End Sub

Private Sub btnStorno_Click()
  Unload frmImport_CSV
End Sub

Private Sub btnStruCSV_Click()
  frmStrukturaCSV.Show
End Sub

Attribute VB_Name = "frmImport_Helios"
Attribute VB_Base = "0{0345F04D-958C-4381-91EB-A8E398C00503}{B5AF508A-9DFD-47B6-AD28-E5090CC232DA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnOK_Click()
  Unload frmImport_Helios
  Import_Helios
End Sub

Private Sub btnStorno_Click()
  Unload frmImport_Helios
End Sub

Attribute VB_Name = "frmImport_OZO"
Attribute VB_Base = "0{4B9FF504-3F3B-450E-A2CB-510D9D942E51}{1316909E-A9D5-41C6-BF7E-58552843FFBD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnOK_Click()
  Unload frmImport_OZO
  Import_OZO
End Sub

Private Sub btnStorno_Click()
  Unload frmImport_OZO
End Sub

Attribute VB_Name = "frmKorekce"
Attribute VB_Base = "0{23DF1E24-504B-4A37-BD6D-0A1ED29C4A75}{14C4AD99-FAC5-4CBF-8612-95D576A8C50E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Dim Radek As Long
Dim Sloupec As Long
Dim ZapisovatZnamenka As Boolean
Dim NutnoTridit As Boolean
Const sl1 = 3     ' zustatek 1. sloupec
Const sl2 = 10
Const sl3 = 17
Const slSkup = 16 ' sloupec skupin uctu v definici

Private Sub Formatovani()
  txtZustatek1.Text = Format(txtZustatek1.Text, "### ### ##0.00")
  txtZustatek2.Text = Format(txtZustatek2.Text, "### ### ##0.00")
  txtZustatek3.Text = Format(txtZustatek3.Text, "### ### ##0.00")
End Sub

Function DalsiRadek(Krok As Integer) As Long
  Dim r As Long
  DalsiRadek = Radek
  r = Radek + Krok
  While Rows(r & ":" & r).EntireRow.Hidden And (r > R1) And (r < Rn)
    r = r + Krok
  Wend
  DalsiRadek = r
End Function

Private Sub NastavSeznam()
  Dim r As Long
  Dim Seznam() As String
  Dim sOznac() As String
  Dim sText() As String
  Dim Skupina As String
  Dim Prvni As String
  Dim Pocet As Integer
  Dim AktivniPasivni As String
  On Error Resume Next
  btnNahoru.Enabled = Radek <> R1
  btnDolu.Enabled = Radek <> Rn
  If btnDolu.Enabled Then btnDolu.Enabled = Cells(Radek + 1, 1) <> ""
  btnSmazat.Enabled = Radek > R1 + 1
  If btnSmazat.Enabled Then btnSmazat.Enabled = Cells(Radek, 1) <> ""
  txtUcet.Text = Cells(Radek, 1)
  txtZustatek1.Text = Cells(Radek, sl1 - 1)
  txtZustatek2.Text = Cells(Radek, sl2 - 1)
  txtZustatek3.Text = Cells(Radek, sl3 - 1)
  Formatovani
  btnZnamenko1P.Caption = DejZnamenko(Cells(Radek, sl1 + 1))
  btnZnamenko1M.Caption = DejZnamenko(Cells(Radek, sl1 + 3))
  btnZnamenko2P.Caption = DejZnamenko(Cells(Radek, sl2 + 1))
  btnZnamenko2M.Caption = DejZnamenko(Cells(Radek, sl2 + 3))
  btnZnamenko3P.Caption = DejZnamenko(Cells(Radek, sl3 + 2))
  btnZnamenko3M.Caption = DejZnamenko(Cells(Radek, sl3 + 4))
  ZapisovatZnamenka = False
  btnZnamenko1P_Click
  btnZnamenko1M_Click
  btnZnamenko2P_Click
  btnZnamenko2M_Click
  btnZnamenko3P_Click
  btnZnamenko3M_Click
  ZapisovatZnamenka = True
  lblRok1.Caption = Range("dtaRok") - 2
  lblRok2.Caption = Range("dtaRok") - 1
  lblRok3.Caption = Range("dtaRok")
  txtOznac1P.Text = Cells(Radek, sl1 + 2) & " " & NajdiOznaceni(Cells(Radek, sl1 + 2))
  txtOznac1M.Text = Cells(Radek, sl1 + 4) & " " & NajdiOznaceni(Cells(Radek, sl1 + 4))
  txtOznac2P.Text = Cells(Radek, sl2 + 2) & " " & NajdiOznaceni(Cells(Radek, sl2 + 2))
  txtOznac2M.Text = Cells(Radek, sl2 + 4) & " " & NajdiOznaceni(Cells(Radek, sl2 + 4))
  txtOznac3P.Text = Cells(Radek, sl3 + 3) & " " & NajdiOznaceni(Cells(Radek, sl3 + 3))
  txtOznac3M.Text = Cells(Radek, sl3 + 5) & " " & NajdiOznaceni(Cells(Radek, sl3 + 5))
  If (Trim(txtOznac1P.Text) = "") And (Trim(txtOznac1M.Text) = "") Then btnZnamenko1M_Click
  If (Trim(txtOznac2P.Text) = "") And (Trim(txtOznac2M.Text) = "") Then btnZnamenko2M_Click
  If (Trim(txtOznac3P.Text) = "") And (Trim(txtOznac3M.Text) = "") Then btnZnamenko3M_Click
  If (Trim(txtOznac1M.Text) = "") Or (Trim(txtOznac2M.Text) = "") Or (Trim(txtOznac3M.Text) = "") Then
    NaplnOznaceni txtUcet.Text
  End If
  AktivniPasivni = DejTypUctu(txtUcet.Text)
  btnSloupec.Caption = Cells(Radek, sl3 + 1)
  If (btnSloupec.Caption = "") And (AktivniPasivni = "a") Then
    btnSloupec.Caption = "B"   ' bruto nebo korekce
  End If
  Select Case btnSloupec.Caption
    Case "B": btnSloupec.ForeColor = &HFF0000
    Case "K": btnSloupec.ForeColor = &HFF&
  End Select
  Cells(Radek, sl3 + 1) = btnSloupec.Caption
  btnSloupec.Visible = AktivniPasivni = "a"
  Pocet = 0
  Prvni = ""
  ReDim sOznac(0 To Pocet)
  ReDim sText(0 To Pocet)
  Skupina = Left(Trim(Cells(Radek, 1)), 2)
  r = R1
  While r <= Rn
    If InStr(1, Worksheets("Definice").Cells(r, slSkup), Skupina) > 0 Then
      ReDim Preserve sOznac(Pocet)
      ReDim Preserve sText(Pocet)
      sOznac(Pocet) = Worksheets("Definice").Cells(r, slSkup + 1)
      sText(Pocet) = Worksheets("Definice").Cells(r, slSkup + 2)
      If Prvni = "" Then
        Prvni = sOznac(Pocet)
      End If
        Pocet = Pocet + 1
      End If
    r = r + 1
  Wend
  ReDim Seznam(0 To Pocet - 1, 0 To 1)
  For r = 0 To Pocet - 1
    Seznam(r, 0) = sOznac(r)
    Seznam(r, 1) = sText(r)
  Next r
  lbOznac.List = Seznam
  lbOznac.Value = Prvni
End Sub

Private Sub NaplnOznaceni(Ucet As String)
  Dim Ozn1 As String
  Dim Ozn2 As String
  Dim Ozn3 As String
  DejOznaceniPredvahy Ucet, Ozn1, Ozn2, Ozn3
  If Trim(txtOznac1M.Text) = "" Then
    txtOznac1M.Text = Ozn1 & " " & NajdiOznaceni(Ozn1)
    ZapisOznaceni sl1 + 4, Ozn1
  End If
  If Trim(txtOznac2M.Text) = "" Then
    txtOznac2M.Text = Ozn2 & " " & NajdiOznaceni(Ozn2)
    ZapisOznaceni sl2 + 4, Ozn2
  End If
  If Trim(txtOznac3M.Text) = "" Then
    txtOznac3M.Text = Ozn3 & " " & NajdiOznaceni(Ozn3)
    ZapisOznaceni sl3 + 5, Ozn3
  End If
End Sub

Private Sub DejOznaceniPredvahy(Ucet As String, Ozn1 As String, Ozn2 As String, Ozn3 As String)
  Dim Bunka As Range
  On Error GoTo Chyba
  Ozn1 = ""
  Ozn2 = ""
  Ozn3 = ""
  With Worksheets("Definice").Range("A" & R1 & ":A" & Rn + 1)
    Set Bunka = .Find(Ucet, lookin:=xlValues, MatchCase:=True)
    If Not Bunka Is Nothing Then
      Ozn1 = Bunka.Offset(0, 3)
      Ozn2 = Bunka.Offset(0, 7)
      Ozn3 = Bunka.Offset(0, 12)
    End If
  End With
Chyba:
End Sub

Private Sub Cisti()
  If Trim(txtOznac1P.Text) = "" Then
    Cells(Radek, sl1 + 1) = ""
    Cells(Radek, sl1 + 3) = ""
  End If
  If Trim(txtOznac2P.Text) = "" Then
    Cells(Radek, sl2 + 1) = ""
    Cells(Radek, sl2 + 3) = ""
  End If
  If Trim(txtOznac3P.Text) = "" Then
    Cells(Radek, sl3 + 1) = ""
    Cells(Radek, sl3 + 2) = ""
    Cells(Radek, sl3 + 4) = ""
  End If
  If (Left(txtOznac3P.Text, 1) = "p") And (Left(txtOznac3M.Text, 1) = "p") Then
    Cells(Radek, sl3 + 1) = ""
  End If
End Sub

Private Sub btnDolu_Click()
  If Radek < Rn Then
    If Kontrola Then
      Cisti
      Radek = DalsiRadek(1)
      Cells(Radek, Sloupec).Select
      NastavSeznam
    End If
  End If
End Sub

Private Sub btnNahoru_Click()
  If Radek > R1 Then
    If Kontrola Then
      Cisti
      Radek = DalsiRadek(-1)
      Cells(Radek, Sloupec).Select
      NastavSeznam
    End If
  End If
End Sub

Private Sub ZapisOznaceni(Sloupec As Integer, Hodnota As String)
  Cells(Radek, Sloupec) = Hodnota
End Sub

Private Sub btnNovy_Click()
  Dim r As Long
  Dim Odpoved As Integer
  Dim Ozn1 As String
  Dim Ozn2 As String
  Dim Ozn3 As String
  ZadanyUcet = ""
  frmUcet.Show
  If ZadanyUcet = "" Then Exit Sub
  If Not UcetExistuje(ZadanyUcet) Then
    Odpoved = MsgBox("Nepovolen|fffd| |fffd||fffd|et.", vbOKOnly + vbCritical, "Chyba")
    Exit Sub
  End If
  DejOznaceniPredvahy ZadanyUcet, Ozn1, Ozn2, Ozn3
  If (Trim(Ozn1) = "") And (Trim(Ozn2) = "") And (Trim(Ozn3) = "") Then
    Odpoved = MsgBox("|fffd||fffd|et mus|fffd| b|fffd|t pou|fffd|it v defini|fffd|n|fffd| tabulce.", vbOKOnly + vbCritical, "Chyba")
    Exit Sub
  End If
  Application.ScreenUpdating = False
  r = Range("A" & R1).End(xlDown).Row + 1
  Range(Cells(r - 1, 1), Cells(r - 1, 31)).Copy Range("A" & r)
  Application.CutCopyMode = False
  Cells(r, 1) = ZadanyUcet
  Cells(r, 2).ClearContents  '
  Cells(r, 4).ClearContents
  Cells(r, 5).ClearContents
  Cells(r, 6).ClearContents
  Cells(r, 7).ClearContents
  Cells(r, 9).ClearContents  '
  Cells(r, 11).ClearContents
  Cells(r, 12).ClearContents
  Cells(r, 13).ClearContents
  Cells(r, 14).ClearContents
  Cells(r, 16).ClearContents  '
  Cells(r, 18).ClearContents
  Cells(r, 19).ClearContents
  Cells(r, 20).ClearContents
  Cells(r, 21).ClearContents
  Cells(r, 22).ClearContents
  Cells(Radek, Sloupec).Select
  Radek = r
  NastavSeznam
  NutnoTridit = True
  Application.ScreenUpdating = True
End Sub

Private Sub btnPomoc_Click()
  HesloNapovedy = hnKorDialog
  frmNapoveda.Show
End Sub

Private Sub btnRok1P_Click()
  txtOznac1P.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  ZapisOznaceni sl1 + 2, lbOznac.Value
End Sub

Private Sub btnRok1M_Click()
  txtOznac1M.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  ZapisOznaceni sl1 + 4, lbOznac.Value
End Sub

Private Sub btnRok2P_Click()
  txtOznac2P.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  ZapisOznaceni sl2 + 2, lbOznac.Value
End Sub

Private Sub btnRok2M_Click()
  txtOznac2M.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  ZapisOznaceni sl2 + 4, lbOznac.Value
End Sub

Private Sub btnRok3P_Click()
  txtOznac3P.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  ZapisOznaceni sl3 + 3, lbOznac.Value
End Sub

Private Sub btnRok3M_Click()
  txtOznac3M.Text = lbOznac.Value & " " & NajdiOznaceni(lbOznac.Value)
  ZapisOznaceni sl3 + 5, lbOznac.Value
End Sub

Private Sub btnUcet_Click()
  Dim Skup As String
  Dim DolniMez As String, HorniMez As String
  Dim Odpoved As Integer
  ZadanyUcet = txtUcet.Text
  frmUcet.Show
  If ZadanyUcet = "" Then Exit Sub
  Skup = Left(txtUcet.Text, 2)
  DolniMez = Skup & "0"
  HorniMez = Skup & "9"
  If (ZadanyUcet < DolniMez) Or (ZadanyUcet > HorniMez) Then
    Odpoved = MsgBox("Nov|fffd| |fffd||fffd|et mus|fffd| b|fffd|t mezi " & DolniMez & " a " & HorniMez, _
              vbOKOnly + vbCritical, "Chyba")
    Exit Sub
  End If
  txtUcet.Text = ZadanyUcet
  Cells(Radek, 1) = ZadanyUcet
End Sub

Private Sub btnVseP_Click()
  btnRok1P_Click
  btnRok2P_Click
  btnRok3P_Click
End Sub

Private Sub btnVseM_Click()
  btnRok1M_Click
  btnRok2M_Click
  btnRok3M_Click
End Sub

Private Sub btnSmazat_Click()
  If MsgBox("Opravdu smazat |fffd||fffd|et " & Cells(Radek, 1) & "?", vbYesNo + vbCritical, "Maz|fffd|n|fffd|") = vbYes Then
    Rows(Radek & ":" & Radek).Delete Shift:=xlUp
    While Cells(Radek, 1) = ""
      Radek = Radek - 1
    Wend
    Cells(Radek, Sloupec).Select
    NastavSeznam
    NutnoTridit = True
  End If
End Sub

Private Sub btnSmaz1_Click()
  txtOznac1P.Text = ""
  ZapisOznaceni sl1 + 2, ""
  txtOznac1M.Text = ""
  ZapisOznaceni sl1 + 4, ""
End Sub

Private Sub btnSmaz2_Click()
  txtOznac2P.Text = ""
  ZapisOznaceni sl2 + 2, ""
  txtOznac2M.Text = ""
  ZapisOznaceni sl2 + 4, ""
End Sub

Private Sub btnSmaz3_Click()
  txtOznac3P.Text = ""
  ZapisOznaceni sl3 + 3, ""
  txtOznac3M.Text = ""
  ZapisOznaceni sl3 + 5, ""
End Sub

Private Sub btnSmazVse_Click()
  btnSmaz1_Click
  btnSmaz2_Click
  btnSmaz3_Click
End Sub

Private Sub btnSloupec_Click()
  With btnSloupec
    If .Caption = "V" Then Exit Sub
    If .Caption = "B" Then
      .Caption = "K"
      .ForeColor = &HFF&
    Else
      .Caption = "B"
      .ForeColor = &HFF0000
    End If
    Cells(Radek, sl3 + 1) = .Caption
  End With
End Sub

Private Sub btnStorno_Click()
  Unload frmKorekce
End Sub

Private Sub btnZnamenko1P_Click()
  With btnZnamenko1P
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl1 + 1) = .Caption
    End If
  End With
End Sub

Private Sub btnZnamenko1M_Click()
  With btnZnamenko1M
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl1 + 3) = .Caption
    End If
  End With
End Sub

Private Sub btnZnamenko2P_Click()
  With btnZnamenko2P
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl2 + 1) = .Caption
    End If
  End With
End Sub

Private Sub btnZnamenko2M_Click()
  With btnZnamenko2M
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl2 + 3) = .Caption
    End If
  End With
End Sub

Private Sub btnZnamenko3P_Click()
  With btnZnamenko3P
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl3 + 2) = .Caption
    End If
  End With
End Sub

Private Sub btnZnamenko3M_Click()
  With btnZnamenko3M
    If .Caption = "+" Then
      .Caption = "-"
      .ForeColor = bCervena
      .BackColor = bZluta
    Else
      .Caption = "+"
      .ForeColor = bModra
      .BackColor = bSeda
    End If
    If ZapisovatZnamenka Then
      Cells(Radek, sl3 + 4) = .Caption
    End If
  End With
End Sub

Private Sub txtZustatek1_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  Cells(Radek, sl1 - 1) = Val(txtZustatek1.Text)
  Formatovani
End Sub

Private Sub txtZustatek2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  Cells(Radek, sl2 - 1) = Val(txtZustatek2.Text)
  Formatovani
End Sub

Private Sub txtZustatek3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
  Cells(Radek, sl3 - 1) = Val(txtZustatek3.Text)
  Formatovani
End Sub

Private Sub UserForm_Initialize()
  Dim Cislo As Integer
  NutnoTridit = True
  Radek = ActiveCell.Row
  Sloupec = ActiveCell.Column
  NastavSeznam
End Sub

Function KontrolaZnamenek(VykP As String, VykM As String, _
                          ZnP As String, ZnM As String) As Boolean
  If (VykP = "") And (VykM = "") Then
    KontrolaZnamenek = True
    Exit Function
  End If
  KontrolaZnamenek = (VykP = VykM) And (ZnP <> ZnM) Or _
                     (VykP <> VykM) And (ZnP = ZnM)
End Function

Function Kontrola() As Boolean
  Dim Odpoved As Integer
  Dim Spravne As Boolean
  Dim Rok As String
' 1. rok
  Rok = "Rok: " & Range("dtaRok") - 2
  Spravne = ((Trim(txtOznac1P.Value) = "") And (Trim(txtOznac1M.Value) = "") Or _
            (Trim(txtOznac1P.Value) <> "") And (Trim(txtOznac1M.Value) <> ""))
  If Not Spravne Then GoTo Chyba1
    Spravne = KontrolaZnamenek(Left(Trim(txtOznac1P.Value), 1), _
                               Left(Trim(txtOznac1M.Value), 1), _
                               btnZnamenko1P.Caption, _
                               btnZnamenko1M.Caption)
  If Not Spravne Then GoTo Chyba2
' 2. rok
  Rok = "Rok: " & Range("dtaRok") - 1
  Spravne = ((Trim(txtOznac2P.Value) = "") And (Trim(txtOznac2M.Value) = "") Or _
            (Trim(txtOznac2P.Value) <> "") And (Trim(txtOznac2M.Value) <> ""))
  If Not Spravne Then GoTo Chyba1
  Spravne = KontrolaZnamenek(Left(Trim(txtOznac2P.Value), 1), _
                             Left(Trim(txtOznac2M.Value), 1), _
                             btnZnamenko2P.Caption, _
                             btnZnamenko2M.Caption)
  If Not Spravne Then GoTo Chyba2
' 3. rok
  Rok = "Rok: " & Range("dtaRok")
  Spravne = ((Trim(txtOznac3P.Value) = "") And (Trim(txtOznac3M.Value) = "") Or _
            (Trim(txtOznac3P.Value) <> "") And (Trim(txtOznac3M.Value) <> ""))
  If Not Spravne Then GoTo Chyba1
  Spravne = KontrolaZnamenek(Left(Trim(txtOznac3P.Value), 1), _
                             Left(Trim(txtOznac3M.Value), 1), _
                             btnZnamenko3P.Caption, _
                             btnZnamenko3M.Caption)
  If Not Spravne Then GoTo Chyba2
   
  Kontrola = True
  Exit Function
Chyba1:
  Kontrola = Spravne
  Odpoved = MsgBox(Rok & vbCr & vbLf & vbCr & vbLf _
            & "Z|fffd|statky korek|fffd|n|fffd| tabulky mus|fffd| b|fffd|t" & vbCr & vbLf _
            & "pou|fffd||fffd|ty na DVOU |fffd||fffd|dc|fffd|ch v|fffd|kazu tak," & vbCr & vbLf _
            & "aby jejich vz|fffd|jemn|fffd| sou|fffd|et z|fffd|stal nulov|fffd|.", vbOKOnly + vbCritical, "Chyba")
  Exit Function
Chyba2:
  Kontrola = Spravne
  Odpoved = MsgBox(Rok & vbCr & vbLf & vbCr & vbLf _
            & "Z|fffd|statky korek|fffd|n|fffd| tabulky mus|fffd| b|fffd|t" & vbCr & vbLf _
            & "pou|fffd||fffd|ty na dvou |fffd||fffd|dc|fffd|ch v|fffd|kazu tak," & vbCr & vbLf _
            & "aby jejich vz|fffd|jemn|fffd| sou|fffd|et z|fffd|stal nulov|fffd|." & vbCr & vbLf & vbCr & vbLf _
            & "P|fffd|i pou|fffd|it|fffd| nap|fffd|. 'aktiva'-'aktiva' mus|fffd| b|fffd|t" & vbCr & vbLf _
            & "znam|fffd|nka opa|fffd|n|fffd|." & vbCr & vbLf & vbCr & vbLf _
            & "P|fffd|i pou|fffd|it|fffd| nap|fffd|. 'aktiva'-'pasiva' mus|fffd| b|fffd|t" & vbCr & vbLf _
            & "znam|fffd|nka stejn|fffd|.", vbOKOnly + vbCritical, "Chyba")
  Exit Function
End Function

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
  Dim Spravne As Boolean
  Spravne = Kontrola
  If Not Spravne Then
    Cancel = True
    Exit Sub
  End If
  Cisti
  If NutnoTridit Then
    Setrideni
  End If
  Cells(Radek, Sloupec).Select
End Sub
Attribute VB_Name = "frmNapoveda"
Attribute VB_Base = "0{7BF7490C-F309-41D8-A1EF-91E788DF217E}{77901E93-A70A-4209-99F4-BAD83C4478B4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim PocetHesel As Integer
Dim AktHeslo As Integer
Dim ListNapovedy As Worksheet

Private Sub UserForm_Initialize()
  Dim Row As Integer
  Set ListNapovedy = ThisWorkbook.Sheets("Napoveda")
  PocetHesel = Application.WorksheetFunction.CountA(ListNapovedy.Range("A:A"))
  For Row = 1 To PocetHesel
    cbHesla.AddItem ListNapovedy.Cells(Row, 1)
  Next Row
  cbHesla.ListIndex = HesloNapovedy - 1
  If HesloNapovedy = 0 Then
    HesloNapovedy = 1
  End If
  AktHeslo = HesloNapovedy
  UpdateForm
End Sub

Private Sub UpdateForm()
  cbHesla.ListIndex = AktHeslo - 1
  frmNapoveda.Caption = "N|fffd|pov|fffd|da  (" & AktHeslo & " / " & PocetHesel & ")"
    
  With lblText
    .Caption = ListNapovedy.Cells(AktHeslo, 2)
    .AutoSize = False
    .Width = 250
    .AutoSize = True
  End With
  With Frame1
    .ScrollHeight = lblText.Height + 5
    .ScrollTop = 1
  End With
       
  On Error Resume Next
  If AktHeslo = 1 Then btnZpet.Enabled = False _
    Else btnZpet.Enabled = True
  If AktHeslo = PocetHesel Then btnDalsi.Enabled = False _
    Else btnDalsi.Enabled = True
  If btnDalsi.Enabled Then btnDalsi.SetFocus _
    Else btnZpet.SetFocus
End Sub

Private Sub cbHesla_Click()
  AktHeslo = cbHesla.ListIndex + 1
  UpdateForm
End Sub

Private Sub btnZpet_Click()
  If AktHeslo <> 1 Then
    AktHeslo = AktHeslo - 1
    UpdateForm
  End If
End Sub

Private Sub btnDalsi_Click()
  If AktHeslo <> PocetHesel Then
    AktHeslo = AktHeslo + 1
    UpdateForm
  End If
End Sub

Private Sub btnStorno_Click()
  Unload frmNapoveda
End Sub

Attribute VB_Name = "frmStrukturaCSV"
Attribute VB_Base = "0{370FB650-AF9D-47F9-B06E-3EBA9D894975}{1ACC19E1-2C99-411D-B5FA-F267D6B25121}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btnStruStorno_Click()
  Unload frmStrukturaCSV
End Sub
Attribute VB_Name = "frmTaxEdit"
Attribute VB_Base = "0{C07C9F97-72B4-4983-A546-BB9C31D80D56}{1D55D664-91EA-43E6-8065-E3C7EC08A263}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btnOK_Click()
  Range("dtaTaxRozv") = chbRozvaha.Value
  Range("dtaTaxVysl") = chbVysledovka.Value
'  Range("dtaTaxCash") = chbCashFlow.Value
  Range("dtaTaxKapit") = chbKapital.Value
  cbRozvaha = chbRozvaha.Value
  cbVysledovka = chbVysledovka.Value
'  cbCashFlow = chbCashFlow.Value
  cbKapital = chbKapital.Value
  ZapisTaxEdit
  Unload frmTaxEdit
End Sub

Private Sub btnStorno_Click()
  Unload frmTaxEdit
End Sub

Private Sub UserForm_Initialize()
  chbRozvaha.Value = Range("dtaTaxRozv")
  chbVysledovka.Value = Range("dtaTaxVysl")
'  chbCashFlow.Value = Range("dtaTaxCash")
  chbKapital.Value = Range("dtaTaxKapit")
End Sub
Attribute VB_Name = "frmTeplomer"
Attribute VB_Base = "0{0E5B34CB-1797-47B3-80D0-DD9BA7249DBF}{BE2C2AFF-44AA-487C-B22A-39DF9CB3AAFC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Activate()
  Select Case Teplomer
  Case "Import_Finex_XLS": Call TeploImport_Finex_XLS
  Case "Import_CSV": Call TeploImport_CSV
  Case "NoveObdobi": Call TeploNoveObdobi
  End Select
End Sub

Attribute VB_Name = "frmTisk"
Attribute VB_Base = "0{CAC5C870-6E28-46B3-BFCE-E6A770C27132}{7579A36B-C002-4580-A6A0-4C1083710BFD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Const Netisknout = "Hlavn|fffd| menu;ID;X;V|fffd|stn|fffd|k;Napoveda;Importy;AVstup;"

Private Sub NaplnListy()
  Dim List As Worksheet
  Dim TisknoutListy As String
  Dim JmenoListu As String
  Dim Radek As Integer
  TisknoutListy = Range("TisknoutListy")
  For Each List In Worksheets
    JmenoListu = List.Name
    If (InStr(1, Netisknout, JmenoListu & ";") = 0) Then
      Radek = lbListy.ListCount
      lbListy.AddItem (JmenoListu)
      If (InStr(1, TisknoutListy, JmenoListu & ";") <> 0) Then
        lbListy.Selected(Radek) = True
      End If
    End If
  Next
End Sub

Private Sub btnBudiz_Click()
  Dim JmenoListu As String
  Dim aList As String
  Dim TisknoutListy As String
  Dim List As Worksheet
  Application.ScreenUpdating = False
' ulozeni listu pro priste
  TisknoutListy = ""
  aList = ""
  For i = 0 To lbListy.ListCount - 1
    If lbListy.Selected(i) Then
      aList = lbListy.List(i)
      TisknoutListy = TisknoutListy & aList & ";"
    End If
  Next i
  Range("TisknoutListy") = TisknoutListy
  If aList <> "" Then
    Sheets(aList).Select ' aby se vybral jeden z tisknutych, jinak tiskne i hlavni menu
  End If
' ukonceni okna
  Unload frmTisk
' vyber listu k tisku
  On Error Resume Next
  For Each List In ActiveWorkbook.Sheets
    JmenoListu = List.Name
    If (InStr(1, TisknoutListy, JmenoListu & ";") <> 0) Then ' list vybran rucne
      List.Select False
    End If
  Next List
' vlastni tisk
  ActiveWindow.SelectedSheets.PrintPreview
  Sheets("Hlavn|fffd| menu").Select
End Sub

Private Sub Vyber(Stav As Boolean)
  Dim Radek As Integer
  For Radek = 0 To lbListy.ListCount - 1
    lbListy.Selected(Radek) = Stav
  Next Radek
End Sub

Private Sub btnNic_Click()
  Vyber (False)
End Sub

Private Sub btnVse_Click()
  Vyber (True)
End Sub

Private Sub btnStorno_Click()
  Unload frmTisk
End Sub

Private Sub UserForm_Initialize()
  AktList = ActiveSheet.Name
  NaplnListy
End Sub
Attribute VB_Name = "frmUcet"
Attribute VB_Base = "0{5B9649D8-42A2-427B-B7CF-BD5AC2F5EBCD}{1F799169-7B29-46B5-979B-7F55A34C5B00}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btnOK_Click()
  ZadanyUcet = txtUcet.Text
  Unload frmUcet
End Sub

Private Sub btnStorno_Click()
  ZadanyUcet = ""
  Unload frmUcet
End Sub

Private Sub UserForm_Initialize()
  txtUcet.Text = ZadanyUcet
End Sub
Attribute VB_Name = "frmVypocetUkazatele"
Attribute VB_Base = "0{256328FA-C8BD-487E-A1A8-5D6562157304}{BE34BFFD-78E5-4D74-A33E-8E72E792B5FD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim MujSeznam() As TSeznam
Dim PocetPolozek As Integer
Dim PocetNenulovych As Integer

' v hornim panelu je skryte tlacitko Storno, pak funguje ESC

Private Sub NactiPredvahu()
  Dim slHledani As Integer      ' sloupec hledani
  Dim slUcet As Integer         ' sloupec uctu
  Dim slZnamenko As Integer     ' sloupec znamenka v definici
  Dim slHodnota As Integer      ' sloupec hodnoty
  Dim HledanaHodnota As String  ' hledany kod radku
  Dim Pre As Worksheet
  Dim Def As Worksheet
  Dim Radek As Long
  Set Pre = Worksheets("P|fffd|edvaha")
  Set Def = Worksheets("Definice")
  slUcet = 1
  HledanaHodnota = KodRadku
  Select Case uObdobi
    Case "P"    ' predminule obdobi
      slZnamenko = 3
      slHodnota = 14
      slHledani = 15
    Case "M"    ' minule obdobi
      slZnamenko = 7
      slHodnota = 17
      slHledani = 18
    Case "B"    ' bezne obdobi
      slZnamenko = 12
      slHodnota = 20
      slHledani = 21
      HledanaHodnota = BrutoKor & KodRadku
  End Select
  For Radek = R1 To Rn
    If Pre.Cells(Radek, slHledani) = HledanaHodnota Then
      PocetPolozek = PocetPolozek + 1
      ReDim Preserve MujSeznam(0 To PocetPolozek)
      MujSeznam(PocetPolozek).Zdroj = "P|fffd|edvaha"
      MujSeznam(PocetPolozek).Ucet = Pre.Cells(Radek, slUcet)
      MujSeznam(PocetPolozek).Znamenko = Def.Cells(Radek, slZnamenko)
      MujSeznam(PocetPolozek).Hodnota = Pre.Cells(Radek, slHodnota)
      If MujSeznam(PocetPolozek).Hodnota <> 0 Then
        PocetNenulovych = PocetNenulovych + 1
      End If
    End If
  Next Radek
End Sub

Private Sub NactiKorekce()
  Dim slUcet As Integer         ' sloupec uctu
  Dim slHledani1 As Integer     ' sloupec hledani1
  Dim slHledani2 As Integer     ' sloupec hledani2
  Dim slZnamenko1 As Integer    ' sloupec znamenka1 v korekcich
  Dim slZnamenko2 As Integer    ' sloupec znamenka2 v korekcich
  Dim slHodnota1 As Integer     ' sloupec hodnoty1
  Dim slHodnota2 As Integer     ' sloupec hodnoty2
  Dim HledanaHodnota As String  ' hledany kod radku
  Dim Kor As Worksheet
  Dim Radek As Long
  Set Kor = Worksheets("Korekce")
  slUcet = 1
  HledanaHodnota = KodRadku
  Select Case uObdobi
    Case "P"    ' predminule obdobi
      slZnamenko1 = 4
      slZnamenko2 = 6
      slHledani1 = 5
      slHledani2 = 7
      slHodnota1 = 24
      slHodnota2 = 25
     Case "M"    ' minule obdobi
       slZnamenko1 = 11
       slZnamenko2 = 13
       slHledani1 = 12
       slHledani2 = 14
       slHodnota1 = 26
       slHodnota2 = 27
     Case "B"    ' bezne obdobi
       slZnamenko1 = 19
       slZnamenko2 = 21
       slHledani1 = 30
       slHledani2 = 31
       slHodnota1 = 28
       slHodnota2 = 29
       HledanaHodnota = BrutoKor & KodRadku
  End Select
  Radek = R1
  While Kor.Cells(Radek, 1) <> ""
    If Kor.Cells(Radek, slHledani1) = HledanaHodnota Then
      PocetPolozek = PocetPolozek + 1
      ReDim Preserve MujSeznam(0 To PocetPolozek)
      MujSeznam(PocetPolozek).Zdroj = "Korekce"
      MujSeznam(PocetPolozek).Ucet = Kor.Cells(Radek, slUcet)
      MujSeznam(PocetPolozek).Znamenko = Kor.Cells(Radek, slZnamenko1)
      MujSeznam(PocetPolozek).Hodnota = Kor.Cells(Radek, slHodnota1)
      If MujSeznam(PocetPolozek).Hodnota <> 0 Then
        PocetNenulovych = PocetNenulovych + 1
      End If
    End If
    If Kor.Cells(Radek, slHledani2) = HledanaHodnota Then
      PocetPolozek = PocetPolozek + 1
      ReDim Preserve MujSeznam(0 To PocetPolozek)
      MujSeznam(PocetPolozek).Zdroj = "Korekce"
      MujSeznam(PocetPolozek).Ucet = Kor.Cells(Radek, slUcet)
      MujSeznam(PocetPolozek).Znamenko = Kor.Cells(Radek, slZnamenko2)
      MujSeznam(PocetPolozek).Hodnota = Kor.Cells(Radek, slHodnota2)
      If MujSeznam(PocetPolozek).Hodnota <> 0 Then
        PocetNenulovych = PocetNenulovych + 1
      End If
    End If
    Radek = Radek + 1
  Wend
End Sub

Private Sub NaplnSeznam()
  Dim Seznam() As String
  Dim i As Integer
  Dim j As Integer
  Dim Pocet As Integer
  Dim Vse As Boolean
  On Error Resume Next
  Vse = Range("dtaVse")
  If Vse Then
    Pocet = PocetPolozek
  Else
    Pocet = PocetNenulovych
  End If
  ReDim Seznam(0 To Pocet, 1 To 5)
  j = 0
  For i = 0 To PocetPolozek
    If Vse Or (Not Vse And (MujSeznam(i).Hodnota <> 0)) Then
      Seznam(j, 1) = MujSeznam(i).Zdroj
      Seznam(j, 2) = MujSeznam(i).Ucet
      If MujSeznam(i).Znamenko = "-" Then Seznam(j, 3) = "(-1)"
      If Worksheets("ID").Range("dtaTisice") Then
        Seznam(j, 4) = Format(MujSeznam(i).Hodnota, "### ### ##0")
      Else
        Seznam(j, 4) = Format(MujSeznam(i).Hodnota, "### ### ### ##0.00")
      End If
      Seznam(j, 5) = " "
      j = j + 1
    End If
  Next i
  lbSeznam.List = Seznam
End Sub

Private Sub btnNuly_Click()
  Range("dtaVse") = Not Range("dtaVse")
  If Range("dtaVse") Then
    btnNuly.Caption = "Pouze nenulov|fffd|"
  Else
    btnNuly.Caption = "V|fffd|echny polo|fffd|ky"
  End If
  NaplnSeznam
End Sub

Private Sub btnStorno_Click()
  Unload Me
End Sub

Private Sub UserForm_Initialize()
  lblVykaz.Caption = Vykaz
  lblRadek.Caption = RadekVykazu
  lblPopis.Caption = TextRadku
  If Range("dtaVse") Then
    btnNuly.Caption = "Pouze nenulov|fffd|"
  Else
    btnNuly.Caption = "V|fffd|echny polo|fffd|ky"
  End If
  PocetPolozek = -1
  PocetNenulovych = -1
  NactiPredvahu
  NactiKorekce
  NaplnSeznam
End Sub


INQUEST-PP=macro
