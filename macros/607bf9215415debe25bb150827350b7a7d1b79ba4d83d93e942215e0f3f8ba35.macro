Attribute VB_Name = "Module1"
'This function will work upto 99,99,99,99,999.99
 

Option Explicit
'-- Updated on II/11/2011. Updated up to 9999 Thousan crores
'-- Modified as per requirement and updated as on 15/09/2011



Function SpellNumber(wils As String, kapil As Double)

'Attribute Macro4.VB_Description = "Macro recorded 05/01/01 by Shailesh Agrawal"
'Attribute Macro4.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro4"
' Your comments and Feed back will be most appreciated.
' Macro4 Macro
' Macro recorded 05/01/2001 by Shailesh Agrawal Associates
' This macro is available free of cost at www.CharteredValuer.com
' For Further inquiry feel free to contact on shashi@CharteredValuer.com
' This is distributed as freeware. We do not take any responsiblity for any problem
' due to this macro
' Updated to work up 9999 Thousand Crores of Indian Rupees. by KSR on 3/09/2011

Dim words(100) As String
 words(0) = "Zero"
 words(1) = "One"
 words(2) = "Two"
 words(3) = "Three"
 words(4) = "Four"
 words(5) = "Five"
 words(6) = "Six"
 words(7) = "Seven"
 words(8) = "Eight"
 words(9) = "Nine"
 words(10) = "Ten"
 words(11) = "Eleven"
 words(12) = "Twelve"
 words(13) = "Thirteen"
 words(14) = "Fourteen"
 words(15) = "Fifteen"
 words(16) = "Sixteen"
 words(17) = "Seventeen"
 words(18) = "Eighteen"
 words(19) = "Nineteen"
 words(20) = "Twenty"
 words(21) = "Twenty One"
 words(22) = "Twenty Two"
 words(23) = "Twenty Three"
 words(24) = "Twenty Four"
 words(25) = "Twenty Five"
 words(26) = "Twenty Six"
 words(27) = "Twenty Seven"
 words(28) = "Twenty Eight"
 words(29) = "Twenty Nine"
 words(30) = "Thirty"
 words(31) = "Thirty One"
 words(32) = "Thirty Two"
 words(33) = "Thirty Three"
 words(34) = "Thirty Four"
 words(35) = "Thirty Five"
 words(36) = "Thirty Six"
 words(37) = "Thirty Seven"
 words(38) = "Thirty Eight"
 words(39) = "Thirty Nine"
 words(40) = "Forty"
 words(41) = "Forty One"
 words(42) = "Forty Two"
 words(43) = "Forty Three"
 words(44) = "Forty Four"
 words(45) = "Forty Five"
 words(46) = "Forty Six"
 words(47) = "Forty Seven"
 words(48) = "Forty Eight"
 words(49) = "Forty Nine"
 words(50) = "Fifty"
 words(51) = "Fifty One"
 words(52) = "Fifty Two"
 words(53) = "Fifty Three"
 words(54) = "Fifty Four"
 words(55) = "Fifty Five"
 words(56) = "Fifty Six"
 words(57) = "Fifty Seven"
 words(58) = "Fifty Eight"
 words(59) = "Fifty Nine"
 words(60) = "Sixty"
 words(61) = "Sixty One"
 words(62) = "Sixty Two"
 words(63) = "Sixty Three"
 words(64) = "Sixty Four"
 words(65) = "Sixty Five"
 words(66) = "Sixty Six"
 words(67) = "Sixty Seven"
 words(68) = "Sixty Eight"
 words(69) = "Sixty Nine"
 words(70) = "Seventy"
 words(71) = "Seventy One"
 words(72) = "Seventy Two"
 words(73) = "Seventy Three"
 words(74) = "Seventy Four"
 words(75) = "Seventy Five"
 words(76) = "Seventy Six"
 words(77) = "Seventy Seven"
 words(78) = "Seventy Eight"
 words(79) = "Seventy Nine"
 words(80) = "Eighty"
 words(81) = "Eighty One"
 words(82) = "Eighty Two"
 words(83) = "Eighty Three"
 words(84) = "Eighty Four"
 words(85) = "Eighty Five"
 words(86) = "Eighty Six"
 words(87) = "Eighty Seven"
 words(88) = "Eighty Eight"
 words(89) = "Eighty Nine"
 words(90) = "Ninety"
 words(91) = "Ninety One"
 words(92) = "Ninety Two"
 words(93) = "Ninety Three"
 words(94) = "Ninety Four"
 words(95) = "Ninety Five"
 words(96) = "Ninety Six"
 words(97) = "Ninety Seven"
 words(98) = "Ninety Eight"
 words(99) = "Ninety Nine"
 words(100) = "One Hundred"

Dim Minus As String
Dim GHAU As String
Dim CRORE As String
Dim LAKH As String
Dim thousand As String, ERUPT As Variant
Dim HUNDRED As String
'==========================================
Dim AJEB1   As Variant
Dim BINDRZ  As Variant
Dim BOROS   As Variant, BORIS As Variant
Dim BORUS   As Variant, CYRUS As Variant, CYROS1 As Variant
Dim DOZAL   As Variant
Dim GRIPP1  As String
Dim GRIPP2  As Long
Dim GRIPP3  As Variant, PAISE As String
Dim GXZP0   As String, tmpand As String, GXZP99 As String
Dim GXZP1   As String, GXZP2 As String, GXZP3 As String
Dim GXZP4   As String, GXZP5 As String, GXZP6 As String, GXZP7 As String
Dim HARP1   As Variant, HARP2 As Variant, HARP3 As Variant
Dim HARP4   As Variant, HARP5 As Variant, HARP6 As Variant
Dim HARP7   As Variant
Dim JANTI   As Variant, JANTI1 As Variant, JANTI2 As Variant, JANTI3 As Variant
Dim KARANT1 As Variant, KARANT2 As Variant, KARANT3 As Variant
Dim KARANT4 As Variant, KARANT5 As Variant, KARANT6 As Variant
Dim KARANT7 As Variant, KARANT8 As Variant, KARANT9 As Variant
Dim KARANT10 As Variant
Dim LINZUR1 As Variant, LINZUR2 As Variant, LINZUR3 As Variant
Dim LINZUR4 As Variant, LINZUR5 As Variant, LINZUR  As Variant
Dim PAST1   As Variant, PAST2 As Variant, PAST3 As Variant
Dim PAST4   As Variant, PAST5 As Variant, PAST12 As Variant
Dim RABJI1  As String
Dim XORE6   As String
Dim XORE7   As Variant, XORE8 As Variant
Dim XYME    As Variant
Dim XYZ     As String, FLITIES As Variant
Dim ZZART   As Variant
GXZP6 = " "
GXZP7 = " "

'-- Limits in place 2004-09-23 ...
If kapil = 0 Then
  SpellNumber = wils & " Zero Only"
  Exit Function
End If
If kapil > 99999999999.99 Then
  SpellNumber = "High Value"
  Exit Function
End If

BINDRZ = kapil
PAST1 = BINDRZ - Int(BINDRZ)
PAST12 = Round((PAST1 * 100), 0)

PAST2 = Int(PAST12)
PAST3 = Str(PAST2)
PAST4 = Val(PAST3)
JANTI = Str(Int(BINDRZ))
JANTI1 = Val(JANTI)
JANTI2 = Int(JANTI1)
AJEB1 = Str(JANTI2)
CRORE = " Crore "
LAKH = " Lakh "
thousand = " Thousand "
HUNDRED = " Hundred "
PAISE = "and Paise"
tmpand = " "
GXZP0 = " "
GXZP1 = " "
GXZP2 = " "
GXZP3 = " "
GXZP4 = " "
GXZP5 = " "
GXZP6 = " "
GXZP7 = " "
XYZ = "&"

If (Left(Trim(AJEB1), 1)) = "-" Then
    RABJI1 = Abs(Trim(AJEB1))
    Minus = " Minus"
    'MsgBox RABJI1
Else
    RABJI1 = Trim(AJEB1)
End If

If Len(RABJI1) > 10 Then
 KARANT1 = Right(RABJI1, 11)
 KARANT2 = Right(RABJI1, 10)
 KARANT3 = Val(KARANT1) - Val(KARANT2)
 KARANT4 = KARANT3 / 10000000000#
 KARANT5 = Str(KARANT4)
 KARANT6 = Right(KARANT5, 2)
 KARANT7 = Val(KARANT6)
 If KARANT7 > 0 Then
   KARANT10 = words(KARANT7) + " Thousand "
 Else
   KARANT8 = ""
'   CRORE = ""
   GXZP99 = ""
 End If
Else
' KARANT8 = ""
' CRORE = ""
 GXZP0 = ""
End If

If Len(RABJI1) > 8 Then
 KARANT1 = Right(RABJI1, 10)
 KARANT2 = Right(RABJI1, 9)
 KARANT3 = Val(KARANT1) - Val(KARANT2)
 KARANT4 = KARANT3 / 1000000000
 KARANT5 = Str(KARANT4)
 KARANT6 = Right(KARANT5, 2)
 KARANT7 = Val(KARANT6)
 If KARANT7 > 0 Then
   KARANT9 = words(KARANT7) + " Hundred "
 Else
   KARANT8 = ""
'   CRORE = ""
   GXZP0 = ""
 End If
Else
' KARANT8 = ""
' CRORE = ""
 GXZP0 = ""
End If

If Len(RABJI1) > 7 Then
 KARANT1 = Right(RABJI1, 9)
 KARANT2 = Right(RABJI1, 7)
 KARANT3 = Val(KARANT1) - Val(KARANT2)
 KARANT4 = KARANT3 / 10000000
 KARANT5 = Str(KARANT4)
 KARANT6 = Right(KARANT5, 2)
 KARANT7 = Val(KARANT6)
 If KARANT7 > 0 Then
    If GXZP0 = " " Then
        tmpand = " and "
    End If
   KARANT8 = tmpand + words(KARANT7)
 Else
   KARANT8 = ""
'   CRORE = ""
'   GXZP1 = ""
 End If
Else
 KARANT8 = ""
 CRORE = ""
 GXZP1 = ""
End If
If Len(RABJI1) > 5 Then
 LINZUR = Right(RABJI1, 5)
 LINZUR2 = Val(RABJI1) - Val(LINZUR)
 LINZUR3 = LINZUR2 / 100000
 XORE6 = Str(LINZUR3)
 XORE7 = Right(XORE6, 2)
 XORE8 = Val(XORE7)
 If XORE8 > 0 Then
   LINZUR4 = words(XORE8)
 Else
   LINZUR4 = ""
   LAKH = ""
   GXZP2 = ""
 End If
   Else
   LINZUR4 = ""
   LAKH = ""
   GXZP2 = ""
End If
If Len(RABJI1) > 3 Then
 HARP1 = Right(RABJI1, 3)
 HARP2 = Val(RABJI1) - Val(HARP1)
 HARP3 = HARP2 / 1000
 HARP4 = Str(HARP3)
 HARP5 = Right(HARP4, 2)
 HARP6 = Val(HARP5)
 If HARP6 > 0 Then
   HARP7 = words(HARP6)
 Else
   HARP7 = ""
   thousand = ""
   GXZP3 = ""
 End If
Else
 HARP7 = ""
 thousand = ""
 GXZP3 = ""
End If
If Len(RABJI1) > 2 Then
 BORIS = Right(RABJI1, 3)
 CYRUS = Left(BORIS, 1)
 CYROS1 = Val(CYRUS)
 If CYROS1 > 0 Then
   ERUPT = words(CYROS1)
 Else
   ERUPT = ""
   HUNDRED = ""
   GXZP4 = ""
 End If
Else
 ERUPT = ""
 HUNDRED = ""
 GXZP4 = ""
End If
If Len(RABJI1) > 1 Then
 ZZART = Right(RABJI1, 2)
 DOZAL = Val(ZZART)
 If DOZAL > 0 Then
   FLITIES = words(DOZAL)
 Else
   FLITIES = ""
   XYZ = ""
 End If
Else
 FLITIES = ""
 XYZ = ""
End If
If Len(RABJI1) < 2 And Len(RABJI1) > 0 Then
 GRIPP1 = Left(RABJI1, 1)
 GRIPP2 = Val(GRIPP1)
 XYZ = ""
 GXZP5 = ""
 GXZP6 = ""
 If GRIPP2 > 0 Then
   GRIPP3 = words(GRIPP2)
 Else
   GRIPP3 = ""
 End If
Else
 GRIPP3 = ""
End If
If Len(RABJI1) < 3 And Len(RABJI1) > 0 Then
 XYZ = ""
 GXZP5 = ""
 GXZP6 = ""
End If
If PAST4 > 0 Then
    PAST5 = words(PAST4)
 Else
 PAST5 = ""
 PAISE = ""
 GXZP7 = ""
End If
XYME = Val(AJEB1)

GHAU = wils + Minus + Trim(KARANT10) + GXZP99 + " " + Trim(KARANT9) + GXZP0 + " " + Trim(KARANT8) + GXZP1 + Trim(CRORE) _
  + GXZP1 + Trim(LINZUR4) + GXZP2 + Trim(LAKH) + GXZP2 _
  + Trim(HARP7) + GXZP3 + Trim(thousand) + GXZP3 _
  + Trim(ERUPT) + GXZP4 + Trim(HUNDRED) + GXZP5 + XYZ _
  + GXZP4 + Trim(FLITIES) + GXZP6 + Trim(GRIPP3) _
  + GXZP7 + Trim(PAISE) + GXZP7 + Trim(PAST5) + " Only"
SpellNumber = GHAU

End Function











Attribute VB_Name = "Module2"
Function CurrencyListItems()
    If ActiveSheet.Cells(2, 4).Value = "INR Only" And ActiveSheet.Cells(2, 5).Value <> "INR" Then
        ActiveSheet.Cells(2, 5).Value = "INR"
        ActiveSheet.Cells(11, 53).Value = "TOTAL AMOUNT  Without Taxes"
        If ActiveSheet.Cells(3, 3).Value = "DGSND" Then
            ActiveSheet.Cells(11, 54).Value = "Total Evaluated Cost (including of ED/ST but excluding CST/VAT)"
        Else
            ActiveSheet.Cells(11, 54).Value = "TOTAL AMOUNT  With Taxes"
        End If
        If Range("K:L").EntireColumn.Hidden = False Then
            MsgBox "Please Hide the Currency Selection Columns K and L "
        End If
    ElseIf ActiveSheet.Cells(2, 4).Value = "INR and Other Currency" And ActiveSheet.Cells(2, 5).Value = "INR" Then
        ActiveSheet.Cells(2, 5).Value = "INR,USD,JPY,EUR"
        ActiveSheet.Cells(11, 53).Value = "TOTAL AMOUNT, It will be convert"
        ActiveSheet.Cells(11, 54).Value = "TOTAL TAXES It will be convert only If you choose Full Conversion, Until it will be treated as INR "
        If Range("K:L").EntireColumn.Hidden = True Then
            MsgBox "Please UnHide the Currency Selection Columns K and L "
        End If
    ElseIf ActiveSheet.Cells(2, 4).Value = "INR and Other Currency" And InStr(ActiveSheet.Cells(2, 5).Value, "INR") <= 0 Then
        MsgBox "Please include the INR in Currency Selection List"
        boqvalidationstatus = "F"
        ActiveSheet.Cells(2, 5).Value = "INR,USD,JPY,EUR"
    ElseIf ActiveSheet.Cells(2, 4).Value = "INR and Other Currency" And ActiveSheet.Cells(2, 5).Value <> vbNullString Then
        ActiveSheet.Cells(2, 5).Value = Replace(ActiveSheet.Cells(2, 5).Value, " ", "")
    End If
LastRow = ActiveSheet.UsedRange.Rows.Count - 4
For r = 13 To LastRow
            For c = 12 To 12
                Dim strCurrencyName As String
                strCurrencyName = ActiveSheet.Cells(2, 5).Value
                With Range("L" & r).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=strCurrencyName
                    .IgnoreBlank = True
                    .InCellDropdown = True
                End With
            Next c
        Next r
End Function
Function DropDownforPercentageBoQ()
LastRow = ActiveSheet.UsedRange.Rows.Count - 2
Dim Options As String
    If ActiveSheet.Cells(2, 2).Value = "Percentage" Then
        'For C1D1 Drop down
        If ActiveSheet.Cells(3, 2).Value = "C1D1" Then
            Options = "Select, Option C1, Option D1"
            With Range("D" & LastRow).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=Options
                .IgnoreBlank = True
                .InCellDropdown = True
            End With
        ElseIf ActiveSheet.Cells(3, 2).Value = "Discount" Then
            Options = "Select, Discount"
            With Range("D" & LastRow).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=Options
                .IgnoreBlank = True
                .InCellDropdown = True
            End With
        Else
            With Range("D" & LastRow).Validation
                .Delete
            End With
        End If
        
        'For AtPar, Excess and Less for IOCL
        If ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(3, 3).Value = "IOCL" And ActiveSheet.Cells(3, 2).Value <> "Discount" Then
            Options = "Select, At Par, Excess (+), Less (-)"
            With Range("E" & LastRow).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=Options
                .IgnoreBlank = True
                .InCellDropdown = True
            End With
        'For Excess and Less
        ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(3, 1).Value = vbNullString And ActiveSheet.Cells(3, 2).Value <> "Discount" Then
            Options = "Select, Excess (+), Less (-)"
            With Range("E" & LastRow).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=Options
                .IgnoreBlank = True
                .InCellDropdown = True
            End With
        'For Discount BoQ
        ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(3, 1).Value <> vbNullString And ActiveSheet.Cells(3, 2).Value = "Discount" Then
            Options = "Select, Less (-)"
            With Range("E" & LastRow).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=Options
                .IgnoreBlank = True
                .InCellDropdown = True
            End With
        Else
            With Range("E" & LastRow).Validation
                .Delete
            End With
            'Range("E" & LastRow).Value = vbNullString
            MsgBox "Please assign the Cell A3 for Excess or Less Drop Down "
        End If
        
    End If
End Function
Function DropDownforMCL()
'LastRow = ActiveSheet.UsedRange.Rows.Count - 4
DropDownRow = 7
Dim mclOptions1 As String
Dim mclOptions2 As String
Dim mclOptions3 As String
If ActiveSheet.Cells(2, 2).Value = "Item Rate" And ActiveSheet.Cells(3, 3).Value = "MCL" Then
'For DeptUsers Drop down for Service Tax Category
    
    mclOptions1 = "Select,With CENVAT Credit,Without CENVAT Credit"
    With Range("A" & DropDownRow).Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=mclOptions1
        .IgnoreBlank = True
        .InCellDropdown = True
    End With
    
    mclOptions2 = "Select,Works Contract Service Category I,Works Contract Service Category II,Works Contract Service Category III, Turnkey Works Contract (Divisible Contract), Exempted Services"
    With Range("B" & DropDownRow).Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=mclOptions2
        .IgnoreBlank = True
        .InCellDropdown = True
    End With
    'mclOptions3 = "Select, Agency is a body corporate and Not availaing CENVAT credit, Agency is a body corporate and availaing CENVAT credit, Agency is an individualHUFPartnership or Association of person and Not availaing CENVAT credit, Agency is an individualHUFPartnership or Association of person and availaing CENVAT credit, The bidder is a Small Service Provider"
    mclOptions3 = "Select,Small Service Provider Availing Service Tax Exemption,Body Corporate Service Provider,Other than Body Corporate but not a Small Service Provider Availing Service Tax Exemption"
    With Range("E" & DropDownRow + 1).Validation
        .Delete
        .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=mclOptions3
        .IgnoreBlank = True
        .InCellDropdown = True
    End With
    ActiveSheet.Cells(DropDownRow + 1, 5).Interior.ColorIndex = 20
End If
End Function
Function BoQTypeBasedColumnsDisplay()
    LastRow = ActiveSheet.UsedRange.Rows.Count - 1
    ActiveSheet.Cells(2, 4).Interior.ColorIndex = xlNone
    If ActiveSheet.Cells(2, 2).Value = "Item Rate" And ActiveSheet.Cells(3, 4).Value = "Hide" Then
            Range("C:C").EntireColumn.Hidden = True
            Range("F:F").EntireColumn.Hidden = False
            Range("G:J").EntireColumn.Hidden = True
            Range("M:M").EntireColumn.Hidden = False
            Range("N:AZ").EntireColumn.Hidden = True
            Range("BB:BB").EntireColumn.Hidden = True
            ActiveSheet.Cells(LastRow - 1, 1).EntireRow.Hidden = True
            Call DropDownforMCL
        ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(3, 4).Value = "Hide" Then
            Range("C:C").EntireColumn.Hidden = True
            Range("F:F").EntireColumn.Hidden = False
            Range("G:J").EntireColumn.Hidden = True
            Range("M:AZ").EntireColumn.Hidden = True
            Range("BB:BB").EntireColumn.Hidden = True
            ActiveSheet.Cells(LastRow - 1, 1).EntireRow.Hidden = False
            If ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(2, 4).Value <> "INR Only" Then
                MsgBox "Please Reset the value as INR Only for Cell " & ActiveSheet.Cells(2, 4) & Chr(13)
                ActiveSheet.Cells(2, 4).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            End If
            Call DropDownforPercentageBoQ
        ElseIf ActiveSheet.Cells(2, 2).Value = "Item Wise" And ActiveSheet.Cells(3, 4).Value = "Hide" Then
            Range("C:C").EntireColumn.Hidden = False
            Range("F:F").EntireColumn.Hidden = False
            Range("G:J").EntireColumn.Hidden = True
            Range("M:Z").EntireColumn.Hidden = False
            Range("AA:AZ").EntireColumn.Hidden = False
            Range("BB:BB").EntireColumn.Hidden = False
            ActiveSheet.Cells(LastRow - 1, 1).EntireRow.Hidden = True
    End If
End Function
Function UpdateCustomDocPropDT()
Dim boqstatus As DocumentProperty
Dim boqversion As DocumentProperty
Dim boqcharttype As DocumentProperty

    On Error Resume Next
    Set boqstatus = ThisWorkbook.CustomDocumentProperties("BoQStatus")
        ThisWorkbook.CustomDocumentProperties("BoQStatus") = "CR"
    
    On Error Resume Next
    Set boqversion = ThisWorkbook.CustomDocumentProperties("BoQVersion")
        ThisWorkbook.CustomDocumentProperties("BoQVersion") = "BoQ_Ver3.0"
    
    On Error Resume Next
    Set boqcharttype = ThisWorkbook.CustomDocumentProperties("BoQChartType")
    If boqcharttype <> "Invalid" And boqcharttype <> "Normal" And boqcharttype <> "SingleWindow" And boqcharttype <> "Alternate" Then
        ThisWorkbook.CustomDocumentProperties("BoQChartType") = "Normal"
        MsgBox "Please reset the Custom Property boqcharttype  :"
    ElseIf boqcharttype = "Invalid" Then
        ThisWorkbook.CustomDocumentProperties("BoQChartType") = "Normal"
    End If
    
    'MsgBox "The Basic BoQ validations are complied, protect the Sheet and proceed further "
End Function
Function UpdateCustomDocPropBT()
Dim boqstatus As DocumentProperty
Dim boqversion As DocumentProperty
Dim boqcharttype As DocumentProperty

    On Error Resume Next
    Set boqstatus = ThisWorkbook.CustomDocumentProperties("BoQStatus")
    If boqstatus = "NC" Or boqstatus = "CR" Or boqstatus = "CC" Then
        ThisWorkbook.CustomDocumentProperties("BoQStatus") = "CC"
    Else
        MsgBox "The BoQ is Tampered in BS "
    End If
    
    On Error Resume Next
    Set boqversion = ThisWorkbook.CustomDocumentProperties("BoQVersion")
    If boqversion = "BoQ_Ver3.0" Or boqversion = "Invalid" Then
        ThisWorkbook.CustomDocumentProperties("BoQVersion") = "BoQ_Ver3.0"
    ElseIf boqversion <> "BoQ_Ver3.0" Then
        MsgBox "The BoQ is Tampered in BV "
    End If
    
    On Error Resume Next
    Set boqcharttype = ThisWorkbook.CustomDocumentProperties("BoQChartType")
    If boqcharttype <> "Invalid" And boqcharttype <> "Normal" And boqcharttype <> "SingleWindow" And boqcharttype <> "Alternate" Then
        MsgBox "The BoQ is Tampered in CT "
    End If
 
End Function
Function ResetCustomDocPropBT()
'Dim boqstatus As DocumentProperty
If ThisWorkbook.CustomDocumentProperties("BoQStatus") <> "CR" And ThisWorkbook.CustomDocumentProperties("BoQStatus") = "CC" Then
    ThisWorkbook.CustomDocumentProperties("BoQStatus") = "NC"
End If
End Function

Function ResetCustomDocProp()
Dim boqstatus As DocumentProperty
Dim boqversion As DocumentProperty
Dim boqcharttype As DocumentProperty
Dim ShowRowTotalWithOutTaxes As DocumentProperty
Dim ShowRowTotalWithTaxes As DocumentProperty
Dim ShowColumnTotalWithTaxes As DocumentProperty
Dim ShowSummary As DocumentProperty
Dim FormBased As DocumentProperty
Dim Rank As DocumentProperty
Dim CSType As DocumentProperty

    On Error Resume Next
    Set boqstatus = ThisWorkbook.CustomDocumentProperties("BoQStatus")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="BoQStatus", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="NC"
    ElseIf boqstatus <> "CC" Then
        ThisWorkbook.CustomDocumentProperties("BoQStatus") = "NC"
    End If
    
    On Error Resume Next
    Set boqversion = ThisWorkbook.CustomDocumentProperties("BoQVersion")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="BoQVersion", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="Invalid"
    Else
            boqversion = "Invalid"
            ThisWorkbook.CustomDocumentProperties("BoQVersion") _
            = boqversion
    End If
    
    On Error Resume Next
    Set boqcharttype = ThisWorkbook.CustomDocumentProperties("BoQChartType")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="BoQChartType", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="Invalid"
    Else
            boqcharttype = ThisWorkbook.CustomDocumentProperties("BoQChartType")
            ThisWorkbook.CustomDocumentProperties("BoQChartType") _
            = boqcharttype
    End If
    
    On Error Resume Next
    Set ShowRowTotalWithOutTaxes = ThisWorkbook.CustomDocumentProperties("SRTWOT")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="SRTWOT", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="No"
    ElseIf ShowRowTotalWithOutTaxes <> "Yes" And ShowRowTotalWithOutTaxes <> "No" Then
        ThisWorkbook.CustomDocumentProperties("SRTWOT") = "No"
        MsgBox "Please reset the Custom Property ShowRowTotalWithOutTaxes value as either Yes or No :"
    End If
    
    On Error Resume Next
    Set ShowRowTotalWithTaxes = ThisWorkbook.CustomDocumentProperties("SRTWT")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="SRTWT", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="No"
    ElseIf ShowRowTotalWithTaxes <> "Yes" And ShowRowTotalWithTaxes <> "No" Then
        ThisWorkbook.CustomDocumentProperties("SRTWT") = "No"
        MsgBox "Please reset the Custom Property ShowRowTotalWithTaxes value as either Yes or No :"
    End If
    
    On Error Resume Next
    Set ShowColumnTotalWithTaxes = ThisWorkbook.CustomDocumentProperties("SCTWT")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="SCTWT", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="No"
    ElseIf ShowColumnTotalWithTaxes <> "Yes" And ShowColumnTotalWithTaxes <> "No" Then
        ThisWorkbook.CustomDocumentProperties("SCTWT") = "No"
        MsgBox "Please reset the Custom Property ShowColumnTotalWithTaxes value as either Yes or No :"
    End If
    
    On Error Resume Next
    Set ShowSummary = ThisWorkbook.CustomDocumentProperties("ShowSummary")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="ShowSummary", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="No"
    ElseIf ShowSummary <> "Yes" And ShowSummary <> "No" Then
        ThisWorkbook.CustomDocumentProperties("ShowSummary") = "No"
        MsgBox "Please reset the Custom Property ShowSummary value as either Yes or No :"
    End If
    
    On Error Resume Next
    Set FormBased = ThisWorkbook.CustomDocumentProperties("FormBased")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="FormBased", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="No"
    ElseIf FormBased <> "Yes" And FormBased <> "No" Then
        ThisWorkbook.CustomDocumentProperties("FormBased") = "No"
        MsgBox "Please reset the Custom Property FormBased value as either Yes or No :"
    End If
    
    On Error Resume Next
    Set Rank = ThisWorkbook.CustomDocumentProperties("Rank")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="Rank", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeNumber, _
            Value:=1
    ElseIf Rank <> 1 And Rank <> 2 And Rank <> 3 Then
        ThisWorkbook.CustomDocumentProperties("Rank") = 1
        MsgBox "Please reset the Custom Property Rank value as either 1 or 2 or 3 :"
    End If
    
    On Error Resume Next
    Set CSType = ThisWorkbook.CustomDocumentProperties("CSType")
    If Err.Number > 0 Then
        ThisWorkbook.CustomDocumentProperties.Add _
            Name:="CSType", _
            LinkToContent:=False, _
            Type:=msoPropertyTypeString, _
            Value:="L"
    ElseIf CSType <> "H" And CSType <> "L" Then
        ThisWorkbook.CustomDocumentProperties("CSType") = "L"
        MsgBox "Please reset the Custom Property CSType value as either L or H :"
    End If
    'MsgBox "The Basic BoQ validations are Not Complied, please correct the issues "
End Function



Attribute VB_Name = "Module3"
Sub allinone()
    If ActiveSheet.ProtectContents = False And ActiveSheet.Cells(2, 1).Value <> "BoQ_Ver3.0" And Left(ActiveSheet.Name, 3) = "BoQ" Then
            MsgBox " Invalid BoQ!!! Please download the BoQ from the Downloads section of eProc Portal" & Chr(13)
            Call ResetCustomDocProp
    ElseIf ActiveSheet.ProtectContents = False And ActiveSheet.Cells(2, 1).Value = "BoQ_Ver3.0" And Left(ActiveSheet.Name, 3) = "BoQ" Then
            Call BoQTypeBasedColumnsDisplay
            Call ResetCustomDocProp
            Call CurrencyListItems
            Call DropDownforMCL
            'Call DuplicateSerialNo
            Call CheckDuplicates
            Call MandatoryColumnsValidate
            Call BoQValidStatus
    ElseIf ActiveSheet.ProtectContents = True And ActiveSheet.Cells(2, 1).Value = "BoQ_Ver3.0" And Left(ActiveSheet.Name, 3) = "BoQ" And ThisWorkbook.CustomDocumentProperties("BoQChartType") <> "Alternate" Then
            Call BiddersColumnsValidate
            Call BoQValidStatus
    ElseIf ActiveSheet.ProtectContents = True And ActiveSheet.Cells(2, 1).Value = "BoQ_Ver3.0" And Left(ActiveSheet.Name, 4) = "BoQ1" And ThisWorkbook.CustomDocumentProperties("BoQChartType") = "Alternate" Then
            Call BiddersColumnsValidate
            Call BoQValidStatus
    ElseIf ActiveSheet.ProtectContents = True And ActiveSheet.Cells(2, 1).Value = "BoQ_Ver3.0" And ThisWorkbook.CustomDocumentProperties("BoQStatus") <> "CR" And ThisWorkbook.CustomDocumentProperties("BoQStatus") <> "CC" And ThisWorkbook.CustomDocumentProperties("BoQStatus") <> "NC" Then
            MsgBox "Please download the correct BoQ from the eProcurement portal "
    End If
End Sub
Function BoQValidStatus()
If ThisWorkbook.CustomDocumentProperties("BoQStatus") = "NC" Then
    MsgBox "The Basic BoQ validations are Not complied " & ActiveSheet.Name & " , please correct the issue ", vbCritical
    End
ElseIf ThisWorkbook.CustomDocumentProperties("BoQStatus") = "CR" And ActiveSheet.ProtectContents = False Then
    MsgBox "The Basic BoQ validations are complied for " & ActiveSheet.Name & " , protect the sheet and proceed further "
    If ActiveSheet.Cells(2, 4).Value <> "INR Only" And ActiveSheet.Cells(2, 2).Value = "Item Wise" Then
        MsgBox "Please Ensure that the formula for Column BA (AMOUNT) and Column BB (ONLY TAXES) "
    End If
ElseIf ThisWorkbook.CustomDocumentProperties("BoQStatus") = "CC" And ActiveSheet.ProtectContents = True Then
    'MsgBox "The Basic BoQ validations are complied "
ElseIf ThisWorkbook.CustomDocumentProperties("BoQStatus") <> "CR" And ThisWorkbook.CustomDocumentProperties("BoQStatus") <> "CC" And ActiveSheet.ProtectContents = True Then
    MsgBox "Please download the correct BoQ from the eProcurement portal "
End If
End Function
Function total_amount_ba(boq_type As Range, is_global As Range, qty As Range, estimate As Range, add_less As Range, convert_type As Range, rate As Range) As Double
    If boq_type.Value = "Item Rate" Then
        total_amount_ba = qty * add_less * rate
    ElseIf boq_type.Value = "Percentage" Then
        total_amount_ba = qty * add_less * estimate
    ElseIf boq_type.Value = "Item Wise" And is_global = "INR Only" Then
        total_amount_ba = add_less * rate
    ElseIf boq_type.Value = "Item Wise" And is_global <> "INR Only" Then
        total_amount_ba = add_less * rate
    End If
End Function
Function total_amount_bb_dgsnd(Basic_rate As Range, Tax_type As Range, ED_structure As Range, ED_rate As Range) As Double
     If Tax_type.Value = "ExciseDuty" Then
        If (ED_structure.Value = "ED NA at present and will not be charged even if it is applicable later on") Then
            total_amount_bb_dgsnd = Basic_rate
        ElseIf (ED_structure.Value = "ED NA at present and will be charged  if it becomes applicable later on") Then
            total_amount_bb_dgsnd = Basic_rate * (1 + ED_rate / 100)
        ElseIf (ED_structure.Value = "ED Extra @" And ED_rate.Value > 0) Then
            total_amount_bb_dgsnd = Basic_rate * (1 + ED_rate / 100)
        ElseIf (ED_structure.Value = "ED Extra @" And ED_rate.Value = 0) Then
            total_amount_bb_dgsnd = 0
            MsgBox "Please Enter ED Extra % Rate, it cannot be 0"
        ElseIf (ED_structure.Value = "ED Inclusive @" And ED_rate.Value > 0) Then
            total_amount_bb_dgsnd = Basic_rate
        ElseIf (ED_structure.Value = "ED Inclusive @" And ED_rate.Value = 0) Then
            total_amount_bb_dgsnd = 0
            MsgBox "Please Enter ED Inclusive % Rate, it cannot be 0"
        Else
            total_amount_bb_dgsnd = 0
        End If
    
    ElseIf Tax_type.Value = "ServiceTax" Then
        If (ED_structure.Value = "Service Tax NA") Then
            total_amount_bb_dgsnd = Basic_rate
        ElseIf (ED_structure.Value = "Extra @") Then
            total_amount_bb_dgsnd = Basic_rate * (1 + ED_rate / 100)
        Else
            total_amount_bb_dgsnd = 0
        End If
    Else
        total_amount_bb_dgsnd = 0
    End If

End Function

Attribute VB_Name = "Module4"
Sub ValidateAllSheets()
bc = 1
BoQ1SheetFound = False

'MsgBox ActiveWorkbook.Sheets("BoQ1").Cells(2, 3).Value
'MsgBox ActiveWorkbook.Sheets.Count

For sc = 1 To ActiveWorkbook.Sheets.Count
    If Left(ActiveWorkbook.Sheets(sc).Name, 3) = "BoQ" Then
        BoQ1SheetFound = True
    End If
    
    'Chk for BoQ Sheet in Order
    If ActiveWorkbook.Sheets(sc).Name <> "BoQ1" And BoQ1SheetFound = True And bc = 1 Then
        MsgBox "BoQ Sheets should be Ordered BoQ1, BoQ2 ... :"
        Call ResetCustomDocProp
        Exit Sub
    
    ElseIf ActiveWorkbook.Sheets(sc).Name = "BoQ" & bc And BoQ1SheetFound = True Then
        Sheets(ActiveWorkbook.Sheets(sc).Name).Activate
        'Chk for BoQ Type Should not Blank
        If ActiveWorkbook.Sheets("BoQ1").Cells(2, 1).Value = vbNullString Or ActiveWorkbook.Sheets("BoQ1").Cells(2, 2).Value = vbNullString Then
            MsgBox "Please reset BoQ Version and BoQ Type values in the Cell A1 and B2, which should not be Blank "
            Call ResetCustomDocProp
            Exit Sub
        'Chk for BoQ Type Should not Blank
        ElseIf ActiveWorkbook.Sheets("BoQ1").Cells(2, 1).Value = "BoQ_Ver3.0" And ActiveWorkbook.Sheets("BoQ1").Cells(2, 2).Value = vbNullString Then
            MsgBox "Please reset BoQ Type values in the Cell B2, which should not be Blank "
            Call ResetCustomDocProp
            Exit Sub
        'Chk for BoQ Chart Type same as CustomDocProp
        ElseIf ThisWorkbook.CustomDocumentProperties("BoQChartType") <> ActiveWorkbook.Sheets("BoQ1").Cells(2, 3).Value Then
            MsgBox "Please reset BoQ Chart Type values should be same as CustomDocProp "
            Call ResetCustomDocProp
            Exit Sub
        'Chk for Form Based BoQ in CustomDocProp
        ElseIf ThisWorkbook.CustomDocumentProperties("FormBased") = "Yes" And ActiveWorkbook.Sheets(sc).Cells(2, 2).Value <> "Item Wise" Then
            'MsgBox ActiveWorkbook.Sheets(sc).Cells(2, 2).Value
            MsgBox "Please reset Form Based values should be No OR all the sheets contains only Item Wise BoQ "
            Call ResetCustomDocProp
            Exit Sub
        
        'Chk for 2nd row values are same as BoQ1
        ElseIf ActiveWorkbook.Sheets("BoQ1").Cells(2, 3).Value <> ActiveWorkbook.Sheets(sc).Cells(2, 3).Value Or ActiveWorkbook.Sheets("BoQ1").Cells(2, 4).Value <> ActiveWorkbook.Sheets(sc).Cells(2, 4).Value Then
            MsgBox "Please reset 2nd row values should be same as BoQ1 "
            Call ResetCustomDocProp
            Exit Sub
            
        'Chk for itemcode are same as BoQ1 for alternate boq chart
        Else
        For r = 13 To ActiveSheet.UsedRange.Rows.Count - 4
            If ThisWorkbook.CustomDocumentProperties("BoQChartType") = "Alternate" And ActiveWorkbook.Sheets("BoQ1").Cells(r, 3).Value <> ActiveWorkbook.Sheets(sc).Cells(r, 3).Value Or ThisWorkbook.CustomDocumentProperties("BoQChartType") = "Alternate" And ActiveWorkbook.Sheets("BoQ1").Cells(r, 4).Value <> ActiveWorkbook.Sheets(sc).Cells(r, 4).Value Then
                MsgBox "Please reset itemcode/make values should be same as BoQ1 "
                Call ResetCustomDocProp
                Exit Sub
            End If
        Next r
        Call allinone
        End If
        If ThisWorkbook.CustomDocumentProperties("BoQStatus") = "CR" Or ThisWorkbook.CustomDocumentProperties("BoQStatus") = "CC" Then
            bc = bc + 1
        Else
            Exit Sub
        End If
    
    ElseIf Left(ActiveWorkbook.Sheets(sc).Name, 3) = "BoQ" And BoQ1SheetFound = True Then
        Sheets(ActiveWorkbook.Sheets(sc).Name).Activate
        MsgBox "Please sheet name should be BoQ" & bc
        bc = bc + 1
        Call ResetCustomDocProp
    End If
    'MsgBox "scount " & sc
Next sc
    If BoQ1SheetFound = False Then
        ThisWorkbook.CustomDocumentProperties("BoQStatus") = "NC"
        MsgBox "Please assign atleast one sheet should be BoQ1 "
        Call ResetCustomDocProp
    End If
End Sub



Attribute VB_Name = "Module5"
Function BiddersColumnsValidate()
LastRow = ActiveSheet.UsedRange.Rows.Count - 1
intRowCount = LastRow - 3
AtleasetOneItemFilled = False

'Range("M13:M" & LastRow - 3).Interior.ColorIndex = xlNone
'Range("B8").Interior.ColorIndex = xlNone

Call ResetCustomDocPropBT

'Chk for Bidder Name is Empty
If ActiveSheet.Cells(8, 2).Value = vbNullString Then
    MsgBox "Please Enter the Bidder Name for the Cell B8 " & ActiveSheet.Cells(8, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
'Chk for Bidder Status is Empty for MCL
ElseIf ActiveSheet.Cells(3, 3).Value = "MCL" And ActiveSheet.Cells(8, 5).Value = "Select" Then
    MsgBox "Please Enter the Bidder Status for the Cell E8 " & ActiveSheet.Cells(8, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
'Chk for OptionC1D1 / Discount is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 4).Value = "Select" Then
    MsgBox "Please Choose Option C1 or Option D1 for Row " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
'Chk for Percentage Type Option is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 5).Value = "Select" Then
    MsgBox "Please Enter the Percentage Type Option for the Row " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
'Chk for Percentage Rate is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 5).Value <> "Not Quoted" And ActiveSheet.Cells(LastRow - 1, 5).Value <> "Select" And ActiveSheet.Cells(LastRow - 1, 6).Value = vbNullString Then
    MsgBox "Please Enter the Percentage Rate for the Row " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
    ActiveSheet.Cells(LastRow - 1, 6).Value = "%"
    Call ResetCustomDocPropBT
    Exit Function
'Chk for Percentage Rate is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 5).Value <> "Not Quoted" And ActiveSheet.Cells(LastRow - 1, 5).Value <> "Select" And ActiveSheet.Cells(LastRow - 1, 6).Value = "%" Then
    MsgBox "Please Enter the Percentage Rate for the Row " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
'Chk for Percentage Rate is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 5).Value <> "Not Quoted" And ActiveSheet.Cells(LastRow - 1, 5).Value <> "Select" And InStr(ActiveSheet.Cells(LastRow - 1, 6).NumberFormat, "%") <= 0 Then
    MsgBox "Please Enter the Valid Data Format Percentage Rate for the Row " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
'Chk for Quoted Percentage Rate is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 53).Value = vbNullString Then
    MsgBox "Please Enter the Valid Data in Quoted Percentage Rate in Figure for the Row " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
'Chk for Quoted Percentage Rate is Empty for Percentage BoQ_NQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 5).Value = "Not Quoted" And ActiveSheet.Cells(LastRow - 1, 6).Value <> vbNullString Then
    MsgBox "Please Enter the Valid Data in Quoted Percentage Type/Rate in Figure for the Row " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
End If
    
'Chk for Basic Rate is Empty for Itemrate and Itemwise
For r = 13 To intRowCount
    'Chk for Column Rate_M, TotAmt_BA, TotAmt_BB
    If Not IsNumeric(ActiveSheet.Cells(r, 13).Value) And Not IsNumeric(ActiveSheet.Cells(r, 53).Value) And Not IsNumeric(ActiveSheet.Cells(r, 54).Value) Then
        MsgBox "Please Check the Quoted Rate for S.No " & ActiveSheet.Cells(r, 1) & " in the Sheet " & ActiveSheet.Name
        Call ResetCustomDocPropBT
        Exit Function
    'Chk for Total Amount With and WithOut Tax is Number
    ElseIf ActiveSheet.Cells(r, 4).Value <> vbNullString And Not IsNumeric(ActiveSheet.Cells(r, 53).Value) And Not IsNumeric(ActiveSheet.Cells(r, 54).Value) Then
        MsgBox "Please Check the Quoted Rate for S.No " & ActiveSheet.Cells(r, 1) & " in the Sheet " & ActiveSheet.Name
        Call ResetCustomDocPropBT
        Exit Function
    'Chk for Basic Rate is Filled for All items in Itemrate
    ElseIf ActiveSheet.Cells(2, 2).Value = "Item Rate" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 13).Value = vbNullString And ActiveSheet.Cells(r, 13).Locked <> True Then
        MsgBox "Please Enter the Basic Rate for S.No " & ActiveSheet.Cells(r, 1) & " in the Sheet " & ActiveSheet.Name
        Call ResetCustomDocPropBT
        Exit Function
    ElseIf ActiveSheet.Cells(2, 2).Value = "Item Rate" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 13).Value <> vbNullString And ActiveSheet.Cells(r, 13).Locked <> True Then
        AtleasetOneItemFilled = True
     'Chk for Basic Rate is Filled for atleast one item in Itemwise
    ElseIf AtleasetOneItemFilled = False And ActiveSheet.Cells(2, 2).Value = "Item Wise" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 13).Value <> vbNullString And ActiveSheet.Cells(r, 13).Locked <> True Then
            AtleasetOneItemFilled = True
    ElseIf AtleasetOneItemFilled = False And ActiveSheet.Cells(2, 2).Value = "Item Wise" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 13).Value > 0 And ActiveSheet.Cells(r, 13).Locked = True Then
            AtleasetOneItemFilled = True
    End If
Next r

'Chk for Basic Rate is Empty for Itemrate and Itemwise
If AtleasetOneItemFilled <> True And ActiveSheet.Cells(2, 2).Value <> "Percentage" Then
    MsgBox "Please Enter the Basic Rate for atleast one Item " & " in the Sheet " & ActiveSheet.Name
    Call ResetCustomDocPropBT
    Exit Function
End If

Call UpdateCustomDocPropBT
End Function

Attribute VB_Name = "Module6"
Function CheckDuplicates()
'Duplicate S.No Checking Start
LastRow = ActiveSheet.UsedRange.Rows.Count - 1
'LastCol = ActiveSheet.UsedRange.Columns.Count
intRowCount = LastRow - 3
Range("A13:L" & LastRow - 3).Interior.ColorIndex = xlNone
        boqvalidationstatus = "T"
        LLoop = 13
        While LLoop <= intRowCount
        LChangedValue = "A" & CStr(LLoop)
        LChangedValueIC = "C" & CStr(LLoop)
        If Len(Range(LChangedValue).Value) > 0 Or Len(Range(LChangedValueIC).Value) > 0 Then
            LTestLoop = LLoop
            While LTestLoop <= intRowCount
                If LLoop <> LTestLoop Then
                    LTestValue = "A" & CStr(LTestLoop)
                    LTestValueIC = "C" & CStr(LTestLoop)
                    If Range(LChangedValue).Value = Range(LTestValue).Value Then
                            Range(LChangedValue).Interior.ColorIndex = 3
                            Range(LTestValue).Interior.ColorIndex = 3
                            MsgBox "Please remove duplicate S.Nos highlight in Background Color" & Chr(13)
                            boqvalidationstatus = "F"
                    ElseIf Len(Range(LChangedValueIC).Value) > 0 Then
                        If Range(LChangedValueIC).Value = Range(LTestValueIC).Value Then
                            Range(LChangedValueIC).Interior.ColorIndex = 3
                            Range(LTestValueIC).Interior.ColorIndex = 3
                            MsgBox "Please remove duplicate ItemCode highlight in Background Color" & Chr(13)
                            boqvalidationstatus = "F"
                        End If
                    End If
                End If
                LTestLoop = LTestLoop + 1
            Wend
        End If
        LLoop = LLoop + 1
        Wend
'Duplicate S.No Checking End
If boqvalidationstatus <> "F" Then
    Call UpdateCustomDocPropDT
Else
    Call ResetCustomDocProp
End If
End Function

Function MandatoryColumnsValidate()
LastRow = ActiveSheet.UsedRange.Rows.Count - 1
'LastCol = ActiveSheet.UsedRange.Columns.Count
intRowCount = LastRow - 3
If ThisWorkbook.CustomDocumentProperties("BoQStatus") = "NC" Then
    MsgBox "The Basic BoQ validations are Not complied " & ActiveSheet.Name & " , please correct the issue ", vbCritical
Else
Range("A13:M" & LastRow - 3).Interior.ColorIndex = xlNone
boqvalidationstatus = "T"
'MsgBox ActiveSheet.Cells(4, 1).Interior.ColorIndex
'MsgBox ActiveSheet.Cells(LastRow - 1, 4).Value

'Chk for Domestic for Percentage BoQ
If ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(2, 4).Value <> "INR Only" Then
    MsgBox "Please reset the Conversion type as INR Only for S.No " & ActiveSheet.Cells(2, 1) & Chr(13)
    ActiveSheet.Cells(2, 4).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
End If

'Chk for C1D1 and Discount BoQ Dropdown as Select
If ActiveSheet.Cells(3, 2).Value = vbNullString And ActiveSheet.Cells(LastRow - 1, 4).Value <> vbNullString Then
        MsgBox "Please reset the cell value as Blank for one row before LastRow D Column " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
        ActiveSheet.Cells(LastRow - 1, 4).Interior.ColorIndex = 3
        boqvalidationstatus = "F"
ElseIf ActiveSheet.Cells(3, 2).Value = "C1D1" And ActiveSheet.Cells(LastRow - 1, 4).Value <> "Select" Then
        MsgBox "Please reset the Option C1D1 as Select for one row before LastRow D Column " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
        ActiveSheet.Cells(LastRow - 1, 4).Interior.ColorIndex = 3
        boqvalidationstatus = "F"
ElseIf ActiveSheet.Cells(3, 2).Value = "Discount" And ActiveSheet.Cells(LastRow - 1, 4).Value <> "Select" Then
        MsgBox "Please reset the Option Discount as Select for one row before LastRow D Column " & ActiveSheet.Cells(LastRow - 1, 1) & " in the Sheet " & ActiveSheet.Name
        ActiveSheet.Cells(LastRow - 1, 4).Interior.ColorIndex = 3
        boqvalidationstatus = "F"
End If

'Chk for Heading and Notnull from 4 to 12 rows
For r = 4 To 12
ActiveSheet.Cells(r, 1).Interior.ColorIndex = xlNone
ActiveSheet.Cells(8, 2).Interior.ColorIndex = 20

If r <> 7 And ActiveSheet.Cells(r, 1).Value = vbNullString Then
    MsgBox "Please Enter Valid Data for the Row " & ActiveSheet.Cells(r, 1) & Chr(13)
    ActiveSheet.Cells(r, 1).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
ElseIf r = 8 And ActiveSheet.Cells(r, 1).Value <> "Bidder Name :" Then
    MsgBox "Please Enter the Word 'Bidder Name :' for the  Cell " & ActiveSheet.Cells(r, 1) & Chr(13)
    ActiveSheet.Cells(r, 1).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
ElseIf r = 8 And ActiveSheet.Cells(r, 2).Value <> vbNullString Then
    MsgBox "Please Reset the 'Bidder Name :' as Blank Value " & ActiveSheet.Cells(r, 2) & Chr(13)
    ActiveSheet.Cells(r, 2).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
'Chk for Bidder Status is Empty for MCL
ElseIf r = 8 And ActiveSheet.Cells(3, 3).Value = "MCL" And ActiveSheet.Cells(8, 5).Value <> "Select" Then
        MsgBox "Please reset the Bidder Status as Select for the Cell E8 " & ActiveSheet.Cells(8, 1) & " in the Sheet " & ActiveSheet.Name
        boqvalidationstatus = "F"
End If
Next r

'MsgBox InStr(ActiveSheet.Cells(LastRow - 1, 6).NumberFormat, "%")

For r = 13 To intRowCount
    'For Mandatory Fields Check
    For c = 1 To 55
        If c = 1 Or c = 2 Then
            If ActiveSheet.Cells(r, c).Value = vbNullString Then
                MsgBox "Please Enter Valid Data for the S.No " & ActiveSheet.Cells(r, c) & Chr(13)
                ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            End If
        ElseIf c = 3 And ActiveSheet.Cells(2, 2).Value = "Item Wise" And ActiveSheet.Cells(r, 4).Value <> vbNullString Then
            If ActiveSheet.Cells(r, c).Value = vbNullString Then
                MsgBox "Please Enter Valid Item Code / Item No for the S.No " & ActiveSheet.Cells(r, c) & Chr(13)
                ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            ElseIf Len(ActiveSheet.Cells(r, c).Value) > 100 Then
                MsgBox "The Item Code / Item No should not exceed more than 100 Chars for the S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            End If
        ElseIf c = 4 Or c = 5 Then
            'Chk for Qty
            If ActiveSheet.Cells(r, 4).Value = vbNullString And ActiveSheet.Cells(r, 5).Value <> vbNullString Then
                MsgBox "Please Enter Valid Data for Quantity Columns for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                ActiveSheet.Cells(r, 4).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            'Chk for Units
            ElseIf ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 5).Value = vbNullString Then
                MsgBox "Please Enter Valid Data for Units Columns for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                ActiveSheet.Cells(r, 5).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            'Chk for Units length
            ElseIf ActiveSheet.Cells(r, 4).Value <> vbNullString And Len(ActiveSheet.Cells(r, 5).Value) > 255 Then
                MsgBox "The Units value should not exceed more than 255 Chars for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                ActiveSheet.Cells(r, 5).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            End If
            'Chk for Column H length
            If ActiveSheet.Cells(r, 4).Value <> vbNullString And Len(ActiveSheet.Cells(r, 8).Value) > 255 Then
                MsgBox "The Column H value should not exceed more than 255 Chars for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                ActiveSheet.Cells(r, 8).Interior.ColorIndex = 3
                boqvalidationstatus = "F"
            End If
        ElseIf c = 13 Or c = 53 Or c = 54 Then
            If Not IsNumeric(ActiveSheet.Cells(r, c).Value) And ActiveSheet.Cells(r, c).Value <> vbNullString Then
                    MsgBox "Please Enter Valid Data for Numeric Columns for S.No " & ActiveSheet.Cells(r, c) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
            ElseIf (c = 53 Or c = 54) And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, c).Value = vbNullString Then
                    MsgBox "Please Enter Valid Data for Numeric Columns for S.No " & ActiveSheet.Cells(r, c) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
            ElseIf c = 13 Then
                If ActiveSheet.Cells(r, 4).Value = vbNullString And ActiveSheet.Cells(r, 13).Value = vbNullString And ActiveSheet.Cells(r, c).Locked <> True Then
                    c = c + 1
                    MsgBox "Please set the Rate as Blank value or Protect the Cell for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, 13).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 13).Value = vbNullString And ActiveSheet.Cells(r, c).Locked = True Then
                    c = c + 1
                    MsgBox "Please set the Rate as Blank value or UnProtect the Cell for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, 13).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 13).Value > 0 And ActiveSheet.Cells(r, c).Locked = True Then
                    c = c + 1
                    MsgBox "Please set the Rate as Blank value or UnProtect the Cell for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, 13).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 13).Value <> vbNullString And ActiveSheet.Cells(r, c).Locked <> True Then
                    c = c + 1
                    MsgBox "Please set the Rate as Blank value or Protect the Cell for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, 13).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 5).Value <> vbNullString Then
                    ActiveSheet.Cells(r, 13).Interior.ColorIndex = 20
                End If
            End If
        ElseIf c <> 13 And c <> 53 And c <> 54 Then
            'If IsNumeric(ActiveSheet.Cells(r, c).Value) And ActiveSheet.Cells(r, c).Value <> vbNullString Then
                'MsgBox "Please Enter Valid Data for TEXT Columns for S.No " & ActiveSheet.Cells(r, c) & Chr(13)
                'ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                'boqvalidationstatus = "F"
            If c = 6 Then
                If ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, 6).Value = vbNullString Then
                    MsgBox "Please Enter Valid Estimate Rate for the S.No " & ActiveSheet.Cells(r, c) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                End If
            ElseIf c = 11 Then
                If ActiveSheet.Cells(r, 11).Value = vbNullString And ActiveSheet.Cells(r, 4).Value <> vbNullString Then
                    MsgBox "Please Choose Valid Convertion Type for the S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(2, 2).Value = "Item Rate" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, c).Value = "Partial Conversion" Then
                    MsgBox "Please reset the Conversion type as Full Conversion for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(2, 4).Value = "INR Only" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, c).Value = "Partial Conversion" Then
                    MsgBox "Please reset the Conversion type as Full Conversion for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(2, 2).Value <> "Percentage" And ActiveSheet.Cells(2, 4).Value = "INR Only" And ActiveSheet.Cells(r, c).Value = "Partial Conversion" Then
                    MsgBox "Please reset Convertion Type as Full Convert for the S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                End If
            ElseIf c = 12 Then
                If ActiveSheet.Cells(r, 12).Value = vbNullString And ActiveSheet.Cells(r, 4).Value <> vbNullString Then
                    MsgBox "Please Choose Valid Currency Type for the S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(2, 4).Value = "INR Only" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, c).Value <> "INR" Then
                    MsgBox "Please reset the Currency Type as INR for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(2, 2).Value <> "Percentage" And ActiveSheet.Cells(2, 4).Value = "INR Only" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, c).Value <> "INR" Then
                    MsgBox "Please reset the Currency Type as INR for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(2, 2).Value <> "Percentage" And ActiveSheet.Cells(2, 4).Value <> "INR Only" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, c - 1).Value = "Partial Conversion" And ActiveSheet.Cells(r, c).Value = "INR" Then
                    MsgBox "Please Enter valid Currency type other than INR for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                ElseIf ActiveSheet.Cells(2, 2).Value <> "Percentage" And ActiveSheet.Cells(2, 4).Value <> "INR Only" And ActiveSheet.Cells(r, 4).Value <> vbNullString And ActiveSheet.Cells(r, c).Value <> "INR" And InStr(ActiveSheet.Cells(2, 5).Value, ActiveSheet.Cells(r, c).Value) <= 0 Then
                    MsgBox "Please Enter valid Currency from the Master List for S.No " & ActiveSheet.Cells(r, 1) & Chr(13)
                    ActiveSheet.Cells(r, c).Interior.ColorIndex = 3
                    boqvalidationstatus = "F"
                End If
            End If
        End If
    Next c
Next r
 
 ActiveSheet.Cells(LastRow - 1, 4).Interior.ColorIndex = xlNone
 ActiveSheet.Cells(LastRow - 1, 5).Interior.ColorIndex = xlNone
 ActiveSheet.Cells(LastRow - 1, 6).Interior.ColorIndex = xlNone
 ActiveSheet.Cells(LastRow - 1, 53).Interior.ColorIndex = xlNone
 ActiveSheet.Cells(LastRow - 2, 53).Interior.ColorIndex = xlNone
 
'Chk for Percentage Type Option is Empty for Percentage BoQ
If ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 5).Value <> "Select" Then
    MsgBox "Please reset the Percentage Type Option as Select for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 1, 5).Interior.ColorIndex = 3
    Call ResetCustomDocProp
    Exit Function
'Chk for Percentage Rate is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 6).Value <> vbNullString Then
    MsgBox "Please set the Percentage Rate Cell should be Blank for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 1, 6).Interior.ColorIndex = 3
    Call ResetCustomDocProp
    Exit Function
'Chk for Percentage Rate Format is Percentage for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 5).Value = "Select" And InStr(ActiveSheet.Cells(LastRow - 1, 6).NumberFormat, "%") <= 0 Then
    MsgBox "Please Set the Percentage Rate Cell should be format as % for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 1, 6).Interior.ColorIndex = 3
    Call ResetCustomDocProp
    Exit Function
'Chk for Quoted Percentage Rate is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 53).Value = vbNullString Then
    MsgBox "Please set the Formulla for the Quoted Percentage Rate in Figure Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 1, 53).Interior.ColorIndex = 3
    Call ResetCustomDocProp
    Exit Function
'Chk for Estimated Percentage Rate is Empty for Percentage BoQ
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 2, 53).Value = vbNullString Then
    MsgBox "Please set the Formulla for the Estimated Percentage Rate in Figure Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 2, 53).Interior.ColorIndex = 3
    Call ResetCustomDocProp
    Exit Function

Else
    If ActiveSheet.Cells(LastRow - 1, 4).Value <> vbNullString Then
        ActiveSheet.Cells(LastRow - 1, 4).Interior.ColorIndex = 20
    End If
    ActiveSheet.Cells(LastRow - 1, 5).Interior.ColorIndex = 20
    ActiveSheet.Cells(LastRow - 1, 6).Interior.ColorIndex = 20
End If
    
'Chk for Last 3 Rows
If ActiveSheet.Cells(LastRow - 2, 53).Value = vbNullString Then
    MsgBox "Please Enter the valid formulla for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 2, 53).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
ElseIf ActiveSheet.Cells(2, 2).Value = "Percentage" And ActiveSheet.Cells(LastRow - 1, 53).Value = vbNullString Then
    MsgBox "Please Enter the valid formulla for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 1, 53).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
ElseIf ActiveSheet.Cells(LastRow - 2, 1).Value <> "Total in Figures" Then
    MsgBox "Please Enter the value as 'Total in Figures' for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 2, 1).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
ElseIf ActiveSheet.Cells(LastRow - 1, 1).Value <> "Quoted Rate in Figures" Then
    MsgBox "Please Enter the value as 'Quoted Rate in Figures' for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow - 1, 1).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
ElseIf ActiveSheet.Cells(LastRow, 1).Value <> "Quoted Rate in Words" Then
    MsgBox "Please Enter the value as 'Quoted Rate in Words' for Cell Highlighted in Red Color " & Chr(13)
    ActiveSheet.Cells(LastRow, 1).Interior.ColorIndex = 3
    boqvalidationstatus = "F"
End If

'Check 2nd and 3rd Row should be Hide
If ActiveSheet.Cells(2, 1).EntireRow.Hidden = False Then
    MsgBox "Please Hide the 2nd Row, This Row only for System Use "
    boqvalidationstatus = "F"
ElseIf ActiveSheet.Cells(3, 1).EntireRow.Hidden = False Then
    MsgBox "Please Hide the 3rd Row, This Row only for System Use "
    boqvalidationstatus = "F"
End If


If boqvalidationstatus <> "F" Then
    Call UpdateCustomDocPropDT
Else
    Call ResetCustomDocProp
End If
End If
End Function



Attribute VB_Name = "Module7"
Function DuplicateSerialNo()
'Duplicate S.No Checking Start
LastRow = ActiveSheet.UsedRange.Rows.Count - 1
'LastCol = ActiveSheet.UsedRange.Columns.Count
intRowCount = LastRow - 3
Range("A13:L" & LastRow - 3).Interior.ColorIndex = xlNone
        boqvalidationstatus = "T"
        LLoop = 13
        While LLoop <= intRowCount
        LChangedValue = "A" & CStr(LLoop)
        If Len(Range(LChangedValue).Value) > 0 Then
            LTestLoop = LLoop
            While LTestLoop <= intRowCount
                If LLoop <> LTestLoop Then
                    LTestValue = "A" & CStr(LTestLoop)
                    If Range(LChangedValue).Value = Range(LTestValue).Value Then
                            Range(LChangedValue).Interior.ColorIndex = 3
                            Range(LTestValue).Interior.ColorIndex = 3
                            MsgBox "Please remove duplicate S.Nos highlight in Background Color" & Chr(13)
                            boqvalidationstatus = "F"
                    End If
                End If
                LTestLoop = LTestLoop + 1
            Wend
        End If
        LLoop = LLoop + 1
        Wend
'Duplicate S.No Checking End
If boqvalidationstatus <> "F" Then
    Call UpdateCustomDocPropDT
Else
    Call ResetCustomDocProp
End If
End Function

Sub HelpButton()
msgmore = Chr(13) & "For more help please refer How to prepare BoQ Document" & Chr(13) & Chr(13)

If ActiveSheet.Cells(2, 1).Value = vbNullString Or ActiveSheet.Cells(2, 2).Value = vbNullString Then 'for Dept
    MsgBox "This BoQ Template does't support our application. Please download the Latest BoQ Ver3.0 from the Downloads section of eProc Portal", vbInformation, "GePNIC BoQ Validation"
    ActiveWorkbook.Close
ElseIf ActiveSheet.ProtectContents = False And ActiveSheet.Cells(2, 1).Value = "BoQ_Ver3.0" Then 'for Dept
    msg = "Warning messages for Dept User: " & Chr(13) & Chr(13)
    msg1 = "1. This BoQ only support GePNIC Ver1.09.03 or above " & Chr(13)
    msg2 = "2. Do not DELETE or INSERT any columns between A to BC " & Chr(13)
    msg3 = "3. The Columns between A to BC, if any of the column is not required simply HIDE it." & Chr(13)
    msg4 = "4. The Columns A to L will be read at the time of publish the tender " & Chr(13)
    msg5 = "5. The Columns M to AZ for Bidders, It will be read at the time of Price bid opening " & Chr(13)
    msg6 = "6. Do not DELETE or MODIFY the command buttons " & Chr(13)
    msg7 = "7. The Rows 1,2 and 3 for System use , Do not alter the values " & Chr(13)
    msg8 = "8. For SAVE the BoQ Click File => Save => OK " & Chr(13)
    MsgBox msg & msg1 & msg2 & msg3 & msg4 & msg5 & msg6 & msg7 & msg8 & msgmore, vbInformation, "GePNIC BoQ Validation"
ElseIf ActiveSheet.ProtectContents = True And ActiveSheet.Cells(2, 1).Value = "BoQ_Ver3.0" And ThisWorkbook.CustomDocumentProperties("BoQStatus") <> "NC" Then 'for Bidders
    msg = "Warning messages for Bidder: " & Chr(13) & Chr(13)
    'msg1 = "1. Green Cells are for Data Entry " & Chr(13)
    msg2 = "2. Do not use CUT or COPY or PASTE while Data Entry" & Chr(13)
    msg3 = "3. Do not MODIFY the boq Sheetname or Structure or any other protected cells" & Chr(13)
    msg4 = "4. Any violation on this boq will be subjected to rejection of the bid" & Chr(13)
    msg5 = "5. For SAVE the BoQ Click File => Save => OK " & Chr(13)
    MsgBox msg & msg1 & msg2 & msg3 & msg4 & msg5 & msgmore, vbInformation, "GePNIC BoQ Validation"
ElseIf ActiveSheet.ProtectContents = True And ActiveSheet.Cells(2, 1).Value = "BoQ_Ver3.0" And ThisWorkbook.CustomDocumentProperties("BoQStatus") = "NC" Then 'for Bidders
    msg = "Warning messages for Bidder: " & Chr(13) & Chr(13)
    'msg1 = "1. Green Cells are for Data Entry " & Chr(13)
    msg1 = "1. Please enter the values in required cells " & Chr(13)
    msg2 = "2. Do not use CUT or COPY or PASTE while Data Entry" & Chr(13)
    msg3 = "3. Do not MODIFY the boq Sheetname or Structure or any other protected cells" & Chr(13)
    msg4 = "4. Any violation on this boq will be subjected to rejection of the bid" & Chr(13)
    msg5 = "5. For SAVE the BoQ Click File => Save => OK " & Chr(13)
    MsgBox msg & msg1 & msg2 & msg3 & msg4 & msg5 & msgmore, vbInformation, "GePNIC BoQ Validation"
End If
End Sub
Sub PrintButton()
ActiveWindow.SelectedSheets.PrintPreview
End Sub
Attribute VB_Name = "Module8"


'This function will work upto 99,99,99,99,999.99

Option Explicit
'-- Updated on II/11/2011. Updated up to 9999 Thousan crores
'-- Modified as per requirement and updated as on 15/09/2011

Function SpellNumber123(wils As String, kapil As Double)

'Attribute Macro4.VB_Description = "Macro recorded 05/01/01 by Shailesh Agrawal"
'Attribute Macro4.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Macro4"
' Your comments and Feed back will be most appreciated.
' Macro4 Macro
' Macro recorded 05/01/2001 by Shailesh Agrawal Associates
' This macro is available free of cost at www.CharteredValuer.com
' For Further inquiry feel free to contact on shashi@CharteredValuer.com
' This is distributed as freeware. We do not take any responsiblity for any problem
' due to this macro
' Updated to work up 9999 Thousand Crores of Indian Rupees. by KSR on 3/09/2011

Dim len1, len2, p_exist, total_len, i(10), from1, to1, from2, to2 As Integer
Dim l_str, r_str, c_l_str, c_r_str, Dec_Str, Tmp_Str, total_str, a(10), urwords, app_extra As String
Dim c(10), l(10) As Double



Dim words(100) As String
 words(0) = "Zero"
 words(1) = "One"
 words(2) = "Two"
 words(3) = "Three"
 words(4) = "Four"
 words(5) = "Five"
 words(6) = "Six"
 words(7) = "Seven"
 words(8) = "Eight"
 words(9) = "Nine"
 words(10) = "Ten"
 words(11) = "Eleven"
 words(12) = "Twelve"
 words(13) = "Thirteen"
 words(14) = "Fourteen"
 words(15) = "Fifteen"
 words(16) = "Sixteen"
 words(17) = "Seventeen"
 words(18) = "Eighteen"
 words(19) = "Nineteen"
 words(20) = "Twenty"
 words(21) = "Twenty One"
 words(22) = "Twenty Two"
 words(23) = "Twenty Three"
 words(24) = "Twenty Four"
 words(25) = "Twenty Five"
 words(26) = "Twenty Six"
 words(27) = "Twenty Seven"
 words(28) = "Twenty Eight"
 words(29) = "Twenty Nine"
 words(30) = "Thirty"
 words(31) = "Thirty One"
 words(32) = "Thirty Two"
 words(33) = "Thirty Three"
 words(34) = "Thirty Four"
 words(35) = "Thirty Five"
 words(36) = "Thirty Six"
 words(37) = "Thirty Seven"
 words(38) = "Thirty Eight"
 words(39) = "Thirty Nine"
 words(40) = "Forty"
 words(41) = "Forty One"
 words(42) = "Forty Two"
 words(43) = "Forty Three"
 words(44) = "Forty Four"
 words(45) = "Forty Five"
 words(46) = "Forty Six"
 words(47) = "Forty Seven"
 words(48) = "Forty Eight"
 words(49) = "Forty Nine"
 words(50) = "Fifty"
 words(51) = "Fifty One"
 words(52) = "Fifty Two"
 words(53) = "Fifty Three"
 words(54) = "Fifty Four"
 words(55) = "Fifty Five"
 words(56) = "Fifty Six"
 words(57) = "Fifty Seven"
 words(58) = "Fifty Eight"
 words(59) = "Fifty Nine"
 words(60) = "Sixty"
 words(61) = "Sixty One"
 words(62) = "Sixty Two"
 words(63) = "Sixty Three"
 words(64) = "Sixty Four"
 words(65) = "Sixty Five"
 words(66) = "Sixty Six"
 words(67) = "Sixty Seven"
 words(68) = "Sixty Eight"
 words(69) = "Sixty Nine"
 words(70) = "Seventy"
 words(71) = "Seventy One"
 words(72) = "Seventy Two"
 words(73) = "Seventy Three"
 words(74) = "Seventy Four"
 words(75) = "Seventy Five"
 words(76) = "Seventy Six"
 words(77) = "Seventy Seven"
 words(78) = "Seventy Eight"
 words(79) = "Seventy Nine"
 words(80) = "Eighty"
 words(81) = "Eighty One"
 words(82) = "Eighty Two"
 words(83) = "Eighty Three"
 words(84) = "Eighty Four"
 words(85) = "Eighty Five"
 words(86) = "Eighty Six"
 words(87) = "Eighty Seven"
 words(88) = "Eighty Eight"
 words(89) = "Eighty Nine"
 words(90) = "Ninety"
 words(91) = "Ninety One"
 words(92) = "Ninety Two"
 words(93) = "Ninety Three"
 words(94) = "Ninety Four"
 words(95) = "Ninety Five"
 words(96) = "Ninety Six"
 words(97) = "Ninety Seven"
 words(98) = "Ninety Eight"
 words(99) = "Ninety Nine"
 words(100) = "One Hundred"

Dim Minus As String
Dim GHAU As String
Dim CRORE As String
Dim LAKH As String
Dim thousand As String, ERUPT As Variant
Dim HUNDRED As String
'==========================================
Dim AJEB1   As Variant
Dim BINDRZ  As Variant
Dim BOROS   As Variant, BORIS As Variant
Dim BORUS   As Variant, CYRUS As Variant, CYROS1 As Variant
Dim DOZAL   As Variant
Dim GRIPP1  As String
Dim GRIPP2  As Long
Dim GRIPP3  As Variant, PAISE As String
Dim GXZP0   As String, tmpand As String, GXZP99 As String
Dim GXZP1   As String, GXZP2 As String, GXZP3 As String
Dim GXZP4   As String, GXZP5 As String, GXZP6 As String, GXZP7 As String
Dim HARP1   As Variant, HARP2 As Variant, HARP3 As Variant
Dim HARP4   As Variant, HARP5 As Variant, HARP6 As Variant
Dim HARP7   As Variant
Dim JANTI   As Variant, JANTI1 As Variant, JANTI2 As Variant, JANTI3 As Variant
Dim KARANT1 As Variant, KARANT2 As Variant, KARANT3 As Variant
Dim KARANT4 As Variant, KARANT5 As Variant, KARANT6 As Variant
Dim KARANT7 As Variant, KARANT8 As Variant, KARANT9 As Variant
Dim KARANT10 As Variant
Dim LINZUR1 As Variant, LINZUR2 As Variant, LINZUR3 As Variant
Dim LINZUR4 As Variant, LINZUR5 As Variant, LINZUR  As Variant
Dim PAST1   As Variant, PAST2 As Variant, PAST3 As Variant
Dim PAST4   As Variant, PAST5 As Variant, PAST12 As Variant
Dim RABJI1  As String
Dim XORE6   As String
Dim XORE7   As Variant, XORE8 As Variant
Dim XYME    As Variant
Dim XYZ     As String, FLITIES As Variant
Dim ZZART   As Variant
GXZP6 = " "
GXZP7 = " "

'-- Limits in place 2004-09-23 ...
If kapil = 0 Then
  SpellNumber123 = wils & " Zero Only"
  Exit Function
End If
If kapil > 99999999999.99 Then
  SpellNumber123 = "High Value"
  Exit Function
End If

BINDRZ = kapil
PAST1 = BINDRZ - Int(BINDRZ)
PAST12 = Round((PAST1 * 100), 0)

PAST2 = Int(PAST12)
PAST3 = Str(PAST2)
PAST4 = Val(PAST3)
JANTI = Str(Int(BINDRZ))
JANTI1 = Val(JANTI)
JANTI2 = Int(JANTI1)
AJEB1 = Str(JANTI2)
CRORE = " Crore "
LAKH = " Lakh "
thousand = " Thousand "
HUNDRED = " Hundred "

tmpand = " "
GXZP0 = " "
GXZP1 = " "
GXZP2 = " "
GXZP3 = " "
GXZP4 = " "
GXZP5 = " "
GXZP6 = " "
GXZP7 = " "
XYZ = "&"

If (Left(Trim(AJEB1), 1)) = "-" Then
    RABJI1 = Abs(Trim(AJEB1))
    Minus = " Minus"
    'MsgBox RABJI1
Else
    RABJI1 = Trim(AJEB1)
End If

If Len(RABJI1) > 10 Then
 KARANT1 = Right(RABJI1, 11)
 KARANT2 = Right(RABJI1, 10)
 KARANT3 = Val(KARANT1) - Val(KARANT2)
 KARANT4 = KARANT3 / 10000000000#
 KARANT5 = Str(KARANT4)
 KARANT6 = Right(KARANT5, 2)
 KARANT7 = Val(KARANT6)
 If KARANT7 > 0 Then
   KARANT10 = words(KARANT7) + " Thousand "
 Else
   KARANT8 = ""
'   CRORE = ""
   GXZP99 = ""
 End If
Else
' KARANT8 = ""
' CRORE = ""
 GXZP0 = ""
End If

If Len(RABJI1) > 8 Then
 KARANT1 = Right(RABJI1, 10)
 KARANT2 = Right(RABJI1, 9)
 KARANT3 = Val(KARANT1) - Val(KARANT2)
 KARANT4 = KARANT3 / 1000000000
 KARANT5 = Str(KARANT4)
 KARANT6 = Right(KARANT5, 2)
 KARANT7 = Val(KARANT6)
 If KARANT7 > 0 Then
   KARANT9 = words(KARANT7) + " Hundred "
 Else
   KARANT8 = ""
'   CRORE = ""
   GXZP0 = ""
 End If
Else
' KARANT8 = ""
' CRORE = ""
 GXZP0 = ""
End If

If Len(RABJI1) > 7 Then
 KARANT1 = Right(RABJI1, 9)
 KARANT2 = Right(RABJI1, 7)
 KARANT3 = Val(KARANT1) - Val(KARANT2)
 KARANT4 = KARANT3 / 10000000
 KARANT5 = Str(KARANT4)
 KARANT6 = Right(KARANT5, 2)
 KARANT7 = Val(KARANT6)
 If KARANT7 > 0 Then
    If GXZP0 = " " Then
        tmpand = " and "
    End If
   KARANT8 = tmpand + words(KARANT7)
 Else
   KARANT8 = ""
'   CRORE = ""
'   GXZP1 = ""
 End If
Else
 KARANT8 = ""
 CRORE = ""
 GXZP1 = ""
End If
If Len(RABJI1) > 5 Then
 LINZUR = Right(RABJI1, 5)
 LINZUR2 = Val(RABJI1) - Val(LINZUR)
 LINZUR3 = LINZUR2 / 100000
 XORE6 = Str(LINZUR3)
 XORE7 = Right(XORE6, 2)
 XORE8 = Val(XORE7)
 If XORE8 > 0 Then
   LINZUR4 = words(XORE8)
 Else
   LINZUR4 = ""
   LAKH = ""
   GXZP2 = ""
 End If
   Else
   LINZUR4 = ""
   LAKH = ""
   GXZP2 = ""
End If
If Len(RABJI1) > 3 Then
 HARP1 = Right(RABJI1, 3)
 HARP2 = Val(RABJI1) - Val(HARP1)
 HARP3 = HARP2 / 1000
 HARP4 = Str(HARP3)
 HARP5 = Right(HARP4, 2)
 HARP6 = Val(HARP5)
 If HARP6 > 0 Then
   HARP7 = words(HARP6)
 Else
   HARP7 = ""
   thousand = ""
   GXZP3 = ""
 End If
Else
 HARP7 = ""
 thousand = ""
 GXZP3 = ""
End If
If Len(RABJI1) > 2 Then
 BORIS = Right(RABJI1, 3)
 CYRUS = Left(BORIS, 1)
 CYROS1 = Val(CYRUS)
 If CYROS1 > 0 Then
   ERUPT = words(CYROS1)
 Else
   ERUPT = ""
   HUNDRED = ""
   GXZP4 = ""
 End If
Else
 ERUPT = ""
 HUNDRED = ""
 GXZP4 = ""
End If
If Len(RABJI1) > 1 Then
 ZZART = Right(RABJI1, 2)
 DOZAL = Val(ZZART)
 If DOZAL > 0 Then
   FLITIES = words(DOZAL)
 Else
   FLITIES = ""
   XYZ = ""
 End If
Else
 FLITIES = ""
 XYZ = ""
End If
If Len(RABJI1) < 2 And Len(RABJI1) > 0 Then
 GRIPP1 = Left(RABJI1, 1)
 GRIPP2 = Val(GRIPP1)
 XYZ = ""
 GXZP5 = ""
 GXZP6 = ""
 If GRIPP2 > 0 Then
   GRIPP3 = words(GRIPP2)
 Else
   GRIPP3 = ""
 End If
Else
 GRIPP3 = ""
End If
If Len(RABJI1) < 3 And Len(RABJI1) > 0 Then
 XYZ = ""
 GXZP5 = ""
 GXZP6 = ""
End If
If PAST4 > 0 Then
    PAST5 = words(PAST4)
 Else
 PAST5 = ""
 PAISE = ""
 GXZP7 = ""
End If
XYME = Val(AJEB1)

    ' iocl code start
    'PAISE = "Point"
 Dim wordss(100) As String
 wordss(0) = "Zero"
 wordss(1) = "One"
 wordss(2) = "Two"
 wordss(3) = "Three"
 wordss(4) = "Four"
 wordss(5) = "Five"
 wordss(6) = "Six"
 wordss(7) = "Seven"
 wordss(8) = "Eight"
 wordss(9) = "Nine"

l_str = ""
r_str = ""
urwords = ""
c_l_str = ""
c_r_str = ""

total_str = kapil

p_exist = InStr(total_str, ".")
Dec_Str = "Zero "
Tmp_Str = ""
total_len = Len(total_str)
 
If p_exist > 0 Then
    from1 = 1
    to1 = p_exist - 1
    from2 = p_exist + 1
    to2 = total_len
    l_str = Mid(total_str, from1, to1)
    r_str = Mid(total_str, from2, to2)
Else
    from1 = 1
    to1 = total_len
    l_str = Mid(total_str, from1, to1)
    r_str = ""
End If
 
If l_str <> "" Then
    len1 = Len(l_str)
    c(1) = CDbl(l_str)
    Do Until len1 = 0
        l(0) = c(1) \ 10
        l(1) = c(1) Mod 10
        c(1) = l(0)
        a(3) = CStr(l(1))
        urwords = wordss(a(3))
        c_l_str = urwords + " " + c_l_str
        len1 = len1 - 1
    Loop
    c_l_str = c_l_str + "Point "
Else
    c_l_str = ""
End If

If r_str <> "" Then
    len2 = Len(r_str)
    c(1) = CDbl(r_str)
    Do Until len2 = 0
        l(0) = c(1) \ 10
        l(1) = c(1) Mod 10
        c(1) = l(0)
        a(3) = CStr(l(1))
        urwords = wordss(a(3))
        c_r_str = urwords + " " + c_r_str
        len2 = len2 - 1
    Loop
Else
    c_r_str = ""
End If

len2 = Len(r_str)
If len2 = 1 Then
    app_extra = "Zero"
ElseIf len2 = 0 Then
    app_extra = "Zero Zero"
Else
    app_extra = ""
End If

If wils = "INR" Then
PAISE = c_r_str + app_extra

GHAU = wils + Minus + Trim(KARANT10) + GXZP99 + " " + Trim(KARANT9) + GXZP0 + " " + Trim(KARANT8) + GXZP1 + Trim(CRORE) _
  + GXZP1 + Trim(LINZUR4) + GXZP2 + Trim(LAKH) + GXZP2 _
  + Trim(HARP7) + GXZP3 + Trim(thousand) + GXZP3 _
  + Trim(ERUPT) + GXZP4 + Trim(HUNDRED) + GXZP5 + XYZ _
  + GXZP4 + Trim(FLITIES) + GXZP6 + Trim(GRIPP3) _
  + GXZP7 + " and Paise " + Trim(PAISE) + " Only"
  '+ GXZP7 + "Paise " + Trim(PAISE) + GXZP7 + Trim(PAST5) + " Only"

Else
    PAISE = c_l_str + c_r_str + app_extra
    GHAU = wils + " " + Minus + PAISE + " Only"
End If
SpellNumber123 = GHAU
End Function




Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Const WelcomePage = "Macros"

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
'Author       : Ken Puls (www.excelguru.ca [1])
'Macro Purpose: Ensure that the macro instruction sheet is saved as the only
'               visible worksheet in the workbook
    Dim ws As Worksheet
    Dim wsActive As Worksheet
    Dim vFilename As Variant
    Dim bSaved As Boolean
    
    Call ValidateAllSheets

    'Turn off screen flashing
    With Application
        .EnableEvents = False
        .ScreenUpdating = False
    End With

    'Record active worksheet
    Set wsActive = ActiveSheet

    'Save workbook directly or prompt for saveas filename
    If SaveAsUI = True Then
        vFilename = Application.GetSaveAsFilename( _
                    fileFilter:="Excel Files (*.xls*), *.xls*")
        If CStr(vFilename) = "False" Then
            bSaved = False
        Else
            'Save the workbook using the supplied filename
            Call HideAllSheets
            ThisWorkbook.SaveAs vFilename
            Application.RecentFiles.Add vFilename
            Call ShowAllSheets
            bSaved = True
        End If
    Else
        'Save the workbook
        Call HideAllSheets
        ThisWorkbook.Save
        Call ShowAllSheets
        bSaved = True
    End If

    'Restore file to where user was
    wsActive.Activate

    'Restore screen updates
    With Application
        .ScreenUpdating = True
        .EnableEvents = True
    End With
    
    'Set application states appropriately
    If bSaved Then
        ThisWorkbook.Saved = True
        Cancel = True
    Else
        Cancel = True
    End If

End Sub

Private Sub Workbook_Open()
'Author       : Ken Puls (www.excelguru.ca [2])
'Macro Purpose: Unhide all worksheets since macros are enabled
    Application.ScreenUpdating = False
    Call ShowAllSheets
    Application.ScreenUpdating = True
    ThisWorkbook.Saved = True
End Sub

Private Sub HideAllSheets()
'Author       : Ken Puls (www.excelguru.ca [3])
'Macro Purpose: Hide all worksheets except the macro welcome page

    Dim ws As Worksheet

    Worksheets(WelcomePage).Visible = xlSheetVisible

    For Each ws In ThisWorkbook.Worksheets
        If Not ws.Name = WelcomePage Then ws.Visible = xlSheetVeryHidden
    Next ws

    Worksheets(WelcomePage).Activate
End Sub

Private Sub ShowAllSheets()
'Author       : Ken Puls (www.excelguru.ca [4])
'Macro Purpose: Show all worksheets except the macro welcome page

    Dim ws As Worksheet

    For Each ws In ThisWorkbook.Worksheets
        If Not ws.Name = WelcomePage Then ws.Visible = xlSheetVisible
    Next ws

    Worksheets(WelcomePage).Visible = xlSheetVeryHidden
End Sub
Private Sub Workbook_BeforeClose(Cancel As Boolean)
Call ValidateAllSheets
End Sub

Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
'Call allinone
End Sub

' InQuest injected base64 decoded content
' 'njQ
' Z+a:

INQUEST-PP=macro
