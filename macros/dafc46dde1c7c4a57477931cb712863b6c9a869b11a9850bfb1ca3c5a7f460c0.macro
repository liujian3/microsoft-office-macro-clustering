Attribute VB_Name = "Module1"


'Option Explicit
 Private ora As Date, Data As Date
 
 
 Option Private Module
Private mlCalcStatus As Long
Private mbInSpeed As Boolean

Public Sub speed()
   On Error Resume Next
   If Not mbInSpeed Then

     Application.DisplayStatusBar = False
     Application.PrintCommunication = False
    Application.ErrorCheckingOptions.BackgroundChecking = False
      Application.ScreenUpdating = False
      Application.DisplayAlerts = False
      Application.EnableEvents = False
      mlCalcStatus = Application.Calculation
      Application.Calculation = xlCalculationManual 'ATTENZIONE valutare se NON disabilitare:
                                         'NON VENGONO AGGIORNATE LE FORMULE! sugli SHEET!!
      mbInSpeed = True
   Else
      'we are already in speed - don't do the settings again
   End If
End Sub

Public Sub unspeed()
   On Error Resume Next
   Application.ScreenUpdating = True
   Application.DisplayAlerts = True
   Application.EnableEvents = True
     Application.DisplayStatusBar = True
     Application.PrintCommunication = True
    Application.ErrorCheckingOptions.BackgroundChecking = True
   If mbInSpeed Then
      Application.Calculation = mlCalcStatus
 '  Else
      'this shouldn't be happening - put calc to auto - safest mode
      Application.Calculation = xlCalculationAutomatic
   End If
   mbInSpeed = False
End Sub

Sub Agg_Quotaz()

Dim adesso As String
 Dim iminuti As Byte
 
 'scarica, se nn gi|fffd| presenti, i coefficienti di indicizzazione
 'Da scommentare quando serve!!!!!!!!
 '<++++++++++++++
 Scarica_Coeff
  '<++++++++++++++
'  Aggiorna_Stime_INF
  
 'XXXXXXXXXXXX si ottiene una volta per tutti la data di quotazione dell'ultimo
'XXXXXXXXXXXX giorno di borsa lavorativo a cui si riferisce l'aggiornamento: la data di quotazione non e'
'XXXXXXXXXXXX la data dell'esecuzione dell'aggiornamento e potrebbe non essere valida per tutti i titoli i.e.
'XXXXXXXXXXXX titolo che nello specifico giorno non ha avuto mercato.
 
adesso = Now()
Data = Mid(adesso, 1, 10)

iminuti = InStr(12, adesso, ".")
ora = Mid(adesso, 12, iminuti - 12 + 3)

If Weekday(Data) = 7 Then
Data = Data - 1
ora = "20.00"
Else
If Weekday(Data) = 1 Then
Data = Data - 2
ora = "20.00"
Else
If (ora >= "0.00" And ora < "9.20") Then
Data = Data - 1
End If
End If
End If


Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(1, 5) = Data
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(1, 5).NumberFormat = "[$-410]d-mmm-yy;@"
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "@"           'la colonne I viene formattata come testo
 
Debug.Print " Quotaz_01 Intesa Sanpaolo ORD IT0000072618"
Quotaz_01 'Intesa Sanpaolo ORD IT0000072618

Debug.Print "Quotaz_02 'Siemens AG  DE0007236101"
Quotaz_02 'Siemens AG  DE0007236101


'Debug.Print "Quotaz_39 'BTP-01ST 2019 4,25% IT0004489610"
'Quotaz_39 'BTP-01ST 2019 4,25% IT0004489610


'Debug.Print "Quotaz_13 'Infrastrutture `04- 31.7.19 2,25% INF   IT0003621452"
'Quotaz_13 'Infrastrutture `04- 31.7.19 2,25% INF   IT0003621452


'******************++++***********************

Debug.Print "Quotaz_27 'Eurizon Azioni Pmi America  IT0001007274"
Quotaz_27 'Eurizon Azioni Pmi America  IT0001007274

Debug.Print "Quotaz_28 'Etf Ishares S&P 500 (Azionario) IE0031442068"
Quotaz_28 'Etf Ishares S&P 500 (Azionario) IE0031442068

Debug.Print "Quotaz_29 'Etf Lyxor Dj Euro Stoxx 50 (Azionario)  FR0007054358"
Quotaz_29 'Etf Lyxor Dj Euro Stoxx 50 (Azionario)  FR0007054358

Debug.Print "Quotaz_30 'Etf Lyxor S&P/MIB MASTER    FR0010010827"
Quotaz_30 'Etf Lyxor S&P/MIB MASTER    FR0010010827

Debug.Print "Quotaz_31 'Etf Powershares Eqqq Fund (NASDA 100)   IE0032077012"
Quotaz_31 'Etf Powershares Eqqq Fund (NASDA 100)   IE0032077012

Debug.Print "Quotaz_32 'ETF L.CHINA ENTERPR FR0010204081"
Quotaz_32 'ETF L.CHINA ENTERPR FR0010204081

Debug.Print "Quotaz_33 'ETF L.EUROMTS 1-3Y  FR0010222224"
Quotaz_33 'ETF L.EUROMTS 1-3Y  FR0010222224

Debug.Print "Quotaz_34 'Eurizon Focus Tesoreria Euro-Classe A   IT0001078093"
Quotaz_34 'Eurizon Focus Tesoreria Euro-Classe A   IT0001078093

Debug.Print "Quotaz_35 'ETF Lyxor Euro Cash FR0010510800"
Quotaz_35 'ETF Lyxor Euro Cash FR0010510800


addStorico
End Sub






'Private Sub Quotaz_01()  'Intesa Sanpaolo ORD IT0000072618
Sub Quotaz_01()  'Intesa Sanpaolo ORD IT0000072618
Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/azioni/dati-completi.html?isin=IT0000072618&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText

If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(9).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(9).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(9).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1
Else
 Prezzo_Uff = 0 * 1
End If

 '*****************************************************************************
 '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 
 'Riga = ""
'stringa = ""
'Open "D:\Appoggio\IntesaSPaoloProva.txt" For Input As #1
'Do Until EOF(1)
 '  Line Input #1, Riga
 '  stringa = stringa & Riga
'Loop
'Close #1 'Chiusura File
'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 'trova la cella dove aggiornare il prezzo nello sheet "Aggiornamento" relativamente all'ISIN specificato
r = Application.Match("IT0000072618", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"


End Sub
Sub Quotaz_02() 'Siemens AG  DE0007236101


Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borse.it/quotazioni/borsa-italiana-azioni/valore/Siemens-DE0007236101", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
      
Set TDelements = html1.getElementsByClassName("c-schede")(0).getElementsByTagName("li")


If TDelements.Item(0).innerText = "Ultimo Prezzo" And IsNumeric(TDelements.Item(1).innerText) Then

Prezzo_Uff = TDelements.Item(1).innerText * 1

ElseIf TDelements.Item(16).innerText = "Prezzo di riferimento" Then
fPrez = InStr(1, (TDelements.Item(17).innerText), "-")
 Prezzo_Uff = Mid((TDelements.Item(17).innerText), 1, fPrez - 1) * 1
Else
 Prezzo_Uff = 0

End If


Columns("I:I").NumberFormat = "@"           'la colonne I viene formattata come testo
r = Application.Match("DE0007236101", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)


Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento

Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"


End Sub

 

Sub Quotaz_25() 'CREDEM-OBB SUB PGM 12-18 4.70% EUR IT0004870926

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/obbligazioni-in-euro/dati-completi.html?isin=IT0004870926&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       
  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("IT0004870926", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"


End Sub
Sub Quotaz_39() 'BTP-01ST 2019 4,25% IT0004489610

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/bot/dati-completi.html?isin=IT0004489610&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       
  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("IT0004489610", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub






Sub Quotaz_12() 'CREDIOP-98-18 13% STEP-DOWN IT0001264792


Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/obbligazioni-in-euro/dati-completi.html?isin=IT0001264792&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       
  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("IT0001264792", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub

Sub Quotaz_13() 'Infrastrutture `04- 31.7.19 2,25% INF   IT0003621452

'********************************

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.finanzen.ch/obligationen/2_719-Italien-Republik-Obligation-2019-IT0003621452", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


Set TDelements = html1.getElementsByTagName("table")

stringa = TDelements(7).innerText
Prezzo_Uff = Mid(stringa, 1, 6)
Prezzo_Uff = Replace(Prezzo_Uff, ".", ",")


'******************************************

'-----------------------------------------------
'Open "C:\Users\gbertoli\Data\Excel\run\Prova.txt" For Output As #2
r = Application.Match("IT0003621452", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)

Columns("I:I").NumberFormat = "@"           'la colonne I viene formattata come testo
r = Application.Match("IT0003621452", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
'c_a colonna aggiornamento quotazione
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
'c_c colonna aggiornamento coefficiente indicizzazione
c_c = Application.Match("Coefficiente corrente", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)


'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Dim file As String, CItxt As String, Intero As String, Decimale As String, CI As Double
Dim Mese As String, Anno As String


adesso = Now()
Data = Mid(adesso, 1, 10)

Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
     Mese1 = WorksheetFunction.Text(Month(Now()), "00")
    Anno = Year(Data)
file = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Istat\" & Anno & "\" & Mese1 & "\" & Mese & "\IT0003621452.xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
'Virgola = Application.Search(",", CItxt, 1)
'Intero = Mid(CItxt, 1, Virgola - 1)
'Decimale = Mid(CItxt, Virgola + 1)
'CItxt = Intero & "." & Decimale
CItxt = Replace(CItxt, ".", ",")
CI = CItxt
Workbooks("IT0003621452.xls").Close SaveChanges:=False
'++++++++++++++++++++++++++++++++++++++++++++++++

  
  
'Prezzo_Uff = Mid(stringa, iPrez + 13, Virgola - (iPrez + 13)) & "," & Mid(stringa, Virgola + 1, fPrez - Virgola)
r = Application.Match("IT0003621452", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)

Prezzo_Uff = Replace(Prezzo_Uff, ".", ",")
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_c) = CI * 1

End Sub



Sub Quotaz_22() 'UNICREDIT SUB SR 08/11 11-18 StepUp IT0004698426

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "https://www.eurotlx.com/it/strumenti/dettaglio/IT0004698426", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       
  If html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(0).innerText = "Prezzo" _
And IsNumeric(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(4).getElementsByTagName("tr")(3).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento statico" Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(4).getElementsByTagName("tr")(3).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If
    

 '*****************************************************************************
'Dim Riga As String
'Riga = ""
'stringa = ""
'Open "D:\Excel\File di borsaitaliana\tlx.txt" For Input As #1
'Do Until EOF(1)
'   Line Input #1, Riga
'   stringa = stringa & Riga
'Loop
'Close #1 'Chiusura File
 '*****************************************************************************



r = Application.Match("IT0004698426", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"
'************************************


End Sub

Sub Quotaz_09() 'EIB 11-18 9.25% (TRY)   XS0648456167


Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/euro-obbligazioni/dati-completi.html?isin=XS0648456167&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
    
     If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

    'recupera il cambio TRY/EUR  ' DA FARE******************************************+++++++++++++++++++++++++++++
    
        Dim objMSHTML As New MSHTML.HTMLDocument
     
         objMSHTML.designMode = "on"
     Set objDoc = objMSHTML.createDocumentFromUrl("https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-try.en.html", vbNullString)
 
     Do While objDoc.readyState <> "complete"
         DoEvents
     Loop
     html = objDoc.DocumentElement.innerHTML
     
Set objDoc = Nothing
Set objMSHTML = Nothing
          
    StringaXrate = html
    
    html = ""

 '*****************************************************************************
Dim data_pr_uff As String

Dim iPrez As Long, fPrez As Long, c_r As Long, Cur_Rate As String
Dim Intero As String, Decimale As String, CI As Double, Punto As Long
 
  'trova la cella dove aggiornare il prezzo nello sheet "Aggiornamento" relativamente all'ISIN specificato
r = Application.Match("XS0648456167", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = False
c_r = Application.Match("Cambio Corr.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)
Cur_Rate = Mid(StringaXrate, InStr(1, StringaXrate, "rateLatestInverse='", 1) + Len("rateLatestInverse='"), InStr(1, StringaXrate, "';rateDiffInverse=", 1) - InStr(1, StringaXrate, "rateLatestInverse='", 1) - Len("rateLatestInverse='"))
Punto = Application.Search(".", Cur_Rate, 1)
Intero = Mid(Cur_Rate, 1, Punto - 1)
Decimale = Mid(Cur_Rate, Punto + 1)
Cur_Rate = Intero & "," & Decimale
CI = Cur_Rate


    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_r) = CI * 1

End Sub

Sub Quotaz_24() 'BIMI TVM SET 2017   IT0004626914

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.eurotlx.com/it/strumenti/dettaglio/IT0004626914", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
    
  If html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(0).innerText = "Prezzo" _
And IsNumeric(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(4).getElementsByTagName("tr")(3).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento statico" Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(4).getElementsByTagName("tr")(3).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If
    
r = Application.Match("IT0004626914", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"
'************************************


End Sub


Sub Quotaz_14() 'BNP PARIBAS 14-17 10% (BRL) IT0006731068

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/euro-obbligazioni/dati-completi.html?isin=IT0006731068&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
    
     If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

    'recupera il cambio BRL/EUR  '
    
        Dim objMSHTML As New MSHTML.HTMLDocument
     
         objMSHTML.designMode = "on"
     Set objDoc = objMSHTML.createDocumentFromUrl("https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-brl.en.html", vbNullString)
 
     Do While objDoc.readyState <> "complete"
         DoEvents
     Loop
     html = objDoc.DocumentElement.innerHTML
     
Set objDoc = Nothing
Set objMSHTML = Nothing
          
    StringaXrate = html
    
    html = ""

 '*****************************************************************************
Dim data_pr_uff As String

Dim iPrez As Long, fPrez As Long, c_r As Long, Cur_Rate As String
Dim Intero As String, Decimale As String, CI As Double, Punto As Long
 
  'trova la cella dove aggiornare il prezzo nello sheet "Aggiornamento" relativamente all'ISIN specificato
r = Application.Match("IT0006731068", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = False
c_r = Application.Match("Cambio Corr.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)
Cur_Rate = Mid(StringaXrate, InStr(1, StringaXrate, "rateLatestInverse='", 1) + Len("rateLatestInverse='"), InStr(1, StringaXrate, "';rateDiffInverse=", 1) - InStr(1, StringaXrate, "rateLatestInverse='", 1) - Len("rateLatestInverse='"))
Punto = Application.Search(".", Cur_Rate, 1)
Intero = Mid(Cur_Rate, 1, Punto - 1)
Decimale = Mid(Cur_Rate, Punto + 1)
Cur_Rate = Intero & "," & Decimale
CI = Cur_Rate


    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_r) = CI * 1

End Sub


Sub Quotaz_41() 'EIB 14-18 4.25% (NZD)   XS1107496439

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/euro-obbligazioni/dati-completi.html?isin=XS1107496439&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
    
     If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

    'recupera il cambio NZD/EUR  '
    
        Dim objMSHTML As New MSHTML.HTMLDocument
     
         objMSHTML.designMode = "on"
     Set objDoc = objMSHTML.createDocumentFromUrl("https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-nzd.en.html", vbNullString)
 
     Do While objDoc.readyState <> "complete"
         DoEvents
     Loop
     html = objDoc.DocumentElement.innerHTML
     
Set objDoc = Nothing
Set objMSHTML = Nothing
          
    StringaXrate = html
    
    html = ""

 '*****************************************************************************
Dim data_pr_uff As String

Dim iPrez As Long, fPrez As Long, c_r As Long, Cur_Rate As String
Dim Intero As String, Decimale As String, CI As Double, Punto As Long
 
  'trova la cella dove aggiornare il prezzo nello sheet "Aggiornamento" relativamente all'ISIN specificato
r = Application.Match("XS1107496439", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = False
c_r = Application.Match("Cambio Corr.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)
Cur_Rate = Mid(StringaXrate, InStr(1, StringaXrate, "rateLatestInverse='", 1) + Len("rateLatestInverse='"), InStr(1, StringaXrate, "';rateDiffInverse=", 1) - InStr(1, StringaXrate, "rateLatestInverse='", 1) - Len("rateLatestInverse='"))
Punto = Application.Search(".", Cur_Rate, 1)
Intero = Mid(Cur_Rate, 1, Punto - 1)
Decimale = Mid(Cur_Rate, Punto + 1)
Cur_Rate = Intero & "," & Decimale
CI = Cur_Rate


    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_r) = CI * 1

End Sub


Sub Quotaz_17() 'IBRD 13-18 3.50% (AUD)  AU3CB0204402

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.eurotlx.com/it/strumenti/dettaglio/AU3CB0204402", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
    
  If html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(0).innerText = "Prezzo" _
And IsNumeric(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(1).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(4).getElementsByTagName("tr")(3).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento statico" Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(4).getElementsByTagName("tr")(3).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

    'recupera il cambio AUD/EUR  '
    
        Dim objMSHTML As New MSHTML.HTMLDocument
     
         objMSHTML.designMode = "on"
     Set objDoc = objMSHTML.createDocumentFromUrl("https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-aud.en.html", vbNullString)
 
     Do While objDoc.readyState <> "complete"
         DoEvents
     Loop
     html = objDoc.DocumentElement.innerHTML
     
Set objDoc = Nothing
Set objMSHTML = Nothing
          
    StringaXrate = html
    
    html = ""

 '*****************************************************************************
Dim data_pr_uff As String

Dim iPrez As Long, fPrez As Long, c_r As Long, Cur_Rate As String
Dim Intero As String, Decimale As String, CI As Double, Punto As Long
 
  'trova la cella dove aggiornare il prezzo nello sheet "Aggiornamento" relativamente all'ISIN specificato
r = Application.Match("AU3CB0204402", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = False
c_r = Application.Match("Cambio Corr.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)
Cur_Rate = Mid(StringaXrate, InStr(1, StringaXrate, "rateLatestInverse='", 1) + Len("rateLatestInverse='"), InStr(1, StringaXrate, "';rateDiffInverse=", 1) - InStr(1, StringaXrate, "rateLatestInverse='", 1) - Len("rateLatestInverse='"))
Punto = Application.Search(".", Cur_Rate, 1)
Intero = Mid(Cur_Rate, 1, Punto - 1)
Decimale = Mid(Cur_Rate, Punto + 1)
Cur_Rate = Intero & "," & Decimale
CI = Cur_Rate


    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Columns("J:J").NumberFormat = "0.0000"

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_r) = CI * 1

End Sub


Sub Quotaz_07() 'Dexia Cred 11-17 5% IT0004729452

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/obbligazioni-in-euro/dati-completi.html?isin=IT0004729452&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       
  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("IT0004729452", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub




Sub Quotaz_37() 'BTPIT 12NV17 2,15   IT0004969207

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/bot/dati-completi.html?isin=IT0004969207&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       
  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("IT0004969207", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)

Columns("I:I").NumberFormat = "@"           'la colonne I viene formattata come testo
'c_a colonna aggiornamento quotazione
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
'c_c colonna aggiornamento coefficiente indicizzazione
c_c = Application.Match("Coefficiente corrente", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)


'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Dim file As String, CItxt As String, Intero As String, Decimale As String, CI As Double
Dim Mese As String, Anno As String


adesso = Now()
Data = Mid(adesso, 1, 10)

Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
     Mese1 = WorksheetFunction.Text(Month(Now()), "00")
    Anno = Year(Data)
file = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Istat\" & Anno & "\" & Mese1 & "\" & Mese & "\IT0004969207.xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
'Virgola = Application.Search(",", CItxt, 1)
'Intero = Mid(CItxt, 1, Virgola - 1)
'Decimale = Mid(CItxt, Virgola + 1)
'CItxt = Intero & "." & Decimale
CI = CItxt
Workbooks("IT0004969207.xls").Close SaveChanges:=False
'++++++++++++++++++++++++++++++++++++++++++++++++

  
  
'Prezzo_Uff = Mid(stringa, iPrez + 13, Virgola - (iPrez + 13)) & "," & Mid(stringa, Virgola + 1, fPrez - Virgola)
r = Application.Match("IT0004969207", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)

Prezzo_Uff = Replace(Prezzo_Uff, ".", ",")
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_c) = CI * 1

End Sub

Sub Quotaz_27() 'Eurizon Azioni  America  IT0001050126

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/fondi/dettaglio/1SPHA.html?lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText

If Trim(html1.getElementsByTagName("table")(0).getElementsByTagName("tr")(1).getElementsByTagName("th")(0).innerText) = "Ultima" _
And IsNumeric(html1.getElementsByTagName("table")(0).getElementsByTagName("tr")(2).getElementsByTagName("td")(0).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(0).getElementsByTagName("tr")(2).getElementsByTagName("td")(0).innerText * 1

Else
 Prezzo_Uff = 0 * 1
End If


Columns("I:I").NumberFormat = "@"           'la colonne I viene formattata come testo
r = Application.Match("IT0001050126", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1

End Sub



Sub Quotaz_28() 'Etf Ishares S&P 500 (Azionario) IE0031442068

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/etf/dettaglio.html?isin=IE0031442068&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(0).innerText = "Pr Medio Progr " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1

Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("IE0031442068", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub

Sub Quotaz_29() 'Etf Lyxor Dj Euro Stoxx 50 (Azionario)  FR0007054358

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/etf/dettaglio.html?isin=FR0007054358&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(0).innerText = "Pr Medio Progr " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1

Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("FR0007054358", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub
Sub Quotaz_30() 'Etf Lyxor S&P/MIB MASTER    FR0010010827

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/etf/dettaglio.html?isin=FR0010010827&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(0).innerText = "Pr Medio Progr " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1

Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("FR0010010827", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub

Sub Quotaz_31() 'Etf Powershares Eqqq Fund (NASDA 100)   IE0032077012

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/etf/dettaglio.html?isin=IE0032077012&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(0).innerText = "Pr Medio Progr " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1

Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("IE0032077012", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub

Sub Quotaz_32() 'Lyxor China Enterprise Hscei Ucits Etf LU1900068914

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/etf/dettaglio.html?isin=LU1900068914&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(0).innerText = "LU1900068914" _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1

Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("LU1900068914", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub

Sub Quotaz_33() 'ETF L.EUROMTS 1-3Y  LU1650487413

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/etf/dettaglio.html?isin=LU1650487413&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(0).innerText = "Pr Medio Progr " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1

Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("LU1650487413", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub

Sub Quotaz_34() 'Eurizon Tesoreria Euro AM   IT0005367757

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/fondi/dettaglio/1CATES.html?lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText

If html1.getElementsByTagName("table")(0).getElementsByTagName("tr")(1).getElementsByTagName("th")(0).innerText = "Ultima " _
And IsNumeric(html1.getElementsByTagName("table")(0).getElementsByTagName("tr")(2).getElementsByTagName("td")(0).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(0).getElementsByTagName("tr")(2).getElementsByTagName("td")(0).innerText * 1

Else
 Prezzo_Uff = 0 * 1
End If


Columns("I:I").NumberFormat = "@"           'la colonne I viene formattata come testo
r = Application.Match("IT0005367757", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1

End Sub


Sub Quotaz_35() 'ETF Lyxor Euro Cash FR0010510800

Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/etf/dettaglio.html?isin=FR0010510800&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText


  If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(0).innerText = "Pr Medio Progr " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(10).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
fPrez = InStr(1, html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = Mid(html1.getElementsByTagName("table")(3).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText, 1, fPrez - 1) * 1

Else
 Prezzo_Uff = 0 * 1
End If

r = Application.Match("FR0010510800", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = False

    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Value = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold


End Sub



Sub BTPi_New() 'ex BTPi st 03-15.9.14 2,15% INF TV IT0003625909


     Dim objMSHTML As New MSHTML.HTMLDocument
     Dim objDoc As MSHTML.HTMLDocument
    Dim html As String, stringa As String


'recupera la prima pagina html
        objMSHTML.designMode = "on"
     Set objDoc = objMSHTML.createDocumentFromUrl("http://www.borsaitaliana.it/borsa/obbligazioni/mot/btp/dati-completi.html?isin=IT0003625909&lang=it", vbNullString)
On Error GoTo Errore 'inizio gestione errore

     Do While objDoc.readyState <> "complete"
         DoEvents
     Loop
    

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
    html = objDoc.DocumentElement.innerText
    

     Set objDoc = Nothing
    Set objMSHTML = Nothing
 '*****************************************************************************
Dim Prezzo_Uff As String, data_pr_uff As String

Dim iPrez As Long, fPrez As Long, r As Long, c_a As Long, Virgola As Long, c_c As Long

stringa = html
 html = ""
   'trova la cella dove aggiornare il prezzo nello sheet "Aggiornamento" relativamente all'ISIN specificato
r = Application.Match("IT0003625909", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)

'c_a colonna aggiornamento quotazione
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

'c_c colonna aggiornamento coefficiente indicizzazione
c_c = Application.Match("Coefficiente corrente", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)

Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = False
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Dim file As String, CItxt As String, Intero As String, Decimale As String, CI As Double
Dim Mese As String, Anno As String


adesso = Now()
Data = Mid(adesso, 1, 10)

Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
    
    Anno = Year(Data)
file = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Eurostat\" & Anno & "\" & Mese & "\IT0003625909.xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
CI = CItxt
Workbooks("IT0003625909.xls").Close SaveChanges:=False
r = Application.Match("IT0003625909", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
'++++++++++++++++++++++++++++++++++++++++++++++++




If Data <> 0 Then
    iPrez = InStr(stringa, "Prezzo di riferimento:") 'si cerca la posizione della stringa "Prezzo di riferimento:"
    
 fPrez = InStr(iPrez + Len("Prezzo di riferimento:"), stringa, "Data Pr Ufficiale:") 'si cerca la posizione dell'ultima ciffra del "Prezzo ufficiale"
  
   Prezzo_Uff = Mid(stringa, iPrez + Len("Prezzo di riferimento:"), fPrez - (iPrez + Len("Prezzo di riferimento:")) - 2) ' si strae la stringa "Prezzo riferimento"
   Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
    
    If ((ora > "17.55" And ora <= "23.59") Or (ora >= "0.00" And ora < "9.20") Or (Weekday(Data) = 7 Or Weekday(Data) = 1)) Then
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
    End If
Else
    Dim adesso As String
    Dim iminuti As Byte
 
    adesso = Now()
    Data = Mid(adesso, 1, 10)
    iminuti = InStr(12, adesso, ".")
    ora = Mid(adesso, 12, iminuti - 12 + 3)
    
    iPrez = InStr(stringa, "Prezzo di riferimento:") 'si cerca la posizione della stringa "Prezzo di riferimento:"
    
 fPrez = InStr(iPrez + Len("Prezzo di riferimento:"), stringa, "Data Pr Ufficiale:") 'si cerca la posizione dell'ultima ciffra del "Prezzo ufficiale"
  
   Prezzo_Uff = Mid(stringa, iPrez + Len("Prezzo di riferimento:"), fPrez - (iPrez + Len("Prezzo di riferimento:")) - 2) ' si strae la stringa "Prezzo riferimento"
   Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1 'si copia il prezzo nell'apposita cella trasformandolo
    
    If ((ora > "17.55" And ora <= "23.59") Or (ora >= "0.00" And ora < "9.20") Or (Weekday(Data) = 7 Or Weekday(Data) = 1)) Then
                                                     ' in mnumero
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a).Font.Bold = True 'si evidenzai che si tratta di prezzo di riferimento
                                                     'mettendo la cella in bold
    End If
End If

Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_c) = CI * 1

Exit Sub
Errore:
If Err.Number <> 0 Then
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = "00,00" * 1
End If

End Sub




Sub Quotaz_13_PROVA() 'Infrastrutture `04- 31.7.19 2,25% INF   IT0003621452

     Dim objMSHTML As New MSHTML.HTMLDocument
     Dim objDoc As MSHTML.HTMLDocument
    Dim html As String, stringa As String

'recupera la prima pagina html
'    objMSHTML.designMode = "on"
'        Set objDoc = objMSHTML.createDocumentFromUrl("https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-zar.en.html", vbNullString)
'    'Set objDoc = objMSHTML.createDocumentFromUrl("https://www.bourse.lu/instrument/obligation/resume?cdVal=73995&cdTypeVal=OBL", vbNullString)
'On Error GoTo Errore 'inizio gestione errore
'     Do While objDoc.readyState <> "complete"
'         DoEvents
'     Loop
    
 '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 
             Riga = ""
            stringa = ""
            Open "C:\Users\gbertoli\Data\Excel\run\Prova.txt" For Input As #1
            Do Until EOF(1)
               Line Input #1, Riga
               stringa = stringa & Riga
            Loop
            Close #1 'Chiusura File
'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'il contenuto testuale della pagina viene salvato nella variabile stringa "html
'    html = objDoc.DocumentElement.innerText
    

     Set objDoc = Nothing
    Set objMSHTML = Nothing
 '*****************************************************************************

Dim Prezzo_Uff As String, data_pr_uff As String
Dim iPrez As Long, fPrez As Long, r As Long, c_a As Long, Virgola As Long, c_c As Long

'stringa = html

'-----------------------------------------------
'Open "C:\Users\gbertoli\Data\Excel\run\Prova.txt" For Output As #2
Dim c_r As Long  'colonna che ospita il cambio corrente
c_r = Application.Match("Cambio Corr.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)
Cur_Rate = Mid(stringa, InStr(1, stringa, "rateLatestInverse='", 1) + Len("rateLatestInverse='"), InStr(1, stringa, "';rateDiffInverse=", 1) - InStr(1, stringa, "rateLatestInverse='", 1) - Len("rateLatestInverse='"))
        'Write #2, stringa
        'Close #2
r = Application.Match("IT0003621452", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)

Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_r) = Cur_Rate * 1
'------------------------------------------------

 html = ""
Columns("I:I").NumberFormat = "@"           'la colonne I viene formattata come testo
r = Application.Match("IT0003621452", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c_a = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
c_c = Application.Match("Coefficiente corrente", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("4:4"), 0)


'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Dim file As String, CItxt As String, Intero As String, Decimale As String, CI As Double
Dim Mese As String


adesso = Now()
Data = Mid(adesso, 1, 10)

Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
file = "C:\Users\gbertoli\Data\Excel\run\" & Mese & "\IT0003621452.xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
Virgola = Application.Search(",", CItxt, 1)
Intero = Mid(CItxt, 1, Virgola - 1)
Decimale = Mid(CItxt, Virgola + 1)
CItxt = Intero & "." & Decimale
CI = CItxt
Workbooks("IT0003621452.xls").Close SaveChanges:=False
'++++++++++++++++++++++++++++++++++++++++++++++++


iPrez = InStr(stringa, "Cl|fffd|ture")
Virgola = InStr(iPrez, stringa, ".")
fPrez = InStr(iPrez, stringa, " i %")
  
  
Prezzo_Uff = Mid(stringa, iPrez + 21, Virgola - (iPrez + 21)) & "," & Mid(stringa, Virgola, fPrez - Virgola)
r = Application.Match("IT0003621452", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)

Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = Prezzo_Uff * 1
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_c) = CI * 1
Exit Sub
Errore:
If Err.Number <> 0 Then
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c_a) = "00,00" * 1
End If

End Sub


Private Sub addStorico()
Dim r As Long, dLastRow As Long, Quotaz As Single, c As Long, AggLastRow As Long, c_q As Long

Dim Isin As String

Dim data_storico As Date, data_aggior As Date

' Determina l'ultmia riga occupata nello sheet "Storico"
dLastRow = Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells.Find("*", , , , xlByRows, xlPrevious).Row
' Determina l'ultima riga relativa alla prima colonna nello sheet "Aggiornamento"

AggLastRow = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("A:A").Find("*", , , , xlByRows, xlPrevious).Row

'Detrmina la colonna "Date" nello sheet "Storico"
c = Application.Match("Date", Workbooks("Update Investimenti.xlsm").Sheets("Storico").Range("2:2"), 0)

'Si formatta la riga come numero con 4 cifre decimali
'++++++++++++++++++++++++++++++++++
Workbooks("Update Investimenti.xlsm").Sheets("Storico").Rows(dLastRow + 1).NumberFormat = "0.0000"
'++++++++++++++++++++++++++++++++++
Workbooks("Update Investimenti.xlsm").Sheets("Storico").Columns(c).NumberFormat = "dd/mm/yy;@" 'la colonna C viene formattata come data formato dd/mm/yy

'Determina la colonna "Quotazione" nello sheet "Aggiornamento"
c_q = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

data_aggior = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(1, 5) 'Viene definita la data corrente
data_storico = Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow, c) ' Si legge l'ultmia data presente nello Sheets("Storico")
If data_storico = data_aggior Then ' Se la data corrente e' gia' presente allora il nuovo aggiornamemento  sovrascrive quello
                    'gia' esistente
                    
'Si recuperano riga per riga dallo Sheet "Aggiornamento" tute le quotazioni
Dim cell As Range, Grassetto As Boolean
Grassetto = False

   For Each cell In Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("A5:A" & AggLastRow).Cells
        If cell.Value <> "" Then
            ' Si memorizza il primo ISIN e quotazione presenti nello sheet "Aggiornamento
            Isin = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(cell.Row, 4)
            Quotaz = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(cell.Row, c_q)
            If Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(cell.Row, 10).Font.Bold = True Then
                Grassetto = True
            End If
            
           ' ISIN = Application.VLookup(cell.Value, Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("A5:J" & AggLastRow), 4, False)
           ' Quotaz = Application.VLookup(cell.Value, Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("A5:J" & AggLastRow), 10, False)
            
            'si identifica la posizione corretta nello sheet "Aggiornamento" cioe' corrispondente all'ISIN memorizzato
            
            c = Application.Match(Isin, Workbooks("Update Investimenti.xlsm").Sheets("Storico").Range("2:2"), 0)
            Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow, c) = Quotaz
            Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow, c).Font.Bold = False
            If Grassetto = True Then
            Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow, c).Font.Bold = True
            End If

        End If
        Grassetto = False
    Next cell







Else 'L'aggiornamento viene effettuato nella prima riga vuota dLastRow+1


Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow + 1, c) = data_aggior

   For Each cell In Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("A5:A" & AggLastRow).Cells
        If cell.Value <> "" Then
            ' Si memorizza il primo ISIN e quotazione presenti nello sheet "Aggiornamento
            Isin = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(cell.Row, 4)
            Quotaz = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(cell.Row, 10)
            If Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(cell.Row, 10).Font.Bold = True Then
                Grassetto = True
            End If
            
           ' ISIN = Application.VLookup(cell.Value, Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("A5:J" & AggLastRow), 4, False)
           ' Quotaz = Application.VLookup(cell.Value, Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("A5:J" & AggLastRow), 10, False)
            
            'si identifica la posizione corretta nello sheet "Aggiornamento" cioe' corrispondente all'ISIN memorizzato
            
            c = Application.Match(Isin, Workbooks("Update Investimenti.xlsm").Sheets("Storico").Range("2:2"), 0)
            Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow + 1, c) = Quotaz
            Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow + 1, c).Font.Bold = False
            If Grassetto = True Then
            Workbooks("Update Investimenti.xlsm").Sheets("Storico").Cells(dLastRow + 1, c).Font.Bold = True
            End If

        End If
        Grassetto = False
    Next cell


End If
dLastRow = Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells.Find("*", , , , xlByRows, xlPrevious).Row
If dLastRow > 1 Then
data_storico = Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow, 1) ' Si legge l'ultmia data presente nello Sheets("Storico")
    If data_storico = data_aggior Then ' Se la data corrente e' gia' presente allora il nuovo aggiornamemento  sovrascrive quello
                    'gia' esistente
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow, 1) = data_aggior
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow, 2) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("Gio").Cells(5, 9)
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow, 3) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(4, 9)
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow, 4) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(2, 9)
    
    Else
    
            Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 1) = data_aggior
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 2) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("Gio").Cells(5, 9)
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 3) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(4, 9)
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 4) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(2, 9)
    
    End If
Else

            Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 1) = data_aggior
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 2) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("Gio").Cells(5, 9)
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 3) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(4, 9)
        Workbooks("Update Investimenti.xlsm").Sheets("Storico_Patrimonio").Cells(dLastRow + 1, 4) = _
                            Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(2, 9)
End If

MsgBox "Finito"

End Sub



Sub INSERISCI_COEFF()
Dim r As Long, file As String, CItxt As String, Intero As String, Decimale As String, Virgola As Byte, CI As Double
Dim Mese As String


adesso = Now()
Data = Mid(adesso, 1, 10)

Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
file = "C:\Users\gbertoli\Data\Excel\run\" & Mese & "\IT0003621452.xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
Virgola = Application.Search(",", CItxt, 1)
Intero = Mid(CItxt, 1, Virgola - 1)
Decimale = Mid(CItxt, Virgola + 1)
CItxt = Intero & "." & Decimale
CI = CItxt
Workbooks("IT0003621452.xls").Close SaveChanges:=False

End Sub

Sub TestRun()
 
    'Change this as per your requirement

    Call UnZip("C:\Users\gbertoli\Data\Excel\run\Test", "C:\Users\gbertoli\Data\Excel\run\Test\dicembre.zip")
 
End Sub
 
 
 
Sub UnZip(strTargetPath As String, Fname As Variant)
 
    Dim oApp As Object
 
    Dim FileNameFolder As Variant
 
 
 
    If Right(strTargetPath, 1) <> Application.PathSeparator Then
 
        strTargetPath = strTargetPath & Application.PathSeparator
 
    End If
 
 
 
    FileNameFolder = strTargetPath
 
 
 
    Set oApp = CreateObject("Shell.Application")
 
    oApp.Namespace(FileNameFolder).CopyHere oApp.Namespace(Fname).items
 
End Sub

Sub Scarica_Coeff()


Dim strHTTP As String, LastRow As Integer, LastColumn As Integer, Anno As String, Mese As String

Dim strFileToSave As String, DirTarget As String

Anno = Year(Now())
Mese = Month(Now())
Select Case Mese

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
Mese = Month(Now())
Mese = WorksheetFunction.Text(Mese, "00")
'*********************Viene fatto il Download dei file  EUROSTAT

DirTarget = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Eurostat\" & Anno
'DirTarget = "E:\run\Coefficienti_Indicizzazione\Eurostat\" & Anno '++++++++++++++++   Ufficio

strFileToSave = DirTarget & "\definitivo " & Mese & ".zip"

 If Not (FileFolderExists(strFileToSave)) Then
            If Len(Dir(DirTarget, vbDirectory)) = 0 Then
                MkDir DirTarget
            End If
    
           ' strHTTP = "http://www.lseg.com/sites/default/files/content/documents/MonteTitoli/CoefficientidiIndicizazione/Eurostat/" & Anno & "/" & UCase(Left(Mese, 1)) & Right(Mese, Len(Mese) - 1) & "/definitivo%20" & Mese & ".zip"
        strHTTP = "https://www.lseg.com/MONTE_TITOLI/Coefficienti_Eurostat/" & Anno & "/" & Mese & "/Eurostat_definitivo_" & Anno & Mese & "01.zip"              ' fnDownloadHTTP Funzione per downlodare file si trova nello sheet MACRO
       
Next_one:
            If fnDownloadHTTP(strHTTP, strFileToSave) = False Then      ' -- downlaod the file
             '  MsgBox "File DL failed. Make sure folder exist"
             '  GoTo ExitHere
        strHTTP = "https://www.lseg.com/MONTE_TITOLI/Coefficienti_Eurostat/" & Anno & "/" & Mese & "/Eurostat_definitivo_" & Anno & Mese & "02.zip"              ' fnDownloadHTTP Funzione per downlodare file si trova nello sheet MACRO
            GoTo Next_one
            End If
         

             '***********FINE DOWNLOAD
             Call UnZip(DirTarget, DirTarget & "\definitivo " & Mese & ".zip")
        
    End If
    
'*********************Viene fatto il Download dei file ISTAT

DirTarget = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Istat\" & Anno
'DirTarget = "E:\run\Coefficienti_Indicizzazione\Istat\" & Anno '++++++++++++++++   Ufficio

 If Not (FileFolderExists(DirTarget)) Then
  MkDir DirTarget
 End If
 
'DirTarget = DirTarget & "\" & Mese
strFileToSave = DirTarget & "\" & Mese & "\" & Mese & ".zip"


 If Not (FileFolderExists(strFileToSave)) Then
             If Len(Dir(DirTarget & "\" & Mese, vbDirectory)) = 0 Then
                'MkDir DirTarget
                DirTarget = DirTarget & "\" & Mese
                MkDir DirTarget
            End If
          '  If Len(Dir(DirTarget, vbDirectory)) = 0 Then
         '       MkDir DirTarget
          '      DirTarget = DirTarget & "\" & Mese
          '      MkDir DirTarget
          '  End If

     strHTTP = "http://www.lseg.com/MONTE_TITOLI/Coefficienti_Istat/" & Anno & "/" & Mese & "/Istat_" & Anno & Mese & "01.zip"
     
Next_one1:
            ' fnDownloadHTTP Funzione per downlodare file si trova nello sheet MACRO
            If fnDownloadHTTP(strHTTP, strFileToSave) = False Then      ' -- downlaod the file
             '  MsgBox "File DL failed. Make sure folder exist"
             '  GoTo ExitHere
        strHTTP = "http://www.lseg.com/MONTE_TITOLI/Coefficienti_Istat/" & Anno & "/" & Mese & "/Istat_" & Anno & Mese & "02.zip"
        GoTo Next_one1
            End If
         
             '***********FINE DOWNLOAD
' DirTarget = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Istat\" & Anno
             Call UnZip(DirTarget, DirTarget & "\" & Mese & ".zip")
        
    End If



End Sub

Function fnDownloadHTTP(strTarget As String, strSaveAs As String, Optional strUN As String, Optional strPW As String) As Boolean
On Error GoTo errHere
 
Dim xmlHTTP As Object
Dim strRespText As String
fnDownloadHTTP = True
Set xmlHTTP = CreateObject("Microsoft.XMLHTTP")
With xmlHTTP
    .Open "GET", strTarget, False, strUN, strPW
    .setRequestHeader "cache-control", "no-cache,must revalidate"
    .send
    If .statusText = "OK" Then 'QUesto if serve perch|fffd| se non trovo il file origine non si f|fffd| niente
                                'e il file destinazione non viene creato
        If fnSaveDownloadFile(strSaveAs, .responseBody) = False Then
            GoTo errHere
        End If
        
    Else
    
    GoTo errHere
    End If
End With
 
ExitHere:
    Set xmlHTTP = Nothing
    Exit Function
 
errHere:
    fnDownloadHTTP = False
    Resume ExitHere
End Function

Private Function fnSaveDownloadFile(strFilePath, bytArray) As Boolean
On Error GoTo errHere
 
 
Dim objStream  As Object 'New ADODB.Stream
fnSaveDownloadFile = True
Set objStream = CreateObject("ADODB.Stream")
With objStream
    .Type = 1 'adTypeBinary
    .Open
    .Write bytArray
    .SaveToFile strFilePath, 2 'adSaveCreateOverWrite
End With
 
ExitHere:
    Exit Function
errHere:
    fnSaveDownloadFile = False
    Resume ExitHere
End Function

Public Function FileFolderExists(strFullPath As String) As Boolean
'Author       : Ken Puls (www.excelguru.ca)
'Macro Purpose: Check if a file or folder exists
    On Error GoTo EarlyExit
    If Not Dir(strFullPath, vbDirectory) = vbNullString Then FileFolderExists = True
    
EarlyExit:
    On Error GoTo 0
End Function


Sub Prova_1() 'scrivere contenuto variabile in file di testo

   Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")

     Dim objMSHTML As New MSHTML.HTMLDocument
     Dim objDoc As MSHTML.HTMLDocument
    Dim html As String, stringa As String, StringaXrate As String


Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-brl.en.html", False

        objIE.send

       html1.body.innerHTML = objIE.responseText

    Dim Fileout As Object
    Set Fileout = fso.CreateTextFile("E:\run\prova\vba.txt", True, True)
    Fileout.Write html1.body.innerHTML
    Fileout.Close

     Set objDoc = Nothing
    Set objMSHTML = Nothing
    
    stringa = html
    html = ""
    
   'recupera il cambio BRL/EUR
    objMSHTML.designMode = "on"
     Set objDoc = objMSHTML.createDocumentFromUrl("https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-brl.en.html", vbNullString)
 
     Do While objDoc.readyState <> "complete"
         DoEvents
     Loop
     html = objDoc.DocumentElement.innerHTML
    Set objDoc = Nothing
    Set objMSHTML = Nothing
    
    StringaXrate = html
    
    Cur_Rate = Mid(StringaXrate, InStr(1, StringaXrate, "rateLatestInverse='", 1) + Len("rateLatestInverse='"), InStr(1, StringaXrate, "';rateDiffInverse=", 1) - InStr(1, StringaXrate, "rateLatestInverse='", 1) - Len("rateLatestInverse='"))




    Set Fileout = fso.CreateTextFile("E:\run\prova\vba.txt", True, True)
    Fileout.Write StringaXrate
    Fileout.Close

      html = ""
 '*****************************************************************************

End Sub


Sub Ciclo() 'BNP PARIBAS 14-17 10% (BRL) IT0006731068


Dim objIE As MSXML2.xmlHTTP, html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long
Set html1 = New MSHTML.HTMLDocument
       Set objIE = New MSXML2.xmlHTTP
   
    objIE.Open "GET", "http://www.borsaitaliana.it/borsa/obbligazioni/mot/euro-obbligazioni/dati-completi.html?isin=IT0006731068&lang=it", False

        objIE.send

       html1.body.innerHTML = objIE.responseText
       

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
    
     If html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(0).innerText = "Prezzo Ultimo Contratto " _
And IsNumeric(html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText) Then

Prezzo_Uff = html1.getElementsByTagName("table")(1).getElementsByTagName("tr")(7).getElementsByTagName("td")(1).innerText * 1

ElseIf html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(0).innerText = "Prezzo di riferimento " Then
'fPrez = InStr(1, html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(6).getElementsByTagName("td")(1).innerText, "-")
 Prezzo_Uff = html1.getElementsByTagName("table")(2).getElementsByTagName("tr")(8).getElementsByTagName("td")(1).innerText
Else
 Prezzo_Uff = 0 * 1
End If
End Sub

Sub chiama()

StartTime = Timer
For i = 1 To 10
Ciclo
Debug.Print i

Next i

'Determine how many seconds code took to run
  SecondsElapsed = Round(Timer - StartTime, 2)

'Notify user in seconds
  MsgBox "This code ran successfully in " & SecondsElapsed & " seconds", vbInformation
End Sub
Attribute VB_Name = "Module2"
Sub MarAnnReport()

Dim r As Integer, r1 As Variant, k As Integer, cont As Integer, dLastRow As Integer, dLastRow1 As Integer, j As Integer, Scad As Variant

Dim Dati() As Variant, Totale As Currency

dLastRow = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga dheet "MarAnn"
dLastRow1 = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga sheet "aggiornamento

r = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Range("A1", "A" & dLastRow), 0) 'Prima riga utile per
                                                                                                'la lettura dei dati contrassegnata con #
Totale = 0
k = -1

r1 = 0

Do
r = r + r1
k = k + 1
ReDim Preserve Dati(11, k)
Dati(0, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 2).Value ' Banca
Dati(1, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 3).Value ' Tipo Titolo
Dati(2, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 4).Value ' Nome
Dati(3, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 5).Value ' ISIN
Dati(4, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 6).Value ' Data Acquisto
Dati(5, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r + 1, 6).Value ' Data Valutazione
Dati(6, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 7).Value ' V. Nominale
Dati(7, k) = Application.VLookup(Dati(3, k), Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("D1:J" & dLastRow1), 5, False) 'Data Scadenza da sheet "Aggiornamento"
Dati(8, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r + 1, 9).Value ' Totale investimeno
Dati(9, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 11).Value ' Guadagno alla data di valutazione
Dati(10, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 12).Value ' Rendimento alla data di valutazione
Dati(11, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 13).Value ' Rendimento a scadenza
Totale = Totale + Dati(8, k)
r1 = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Range("A" & r + 1, "A" & dLastRow), 0)
Loop Until (Application.IsNA(r1))

With Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1")

.Columns("A:A").ColumnWidth = 22
.Columns("A:A").WrapText = True
.Columns("B:B").ColumnWidth = 17
.Columns("C:C").ColumnWidth = 20
.Columns("D:D").ColumnWidth = 20
.Columns("E:E").ColumnWidth = 20

.Cells(1, 1).Value = "CARIPARMA"
.Cells(1, 1).Font.Name = "Arial"  '+
.Cells(1, 1).Font.Size = 20 '+
.Cells(1, 1).Font.Bold = True   '+

   With Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").Range("A1:E1")
        .MergeCells = True
        .HorizontalAlignment = xlCenter
    End With
    
 .Rows("1:1").RowHeight = 28

.Cells(3, 1).Value = "Titolo"
.Cells(3, 2).Value = "Data Acquisto"
.Cells(3, 3).Value = "Scadenza"
.Cells(3, 4).Value = "Data Valutazione"
.Cells(3, 5).Value = "Guadagno data valutazione"
.Cells(4, 1).Value = "ISIN"
.Cells(4, 2).Value = "Valore Nominale"
.Cells(4, 3).Value = "Rendimento a scadenza"
.Cells(4, 4).Value = "Rendimento netto alla data di valutazione "
.Cells(4, 5).Value = "Capitale alla data di valutazione"

.Rows("3:4").Font.Size = 11
.Rows("3:4").Font.Name = "Arial"
.Rows("3:4").Font.Bold = True
.Rows("3:3").RowHeight = 40    '???????????????
.Rows("4:4").RowHeight = 50   '???????????????

 .Rows("3:4").HorizontalAlignment = xlCenter
 .Rows("3:4").VerticalAlignment = xlTop
 .Rows("3:4").WrapText = True


'Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Delete
'Do While Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Count > 0
'Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks(Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Count).Delete
'Loop

cont = 0
j = 0


For r = 5 To (4 * (k + 2)) Step 4

' *************LAYOUT del REPORT per ogni titolo *********************
'Nome   DataAcq.     DataScad              DataValutaz             Guadagno
'ISIN   V_Nominale   RendimentoScadenza      rendimento     TotaleInvestimento

If Dati(1, j) <> "C" Then
.Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
.Cells(r, 1).Font.Bold = True '???????????????
.Cells(r + 1, 1).Value = Dati(3, j) 'Scrivi ISIN
.Cells(r, 2).Value = Dati(4, j) 'Scrivi Data Acquisto
.Cells(r, 2).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
.Cells(r + 1, 2).Value = Dati(6, j) 'Scrivi Valore nominale o Quote acquistate
.Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0" 'Formatta Valore nominale o Quote acquistate
.Cells(r, 3).Value = Dati(7, j)  'Scrivi Data Scadenza
.Cells(r, 3).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Scadenza
.Cells(r + 1, 3).Value = Dati(11, j) 'Scrivi rendimento netto a scadenza
.Cells(r + 1, 3).NumberFormat = "0.00%" 'Formatta rendimento netto a scadenza
.Cells(r, 4).Value = Dati(5, j)  'Scrivi Data Valutazione
.Cells(r, 4).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Valutazione
.Cells(r + 1, 4).Value = Dati(10, j) 'Scrivi Rendimento alla data di valutazione
.Cells(r + 1, 4).NumberFormat = "0.00%" 'Formatta rendimento netto alla data di valutazione
.Cells(r, 5).Value = Dati(9, j)  'Scrivi Guadagno alla data di valutazione
.Cells(r, 5).NumberFormat = "[$|fffd|-410] #,##0.00"   'Formatta Guadagno alla data di valutazione
.Cells(r + 1, 5).Value = Dati(8, j) 'Scrivi Totale investimeno alla data di valutazione
.Cells(r + 1, 5).Font.Bold = True
.Cells(r + 1, 5).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimeno alla data di valutazione

.Rows(r).RowHeight = 25 '???????????????
.Rows(r + 1).RowHeight = 20 '???????????????
.Rows(r + 2).RowHeight = 7 '???????????????
.Rows(r + 3).RowHeight = 7 '???????????????
.Rows(r).VerticalAlignment = xlCenter '???????????????
.Rows(r).HorizontalAlignment = xlCenter '???????????????
.Rows(r + 1).VerticalAlignment = xlCenter '???????????????
.Rows(r + 1).HorizontalAlignment = xlCenter '???????????????

j = j + 1
cont = cont + 1
        With .Range(.Cells(r, 1), .Cells(r + 1, 5))
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
        End With
        
        If cont = 11 And (k + 1 - 11) >= 1 Then
        If (k + 1 - 11) > 1 Then
        Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Add before:=.Cells(r + 2, 1)
        .Cells(r + 2, 1).Value = "Titolo"
        .Cells(r + 2, 2).Value = "Data Acquisto"
        .Cells(r + 2, 3).Value = "Scadenza"
        .Cells(r + 2, 4).Value = "Data Valutazione"
        .Cells(r + 2, 5).Value = "Guadagno data valutazione"
        .Cells(r + 3, 1).Value = "ISIN"
        .Cells(r + 3, 2).Value = "Valore Nominale"
        .Cells(r + 3, 3).Value = "Rendimento a scadenza"
        .Cells(r + 3, 4).Value = "Rendimento netto alla data di valutazione "
        .Cells(r + 3, 5).Value = "Capitale alla data di valutazione"
      
        .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
        .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
       .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
        .Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
        .Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50
        
         .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
         .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
         .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
         
       End If
        End If
        '+++++++++++++++++++++++
Else
    If cont = 11 And (k + 1 - 11) >= 1 Then
            Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Add before:=.Cells(r - 2, 1)
    End If
        .Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(4, j) 'Scrivi Data Acquisto
        .Cells(r + 1, 1).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(8, j) 'Scrivi Totale investimento
        .Cells(r + 1, 2).Font.Bold = True
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Totale investimento
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
    
End If
Next r
.Cells(r, 1).Value = "Totale Investimenti"
.Cells(r, 1).Font.Bold = True
.Cells(r, 1).Font.Size = 14
.Cells(r, 2).Value = Totale
.Cells(r, 2).Font.Bold = True
.Cells(r, 2).Font.Size = 14
.Cells(r, 2).NumberFormat = "[$|fffd|-410] #,##0.00"

End With

 
    Sheets("MarAnnReport1").Select
    Sheets("MarAnnReport1").Copy
    ActiveWorkbook.SaveAs Filename:="C:\Users\Gio\Documents\Investimenti\_Report\MarAnn" & Format(Date, "dd-mm-yy") & ".xls"
    ActiveWindow.Close


End Sub

Sub MarAnnReportNew()

Dim r As Integer, r1 As Variant, k As Integer, cont As Integer, dLastRow As Integer, dLastRow1 As Integer, j As Integer, Scad As Variant

Dim Dati() As Variant, Totale As Currency, Utile_Perdite As Currency
Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").Select
   Cells.Select
    Selection.Delete Shift:=xlUp
    Range("A1").Select

With Application
.ScreenUpdating = False
.Calculation = xlManual
End With

dLastRow = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga dheet "MarAnn"
dLastRow1 = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga sheet "aggiornamento

r = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Range("A1", "A" & dLastRow), 0) 'Prima riga utile per
                                                                                                'la lettura dei dati contrassegnata con #
Totale = 0
k = -1

r1 = 0

Utile_Perdite = 0

Do
r = r + r1
k = k + 1
ReDim Preserve Dati(11, k)
Dati(0, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 2).Value ' Banca
Dati(1, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 3).Value ' Tipo Titolo
Dati(2, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 4).Value ' Nome
Dati(3, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 5).Value ' ISIN
Dati(4, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 6).Value ' Data Acquisto
Dati(5, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r + 1, 6).Value ' Data Valutazione
Dati(6, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 7).Value ' V. Nominale
Dati(7, k) = Application.VLookup(Dati(3, k), Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("D1:J" & dLastRow1), 5, False) 'Data Scadenza da sheet "Aggiornamento"
Dati(8, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r + 1, 9).Value ' Capitale Corrente
Dati(9, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 9).Value ' Capitale iniziale
Dati(10, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 12).Value ' Rendimento alla data di valutazione
Dati(11, k) = Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Cells(r, 13).Value ' Rendimento a scadenza
Totale = Totale + Dati(8, k)
r1 = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Range("A" & r + 1, "A" & dLastRow), 0)
Loop Until (Application.IsNA(r1))

With Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1")

.Columns("A:A").ColumnWidth = 22
.Columns("A:A").WrapText = True
.Columns("B:B").ColumnWidth = 17
.Columns("C:C").ColumnWidth = 20
.Columns("D:D").ColumnWidth = 20
.Columns("E:E").ColumnWidth = 20

.Cells(1, 1).Value = "CARIPARMA"
.Cells(1, 1).Font.Name = "Arial"  '+
.Cells(1, 1).Font.Size = 20 '+
.Cells(1, 1).Font.Bold = True   '+

   With Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").Range("A1:E1")
        .MergeCells = True
        .HorizontalAlignment = xlCenter
    End With
    
 .Rows("1:1").RowHeight = 28

.Cells(3, 1).Value = "Titolo"
.Cells(3, 2).Value = "Data Acquisto"
.Cells(3, 3).Value = "Scadenza"
.Cells(3, 4).Value = "Guadagno Capitale alla data " & Dati(5, 0)
.Cells(3, 5).Value = "Capitale Iniziale"
.Cells(4, 1).Value = "ISIN"
.Cells(4, 2).Value = "Valore Nominale"
.Cells(4, 3).Value = "Rendimento a scadenza"
.Cells(4, 4).Value = "Rendimento netto alla data " & Dati(5, 0)
.Cells(4, 5).Value = "Capitale alla data " & Dati(5, 0)

.Rows("3:4").Font.Size = 11
.Rows("3:4").Font.Name = "Arial"
.Rows("3:4").Font.Bold = True
.Rows("3:3").RowHeight = 40    '???????????????
.Rows("4:4").RowHeight = 50   '???????????????

 .Rows("3:4").HorizontalAlignment = xlCenter
 .Rows("3:4").VerticalAlignment = xlTop
 .Rows("3:4").WrapText = True


'Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Delete
'Do While Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Count > 0
'Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks(Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Count).Delete
'Loop

cont = 0
j = 0


For r = 5 To (4 * (k + 2)) Step 4

' *************LAYOUT del REPORT per ogni titolo *********************
'Nome   DataAcq.     DataScad              DataValutaz             Guadagno
'ISIN   V_Nominale   RendimentoScadenza      rendimento     TotaleInvestimento

If Dati(1, j) <> "C" Then
.Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
.Cells(r, 1).Font.Bold = True '???????????????
.Cells(r + 1, 1).Value = Dati(3, j) 'Scrivi ISIN
.Cells(r, 2).Value = Dati(4, j) 'Scrivi Data Acquisto
.Cells(r, 2).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
.Cells(r + 1, 2).Value = Dati(6, j) 'Scrivi Valore nominale o Quote acquistate
.Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0" 'Formatta Valore nominale o Quote acquistate
.Cells(r, 3).Value = Dati(7, j)  'Scrivi Data Scadenza
.Cells(r, 3).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Scadenza
.Cells(r + 1, 3).Value = Dati(11, j) 'Scrivi rendimento netto a scadenza
.Cells(r + 1, 3).NumberFormat = "0.00%" 'Formatta rendimento netto a scadenza
.Cells(r, 4).Value = Dati(8, j) - Dati(9, j) 'Scrivi Guadagno capitale ++++++++++++++
Utile_Perdite = Utile_Perdite + .Cells(r, 4).Value
.Cells(r, 4).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Guadagno capitale +++++++++++++++
.Cells(r + 1, 4).Value = Dati(10, j) 'Scrivi Rendimento alla data di valutazione
.Cells(r + 1, 4).NumberFormat = "0.00%" 'Formatta rendimento netto alla data di valutazione
.Cells(r, 5).Value = Dati(9, j)  'Scrivi Capitale Iniziale +++++++++++++++++
.Cells(r, 5).NumberFormat = "[$|fffd|-410] #,##0.00"   'Formatta Capitale Iniziale +++++++++++++++++
.Cells(r + 1, 5).Value = Dati(8, j) 'Scrivi Totale investimeno alla data di valutazione
.Cells(r + 1, 5).Font.Bold = True
.Cells(r + 1, 5).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimeno alla data di valutazione

.Rows(r).RowHeight = 25 '???????????????
.Rows(r + 1).RowHeight = 20 '???????????????
.Rows(r + 2).RowHeight = 7 '???????????????
.Rows(r + 3).RowHeight = 7 '???????????????
.Rows(r).VerticalAlignment = xlCenter '???????????????
.Rows(r).HorizontalAlignment = xlCenter '???????????????
.Rows(r + 1).VerticalAlignment = xlCenter '???????????????
.Rows(r + 1).HorizontalAlignment = xlCenter '???????????????

j = j + 1
cont = cont + 1
        With .Range(.Cells(r, 1), .Cells(r + 1, 5))
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
        End With
        
        If cont = 11 And (k + 1 - 11) >= 1 Then
        If (k + 1 - 11) > 1 Then
        Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Add before:=.Cells(r + 2, 1)
        .Cells(r + 2, 1).Value = "Titolo"
        .Cells(r + 2, 2).Value = "Data Acquisto"
        .Cells(r + 2, 3).Value = "Scadenza"
        .Cells(r + 2, 4).Value = "Guadagno Capitale alla data " & Dati(5, 0)
        .Cells(r + 2, 5).Value = "Capitale Iniziale"
        .Cells(r + 3, 1).Value = "ISIN"
        .Cells(r + 3, 2).Value = "Valore Nominale"
        .Cells(r + 3, 3).Value = "Rendimento a scadenza"
        .Cells(r + 3, 4).Value = "Rendimento netto alla data " & Dati(5, 0)
        .Cells(r + 3, 5).Value = "Capitale alla data " & Dati(5, 0)
      
        .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
        .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
       .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
        .Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
        .Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50
        
         .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
         .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
         .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
         
       End If
        End If
        '+++++++++++++++++++++++
Else
    If cont = 11 And (k + 1 - 11) >= 1 Then
            Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").HPageBreaks.Add before:=.Cells(r - 2, 1)
    End If
        .Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(4, j) 'Scrivi Data Acquisto
        .Cells(r + 1, 1).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(8, j) 'Scrivi Totale investimento
        .Cells(r + 1, 2).Font.Bold = True
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Totale investimento
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
    
End If
Next r
.Cells(r, 1).Value = "Totale Investimenti alla data " & Dati(5, 0)
.Cells(r, 1).Font.Bold = True
.Cells(r, 1).Font.Size = 12
.Cells(r, 2).Value = Totale
.Cells(r, 2).Font.Bold = True
.Cells(r, 2).Font.Size = 14
.Cells(r, 2).NumberFormat = "[$|fffd|-410] #,##0.00"
.Cells(r, 4).Value = "Guadagno Portafoglio Titoli alla data " & Dati(5, 0)
.Cells(r, 4).Font.Bold = True
.Cells(r, 4).Font.Size = 12
.Cells(r, 4).WrapText = True
.Cells(r, 5).Value = Utile_Perdite
.Cells(r, 5).Font.Bold = True
.Cells(r, 5).Font.Size = 14
.Cells(r, 5).NumberFormat = "[$|fffd|-410] #,##0.00"

.Range(.Cells(r, 3), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter

End With

 
    Sheets("MarAnnReport1").Select
    Sheets("MarAnnReport1").Copy
    ActiveWorkbook.SaveAs Filename:="C:\Users\Gio\Documents\Investimenti\_Report\MarAnnNew" & Format(Date, "dd-mm-yy") & ".xlsx"
    ActiveWindow.Close


With Application
.ScreenUpdating = True
.Calculation = xlAutomatic
End With

End Sub


Sub PattyReport()

Dim r As Integer, r1 As Variant, k As Integer, k_CARISBO As Integer, k_BSGSP As Integer, cont As Integer, dLastRow As Integer, dLastRow1 As Integer, switch As Integer, j As Integer, Scad As Variant

Dim Dati() As Variant, TotCARISBO As Currency, TotBSGSP As Currency, Totale As Currency

With Application
.ScreenUpdating = False
.Calculation = xlManual
End With

dLastRow = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga dheet "MarAnn"
dLastRow1 = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga sheet "aggiornamento

r = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("Patty").Range("A1", "A" & dLastRow), 0) 'Prima riga utile per
                                                                                                'la lettura dei dati contrassegnata con #
Totale = 0
TotCARISBO = 0
TotBSGSP = 0
k = -1
switch = 0
k_CARISBO = 0
k_BSGSP = 0

r1 = 0

Do
r = r + r1
k = k + 1
ReDim Preserve Dati(11, k)
Dati(0, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 2).Value ' Banca
Dati(1, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 3).Value ' Tipo Titolo
Dati(2, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 4).Value ' Nome
Dati(3, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 5).Value ' ISIN
Dati(4, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 6).Value ' Data Acquisto
Dati(5, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r + 1, 6).Value ' Data Valutazione
Dati(6, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 7).Value ' V. Nominale
Dati(7, k) = Application.VLookup(Dati(3, k), Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("D1:J" & dLastRow1), 5, False) 'Data Scadenza da sheet "Aggiornamento"
Dati(8, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r + 1, 9).Value ' Capitale Corrente
Dati(9, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 11).Value ' Capitale iniziale
Dati(10, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 12).Value ' Rendimento alla data di valutazione
Dati(11, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 13).Value ' Rendimento a scadenza
If Dati(0, k) = "CARISBO" Then
TotCARISBO = TotCARISBO + Dati(8, k)
k_CARISBO = k_CARISBO + 1
Else
TotBSGSP = TotBSGSP + Dati(8, k)
k_BSGSP = k_BSGSP + 1
End If
Totale = Totale + Dati(8, k)
r1 = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("Patty").Range("A" & r + 1, "A" & dLastRow), 0)
Loop Until (Application.IsNA(r1))

With Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1")
'++++++++++++++

'Workbooks("Update Investimenti.xlsm").Sheets("MarAnnReport1").Cells(1, 1).Value = "CARIPARMA"

.Columns("A:A").ColumnWidth = 22
.Columns("A:A").WrapText = True
.Columns("B:B").ColumnWidth = 17
.Columns("C:C").ColumnWidth = 20
.Columns("D:D").ColumnWidth = 20
.Columns("E:E").ColumnWidth = 20

.Cells(1, 1).Value = "CARISBO"
.Cells(1, 1).Font.Name = "Arial"  '+
.Cells(1, 1).Font.Size = 20 '+
.Cells(1, 1).Font.Bold = True   '+


    With Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").Range("A1:E1")
        .MergeCells = True
        .HorizontalAlignment = xlCenter
    End With
 .Rows("1:1").RowHeight = 28

.Cells(3, 1).Value = "Titolo"
.Cells(3, 2).Value = "Data Acquisto"
.Cells(3, 3).Value = "Scadenza"
.Cells(3, 4).Value = "Data Valutazione"
.Cells(3, 5).Value = "Guadagno data valutazione"
.Cells(4, 1).Value = "ISIN"
.Cells(4, 2).Value = "Valore Nominale"
.Cells(4, 3).Value = "Rendimento a scadenza"
.Cells(4, 4).Value = "Rendimento netto alla data di valutazione "
.Cells(4, 5).Value = "Capitale alla data di valutazione"

.Rows("3:4").Font.Size = 11
.Rows("3:4").Font.Name = "Arial"
.Rows("3:4").Font.Bold = True
.Rows("3:3").RowHeight = 40    '???????????????
.Rows("4:4").RowHeight = 50   '???????????????


 .Rows("3:4").HorizontalAlignment = xlCenter
 .Rows("3:4").VerticalAlignment = xlTop
 .Rows("3:4").WrapText = True

'++++++++++++
cont = 0
j = 0

For r = 5 To (4 * (k + 4)) Step 4

' *************LAYOUT del REPORT per ogni titolo *********************
'Nome   DataAcq.     DataScad              DataValutaz             Guadagno
'ISIN   V_Nominale   RendimentoScadenza      rendimento     TotaleInvestimento

If Dati(0, j) = "CARISBO" Then
    If Dati(1, j) <> "C" Then
        .Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(3, j) 'Scrivi ISIN
        .Cells(r, 2).Value = Dati(4, j) 'Scrivi Data Acquisto
        .Cells(r, 2).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(6, j) 'Scrivi Valore nominale o Quote acquistate
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0" 'Formatta Valore nominale o Quote acquistate
        .Cells(r, 3).Value = Dati(7, j)  'Scrivi Data Scadenza
        .Cells(r, 3).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Scadenza
        .Cells(r + 1, 3).Value = Dati(11, j) 'Scrivi rendimento netto a scadenza
        .Cells(r + 1, 3).NumberFormat = "0.00%" 'Formatta rendimento netto a scadenza
        .Cells(r, 4).Value = Dati(5, j)  'Scrivi Data Valutazione
        .Cells(r, 4).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Valutazione
        .Cells(r + 1, 4).Value = Dati(10, j) 'Scrivi Rendimento alla data di valutazione
        .Cells(r + 1, 4).NumberFormat = "0.00%" 'Formatta rendimento netto alla data di valutazione
        .Cells(r, 5).Value = Dati(9, j)  'Scrivi Guadagno alla data di valutazione
        .Cells(r, 5).NumberFormat = "[$|fffd|-410] #,##0.00"   'Formatta Guadagno alla data di valutazione
        .Cells(r + 1, 5).Value = Dati(8, j) 'Scrivi Totale investimeno alla data di valutazione
        .Cells(r + 1, 5).Font.Bold = True
        .Cells(r + 1, 5).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimeno alla data di valutazione
        
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????


        j = j + 1
        cont = cont + 1
        
        With .Range(.Cells(r, 1), .Cells(r + 1, 5))
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
        End With
        
        If cont = 11 And (k + 1 - 11) >= 1 Then
            If (k + 1 - 11) > 1 Then
                Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r + 2, 1)
              .Cells(r + 2, 1).Value = "Titolo"
              .Cells(r + 2, 2).Value = "Data Acquisto"
              .Cells(r + 2, 3).Value = "Scadenza"
              .Cells(r + 2, 4).Value = "Data Valutazione"
              .Cells(r + 2, 5).Value = "Guadagno data valutazione"
              .Cells(r + 3, 1).Value = "ISIN"
              .Cells(r + 3, 2).Value = "Valore Nominale"
              .Cells(r + 3, 3).Value = "Rendimento a scadenza"
              .Cells(r + 3, 4).Value = "Rendimento netto alla data di valutazione "
              .Cells(r + 3, 5).Value = "Capitale alla data di valutazione"
            
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
             .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
              .Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
              .Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50
              
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
       End If
        End If


    Else
        If cont = 11 And (k + 1 - 11) >= 1 Then
            Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r - 2, 1)
        End If
        .Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(4, j) 'Scrivi Data Acquisto
        .Cells(r + 1, 1).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(8, j) 'Scrivi Totale investimento
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Totale investimento
        .Cells(r + 1, 2).Font.Bold = True
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
        
        .Cells(r + 5, 1).Value = "Totale Investimenti CARISBO"
        .Cells(r + 5, 1).Font.Bold = True
        .Cells(r + 5, 1).Font.Size = 14
        .Cells(r + 5, 2).Value = TotCARISBO
        .Cells(r + 5, 2).Font.Bold = True
        .Cells(r + 5, 2).Font.Size = 14
        .Cells(r + 5, 2).NumberFormat = "[$|fffd|-410] #,##0.00"
        r = r + 5
        j = j + 1
    End If

Else
If switch = 0 Then

    Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r, 1)
    
.Cells(r, 1).Value = "B.co SGSP"
.Cells(r, 1).Font.Name = "Arial"  '+
.Cells(r, 1).Font.Size = 20 '+
.Cells(r, 1).Font.Bold = True   '+

    With Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").Range(.Cells(r, 1), .Cells(r, 5))
        .MergeCells = True
        .HorizontalAlignment = xlCenter
    End With
 .Rows(r).RowHeight = 28

.Cells(r + 2, 1).Value = "Titolo"
.Cells(r + 2, 2).Value = "Data Acquisto"
.Cells(r + 2, 3).Value = "Scadenza"
.Cells(r + 2, 4).Value = "Data Valutazione"
.Cells(r + 2, 5).Value = "Guadagno data valutazione"
.Cells(r + 3, 1).Value = "ISIN"
.Cells(r + 3, 2).Value = "Valore Nominale"
.Cells(r + 3, 3).Value = "Rendimento a scadenza"
.Cells(r + 3, 4).Value = "Rendimento netto alla data di valutazione "
.Cells(r + 3, 5).Value = "Capitale alla data di valutazione"

.Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
.Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
.Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
.Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
.Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50

 .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
 .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
 .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
 switch = 1
 cont = 0
 Else
    If Dati(1, j) <> "C" Then
        .Cells(r, 1).Value = Dati(2, j)  ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(3, j) 'Scrivi ISIN
        .Cells(r, 2).Value = Dati(4, j)  'Scrivi Data Acquisto
        .Cells(r, 2).NumberFormat = "[$-410]d-mmm-yy;@"  'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(6, j)  'Scrivi Valore nominale o Quote acquistate
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0"  'Formatta Valore nominale o Quote acquistate
        .Cells(r, 3).Value = Dati(7, j)  'Scrivi Data Scadenza
        .Cells(r, 3).NumberFormat = "[$-410]d-mmm-yy;@"  'Formatta Data Scadenza
        .Cells(r + 1, 3).Value = Dati(11, j)  'Scrivi rendimento netto a scadenza
        .Cells(r + 1, 3).NumberFormat = "0.00%"  'Formatta rendimento netto a scadenza
        .Cells(r, 4).Value = Dati(5, j)  'Scrivi Data Valutazione
        .Cells(r, 4).NumberFormat = "[$-410]d-mmm-yy;@"  'Formatta Data Valutazione
        .Cells(r + 1, 4).Value = Dati(10, j) 'Scrivi Rendimento alla data di valutazione
        .Cells(r + 1, 4).NumberFormat = "0.00%"  'Formatta rendimento netto alla data di valutazione
        .Cells(r, 5).Value = Dati(9, j)  'Scrivi Guadagno alla data di valutazione
        .Cells(r + 4, 5).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Guadagno alla data di valutazione
        .Cells(r + 1, 5).Value = Dati(8, j)  'Scrivi Totale investimeno alla data di valutazione
        .Cells(r + 1, 5).Font.Bold = True
        .Cells(r + 1, 5).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimeno alla data di valutazione
        
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
        
        j = j + 1
        cont = cont + 1
           
        With .Range(.Cells(r, 1), .Cells(r + 1, 5))
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
        End With
        
        If cont = 11 And (k + 1 - 11) >= 1 Then
            If (k + 1 - 11) > 1 Then
              Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r + 2, 1)
              .Cells(r + 2, 1).Value = "Titolo"
              .Cells(r + 2, 2).Value = "Data Acquisto"
              .Cells(r + 2, 3).Value = "Scadenza"
              .Cells(r + 2, 4).Value = "Data Valutazione"
              .Cells(r + 2, 5).Value = "Guadagno data valutazione"
              .Cells(r + 3, 1).Value = "ISIN"
              .Cells(r + 3, 2).Value = "Valore Nominale"
              .Cells(r + 3, 3).Value = "Rendimento a scadenza"
              .Cells(r + 3, 4).Value = "Rendimento netto alla data di valutazione "
              .Cells(r + 3, 5).Value = "Capitale alla data di valutazione"
            
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
             .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
              .Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
              .Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50
              
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
       End If
        End If
  
    Else
        If cont = 11 And (k + 1 - 11) >= 1 Then
            Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r - 2, 1)
        End If
        .Cells(r, 1).Value = Dati(2, j)  ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(4, j)  'Scrivi Data Acquisto
        .Cells(r + 1, 1).NumberFormat = "[$-410]d-mmm-yy;@"  'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(8, j)  'Scrivi Totale investimento
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimento
                .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
        
        .Cells(r + 5, 1).Value = "Totale Investimenti BSGSP"
        .Cells(r + 5, 1).Font.Bold = True
        .Cells(r + 5, 1).Font.Size = 14
        .Cells(r + 5, 2).Value = TotBSGSP
        .Cells(r + 5, 2).Font.Bold = True
        .Cells(r + 5, 2).Font.Size = 14

        .Cells(r + 5, 2).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    End If
    End If
End If
Next r
.Cells(r + 5, 1).Value = "Totale Investimenti"
.Cells(r + 5, 1).Font.Bold = True
.Cells(r + 5, 1).Font.Size = 14
.Cells(r + 5, 2).Value = Totale
.Cells(r + 5, 2).Font.Bold = True
.Cells(r + 5, 2).Font.Size = 14
.Cells(r + 5, 2).NumberFormat = "[$|fffd|-410] #,##0.00"

End With
'Esci:


With Application
.ScreenUpdating = True
.Calculation = xlAutomatic
End With

    Sheets("PattyReport1").Select
    Sheets("PattyReport1").Copy
    ActiveWorkbook.SaveAs Filename:="C:\Users\Gio\Documents\Investimenti\_Report\Patty" & Format(Date, "dd-mm-yy") & ".xls"
    ActiveWindow.Close


End Sub

Sub PattyReportNew()

Dim r As Integer, r1 As Variant, k As Integer, k_CARISBO As Integer, k_BSGSP As Integer, cont As Integer, dLastRow As Integer, dLastRow1 As Integer, switch As Integer, j As Integer, Scad As Variant

Dim Dati() As Variant, TotCARISBO As Currency, TotBSGSP As Currency, Totale As Currency, Utile_Perdite As Currency

With Application
.ScreenUpdating = False
.Calculation = xlManual
End With

dLastRow = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga dheet "MarAnn"
dLastRow1 = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByRows, xlPrevious).Row 'ultima riga sheet "aggiornamento

r = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("Patty").Range("A1", "A" & dLastRow), 0) 'Prima riga utile per
                                                                                                'la lettura dei dati contrassegnata con #
Totale = 0
TotCARISBO = 0
TotBSGSP = 0
k = -1
switch = 0
k_CARISBO = 0
k_BSGSP = 0

r1 = 0
Utile_Perdite = 0

Do
r = r + r1
k = k + 1
ReDim Preserve Dati(11, k)
Dati(0, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 2).Value ' Banca
Dati(1, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 3).Value ' Tipo Titolo
Dati(2, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 4).Value ' Nome
Dati(3, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 5).Value ' ISIN
Dati(4, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 6).Value ' Data Acquisto
Dati(5, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r + 1, 6).Value ' Data Valutazione
Dati(6, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 7).Value ' V. Nominale
Dati(7, k) = Application.VLookup(Dati(3, k), Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("D1:J" & dLastRow1), 5, False) 'Data Scadenza da sheet "Aggiornamento"
Dati(8, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r + 1, 9).Value ' Capitale Corrente
Dati(9, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 9).Value ' Capitale iniziale
Dati(10, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 12).Value ' Rendimento alla data di valutazione
Dati(11, k) = Workbooks("Update Investimenti.xlsm").Sheets("Patty").Cells(r, 13).Value ' Rendimento a scadenza
If Dati(0, k) = "CARISBO" Then
TotCARISBO = TotCARISBO + Dati(8, k)
k_CARISBO = k_CARISBO + 1
Else
TotBSGSP = TotBSGSP + Dati(8, k)
k_BSGSP = k_BSGSP + 1
End If
Totale = Totale + Dati(8, k)
r1 = Application.Match("~#", Workbooks("Update Investimenti.xlsm").Sheets("Patty").Range("A" & r + 1, "A" & dLastRow), 0)
Loop Until (Application.IsNA(r1))

With Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1")
'++++++++++++++


.Columns("A:A").ColumnWidth = 22
.Columns("A:A").WrapText = True
.Columns("B:B").ColumnWidth = 17
.Columns("C:C").ColumnWidth = 20
.Columns("D:D").ColumnWidth = 20
.Columns("E:E").ColumnWidth = 20

.Cells(1, 1).Value = "CARISBO"
.Cells(1, 1).Font.Name = "Arial"  '+
.Cells(1, 1).Font.Size = 20 '+
.Cells(1, 1).Font.Bold = True   '+


    With Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").Range("A1:E1")
        .MergeCells = True
        .HorizontalAlignment = xlCenter
    End With
 .Rows("1:1").RowHeight = 28

.Cells(3, 1).Value = "Titolo"
.Cells(3, 2).Value = "Data Acquisto"
.Cells(3, 3).Value = "Scadenza"
.Cells(3, 4).Value = "Guadagno Capitale alla data " & Dati(5, 0)
.Cells(3, 5).Value = "Capitale Iniziale"
.Cells(4, 1).Value = "ISIN"
.Cells(4, 2).Value = "Valore Nominale"
.Cells(4, 3).Value = "Rendimento a scadenza"
.Cells(4, 4).Value = "Rendimento netto alla data " & Dati(5, 0)
.Cells(4, 5).Value = "Capitale alla data " & Dati(5, 0)

.Rows("3:4").Font.Size = 11
.Rows("3:4").Font.Name = "Arial"
.Rows("3:4").Font.Bold = True
.Rows("3:3").RowHeight = 40    '???????????????
.Rows("4:4").RowHeight = 50   '???????????????


 .Rows("3:4").HorizontalAlignment = xlCenter
 .Rows("3:4").VerticalAlignment = xlTop
 .Rows("3:4").WrapText = True

'++++++++++++
cont = 0
j = 0

For r = 5 To (4 * (k - 2 + 4)) Step 4

' *************LAYOUT del REPORT per ogni titolo *********************
'Nome   DataAcq.     DataScad              DataValutaz             Guadagno
'ISIN   V_Nominale   RendimentoScadenza      rendimento     TotaleInvestimento

If Dati(0, j) = "CARISBO" Then
    If Dati(1, j) <> "C" Then
        .Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(3, j) 'Scrivi ISIN
        .Cells(r, 2).Value = Dati(4, j) 'Scrivi Data Acquisto
        .Cells(r, 2).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(6, j) 'Scrivi Valore nominale o Quote acquistate
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0" 'Formatta Valore nominale o Quote acquistate
        .Cells(r, 3).Value = Dati(7, j)  'Scrivi Data Scadenza
        .Cells(r, 3).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Scadenza
        .Cells(r + 1, 3).Value = Dati(11, j) 'Scrivi rendimento netto a scadenza
        .Cells(r + 1, 3).NumberFormat = "0.00%" 'Formatta rendimento netto a scadenza
        .Cells(r, 4).Value = Dati(8, j) - Dati(9, j) 'Scrivi Guadagno capitale ++++++++++++++
        Utile_Perdite = Utile_Perdite + .Cells(r, 4).Value
        .Cells(r, 4).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Guadagno capitale +++++++++++++++
        .Cells(r + 1, 4).Value = Dati(10, j) 'Scrivi Rendimento alla data di valutazione
        .Cells(r + 1, 4).NumberFormat = "0.00%" 'Formatta rendimento netto alla data di valutazione
        .Cells(r, 5).Value = Dati(9, j)  'Scrivi Capitale Iniziale +++++++++++++++++
        .Cells(r, 5).NumberFormat = "[$|fffd|-410] #,##0.00"   'Formatta Capitale Iniziale +++++++++++++++++
        .Cells(r + 1, 5).Value = Dati(8, j) 'Scrivi Totale investimeno alla data di valutazione
        .Cells(r + 1, 5).Font.Bold = True
        .Cells(r + 1, 5).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimeno alla data di valutazione
        
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????


        j = j + 1
        cont = cont + 1
        
        With .Range(.Cells(r, 1), .Cells(r + 1, 5))
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
        End With
        
        If cont = 11 And (k + 1 - 11) >= 1 Then
            If (k + 1 - 11) > 1 Then
                Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r + 2, 1)
              .Cells(r + 2, 1).Value = "Titolo"
              .Cells(r + 2, 2).Value = "Data Acquisto"
              .Cells(r + 2, 3).Value = "Scadenza"
              .Cells(r + 2, 4).Value = "Guadagno Capitale alla data " & Dati(5, 0)
              .Cells(r + 2, 5).Value = "Capitale Iniziale"
              .Cells(r + 3, 1).Value = "ISIN"
              .Cells(r + 3, 2).Value = "Valore Nominale"
              .Cells(r + 3, 3).Value = "Rendimento a scadenza"
              .Cells(r + 3, 4).Value = "Rendimento netto alla data " & Dati(5, 0)
              .Cells(r + 3, 5).Value = "Capitale alla data " & Dati(5, 0)
            
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
             .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
              .Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
              .Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50
              
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
       End If
        End If


    Else
        If cont = 11 And (k + 1 - 11) >= 1 Then
            Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r - 2, 1)
        End If
        .Cells(r, 1).Value = Dati(2, j) ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(4, j) 'Scrivi Data Acquisto
        .Cells(r + 1, 1).NumberFormat = "[$-410]d-mmm-yy;@" 'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(8, j) 'Scrivi Totale investimento
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Totale investimento
        .Cells(r + 1, 2).Font.Bold = True
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
        
        .Cells(r + 5, 1).Value = "Totale Investimenti CARISBO alla data " & Dati(5, 0)
        .Cells(r + 5, 1).Font.Bold = True
        .Cells(r + 5, 1).Font.Size = 14
        .Cells(r + 5, 2).Value = TotCARISBO
        .Cells(r + 5, 2).Font.Bold = True
        .Cells(r + 5, 2).Font.Size = 14
        .Cells(r + 5, 2).NumberFormat = "[$|fffd|-410] #,##0.00"
        r = r + 5
        j = j + 1
    End If

Else
If switch = 0 Then

    Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r, 1)
    
.Cells(r, 1).Value = "B.co SGSP"
.Cells(r, 1).Font.Name = "Arial"  '+
.Cells(r, 1).Font.Size = 20 '+
.Cells(r, 1).Font.Bold = True   '+

    With Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").Range(.Cells(r, 1), .Cells(r, 5))
        .MergeCells = True
        .HorizontalAlignment = xlCenter
    End With
 .Rows(r).RowHeight = 28

.Cells(r + 2, 1).Value = "Titolo"
.Cells(r + 2, 2).Value = "Data Acquisto"
.Cells(r + 2, 3).Value = "Scadenza"
.Cells(r + 2, 4).Value = "Guadagno Capitale alla data " & Dati(5, 0)
.Cells(r + 2, 5).Value = "Capitale Iniziale"
.Cells(r + 3, 1).Value = "ISIN"
.Cells(r + 3, 2).Value = "Valore Nominale"
.Cells(r + 3, 3).Value = "Rendimento a scadenza"
.Cells(r + 3, 4).Value = "Rendimento netto alla data " & Dati(5, 0)
.Cells(r + 3, 5).Value = "Capitale alla data " & Dati(5, 0)

.Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
.Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
.Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
.Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
.Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50

 .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
 .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
 .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
 switch = 1
 cont = 0
 Else
    If Dati(1, j) <> "C" Then
        .Cells(r, 1).Value = Dati(2, j)  ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(3, j) 'Scrivi ISIN
        .Cells(r, 2).Value = Dati(4, j)  'Scrivi Data Acquisto
        .Cells(r, 2).NumberFormat = "[$-410]d-mmm-yy;@"  'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(6, j)  'Scrivi Valore nominale o Quote acquistate
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0"  'Formatta Valore nominale o Quote acquistate
        .Cells(r, 3).Value = Dati(7, j)  'Scrivi Data Scadenza
        .Cells(r, 3).NumberFormat = "[$-410]d-mmm-yy;@"  'Formatta Data Scadenza
        .Cells(r + 1, 3).Value = Dati(11, j)  'Scrivi rendimento netto a scadenza
        .Cells(r + 1, 3).NumberFormat = "0.00%"  'Formatta rendimento netto a scadenza
        .Cells(r, 4).Value = Dati(8, j) - Dati(9, j) 'Scrivi Guadagno capitale ++++++++++++++
        Utile_Perdite = Utile_Perdite + .Cells(r, 4).Value
        .Cells(r, 4).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Guadagno capitale +++++++++++++++
        .Cells(r + 1, 4).Value = Dati(10, j) 'Scrivi Rendimento alla data di valutazione
        .Cells(r + 1, 4).NumberFormat = "0.00%"  'Formatta rendimento netto alla data di valutazione
        .Cells(r, 5).Value = Dati(9, j)  'Scrivi Capitale Iniziale +++++++++++++++++
        .Cells(r + 4, 5).NumberFormat = "[$|fffd|-410] #,##0.00" 'Formatta Capitale Iniziale +++++++++++++++++
        .Cells(r + 1, 5).Value = Dati(8, j)  'Scrivi Totale investimeno alla data di valutazione
        .Cells(r + 1, 5).Font.Bold = True
        .Cells(r + 1, 5).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimeno alla data di valutazione
        
        .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
        
        j = j + 1
        cont = cont + 1
           
        With .Range(.Cells(r, 1), .Cells(r + 1, 5))
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeTop).Weight = xlMedium
        .Borders(xlEdgeTop).ColorIndex = xlAutomatic
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlMedium
        .Borders(xlEdgeBottom).ColorIndex = xlAutomatic
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).Weight = xlMedium
        .Borders(xlEdgeLeft).ColorIndex = xlAutomatic
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeRight).Weight = xlMedium
        .Borders(xlEdgeRight).ColorIndex = xlAutomatic
        End With
        
        If cont = 11 And (k + 1 - 11) >= 1 Then
            If (k + 1 - 11) > 1 Then
              Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r + 2, 1)
              .Cells(r + 2, 1).Value = "Titolo"
              .Cells(r + 2, 2).Value = "Data Acquisto"
              .Cells(r + 2, 3).Value = "Scadenza"
              .Cells(r + 2, 4).Value = "Guadagno Capitale alla data " & Dati(5, 0)
              .Cells(r + 2, 5).Value = "Capitale Iniziale"
              .Cells(r + 3, 1).Value = "ISIN"
              .Cells(r + 3, 2).Value = "Valore Nominale"
              .Cells(r + 3, 3).Value = "Rendimento a scadenza"
              .Cells(r + 3, 4).Value = "Rendimento netto alla data " & Dati(5, 0)
              .Cells(r + 3, 5).Value = "Capitale alla data " & Dati(5, 0)
            
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Size = 11
              .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Name = "Arial"
             .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).Font.Bold = True
              .Range(.Cells(r + 2, 1), .Cells(r + 2, 5)).RowHeight = 40
              .Range(.Cells(r + 3, 1), .Cells(r + 3, 5)).RowHeight = 50
              
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).VerticalAlignment = xlTop
               .Range(.Cells(r + 2, 1), .Cells(r + 3, 5)).WrapText = True
       End If
        End If
  
    Else
        If cont = 11 And (k + 1 - 11) >= 1 Then
            Workbooks("Update Investimenti.xlsm").Sheets("PattyReport1").HPageBreaks.Add before:=.Cells(r - 2, 1)
        End If
        .Cells(r, 1).Value = Dati(2, j)  ' Scrivi nome
        .Cells(r, 1).Font.Bold = True '???????????????
        .Cells(r + 1, 1).Value = Dati(4, j)  'Scrivi Data Acquisto
        .Cells(r + 1, 1).NumberFormat = "[$-410]d-mmm-yy;@"  'Formatta Data Acquisto
        .Cells(r + 1, 2).Value = Dati(8, j)  'Scrivi Totale investimento
        .Cells(r + 1, 2).NumberFormat = "[$|fffd|-410] #,##0.00"  'Formatta Totale investimento
                .Rows(r).RowHeight = 25 '???????????????
        .Rows(r + 1).RowHeight = 20 '???????????????
        .Rows(r + 2).RowHeight = 7 '???????????????
        .Rows(r + 3).RowHeight = 7 '???????????????
        .Rows(r).VerticalAlignment = xlCenter '???????????????
        .Rows(r).HorizontalAlignment = xlCenter '???????????????
        .Rows(r + 1).VerticalAlignment = xlCenter '???????????????
        .Rows(r + 1).HorizontalAlignment = xlCenter '???????????????
        
        .Cells(r + 5, 1).Value = "Totale Investimenti BSGSP alla data " & Dati(5, 0)
        .Cells(r + 5, 1).Font.Bold = True
        .Cells(r + 5, 1).Font.Size = 14
        .Cells(r + 5, 2).Value = TotBSGSP
        .Cells(r + 5, 2).Font.Bold = True
        .Cells(r + 5, 2).Font.Size = 14

        .Cells(r + 5, 2).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    End If
    End If
End If
Next r
.Cells(r + 5, 1).Value = "Totale Investimenti alla data " & Dati(5, 0)
.Cells(r + 5, 1).Font.Bold = True
.Cells(r + 5, 1).Font.Size = 14
.Cells(r + 5, 2).Value = Totale
.Cells(r + 5, 2).Font.Bold = True
.Cells(r + 5, 2).Font.Size = 14
.Cells(r + 5, 2).NumberFormat = "[$|fffd|-410] #,##0.00"

.Cells(r + 5, 4).Value = "Guadagno Portafoglio Titoli alla data " & Dati(5, 0)
.Cells(r + 5, 4).Font.Bold = True
.Cells(r + 5, 4).Font.Size = 12
.Cells(r + 5, 4).WrapText = True
.Cells(r + 5, 5).Value = Utile_Perdite
.Cells(r + 5, 5).Font.Bold = True
.Cells(r + 5, 5).Font.Size = 14
.Cells(r + 5, 5).NumberFormat = "[$|fffd|-410] #,##0.00"

.Range(.Cells(r, 3), .Cells(r + 3, 5)).HorizontalAlignment = xlCenter


End With
'Esci:


With Application
.ScreenUpdating = True
.Calculation = xlAutomatic
End With

    Sheets("PattyReport1").Select
    Sheets("PattyReport1").Copy
    ActiveWorkbook.SaveAs Filename:="C:\Users\Gio\Documents\Investimenti\_Report\PattyNew" & Format(Date, "dd-mm-yy") & ".xlsx"
    ActiveWindow.Close


End Sub


Function LastRow()
'Tom Ogilvy, mpep
'foglio attivo, colonna A
UR = Cells(Cells.Rows.Count, "T").End(xlUp).Row
End Function

Sub CCT()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant
Dim strName As String, Num_cedole As Byte, Data_Acq As Date, Column_Quotaz As Byte

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Data_Acq = InputBox("Inserire data acquisto titolo") '***NUOVO
Num_cedole = Application.CoupNum(Data_Acq, DateValue(Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 8)), _
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9), 3) '***NUOVO

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If

SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (e.g. 7.1)")

SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (e.g. 43.17)")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Data_Acq
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
     
     
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
    
      '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE
  
    
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
            'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
        ' ++++++++++++++++++++
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
        'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"

    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & ")"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 5).NumberFormat = "0.00"
    
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4) = 0.005  '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4).NumberFormat = "0.00%"   '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"   '***NUOVO
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To Num_cedole    '***NUOVO
    
        If j = 1 Then
    
            'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    'Calcolo la cedola vedendo stime aste BOT semestrali
    Cells(ActiveCell.Row + 5 + j, 5).Formula = "=VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$I$51:$J$158,2,TRUE)"
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.000%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
      Else
    Cells(ActiveCell.Row + 5 + j, 5).Formula = "=VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$I$51:$J$158,2,TRUE)"
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.000%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
      End If
      
    '****************************************************************
         'Calcolo flusso cedolare per investimento tenuto fino a scenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>H" & ActiveCell.Row + 5 + j & " ),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),0)))"
   
    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
          'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
     '*******************************
  
       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & ")-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
    Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "%"
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + Num_cedole + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    'Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*P" & ActiveCell.Row + 5 + j & "*T"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100 -Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
 Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T"
Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 5 + j & ">0," & "G" & ActiveCell.Row + 2 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With

'**********************************************************

    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************

'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Mario per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Gio per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub

Sub BTP_INF() '***NUOVO
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant, NumIndice_Acq As Variant, TassoAnnuo As Variant
Dim strName As String, Infl_Type As String, Num_cedole As Byte, Data_Acq As Date, N_cedole_anno As Byte, Column_Quotaz As Byte


RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Data_Acq = InputBox("Inserire data acquisto titolo") '***NUOVO
Num_cedole = Application.CoupNum(Data_Acq, DateValue(Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 8)), _
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9), 3) '***NUOVO
N_cedole_anno = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9).Value

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If

torna1: 'si definisce quale tipo di coefficiente di indicazzazione ha il titolo
Infl_Type = InputBox(prompt:="F=Italia (FOI), H =Italia (HICP)", _
          Title:="Coefficiente di indiciazzazione del titolo", Default:="F o H?")
        If Infl_Type <> "F" And Infl_Type <> "H" Then
        GoTo torna1
        End If



SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (14.7)")
TassoAnnuo = InputBox("Inserire Tasso annuo previsto dall'obbligazione (i.e. 3.5%)")

'Numero indice data regolamento
NumIndice_Acq = InputBox("Inserire numero indice inflazione alla data di regolamento (eg 1.068)")

SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (50.17)")


 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Data_Acq     '***NUOVO
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
     
     
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
     
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE
     
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    Cells(ActiveCell.Row + 1, 11).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     Cells(ActiveCell.Row + 1, 12).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    Cells(ActiveCell.Row + 1, 13).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
         'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
    ' ++++++++++++++++++++
    
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

    
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
                'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"
    
    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "*" & NumIndice_Acq & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & "*" & NumIndice_Acq & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & "* H" & ActiveCell.Row + 2 & "% *" & NumIndice_Acq & ")"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 5).NumberFormat = "[$|fffd|-410] #,##0.000"
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2 'XXXX
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4) = 0.005  '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4).NumberFormat = "0.00%"   '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"   '***NUOVO
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To Num_cedole    '***NUOVO
    
    
    'Calcolo la stima del numero indice dalla stima dell'inflazione annua
    If j = 1 Then
        
    'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
    
        'si usa come valore iniziale NumIndice_Acq, verificando quale tipo di indicizzazione ha iltitolo (FOI o HICP)
        If Infl_Type = "F" Then
        Cells(ActiveCell.Row + 5 + j, 4).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "), Aggiornamento!$L$" & RowAgg & ",(1 + VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,2,FALSE)/" & N_cedole_anno & ")*" & NumIndice_Acq & ")"
        Else
        Cells(ActiveCell.Row + 5 + j, 4).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "), Aggiornamento!$L$" & RowAgg & ",(1 + VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,3,FALSE)/" & N_cedole_anno & ")*" & NumIndice_Acq & ")"
        End If
    
    Cells(ActiveCell.Row + 5 + j, 4).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 4).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 4).NumberFormat = "0.00000"
   
   'Calcolo la cedola  a partire dalla stima del numero indice
    Cells(ActiveCell.Row + 5 + j, 5).Formula = "= D" & ActiveCell.Row + 5 + j & "*" & TassoAnnuo & "/" & N_cedole_anno
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Else
    'per i numeri indici successivi al primo si usa come base il numero indice immediatamente precedente n-1
        'si usa come valore iniziale NumIndice_Acq, verificando quale tipo di indicizzazione ha iltitolo (FOI o HICP)
    If Infl_Type = "F" Then
    Cells(ActiveCell.Row + 5 + j, 4).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "), Aggiornamento!$M$" & RowAgg & ",(1 + VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,2,FALSE)/" & N_cedole_anno & ")* D" & ActiveCell.Row + 4 + j & ")"
    Else
    Cells(ActiveCell.Row + 5 + j, 4).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "), Aggiornamento!$M$" & RowAgg & ",(1 + VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,3,FALSE)/" & N_cedole_anno & ")* D" & ActiveCell.Row + 4 + j & ")"
    End If
    
    Cells(ActiveCell.Row + 5 + j, 4).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 4).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 4).NumberFormat = "0.00000"
   
    Cells(ActiveCell.Row + 5 + j, 5).Formula = "= D" & ActiveCell.Row + 5 + j & "*" & TassoAnnuo & "/" & N_cedole_anno
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"

    
    End If
    '****************************************************************
    'FLUSSO CEDOLE PER TITOLO TENUTO FINO A SCADENZA
      If Infl_Type = "F" Then
        Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "),$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)*(1 + (VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,2,FALSE)/" & N_cedole_anno & ")*( F" & ActiveCell.Row + 5 + j & "-H" & ActiveCell.Row + 5 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 5 + j - 1 & ")),$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T))"

     Else
        Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "),$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)*(1 + (VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,3,FALSE)/" & N_cedole_anno & ")*( F" & ActiveCell.Row + 5 + j & "-H" & ActiveCell.Row + 5 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 5 + j - 1 & ")),$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T))"
     End If
     
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
       
       '***** ricavo alla vendita
   'Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>H" & ActiveCell.Row + 5 + j & " ),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),0)))"

    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
         'Flussi di cassa reali NUOVO ****************
        'scadenza
        '***NUOVO )/VLOOKUP
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
     '*******************************
       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "* D" & ActiveCell.Row + 5 + j & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & "* D" & ActiveCell.Row + 5 + j & ")-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
    Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "% * D" & ActiveCell.Row + 5 + j
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + Num_cedole + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
    
    'Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*P" & ActiveCell.Row + 5 + j & "*T"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100*D" & ActiveCell.Row + 5 + j - 1 & "-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100*D" & ActiveCell.Row + 5 + j - 1 & "-Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
 Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T"
Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 5 + j & ">0," & "G" & ActiveCell.Row + 2 & "*D" & ActiveCell.Row + 5 + j - 1 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "*D" & ActiveCell.Row + 5 + j - 1 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With

    'Flussi di cassa reali NUOVO ****************
        'scadenza
        '***NUOVO
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************

'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub


Sub BOT()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant
Dim strName As String, Column_Quotaz As Byte

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If
        
SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (e.g. 7.14)")

SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (e.g. 47.5)")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Now() - 360
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 6 & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale

    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 6 & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 6 & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 6 & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 6 & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 7 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 7 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
    
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 7 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 7 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
     
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE
          
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
            'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
    ' ++++++++++++++++++++
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
        'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"
    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & "* H" & ActiveCell.Row + 2 & "% )"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 4).NumberFormat = "[$-410] #,##0.00"
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + 1 + 2, 4) = 0.005
      Cells(ActiveCell.Row + 5 + 1 + 2, 4).NumberFormat = "0.00%"
      Cells(ActiveCell.Row + 5 + 1 + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To 1
    
    
            'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     

      Cells(ActiveCell.Row + 5 + j, 6).Formula = "=F" & ActiveCell.Row + 3
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
   Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
'   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
  
    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP(F" & ActiveCell.Row + 4 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP(F" & ActiveCell.Row + 4 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
'*******************************
       
       'CSNNv o prezzo medio fiscale
    Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & ")-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
    Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "% "
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + 1 + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
'    Disaggio emissione vendita (Per i BOT il disaggio di emissione si paga TUTTO subito all'acquisto ma in caso di vendita anticipata il compratore
'    deve rimborsare il disaggio di emissione al venditore per il periodo non goduto
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$H$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=IF(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & "-$D$" & ActiveCell.Row + 5 + 1 + 2 & "*100>0,(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & "-$D$" & ActiveCell.Row + 5 + 1 + 2 & "*100)%*P" & ActiveCell.Row + 5 + j & "*T,0)"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza ==> PER I BOT viene pagato all'acquisto e non alla scadenza
'  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100" & "-Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
' Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza  ==> PER I BOT viene pagata all'acquisto e alla scadenza viene rimborsato 100
'Cells(ActiveCell.Row + 5 + j, 11).Formula = "=IF(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ">0,(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T,0)"
'Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 2 & ">0," & "G" & ActiveCell.Row + 2 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With

'**********************************************************
    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP(F" & ActiveCell.Row + 4 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************

'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Mario per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub


Sub CTZ()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Integer, SpeseTotAcquisto As Integer, NumIndice_Acq As Double, TassoAnnuo As Double
Dim strName As String, Column_Quotaz As Byte

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If
        
SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo")

SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Now() - 360
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 6 & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 6 & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 6 & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 6 & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 6 & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 7 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 7 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
    
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 7 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 7 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
    
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE

    
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
             'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
    ' ++++++++++++++++++++
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
                'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"

    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & " )"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 4).NumberFormat = "[$-410] #,##0.00"
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + 1 + 2, 4) = 0.005
      Cells(ActiveCell.Row + 5 + 1 + 2, 4).NumberFormat = "0.00%"
      Cells(ActiveCell.Row + 5 + 1 + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To 1


            'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
      Cells(ActiveCell.Row + 5 + j, 6).Formula = "=F" & ActiveCell.Row + 3
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
   Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"

    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
 '  Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"

    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
       
'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP(F" & ActiveCell.Row + 4 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP(F" & ActiveCell.Row + 4 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
'*******************************

       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & ")-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
    Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "% "
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + 1 + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
'    Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*P" & ActiveCell.Row + 5 + j & "*T"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100 -Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
' Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T"
 Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 5 + j & ">0," & "G" & ActiveCell.Row + 2 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With

'**********************************************************
    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP(F" & ActiveCell.Row + 4 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************


'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub

Sub TV_EURIBOR_6M()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant
Dim strName As String

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")
torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If
        
SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (e.g. 7.1)")

SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (e.g. 43.17)")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Now() - 360
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 16 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 16 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
     
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
    Cells(ActiveCell.Row + 3, 8).Formula = "=Aggiornamento!M" & RowAgg
    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & ")"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 5).NumberFormat = "0.00"
    
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + 10 + 2, 4) = 0.005
      Cells(ActiveCell.Row + 5 + 10 + 2, 4).NumberFormat = "0.00%"
      Cells(ActiveCell.Row + 5 + 10 + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To 10
    'Calcolo la cedola vedendo stime euribor 6M
   
    Cells(ActiveCell.Row + 5 + j, 5).Formula = "=VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$R$67:$T$97,3,TRUE)"
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.000%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
    '****************************************************************
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   
    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & ")"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
    Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "%"
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    'Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=IF(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & "-$D$" & ActiveCell.Row + 5 + 10 + 2 & "*100>0,(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & "-$D$" & ActiveCell.Row + 5 + 10 + 2 & "*100)%*P" & ActiveCell.Row + 5 + j & "*T,0)"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100-Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
 Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=IF(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ">0,(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T,0)"
Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=G" & ActiveCell.Row + 2 & "- MAX(K" & ActiveCell.Row + 5 + j & ",M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With

'**********************************************************
'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, CT As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
 'CT |fffd| colonna relativa a Mario per il Costo Totale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        CT = Application.Match("Costo Acq. Totale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, CT - 1 + c_m).Formula = "=MarAnn!I" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'CT |fffd| colonna relativa a Giovanni per il Costo Totale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        CT = Application.Match("Costo Acq. Totale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, CT - 1 + c_g).Formula = "=Gio!I" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'CT |fffd| colonna relativa a Patty per il Costo Totale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        CT = Application.Match("Costo Acq. Totale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, CT - 1 + c_p).Formula = "=Patty!I" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patty per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
End Sub

Sub BTP_IT()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant, NumIndice_Acq As Variant, TassoAnnuo As Variant
Dim strName As String, Infl_Type As String, Num_cedole As Byte, Data_Acq As Date, Column_Quotaz As Byte

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Data_Acq = InputBox("Inserire data acquisto titolo") '***NUOVO
Num_cedole = Application.CoupNum(Data_Acq, DateValue(Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 8)), _
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9), 3) '***NUOVO

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If
        
SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (14.7)")
TassoAnnuo = InputBox("Inserire Tasso annuo previsto dall'obbligazione (i.e. 3.5%)")

'Numero indice data regolamento
' NumIndice_Acq = InputBox("Inserire numero indice inflazione alla data di regolamento (eg 1.068)")
        NumIndice_Acq = 1
SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (50.17)")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Data_Acq     '***NUOVO
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
     
     
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
     
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE
  
     
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    Cells(ActiveCell.Row + 1, 11).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     Cells(ActiveCell.Row + 1, 12).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    Cells(ActiveCell.Row + 1, 13).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
        'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
    ' ++++++++++++++++++++
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
               'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"
 
    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "*" & NumIndice_Acq & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & "*" & NumIndice_Acq & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & "* H" & ActiveCell.Row + 2 & "% *" & NumIndice_Acq & ")"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 5).NumberFormat = "[$|fffd|-410] #,##0.000"
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4) = 0.005  '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4).NumberFormat = "0.00%"   '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"   '***NUOVO
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To Num_cedole    '***NUOVO
    'Calcolo la stima del numero indice dalla stima dell'inflazione annua
    If j = 1 Then
    
            'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    'si usa come valore iniziale NumIndice_Acq
    Cells(ActiveCell.Row + 5 + j, 4).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "), Aggiornamento!$M$" & RowAgg & ",(1 + VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,2,FALSE)/2))"
    Cells(ActiveCell.Row + 5 + j, 4).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 4).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 4).NumberFormat = "0.00000"
   
   'Calcolo la cedola semestrale a partire dalla stima del numero indice
    Cells(ActiveCell.Row + 5 + j, 5).Formula = "=" & TassoAnnuo & "/2"
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Else
     'per i numeri indici successivi si calcola dallw stime l'inflazione di semestre non |fffd| quindi necessario considerare i numeri indice di periodi precedenti
    Cells(ActiveCell.Row + 5 + j, 4).Formula = "=IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & "), Aggiornamento!$M$" & RowAgg & ",(1 + VLOOKUP(YEAR(F" & ActiveCell.Row + 5 + j & "),'HP tassi e inflazione'!$I$11:$K$37,2,FALSE)/2))"
    Cells(ActiveCell.Row + 5 + j, 4).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 4).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 4).NumberFormat = "0.00000"
   
    Cells(ActiveCell.Row + 5 + j, 5).Formula = "=" & TassoAnnuo & "/2"
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"

    
    End If
    '****************************************************************
     'Calcolo flusso cedolare per investimento tenuto fino a scenza, nel nostro caso c'|fffd| la componente relativo alla cedola  e al capitale rivalutato
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(D" & ActiveCell.Row + 5 + j & ">=1,$G$" & ActiveCell.Row + 2 & "* (E" & ActiveCell.Row + 5 + j & "+ D" & ActiveCell.Row + 5 + j & "-1)*(1-T),$G$" & ActiveCell.Row + 2 & "* (E" & ActiveCell.Row + 5 + j & ")*(1-T))"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
   'Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   'Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>H" & ActiveCell.Row + 5 + j & " ),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),0)))"

    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
     '*******************************
       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "*1-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & "*1)-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
    Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "% * 1"
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
'    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=IF(Aggiornamento!M" & RowAgg & " >= 1 , $G$" & ActiveCell.Row + 2 & "* ((Aggiornamento!M" & RowAgg & "*" & TassoAnnuo & "/2)+Aggiornamento!M" & RowAgg & "-1)*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "), $G$" & ActiveCell.Row + 2 & "*((1*" & TassoAnnuo & "/2))*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=IF(Aggiornamento!M" & RowAgg & " >= 1 , $G$" & ActiveCell.Row + 2 & "* ((" & TassoAnnuo & "/2)+Aggiornamento!M" & RowAgg & "-1)*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "), $G$" & ActiveCell.Row + 2 & "*((1*" & TassoAnnuo & "/2))*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + Num_cedole + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    'Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*P" & ActiveCell.Row + 5 + j & "*T"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100 )"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100 -Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
 Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T"
Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 5 + j & ">0," & "G" & ActiveCell.Row + 2 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With


    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************

'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub


Sub BTP()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant, TassoAnnuo As Variant
Dim strName As String, Num_cedole As Byte, Data_Acq As Date, N_cedole_anno As Byte, Column_Quotaz As Byte

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Data_Acq = InputBox("Inserire data acquisto titolo") '***NUOVO
Num_cedole = Application.CoupNum(Data_Acq, DateValue(Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 8)), _
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9), 3) '***NUOVO
N_cedole_anno = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9)

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If
        
torna1:


SpeseOperazione = InputBox("Inserire Spese  previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (14.7)")
TassoAnnuo = InputBox("Inserire Tasso annuo previsto dall'obbligazione (i.e. 3.5%)")


SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (50.17)")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Data_Acq     '***NUOVO
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
     
     
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE
    
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    Cells(ActiveCell.Row + 1, 11).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     Cells(ActiveCell.Row + 1, 12).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    Cells(ActiveCell.Row + 1, 13).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
        'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
    ' ++++++++++++++++++++
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
            'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"

    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & "* H" & ActiveCell.Row + 2 & "% )"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 5).NumberFormat = "[$|fffd|-410] #,##0.000"
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4) = 0.005  '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4).NumberFormat = "0.00%"   '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"   '***NUOVO
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To Num_cedole

    If j = 1 Then
    
            'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
     

   
   'Calcolo la cedola
    Cells(ActiveCell.Row + 5 + j, 5) = Val(TassoAnnuo) / N_cedole_anno
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Else
   
    Cells(ActiveCell.Row + 5 + j, 5) = Val(TassoAnnuo) / N_cedole_anno
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"

    
    End If
    '****************************************************************
     'Calcolo flusso cedolare per investimento tenuto fino a scenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
   'Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   'Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>H" & ActiveCell.Row + 5 + j & " ),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),0)))"

    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
     '*******************************
       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & ")-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
       Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "% "
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + Num_cedole + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    'Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*P" & ActiveCell.Row + 5 + j & "*T"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100 -Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
 Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T"
Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 5 + j & ">0," & "G" & ActiveCell.Row + 2 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With


    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************



'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub


Sub TV_EURIBOR_6M_NEW()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant
Dim strName As String, Num_cedole As Byte, Data_Acq As Date, Column_Quotaz As Byte

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Data_Acq = InputBox("Inserire data acquisto titolo") '***NUOVO
Num_cedole = Application.CoupNum(Data_Acq, DateValue(Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 8)), _
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9), 3) '***NUOVO

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If

SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (e.g. 7.1)")

SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (e.g. 43.17)")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Data_Acq     '***NUOVO
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
     
     
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
    
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE
 
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
            'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
        ' ++++++++++++++++++++
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|

        
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
                'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"

    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & ")"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 5).NumberFormat = "0.00"
    
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4) = 0.005  '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4).NumberFormat = "0.00%"   '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"   '***NUOVO
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To Num_cedole    '***NUOVO
    
        If j = 1 Then
    
            'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    'Calcolo la cedola vedendo stime euribor 6M
   
   ' Cells(ActiveCell.Row + 5 + j, 5).Formula = "=VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$R$67:$T$97,3,TRUE)"
   
     Cells(ActiveCell.Row + 5 + j, 5).Formula = "=VLOOKUP(F" & ActiveCell.Row + 5 + j & ",IRS_EURIBOR,3,TRUE)"

    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.000%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
    '****************************************************************
    
      Else
  '  Cells(ActiveCell.Row + 5 + j, 5).Formula = "=VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$R$67:$T$97,3,TRUE)"
  Cells(ActiveCell.Row + 5 + j, 5).Formula = "=VLOOKUP(F" & ActiveCell.Row + 5 + j & ",IRS_EURIBOR,3,TRUE)"
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.000%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
      End If
      
    '****************************************************************
         'Calcolo flusso cedolare per investimento tenuto fino a scenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>H" & ActiveCell.Row + 5 + j & " ),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),0)))"
   
    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
          'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
     '*******************************
  
       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & ")-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
    Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "%"
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + Num_cedole + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    'Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*P" & ActiveCell.Row + 5 + j & "*T"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100 -Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
 Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T"
Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 5 + j & ">0," & "G" & ActiveCell.Row + 2 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With

'**********************************************************

    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************

'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub

Sub NEW_BTP()
Dim CurRow As Integer, RowAgg As Integer, j As Integer, SpeseOperazione As Variant, SpeseTotAcquisto As Variant, TassoAnnuo As Variant
Dim strName As String, Num_cedole As Byte, Data_Acq As Date, N_cedole_anno As Byte, Column_Quotaz As Byte

RowAgg = InputBox("Inserire # riga in sheet Aggiornamento corrispondente al titolo da inserire")

Column_Quotaz = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)

Data_Acq = InputBox("Inserire data acquisto titolo") '***NUOVO
Num_cedole = Application.CoupNum(Data_Acq, DateValue(Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 8)), _
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9), 3) '***NUOVO
N_cedole_anno = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(RowAgg, 9)

torna:
strName = InputBox(prompt:="M = Mario, G = Gio, P = Patty", _
          Title:="Chi ha fatto l'investimento?", Default:="M, G o P?")
        If strName <> "M" And strName <> "G" And strName <> "P" Then
        GoTo torna
        End If
        
torna1:


SpeseOperazione = InputBox("Inserire Spese previste dalla banca(NON COMMISSIONI) per operazione vendita anticipata del titolo (14.7)")
TassoAnnuo = InputBox("Inserire Tasso annuo previsto dall'obbligazione (i.e. 3.5%)")


SpeseTotAcquisto = InputBox("Inserire Spese + Commissioni relative all'acquisto del titolo (50.17)")

 CurRow = ActiveCell.Row
    Rows(CurRow & ":" & CurRow + 25).Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    ActiveCell.Select
    'Nome titolo
    ' Cells(ActiveCell.Row + 2, 4) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 3)
        Cells(ActiveCell.Row + 2, 4).Formula = "=Aggiornamento!C" & RowAgg
    Cells(ActiveCell.Row + 2, 4).Font.Name = "Arial"
    Cells(ActiveCell.Row + 2, 4).Font.Size = 10
    Cells(ActiveCell.Row + 2, 4).Font.Bold = True
  Cells(ActiveCell.Row + 2, 4).HorizontalAlignment = xlRight
    'Range(Cells(ActiveCell.Row + 2, 4)).Columns.AutoFit
    'ISIN
'    Cells(ActiveCell.Row + 2, 5) = ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, 4)
    Cells(ActiveCell.Row + 2, 5).Formula = "=Aggiornamento!D" & RowAgg
    Cells(ActiveCell.Row + 2, 5).Columns.AutoFit
    'Data acquisto
     Cells(ActiveCell.Row + 2, 6) = Data_Acq     '***NUOVO
     Cells(ActiveCell.Row + 2, 6).HorizontalAlignment = xlCenter
     Cells(ActiveCell.Row + 2, 6).NumberFormat = "[$-410]d-mmm-yy;@"
     'Valore Nominale
     Cells(ActiveCell.Row + 2, 7) = "10000"
     Cells(ActiveCell.Row + 2, 7).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 7).NumberFormat = "[$|fffd|-410] #,##0"
     'Prezzo acquisto
     Cells(ActiveCell.Row + 2, 8) = "99"
     Cells(ActiveCell.Row + 2, 8).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 8).NumberFormat = "[$-410] #,##0.00"
     'Totale investito
     Cells(ActiveCell.Row + 2, 9) = "10000"
     Cells(ActiveCell.Row + 2, 9).HorizontalAlignment = xlRight
     Cells(ActiveCell.Row + 2, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
     'Ritorno netto in caso vendita data valutazione
     Cells(ActiveCell.Row + 3, 9).Formula = "=MAX(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 3, 9).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Guadagno netto data valutazione
    Cells(ActiveCell.Row + 2, 11).Formula = "=I" & ActiveCell.Row + 3 & "- I" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 2, 11).Font.Bold = True
    Cells(ActiveCell.Row + 2, 11).NumberFormat = "[$|fffd|-410] #,##0.00"
    
 'FORMATTAZIONE CONDIZIONALE per cella nome titolo e ISIN
With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlGreaterEqual, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65280
        .TintAndShade = 0
    End With
End With
    
 With ActiveSheet.Range("K" & ActiveCell.Row + 2).FormatConditions _
        .Add(xlCellValue, xlLess, "0")
        
'    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With .Interior
        .PatternColorIndex = xlAutomatic
        .Color = 255
        .TintAndShade = 0
    End With
End With
'Fine formattazione condizionale
    
    'Rendimento REALE netto data di valutazione
     Cells(ActiveCell.Row + 2, 14).Formula = "=XIRR(U" & ActiveCell.Row + 5 & ":U" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 14).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 14).Font.Bold = True
    
     'Rendimento netto data di valutazione
     Cells(ActiveCell.Row + 2, 12).Formula = "=XIRR(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",H" & ActiveCell.Row + 5 & ":H" & ActiveCell.Row + 5 + Num_cedole & ")"
    Cells(ActiveCell.Row + 2, 12).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 12).Font.Bold = True
    
     'Rendimento netto data a scadenza
    Cells(ActiveCell.Row + 2, 13).Formula = "=XIRR(G" & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 13).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 13).Font.Bold = True
     
     
    'Rendimento REALE netto data a scadenza
    Cells(ActiveCell.Row + 2, 15).Formula = "=XIRR(T" & ActiveCell.Row + 5 & ":T" & ActiveCell.Row + 5 + Num_cedole + 1 & ",F" & ActiveCell.Row + 5 & ":F" & ActiveCell.Row + 5 + Num_cedole + 1 & ")"
    Cells(ActiveCell.Row + 2, 15).NumberFormat = "0.00%"
    Cells(ActiveCell.Row + 2, 15).Font.Bold = True
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    'Calcolo GNPV "Normale"
 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
     Cells(ActiveCell.Row + 2, 16).Font.Bold = True
      Cells(ActiveCell.Row + 2, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
      
        'Calcolo GNPV "Reale"
Cells(ActiveCell.Row + 2, 17).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(T" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"
    Cells(ActiveCell.Row + 2, 17).Font.Bold = True
      Cells(ActiveCell.Row + 2, 17).NumberFormat = "[$|fffd|-410] #,##0.00"
      
       'Calcolo Scelta finanziaria "Normale"
    Cells(ActiveCell.Row + 2, 18).Formula = "=OFFSET(I" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-P" & ActiveCell.Row + 2
        Cells(ActiveCell.Row + 2, 18).Font.Bold = True
      Cells(ActiveCell.Row + 2, 18).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("R" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
      
     'Calcolo Scelta finanziaria "Reale"
      Cells(ActiveCell.Row + 2, 19).Formula = "=OFFSET(U" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,1,1)-Q" & ActiveCell.Row + 2
         Cells(ActiveCell.Row + 2, 19).Font.Bold = True
      Cells(ActiveCell.Row + 2, 19).NumberFormat = "[$|fffd|-410] #,##0.00"
       'FORMATTAZIONE CONDIZIONALE
            With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlGreaterEqual, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 65280
                    .TintAndShade = 0
                End With
            End With
                
             With ActiveSheet.Range("S" & ActiveCell.Row + 2).FormatConditions _
                    .Add(xlCellValue, xlLess, "0")
                    
            '    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
                With .Interior
                    .PatternColorIndex = xlAutomatic
                    .Color = 255
                    .TintAndShade = 0
                End With
            End With
    'Fine formattazione condizionale
       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV FINE
    
    Cells(ActiveCell.Row + 1, 11) = "Guadagno netto alla data di valutazione"
    Cells(ActiveCell.Row + 1, 11).WrapText = True
    Cells(ActiveCell.Row + 1, 11).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 1, 12) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 12).WrapText = True
     Cells(ActiveCell.Row + 1, 12).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 13) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 13).WrapText = True
    Cells(ActiveCell.Row + 1, 13).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 13) = "Rendimenti Netti"
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).MergeCells = True
    Range(Cells(ActiveCell.Row, 12), Cells(ActiveCell.Row, 13)).HorizontalAlignment = xlCenter
    
        'Nuovo ++++++++++++++++++++
    Cells(ActiveCell.Row, 15) = "Rendimenti REALI Netti"
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).MergeCells = True
    Range(Cells(ActiveCell.Row, 14), Cells(ActiveCell.Row, 15)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 14) = "alla data di valutazione"
     Cells(ActiveCell.Row + 1, 14).WrapText = True
     Cells(ActiveCell.Row + 1, 14).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 15) = "alla scadenza"
    Cells(ActiveCell.Row + 1, 15).WrapText = True
    Cells(ActiveCell.Row + 1, 15).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 3, 20) = "Flussi di cassa REALI"
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).MergeCells = True
    Range(Cells(ActiveCell.Row + 3, 20), Cells(ActiveCell.Row + 3, 21)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 20) = "scadenza"
    Cells(ActiveCell.Row + 4, 20).WrapText = True
    Cells(ActiveCell.Row + 4, 20).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 4, 21) = "data di valutazione"
    Cells(ActiveCell.Row + 4, 21).WrapText = True
    Cells(ActiveCell.Row + 4, 21).HorizontalAlignment = xlCenter
    ' ++++++++++++++++++++
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| New GNPV
    Cells(ActiveCell.Row, 17) = "GNPV"
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).MergeCells = True
    Range(Cells(ActiveCell.Row, 16), Cells(ActiveCell.Row, 17)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 16) = "Normale"
     Cells(ActiveCell.Row + 1, 16).WrapText = True
     Cells(ActiveCell.Row + 1, 16).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 17) = "Reale"
    Cells(ActiveCell.Row + 1, 17).WrapText = True
    Cells(ActiveCell.Row + 1, 17).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row, 19) = "Scelta finanziaria"
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).MergeCells = True
    Range(Cells(ActiveCell.Row, 18), Cells(ActiveCell.Row, 19)).HorizontalAlignment = xlCenter
    
    Cells(ActiveCell.Row + 1, 18) = "Normale"
     Cells(ActiveCell.Row + 1, 18).WrapText = True
     Cells(ActiveCell.Row + 1, 18).HorizontalAlignment = xlCenter
     
    Cells(ActiveCell.Row + 1, 19) = "Reale"
    Cells(ActiveCell.Row + 1, 19).WrapText = True
    Cells(ActiveCell.Row + 1, 19).HorizontalAlignment = xlCenter
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    
    'Data Valutazione
    Cells(ActiveCell.Row + 3, 6).Formula = "=IF(NOW()>= Aggiornamento!H" & RowAgg & ",Aggiornamento!H" & RowAgg & ",Aggiornamento!$E$1)"
    Cells(ActiveCell.Row + 3, 6).Borders.LineStyle = xlContinuous
    Cells(ActiveCell.Row + 3, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    'Prezzo aggiornamento
            'Introduco la notazione C1R1 per gestire le eventuali spostamenti
        'a dx della colonna aggiornamenti a seguito di aggiunta colonne
    Cells(ActiveCell.Row + 3, 8).FormulaR1C1 = "=Aggiornamento!R[" & RowAgg - (ActiveCell.Row + 3) & "]C[" & Column_Quotaz - 8 & "]"

    Cells(ActiveCell.Row + 3, 8).NumberFormat = "[$-410] #,##0.00"
    Range(Cells(ActiveCell.Row + 3, 8), Cells(ActiveCell.Row + 3, 9)).Borders.LineStyle = xlContinuous
    
    Cells(ActiveCell.Row + 5, 4) = "PMF_a"
    Cells(ActiveCell.Row + 5, 4).Font.Bold = True
    Cells(ActiveCell.Row + 5, 4).Font.Size = 8
    Cells(ActiveCell.Row + 5, 4).HorizontalAlignment = xlRight
    '**********************
    Cells(ActiveCell.Row + 5, 5).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")<100,$H$" & ActiveCell.Row + 2 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(F" & ActiveCell.Row + 2 & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 2 & ") +" & SpeseTotAcquisto & " * 100 / (G" & ActiveCell.Row + 2 & "* H" & ActiveCell.Row + 2 & "% )"
    Cells(ActiveCell.Row + 5, 5).Font.Bold = True
    Cells(ActiveCell.Row + 5, 5).Font.Size = 8
    Cells(ActiveCell.Row + 5, 5).HorizontalAlignment = xlLeft
    Cells(ActiveCell.Row + 5, 5).NumberFormat = "[$|fffd|-410] #,##0.000"
        '**********************************************
    Cells(ActiveCell.Row + 5, 6).Formula = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Cells(ActiveCell.Row + 5, 6).HorizontalAlignment = xlCenter
    
     Cells(ActiveCell.Row + 5, 7).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
     
     
    Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4) = 0.005  '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 4).NumberFormat = "0.00%"   '***NUOVO
      Cells(ActiveCell.Row + 5 + Num_cedole + 2, 5) = "HP Commissioni (Non ci sono commissioni al rimborso del titolo)"   '***NUOVO
      
     Cells(ActiveCell.Row + 5, 8) = "=F" & ActiveCell.Row + 2
    Cells(ActiveCell.Row + 5, 8).NumberFormat = "[$-410]d-mmm-yy;@"
  Cells(ActiveCell.Row + 5, 9) = "=-I" & ActiveCell.Row + 2
'   Cells(ActiveCell.Row + 5, 9).Formula = "=-I" & ActiveCell.Row + 2
     Cells(ActiveCell.Row + 5, 9).NumberFormat = "[$|fffd|-410] #,##0"
     Cells(ActiveCell.Row + 5, 11) = "Tassa Plusvalenza"
     Cells(ActiveCell.Row + 4, 12) = "Imposta"
     Cells(ActiveCell.Row + 5, 12) = "D. E. vendita"
     Cells(ActiveCell.Row + 5, 13) = "D.E. scad"
     Cells(ActiveCell.Row + 5, 14) = "Commissioni"
     Cells(ActiveCell.Row + 5, 15) = "Rateo Netto"
     Cells(ActiveCell.Row + 5, 16) = "Capitale Lordo ricavato dalla vendita"
     Cells(ActiveCell.Row + 5, 18) = "CSSNv"
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     '***********************************************************
    For j = 1 To Num_cedole

    If j = 1 Then
    
            'Flussi di cassa reali NUOVO
        'scadenza
       Cells(ActiveCell.Row + 4 + j, 20).Formula = "=G" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
     'data valutazione
        Cells(ActiveCell.Row + 4 + j, 21).Formula = "=I" & ActiveCell.Row + 5
     Cells(ActiveCell.Row + 4 + j, 21).NumberFormat = "[$|fffd|-410] #,##0.00"
     

   
   'Calcolo la cedola
    Cells(ActiveCell.Row + 5 + j, 5) = Val(TassoAnnuo) / N_cedole_anno
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    Else
   
    Cells(ActiveCell.Row + 5 + j, 5) = Val(TassoAnnuo) / N_cedole_anno
    Cells(ActiveCell.Row + 5 + j, 5).Font.Size = 8
   Cells(ActiveCell.Row + 5 + j, 5).HorizontalAlignment = xlRight
   Cells(ActiveCell.Row + 5 + j, 5).NumberFormat = "0.00%"
   
   Cells(ActiveCell.Row + 5 + j, 6) = Cells(ActiveCell.Row + 5, 6) + 180 * j
   Cells(ActiveCell.Row + 5 + j, 6).HorizontalAlignment = xlCenter
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"

    
    End If
    '****************************************************************
     'Calcolo flusso cedolare per investimento tenuto fino a scenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=$G$" & ActiveCell.Row + 2 & "* E" & ActiveCell.Row + 5 + j & "*(1-T)"
    
      Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0.00"
      Cells(ActiveCell.Row + 5 + j, 8).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">=F" & ActiveCell.Row + 5 + j & ",F" & ActiveCell.Row + 5 + j & ",$F$" & ActiveCell.Row + 3 & ")"
       Cells(ActiveCell.Row + 5 + j, 8).NumberFormat = "[$-410]d-mmm-yy;@"
   'Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   'Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",IF(OR(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j & "=$F$" & ActiveCell.Row + 3 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>$F$" & ActiveCell.Row + 2 & "),(ROW()-1=ROW($I$" & ActiveCell.Row + 2 & "))),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-K" & ActiveCell.Row + 5 + j & ",0)))"
   Cells(ActiveCell.Row + 5 + j, 9).Formula = "=IF($F$" & ActiveCell.Row + 3 & ">F" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 5 + j & ",IF($F$" & ActiveCell.Row + 3 & "=F" & ActiveCell.Row + 5 + j & ",O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),IF(AND(H" & ActiveCell.Row + 5 + j - 1 & "=F" & ActiveCell.Row + 5 + j - 1 & ",H" & ActiveCell.Row + 5 + j - 1 & "<>H" & ActiveCell.Row + 5 + j & " ),O" & ActiveCell.Row + 5 + j & "+P" & ActiveCell.Row + 5 + j & "-L" & ActiveCell.Row + 5 + j & "-N" & ActiveCell.Row + 5 + j & "-" & SpeseOperazione & "-IF(K" & ActiveCell.Row + 5 + j & ">0,K" & ActiveCell.Row + 5 + j & ",0),0)))"

    Cells(ActiveCell.Row + 5 + j, 9).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
       
    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
           'alla data valutazione NUOVO
       Cells(ActiveCell.Row + 5 + j, 21).Formula = "=I" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 21).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
     '*******************************
       'CSNNv o prezzo medio fiscale
      Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,$H$" & ActiveCell.Row + 3 & "-(100-Aggiornamento!$F$" & RowAgg & ")*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),$H$" & ActiveCell.Row + 3 & ")-((" & SpeseOperazione & " + N" & ActiveCell.Row + 5 + j & ")/(P" & ActiveCell.Row + 5 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
    'Capitale Lordo ricavato dalla vendita
       Cells(ActiveCell.Row + 5 + j, 16).Formula = "=$G$" & ActiveCell.Row + 2 & "*$H$" & ActiveCell.Row + 3 & "% "
    Cells(ActiveCell.Row + 5 + j, 16).NumberFormat = "[$|fffd|-410] #,##0.00"
    'Rateo Netto
    Cells(ActiveCell.Row + 5 + j, 15).Formula = "=($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(1-T)*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & "))"
    Cells(ActiveCell.Row + 5 + j, 15).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    'Commissioni
     'Cells(ActiveCell.Row + 5 + j, 14).Formula = "=(P" & ActiveCell.Row + 5 + j & "+($G$" & ActiveCell.Row + 2 & "*E" & ActiveCell.Row + 5 + j & "*(H" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")/(F" & ActiveCell.Row + 5 + j & "-F" & ActiveCell.Row + 4 + j & ")))*$D$" & ActiveCell.Row + 5 + 10 + 2
    Cells(ActiveCell.Row + 5 + j, 14).Formula = "=P" & ActiveCell.Row + 5 + j & "*$D$" & ActiveCell.Row + 5 + Num_cedole + 2
    Cells(ActiveCell.Row + 5 + j, 14).NumberFormat = "[$|fffd|-410] #,##0.00"
    
    'Disaggio emissione vendita
     Cells(ActiveCell.Row + 5 + j, 12).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")>0,(100-Aggiornamento!$F$" & RowAgg & ")%*T*$G$" & ActiveCell.Row + 2 & "*(H" & ActiveCell.Row + 5 + j & "-Aggiornamento!$G$" & RowAgg & ")/(Aggiornamento!$H$" & RowAgg & "-Aggiornamento!$G$" & RowAgg & "),0)"
    Cells(ActiveCell.Row + 5 + j, 12).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Tassa Plusvalenza
    Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*P" & ActiveCell.Row + 5 + j & "*T"
    Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    
    Next j
    
    
  'CSNNv scadenza
  Cells(ActiveCell.Row + 5 + j, 18).Formula = "=IF((Aggiornamento!$F$" & RowAgg & ")< 100 , Aggiornamento!$F$" & RowAgg & ",100)"
  Cells(ActiveCell.Row + 5 + j, 18).NumberFormat = "[$-410] #,##0.00"
  
  'Disaggio emissione scadenza
  Cells(ActiveCell.Row + 5 + j, 13).Formula = "=IF((100-Aggiornamento!$F$" & RowAgg & ")<=0,0,(100 -Aggiornamento!$F$" & RowAgg & ")*T*G" & ActiveCell.Row + 2 & "%)"
 Cells(ActiveCell.Row + 5 + j, 13).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"
 
 'Tassa Plusvalenza scadenza
Cells(ActiveCell.Row + 5 + j, 11).Formula = "=(R" & ActiveCell.Row + 5 + j & "-$E$" & ActiveCell.Row + 5 & ")%*$G$" & ActiveCell.Row + 2 & "*T"
Cells(ActiveCell.Row + 5 + j, 11).NumberFormat = "_-[$|fffd|-410] * #,##0.00_-;-[$|fffd|-410] * #,##0.00_-;_-[$|fffd|-410] * ""-""??_-;_-@_-"

    'Data rimborso *******************
     Cells(ActiveCell.Row + 5 + j, 6).Formula = "=Aggiornamento!H" & RowAgg
    Cells(ActiveCell.Row + 5 + j, 6).NumberFormat = "[$-410]d-mmm-yy;@"
    
'Rimborso netto a scadenza
    Cells(ActiveCell.Row + 5 + j, 7).Formula = "=IF(K" & ActiveCell.Row + 5 + j & ">0," & "G" & ActiveCell.Row + 2 & "- K" & ActiveCell.Row + 5 + j & "-M" & ActiveCell.Row + 5 + j & ",G" & ActiveCell.Row + 2 & "-M" & ActiveCell.Row + 5 + j & ")"
    Cells(ActiveCell.Row + 5 + j, 7).NumberFormat = "[$|fffd|-410] #,##0"
    
    '**********************************************************
 With ActiveSheet.Range(Cells(ActiveCell.Row + 2, 4), Cells(ActiveCell.Row + 2, 5)).FormatConditions _
        .Add(xlExpression, , Formula1:="=$F$" & ActiveCell.Row + 3 & ">$F$" & ActiveCell.Row + 5 + j)
    With .Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249946592608417
    End With
 End With


    'Flussi di cassa reali NUOVO ****************
        'scadenza
       Cells(ActiveCell.Row + 5 + j, 20).Formula = "=G" & ActiveCell.Row + 5 + j & "/(VLOOKUP(F" & ActiveCell.Row + 5 + j & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE)/VLOOKUP($F$" & ActiveCell.Row + 5 & ",'HP tassi e inflazione'!$A$3:$C$422,3,TRUE))"
     Cells(ActiveCell.Row + 5 + j, 20).NumberFormat = "[$|fffd|-410] #,##0.00"
'**********************************************************
'**********************************************************



'Inserimento dati dell'investimento nella pagina AGGIORNAMENTO per il dato investitore
Dim c_m As Integer, VN As Integer, last_column_Aggiornamento As Integer, PA As Integer, SFN As Integer, GDV As Integer, RDV As Integer, RNS As Integer

last_column_Aggiornamento = Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells.Find("*", , , , xlByColumns, xlPrevious).Column

          Select Case strName

            Case "M"
        ' Cells(ActiveCell.Row + 2, 7)
        c_m = Application.Match("Mar", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Mario da usare come riferimento
'VN |fffd| colonna relativa a Mario per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_m).Formula = "=MarAnn!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Mario per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_m).Formula = "=MarAnn!H" & ActiveCell.Row + 2
               
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_m).Formula = "=MarAnn!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Mario per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_m).Formula = "=MarAnn!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Mario per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_m).Formula = "=MarAnn!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Mario per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_m), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("MarAnn").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_m).Formula = "=MarAnn!M" & ActiveCell.Row + 2
        
        
            Case "G"
        c_g = Application.Match("Gio", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Giovanni da usare come riferimento
'VN |fffd| colonna relativa a Giovanni per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_g).Formula = "=Gio!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Giovanni per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_g).Formula = "=Gio!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_g).Formula = "=Gio!R" & ActiveCell.Row + 2
        
 'GDV |fffd| colonna relativa a Giovanni per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_g).Formula = "=Gio!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Giovanni per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_g).Formula = "=Gio!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Giovanni per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_g), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Gio").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_g).Formula = "=Gio!M" & ActiveCell.Row + 2

            Case "P"
        c_p = Application.Match("Pat", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0) 'Prima colonna che contiene i dati
                                                                                        'di Patty da usare come riferimento
'VN |fffd| colonna relativa a Patty per il Valore Nominale
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        VN = Application.Match("Valore Nominale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, VN - 1 + c_p).Formula = "=Patty!G" & ActiveCell.Row + 2
'PA |fffd| colonna relativa a Patty per il Prezzo Acquisto
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        PA = Application.Match("P.zzo Acq.", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
               ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, PA - 1 + c_p).Formula = "=Patty!H" & ActiveCell.Row + 2
 'SFN |fffd| colonna relativa a Patty per Scelta Finanziaria Normale
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        SFN = Application.Match("Scelta finanziaria Normale", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, SFN - 1 + c_p).Formula = "=Patty!R" & ActiveCell.Row + 2
               
 'GDV |fffd| colonna relativa a Patrizia per il Guadagno netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        GDV = Application.Match("Guadagno netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, GDV - 1 + c_p).Formula = "=Patty!K" & ActiveCell.Row + 2
   
  'RDV |fffd| colonna relativa a Patty per il Rendimento  netto alla Data di Valutazione
    Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RDV = Application.Match("Rendimento  netto alla data di valutazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RDV - 1 + c_p).Formula = "=Patty!L" & ActiveCell.Row + 2
        
  'RNS |fffd| colonna relativa a Patty per il Rendimento Netto alla Scadenza
     Workbooks("Update Investimenti.xlsm").Worksheets("Aggiornamento").Select
        RNS = Application.Match("Rendimento netto alla scadenza", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range(Cells(4, c_p), Cells(4, last_column_Aggiornamento)), 0)
    Workbooks("Update Investimenti.xlsm").Sheets("Patty").Select
        ActiveWorkbook.Sheets("Aggiornamento").Cells(RowAgg, RNS - 1 + c_p).Formula = "=Patty!M" & ActiveCell.Row + 2

          '  Case Else

          End Select
    
End Sub
Attribute VB_Name = "Module4"
Sub Correct1904Dates()
For Each cell In Selection
cell.Value = cell.Value + 1462
Next cell
End Sub


Sub AAA()
'Dim mXML As MSXML2.xmlHTTP: Set mXML = New MSXML2.xmlHTTP
Dim mXML As Object: Set mXML = CreateObject("MSXML2.XMLHTTP")
Dim O As MSHTML.HTMLDocument: Set O = New HTMLDocument
Dim Coll As HTMLDivElement
Dim p
Dim k As Integer
     URL = "http://www.borsaitaliana.it/borsa/obbligazioni/advanced-search.html?market=MOT&typology=TSI&type=1&lang=it&ord=coupon&mod=down&ord=isin&mod=up&ord=name&mod=up&ord=expiry&mod=up&page="

With mXML
   ' .Open "GET", "http://uk.soccerway.com/matches/2014/02/23/england/premier-league/liverpool-fc/swansea-city-afc/1483721/?ICID=HP_MS_01_01", False
       .Open "GET", URL & 1, False
 
    .send
    O.body.innerHTML = .responseText
End With
End Sub

Sub Breakeven_Inflation_Estimation() 'scarico la lista da TLX
Dim myURL As String, Nome As Range
Dim Dati() As Variant, TDelements As IHTMLElementCollection, html1 As MSHTML.HTMLDocument

speed

myURL = "https://www.eurotlx.com/it/strumenti/ricerca-avanzata/csv?lang=it&category=GOVERNMENT_BONDS&subcategory=ITALY&thirdsubcategory=-1&isinname=BTP&issuer=&rating=&currency=-1&expirationdatefrom=&expirationdateto=&grossYieldToMaturityMin=&grossYieldToMaturityMax="
Dim WinHttpReq As Object
Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
' WinHttpReq.Open "GET", myURL, False, "username", "password"
WinHttpReq.Open "GET", myURL, False
WinHttpReq.send

myURL = WinHttpReq.responseBody
If WinHttpReq.Status = 200 Then
    Set oStream = CreateObject("ADODB.Stream")
    oStream.Open
    oStream.Type = 1
    oStream.Write WinHttpReq.responseBody

  oStream.SaveToFile "C:\Users\Gio\Documents\Investimenti\tlx\BTP_BTPi.txt", 2 'da cambiare se si usa pc ufficio
'oStream.SaveToFile "D:\run\TLX\BTP_BTPi.txt", 2
oStream.Close
End If
 myURL = "C:\Users\Gio\Documents\Investimenti\tlx\BTP_BTPi.txt"
'myURL = "D:\run\TLX\BTP_BTPi.txt"

    Workbooks.OpenText Filename:=myURL, origin:=xlWindows, _
        StartRow:=1, DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, _
        ConsecutiveDelimiter:=False, Tab:=True, Semicolon:=True, Comma:=False, _
        Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), Array(2, 1), Array( _
        3, 1), Array(4, 1), Array(5, 4), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10 _
        , 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1)), TrailingMinusNumbers:= _
        True
 col = 0
 With Application.ActiveSheet

 'vengono selezionati e cancellati i record relativi ad operazione BTP di coupon striping
     ActiveSheet.Range("A1").AutoFilter Field:=4, Criteria1:="*Zc*"
     ActiveSheet.AutoFilter.Range.Offset(1, 0).Rows.SpecialCells(xlCellTypeVisible).Delete (xlShiftUp)
     ActiveSheet.Range("A1").AutoFilter
 UltimaRiga = .Cells(.Rows.Count, "A").End(xlUp).Row
 Set Nome = .Range(Cells(1, 4), Cells(UltimaRiga, 4))
 
 For Each Cella In Nome
 If Cella.Value Like "*Btp|fffd|I*" Then
    Delta1 = .Cells(Cella.Row, 5).Value - .Cells(Cella.Row - 1, 5).Value
     Delta2 = Abs(.Cells(Cella.Row, 5).Value - .Cells(Cella.Row + 1, 5).Value)
     col = col + 2
     ReDim Preserve Dati(1 To 13, 1 To col)
     Dati(1, col - 1) = Cella.Value 'Copio Descrizione BTPei
     Dati(2, col - 1) = .Cells(Cella.Row, 1).Value 'Copio ISIN BTPei
     Dati(3, col - 1) = .Cells(Cella.Row, 5).Value 'Copio data scadenza BTPei
     
     If Delta1 <= Delta2 Then
           Dati(1, col) = .Cells(Cella.Row - 1, 4).Value  'Copio Descrizione BTPei
           Dati(2, col) = .Cells(Cella.Row - 1, 1).Value  'Copio ISIN BTPei
           Dati(3, col) = .Cells(Cella.Row - 1, 5).Value  'Copio data scadenza BTPei
       Else
           Dati(1, col) = .Cells(Cella.Row + 1, 4).Value  'Copio Descrizione BTPei
           Dati(2, col) = .Cells(Cella.Row + 1, 1).Value  'Copio ISIN BTPei
           Dati(3, col) = .Cells(Cella.Row + 1, 5).Value 'Copio data scadenza BTPei
     End If
   
 End If
 
 Next Cella
 
 End With
     ActiveWorkbook.Close SaveChanges:=True
  Set html1 = New MSHTML.HTMLDocument
  For j = 1 To UBound(Dati, 2)
 myURL = "http://www.borse.it/quotazioni/valore/" & Dati(2, j) & "/isin/"
  
  WinHttpReq.Open "GET", myURL, False
WinHttpReq.send

html1.body.innerHTML = WinHttpReq.responseText

                  Nro_Tabelle = html1.getElementsByClassName("c-schede").Length
                   
                   If Nro_Tabelle > 1 Then
                    For u = 0 To 2
                 
                Set TDelements = html1.getElementsByTagName("table")
                
                    
                    Set TDelements = html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")
                    Nro_Elementi = TDelements.Length
                    
                 
                    
                    For k = 0 To Nro_Elementi - 1 Step 2
                    
                        With TDelements(k)
                
                    
                            Select Case .innerText
                            
                                Case "Prezzo emissione"
                                Dati(4, j) = Trim(html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")(k + 1).innerText) * 1
                             
                                Case "Cedola In Corso"
                                    If IsNumeric(TDelements(k + 1).innerText) Then
                                       Dati(8, j) = TDelements(k + 1).innerText * 1
                                     Else
                                         Dati(8, j) = TDelements(k + 1).innerText
                                     End If
                                Case "Data emissione"
                                Dati(12, j) = CDate(html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")(k + 1).innerText)
                
                                Case "Data rimborso"
                                     Dati(13, j) = CDate(html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")(k + 1).innerText)
                 

                                Case "Metodo Rateo"

                                  
                                       Dati(10, j) = TDelements(k + 1).innerText

                                 Case "Prezzo ufficiale"

                                  prezzo_ufficiale_riserva = 0
                                       prezzo_ufficiale_riserva = TDelements(k + 1).innerText
                                    prezzo_ufficiale_riserva = Left(prezzo_ufficiale_riserva, InStr(prezzo_ufficiale_riserva, "-") - 1) * 1
                             End Select
                 
                         End With
                
                     Next k
                     Next u
                 End If
           Dati(5, j) = 100 * 1
           Dati(6, j) = 2 * 1
           Dati(7, j) = 1 * 1
           Dati(11, j) = 12.5 * 1
           myURL = "http://www.borsaitaliana.it/borsa/obbligazioni/mot/btp/contratti.html?isin=" & Dati(2, j) & "&lang=it"
    
            k = 0
        prezzo_ufficiale = 0
        volume_totale = 0
        Nro_Pagine = 0
         Nro_Tabelle = 0
      NroRighe = 0

Do
       WinHttpReq.Open "GET", myURL & "&page=" & k, False
        WinHttpReq.send
     html1.body.innerHTML = WinHttpReq.responseText
    
    Nro_Pagine = html1.getElementsByClassName("m-pagination__item").Length - 1


Nro_Tabelle = html1.getElementsByClassName("m-table -responsive -clear-m").Length

If Nro_Tabelle <> 0 Then
        Set htmTable = html1.getElementsByClassName("m-table -responsive -clear-m")(0)
        NroRighe = htmTable.Rows.Length

        If htmTable.Rows(1).Cells(1).innerText = "Prezzo Ultimo Contratto " And htmTable.Rows(1).Cells(3).innerText = "Volume Ultimo " Then
        For i = 2 To NroRighe - 1
        
        prezzo_ufficiale = prezzo_ufficiale + htmTable.Rows(i).Cells(1).innerText * htmTable.Rows(i).Cells(3).innerText * 1
        volume_totale = volume_totale + htmTable.Rows(i).Cells(3).innerText * 1
        Next i
     '   prezzo_ufficiale = prezzo_ufficiale / volume_totale
         End If
 End If
 
 k = k + 1
  Loop Until k >= Nro_Pagine
   If volume_totale <> 0 Then
  prezzo_ufficiale = prezzo_ufficiale / volume_totale
  Else
    prezzo_ufficiale = prezzo_ufficiale_riserva
  End If
    Dati(9, j) = prezzo_ufficiale * 1
    Next j
  Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Activate
  
  With Application.ActiveSheet
 UltimaRiga = .Cells(.Rows.Count, "A").End(xlUp).Row
  Set Nome = .Range(Cells(2, 1), Cells(UltimaRiga, 14))
  Nome.ClearContents
  For j = 1 To UBound(Dati, 2)
    For k = 1 To UBound(Dati, 1)
    .Cells(j + 1, k).Value = Dati(k, j)
    
    Next k
    Next j
    
     Set Nome = .Range(Cells(2, 1), Cells(UltimaRiga, 1))
     adesso = Now()
    Data = Mid(adesso, 1, 10)


 
Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
    
    Anno = Year(Data)
    Module1.Scarica_Coeff
    
        For Each Cella In Nome
        
        If .Cells(Cella.Row, 1).Value Like "*Btp|fffd|*" Then
file = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Eurostat\" & Anno & "\" & Mese & "\" & .Cells(Cella.Row, 2).Value & ".xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
CItxt = Replace(CItxt, ".", ",")
CI = CItxt
Workbooks(.Cells(Cella.Row, 2).Value & ".xls").Close SaveChanges:=False

  .Cells(Cella.Row, 14) = CI * 1
      
    End If
     Next Cella
 End With
    
 unspeed
    
End Sub
Sub Breakeven_Inflation_BTPItalia() 'scarico la lista da TLX
Dim myURL As String, Nome As Range
Dim Dati() As Variant, TDelements As IHTMLElementCollection, html1 As MSHTML.HTMLDocument

speed

myURL = "https://www.eurotlx.com/it/strumenti/ricerca-avanzata/csv?lang=it&category=GOVERNMENT_BONDS&subcategory=ITALY&thirdsubcategory=-1&isinname=BTP&issuer=&rating=&currency=-1&expirationdatefrom=&expirationdateto=&grossYieldToMaturityMin=&grossYieldToMaturityMax="
Dim WinHttpReq As Object
Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
' WinHttpReq.Open "GET", myURL, False, "username", "password"
WinHttpReq.Open "GET", myURL, False
WinHttpReq.send

myURL = WinHttpReq.responseBody
If WinHttpReq.Status = 200 Then
    Set oStream = CreateObject("ADODB.Stream")
    oStream.Open
    oStream.Type = 1
    oStream.Write WinHttpReq.responseBody

  oStream.SaveToFile "C:\Users\Gio\Documents\Investimenti\tlx\BTP_BTPi.txt", 2 'da cambiare se si usa pc ufficio
'oStream.SaveToFile "D:\run\TLX\BTP_BTPi.txt", 2
oStream.Close
End If
 myURL = "C:\Users\Gio\Documents\Investimenti\tlx\BTP_BTPi.txt"
'myURL = "D:\run\TLX\BTP_BTPi.txt"

    Workbooks.OpenText Filename:=myURL, origin:=xlWindows, _
        StartRow:=1, DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, _
        ConsecutiveDelimiter:=False, Tab:=True, Semicolon:=True, Comma:=False, _
        Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), Array(2, 1), Array( _
        3, 1), Array(4, 1), Array(5, 4), Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10 _
        , 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1)), TrailingMinusNumbers:= _
        True
 col = 0
 With Application.ActiveSheet

 'vengono selezionati e cancellati i record relativi ad operazione BTP di coupon striping
     ActiveSheet.Range("A1").AutoFilter Field:=4, Criteria1:="*Zc*"
     ActiveSheet.AutoFilter.Range.Offset(1, 0).Rows.SpecialCells(xlCellTypeVisible).Delete (xlShiftUp)
     ActiveSheet.Range("A1").AutoFilter
 'vengono selezionati e cancellati i record relativi a titoli Btp|fffd|I
     ActiveSheet.Range("A1").AutoFilter Field:=4, Criteria1:="*Btp|fffd|I*"
     ActiveSheet.AutoFilter.Range.Offset(1, 0).Rows.SpecialCells(xlCellTypeVisible).Delete (xlShiftUp)
     ActiveSheet.Range("A1").AutoFilter
 UltimaRiga = .Cells(.Rows.Count, "A").End(xlUp).Row
 Set Nome = .Range(Cells(1, 4), Cells(UltimaRiga, 4))
 'Btp|fffd|I
 For Each Cella In Nome
 If Cella.Value Like "*Btpi*" Then
    Delta1 = .Cells(Cella.Row, 5).Value - .Cells(Cella.Row - 1, 5).Value
     Delta2 = Abs(.Cells(Cella.Row, 5).Value - .Cells(Cella.Row + 1, 5).Value)
     col = col + 2
     ReDim Preserve Dati(1 To 13, 1 To col)
     Dati(1, col - 1) = Cella.Value 'Copio Descrizione BTPi
     Dati(2, col - 1) = .Cells(Cella.Row, 1).Value 'Copio ISIN BTPi
     Dati(3, col - 1) = .Cells(Cella.Row, 5).Value 'Copio data scadenza BTPei
     
     If Delta1 <= Delta2 Then
           Dati(1, col) = .Cells(Cella.Row - 1, 4).Value  'Copio Descrizione BTPei
           Dati(2, col) = .Cells(Cella.Row - 1, 1).Value  'Copio ISIN BTPei
           Dati(3, col) = .Cells(Cella.Row - 1, 5).Value  'Copio data scadenza BTPei
       Else
           Dati(1, col) = .Cells(Cella.Row + 1, 4).Value  'Copio Descrizione BTPei
           Dati(2, col) = .Cells(Cella.Row + 1, 1).Value  'Copio ISIN BTPei
           Dati(3, col) = .Cells(Cella.Row + 1, 5).Value 'Copio data scadenza BTPei
     End If
   
 End If
 
 Next Cella
 
 End With
     ActiveWorkbook.Close SaveChanges:=True
  Set html1 = New MSHTML.HTMLDocument
  For j = 1 To UBound(Dati, 2)
 myURL = "http://www.borse.it/quotazioni/valore/" & Dati(2, j) & "/isin/"
  
  WinHttpReq.Open "GET", myURL, False
WinHttpReq.send

html1.body.innerHTML = WinHttpReq.responseText

                  Nro_Tabelle = html1.getElementsByClassName("c-schede").Length
                   
                   If Nro_Tabelle > 1 Then
                    For u = 0 To 2
                 
                Set TDelements = html1.getElementsByTagName("table")
                
                    
                    Set TDelements = html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")
                    Nro_Elementi = TDelements.Length
                    
                 
                    
                    For k = 0 To Nro_Elementi - 1 Step 2
                    
                        With TDelements(k)
                
                    
                            Select Case .innerText
                            
                                Case "Prezzo emissione"
                                Dati(4, j) = Trim(html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")(k + 1).innerText) * 1
                             
                                Case "Cedola In Corso"
                                    If IsNumeric(TDelements(k + 1).innerText) Then
                                       Dati(8, j) = TDelements(k + 1).innerText * 1
                                     Else
                                         Dati(8, j) = TDelements(k + 1).innerText
                                     End If
                                Case "Data emissione"
                                Dati(12, j) = CDate(html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")(k + 1).innerText)
                
                                Case "Data rimborso"
                                     Dati(13, j) = CDate(html1.getElementsByClassName("c-schede")(u).getElementsByTagName("li")(k + 1).innerText)
                 

                                Case "Metodo Rateo"

                                  
                                       Dati(10, j) = TDelements(k + 1).innerText

                                 Case "Prezzo ufficiale"

                                  prezzo_ufficiale_riserva = 0
                                       prezzo_ufficiale_riserva = TDelements(k + 1).innerText
                                    prezzo_ufficiale_riserva = Left(prezzo_ufficiale_riserva, InStr(prezzo_ufficiale_riserva, "-") - 1) * 1
                             End Select
                 
                         End With
                
                     Next k
                     Next u
                 End If
           Dati(5, j) = 100 * 1
           Dati(6, j) = 2 * 1
           Dati(7, j) = 1 * 1
           Dati(11, j) = 12.5 * 1
           myURL = "http://www.borsaitaliana.it/borsa/obbligazioni/mot/btp/contratti.html?isin=" & Dati(2, j) & "&lang=it"
    
            k = 0
        prezzo_ufficiale = 0
        volume_totale = 0
        Nro_Pagine = 0
         Nro_Tabelle = 0
      NroRighe = 0

Do
       WinHttpReq.Open "GET", myURL & "&page=" & k, False
        WinHttpReq.send
     html1.body.innerHTML = WinHttpReq.responseText
    
    Nro_Pagine = html1.getElementsByClassName("m-pagination__item").Length - 1


Nro_Tabelle = html1.getElementsByClassName("m-table -responsive -clear-m").Length

If Nro_Tabelle <> 0 Then
        Set htmTable = html1.getElementsByClassName("m-table -responsive -clear-m")(0)
        NroRighe = htmTable.Rows.Length

        If htmTable.Rows(1).Cells(1).innerText = "Prezzo Ultimo Contratto " And htmTable.Rows(1).Cells(3).innerText = "Volume Ultimo " Then
        For i = 2 To NroRighe - 1
        
        prezzo_ufficiale = prezzo_ufficiale + htmTable.Rows(i).Cells(1).innerText * htmTable.Rows(i).Cells(3).innerText * 1
        volume_totale = volume_totale + htmTable.Rows(i).Cells(3).innerText * 1
        Next i
     '   prezzo_ufficiale = prezzo_ufficiale / volume_totale
         End If
 End If
 
 k = k + 1
  Loop Until k >= Nro_Pagine
   If volume_totale <> 0 Then
  prezzo_ufficiale = prezzo_ufficiale / volume_totale
  Else
    prezzo_ufficiale = prezzo_ufficiale_riserva
  End If
    Dati(9, j) = prezzo_ufficiale * 1
    Next j
  Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Activate
  
  With Application.ActiveSheet
  InizioRiga = .Cells.Find("@", , , , xlByRows, xlPrevious).Row + 1
 UltimaRiga = .Cells(.Rows.Count, "A").End(xlUp).Row
 If InizioRiga < UltimaRiga Then
  Set Nome = .Range(Cells(InizioRiga, 1), Cells(UltimaRiga, 1))
  Nome.ClearContents
  End If
 UltimaRiga = .Cells.Find("@", , , , xlByRows, xlPrevious).Row + 1
 
  For j = 1 To UBound(Dati, 2)
    For k = 1 To UBound(Dati, 1)
    .Cells(j + 1 + UltimaRiga, k).Value = Dati(k, j)
    
    Next k
    Next j
    
  '   Set Nome = .Range(Cells(2, 1), Cells(UltimaRiga, 1))
     adesso = Now()
    Data = Mid(adesso, 1, 10)


 
Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
    
     Mese1 = WorksheetFunction.Text(Month(Now()), "00")
    Anno = Year(Data)
    Module1.Scarica_Coeff
    
InizioRiga = UltimaRiga
UltimaRiga = .Cells(.Rows.Count, "A").End(xlUp).Row
'Set Nome = ""
 Set Nome = Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Range(Cells(InizioRiga, 1), Cells(UltimaRiga, 1))
        For Each Cella In Nome
        
        If Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Cells(Cella.Row, 1).Value Like "*Btpi*" Then
        

file = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Istat\" & Anno & "\" & Mese1 & "\" & Mese & "\" & .Cells(Cella.Row, 2).Value & ".xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
CItxt = Replace(CItxt, ".", ",")
CI = CItxt
Workbooks(.Cells(Cella.Row, 2).Value & ".xls").Close SaveChanges:=False

  .Cells(Cella.Row, 14) = CI * 1
      
    End If
     Next Cella
 End With
    
    unspeed
       
End Sub



Sub Get_BTP_and_BTPiOLD()

'Dim oHttp As MSXML2.xmlHTTP
Dim doc As MSHTML.HTMLDocument 'pc di casa w7
           Dim HTMLDoc As New HTMLDocument
             Dim TDelements As IHTMLElementCollection
 Dim oHttp As Object     'pc lavoro w10
' Dim doc As MSHTML.HTMLDocument 'pc lavoro w10
 ' On Error GoTo ErrorFound
  
      Set doc = New MSHTML.HTMLDocument
    Set oHttp = CreateObject("MSXML2.XMLHTTP")
    Dim Dati() As Variant, Pagine As Byte
   '  URL = "http://www.borsaitaliana.it/borsa/obbligazioni/advanced-search.html?market=MOT&typology=TSI&type=1&lang=it&ord=coupon&mod=down&ord=isin&mod=up&ord=name&mod=up&ord=expiry&mod=up&page="
    URL = "http://www.borsaitaliana.it/borsa/obbligazioni/advanced-search.html?market=MOT&typology=TSI&type=1&lang=it&ord=expiry&mod=up&ord=isin&mod=up&ord=name&mod=up&ord=coupon&mod=up&page="
     'Set oHttp = New MSXML2.xmlHTTP    'PC casa
   '  Set oHttp = New MSXML2.XMLHTTP60
       col = 1

     
         oHttp.Open "GET", URL & 1, False
         oHttp.send
         doc.body.innerHTML = oHttp.responseText
         Pagine = doc.getElementsByClassName("m-pagination__item").Length - 1
         
         
         For k = 1 To Pagine
        oHttp.Open "GET", URL & k, False
         oHttp.send
         doc.body.innerHTML = oHttp.responseText
         Set TR_col = doc.getElementsByTagName("TR")
         For Each TR In TR_col
         Set a_col = TR.getElementsByTagName("TD")
         If a_col.Length <> 0 Then
         ReDim Preserve Dati(1 To 4, 1 To col)
         Dati(1, col) = Trim(Mid(a_col(0).innerText, 1, InStr(a_col(0).innerText, "-") - 1)) 'ISIN
         Dati(2, col) = Trim(a_col(1).innerText) 'Nome   'Mid(a_col(0).innerText, InStr(a_col(0).innerText, "-") + 2, InStr(a_col(0).innerText, Chr(10)))
         Dati(3, col) = Trim(a_col(3).innerText)  'Cedola
         Dati(4, col) = Trim(a_col(4).innerText)  'Scadenza
         col = col + 1
         End If
             Next TR
        
        Next k
    For k = 1 To UBound(Dati, 2)
    If Dati(2, k) Like "*Btpi*" Then
    Delta1 = CDate(Dati(4, k)) - CDate(Dati(4, k - 1))
    Delta2 = Abs(CDate(Dati(4, k)) - CDate(Dati(4, k + 1)))
    End If
    
    
    Next k


End Sub

Sub Aggiorna_Stime_INF()
'aggiorna prezzi btp presenti nello sheet "Breakeven_Inflation", macro superata dalla "Breackeven_inflation_Estimation"

     Dim objMSHTML As New MSHTML.HTMLDocument
     Dim objDoc As MSHTML.HTMLDocument
    Dim html As String, stringa As String
Dim LastRow As Long, ListaISIN As Range, Cella As Range

Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Activate


 LastRow = Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Cells(Rows.Count, "A").End(xlUp).Row

Set ListaISIN = Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Range("A2:A" & LastRow)

    With Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation")
    
    'c_a colonna aggiornamento quotazione
c_a = Application.Match("Prezzo di Riferimento", Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Range("1:1"), 0)

'c_c colonna aggiornamento coefficiente indicizzazione
c_c = Application.Match("CI", Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Range("1:1"), 0)

'c_d colonna Descrizione Titolo
c_d = Application.Match("Descrizione", Workbooks("Update Investimenti.xlsm").Sheets("Breakeven_Inflation").Range("1:1"), 0)

For Each Cella In ListaISIN

       link = "http://www.borsaitaliana.it/borsa/obbligazioni/mot/btp/dati-completi.html?isin=" & .Cells(Cella.Row, 1).Value & "&lang=it"
       
       'recupera la prima pagina html
        objMSHTML.designMode = "on"
     Set objDoc = objMSHTML.createDocumentFromUrl(link, vbNullString)
'On Error GoTo Errore 'inizio gestione errore
     Do While objDoc.readyState <> "complete"
         DoEvents
     Loop
    

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
    html = objDoc.DocumentElement.innerText
    

     Set objDoc = Nothing
    Set objMSHTML = Nothing
 '*****************************************************************************
    
            iPrez = InStr(html, "Prezzo di riferimento") 'si cerca la posizione della stringa "Prezzo di riferimento"
        fPrez = InStr(iPrez + Len("Prezzo di riferimento"), html, "Data Pr Ufficiale") 'si cerca la posizione dell'ultima ciffra del "Prezzo ufficiale"
        
        Prezzo_Rif = Mid(html, iPrez + Len("Prezzo di riferimento"), fPrez - (iPrez + Len("Prezzo di riferimento") + 5)) ' si strae la stringa "Prezzo ufficiale"
        
        .Cells(Cella.Row, c_a) = Prezzo_Rif * 1 'si copia il prezzo nell'apposita cella trasformandolo
   
   If .Cells(Cella.Row, c_d).Value Like "*Btp|fffd|I*" Then
   
   '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Dim file As String, CItxt As String, Intero As String, Decimale As String, CI As Double
Dim Mese As String, Anno As String


adesso = Now()
Data = Mid(adesso, 1, 10)

Select Case Month(Data)

            Case "1"
            Mese = "gennaio"
            Case "2"
            Mese = "febbraio"
            Case "3"
            Mese = "marzo"
            Case "4"
            Mese = "aprile"
            Case "5"
            Mese = "maggio"
            Case "6"
            Mese = "giugno"
            Case "7"
            Mese = "luglio"
            Case "8"
            Mese = "agosto"
            Case "9"
            Mese = "settembre"
            Case "10"
            Mese = "ottobre"
            Case "11"
            Mese = "novembre"
            Case "12"
            Mese = "dicembre"
    End Select
    
    Anno = Year(Data)
file = "C:\Users\Gio\Documents\Investimenti\Coefficienti_Indicizzazione\Eurostat\" & Anno & "\definitivo " & Mese & "\" & .Cells(Cella.Row, 1).Value & ".xls"
Workbooks.Open (file)

r = Application.Match("*" & Data & "*", Range("b:b"), 0)
CItxt = Range("G" & r, "G" & r).Value
CI = CItxt
Workbooks(.Cells(Cella.Row, 1).Value & ".xls").Close SaveChanges:=False

  .Cells(Cella.Row, c_c) = CI * 1
  
'++++++++++++++++++++++++++++++++++++++++++++++++

   
   End If
   

Next Cella

End With

End Sub

Sub FindAndTerminate(ByVal strProcName As String)

'tale procedura si killa i processi attivi che vengono specificati nei parametri che gli vengono passati all'atto della chiamata
' esempio per killare sessione aperte di Internet explorer ==> FindAndTerminate "iexplore.exe"
    Dim objWMIService, objProcess, colProcess
    Dim strComputer, strList
    strComputer = "."
    Set objWMIService = GetObject("winmgmts:" _
    & "{impersonationLevel=impersonate}!\\" _
    & strComputer & "\root\cimv2")
    Set colProcess = objWMIService.ExecQuery _
    ("Select * from Win32_Process Where Name = '" & strProcName & "'")
    If colProcess.Count > 0 Then
        On Error GoTo Err1:                'in caso di errore si va a Err1:
        For Each objProcess In colProcess
            objProcess.Terminate
Err1:
        On Error GoTo -1                    'la flag di errorre viene cancellata e il ciclo pu|fffd| continuare fino a naturale esaurimento.
        
        Next objProcess
    End If
End Sub



Sub ESEMPIO_letturaDaFile() 'MPS 12-16 4.45% EUR IT0004825763

Dim objMSHTML As New MSHTML.HTMLDocument
Dim objDoc As MSHTML.HTMLDocument
Dim html As String, stringa As String

'recupera la prima pagina html
    objMSHTML.designMode = "on"
Set objDoc = objMSHTML.createDocumentFromUrl("http://www.eurotlx.com/it/strumenti/dettaglio/IT0004825763", vbNullString)
On Error GoTo Errore 'inizio gestione errore
Do While objDoc.readyState <> "complete"
         DoEvents
Loop
    

'il contenuto testuale della pagina viene salvato nella variabile stringa "html
html = objDoc.DocumentElement.innerText
    

Set objDoc = Nothing
Set objMSHTML = Nothing

 '*****************************************************************************
'Dim Riga As String
'Riga = ""
'stringa = ""
'Open "D:\Excel\File di borsaitaliana\tlx.txt" For Input As #1
'Do Until EOF(1)
'   Line Input #1, Riga
'   stringa = stringa & Riga
'Loop
'Close #1 'Chiusura File
 '*****************************************************************************
Dim Prezzo_Uff As String, data_pr_uff As String
Dim iPrez As Long, fPrez As Long, r As Long, c As Long, Virgola As Long


stringa = html

 html = ""
        'trova la cella dove aggiornare il prezzo nello sheet "Aggiornamento" relativamente all'ISIN specificato
r = Application.Match("IT0004825763", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("d:d"), 0)
c = Application.Match("Quotazione", Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Range("3:3"), 0)
iPrez = InStr(stringa, "Prezzo di riferimento statico")           'si definisce l'inizio del record cercando la parola "Btp"
fPrez = InStr(iPrez + 29, stringa, "Quantit|fffd|")
Prezzo_Uff = Mid(stringa, iPrez + 29, fPrez - (iPrez + 29))
Virgola = InStr(Prezzo_Uff, ".")
If Virgola <> 0 Then
    Prezzo_Uff = Mid(Prezzo_Uff, 1, Virgola - 1) & "," & Mid(Prezzo_Uff, Virgola + 1)
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1
Else
    Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = Prezzo_Uff * 1
End If

Exit Sub
Errore:
If Err.Number <> 0 Then
Workbooks("Update Investimenti.xlsm").Sheets("Aggiornamento").Cells(r, c) = "00,00" * 1
End If
End Sub

Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
    Dim objMSHTML As New MSHTML.HTMLDocument
    Dim objDoc As MSHTML.HTMLDocument
    
link = "http://www.borsaitaliana.it/borsa/obbligazioni/mot/bot/scheda.html?isin=IT0003256820&lang=it"
        objMSHTML.designMode = "on"
    Set objDoc = objMSHTML.createDocumentFromUrl(link, vbNullString)

    Do While objDoc.readyState <> "complete"
        DoEvents
    Loop
 
 Dim Volume As String

    
      html = objDoc.DocumentElement.innerText
End Sub

Sub old2usaGNPV()
'Dim scadenze() As Variant, valori() As Variant, risul As Double

Dim scadenze As Range, valori As Range, risul As Double

'ReDim Preserve scadenze(1 To 4)
 'scadenze = Application.Transpose(Workbooks("Update Investimenti.xlsm").Worksheets("Struttura_Termine (2)").Range("K14:K17"))
'ReDim Preserve valori(1 To 4)
Set scadenze = Workbooks("Update Investimenti.xlsm").Worksheets("Patty").Range("F20:F30")
Set valori = Workbooks("Update Investimenti.xlsm").Worksheets("Patty").Range("T20:T30")
'valori = Application.Transpose(Workbooks("Update Investimenti.xlsm").Worksheets("Struttura_Termine (2)").Range("L14:L17"))
'Set scadenze = Array(40344, 40603)
'Set valori = Array(-97, 5)
risul = GNPV(scadenze, valori)
Cells(ActiveCell.Row, ActiveCell.Column).Formula = "=GNPV(F20:F30,T20:T30)"


End Sub

Function OLD_Calcola_XIRR(Prezzo As Double, Data_Acquisto As Date, Data_Scadenza As Date, Rimborso As Double, Data_Prox_Cedola As Date, _
                    Num_Cedole_Anno As Integer, Cedola As Double) As Double
Dim Scadenziario() As Double, Cash_Flow() As Double, Data_Ced_Corr As Date


If Data_Acquisto < Data_Scadenza Then

i = 1
ReDim Preserve Scadenziario(1 To i)
ReDim Preserve Cash_Flow(1 To i)
Scadenziario(i) = DateValue(Data_Acquisto)
Cash_Flow(i) = -Prezzo

' la data di acquisto |fffd| nell'ultimo periodo cedolare
If Data_Prox_Cedola = Data_Scadenza Then
    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = DateValue(Data_Scadenza)
    Cash_Flow(i) = Rimborso + Cedola
Else


    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Prox_Cedola
    Cash_Flow(i) = Cedola
  End If
Data_Ced_Corr = Data_Prox_Cedola
       

Do
 Select Case Num_Cedole_Anno
 Case 1
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    
Case 2
    If Month(Data_Ced_Corr) + 6 > 12 Then
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
    Else
     Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
    End If
        
  Case 3
      If Month(Data_Ced_Corr) + 3 > 12 Then
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
    Else
     Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
    End If
  
 End Select
     i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Ced_Corr
    If Data_Ced_Corr = Data_Scadenza Then
        Cash_Flow(i) = Rimborso + Cedola
    Else
        Cash_Flow(i) = Cedola
    End If
    
   
Loop Until Data_Ced_Corr >= Data_Scadenza

OLD_Calcola_XIRR = Application.Xirr(Cash_Flow, Scadenziario)

End If

End Function

Function old2Calcola_GNPV(Prezzo_TelQuel As Double, Data_Acquisto As Date, Data_Scadenza As Date, Rimborso As Double, Emissione As Double, _
                    Num_Cedole_Anno As Integer, Cedola_in_Corso As Double, Tassazione As Variant, Cambio As Variant) As Double
Dim Scadenziario() As Variant, Cash_Flow() As Variant, Data_Ced_Corr As Date, Data_Prox_Cedola As Date, Num_cedole As Integer



        If IsMissing(Tassazione) = True Then
            Tassazione = 0.125
            
        Else
        Tassazione = Tassazione / 100
        
        End If
        
           If IsMissing(Cambio) = True Then
            Cambio = 1
        End If
        
        
 If Cedola_in_Corso = 0 Or Cedola_in_Corso = Empty Then 'se il titolo |fffd| uno ZCB

            i = 2
            ReDim Preserve Scadenziario(1 To i)
            ReDim Preserve Cash_Flow(1 To i)
            Scadenziario(1) = DateValue(Data_Acquisto)
            Cash_Flow(1) = -Prezzo_TelQuel * (1 / Cambio)
            Scadenziario(2) = DateValue(Data_Scadenza)
            Cash_Flow(2) = (Rimborso - (Rimborso - Emissione) * Tassazione) * (1 / Cambio)
Else

Num_cedole = WorksheetFunction.CoupNum(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = WorksheetFunction.CoupNcd(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = Data_Prox_Cedola + 1462 + 1462
        
If Data_Acquisto < Data_Scadenza Then

i = 1
ReDim Preserve Scadenziario(1 To i)
ReDim Preserve Cash_Flow(1 To i)
Scadenziario(i) = DateValue(Data_Acquisto)
Cash_Flow(i) = -Prezzo_TelQuel * (1 / Cambio)

' la data di acquisto |fffd| nell'ultimo periodo cedolare
If Data_Prox_Cedola = Data_Scadenza Then
    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = DateValue(Data_Scadenza)
    Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)

Else


    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Prox_Cedola
    Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
  End If
Data_Ced_Corr = Data_Prox_Cedola
       

Do
 Select Case Num_Cedole_Anno
 Case 1
    If Month(Data_Ced_Corr) = 2 And Day(Data_Ced_Corr) = 29 Then
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    Else
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    End If
    
Case 2
    If Month(Data_Ced_Corr) + 6 > 12 Then
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6 - 12) = 4 Or (Month(Data_Ced_Corr) + 6 - 12) = 6 Or (Month(Data_Ced_Corr) + 6 - 12) = 9 Or (Month(Data_Ced_Corr) + 6 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 6 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6) = 4 Or (Month(Data_Ced_Corr) + 6) = 6 Or (Month(Data_Ced_Corr) + 6) = 9 Or (Month(Data_Ced_Corr) + 6) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 6 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
        
  Case 4
      If Month(Data_Ced_Corr) + 3 > 12 Then
            If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3 - 12) = 4 Or (Month(Data_Ced_Corr) + 3 - 12) = 6 Or (Month(Data_Ced_Corr) + 3 - 12) = 9 Or (Month(Data_Ced_Corr) + 3 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 3 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3) = 4 Or (Month(Data_Ced_Corr) + 3) = 6 Or (Month(Data_Ced_Corr) + 3) = 9 Or (Month(Data_Ced_Corr) + 3) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 3 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        End If
    
    End If
  
 End Select
     i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Ced_Corr
    If Data_Ced_Corr = Data_Scadenza Or i = Num_cedole + 1 Then
        Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)
    Else
        Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
    End If

   
Loop Until Data_Ced_Corr >= Data_Scadenza

End If
End If

Calcola_GNPV = GNPV(Scadenziario, Cash_Flow)


End Function

Sub prov()
Dim Ris As Double
Num_cedole = 16

 Cells(ActiveCell.Row + 2, 16).Formula = "=GNPV(OFFSET(F" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1),OFFSET(G" & ActiveCell.Row + 5 & ",COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")-1,0,COUNTA(G" _
    & ActiveCell.Row + 5 & ":G" & ActiveCell.Row + 5 + Num_cedole + 1 & ")-COUNTIF(I" & ActiveCell.Row + 5 & ":I" & ActiveCell.Row + 5 + Num_cedole & ",""<>0"")+1,1))"


End Sub


Sub demo2()
    myfirstarray = Array(-150.5, 200)
    mysecarray = Array(#1/1/2007#, #1/1/2008#)
    myxirr = Application.Xirr(myfirstarray, mysecarray)
    MsgBox myxirr
End Sub

Sub example1()
 
    Dim vResult
    Dim arrValues(1 To 5) As Double
    Dim arrDates(1 To 5) As Long
    Dim Guess As Double
 
    'the formula result we want is:
    '=XIRR({-10000;2750;4250;3250;2750},{39448;39508;39751;39859;39904},0.1)
 
    arrValues(1) = -10000
    arrValues(2) = 2750
    arrValues(3) = 4250
    arrValues(4) = 3250
    arrValues(5) = 2750
 
    arrDates(1) = 39448
    arrDates(2) = 39508
    arrDates(3) = 39751
    arrDates(4) = 39859
    arrDates(5) = 39904
 
    Guess = 0.1
 
 
    vResult = Application.WorksheetFunction.Xirr(arrValues, arrDates, Guess)
    MsgBox CStr(vResult)
 
End Sub

Sub Inserisci()
Range("F10").Select
 Range("F10").Formula = "=IF(ISNUMBER(C10),""DefaultText"","""")"

End Sub

Function Old2Calcola_XIRR(Prezzo_TelQuel As Double, Data_Acquisto As Date, Data_Scadenza As Date, Rimborso As Double, Emissione As Double, _
                    Num_Cedole_Anno As Integer, Cedola_in_Corso As Double, Tassazione As Variant, Cambio As Variant) As Double
Dim Scad() As Variant, Scadenziario() As Double, Cash_Flow() As Double, Data_Ced_Corr As Date, Data_Prox_Cedola As Date, Num_cedole As Integer


        If IsMissing(Tassazione) = True Then
            Tassazione = 0.125
            
            Else
        Tassazione = Tassazione / 100
        End If
        
           If IsMissing(Cambio) = True Then
            Cambio = 1
        End If
        

If Cedola_in_Corso = 0 Or Cedola_in_Corso = Empty Then 'se il titolo |fffd| uno ZCB

            i = 2
            ReDim Preserve Scadenziario(1 To i)
            ReDim Preserve Cash_Flow(1 To i)
            ReDim Preserve Scad(1 To i)
            Scad(1) = DateValue(Data_Acquisto)
            Scadenziario(1) = DateValue(Data_Acquisto)
            Cash_Flow(1) = -Prezzo_TelQuel * (1 / Cambio)
            Scadenziario(2) = DateValue(Data_Scadenza)
            Scad(2) = DateValue(Data_Scadenza)
             Cash_Flow(2) = (Rimborso - (Rimborso - Emissione) * Tassazione) * (1 / Cambio)
Else

Num_cedole = WorksheetFunction.CoupNum(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = WorksheetFunction.CoupNcd(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = Data_Prox_Cedola + 1462 + 1462


        
If Data_Acquisto < Data_Scadenza Then

i = 1
ReDim Preserve Scadenziario(1 To i)
ReDim Preserve Scad(1 To i)
ReDim Preserve Cash_Flow(1 To i)
Scad(i) = DateValue(Data_Acquisto)
Scadenziario(i) = DateValue(Data_Acquisto)
Cash_Flow(i) = -Prezzo_TelQuel * (1 / Cambio)

' la data di acquisto |fffd| nell'ultimo periodo cedolare
If Data_Prox_Cedola = Data_Scadenza Then
    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = DateValue(Data_Scadenza)
    Scad(i) = DateValue(Data_Scadenza)
    Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)
Else


    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Prox_Cedola
    Scad(i) = Data_Prox_Cedola
    Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
  End If
Data_Ced_Corr = Data_Prox_Cedola
       

Do
 Select Case Num_Cedole_Anno
 Case 1
    If Month(Data_Ced_Corr) = 2 And Day(Data_Ced_Corr) = 29 Then
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    Else
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    End If
    
Case 2
    If Month(Data_Ced_Corr) + 6 > 12 Then
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6 - 12) = 4 Or (Month(Data_Ced_Corr) + 6 - 12) = 6 Or (Month(Data_Ced_Corr) + 6 - 12) = 9 Or (Month(Data_Ced_Corr) + 6 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 6 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6) = 4 Or (Month(Data_Ced_Corr) + 6) = 6 Or (Month(Data_Ced_Corr) + 6) = 9 Or (Month(Data_Ced_Corr) + 6) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 6 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
        
  Case 4
      If Month(Data_Ced_Corr) + 3 > 12 Then
            If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3 - 12) = 4 Or (Month(Data_Ced_Corr) + 3 - 12) = 6 Or (Month(Data_Ced_Corr) + 3 - 12) = 9 Or (Month(Data_Ced_Corr) + 3 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 3 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3) = 4 Or (Month(Data_Ced_Corr) + 3) = 6 Or (Month(Data_Ced_Corr) + 3) = 9 Or (Month(Data_Ced_Corr) + 3) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 3 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
  
 End Select
     i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Ced_Corr
    Scad(i) = Data_Ced_Corr
    If Data_Ced_Corr = Data_Scadenza Or i = Num_cedole + 1 Then
        Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)
    Else
        Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
    End If
    
   
Loop Until Data_Ced_Corr >= Data_Scadenza

End If
End If


Calcola_XIRR = Application.Xirr(Cash_Flow, Scadenziario)



End Function


Function OLD_Tasso_Cambio_Per_Dato_Rendimento(Prezzo_TelQuel As Double, Data_Acquisto As Date, Data_Scadenza As Date, Rimborso As Double, Emissione As Double, _
          Num_Cedole_Anno As Integer, Cedola_in_Corso As Double, Tassazione As Variant, Rendimento_netto As Double, Cambio As Double) As Double
                    
                    
                    
   Dim Scad() As Variant, Scadenziario() As Double, Cash_Flow() As Double, Cash_Flow_Const() As Double, Data_Ced_Corr As Date, Data_Prox_Cedola As Date, Num_cedole As Integer
    Dim Tasso_Target As Double
        

        If IsMissing(Tassazione) = True Then
            Tassazione = 0.125
            
            Else
        Tassazione = Tassazione / 100
        End If
        
           If IsMissing(Cambio) = True Then
            Cambio = 1
        End If
        

If Cedola_in_Corso = 0 Or Cedola_in_Corso = Empty Then 'se il titolo |fffd| uno ZCB

            i = 2
            ReDim Preserve Scadenziario(1 To i)
            ReDim Preserve Cash_Flow(1 To i)
            ReDim Preserve Scad(1 To i)
            Scad(1) = DateValue(Data_Acquisto)
            Scadenziario(1) = DateValue(Data_Acquisto)
            Cash_Flow(1) = -Prezzo_TelQuel * (1 / Cambio)
            Scadenziario(2) = DateValue(Data_Scadenza)
            Scad(2) = DateValue(Data_Scadenza)
             Cash_Flow(2) = (Rimborso - (Rimborso - Emissione) * Tassazione) * (1 / Cambio)
Else

Num_cedole = WorksheetFunction.CoupNum(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = WorksheetFunction.CoupNcd(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = Data_Prox_Cedola + 1462 + 1462


        
If Data_Acquisto < Data_Scadenza Then

i = 1
ReDim Preserve Scadenziario(1 To i)
ReDim Preserve Scad(1 To i)
ReDim Preserve Cash_Flow(1 To i)
Scad(i) = DateValue(Data_Acquisto)
Scadenziario(i) = DateValue(Data_Acquisto)
Cash_Flow(i) = -Prezzo_TelQuel * (1 / Cambio)

' la data di acquisto |fffd| nell'ultimo periodo cedolare
If Data_Prox_Cedola = Data_Scadenza Then
    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = DateValue(Data_Scadenza)
    Scad(i) = DateValue(Data_Scadenza)
    Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)
Else


    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Prox_Cedola
    Scad(i) = Data_Prox_Cedola
    Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
  End If
Data_Ced_Corr = Data_Prox_Cedola
       

Do
 Select Case Num_Cedole_Anno
 Case 1
    If Month(Data_Ced_Corr) = 2 And Day(Data_Ced_Corr) = 29 Then
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    Else
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    End If
    
Case 2
    If Month(Data_Ced_Corr) + 6 > 12 Then
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6 - 12) = 4 Or (Month(Data_Ced_Corr) + 6 - 12) = 6 Or (Month(Data_Ced_Corr) + 6 - 12) = 9 Or (Month(Data_Ced_Corr) + 6 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 6 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6) = 4 Or (Month(Data_Ced_Corr) + 6) = 6 Or (Month(Data_Ced_Corr) + 6) = 9 Or (Month(Data_Ced_Corr) + 6) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 6 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
        
  Case 4
      If Month(Data_Ced_Corr) + 3 > 12 Then
            If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3 - 12) = 4 Or (Month(Data_Ced_Corr) + 3 - 12) = 6 Or (Month(Data_Ced_Corr) + 3 - 12) = 9 Or (Month(Data_Ced_Corr) + 3 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 3 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3) = 4 Or (Month(Data_Ced_Corr) + 3) = 6 Or (Month(Data_Ced_Corr) + 3) = 9 Or (Month(Data_Ced_Corr) + 3) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 3 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
  
 End Select
     i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Ced_Corr
    Scad(i) = Data_Ced_Corr
    If Data_Ced_Corr = Data_Scadenza Or i = Num_cedole + 1 Then
        Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)
    Else
        Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
    End If
    
   
Loop Until Data_Ced_Corr >= Data_Scadenza

End If
End If

ReDim Cash_Flow_Const(1 To UBound(Cash_Flow))

For i = LBound(Cash_Flow) + 1 To UBound(Cash_Flow)
    Cash_Flow_Const(i) = Cash_Flow(i) * Cambio
Next i

Dim Delta As Double
Delta = 1 / 10000
Tasso_Target = Cambio + Delta
k = 0
Do
For i = LBound(Cash_Flow) + 1 To UBound(Cash_Flow)
     Cash_Flow(i) = Cash_Flow_Const(i)
Next i

For i = LBound(Cash_Flow) + 1 To UBound(Cash_Flow)
    Cash_Flow(i) = Cash_Flow(i) * (1 / Tasso_Target)
Next i
Tasso_Target = Tasso_Target + Delta
k = k + 1
Loop While (Abs(Rendimento_netto - Application.Xirr(Cash_Flow, Scadenziario))) > Rendimento_netto / 10000 And k < 1000000

Tasso_Cambio_Per_Dato_Rendimento = Tasso_Target

Debug.Print k

Debug.Print Abs(Rendimento_netto - Application.Xirr(Cash_Flow, Scadenziario))
End Function

Function old2Tasso_Cambio_Per_Dato_Rendimento(Prezzo_TelQuel As Double, Data_Acquisto As Date, Data_Scadenza As Date, Rimborso As Double, Emissione As Double, _
          Num_Cedole_Anno As Integer, Cedola_in_Corso As Double, Tassazione As Variant, Rendimento_netto As Double, Cambio As Double) As Double
                    
                    
                    
   Dim Scad() As Variant, Scadenziario() As Double, Cash_Flow() As Double, Cash_Flow_Const() As Double, Data_Ced_Corr As Date, Data_Prox_Cedola As Date, Num_cedole As Integer
    Dim Tasso_Target As Double
        

        If IsMissing(Tassazione) = True Then
            Tassazione = 0.125
            
            Else
        Tassazione = Tassazione / 100
        End If
        
           If IsMissing(Cambio) = True Then
            Cambio = 1
        End If
        

If Cedola_in_Corso = 0 Or Cedola_in_Corso = Empty Then 'se il titolo |fffd| uno ZCB

            i = 2
            ReDim Preserve Scadenziario(1 To i)
            ReDim Preserve Cash_Flow(1 To i)
            ReDim Preserve Scad(1 To i)
            Scad(1) = DateValue(Data_Acquisto)
            Scadenziario(1) = DateValue(Data_Acquisto)
            Cash_Flow(1) = -Prezzo_TelQuel * (1 / Cambio)
            Scadenziario(2) = DateValue(Data_Scadenza)
            Scad(2) = DateValue(Data_Scadenza)
             Cash_Flow(2) = (Rimborso - (Rimborso - Emissione) * Tassazione) * (1 / Cambio)
Else

Num_cedole = WorksheetFunction.CoupNum(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = WorksheetFunction.CoupNcd(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = Data_Prox_Cedola + 1462 + 1462


        
If Data_Acquisto < Data_Scadenza Then

i = 1
ReDim Preserve Scadenziario(1 To i)
ReDim Preserve Scad(1 To i)
ReDim Preserve Cash_Flow(1 To i)
Scad(i) = DateValue(Data_Acquisto)
Scadenziario(i) = DateValue(Data_Acquisto)
Cash_Flow(i) = -Prezzo_TelQuel * (1 / Cambio)

' la data di acquisto |fffd| nell'ultimo periodo cedolare
If Data_Prox_Cedola = Data_Scadenza Then
    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = DateValue(Data_Scadenza)
    Scad(i) = DateValue(Data_Scadenza)
    Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)
Else


    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Prox_Cedola
    Scad(i) = Data_Prox_Cedola
    Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
  End If
Data_Ced_Corr = Data_Prox_Cedola
       

Do
 Select Case Num_Cedole_Anno
 Case 1
    If Month(Data_Ced_Corr) = 2 And Day(Data_Ced_Corr) = 29 Then
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    Else
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    End If
    
Case 2
    If Month(Data_Ced_Corr) + 6 > 12 Then
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6 - 12) = 4 Or (Month(Data_Ced_Corr) + 6 - 12) = 6 Or (Month(Data_Ced_Corr) + 6 - 12) = 9 Or (Month(Data_Ced_Corr) + 6 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 6 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6) = 4 Or (Month(Data_Ced_Corr) + 6) = 6 Or (Month(Data_Ced_Corr) + 6) = 9 Or (Month(Data_Ced_Corr) + 6) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 6 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
        
  Case 4
      If Month(Data_Ced_Corr) + 3 > 12 Then
            If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3 - 12) = 4 Or (Month(Data_Ced_Corr) + 3 - 12) = 6 Or (Month(Data_Ced_Corr) + 3 - 12) = 9 Or (Month(Data_Ced_Corr) + 3 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 3 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3) = 4 Or (Month(Data_Ced_Corr) + 3) = 6 Or (Month(Data_Ced_Corr) + 3) = 9 Or (Month(Data_Ced_Corr) + 3) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 3 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
  
 End Select
     i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Ced_Corr
    Scad(i) = Data_Ced_Corr
    If Data_Ced_Corr = Data_Scadenza Or i = Num_cedole + 1 Then
        Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione))) * (1 / Cambio)
    Else
        Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione)) * (1 / Cambio)
    End If
    
   
Loop Until Data_Ced_Corr >= Data_Scadenza

End If
End If
'*************************************
Tasso_Cambio_Per_Dato_Rendimento = 0

For i = LBound(Cash_Flow) + 1 To UBound(Cash_Flow)
Tasso_Cambio_Per_Dato_Rendimento = Tasso_Cambio_Per_Dato_Rendimento + (Cash_Flow(i) * Cambio / (1 + Rendimento_netto) ^ ((Scadenziario(i) - Scadenziario(1)) / 365))

Next i

Tasso_Cambio_Per_Dato_Rendimento = Tasso_Cambio_Per_Dato_Rendimento / Abs(Cash_Flow(1))


End Function


Function Old2Inflazione_Break_Even(Prezzo_TelQuel As Double, Data_Acquisto As Date, Data_Scadenza As Date, Rimborso As Double, Emissione As Double, _
          Num_Cedole_Anno As Integer, Cedola_in_Corso As Double, Tassazione As Variant, Rendimento_BTP As Double) As Double
         ' , Coeff_Indicizzazione_BTPi As Double ==> NON SERVE
          
                    
                    
                    
   Dim Scad() As Variant, Scadenziario() As Double, Cash_Flow() As Double, New_Cash_Flow() As Double, Data_Ced_Corr As Date, Data_Prox_Cedola As Date, Num_cedole As Integer
    Dim Tasso_Target As Double, New_cadenziario() As Double
        
Coeff_Indicizzazione_BTPi = 1
        If IsMissing(Tassazione) = True Then
            Tassazione = 0.125
            
            Else
        Tassazione = Tassazione / 100
        End If
        
        

If Cedola_in_Corso = 0 Or Cedola_in_Corso = Empty Then 'se il titolo |fffd| uno ZCB

            i = 2
            ReDim Preserve Scadenziario(1 To i)
            ReDim Preserve Cash_Flow(1 To i)
            ReDim Preserve Scad(1 To i)
            Scad(1) = DateValue(Data_Acquisto)
            Scadenziario(1) = DateValue(Data_Acquisto)
            Cash_Flow(1) = -Prezzo_TelQuel * (1 / Cambio)
            Scadenziario(2) = DateValue(Data_Scadenza)
            Scad(2) = DateValue(Data_Scadenza)
             Cash_Flow(2) = (Rimborso - (Rimborso - Emissione) * Tassazione) * (1 / Cambio)
Else

Num_cedole = WorksheetFunction.CoupNum(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = WorksheetFunction.CoupNcd(DateValue(Data_Acquisto), DateValue(Data_Scadenza), Num_Cedole_Anno, 1)
Data_Prox_Cedola = Data_Prox_Cedola + 1462 + 1462


        
If Data_Acquisto < Data_Scadenza Then

i = 1
ReDim Preserve Scadenziario(1 To i)
ReDim Preserve Scad(1 To i)
ReDim Preserve Cash_Flow(1 To i)
Scad(i) = DateValue(Data_Acquisto)
Scadenziario(i) = DateValue(Data_Acquisto)
Cash_Flow(i) = -Prezzo_TelQuel * Coeff_Indicizzazione_BTPi

' la data di acquisto |fffd| nell'ultimo periodo cedolare
If Data_Prox_Cedola = Data_Scadenza Then
    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = DateValue(Data_Scadenza)
    Scad(i) = DateValue(Data_Scadenza)
    Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione)))
Else


    i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Prox_Cedola
    Scad(i) = Data_Prox_Cedola
    Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione))
  End If
Data_Ced_Corr = Data_Prox_Cedola
       

Do
 Select Case Num_Cedole_Anno
 Case 1
    If Month(Data_Ced_Corr) = 2 And Day(Data_Ced_Corr) = 29 Then
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    Else
    Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) & "/" & (Year(Data_Ced_Corr) + 1))
    End If
    
Case 2
    If Month(Data_Ced_Corr) + 6 > 12 Then
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6 - 12) = 4 Or (Month(Data_Ced_Corr) + 6 - 12) = 6 Or (Month(Data_Ced_Corr) + 6 - 12) = 9 Or (Month(Data_Ced_Corr) + 6 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 6 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 6) = 4 Or (Month(Data_Ced_Corr) + 6) = 6 Or (Month(Data_Ced_Corr) + 6) = 9 Or (Month(Data_Ced_Corr) + 6) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 6 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 6 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
        
  Case 4
      If Month(Data_Ced_Corr) + 3 > 12 Then
            If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3 - 12) = 4 Or (Month(Data_Ced_Corr) + 3 - 12) = 6 Or (Month(Data_Ced_Corr) + 3 - 12) = 9 Or (Month(Data_Ced_Corr) + 3 - 12) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        
        ElseIf Month(Data_Ced_Corr) + 3 - 12 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 - 12 & "/" & (Year(Data_Ced_Corr) + 1))
        End If
    
    Else
    
        If Day(Data_Ced_Corr) = 31 And ((Month(Data_Ced_Corr) + 3) = 4 Or (Month(Data_Ced_Corr) + 3) = 6 Or (Month(Data_Ced_Corr) + 3) = 9 Or (Month(Data_Ced_Corr) + 3) = 11) Then
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) - 1 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        
        ElseIf Month(Data_Ced_Corr) + 3 = 2 And (Day(Data_Ced_Corr) = 31 Or Day(Data_Ced_Corr) = 30 Or Day(Data_Ced_Corr) = 29) Then
        
            Data_Ced_Corr = DateValue(28 & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
            
            Else
            Data_Ced_Corr = DateValue(Day(Data_Ced_Corr) & "/" & Month(Data_Ced_Corr) + 3 & "/" & (Year(Data_Ced_Corr)))
        End If
    End If
  
 End Select
     i = i + 1
    ReDim Preserve Scadenziario(1 To i)
    ReDim Preserve Scad(1 To i)
    
    ReDim Preserve Cash_Flow(1 To i)
    Scadenziario(i) = Data_Ced_Corr
    Scad(i) = Data_Ced_Corr
    If Data_Ced_Corr = Data_Scadenza Or i = Num_cedole + 1 Then
        Cash_Flow(i) = (((Rimborso - (Rimborso - Emissione) * Tassazione) + (Cedola_in_Corso) * (1 - Tassazione)))
    Else
        Cash_Flow(i) = (Cedola_in_Corso * (1 - Tassazione))
    End If
    
   
Loop Until Data_Ced_Corr >= Data_Scadenza

End If
End If
'*************************************

ReDim New_Cash_Flow(1 To UBound(Cash_Flow))

For i = LBound(Cash_Flow) To UBound(Cash_Flow)
New_Cash_Flow(i) = Cash_Flow(UBound(Cash_Flow) + 1 - i) / (1 + Rendimento_BTP) ^ (UBound(Cash_Flow) - i) * (-1)

Next i

'ReDim New_Scadenziario(1 To UBound(Scadenziario))

'For i = LBound(New_Scadenziario) To UBound(New _Scadenziario)
'New_Scadenziario(i) = Scadenziario(UBound(New_Scadenziario) + 1 - i)

'Next i

Inflazione_Break_Even = (Application.Xirr(New_Cash_Flow, Scadenziario) + 1) ^ 2 - 1



End Function



Sub correggidata()
For Each cell In Selection
If cell.NumberFormat = "[$-410]d-mmm-yy;@" Then
cell.Value = cell.Value - 1462
End If
Next cell
End Sub

Sub AggiornaTassi()
    Dim objIE As Object, objElement As Object, objSubmit As Object, i As Long
    Dim Dati() As Variant
Workbooks("Update Investimenti.xlsm").Sheets("Storico_Tassi").Activate
    Set objIE = CreateObject("InternetExplorer.Application")

    With objIE


        
       .navigate "https://www.mutuionline.it/guide-mutui/osservatorio-tassi-mutui.asp"
    

    
        .Visible = False

        Do While .Busy Or .readyState <> 4: DoEvents: Loop
        
    
               Set objElement = .document.getElementsByTagName("input")

               
               For k = 0 To objElement.Length - 1
                If objElement(k).Type = "checkbox" And objElement(k).Status = "False" Then
               ' objElement(k).Status = "true"
                objElement(k).Click         '===> Selezione via flag di tutti i tassi disponibili alla selezione
                 Do While .Busy Or .readyState <> 4: DoEvents: Loop
                 Set objElement = .document.getElementsByTagName("input")
                                
                End If
            '   If objElement(k).Type = "checkbox" Then
             '  Dati(k + 1, 1) = objElement(k).Name
            '   End If
               Next k
               
               
             Set objElement = .document.getElementsByTagName("script") 'si estrae il contenuto di tuttta la pagina web
             settore = 0
             For k = 0 To objElement.Length - 1
            If objElement(k).innerText Like "*data.addRows*" Then  'tra i vari "blocchi" script si trova quello che contiene i dati del grafico "data.addRows"
            settore = k
            
            End If
    
             Next k
           Set objElement = .document.getElementsByTagName("script")
            flag = 0
             stringa = objElement(settore).innerText
             inizio = InStr(stringa, "data.addColumn")
             fine = InStr(stringa, "])")
             
         n = 1
         c = 0
        ReDim Preserve Dati(1 To 18, 1 To n)
Do
             elemento = Mid(stringa, inizio, InStr(inizio + 1, stringa, ";") - inizio)
             If Len(elemento) < 100 Then
                     inizE = InStr(elemento, ",")
                     fineE = InStr(inizE + 3, elemento, "'")
                     elementoE = Mid(elemento, inizE + 3, fineE - (inizE + 3)) 'Si estraggono le intestazioni delle colonne
                     c = c + 1
                Dati(c, 1) = elementoE
                     
                Else
                     
                     inizE = InStr(elemento, "[new Date(")
                     fineE = InStr(inizE + 10, elemento, "]")
                     elementoE = Mid(elemento, inizE + 10, fineE - (inizE + 10))
                     Data = Mid(elementoE, 1, InStr(elementoE, ")") - 1) 'si estrae la data di riferimento
                                          
                     c = 1
                     n = n + 1
                     ReDim Preserve Dati(1 To 18, 1 To n)
                     gg = Right(Data, Len(Data) - InStr(6, Data, ","))
                    
                     aa = Left(Data, 4)
                     mm = Mid(Data, InStr(1, Data, ",") + 1, InStr(6, Data, ",") - (InStr(1, Data, ",") + 1))
                     If mm = 0 Then
                     mm = 1
                     Else
                     mm = mm + 1
                     End If
                     Dati(c, n) = CDate(CDate(gg & "/" & mm & "/" & aa)) 'si aggiustala data spostandola avanti di un mese essendo memorizzata con i mesi da 0 a 11

                   '  Dati(c, n) = DateAdd("m", 1, Data) 'si aggiustala data spostandola avanti di un mese essendo memorizzata con i mesi da 0 a 11
                     
                '     Debug.Print Data
                     elencoTassi = Len(elementoE)
                     inizE = InStr(elementoE, "),") + 2
                     Do
                        If (InStr(inizE + 1, elementoE, ",") = 0) Then
                           tasso = Replace(Mid(elementoE, inizE + 2), ".", ",") 'si estrae l'ultimotasso relativo ad una specifica data sostituendo il punto con la virgola
                            c = c + 1
                           Dati(c, n) = tasso * 1
                         '  Debug.Print tasso
                           inizE = elencoTassi
                        Else
                           fineE = InStr(inizE + 1, elementoE, ",")
                           tasso = Replace(Mid(elementoE, inizE + 1, fineE - (inizE + 1)), ".", ",") 'si estraggono i tassi relativi ad unaspecifica data meno l'ultimo sostituendo il punto con la virgola
                           c = c + 1
                           Dati(c, n) = tasso * 1
                        '   Debug.Print tasso
                           inizE = InStr(inizE + 1, elementoE, ",")
                        End If
                        
                    Loop While inizE < elencoTassi
             End If
             
            ' Debug.Print elementoE
             If flag = 0 Then
               inizio = InStr(inizio + 1, stringa, "data.addColumn") + 1
             End If
             
             If inizio <= 1 Then
                 flag = 1
                 inizio = InStr(inizio + 1, stringa, "data.addRows") + 1
             ElseIf flag = 1 Then
                 inizio = InStr(inizio + 1, stringa, "[new Date(") + 1
             End If
Loop While inizio <= fine And inizio > 1

.Quit
Set objIE = Nothing
    End With
    
    speed
    With Workbooks("Update Investimenti.xlsm").Sheets("Storico_Tassi")
    dLastRow = .Cells.Find("*", , , , xlByRows, xlPrevious).Row
    For i = 1 To UBound(Dati)
    For k = 1 To UBound(Dati, 2)
    If k > 1 And i = 1 Then
        .Range(.Cells(k + dLastRow, i), .Cells(k + dLastRow, i)).NumberFormat = "dd-mmm-yyyy"
        .Range(.Cells(k + dLastRow, i), .Cells(k + dLastRow, i)).Value = (CDate(Dati(i, k) * 1))
    Else
     .Range(.Cells(k + dLastRow, i), .Cells(k + dLastRow, i)).Value = Dati(i, k)
    End If
    
    Next k
    Next i

    
 '   .Range("A" & dLastRow + 1 & ":R" & dLastRow + UBound(Dati, 2)) = Application.WorksheetFunction.Transpose(Dati)
       dLastRow = .Cells.Find("*", , , , xlByRows, xlPrevious).Row
 
 .Range("A2:R" & dLastRow).Sort key1:=Range("A2:A" & dLastRow), _
   order1:=xlAscending, Header:=xlNo
 .Range("A1:R" & dLastRow).RemoveDuplicates Columns:=Array(1), Header:=xlNo
    
    End With
    
    unspeed
End Sub

Sub Aggiotna_FOI()

Dim html1 As MSHTML.HTMLDocument, Prezzo_Uff As String, r As Long, c As Long, Agg_FOI() As Variant, RigaInizio As Long

Workbooks("Update Investimenti.xlsm").Sheets("Storico_Tassi_Inf").Activate
With Workbooks("Update Investimenti.xlsm").Sheets("Storico_Tassi_Inf")

'Dim objIE As MSXML2.xmlHTTP
Dim objIE As Object

Set html1 = New MSHTML.HTMLDocument

     '  Set objIE = New MSXML2.xmlHTTP
       Set objIE = CreateObject("MSXML2.XMLHTTP")
       
    'quali sono i mesi d aggiornare
    RigaInizio = .Range("D7:D1000", "D7:D1000").Cells.SpecialCells(xlCellTypeBlanks).Row 'prima cella vuota in un range
    ck = 0
    MeseInizio = Month(.Range(.Cells(RigaInizio, 2), .Cells(RigaInizio, 2)))
    AnnoInizio = Year(.Range(.Cells(RigaInizio, 2), .Cells(RigaInizio, 2)))
   MeseFime = Month(Date)
   AnnoFine = Year(Date)
   Do
           If ck = 1 Then
                If MeseFime = 1 Then
                    MeseFime = 12
                Else
                    MeseFime = MeseFime - 1
                End If
           End If
           
           ' objIE.Open "GET", "https://www.rivaluta.it/inflazione.asp?t=FOI&yi=2018&yf=2018&mi=1&mf=6&tsv=m", False
            objIE.Open "GET", "https://www.rivaluta.it/inflazione.asp?t=FOI&yi=" & AnnoInizio & "&yf=" & AnnoFine & "&mi=" & MeseInizio & "&mf=" & MeseFime & "&tsv=m", False
        
                objIE.send
        
               html1.body.innerHTML = objIE.responseText
        Set Dato = html1.getElementsByClassName("table table-striped")
        ck = 1
Loop Until (Dato.Length <> 0)

Set Set_valori = Dato.Item(0).getElementsByTagName("TR")

ReDim Preserve Agg_FOI(1 To Set_valori.Length - 2)
c = 0
For Each valore In Set_valori
If valore.RowIndex > 0 And valore.RowIndex < Set_valori.Length - 1 Then
c = c + 1
Agg_FOI(c) = Set_valori.Item(valore.RowIndex).getElementsByTagName("TD").Item(4).innerText
End If

Next valore
r = 1
For c = 1 To UBound(Agg_FOI)
    Do Until WorksheetFunction.IsNumber(.Range("B" & RigaInizio + r - 1))
      r = r + 1
    Loop
.Range("D" & RigaInizio + r - 1).Value = Agg_FOI(c)
      r = r + 1
Next c

End With
End Sub


' ZVI:2013-09-10 Get IE object of already open window by its title
' Arguments:
'   Title     -  title of the searchied IE window
'   [IsLike]  -  False/True = exact/partial searching, default is False
'   [IsFocus] -  False/True = don't_activate/activate IE window, default is False

Function NGetIeByTitle(Title, Optional IsLike As Boolean, Optional IsFocus As Boolean) As Object
  Dim w As Object
  For Each w In CreateObject("Shell.Application").Windows
    With w
     If .Name = "Internet Explorer" Then
        If IsLike Then
          If InStr(1, .LocationName & ".htm", Title, vbTextCompare) > 0 Then   ' ZVI:2013-09-10 fixed
            ' Partial title of window is found - activate IE window
            If IsFocus Then
              w.Visible = False
              w.Visible = True
            End If
            Set NGetIeByTitle = w
            Exit For
          End If
        Else
          If StrComp(.LocationName & " - " & .Name, Title, 1) = 0 Then  ' ZVI:2013-09-10 fixed
            ' Title of window is found - activate IE window
            If IsFocus Then
              w.Visible = False
              w.Visible = True
            End If
            Set NGetIeByTitle = w
            Exit For
          End If
        End If
      End If
    End With
  Next
  Set w = Nothing
End Function


Sub Aggiotna_HICP_old()

Dim objIE As Object, objIE_1 As Object, objElement As Object

myFile = "D:\run\prova\Eurostat - Data Explorer.htm"

Open myFile For Input As #1
Do Until EOF(1)
    Line Input #1, textline
    Text = Text & textline
Loop

Close #1

 Set objElement = New MSHTML.HTMLDocument

  objElement.body.innerHTML = Text
 
 
    Set objIE = CreateObject("Inter netExplorer.Application")

    With objIE
            .Visible = False
     .navigate "http://appsso.eurostat.ec.europa.eu/nui/show.do?query=BOOKMARK_DS-055106_QID_-774C2625_UID_-3F171EB0&layout=TIME,C,X,0;GEO,L,Y,0;UNIT,L,Z,0;COICOP,L,Z,1;INDICATORS,C,Z,2;&zSelection=DS-055106INDICATORS,OBS_FLAG;DS-055106COICOP,CP00;DS-055106UNIT,I15;&rankName1=UNIT_1_2_-1_2&rankName2=INDICATORS_1_2_-1_2&rankName3=COICOP_1_2_-1_2&rankName4=TIME_1_0_0_0&rankName5=GEO_1_2_0_1&sortC=ASC_-1_FIRST&rStp=&cStp=&rDCh=&cDCh=&rDM=true&cDM=true&footnes=false&empty=false&wai=false&time_mode=ROLLING&time_most_recent=false&lang=EN&cfo=%23%23%23%2C%23%23%23.%23%23%23"

        Nome = .Name
    End With

Set objIE_1 = NGetIeByTitle(Nome, True, True)
With objIE_1
        Do While .Busy Or .readyState <> 4: DoEvents: Loop
        
      Set objElement = .document.innerText
      
      End With
      
With Workbooks("Update Investimenti.xlsm").Sheets("Storico_Tassi_Inf")


    'quali sono i mesi d aggiornare
    RigaInizio = .Range("D7:D1000", "D7:D1000").Cells.SpecialCells(xlCellTypeBlanks).Row 'prima cella vuota in un range


            objIE.Open "GET", "http://appsso.eurostat.ec.europa.eu/nui/show.do?query=BOOKMARK_DS-055106_QID_-774C2625_UID_-3F171EB0&layout=TIME,C,X,0;GEO,L,Y,0;UNIT,L,Z,0;COICOP,L,Z,1;INDICATORS,C,Z,2;&zSelection=DS-055106INDICATORS,OBS_FLAG;DS-055106COICOP,CP00;DS-055106UNIT,I15;&rankName1=UNIT_1_2_-1_2&rankName2=INDICATORS_1_2_-1_2&rankName3=COICOP_1_2_-1_2&rankName4=TIME_1_0_0_0&rankName5=GEO_1_2_0_1&sortC=ASC_-1_FIRST&rStp=&cStp=&rDCh=&cDCh=&rDM=true&cDM=true&footnes=false&empty=false&wai=false&time_mode=ROLLING&time_most_recent=false&lang=EN&cfo=%23%23%23%2C%23%23%23.%23%23%23", False
        
                objIE.send
        
               html1.body.innerHTML = objIE.responseText
               
               
        Set Dato = html1.getElementsByClassName("table table-striped")


Set Set_valori = Dato.Item(0).getElementsByTagName("TR")

End With
End Sub



' ZVI:2011-05-30 http://www.mrexcel.com/forum/showthread.php?t=553580
' Reference required: Tools - References - Microsoft Internet Controls
Sub GetIE()
  
  Dim shellWins As ShellWindows
  Dim ie As InternetExplorer

  Set shellWins = New ShellWindows

  If shellWins.Count > 0 Then
    ' Get IE
    Set ie = shellWins.Item(0)
  Else
    ' Create IE
    Set ie = New InternetExplorer
    ie.Visible = True
  End If

  ie.navigate "http://appsso.eurostat.ec.europa.eu/nui/show.do?query=BOOKMARK_DS-055106_QID_-774C2625_UID_-3F171EB0&layout=TIME,C,X,0;GEO,L,Y,0;UNIT,L,Z,0;COICOP,L,Z,1;INDICATORS,C,Z,2;&zSelection=DS-055106INDICATORS,OBS_FLAG;DS-055106COICOP,CP00;DS-055106UNIT,I15;&rankName1=UNIT_1_2_-1_2&rankName2=INDICATORS_1_2_-1_2&rankName3=COICOP_1_2_-1_2&rankName4=TIME_1_0_0_0&rankName5=GEO_1_2_0_1&sortC=ASC_-1_FIRST&rStp=&cStp=&rDCh=&cDCh=&rDM=true&cDM=true&footnes=false&empty=false&wai=false&time_mode=ROLLING&time_most_recent=false&lang=EN&cfo=%23%23%23%2C%23%23%23.%23%23%23"


  Set ie = Nothing
  Set shellWins = Nothing

End Sub

Sub Ex()

Set ie = CreateObject("internetexplorer.application") 'New InternetExplorer
ie.navigate "http://appsso.eurostat.ec.europa.eu/nui/show.do?query=BOOKMARK_DS-055106_QID_-774C2625_UID_-3F171EB0&layout=TIME,C,X,0;GEO,L,Y,0;UNIT,L,Z,0;COICOP,L,Z,1;INDICATORS,C,Z,2;&zSelection=DS-055106INDICATORS,OBS_FLAG;DS-055106COICOP,CP00;DS-055106UNIT,I15;&rankName1=UNIT_1_2_-1_2&rankName2=INDICATORS_1_2_-1_2&rankName3=COICOP_1_2_-1_2&rankName4=TIME_1_0_0_0&rankName5=GEO_1_2_0_1&sortC=ASC_-1_FIRST&rStp=&cStp=&rDCh=&cDCh=&rDM=true&cDM=true&footnes=false&empty=false&wai=false&time_mode=ROLLING&time_most_recent=false&lang=EN&cfo=%23%23%23%2C%23%23%23.%23%23%23"
Application.SendKeys "^{S}"

End Sub


Function SaveWebFile(ByVal vWebFile As String, ByVal vLocalFile As String) As Boolean

'funzione per salvare pagina web in file locale

Dim oXMLHTTP As Object, vFF As Long, oResp As String
Set oXMLHTTP = CreateObject("Microsoft.XMLHTTP")
oXMLHTTP.Open "GET", vWebFile, False
oXMLHTTP.send
oResp = oXMLHTTP.responseText
vFF = FreeFile
If Dir(vLocalFile) <> "" Then Kill vLocalFile
Open vLocalFile For Output As #vFF
Print #vFF, oResp
Close #vFF
Set oXMLHTTP = Nothing
End Function

Sub Aggiorna_HICP()

'Si salva in locale la pagina web e poi la si apre per analizzarne il contenuto (non si riesce a leggere direttamente la pagina)
Dim objIE As Object, html1 As MSHTML.HTMLDocument, objElement As Object, Indirizzo As String, Nome As String, RigaInizio As Long, RigaFine As Long
Dim Rng As Range
Dim Dati() As Variant, Periodo As Byte

With Workbooks("Update Investimenti.xlsm").Sheets("Storico_Tassi_Inf")
    'quali sono i mesi d aggiornare
    RigaInizio = .Range("L7:L1000", "L7:L1000").Cells.SpecialCells(xlCellTypeBlanks).Row 'prima cella vuota in un range
    RigaFine = .Cells(Rows.Count, "K").End(xlUp).Row 'ultima cella non vuota in un range

RigaInizio = 290
 Set Rng = .Range(Cells(RigaInizio, 11), Cells(RigaFine, 11))
Indirizzo = "http://appsso.eurostat.ec.europa.eu/nui/show.do?query=BOOKMARK_DS-055106_QID_-774C2625_UID_-3F171EB0&layout=TIME,C,X,0;GEO,L,Y,0;UNIT,L,Z,0;COICOP,L,Z,1;INDICATORS,C,Z,2;&zSelection=DS-055106INDICATORS,OBS_FLAG;DS-055106COICOP,CP00;DS-055106UNIT,I15;&rankName1=UNIT_1_2_-1_2&rankName2=INDICATORS_1_2_-1_2&rankName3=COICOP_1_2_-1_2&rankName4=TIME_1_0_0_0&rankName5=GEO_1_2_0_1&sortC=ASC_-1_FIRST&rStp=&cStp=&rDCh=&cDCh=&rDM=true&cDM=true&footnes=false&empty=false&wai=true&time_mode=ROLLING&time_most_recent=true&lang=EN"
Nome = "C:\Users\Gio\Documents\Prova\Eurostat.htm"

If Not (SaveWebFile(Indirizzo, Nome)) Then  'si salva la pagina html

' *******  gh = Application.WorksheetFunction.Index(Matrice, 1, 0)  ===>>>     seleziona una riga o colonna della matrice Matrice


Set html1 = New MSHTML.HTMLDocument
       Set objIE = CreateObject("MSXML2.XMLHTTP")
    
   
    objIE.Open "GET", "C:\Users\Gio\Documents\Prova\Eurostat.htm", False  ' si carica la pagina html salvata in locale su file

        objIE.send

       html1.body.innerHTML = objIE.responseText
       
With html1
        Set objElement = .getElementsByClassName("padding border_bottom center")
        Periodo = objElement.Length
        ReDim Preserve Dati(1 To 3, 1 To Periodo + 1)
        k = 1
        Dati(1, k) = "Date"
        For Each valore In objElement
        k = k + 1
     '   If k = 1 Then
        
      '  Dati(1, k) = "Date"
     '  Else
        Dati(1, k) = Trim(CDate("01/" & Right(valore.innerText, 2) & "/" & Left(valore.innerText, 4)))
     '    End If
        Next valore
        
        Set objElement = .getElementsByClassName("even").Item(0).getElementsByTagName("td")
        k = 0
        For Each valore In objElement
        k = k + 1
        If k = 1 Then
        Dati(2, k) = valore.innerText
        Else
            If InStr(1, valore.innerText, "(", vbTextCompare) > 0 Then 'se nell'indice compaiono lettere ex "100.19(b)"
            Dati(2, k) = Replace(Mid(valore.innerText, 1, InStr(1, valore.innerText, "(", vbTextCompare) - 1), ".", ",") * 1
            Else
            Dati(2, k) = Replace(valore.innerText, ".", ",") * 1
            End If
        End If
        Next valore
        
        
        Set objElement = .getElementsByClassName("odd").Item(0).getElementsByTagName("td")
        k = 0
        For Each valore In objElement
        k = k + 1
        If k = 1 Then
        Dati(3, k) = valore.innerText
        Else
            If InStr(1, valore.innerText, "(", vbTextCompare) > 0 Then 'se nell'indice compaiono lettere ex "100.19(b)"
            Dati(3, k) = Replace(Mid(valore.innerText, 1, InStr(1, valore.innerText, "(", vbTextCompare) - 1), ".", ",") * 1
            Else
            Dati(3, k) = Replace(valore.innerText, ".", ",") * 1
            End If
        End If
        Next valore
End With
End If

For c = 2 To UBound(Dati, 2)
If Not (Application.IsNumber(.Range("L" & RigaInizio - 1 + Application.Match(Dati(1, c), (Rng), 0)))) Then 'se nella colonna L c'e' un valore numerico NON
                                                                                                        'Aggiorno altrimenti si inseriscono i valori corrispondenti
 .Range("L" & RigaInizio - 1 + Application.Match(Dati(1, c), (Rng), 0)) = Dati(2, c)                                                                                                  'della matrice Dati.
 .Range("M" & RigaInizio - 1 + Application.Match(Dati(1, c), (Rng), 0)) = Dati(3, c)
End If

Next c

End With
End Sub



Private Sub CommandButton2_Click()

      Dim ie As Object

      With CreateObject("Shell.Application").Windows

        If .Count > 0 Then
          ' Get IE
          Set ie = .Item(.Count - 1)
        Else
          ' Create IE
         ' Set ie = New InternetExplorerMedium
          Set ie = CreateObject("InternetExplorer.Application")
          ie.Visible = True
        End If

      End With

      ie.document.getElementById("lst-ib").Value = "cheap plastic doors"

      Set ie = Nothing

End Sub


Sub Aggiorna_HICP_Test()
Dim oXMLHTTP As Object, vWebFile As String, testo As String
Dim html1 As MSHTML.HTMLDocument

Set oXMLHTTP = CreateObject("Microsoft.XMLHTTP")

vWebFile = "http://appsso.eurostat.ec.europa.eu/nui/show.do?query=BOOKMARK_DS-055106_QID_-774C2625_UID_-3F171EB0&layout=TIME,C,X,0;GEO,L,Y,0;UNIT,L,Z,0;COICOP,L,Z,1;INDICATORS,C,Z,2;&zSelection=DS-055106INDICATORS,OBS_FLAG;DS-055106COICOP,CP00;DS-055106UNIT,I15;&rankName1=UNIT_1_2_-1_2&rankName2=INDICATORS_1_2_-1_2&rankName3=COICOP_1_2_-1_2&rankName4=TIME_1_0_0_0&rankName5=GEO_1_2_0_1&sortC=ASC_-1_FIRST&rStp=&cStp=&rDCh=&cDCh=&rDM=true&cDM=true&footnes=false&empty=false&wai=false&time_mode=ROLLING&time_most_recent=false&lang=EN&cfo=%23%23%23%2C%23%23%23.%23%23%23"

oXMLHTTP.Open "GET", vWebFile, False
oXMLHTTP.send
testo = oXMLHTTP.responseText
With html1
        Set objElement = .getElementsByClassName("padding border_bottom center")
        
End With
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
Cancel = True
If Target.Address = "$M$5" Then Quotaz_01 'Macro1
If Target.Address = "$M$6" Then Quotaz_02
If Target.Address = "$M$8" Then Quotaz_25
If Target.Address = "$M$9" Then Quotaz_39
If Target.Address = "$M$10" Then Quotaz_12
If Target.Address = "$M$11" Then Quotaz_13
If Target.Address = "$M$12" Then Quotaz_22
If Target.Address = "$M$13" Then Quotaz_9
If Target.Address = "$M$14" Then Quotaz_24
If Target.Address = "$M$15" Then Quotaz_14
If Target.Address = "$M$16" Then Quotaz_41
If Target.Address = "$M$17" Then Quotaz_17
If Target.Address = "$M$18" Then Quotaz_23
If Target.Address = "$M$19" Then Quotaz_7
If Target.Address = "$M$20" Then Quotaz_37
If Target.Address = "$M$21" Then Quotaz_19

If Target.Address = "$M$23" Then Quotaz_26
If Target.Address = "$M$24" Then Quotaz_27
If Target.Address = "$M$25" Then Quotaz_28
If Target.Address = "$M$26" Then Quotaz_29
If Target.Address = "$M$27" Then Quotaz_30
If Target.Address = "$M$28" Then Quotaz_31
If Target.Address = "$M$29" Then Quotaz_32
If Target.Address = "$M$30" Then Quotaz_33
If Target.Address = "$M$31" Then Quotaz_34
If Target.Address = "$M$32" Then Quotaz_35


If Target.Address = "$C$5" Then apri_applicativo
End Sub


Sub BrowsePDFDocument() ' opens a PDF document in the default web browser
Dim strDocument As String
    strDocument = Application.GetOpenFilename("PDF Files,*.pdf,All Files,*.*", 1, "Open File", , False) ' get pdf document name
    If Len(strDocument) < 6 Then Exit Sub
    ActiveWorkbook.FollowHyperlink strDocument
End Sub


Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' 'b"wbr,
' +r2)

INQUEST-PP=macro
