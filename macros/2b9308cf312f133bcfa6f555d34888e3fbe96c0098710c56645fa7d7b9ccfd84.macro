Attribute VB_Name = "Fun_DT"
'====///NGUON DU LIEU: THAM KHAO DIEN DAN GIAIPHAPEXCEL.COM
Function KiemtraSheet(NameSh As String) As Boolean
  On Error Resume Next
  KiemtraSheet = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function Kiemtra_WbOpen(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then Kiemtra_WbOpen = True Else Kiemtra_WbOpen = False
End Function
Sub SetHederTitle()
Dim i As Long
Dim Title As String
Title = UniConvert("Du75 toa1n BNSC", "VNI")
For i = 1 To Sheets.Count
    With Sheets(i).PageSetup
        .LeftHeader = _
        "&""Times New Roman,Bold Italic""&9" & Title & " - |fffd|T: 0966.966.455"
    End With
Next
End Sub
Sub Add_RightClickSheet(Sh As Worksheet)
    With Sheets("Setting")
        Dim srng As Range
        Set srng = .Range("G:G").Find(Sh.Name, , xlValues, xlWhole, xlByRows, xlNext, False, False)
        If Not srng Is Nothing Then
            Sheets("Config").Range("O18").Value = .Range("F" & srng.Row).Value
        Else
            Sheets("Config").Range("O18").Value = ""
        End If
    End With
End Sub
Sub ddd()
Dim i As Long, srng As Range
For i = 1 To Sheets.Count
    With Sheets(i)
        Set srng = .Cells.Find("DUTOAN_UNI", , xlValues, xlPart, xlByRows, xlNext, False, False)
        If Not srng Is Nothing Then
            MsgBox Sheets(i).Name
            Sheets(i).Select
            Exit For
        End If
    End With
Next
End Sub





Attribute VB_Name = "Mod_2015"
'Function CPC(CPTructiep As Double) As Double
'On Error Resume Next
'Dim shConfig As Worksheet
'Set shConfig = Sheets(Sheets("Setting").Range("G21").Value)
'Dim DiachiNoiSuy As String
'DiachiNoiSuy = shConfig.Range("C158").Value
'If DiachiNoiSuy = "" Then
'    CPC = 0
'Else
'    CPC = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_CPC").RefersToRange.Value, CPTructiep / 10 ^ 9), 3)
'End If
'End Function
'Function HMC_KXD(DiachiNoiSuy As String) As Double
'On Error Resume Next
'Dim shConfig As Worksheet
'Set shConfig = Sheets(Sheets("Setting").Range("G21").Value)
'If DiachiNoiSuy = "" Then
'    HMC_KXD = 0
'Else
'    HMC_KXD = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_HMC_KXD").RefersToRange.Value, 1), 3)
'End If
'End Function
Attribute VB_Name = "Mod_Main"
Option Private Module
Public Const NameDT = "DTBN.xla"
Sub Reset_RightClick()
  Application.CommandBars("Cell").Reset
End Sub
Sub Add_MacroDescription()
    Dim i As Long
    With ThisWorkbook.Sheets("Setting")
        For i = 2 To .Range("B65536").End(xlUp).Row
            If .Range("B" & i) <> "" Then
                Application.MacroOptions .Range("B" & i).Value, .Range("C" & i).Value, Category:="Dutoan"
            End If
        Next
    End With
End Sub
Sub RenameSh()
    
    On Error Resume Next
    With Sheets("Setting")
        .Range("G2").Value = Sh_Dutoan.Name
        .Range("G3").Value = Sh_PTVT.Name
        .Range("G4").Value = Sh_GTVT.Name
        .Range("G5").Value = Sh_DGCT.Name
        .Range("G6").Value = Sh_Duthau.Name
        .Range("G7").Value = Sh_THKP.Name
        .Range("G8").Value = Sh_CPVC.Name
        .Range("G9").Value = Sh_CVC.Name
        .Range("G10").Value = Sh_LCNXD.Name
        .Range("G11").Value = Sh_PTCM.Name
        .Range("G12").Value = Sh_LCNLM.Name
        .Range("G13").Value = Sh_CTDGM.Name
        .Range("G14").Value = Sh_BGM.Name
        .Range("G15").Value = Sh_BuNL_TL.Name
        .Range("G16").Value = Sh_DVCM.Name
        .Range("G17").Value = Sh_THCPXD.Name
        .Range("G18").Value = Sh_THCPTB.Name
        .Range("G19").Value = Sh_TDT.Name
        .Range("G20").Value = Sh_Bia.Name
        .Range("G21").Value = Sh_ConfigBN.Name
    End With
End Sub
Function GetNameSh(Sh As Worksheet) As String
If DemKytu(Sh.Name, " ") > 0 Then
    GetNameSh = "'" & Sh.Name & "'"
Else
    GetNameSh = Sh.Name
End If
End Function

Function DemKytu(Chuoi As String, Kytu As String) As Long
    DemKytu = Len(Chuoi) - Len(Replace(Chuoi, Kytu, ""))
End Function
Sub ShowALL()
    Dim i As Long
    For i = 1 To Worksheets.Count
        Sheets(i).Visible = xlSheetVisible
    Next
End Sub

Attribute VB_Name = "Mod_Public"
Function DiachiVung(Vung As Range) As String
Attribute DiachiVung.VB_Description = "H|fffd|m l?y d?a ch? c?a v|fffd|ng n?i suy"
Attribute DiachiVung.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
    If Not Vung Is Nothing Then
        DiachiVung = Vung.Address
    End If
End Function

Function QLDA(DiachiNoiSuy As String, CPXD_Truocthue As Double, CPTB_Truocthue As Double) As Double
Attribute QLDA.VB_Description = "H|fffd|m n?i suy chuy ph|fffd| qu?n l|fffd| d? |fffd|n"
Attribute QLDA.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim shConfig As Worksheet
Set shConfig = Sheets(Sheets("Setting").Range("G21").Value)
If DiachiNoiSuy = "" Then
    QLDA = 0
Else
   QLDA = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
   
End If
End Function
Function LapDADT(DiachiNoiSuy As String, CPXD_Truocthue, CPTB_Truocthue, Loai As Long) As Double
Attribute LapDADT.VB_Description = "H&#224;m n&#212;i suy chi ph|fffd| l?p d? |fffd|n d?u tu"
Attribute LapDADT.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim shConfig As Worksheet
Set shConfig = Sheets(Sheets("Setting").Range("G21").Value)
If DiachiNoiSuy = "" Then
    LapDADT = 0
Else
    Select Case ActiveWorkbook.Names("i_VB").RefersToRange.Value
        Case 1
            If Loai = 0 Then
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 15 Then
                    LapDADT = 0
                Else
                    LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
                End If
            Else
                LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case 2
            If Loai = 0 Then
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 7 Then
                    LapDADT = 0
                Else
                    LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
                End If
            Else
                LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case Else
            LapDADT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
    End Select
End If
End Function
Function BCKTKT(DiachiNoiSuy As String, CPXD_Truocthue, CPTB_Truocthue) As Double
Attribute BCKTKT.VB_Description = "H|fffd|m n?i suy chi ph|fffd| l?p b|fffd|o c|fffd|o kinh t? k? thu?t"
Attribute BCKTKT.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
If DiachiNoiSuy = "" Then
    BCKTKT = 0
Else
    Select Case ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
        Case 1
            If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 >= 15 Then
                BCKTKT = 0
            Else
                BCKTKT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case 2
            If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 >= 7 Then
                BCKTKT = 0
            Else
                BCKTKT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
            End If
        Case Else
            BCKTKT = Round(Noisuy(DiachiNoiSuy, ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
    End Select
End If
End Function

Function TK(DiachiNoiSuy As String, CPXD_Truocthue, Rieng As Long) As Double
Attribute TK.VB_Description = "H|fffd|m n?i suy chi ph|fffd| thi?t k?"
Attribute TK.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim CapCT As Long
CapCT = ActiveWorkbook.Names("i_CapCT").RefersToRange.Value - 1
If DiachiNoiSuy = "" Then
    TK = 0
Else
    Select Case ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
        Case 1
            If Rieng = 1 Then
                TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
            Else
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 15 Then
                    TK = 0
                Else
                    TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
                End If
            End If
        Case 2
            If Rieng = 1 Then
                TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
            Else
                If (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9 < 7 Then
                    TK = 0
                Else
                    TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
                End If
            End If
        Case Else
            TK = Round(Noisuy(DiachiNoiSuy, CPXD_Truocthue / 10 ^ 9, CapCT), 3)
    End Select
End If
End Function

'- Tham tra du toan
Function TTDT(DiachiNoiSuy As String, CPXD_Truocthue) As Double
Attribute TTDT.VB_Description = "H|fffd|m n?i suy chi ph|fffd| th?m tra d? to|fffd|n"
Attribute TTDT.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TTDT = 0
Else
   TTDT = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
'- Tham tra thiet ke
Function TTTK(DiachiNoiSuy As String, CPXD_Truocthue) As Double
Attribute TTTK.VB_Description = "H|fffd|m n?i suy chi ph|fffd| th?m tra thi?t k?"
Attribute TTTK.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TTTK = 0
Else
   TTTK = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
'- Tham tra thiet ke
Function TTHQKTDA(DiachiNoiSuy As String, CPXD_Truocthue, CPTB_Truocthue) As Double
Attribute TTHQKTDA.VB_Description = "H|fffd|m n?i suy chi ph|fffd| th?m tra t|fffd|nh hi?u qu? v|fffd| kh? thi c?a d? |fffd|n d?u tu"
Attribute TTHQKTDA.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TTHQKTDA = 0
Else
   TTHQKTDA = Round(Noisuy(DiachiNoiSuy, LoaiCT, (CPXD_Truocthue + CPTB_Truocthue) / 10 ^ 9), 3)
End If
End Function
Function Thau_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    Thau_XD = 0
Else
   Thau_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function MT_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
Attribute MT_XD.VB_Description = "H|fffd|m n?i suy chi ph|fffd| l?p h? so m?i th?u ph?n x|fffd|y d?ng"
Attribute MT_XD.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    MT_XD = 0
Else
   MT_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function DGHST_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
Attribute DGHST_XD.VB_Description = "H|fffd|m n?i suy chi ph|fffd| d|fffd|nh gi|fffd| h? so d? th?u ph?n x|fffd|y d?ng"
Attribute DGHST_XD.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    DGHST_XD = 0
Else
   DGHST_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function THAU_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    THAU_TB = 0
Else
   THAU_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function MT_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
Attribute MT_TB.VB_Description = "H|fffd|m n?i suy chi ph|fffd| l?p h? so m?i th?u ph?n thi?t b?"
Attribute MT_TB.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    MT_TB = 0
Else
   MT_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function DGHST_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
Attribute DGHST_TB.VB_Description = "H|fffd|m n?i suy chi ph|fffd| d|fffd|nh gi|fffd| h? so d? th?u ph?n thi?t b?"
Attribute DGHST_TB.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    DGHST_TB = 0
Else
   DGHST_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function GS_XD(DiachiNoiSuy As String, CPXD_Truocthue) As Double
Attribute GS_XD.VB_Description = "H|fffd|m n?i suy chi ph|fffd| gi|fffd|m s|fffd|t ph?n x|fffd|y d?ng"
Attribute GS_XD.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    GS_XD = 0
Else
   GS_XD = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function GS_TB(DiachiNoiSuy As String, CPTB_Truocthue) As Double
Attribute GS_TB.VB_Description = "H|fffd|m n?i suy chi ph|fffd| gi|fffd|m s|fffd|t ph?n l?p d?t thi?t b? x|fffd|y d?ng"
Attribute GS_TB.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    GS_TB = 0
Else
   GS_TB = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPTB_Truocthue / 10 ^ 9), 3)
End If
End Function
Function TDDADT(DiachiNoiSuy As String, TMDT) As Double
On Error Resume Next
If DiachiNoiSuy = "" Then
    TDDADT = 0
Else
   TDDADT = Round(Noisuy(DiachiNoiSuy, 1, TMDT / 10 ^ 9), 3)
End If
End Function
Function KIEMTOAN(DiachiNoiSuy As String, TMDT) As Double
Attribute KIEMTOAN.VB_Description = "H|fffd|m n?i suy chi ph|fffd| ki?m to|fffd|n"
Attribute KIEMTOAN.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
If DiachiNoiSuy = "" Then
    KIEMTOAN = 0
Else
   KIEMTOAN = Round(Noisuy(DiachiNoiSuy, 2, TMDT / 10 ^ 9), 3)
End If
End Function
Function QUYETTOAN(DiachiNoiSuy As String, TMDT) As Double
Attribute QUYETTOAN.VB_Description = "H|fffd|m n?i suy chi ph|fffd| quy?t to|fffd|n"
Attribute QUYETTOAN.VB_ProcData.VB_Invoke_Func = " \n18"
On Error Resume Next
If DiachiNoiSuy = "" Then
    QUYETTOAN = 0
Else
   QUYETTOAN = Round(Noisuy(DiachiNoiSuy, 1, TMDT / 10 ^ 9), 3)
End If
End Function
Function THAMTRATK_75(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    THAMTRATK_75 = 0
Else
   THAMTRATK_75 = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Function THAMTRADT_75(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_LoaiCT").RefersToRange.Value
If DiachiNoiSuy = "" Then
    THAMTRADT_75 = 0
Else
   THAMTRADT_75 = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function
Sub Change_TT75_1_Click()
    Sheets("Config").Range("C155").FormulaR1C1 = "= diachivung(OFFSET(R417C15:R422C24,0,0))"
    Sheets("Config").Range("C156").FormulaR1C1 = "= diachivung(OFFSET(R427C15:R432C24,0,0))"
End Sub
Sub Change_TT75_2_Click()
    Sheets("Config").Range("C155").FormulaR1C1 = "= diachivung(OFFSET(R437C15:R442C24,0,0))"
    Sheets("Config").Range("C156").FormulaR1C1 = "= diachivung(OFFSET(R447C15:R452C24,0,0))"
End Sub
Sub Change_TT75_3_Click()
    Sheets("Config").Range("C155").FormulaR1C1 = "= diachivung(OFFSET(R457C15:R462C24,0,0))"
    Sheets("Config").Range("C156").FormulaR1C1 = ""
End Sub
Sub Update_TKe()
On Error Resume Next
    Application.ScreenUpdating = False
    Dim Ad As String
    Ad = ActiveCell.Address
    Dim NameShConfig As String
    If KiemtraSheet("Setting") = False Then Exit Sub
    NameShConfig = GetNameSh(Sh_ConfigBN)
    ActiveSheet.Shapes.Range(Array("Dr_LCTK")).Select
    With Selection
        Select Case ActiveWorkbook.Names("i_Btk").RefersToRange.Value
            Case 3  'Loai cong trinh khac
                .ListFillRange = "Loai_CTKhac"
                ActiveSheet.Shapes.Range(Array("Dr_CTK")).Select
                With Selection
                    .ListFillRange = "Loai_CTKhac"
                End With
            Case Else
                ActiveWorkbook.Names("i_CTKhac").RefersToRange.Value = 1
                .ListFillRange = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_CTKhac").RefersToRange.Offset(1, -1).Address & ""
'''                '- Doi khac:
                ActiveSheet.Shapes.Range(Array("Dr_CTK")).Select
                 ActiveWorkbook.Names("i_BTKKhac").RefersToRange.Value = 1
                With Selection
                    .ListFillRange = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_CTKhac").RefersToRange.Offset(1, -1).Address & ""
                End With
        End Select
        .DropDownLines = 8
        .Display3DShading = True
    End With
Range(Ad).Select
Application.ScreenUpdating = True
End Sub
'=====CAC HAM DOC SO THANH CHU SU DUNG TRONG FILE NAY DEU SU DUNG TU NGUON: GIAIPHAPEXCEL.COM VA DUOC SU CHO PHEP CUA TAC GIA
'+ Doso VNI
Function DocSoVni(conso) As String
If IsError(conso) = True Then
    DocSoVni = "lo|fffd|i"
    Exit Function
End If
s09 = Array("", " mo|fffd|t", " hai", " ba", " bo|fffd|n", " na|fffd|m", " sa|fffd|u", " ba|fffd|y", " ta|fffd|m", " ch|fffd|n")
lop3 = Array("", " trie|fffd|u", " ngh|fffd|n", " ty|fffd|")
If Trim(conso) = "" Then
  DocSoVni = ""
ElseIf IsNumeric(conso) = True Then
  If conso < 0 Then dau = "a|fffd|m " Else dau = ""
  conso = Application.WorksheetFunction.Round(Abs(conso), 0)
  conso = " " & conso
  conso = Replace(conso, ",", "", 1)
  vt = InStr(1, conso, "E")
  If vt > 0 Then
    sonhan = Val(Mid(conso, vt + 1))
    conso = Trim(Mid(conso, 2, vt - 2))
    conso = conso & String(sonhan - Len(conso) + 1, "0")
  End If
  conso = Trim(conso)
  sochuso = Len(conso) Mod 9
  If sochuso > 0 Then conso = String(9 - (sochuso Mod 12), "0") & conso
  docso = ""
  i = 1
  lop = 1
  Do
    n1 = Mid(conso, i, 1)
    n2 = Mid(conso, i + 1, 1)
    n3 = Mid(conso, i + 2, 1)
    baso = Mid(conso, i, 3)
    a = lop3(lop)
    i = i + 3
    If n1 & n2 & n3 = "000" Then
      If docso <> "" And lop = 3 And Len(conso) - i > 2 Then s123 = " ty|fffd|" Else s123 = ""
    Else
      If n1 = 0 Then
        If docso = "" Then s1 = "" Else s1 = " kho|fffd|ng tra|fffd|m"
      Else
        s1 = s09(n1) & " tra|fffd|m"
      End If
      If n2 = 0 Then
        If s1 = "" Or n3 = 0 Then
          s2 = ""
        Else
          s2 = " linh"
        End If
      Else
        If n2 = 1 Then s2 = " m|fffd||fffd||fffd|i" Else s2 = s09(n2) & " m|fffd||fffd|i"
      End If
      If n3 = 1 Then
        If n2 = 1 Or n2 = 0 Then s3 = " mo|fffd|t" Else s3 = " mo|fffd|t"
      ElseIf n3 = 5 And n2 <> 0 Then
        s3 = " la|fffd|m"
      Else
        s3 = s09(n3)
      End If
      If i > Len(conso) Then
        s123 = s1 & s2 & s3
      Else
        s123 = s1 & s2 & s3 & lop3(lop)
      End If
    End If
    lop = lop + 1
    If lop > 3 Then lop = 1
    docso = docso & s123
    If i > Len(conso) Then Exit Do
  Loop
  If docso = "" Then DocSoVni = "kho|fffd|ng" Else DocSoVni = dau & Trim(docso)
  If Left(DocSoVni, 1) = "a" Then
    Mid(DocSoVni, 1, 2) = UCase(Left(DocSoVni, 2))
  Else
    Mid(DocSoVni, 1, 1) = UCase(Left(DocSoVni, 1))
  End If
Else
  DocSoVni = conso
End If
End Function
'+ Doc so TCVN
Function DocSoTCVN(conso) As String
If IsError(conso) = True Then
    DocSoTCVN = "l|fffd|i"
    Exit Function
End If
s09 = Array("", " m|fffd|t", " hai", " ba", " b|fffd|n", " n|fffd|m", " s|fffd|u", " b|fffd|y", " t|fffd|m", " ch|fffd|n")
lop3 = Array("", " tri|fffd|u", " ngh|fffd|n", " t|fffd|", " tri|fffd|u", " ngh|fffd|n", "")
If Trim(conso) = "" Then
  DocSoTCVN = ""
ElseIf IsNumeric(conso) = True Then
  If conso < 0 Then dau = "|fffd|m " Else dau = ""
  conso = Application.WorksheetFunction.Round(Abs(conso), 0)
  conso = " " & conso
  conso = Replace(conso, ",", "", 1)
  vt = InStr(1, conso, "E")
  If vt > 0 Then
    sonhan = Val(Mid(conso, vt + 1))
    conso = Trim(Mid(conso, 2, vt - 2))
    conso = conso & String(sonhan - Len(conso) + 1, "0")
  End If
  conso = Trim(conso)
  sochuso = Len(conso) Mod 9
  If sochuso > 0 Then conso = String(9 - (sochuso Mod 12), "0") & conso
  docso = ""
  i = 1
  lop = 1
  Do
    n1 = Mid(conso, i, 1)
    n2 = Mid(conso, i + 1, 1)
    n3 = Mid(conso, i + 2, 1)
    baso = Mid(conso, i, 3)
    i = i + 3
    If n1 & n2 & n3 = "000" Then
      If docso <> "" And lop = 3 And Len(conso) - i > 2 Then s123 = " t|fffd|" Else s123 = ""
    Else
      If n1 = 0 Then
        If docso = "" Then s1 = "" Else s1 = " kh|fffd|ng tr|fffd|m"
      Else
        s1 = s09(n1) & " tr|fffd|m"
      End If
      If n2 = 0 Then
        If s1 = "" Or n3 = 0 Then
          s2 = ""
        Else
          s2 = " linh"
        End If
      Else
        If n2 = 1 Then s2 = " m|fffd||fffd|i" Else s2 = s09(n2) & " m|fffd||fffd|i"
      End If
      If n3 = 1 Then
        If n2 = 1 Or n2 = 0 Then s3 = " m|fffd|t" Else s3 = " m|fffd|t"
      ElseIf n3 = 5 And n2 <> 0 Then
        s3 = " l|fffd|m"
      Else
        s3 = s09(n3)
      End If
      If i > Len(conso) Then
        s123 = s1 & s2 & s3
      Else
        s123 = s1 & s2 & s3 & lop3(lop)
      End If
    End If
    lop = lop + 1
    If lop > 3 Then lop = 1
    docso = docso & s123
    If i > Len(conso) Then Exit Do
  Loop
  If docso = "" Then DocSoTCVN = "kh|fffd|ng" Else DocSoTCVN = dau & Trim(docso)
  If Left(DocSoTCVN, 1) = "|fffd|" Then
    DocSoTCVN = "|fffd|" & Mid(DocSoTCVN, 2)
  Else
    Mid(DocSoTCVN, 1, 1) = UCase(Left(DocSoTCVN, 1))
  End If
Else
  DocSoTCVN = conso
End If
End Function
'+ Doc so UNicode Hoa
Function DocSoUni(conso) As String
If IsError(conso) = True Then
    DocSoUni = UniConvert("lo|fffd|i", "VNI")
    Exit Function
End If
s09 = Array("", " m" & ChrW(7897) & "t", " hai", " ba", " b" & ChrW(7889) & "n", " n" & ChrW(259) & "m", " s" & ChrW(225) & "u", " b" & ChrW(7843) & "y", " t" & ChrW(225) & "m", " ch" & ChrW(237) & "n")
lop3 = Array("", " tri" & ChrW(7879) & "u", " ngh" & ChrW(236) & "n", " t" & ChrW(7927))
If Trim(conso) = "" Then
  DocSoUni = ""
ElseIf IsNumeric(conso) = True Then
  If conso < 0 Then dau = ChrW(226) & "m " Else dau = ""
  conso = Application.WorksheetFunction.Round(Abs(conso), 0)
  conso = " " & conso
  conso = Replace(conso, ",", "", 1)
  vt = InStr(1, conso, "E")
  If vt > 0 Then
    sonhan = Val(Mid(conso, vt + 1))
    conso = Trim(Mid(conso, 2, vt - 2))
    conso = conso & String(sonhan - Len(conso) + 1, "0")
  End If
  conso = Trim(conso)
  sochuso = Len(conso) Mod 9
  If sochuso > 0 Then conso = String(9 - (sochuso Mod 12), "0") & conso
  docso = ""
  i = 1
  lop = 1
  Do
    n1 = Mid(conso, i, 1)
    n2 = Mid(conso, i + 1, 1)
    n3 = Mid(conso, i + 2, 1)
    baso = Mid(conso, i, 3)
    i = i + 3
    If n1 & n2 & n3 = "000" Then
      If docso <> "" And lop = 3 And Len(conso) - i > 2 Then s123 = " t" & ChrW(7927) Else s123 = ""
    Else
      If n1 = 0 Then
        If docso = "" Then s1 = "" Else s1 = " kh" & ChrW(244) & "ng tr" & ChrW(259) & "m"
      Else
        s1 = s09(n1) & " tr" & ChrW(259) & "m"
      End If
      If n2 = 0 Then
        If s1 = "" Or n3 = 0 Then
          s2 = ""
        Else
          s2 = " linh"
        End If
      Else
        If n2 = 1 Then s2 = " m" & ChrW(432) & ChrW(7901) & "i" Else s2 = s09(n2) & " m" & ChrW(432) & ChrW(417) & "i"
      End If
      If n3 = 1 Then
        If n2 = 1 Or n2 = 0 Then s3 = " m" & ChrW(7897) & "t" Else s3 = " m" & ChrW(7889) & "t"
      ElseIf n3 = 5 And n2 <> 0 Then
        s3 = " l" & ChrW(259) & "m"
      Else
        s3 = s09(n3)
      End If
      If i > Len(conso) Then
        s123 = s1 & s2 & s3
      Else
        s123 = s1 & s2 & s3 & lop3(lop)
      End If
    End If
    lop = lop + 1
    If lop > 3 Then lop = 1
    docso = docso & s123
    If i > Len(conso) Then Exit Do
  Loop
  If docso = "" Then DocSoUni = "kh" & ChrW(244) & "ng" Else DocSoUni = dau & Trim(docso)
  Mid(DocSoUni, 1, 1) = UCase(Left(DocSoUni, 1))
Else
  DocSoUni = conso
End If
End Function
Function GetFormular(Rng As Range) As String
    GetFormular = Replace(Rng.FormulaR1C1Local, "=", "", 1, -1, vbTextCompare)
    GetFormular = GetFormular
End Function

Sub Update_List()
    On Error GoTo 0
    Application.ScreenUpdating = False
    Dim Ad As String, NameShConfig As String
    NameShConfig = GetNameSh(Sheets(Sheets("Setting").Range("G21").Value))
    Ad = ActiveCell.Address
    ActiveSheet.Shapes.Range(Array("Dr_CTK")).Select
    With Selection
        Select Case ActiveWorkbook.Names("i_CTKhac").RefersToRange.Value
            Case 1
                .ListFillRange = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_CTKhac").RefersToRange.Offset(1, -1).Address & ""
            Case 2
                .ListFillRange = "Li_Cap"
            Case 3
                .ListFillRange = "Li_HC"
            Case 4
                .ListFillRange = "Li_BCVT"
            Case 5
                .ListFillRange = "LI_MTT"
        End Select
        .DropDownLines = 8
        .Display3DShading = True
        .LinkedCell = "" & NameShConfig & "!" & ActiveWorkbook.Names("i_BTKKhac").RefersToRange.Address & """    "
    End With
Range(Ad).Select
Application.ScreenUpdating = True
End Sub
Sub Update_LuongCN()
    On Error Resume Next
    Dim iLuong As Long
    iLuong = ActiveWorkbook.Names("i_Luong").RefersToRange.Value
    Dim NameShDVCM As String
    If KiemtraSheet("Setting") = False Then Exit Sub
    NameShDVCM = GetNameSh(Sh_DVCM)
    Select Case iLuong
        Case 2  'Thuc te
            Range("G6").FormulaR1C1 = "=" & NameShDVCM & "!R13C7"
            Range("H6").FormulaR1C1 = "=" & NameShDVCM & "!R14C7"
            Range("I6").FormulaR1C1 = "=" & NameShDVCM & "!R15C7"
            Range("J6").FormulaR1C1 = "=" & NameShDVCM & "!R16C7"
            Range("K6").FormulaR1C1 = "=" & NameShDVCM & "!R17C7"
            Range("L6").FormulaR1C1 = "=" & NameShDVCM & "!R18C7"
            Range("M6").FormulaR1C1 = "=" & NameShDVCM & "!R19C7"
            Range("N6").FormulaR1C1 = "=" & NameShDVCM & "!R20C7"
            Range("N2").FormulaR1C1 = "=" & NameShDVCM & "!R11C7"
            Range("N3").FormulaR1C1 = "=" & NameShDVCM & "!R12C7"
        Case Else   'Goc
            Range("G6").FormulaR1C1 = "=" & NameShDVCM & "!R13C6"
            Range("H6").FormulaR1C1 = "=" & NameShDVCM & "!R14C6"
            Range("I6").FormulaR1C1 = "=" & NameShDVCM & "!R15C6"
            Range("J6").FormulaR1C1 = "=" & NameShDVCM & "!R16C6"
            Range("K6").FormulaR1C1 = "=" & NameShDVCM & "!R17C6"
            Range("L6").FormulaR1C1 = "=" & NameShDVCM & "!R18C6"
            Range("M6").FormulaR1C1 = "=" & NameShDVCM & "!R19C6"
            Range("N6").FormulaR1C1 = "=" & NameShDVCM & "!R20C6"
            Range("N2").FormulaR1C1 = "=" & NameShDVCM & "!R11C6"
            Range("N3").FormulaR1C1 = "=" & NameShDVCM & "!R12C6"
    End Select
End Sub
Sub THDT_ShowRowCP()
    Dim shTHDT As Worksheet
    Set shTHDT = ActiveSheet
    Dim chk
    Set chk = shTHDT.CheckBoxes("chk_ShowRow")
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    If chk.Value = 1 Then
        shTHDT.Cells.EntireRow.Hidden = False
    Else
        Dim i As Long
        With shTHDT
            For i = .Range("D65536").End(xlUp).Row To 7 Step -1
                Select Case .Range("N" & i).Value
                    Case 0
                        .Range("N" & i).EntireRow.Hidden = True
                    Case 1
                        .Range("N" & i).EntireRow.Hidden = False
                End Select
            Next
        End With
    End If
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
End Sub


Sub Click_TDT()
If KiemtraSheet("Config") = True Then
    Application.Calculation = xlCalculationManual
    With Sheets("Config")
        .Range("C118").FormulaR1C1 = "=diachivung(OFFSET(R39C15:R44C27,0,(i_VB-1)*14))"
        .Range("C119").FormulaR1C1 = "=diachivung(OFFSET(R47C15:R52C27,0,(i_VB-1)*14))"
        .Range("C120").FormulaR1C1 = "=diachivung(OFFSET(R55C15:R60C27,0,(i_VB-1)*14))"
        .Range("C121").FormulaR1C1 = "=IF(i_BTK=1,OFFSET(R134C3,i_LoaiCT-1,0),OFFSET(R129C3,i_LoaiCT-1,0))"
        .Range("C122").FormulaR1C1 = "=IF(i_CTKhac=1,"""",OFFSET(R139C3,i_CTKhac-2,0))"
        .Range("C124").FormulaR1C1 = "=diachivung(OFFSET(R64C14:R75C19,0,(i_VB-1)*14))"
        .Range("C125").FormulaR1C1 = "=diachivung(OFFSET(R107C14:R118C19,0,(i_VB-1)*14))"
        .Range("C126").FormulaR1C1 = "=diachivung(OFFSET(R166C14:R177C19,0,(i_VB-1)*14))"
        .Range("C127").FormulaR1C1 = "=diachivung(OFFSET(R211C14:R222C19,0,(i_VB-1)*14))"
        .Range("C128").FormulaR1C1 = "=diachivung(OFFSET(R256C14:R267C19,0,(i_VB-1)*14))"
        .Range("C129").FormulaR1C1 = "=diachivung(OFFSET(R79C14:R88C19,0,(i_VB-1)*14))"
        .Range("C130").FormulaR1C1 = "=diachivung(OFFSET(R122C14:R133C19,0,(i_VB-1)*14))"
        .Range("C131").FormulaR1C1 = "=diachivung(OFFSET(R181C14:R192C19,0,(i_VB-1)*14))"
        .Range("C132").FormulaR1C1 = "=diachivung(OFFSET(R226C14:R237C19,0,(i_VB-1)*14))"
        .Range("C133").FormulaR1C1 = "=diachivung(OFFSET(R271C14:R282C19,0,(i_VB-1)*14))"
        .Range("C134").FormulaR1C1 = "=diachivung(OFFSET(R92C14:R103C19,0,(i_VB-1)*14))"
        .Range("C135").FormulaR1C1 = "=diachivung(OFFSET(R137C14:R148C19,0,(i_VB-1)*14))"
        .Range("C136").FormulaR1C1 = "=diachivung(OFFSET(R196C14:R207C19,0,(i_VB-1)*14))"
        .Range("C137").FormulaR1C1 = "=diachivung(OFFSET(R241C14:R252C19,0,(i_VB-1)*14))"
        .Range("C138").FormulaR1C1 = "=diachivung(OFFSET(R286C14:R297C19,0,(i_VB-1)*14))"
        .Range("C139").FormulaR1C1 = "=diachivung(OFFSET(R151C15:R154C22,0,(i_VB-1)*14))"
        .Range("C140").FormulaR1C1 = "=diachivung(OFFSET(R157C15:R162C24,0,(i_VB-1)*14))"
        .Range("C141").FormulaR1C1 = "=diachivung(OFFSET(R300C15:R303C23,0,(i_VB-1)*14))"
        .Range("C142").FormulaR1C1 = "=diachivung(OFFSET(R306C15:R315C23,0,(i_VB-1)*14))"
        .Range("C143").FormulaR1C1 = "=diachivung(OFFSET(R318C15:R323C27,0,(i_VB-1)*14))"
        .Range("C144").FormulaR1C1 = "=diachivung(OFFSET(R326C15:R331C25,0,(i_VB-1)*14))"
        .Range("C148").FormulaR1C1 = "=diachivung(OFFSET(R358C15:R363C25,0,(i_VB-1)*14))"
        .Range("C149").FormulaR1C1 = "=diachivung(OFFSET(R366C15:R371C25,0,(i_VB-1)*14))"
        .Range("C150").FormulaR1C1 = "=diachivung(OFFSET(R374C15:R379C25,0,(i_VB-1)*14))"
        .Range("C151").FormulaR1C1 = "=diachivung(OFFSET(R382C15:R387C25,0,(i_VB-1)*14))"
        .Range("C152").FormulaR1C1 = "=diachivung(OFFSET(R390C15:R395C25,0,(i_VB-1)*14))"
        .Range("C153").FormulaR1C1 = "=diachivung(OFFSET(R398C15:R403C25,0,(i_VB-1)*14))"
        .Range("C154").FormulaR1C1 = "=diachivung(OFFSET(R407C15:R409C23,0,(i_KTQT-1)*14))"
        .Range("C155").FormulaR1C1 = "= diachivung(OFFSET(R417C15:R422C24,0,0))"
        .Range("C156").FormulaR1C1 = "= diachivung(OFFSET(R427C15:R432C24,0,0))"
        .Range("C157").FormulaR1C1 = "=diachivung(OFFSET(R467C15:R468C25,0,0))"
        .Range("C158").FormulaR1C1 = "=diachivung(OFFSET(R474C15:R482C20,0,0))"
        .Range("C159").FormulaR1C1 = "=diachivung(OFFSET(R502C15:R510C16,0,0))"
        .Range("E121").FormulaR1C1 = "=OFFSET(R129C3,i_LoaiCT-1+(i_BTK-1)*5,0)"
        .Range("E129").FormulaR1C1 = "=OFFSET(R129C3,i_LoaiCT-1+(i_BTK-1)*5,0)"
        Application.Calculation = xlCalculationAutomatic
        .Range("C118:C160").Value = .Range("C118:C160").Value
        .Range("E121").Value = .Range("E121").Value
        .Range("E129").Value = .Range("E129").Value
    End With
End If
End Sub

Attribute VB_Name = "Mod_Support"
Option Private Module
Function UniConvert(Text As String, InputMethod As String) As String
  Dim VNI_Type, Telex_Type, CharCode, Temp, i As Long
  UniConvert = Text
  VNI_Type = Array("a81", "a82", "a83", "a84", "a85", "a61", "a62", "a63", "a64", "a65", "e61", _
      "e62", "e63", "e64", "e65", "o61", "o62", "o63", "o64", "o65", "o71", "o72", "o73", "o74", _
      "o75", "u71", "u72", "u73", "u74", "u75", "a1", "a2", "a3", "a4", "a5", "a8", "a6", "d9", _
      "e1", "e2", "e3", "e4", "e5", "e6", "i1", "i2", "i3", "i4", "i5", "o1", "o2", "o3", "o4", _
      "o5", "o6", "o7", "u1", "u2", "u3", "u4", "u5", "u7", "y1", "y2", "y3", "y4", "y5")
  Telex_Type = Array("aws", "awf", "awr", "awx", "awj", "aas", "aaf", "aar", "aax", "aaj", "ees", _
      "eef", "eer", "eex", "eej", "oos", "oof", "oor", "oox", "ooj", "ows", "owf", "owr", "owx", _
      "owj", "uws", "uwf", "uwr", "uwx", "uwj", "as", "af", "ar", "ax", "aj", "aw", "aa", "dd", _
      "es", "ef", "er", "ex", "ej", "ee", "is", "if", "ir", "ix", "ij", "os", "of", "or", "ox", _
      "oj", "oo", "ow", "us", "uf", "ur", "ux", "uj", "uw", "ys", "yf", "yr", "yx", "yj")
  CharCode = Array(ChrW(7855), ChrW(7857), ChrW(7859), ChrW(7861), ChrW(7863), ChrW(7845), ChrW(7847), _
      ChrW(7849), ChrW(7851), ChrW(7853), ChrW(7871), ChrW(7873), ChrW(7875), ChrW(7877), ChrW(7879), _
      ChrW(7889), ChrW(7891), ChrW(7893), ChrW(7895), ChrW(7897), ChrW(7899), ChrW(7901), ChrW(7903), _
      ChrW(7905), ChrW(7907), ChrW(7913), ChrW(7915), ChrW(7917), ChrW(7919), ChrW(7921), ChrW(225), _
      ChrW(224), ChrW(7843), ChrW(227), ChrW(7841), ChrW(259), ChrW(226), ChrW(273), ChrW(233), ChrW(232), _
      ChrW(7867), ChrW(7869), ChrW(7865), ChrW(234), ChrW(237), ChrW(236), ChrW(7881), ChrW(297), ChrW(7883), _
      ChrW(243), ChrW(242), ChrW(7887), ChrW(245), ChrW(7885), ChrW(244), ChrW(417), ChrW(250), ChrW(249), _
      ChrW(7911), ChrW(361), ChrW(7909), ChrW(432), ChrW(253), ChrW(7923), ChrW(7927), ChrW(7929), ChrW(7925))
  Select Case InputMethod
    Case Is = "VNI": Temp = VNI_Type
    Case Is = "Telex": Temp = Telex_Type
  End Select
  For i = 0 To UBound(CharCode)
    UniConvert = Replace(UniConvert, Temp(i), CharCode(i))
    UniConvert = Replace(UniConvert, UCase(Temp(i)), UCase(CharCode(i)))
  Next i
End Function
Function Kiemtra_Duongdan(FileName) As Boolean ' Ham tra ve true neu co duong dan, false neu khong:
Dim X As String
On Error Resume Next
X = GetAttr(FileName) And 0
If Err = 0 Then Kiemtra_Duongdan = True Else Kiemtra_Duongdan = False
End Function
Function GetValue(StrVal) As Double
    GetValue = Val(Trim(Replace(StrVal, "<", "", 1, -1, vbTextCompare)))
    GetValue = Val(Trim(Replace(GetValue, ">", "", 1, -1, vbTextCompare)))
    GetValue = Val(Trim(Replace(GetValue, "<=", "", 1, -1, vbTextCompare)))
    GetValue = Val(Trim(Replace(GetValue, ">=", "", 1, -1, vbTextCompare)))
End Function
Function Noisuy(VungNoisuy As String, X_Value, Y_Value) As Double
On Error Resume Next
    Dim Rng As Range
    Set Rng = Sheets("Config").Range(VungNoisuy)
    Dim r As Long, c As Long, rOffset As Long, ColOffset As Long
    Dim TmpX, TmpY
    Dim X1, X2, Y1, Y2
    Dim re, ce
    For r = Rng.Rows.Count To 2 Step -1
        If Rng.Cells(r, 1) <> vbNullString Then
            re = r
            Exit For
        End If
    Next
    If re = "" Then re = Rng.Rows.Count
    For c = Rng.Columns.Count To 2 Step -1
        If Rng.Cells(1, c) <> vbNullString Then
            ce = c
            Exit For
        End If
    Next
    If ce = "" Then ce = Rng.Columns.Count
    With Rng
'        '----Xet truong hop gia tri thoa man X truoc:
        For r = 1 To re
            TmpX = .Cells(r, 1)
            '===1. Chinh xac gia tri X
            If TmpX = X_Value Then
                '- Nam ben trai
                If Y_Value < .Cells(1, 2) Then
                    Noisuy = .Cells(r, 2)
                    Exit Function
                End If
                '- Nam ben phai:
                If Y_Value > .Cells(1, ce) Then
                    Noisuy = .Cells(r, ce)
                    Exit Function
                End If
                '- Co X -> Xac dinh Y
                For c = 2 To .Columns.Count
                    If Y_Value = .Cells(1, c) Then
                        Noisuy = .Cells(r, c)
                        Exit Function
                    End If
                    If Y_Value > .Cells(1, c) And Y_Value < .Cells(1, c + 1) Then
                        Y1 = .Cells(1, c)
                        Y2 = .Cells(1, c + 1)
                        X1 = .Cells(r, c)
                        X2 = .Cells(r, c + 1)
                        Noisuy = X1 + (Y_Value - Y1) * (X2 - X1) / (Y2 - Y1)
                        Exit Function
                    End If
                Next
            End If
        Next
        '- Truong hop 2: Gia tri X Kong chinh xac
        '===X: Can duoi
        If X_Value <= .Cells(re, 1) Then
            '- Nam ben trai
            If Y_Value < .Cells(1, 2) Then
                Noisuy = .Cells(re, 2)
                Exit Function
            End If
            '- Nam ben phai:
            If Y_Value > .Cells(1, ce) Then
                Noisuy = .Cells(re, .Columns.Count)
                Exit Function
            End If
            '- Nam giua:
            For c = 2 To .Columns.Count
                If Y_Value = .Cells(1, c) Then
                    Noisuy = .Cells(re, c)
                    Exit Function
                End If
                If Y_Value > .Cells(1, c) And Y_Value < .Cells(1, c + 1) Then
                    Y1 = .Cells(1, c)
                    Y2 = .Cells(1, c + 1)
                    X1 = .Cells(re, c)
                    X2 = .Cells(re, c + 1)
                    Noisuy = X1 + (Y_Value - Y1) * (X2 - X1) / (Y2 - Y1)
                    Exit Function
                End If
            Next
        End If
        '====2. Can tren:
        If X_Value >= .Cells(2, 1) Then
            '- Nam ben trai
            If Y_Value < .Cells(1, 2) Then
                Noisuy = .Cells(2, 2)
                Exit Function
            End If
            '- Nam ben phai:
            If Y_Value > .Cells(1, re) Then
                Noisuy = .Cells(2, re)
                Exit Function
            End If
            '- Nam giua:
            For c = 2 To .Columns.Count
                If Y_Value = .Cells(1, c) Then
                    Noisuy = .Cells(2, c)
                    Exit Function
                End If
                If Y_Value > .Cells(1, c) And Y_Value < .Cells(1, c + 1) Then
                    Y1 = .Cells(1, c)
                    Y2 = .Cells(1, c + 1)
                    X1 = .Cells(2, c)
                    X2 = .Cells(2, c + 1)
                    Noisuy = X1 + (Y_Value - Y1) * (X2 - X1) / (Y2 - Y1)
                    Exit Function
                End If
            Next
        End If
        '=== Nam trong khoang:
        Dim TmpX1, TmpX2
        For r = 2 To re
            If X_Value > .Cells(r + 1, 1) And X_Value < .Cells(r, 1) Then
                TmpX1 = .Cells(r, 1)        'Can tren bien X
                TmpX2 = .Cells(r + 1, 1)    'Can duoi bien X
                '-> Noi suy tiep gia tri Y
                '- Ben phai
                If Y_Value < .Cells(1, 2) Then
                    Y1 = .Cells(r, 2)       'Can tren Y
                    Y2 = .Cells(r + 1, 2)   'Can duoi Y
                    Noisuy = Round(Y2 + (X_Value - TmpX2) * (Y1 - Y2) / (TmpX1 - TmpX2), 4)
                    Exit Function
                End If
                '- Ben trai
                If Y_Value > .Cells(1, ce) Then
                    Y1 = .Cells(r, .Columns.Count)        'Can tren Y
                    Y2 = .Cells(r + 1, .ce)    'Can duoi Y
                    Noisuy = Round(Y2 + (X_Value - TmpX2) * (Y1 - Y2) / (TmpX1 - TmpX2), 4)
                    Exit Function
                End If
                For c = 2 To ce
                    '- Truong hop gia tri Y bang gia tri kia:
                    If Y_Value = .Cells(1, c) Then
                        Y1 = .Cells(r, c)       'Can tren Y
                        Y2 = .Cells(r + 1, c)   'Can duoi Y
                        Noisuy = Round(Y2 + (X_Value - TmpX2) * (Y1 - Y2) / (TmpX1 - TmpX2), 4)
                        Exit Function
                    End If
                    '- Gia tri Y nam giua
                    Dim Y1_1, Y1_2, Y2_1, Y2_2
                    Dim TmpY1, TmpY2
                    If Y_Value > .Cells(1, c) And Y_Value < .Cells(1, c + 1) Then
                        Y1 = .Cells(1, c)
                        Y2 = .Cells(1, c + 1)
                        Y1_1 = .Cells(r, c)
                        Y1_2 = .Cells(r + 1, c)
                        Y2_1 = .Cells(r, c + 1)
                        Y2_2 = .Cells(r + 1, c + 1)
                        TmpY1 = Y1_1 + (Y_Value - Y1) * (Y2_1 - Y1_1) / (Y2 - Y1)
                        TmpY2 = Y1_2 + (Y_Value - Y1) * (Y2_2 - Y1_2) / (Y2 - Y1)
                        Noisuy = Round(TmpY2 + (X_Value - TmpX2) * (TmpY1 - TmpY2) / (TmpX1 - TmpX2), 4)
                        Exit Function
                    End If
                Next
            End If
        Next
    End With
    Set Rng = Nothing
End Function

Function MucToithieu(VungNoisuy As String)
    'On Error GoTo 0
    Dim Rng As Range
    Set Rng = Sh_ConfigBN.Range(VungNoisuy)
    With Sh_ConfigBN
        MucToithieu = Rng.Cells(1, 1).Offset(-2, 0).Value
    End With
End Function

Function TK_Khac(DiachiNoiSuy As String, CPXD_Truocthue) As Double
On Error Resume Next
Dim LoaiCT
LoaiCT = ActiveWorkbook.Names("i_BTKKhac").RefersToRange.Value
If DiachiNoiSuy = "" Then
    TK_Khac = 0
Else
   TK_Khac = Round(Noisuy(DiachiNoiSuy, LoaiCT, CPXD_Truocthue / 10 ^ 9), 3)
End If
End Function






Attribute VB_Name = "Mod_regkey"
Private Declare Function GetComputerName Lib "kernel32" _
Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
Public Declare Function GetUserName Lib "advapi32.dll" _
Alias "GetUserNameA" (ByVal lpBuffer As String, nSize As Long) As Long
Private Type BROWSEINFO  ' Duoc su dung boi ham GetFolderName'
   hOwner As Long:                               pidlRoot As Long
   pszDisplayName As String:                   lpszTitle As String
   ulFlags As Long:                                 lpfn As Long
   lParam As Long:                                iImage As Long
End Type
Private Declare Function SHGetPathFromIDList Lib "shell32.dll" _
      Alias "SHGetPathFromIDListA" (ByVal pidl As Long, ByVal pszPath As String) As Long
Private Declare Function SHBrowseForFolder Lib "shell32.dll" _
      Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As Long

'===== Reading from the Registry:
Function RegKeyRead(i_RegKey As String) As String
Dim myWS As Object
  On Error Resume Next
  Set myWS = CreateObject("WScript.Shell")
  RegKeyRead = myWS.RegRead(i_RegKey)
End Function


'=====Checking if a Registry key exists
Function RegKeyExists(i_RegKey As String) As Boolean
Dim myWS As Object
  On Error GoTo ErrorHandler
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegRead i_RegKey
  RegKeyExists = True
  Exit Function
ErrorHandler:
  RegKeyExists = False
End Function
'======Saving a Registry key:
Sub RegKeySave(i_RegKey As String, _
               i_Value As String, _
      Optional i_Type As String = "REG_SZ")
Dim myWS As Object
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegWrite i_RegKey, i_Value, i_Type
End Sub
'===Deleting a key from the Registry:
Function RegKeyDelete(i_RegKey As String) As Boolean
Dim myWS As Object
  On Error GoTo ErrorHandler
  Set myWS = CreateObject("WScript.Shell")
  myWS.RegDelete i_RegKey
  RegKeyDelete = True
  Exit Function
ErrorHandler:
  RegKeyDelete = False
End Function

Function GetSh()                                                        '- Lay danh sach sheet
  Dim Temp()
  ActiveWorkbook.Names.Add String(240, "z"), "=SUBSTITUTE(GET.WORKBOOK(1),""[""&GET.WORKBOOK(16)&""]"","""")"
  'Lay ten cua workbook add vao
  Temp = Evaluate("Transpose(" & String(240, "z") & ")")
  Temp = WorksheetFunction.Transpose(Temp)
  ActiveWorkbook.Names(String(240, "z")).Delete
  GetSh = Temp
End Function
Public Function Get_FileName(duongdan As String) As String
Dim i As Long, namefile1 As String
Dim lenName As Long
For i = Len(duongdan) To 1 Step -1
   namefile1 = Mid(duongdan, i, 1)
   If namefile1 = "\" Then
    lenName = i
    Exit For
   End If
Next
Get_FileName = Mid(duongdan, lenName + 1, Len(duongdan) - lenName)

End Function
Function Xoa_Folder(duongdan As String, Tenfile As String)
If Right(duongdan, 1) = "\" Then duongdan = duongdan & "\"
Tenfile = Dir(duongdan, vbNormal)
Do While Tenfile <> ""
    Kill duongdan & Tenfile
    Tenfile = Dir
Loop
RmDir duongdan
End Function
Function get_Extentfile(duongdan As String) As String
Dim Tenfile As String
Tenfile = Get_FileName(duongdan)
Dim i As Long
For i = 1 To Len(Tenfile)
    If Mid(Tenfile, i, 1) = "." Then
        get_Extentfile = Mid(Tenfile, i, Len(Tenfile) - i + 1)
        Exit For
    End If
Next
End Function
Function get_Foldername_ofpath(path As String) As String
Dim i As Long, TEN As String
For i = Len(path) To 1 Step -1
    TEN = Mid(path, i, 1)
    If Mid(path, i, 1) = "\" Then
        get_Foldername_ofpath = Mid(path, 1, i - 1)
        Exit For
    End If
Next
End Function
Function get_Name_offile(duongdan As String) As String
Dim Tenfile As String
Tenfile = Get_FileName(duongdan)
Dim i As Long
For i = 1 To Len(Tenfile)
    If Mid(Tenfile, i, 1) = "." Then
        get_Name_offile = Mid(Tenfile, 1, i - 1)
        Exit For
    End If
Next
End Function




Attribute VB_Name = "Sh_BCTT_DT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP24(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS24("Setting") = True Then Sheets("Setting").Range("G24").Value = Sh_BCTT_DT.Name
  End If
End Sub
Function KTS24(NameSh As String) As Boolean
  On Error Resume Next
  KTS24 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP24(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP24 = True Else KT_WbOP24 = False
End Function

Attribute VB_Name = "Sh_BCTT_GVT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP25(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS25("Setting") = True Then Sheets("Setting").Range("G25").Value = Sh_BCTT_GVT.Name
  End If
End Sub
Function KTS25(NameSh As String) As Boolean
  On Error Resume Next
  KTS25 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP25(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP25 = True Else KT_WbOP25 = False
End Function

Attribute VB_Name = "Sh_BCTT_PTVT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP25(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS25("Setting") = True Then Sheets("Setting").Range("G25").Value = Sh_BCTT_PTVT.Name
  End If
End Sub
Function KTS25(NameSh As String) As Boolean
  On Error Resume Next
  KTS25 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP25(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP25 = True Else KT_WbOP25 = False
End Function

Attribute VB_Name = "Sh_BGM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP1(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS1("Setting") = True Then
    Sheets("Setting").Range("G14").Value = Sh_BGM.Name
  End If
  End If
End Sub

Function KTS1(NameSh As String) As Boolean
  On Error Resume Next
  KTS1 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP1(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP1 = True Else KT_WbOP1 = False
End Function
Attribute VB_Name = "Sh_Bia"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Deactivate()
On Error Resume Next
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS2("Setting") = True Then Sheets("Setting").Range("G20").Value = Sh_Bia.Name
End If
End Sub

Function KTS2(NameSh As String) As Boolean
  On Error Resume Next
  KTS2 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Attribute VB_Name = "Sh_BuNL_TL"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP3(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS3("Setting") = True Then Sheets("Setting").Range("G15").Value = Sh_BuNL_TL.Name
End If
End Sub
Function KTS3(NameSh As String) As Boolean
  On Error Resume Next
  KTS3 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP3(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP3 = True Else KT_WbOP3 = False
End Function

Attribute VB_Name = "Sh_CPDCCT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP6(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS6("Setting") = True Then Sheets("Setting").Range("G48").Value = Sh_CPDCCT.Name
End If
End Sub
Function KTS6(NameSh As String) As Boolean
  On Error Resume Next
  KTS6 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP6(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP6 = True Else KT_WbOP6 = False
End Function



Attribute VB_Name = "Sh_CPTC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP6(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS6("Setting") = True Then Sheets("Setting").Range("G47").Value = Sh_CPTC.Name
End If
End Sub
Function KTS6(NameSh As String) As Boolean
  On Error Resume Next
  KTS6 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP6(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP6 = True Else KT_WbOP6 = False
End Function



Attribute VB_Name = "Sh_CPVC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G8").Value = Sh_CPVC.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function





Attribute VB_Name = "Sh_CPVC588"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G60").Value = Sh_CPVC588.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function

Attribute VB_Name = "Sh_CPVC_STST"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G49").Value = Sh_CPVC_STST.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function





Attribute VB_Name = "Sh_CTDGM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP5(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS5("Setting") = True Then Sheets("Setting").Range("G13").Value = Sh_CTDGM.Name
  End If
End Sub
Function KTS5(NameSh As String) As Boolean
  On Error Resume Next
  KTS5 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP5(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP5 = True Else KT_WbOP5 = False
End Function


Attribute VB_Name = "Sh_CVC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP6(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS6("Setting") = True Then Sheets("Setting").Range("G9").Value = Sh_CVC.Name
End If
End Sub
Function KTS6(NameSh As String) As Boolean
  On Error Resume Next
  KTS6 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP6(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP6 = True Else KT_WbOP6 = False
End Function

Attribute VB_Name = "Sh_CVC588"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP11(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
    On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS11("Setting") = True Then Sheets("Setting").Range("G59").Value = Sh_CVC588.Name
  End If
End Sub
Function KTS11(NameSh As String) As Boolean
  On Error Resume Next
  KTS11 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP11(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP11 = True Else KT_WbOP11 = False
End Function

Attribute VB_Name = "Sh_ConfigBN"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sh_DGCT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP7(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS7("Setting") = True Then Sheets("Setting").Range("G5").Value = Sh_DGCT.Name
  End If
End Sub
Function KTS7(NameSh As String) As Boolean
  On Error Resume Next
  KTS7 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP7(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP7 = True Else KT_WbOP7 = False
End Function


Attribute VB_Name = "Sh_DVCM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS10("Setting") = True Then Sheets("Setting").Range("G16").Value = Sh_DVCM.Name
End If
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP10(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Function KTS10(NameSh As String) As Boolean
  On Error Resume Next
  KTS10 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP10(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP10 = True Else KT_WbOP10 = False
End Function

Attribute VB_Name = "Sh_Duthau"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP8(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS8("Setting") = True Then Sheets("Setting").Range("G6").Value = Sh_Duthau.Name
End If
End Sub
Function KTS8(NameSh As String) As Boolean
  On Error Resume Next
  KTS8 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP8(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP8 = True Else KT_WbOP8 = False
End Function

Attribute VB_Name = "Sh_Dutoan"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP9(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS9("Setting") = True Then Sheets("Setting").Range("G2").Value = Sh_Dutoan.Name
  End If
End Sub
Function KTS9(NameSh As String) As Boolean
  On Error Resume Next
  KTS9 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP9(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP9 = True Else KT_WbOP9 = False
End Function
'
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If Target.Rows.Count = 1 And Target.Columns.Count = 1 Then
        Sheets("Config").Range("D19").FormulaR1C1 = Target.FormulaR1C1
    End If
End Sub
Attribute VB_Name = "Sh_GTVT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP11(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
    On Error Resume Next
  Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If UCase(Sh_GTVT.Name) = "GVT" Then Sh_GTVT.Name = "Gia tri vat tu"
  If KTS11("Setting") = True Then Sheets("Setting").Range("G4").Value = Sh_GTVT.Name
End If
End Sub
Function KTS11(NameSh As String) As Boolean
  On Error Resume Next
  KTS11 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP11(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP11 = True Else KT_WbOP11 = False
End Function

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If Target.Rows.Count = 1 And Target.Columns.Count = 1 Then
        Sheets("Config").Range("D19").FormulaR1C1 = Target.FormulaR1C1
    End If
End Sub

Attribute VB_Name = "Sh_LCNLM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP12(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS12("Setting") = True Then Sheets("Setting").Range("G12").Value = Sh_LCNLM.Name
  End If
End Sub
Function KTS12(NameSh As String) As Boolean
  On Error Resume Next
  KTS12 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP12(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP12 = True Else KT_WbOP12 = False
End Function



Attribute VB_Name = "Sh_LCNLM1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G29").Value = Sh_LCNLM1.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function


Attribute VB_Name = "Sh_LCNLM2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G54").Value = Sh_LCNLM2.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function



Attribute VB_Name = "Sh_LCNXD"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G10").Value = Sh_LCNXD.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function


Attribute VB_Name = "Sh_LCNXD1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G28").Value = Sh_LCNXD1.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function


Attribute VB_Name = "Sh_LCNXD2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G53").Value = Sh_LCNXD2.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function



Attribute VB_Name = "Sh_NCTC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G66").Value = Sh_NCTC.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function

Attribute VB_Name = "Sh_NTGD"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G80").Value = Sh_NTGD.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function

Attribute VB_Name = "Sh_PL03A"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP12(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS12("Setting") = True Then Sheets("Setting").Range("G78").Value = Sh_PL03A.Name
  End If
End Sub
Function KTS12(NameSh As String) As Boolean
  On Error Resume Next
  KTS12 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP12(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP12 = True Else KT_WbOP12 = False
End Function





Attribute VB_Name = "Sh_PTBCM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP14(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS14("Setting") = True Then Sheets("Setting").Range("G23").Value = Sh_PTBCM.Name
  End If
End Sub
Function KTS14(NameSh As String) As Boolean
  On Error Resume Next
  KTS14 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP14(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP14 = True Else KT_WbOP14 = False
End Function

Attribute VB_Name = "Sh_PTBVC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP14(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS14("Setting") = True Then Sheets("Setting").Range("G67").Value = Sh_PTBVC.Name
  End If
End Sub
Function KTS14(NameSh As String) As Boolean
  On Error Resume Next
  KTS14 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP14(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP14 = True Else KT_WbOP14 = False
End Function


Attribute VB_Name = "Sh_PTCM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP15(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS15("Setting") = True Then Sheets("Setting").Range("G11").Value = Sh_PTCM.Name
  End If
End Sub
Function KTS15(NameSh As String) As Boolean
  On Error Resume Next
  KTS15 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP15(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP15 = True Else KT_WbOP15 = False
End Function


Attribute VB_Name = "Sh_PTVT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP16(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS16("Setting") = True Then Sheets("Setting").Range("G3").Value = Sh_PTVT.Name
End If
End Sub
Function KTS16(NameSh As String) As Boolean
  On Error Resume Next
  KTS16 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP16(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP16 = True Else KT_WbOP16 = False
End Function
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    If Target.Rows.Count = 1 And Target.Columns.Count = 1 Then
        Sheets("Config").Range("D19").FormulaR1C1 = Target.FormulaR1C1
    End If
End Sub


Attribute VB_Name = "Sh_PTVT_BX"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP16(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS16("Setting") = True Then Sheets("Setting").Range("G32").Value = Sh_PTVT_BX.Name
End If
End Sub
Function KTS16(NameSh As String) As Boolean
  On Error Resume Next
  KTS16 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP16(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP16 = True Else KT_WbOP16 = False
End Function
Attribute VB_Name = "Sh_PTVT_VC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP16(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS16("Setting") = True Then Sheets("Setting").Range("G34").Value = Sh_PTVT_VC.Name
End If
End Sub
Function KTS16(NameSh As String) As Boolean
  On Error Resume Next
  KTS16 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP16(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP16 = True Else KT_WbOP16 = False
End Function



Attribute VB_Name = "Sh_PTVT_VCLC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP16(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS16("Setting") = True Then Sheets("Setting").Range("G30").Value = Sh_PTVT_VCLC.Name
End If
End Sub
Function KTS16(NameSh As String) As Boolean
  On Error Resume Next
  KTS16 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP16(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP16 = True Else KT_WbOP16 = False
End Function
Attribute VB_Name = "Sh_Setting"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Sh_TDT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP17(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS17("Setting") = True Then Sheets("Setting").Range("G19").Value = Sh_TDT.Name
End If
Run ("Reset_RightClick")
End Sub
Function KTS17(NameSh As String) As Boolean
  On Error Resume Next
  KTS17 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP17(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP17 = True Else KT_WbOP17 = False
End Function


Attribute VB_Name = "Sh_TDT_TB"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP6(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS6("Setting") = True Then Sheets("Setting").Range("G43").Value = Sh_TDT_TB.Name
End If
End Sub
Function KTS6(NameSh As String) As Boolean
  On Error Resume Next
  KTS6 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP6(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP6 = True Else KT_WbOP6 = False
End Function



Attribute VB_Name = "Sh_THCPTB"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Activate()
    On Error Resume Next
    If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS18("Setting") = True Then Sheets("Setting").Range("G18").Value = Sh_THCPTB.Name
    End If
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP18(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Function KTS18(NameSh As String) As Boolean
  On Error Resume Next
  KTS18 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP18(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP18 = True Else KT_WbOP18 = False
End Function

Attribute VB_Name = "Sh_THCPXD"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
    On Error Resume Next
    Run ("Reset_RightClick")
    If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS19("Setting") = True Then Sheets("Setting").Range("G17").Value = Sh_THCPXD.Name
    End If
End Sub
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP19(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Function KTS19(NameSh As String) As Boolean
  On Error Resume Next
  KTS19 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP19(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP19 = True Else KT_WbOP19 = False
End Function
Attribute VB_Name = "Sh_THKP"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP20(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS20("Setting") = True Then Sheets("Setting").Range("G7").Value = Sh_THKP.Name
  End If
End Sub
Function KTS20(NameSh As String) As Boolean
  On Error Resume Next
  KTS20 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP20(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP20 = True Else KT_WbOP20 = False
End Function

Attribute VB_Name = "Sh_THKP2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP21(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS21("Setting") = True Then Sheets("Setting").Range("G22").Value = Sh_THKP2.Name
  End If
End Sub
Function KTS21(NameSh As String) As Boolean
  On Error Resume Next
  KTS21 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP21(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP21 = True Else KT_WbOP21 = False
End Function
Attribute VB_Name = "Sh_THKP2_KS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP21(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS21("Setting") = True Then Sheets("Setting").Range("G50").Value = Sh_THKP2_KS.Name
  End If
End Sub
Function KTS21(NameSh As String) As Boolean
  On Error Resume Next
  KTS21 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP21(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP21 = True Else KT_WbOP21 = False
End Function
Attribute VB_Name = "Sh_THKP_KS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP20(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS20("Setting") = True Then Sheets("Setting").Range("G51").Value = Sh_THKP_KS.Name
  End If
End Sub
Function KTS20(NameSh As String) As Boolean
  On Error Resume Next
  KTS20 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP20(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP20 = True Else KT_WbOP20 = False
End Function

Attribute VB_Name = "Sh_THVT_BX"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP16(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS16("Setting") = True Then Sheets("Setting").Range("G33").Value = Sh_THVT_BX.Name
End If
End Sub
Function KTS16(NameSh As String) As Boolean
  On Error Resume Next
  KTS16 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP16(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP16 = True Else KT_WbOP16 = False
End Function

Attribute VB_Name = "Sh_THVT_VCLC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP16(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS16("Setting") = True Then Sheets("Setting").Range("G31").Value = Sh_THVT_VCLC.Name
End If
End Sub
Function KTS16(NameSh As String) As Boolean
  On Error Resume Next
  KTS16 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP16(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP16 = True Else KT_WbOP16 = False
End Function

Attribute VB_Name = "Sh_VC_BuGM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G63").Value = Sh_VC_BuGM.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP25(NameDT) = True Then
    Sheets("Config").Range("O18").Value = ActiveSheet.Name
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Function KTS25(NameSh As String) As Boolean
  On Error Resume Next
  KTS25 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP25(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP25 = True Else KT_WbOP25 = False
End Function
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP25(NameDT) = True Then
    Sheets("Config").Range("O18").Value = ActiveSheet.Name
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Function KTS25(NameSh As String) As Boolean
  On Error Resume Next
  KTS25 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP25(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP25 = True Else KT_WbOP25 = False
End Function
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP25(NameDT) = True Then
    Sheets("Config").Range("O18").Value = ActiveSheet.Name
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Function KTS25(NameSh As String) As Boolean
  On Error Resume Next
  KTS25 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP25(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP25 = True Else KT_WbOP25 = False
End Function
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Activate()
    On Error Resume Next
    If Kiemtra_WbOpen("DTBN.xla") = True Then
        If Application.Version > 10 Then
            Run "DTBN.xla!UpdateRibbon_Database"
        End If
    End If
End Sub

Private Sub Workbook_SheetActivate(ByVal Sh As Object)
  On Error Resume Next
  AppActivate Sheets("Setting").Range("H1").Value
End Sub
Attribute VB_Name = "sh_CuocBS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP6(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS6("Setting") = True Then Sheets("Setting").Range("G46").Value = sh_CuocBS.Name
End If
End Sub
Function KTS6(NameSh As String) As Boolean
  On Error Resume Next
  KTS6 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP6(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP6 = True Else KT_WbOP6 = False
End Function


Attribute VB_Name = "sh_Giavua"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP9(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS9("Setting") = True Then Sheets("Setting").Range("G58").Value = sh_Giavua.Name
  End If
End Sub
Function KTS9(NameSh As String) As Boolean
  On Error Resume Next
  KTS9 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP9(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP9 = True Else KT_WbOP9 = False
End Function
Attribute VB_Name = "sh_LuongCN"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "sh_LuongCNLM_Tong"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G56").Value = sh_LuongCNLM_Tong.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function

Attribute VB_Name = "sh_LuongCNXD_Tong"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP13(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS13("Setting") = True Then Sheets("Setting").Range("G55").Value = sh_LuongCNXD_Tong.Name
  End If
End Sub
Function KTS13(NameSh As String) As Boolean
  On Error Resume Next
  KTS13 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP13(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP13 = True Else KT_WbOP13 = False
End Function


Attribute VB_Name = "sh_PL03a_A"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP12(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS12("Setting") = True Then Sheets("Setting").Range("G79").Value = sh_PL03a_A.Name
  End If
End Sub
Function KTS12(NameSh As String) As Boolean
  On Error Resume Next
  KTS12 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP12(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP12 = True Else KT_WbOP12 = False
End Function





Attribute VB_Name = "sh_QLNT"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "sh_QLTU"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP12(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
  If KTS12("Setting") = True Then Sheets("Setting").Range("G82").Value = sh_QLTU.Name
  End If
End Sub
Function KTS12(NameSh As String) As Boolean
  On Error Resume Next
  KTS12 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP12(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP12 = True Else KT_WbOP12 = False
End Function





Attribute VB_Name = "sh_THKP_DakLak"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G61").Value = sh_THKP_DakLak.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function
Attribute VB_Name = "sh_THKP_Goc"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G68").Value = sh_THKP_Goc.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function


Attribute VB_Name = "sh_THVT_VC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP6(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
Run ("Reset_RightClick")
If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
If KTS6("Setting") = True Then Sheets("Setting").Range("G35").Value = sh_THVT_VC.Name
End If
End Sub
Function KTS6(NameSh As String) As Boolean
  On Error Resume Next
  KTS6 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP6(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP6 = True Else KT_WbOP6 = False
End Function

Attribute VB_Name = "sh_Tonghopkinhphi_Goc"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G69").Value = sh_Tonghopkinhphi_Goc.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function


Attribute VB_Name = "sh_VC_BuNLTL"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G64").Value = sh_VC_BuNLTL.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function
Attribute VB_Name = "sh_VC_CPTC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G65").Value = sh_VC_CPTC.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function
Attribute VB_Name = "sh_VC_CTCM"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
On Error Resume Next
If KT_WbOP4(NameDT) = True Then
    Add_RightClickSheet ActiveSheet
    Run ("Reset_RightClick"): Run (NameDT & "!LoadPopup")
Else
    Run ("Reset_RightClick")
End If
End Sub
Private Sub Worksheet_Deactivate()
On Error Resume Next
  Run ("Reset_RightClick")
  If RegKeyRead("HKEY_CURRENT_USER\Software\BacNamSoft\Dutoan\AutoRename") = "1" Then
    If KTS4("Setting") = True Then Sheets("Setting").Range("G62").Value = sh_VC_CTCM.Name
End If
End Sub
Function KTS4(NameSh As String) As Boolean
  On Error Resume Next
  KTS4 = CBool(Len(Worksheets(NameSh).Name) > 0)
End Function
Function KT_WbOP4(WBName As String) As Boolean
    Dim WB As Workbook
    On Error Resume Next
    Set WB = Workbooks(WBName)
    If Err = 0 Then KT_WbOP4 = True Else KT_WbOP4 = False
End Function





INQUEST-PP=macro
