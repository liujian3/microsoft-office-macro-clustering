Attribute VB_Name = "Buttons"
Option Explicit


Private Sub cmdKollektorfeld_Click()
    frmKollektorfeld.Show
    
    If DebugMode = 0 Then
        Sheets("Kollektoren").Protect Password:=SCFWPW
        Sheets("Config").Protect Password:=SCFWPW
        Sheets("Parameter").Protect Password:=SCFWPW
        Sheets("Berechnung").Protect Password:=SCFWPW
    End If
    
End Sub


Private Sub cmdRohre_Click()
    frmRohre.Show
End Sub


Private Sub cmdWUE1_Click()
    frmWUE1.Show
End Sub


Private Sub cmdWUE2_Click()
    frmWUE2.Show
End Sub


Private Sub cmdSpeicher_Click()
    frmSpeicher.Show
End Sub


Private Sub cmdNetz_Click()
    frmNetz.Show
    
End Sub



Public Sub cmdBerechnung_Click()

    'Berechnung der Arbeitsmappe
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim BlattNr As Integer, x As String, y As Integer
    
    'Daten des gew|fffd|hlten Standorts laden
    For BlattNr = 1 To ThisWorkbook.Worksheets.Count
        On Error GoTo Fehler
        
        x = Right(Worksheets(BlattNr).Name, Len(Worksheets(BlattNr).Name) - 1)
        If Right(Worksheets(BlattNr).Name, Len(Worksheets(BlattNr).Name) - 1) = Range("Ort").Value Then
'       Namen f|fffd|r Longitude, STD_Longitude und Latitude in aktuellem Wetterdatenblatt setzen
            
            ActiveWorkbook.Names("Longitude").Delete
            ActiveWorkbook.Names("STD_Longitude").Delete
            ActiveWorkbook.Names("Latitude").Delete
            
            ActiveWorkbook.Names.Add Name:="Longitude", _
            RefersTo:="=_" & Range("Ort") & "!$D$2"
            
            ActiveWorkbook.Names.Add Name:="STD_Longitude", _
            RefersTo:="=_" & Range("Ort") & "!$E$2"
            
            ActiveWorkbook.Names.Add Name:="Latitude", _
            RefersTo:="=_" & Range("Ort") & "!$F$2"
            
            BlattNr = ThisWorkbook.Worksheets.Count
            
            y = 1
            
        ElseIf BlattNr = ThisWorkbook.Worksheets.Count And y = 0 Then 'Wetterdaten nicht vorhanden
            MsgBox "Die gew|fffd|hlten Wetterdaten wurden nicht gefunden. W|fffd|hlen Sie bitte vor der Berechnung einen anderen Ort aus.", vbOKOnly, "Wetterdaten"
            Exit Sub
        End If
        
        y = 0
        
    Next BlattNr
    
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Berechnung").Unprotect Password:=SCFWPW
    Range("Projektname").Value = Range("Name").Value
    
    If Sheets("Parameter").Range("Y_Netz") = 1 Then
    'f|fffd|r den theoretischen Kollektorertrag wird die st|fffd|ndliche mittlere Lasttemperatur in das Blatt Berechnen kopiert
        Sheets("Last").Range("G11:G8770").Copy
        Sheets("Berechnung").Range("AC11:AC8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
    ElseIf Sheets("Parameter").Range("Y_Netz") = 0 Then
        If Sheets("Parameter").Range("TKollArt").Value = "konstant" Then
            Sheets("Parameter").Range("TKollMittel").Copy
            Sheets("Berechnung").Range("AC11:AC8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        ElseIf Sheets("Parameter").Range("TKollArt").Value = "variabel" Then
            Sheets("Temp").Range("E11:E8770").Copy
            Sheets("Berechnung").Range("AC11:AC8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Range("P_VL_max").Value = Range("VL_max").Value
            Range("P_VL_min").Value = Range("VL_min").Value
            Range("P_RL_max").Value = Range("RL_max").Value
            Range("P_RL_min").Value = Range("RL_min").Value
        End If
    End If
    
    
    If Sheets("Config").ProtectContents = True Then
        Sheets("Config").Unprotect Password:=SCFWPW
    End If
    
    Application.EnableEvents = True
    
    Application.CalculateFull
    Sheets("Config").Range("Aktualisierung").Value = 0
    
    Application.ScreenUpdating = True
    
    Exit Sub
    
Fehler:
    MsgBox "Bei der Berechnung ist ein Fehler aufgetreten." & vbNewLine & "Bitte pr|fffd|fen Sie Ihre Eingaben, z.B. die Wetterdaten.", vbOKOnly, "Wetterdaten"
    Exit Sub

End Sub



Private Sub cmdAllgemein_Click()
    frmAllgemein.Show
End Sub



Private Sub cmdSaveVersion_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Archiv").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
    
    Dim Spalte As Integer, letzte As Integer, i As Integer
    
    letzte = Sheets("Parameter").Cells(Rows.Count, 2).End(xlUp).Row 'letzte Zeile in Parameter
    
    Spalte = Sheets("Archiv").Cells(2, Columns.Count).End(xlToLeft).Column 'letzte Spalte im Archiv
    If Spalte = 2 Then
        Spalte = 3
    End If
    
    For i = 3 To Spalte
        If Sheets("Archiv").Cells(2, i).Value = Range("Name").Value Then 'Spalte |fffd|berschreiben
            ActiveWorkbook.Names.Add Name:="Par_Archiv", _
            RefersToR1C1:="= Archiv!R2C" & i & ":R" & letzte - 2 & "C" & i
            i = Spalte + 5
            Spalte = Spalte - 1
        ElseIf i = Spalte Then 'neues Projekt speichern
            ActiveWorkbook.Names.Add Name:="Par_Archiv", _
            RefersToR1C1:="= Archiv!R2C" & Spalte + 1 & ":R" & letzte - 2 & "C" & Spalte + 1
        End If
    Next
    
    ActiveWorkbook.Names.Add Name:="Parameters", _
    RefersTo:="= Parameter!$D$4:$D$" & letzte
        
    Range("Projektname").Value = Range("Name").Value
    
    Range("Parameters").Copy
    Range("Par_Archiv").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    
    
    Sheets("Hauptblatt").Select
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
    If DebugMode = 0 Then
'        Sheets("Archiv").Protect Password:=SCFWPW
        Sheets("Parameter").Protect Password:=SCFWPW
    End If

End Sub


Private Sub cmdLoadVersion_Click()
    frmLaden.Show
End Sub



Private Sub cmdTempzuEingabe_Click()
    Application.ScreenUpdating = False
    ActiveWorkbook.Sheets("Hauptblatt").Select
    ActiveWorkbook.Sheets("Temp").Visible = False
    
    If DebugMode = 0 Then
        Sheets("Temp").Protect Password:=SCFWPW
    End If
    
    frmKollektorfeld.Show
    Application.ScreenUpdating = True
End Sub



Private Sub cmdOrtzuEingabe_Click()
    ActiveWorkbook.Sheets("Hauptblatt").Select
    frmAllgemein.Show
End Sub



Private Sub cmdLastzuEingabe_Click()
' Speichern der eingegebenen Lastdaten im Blatt Last_Archiv
    
    On Error Resume Next
        
    Dim Antwort As Integer

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Sheets("Last_Archiv").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
'    Sheets("Last").Unprotect Password:=SCFWPW
    
    Dim letzte As Integer, Zeile As Integer, i As Integer, Testwert As Integer
    
    letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column
    
    ActiveWorkbook.Names.Add Name:="Lastprofil_neu", _
    RefersTo:="= Last!$B$11:$D$8770"

    
    If Range("Bearbeiten").Value = 0 Then
    'Auswahl des Blattes ohne Nutzung des Formulars Netz
        Antwort = MsgBox("M|fffd|chten Sie das bestehende Lastprofil '" & Range("Lastname").Value & "' |fffd|berschreiben?" & vbNewLine & vbNewLine & _
                "Um ein neues Lastprofil abzuspeichern, klicken Sie auf Nein," & vbNewLine & _
                "geben in das Feld links oben einen neuen Namen ein" & vbNewLine & _
                "und bet|fffd|tigen erneut 'Speichern'.", vbYesNo, "Lastprofil speichern")
        If Antwort = 6 Then
            Range("Bearbeiten").Value = 1
            Range("Testwert").Value = 1
            Sheets("Last").Select
        ElseIf Antwort = 7 Then
            Range("Bearbeiten").Value = 2
            Range("Testwert").Value = 1
            Sheets("Last").Select
            Exit Sub
        End If
    End If


    If Range("Bearbeiten").Value = 1 Then
    '|fffd|berschreiben des bestehenden Lastprofils
    
        For i = 2 To letzte
        If Sheets("Last_Archiv").Cells(2, i).Value = Sheets("Last").Range("B1").Value Then
            ActiveWorkbook.Names.Add Name:="Lastprofil_Archiv", _
            RefersToR1C1:="= Last_Archiv!R3C" & i & ":R8762C" & i
            i = letzte
        End If
        Next
        
        Range("Lastprofil_neu").Copy
        Range("Lastprofil_Archiv").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        
        Zeile = Round(letzte / 3, 0) + 1
        
        ActiveWorkbook.Names.Add Name:="List_Last", _
        RefersToR1C1:="= Last_Archiv!R2C" & letzte & ":R" & Zeile & "C" & letzte

        Application.CutCopyMode = False
        ActiveWorkbook.Sheets("Last").Select


    ElseIf Range("Bearbeiten").Value = 2 Then
        'Abspeichern eines neuen Lastprofils
        If letzte = 2 Then
            letzte = 5
        End If
        
        If Range("Testwert").Value = 1 Then
            Sheets("Last_Archiv").Cells(1, letzte).Value = ""
            Sheets("Last_Archiv").Cells(2, letzte).Value = Range("Lastname").Value
            Sheets("Last_Archiv").Cells(2, letzte + 1).Value = Range("Lastname").Value
            Sheets("Last_Archiv").Cells(2, letzte + 2).Value = Range("Lastname").Value
            letzte = letzte + 2
        End If
        
        ActiveWorkbook.Names.Add Name:="Lastprofil_Archiv", _
        RefersToR1C1:="= Last_Archiv!R3C" & letzte - 2 & ":R8762C" & letzte - 2
        
        Range("Lastprofil_neu").Copy
        Range("Lastprofil_Archiv").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        
        ' Namen aller Lastprofile in die erste freie Spalte schreiben
        ActiveWorkbook.Names.Add Name:="Names_Last", _
        RefersToR1C1:="= Last_Archiv!R2C3:R2C" & letzte

        ActiveWorkbook.Names.Add Name:="List_Last2", _
        RefersToR1C1:="= Last_Archiv!R2C" & letzte + 2 & ":R" & letzte - 1 & "C" & letzte + 2
        
        Zeile = Round(letzte / 3, 0) + 1
        
        ActiveWorkbook.Names.Add Name:="List_Last", _
        RefersToR1C1:="= Last_Archiv!R1C" & letzte + 1 & ":R" & Zeile & "C" & letzte + 1
        
        Range("Names_Last").Copy
        Range("List_Last2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=True
        
        Sheets("Last_Archiv").Range("List_Last2").AdvancedFilter _
        Action:=xlFilterCopy, _
        CopytoRange:=Sheets("Last_Archiv").Range("List_Last"), _
        Unique:=True
        
        Range("List_Last2").Value = ""
        
        ActiveWorkbook.Names.Add Name:="List_Last", _
        RefersToR1C1:="= Last_Archiv!R2C" & letzte + 1 & ":R" & Zeile & "C" & letzte + 1
        
        Sheets("Last_Archiv").Cells(1, letzte + 1).Value = ""

        Application.CutCopyMode = False
        ActiveWorkbook.Sheets("Last").Select

    End If
              
    Range("Last_neu").Value = Range("Lastname").Value
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True
   
    Range("Bearbeiten").Value = 0
    Range("|fffd|nderung").Value = 0
   
    If Range("Testwert").Value = 0 Then
        Application.ScreenUpdating = True
        ActiveWorkbook.Sheets("Hauptblatt").Select
        Range("Testwert").Value = 1
        frmNetz!cboLast.RowSource = "List_Last"
        frmNetz!cboLast.Value = Range("Last_neu")
    End If
    
    
    ActiveWorkbook.Sheets("Hauptblatt").Select
    
    If DebugMode = 0 Then
'        Sheets("Last").Protect Password:=SCFWPW
        Sheets("Last_Archiv").Protect Password:=SCFWPW
        Sheets("Parameter").Protect Password:=SCFWPW
    End If
    
    frmNetz.Show
    
End Sub


Private Sub cmdErgebniszuEingabe_Click()
    ActiveWorkbook.Sheets("Hauptblatt").Select
End Sub


    
Private Sub cmdPrintErgebnisse_Click()
    
    Application.ScreenUpdating = False
    
    With ActiveSheet.PageSetup
        .Orientation = xlPortrait
        .FitToPagesWide = 2
        .FitToPagesTall = 1
    End With
        Application.Dialogs(xlDialogPrint).Show
        
    Application.ScreenUpdating = True

End Sub

Private Sub cmdStart_Click()
    ActiveWorkbook.Sheets("Hauptblatt").Select
End Sub
Attribute VB_Name = "Collectors"
Option Explicit


Public Sub Zeile_Coll(Zeile, letzte)

    'Wiedergabe der Zeile in der Datenbank, in der der ausgew|fffd|hlte Kollektor steht

    Dim i As Integer
    letzte = Sheets("Kollektoren").Cells(Rows.Count, 2).End(xlUp).Row
    
    For i = 5 To letzte
        If frmKollektorfeld!cboKoll_Produkt.Value <> "" Then
            If Sheets("Kollektoren").Cells(i, 2).Value = frmKollektorfeld!cboKoll_Hersteller.Value And _
            Sheets("Kollektoren").Cells(i, 3).Value = frmKollektorfeld!cboKoll_Art.Value And _
            Sheets("Kollektoren").Cells(i, 4).Value = frmKollektorfeld!cboKoll_Produkt.Value Then
                Zeile = i
                Exit Sub
            End If
        Else
            If Sheets("Kollektoren").Cells(i, 2).Value = frmKollektorfeld!cboKoll_Hersteller.Value Then
                Zeile = i
                Exit Sub
            End If
        End If
    Next

End Sub



Public Sub Coll_Database()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Kollektoren").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW
    
    Dim Zeile As Integer, letzte As Integer, Cletzte As Integer
    
    letzte = Sheets("Kollektoren").Cells(Rows.Count, 2).End(xlUp).Row
    
    ActiveWorkbook.Names.Add Name:="Coll_Data", _
    RefersTo:="=" + Sheets("Kollektoren").[A1].CurrentRegion.Address(External:=True)
    
    ActiveWorkbook.Names.Add Name:="Coll_Manufacturer", _
    RefersTo:="= Kollektoren!$B$5:$B$" & letzte
    
    ActiveWorkbook.Names.Add Name:="Coll_Type", _
    RefersTo:="= Kollektoren!$C$5:$C$" & letzte
    
    ActiveWorkbook.Names.Add Name:="Coll_Names", _
    RefersTo:="= Kollektoren!$D$5:$D$" & letzte
        
    Sheets("Config").Columns(13) = ""
    Sheets("Config").Columns(14) = ""
    Sheets("Config").Columns(15) = ""
    
    'Liste mit den Herstellern im Blatt Config anlegen
    Sheets("Kollektoren").Range("Coll_Manufacturer").AdvancedFilter _
        Action:=xlFilterCopy, _
        CopytoRange:=Sheets("Config").Range("M4"), _
        Unique:=True
    
    
    Cletzte = Sheets("Config").Cells(Rows.Count, 13).End(xlUp).Row
    
    
    ActiveWorkbook.Names.Add Name:="Manufacturer", _
    RefersTo:="= Config!$M$4:$M$" & Cletzte
    
        Call Coll_Choice(letzte)
        

End Sub




Public Sub Coll_Choice(letzte)
    'Kollektortypen und Produkte zu dem gew|fffd|hlten Hersteller finden
    
    Dim i As Integer, j As Long, Zeile As Integer
    Dim Choice1 As String, Choice2 As String
    
    Sheets("Config").Range("Type") = ""
    Sheets("Config").Range("Product") = ""
    

    If frmKollektorfeld.Visible = False Then 'Vor Anzeige des Formulars
        Choice1 = Range("Koll_Hersteller").Value
        Choice2 = Range("Koll_Art").Value
    Else:
        Choice1 = frmKollektorfeld!cboKoll_Hersteller.Value
        Choice2 = frmKollektorfeld!cboKoll_Art.Value
    End If
    
    
    
    i = 4
    j = 4
    
    'Alle Eintr|fffd|ge zu diesem Hersteller finden
    For Zeile = 5 To letzte
        If Sheets("Kollektoren").Cells(Zeile, 2).Value = Choice1 Then
            If Sheets("Config").Cells(i - 1, 14).Value <> Sheets("Kollektoren").Cells(Zeile, 3).Value Then
                Sheets("Config").Cells(i, 14).Value = Sheets("Kollektoren").Cells(Zeile, 3).Value
                i = i + 1
            ElseIf Sheets("Config").Cells(i - 1, 14).Value = Sheets("Kollektoren").Cells(Zeile, 3).Value Then
                Sheets("Config").Cells(i, 14).Value = ""
            End If
        End If
    Next
    
   
    For Zeile = 5 To letzte
        If Sheets("Kollektoren").Cells(Zeile, 2).Value = Choice1 And _
            Sheets("Kollektoren").Cells(Zeile, 3).Value = Choice2 Then
            Sheets("Config").Cells(j, 15).Value = Sheets("Kollektoren").Cells(Zeile, 4).Value
            j = j + 1
        End If
    Next
    
    
    If i = 4 Then
        i = i
    Else: i = i - 1
    End If
    
    If j = 4 Then
        j = j
    Else: j = j - 1
    End If
    
    
    ActiveWorkbook.Names.Add Name:="Type", _
    RefersTo:="= Config!$N$4:$N$" & i
    
    ActiveWorkbook.Names.Add Name:="Product", _
    RefersTo:="= Config!$O$4:$O$" & j
    
    
End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Workbook_BeforeClose(Cancel As Boolean)

Dim arrSchutz, Calc As Integer, Blatt As Worksheet

    ' Wetterdaten f|fffd|r angelegte Orte werden ausgeblendet
    Worksheets("_Athen").Visible = xlSheetVeryHidden
    Worksheets("_Davos").Visible = xlSheetVeryHidden
    Worksheets("_Frankfurt").Visible = xlSheetVeryHidden
    Worksheets("_Hamburg").Visible = xlSheetVeryHidden
    Worksheets("_Stockholm").Visible = xlSheetVeryHidden
    Worksheets("_W|fffd|rzburg").Visible = xlSheetVeryHidden
    Worksheets("Wetterdaten").Visible = xlSheetVeryHidden
    
    ' Blattschutz einschalten, au|fffd|er f|fffd|r Blatt "Last" und "Archiv"
    arrSchutz = Array("Info", "Hauptblatt", "Ergebnisse", "Config", "Berechnung", "Berechnung System", _
    "Parameter", "Kollektoren", "Kdiff", "Temp", "Last_Archiv", "Neuer Ort", "_Athen", "_Davos", _
    "_Frankfurt", "_Hamburg", "_Stockholm", "_W|fffd|rzburg", "Wetterdaten") 'zu sch|fffd|tzende Bl|fffd|tter
    For Each Blatt In Worksheets
      If Not IsError(Application.Match(Blatt.Name, arrSchutz, 0)) Then
          Blatt.Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
      End If
    Next Blatt
    
    'Status Berechnungsoptionen wieder herstellen
    If Calc = 1 Then
        Application.Calculation = xlCalculationAutomatic
    ElseIf Calc = 0 Then
        Application.Calculation = xlCalculationManual
    End If
    
End Sub


Private Sub Workbook_Open()

Dim arrSchutz, Calc As Integer, Blatt As Worksheet

    ' Blattschutz einschalten, au|fffd|er f|fffd|r Blatt "Last" und "Archiv"
    arrSchutz = Array("Info", "Hauptblatt", "Ergebnisse", "Config", "Berechnung", "Berechnung System", _
    "Parameter", "Kollektoren", "Kdiff", "Temp", "Last_Archiv", "Neuer Ort", "_Athen", "_Davos", _
    "_Frankfurt", "_Hamburg", "_Stockholm", "_W|fffd|rzburg", "Wetterdaten") 'zu sch|fffd|tzende Bl|fffd|tter
    For Each Blatt In Worksheets
      If Not IsError(Application.Match(Blatt.Name, arrSchutz, 0)) Then
          Blatt.Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
      End If
    Next Blatt

    Worksheets("Info").Activate
    
    'Status Berechnungsoptionen abfragen und merken
    If Application.Calculation = xlCalculationAutomatic Then
        Application.Calculation = xlCalculationManual
        Calc = 1
    ElseIf Application.Calculation = xlCalculationManual Then
        Calc = 0
    End If
    
End Sub
Attribute VB_Name = "Functions"
Option Explicit



Function Seperator(text As Variant) As Variant


If Application.International(xlDecimalSeparator) = "." Then
    If IsNumeric(text) Then
        If Val("1.015") = 1.015 Then
            Seperator = Val(Replace(text, ",", "."))
        ElseIf Val("1,015") = 1.015 Then
            Seperator = Val(Replace(text, ".", ","))
        End If
    ElseIf InStr(text, ",") > 0 Then
        Seperator = Val(Replace(text, ",", "."))
    End If
    
ElseIf Application.International(xlDecimalSeparator) = "," Then
    If IsNumeric(text) Then
        If Val("1.015") = 1.015 Then
            Seperator = Val(Replace(text, ",", "."))
        ElseIf Val("1,015") = 1.015 Then
            Seperator = Val(Replace(text, ".", ","))
        End If
    ElseIf InStr(text, ",") > 0 Then
        Seperator = Val(Replace(text, ".", ","))
    End If
    
End If

If text = "" Then
    Seperator = ""
End If

End Function




Public Function SheetnameOK(txtOrt As String) As Boolean

    Dim Blatt As Object
    
    SheetnameOK = True
    
    If txtOrt = "_" Then
        SheetnameOK = False
        Exit Function
    End If
    
    If Len(txtOrt) > 30 Then
        SheetnameOK = False
        Exit Function
    End If
    
    If Application.Evaluate("=SUM((MID(""" & txtOrt & """,COLUMN(1:1),1)" & _
      "={"":"";""/"";""\"";""?"";""*"";""]"";""[""})*1)") > 0 Then
        SheetnameOK = False
        Exit Function
    End If
        
    For Each Blatt In ThisWorkbook.Sheets
        If Blatt.Name = txtOrt Then
            SheetnameOK = False
            Exit For
        End If
    Next Blatt
    
End Function
Attribute VB_Name = "Last"
Option Explicit



Public Sub Last_Berechnen()

    Application.ScreenUpdating = False
    Application.EnableEvents = False

    With Sheets("Last")
    
        If Range("L_VL_min") = "" And Range("L_VL_max") = "" And Range("L_RL_min") = "" And Range("L_RL_max") = "" Then
            Exit Sub
                        
        Else:
            'Formel zur Berechnung des Temperaturverlaufes wird in die gr|fffd|nen Zellen im Blatt Temp eingetragen
            .Range("B11:B8770").FormulaR1C1Local = "= Runden((((L_VL_max - L_VL_min) / 2) " & _
                " * Cos(((Z(0)S(-1) + 8760) * 360 / 8760) * pi / 180) " & _
                " + Mittelwert(L_VL_max;L_VL_min));2) "
        
            .Range("C11:C8770").FormulaR1C1Local = "= Runden((((L_RL_max - L_RL_min) / 2) " & _
                " * Cos(((Z(0)S(-2) + 8760/2) * 360 / 8760) * pi / 180) " & _
                " + Mittelwert(L_RL_max;L_RL_min));2) "
            
            'Kopieren der Daten, damit nur noch Werte in den Zellen stehen
            .Range("B11:B8770").Copy
            .Range("B11:B8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            .Range("C11:C8770").Copy
            .Range("C11:C8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            
            Application.CutCopyMode = False
        
        End If
    
        Sheets("Last").Calculate
    
    End With
    
        
    Application.EnableEvents = True
    Application.ScreenUpdating = True


End Sub


Attribute VB_Name = "Mappe"
Option Explicit

Public Const SCFWPW = "SCFW2017!"
Public Const Hauptblatt = "Hauptblatt"
Public Const DebugMode = 0 '0/1 zur Bearbeitung auf 1 setzen und Makro BlattschutzAus einmal ausf|fffd|hren


Sub Blattschutz()

Dim arrSchutz, Blatt As Worksheet

    ' Blattschutz einschalten, au|fffd|er f|fffd|r Blatt "Last" und "Archiv"
    arrSchutz = Array("Info", "Hauptblatt", "Ergebnisse", "Config", "Berechnung", "Berechnung System", _
    "Parameter", "Kollektoren", "Kdiff", "Temp", "Last_Archiv", "Neuer Ort", "_Athen", "_Davos", _
    "_Frankfurt", "_Hamburg", "_Stockholm", "_W|fffd|rzburg", "Wetterdaten") 'zu sch|fffd|tzende Bl|fffd|tter
    For Each Blatt In Worksheets
      If Not IsError(Application.Match(Blatt.Name, arrSchutz, 0)) Then
          Blatt.Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
      End If
    Next Blatt


End Sub


Sub BlattschutzAus()

    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    Application.ScreenUpdating = False

    Dim BlattNr As Integer
    For BlattNr = 1 To ThisWorkbook.Worksheets.Count
        Sheets(BlattNr).Unprotect Password:=SCFWPW
    Next BlattNr

    Application.EnableEvents = True
    Application.ScreenUpdating = True

'WENN(Kas=0;0.75*(VS*1000)^(0.5)*0.16

End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    'Bei Einkopieren von Daten aus einer anderen Excelmappe k|fffd|nnen die kopierten Zellen gesch|fffd|tzt sein
    'Deshalb Aufhebung des Schutzes in den gr|fffd|nen Zellen
    If Target.Column = 2 Or Target.Column = 3 Or Target.Column = 4 Or Target.Column = 5 Or Target.Column = 6 Then
        
        If ActiveSheet.ProtectContents = True Then
            ActiveSheet.Unprotect Password:=SCFWPW
        End If
        
        Range("B5:F8764").Locked = False
        Range("B2").Locked = False
        Range("D2:F2").Locked = False
        
        If DebugMode = 0 Then
            ActiveSheet.Protect Password:=SCFWPW
        End If
        
        Application.EnableEvents = True
        Application.ScreenUpdating = True


    End If

End Sub
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "chk_Netz, 31, 10, MSForms, CheckBox"
Attribute VB_Control = "chk_Rohre, 30, 11, MSForms, CheckBox"
Attribute VB_Control = "chk_WUE2, 29, 12, MSForms, CheckBox"
Attribute VB_Control = "chk_Speicher, 28, 13, MSForms, CheckBox"
Attribute VB_Control = "chk_WUE1, 27, 14, MSForms, CheckBox"
Option Explicit


Private Sub Worksheet_Activate()

    Application.ScreenUpdating = False
    
    On Error GoTo Fehler
    
    Range("A1", "O36").Select

    With ActiveWindow
        .Zoom = True
        .VisibleRange(4, 3).Select
    End With
    
    Application.ScreenUpdating = True
    
    Exit Sub
Fehler:
    Exit Sub

End Sub


Private Sub chk_Netz_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    If chk_Netz = True Then
       'Systemberechnung
        chk_Rohre = True
        chk_WUE1 = True
        chk_Speicher = True
        chk_WUE2 = True
        chk_Rohre.Enabled = True
        chk_WUE1.Enabled = True
        chk_Speicher.Enabled = True
        chk_WUE2.Enabled = True
        Sheets("Hauptblatt").Shapes("G_Netz").Visible = True
        
        Sheets("Parameter").Unprotect Password:=SCFWPW
        Sheets("Parameter").Range("Y_Netz").Value = 1
        
    ElseIf chk_Netz = False Then
        'ScenoCalc Berechnung
        chk_Rohre = False
        chk_WUE1 = False
        chk_Speicher = False
        chk_WUE2 = False
        chk_Rohre.Enabled = False
        chk_WUE1.Enabled = False
        chk_Speicher.Enabled = False
        chk_WUE2.Enabled = False
        Sheets("Hauptblatt").Shapes("G_Netz").Visible = False
        
        Sheets("Parameter").Unprotect Password:=SCFWPW
        Sheets("Parameter").Range("Y_Netz").Value = 0

    End If
    
    Application.EnableEvents = True
    
    Sheets("Config").Unprotect Password:=SCFWPW
    Sheets("Config").Range("change") = 1
    
    If Sheets("Config").Range("Aktualisierung") = 0 Then
        Sheets("Config").Unprotect Password:=SCFWPW
        Sheets("Config").Range("Aktualisierung") = 1
    End If
    

End Sub


Private Sub chk_Rohre_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    If chk_Rohre = True Then
        Sheets("Parameter").Range("Y_Rohre").Value = 1
        Sheets("Hauptblatt").Shapes("G_Rohre").Visible = True
        Sheets("Hauptblatt").Shapes("G_Pfeil1").Visible = True
                
    ElseIf chk_Rohre = False Then
        Sheets("Parameter").Range("Y_Rohre").Value = 0
        Sheets("Hauptblatt").Shapes("G_Rohre").Visible = False
        Sheets("Hauptblatt").Shapes("G_Pfeil1").Visible = False
    End If

    Application.EnableEvents = True
    Sheets("Config").Range("change") = 1
    
    If Sheets("Config").Range("Aktualisierung") = 0 Then
        Sheets("Config").Unprotect Password:=SCFWPW
        Sheets("Config").Range("Aktualisierung") = 1
    End If

    
End Sub



Private Sub chk_WUE1_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    If chk_WUE1 = True Then
        Sheets("Hauptblatt").Shapes("G_WUE1").Visible = True
        Sheets("Hauptblatt").Shapes("G_Pfeil2").Visible = True
        Sheets("Parameter").Range("Y_WT").Value = 1
    End If
    
    If chk_WUE1 = False Then
        Sheets("Hauptblatt").Shapes("G_WUE1").Visible = False
        Sheets("Hauptblatt").Shapes("G_Pfeil2").Visible = False
        Sheets("Parameter").Range("Y_WT").Value = 0
    End If

    Application.EnableEvents = True
    Sheets("Config").Range("change") = 1
    
    If Sheets("Config").Range("Aktualisierung") = 0 Then
        Sheets("Config").Unprotect Password:=SCFWPW
        Sheets("Config").Range("Aktualisierung") = 1
    End If

End Sub


Private Sub chk_Speicher_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    
    If chk_Speicher = True Then
        Sheets("Parameter").Range("Y_Speicher").Value = 1
        Sheets("Hauptblatt").Shapes("G_Speicher").Visible = True
        Sheets("Hauptblatt").Shapes("G_Pfeil3").Visible = True
        chk_WUE2.Enabled = True
        
        Application.EnableEvents = True
    
        Sheets("Config").Range("change") = 1
    
        If Sheets("Config").Range("Aktualisierung") = 0 Then
            Sheets("Config").Unprotect Password:=SCFWPW
            Sheets("Config").Range("Aktualisierung") = 1
        End If

    ElseIf chk_Speicher = False Then
        Sheets("Parameter").Range("Y_Speicher").Value = 0
        Sheets("Hauptblatt").Shapes("G_Speicher").Visible = False
        Sheets("Hauptblatt").Shapes("G_Pfeil3").Visible = False
        Sheets("Hauptblatt").Shapes("G_WUE2").Visible = False
        Sheets("Hauptblatt").Shapes("G_Pfeil4").Visible = False
        chk_WUE2 = True
        chk_WUE2 = False
        chk_WUE2.Enabled = False

    End If

End Sub


Private Sub chk_WUE2_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    If chk_WUE2 = True Then
        Sheets("Hauptblatt").Shapes("G_WUE2").Visible = True
        Sheets("Hauptblatt").Shapes("G_Pfeil4").Visible = True
        Sheets("Parameter").Range("YWT_Netz").Value = 1

    ElseIf chk_WUE2 = False Then
        Sheets("Hauptblatt").Shapes("G_WUE2").Visible = False
        Sheets("Hauptblatt").Shapes("G_Pfeil4").Visible = False
        Sheets("Parameter").Range("YWT_Netz").Value = 0
    End If

    Application.EnableEvents = True
    
    Sheets("Config").Range("change") = 1
    
    If Sheets("Config").Range("Aktualisierung") = 0 Then
        Sheets("Config").Unprotect Password:=SCFWPW
        Sheets("Config").Range("Aktualisierung") = 1
    End If

End Sub





Attribute VB_Name = "Tabelle23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle31"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Worksheet_Change(ByVal Target As Range)
    

    If Not Application.Intersect(Target, Range("Aktualisierung")) Is Nothing Then
        If Target = Range("Aktualisierung") Then
            
            If Range("Aktualisierung").Value = 1 Then
                Sheets("Hauptblatt").Unprotect Password:=SCFWPW
                Sheets("Hauptblatt").Range("A12:O36").Font.ColorIndex = 2
                Sheets("Hauptblatt").Range("A8:B9").Font.ColorIndex = 2
                
                If DebugMode = 0 Then
                    Sheets("Config").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
                    Sheets("Hauptblatt").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
                    Sheets("Parameter").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
                End If
                
                Application.ScreenUpdating = True

            Else:
                Sheets("Hauptblatt").Unprotect Password:=SCFWPW
                Sheets("Hauptblatt").Range("A12:O36").Font.ColorIndex = 1
                Sheets("Hauptblatt").Range("A8:B9").Font.ColorIndex = 1
                
                If DebugMode = 0 Then
                    Sheets("Config").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
                    Sheets("Hauptblatt").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
                    Sheets("Parameter").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
                End If

            End If
               
        End If
    End If
    
    
    
    If Not Application.Intersect(Target, Range("change")) Is Nothing Then
        'wenn es eine Ver|fffd|nderung bei den Checkboxen gab
        
        Sheets("Config").Unprotect Password:=SCFWPW
        
        If Sheets("Config").Range("change").Value = 1 Then
            
            If Sheets("Hauptblatt").chk_Rohre = True Then
                Sheets("Config").Range("Anzeige") = 1
                If Sheets("Hauptblatt").chk_Speicher = True Then
                    Sheets("Config").Range("Anzeige") = 3
                ElseIf Sheets("Hauptblatt").chk_Speicher = False Then
                    Sheets("Config").Range("Anzeige") = 1
                End If
                
            ElseIf Sheets("Hauptblatt").chk_Rohre = False Then
                Sheets("Config").Range("Anzeige") = 10
                If Sheets("Hauptblatt").chk_Speicher = True Then
                    Sheets("Config").Range("Anzeige") = 2
                ElseIf Sheets("Hauptblatt").chk_Speicher = False Then
                    Sheets("Config").Range("Anzeige") = 12
                End If
                
                If Sheets("Hauptblatt").chk_Netz = False Then
                    Sheets("Config").Range("Anzeige") = 0
                End If
            
            End If
            
            Sheets("Hauptblatt").Unprotect Password:=SCFWPW
            Sheets("Hauptblatt").Range("A12:O36").Font.ColorIndex = 2

            Range("change").Value = 0
            
        End If
        
        If DebugMode = 0 Then
            Sheets("Config").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
            Sheets("Parameter").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
            Sheets("Hauptblatt").Protect Password:=SCFWPW, UserInterfaceOnly:=False, DrawingObjects:=True, Contents:=True, Scenarios:=True
        End If
        
    End If
    
    ActiveWorkbook.Sheets("Hauptblatt").Select
    
End Sub
Attribute VB_Name = "Tabelle32"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Worksheet_Activate()
    
'    Bei Einkopieren von Daten aus einer anderen Excelmappe k|fffd|nnen die kopierten Zellen gesch|fffd|tzt sein
'    Deshalb Aufhebung des Schutzes in den gr|fffd|nen Zellen

        Application.ScreenUpdating = False
        Application.EnableEvents = False

        If Sheets("Temp").ProtectContents = True Then
            Sheets("Temp").Unprotect Password:=SCFWPW
        End If

        Range("B11:B8770").Locked = False
        Range("C11:C8770").Locked = False
        Range("B4:C5").Locked = False

        Application.EnableEvents = True
        Application.ScreenUpdating = True


End Sub


Private Sub Worksheet_SelectionChange(ByVal Target As Range)

'damit die Zellen nicht gesperrt werden

End Sub
Attribute VB_Name = "Tabelle33"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



Private Sub Worksheet_Activate()
    
'    Bei Einkopieren von Daten aus einer anderen Excelmappe k|fffd|nnen die kopierten Zellen gesch|fffd|tzt sein
'    Deshalb Aufhebung des Schutzes in den gr|fffd|nen Zellen

        Application.ScreenUpdating = False
        Application.EnableEvents = False

        If Sheets("Last").ProtectContents = True Then
            Sheets("Last").Unprotect Password:=SCFWPW
        End If

        Range("B11:B8770").Locked = False
        Range("C11:C8770").Locked = False
        Range("D11:D8770").Locked = False
        Range("B4:C5").Locked = False

        Application.EnableEvents = True
        Application.ScreenUpdating = True


End Sub



Private Sub Worksheet_SelectionChange(ByVal Target As Range)

'damit die Zellen nicht gesperrt werden

End Sub



Private Sub Worksheet_Change(ByVal Target As Range)
 
    If Target.Column = 2 Or Target.Column = 3 Or Target.Column = 4 Then

        Application.ScreenUpdating = False
        Application.EnableEvents = False

        Range("|fffd|nderung").Value = 1

        Application.EnableEvents = True
        Application.ScreenUpdating = True

    End If
 

End Sub




Private Sub Worksheet_Deactivate()

    Dim Antwort As Integer
    Dim letzte As Integer, Zeile As Integer
    
    letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 2

    If Sheets("Last").Range("Bearbeiten").Value = 2 Then
        Antwort = MsgBox("Speichern Sie bitte das Lastprofil, bevor Sie diese Seite verlassen!", vbOKCancel, "Lastprofil speichern")
        If Antwort = vbOK Then
            Sheets("Last").Activate
            Exit Sub
        ElseIf Antwort = vbCancel Then
            Sheets("Last").Range("Bearbeiten").Value = 0
            
            Sheets("Last_Archiv").Cells(2, letzte + 1).Value = ""
            Sheets("Last_Archiv").Cells(2, letzte + 2).Value = ""
            
            ' Namen aller Lastprofile in die erste freie Spalte schreiben
            ActiveWorkbook.Names.Add Name:="Names_Last", _
            RefersToR1C1:="= Last_Archiv!R2C3:R2C" & letzte - 1
    
            ActiveWorkbook.Names.Add Name:="List_Last2", _
            RefersToR1C1:="= Last_Archiv!R2C" & letzte + 1 & ":R" & letzte - 1 & "C" & letzte + 1
            
            Zeile = Round(letzte / 3, 0) + 1
            
            ActiveWorkbook.Names.Add Name:="List_Last", _
            RefersToR1C1:="= Last_Archiv!R1C" & letzte & ":R" & Zeile & "C" & letzte
            
            Sheets("Last_Archiv").Range("Names_Last").Copy
            Sheets("Last_Archiv").Range("List_Last2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=True
            
            Sheets("Last_Archiv").Range("List_Last2").AdvancedFilter _
            Action:=xlFilterCopy, _
            CopytoRange:=Sheets("Last_Archiv").Range("List_Last"), _
            Unique:=True
            
            Sheets("Last_Archiv").Range("List_Last2").Value = ""
            
            ActiveWorkbook.Names.Add Name:="List_Last", _
            RefersToR1C1:="= Last_Archiv!R2C" & letzte + 1 & ":R" & Zeile & "C" & letzte + 1
            
            Sheets("Last_Archiv").Cells(1, letzte).Value = ""
    
            Application.CutCopyMode = False
'            ActiveWorkbook.Sheets("Last").Select
            
            Sheets("Last").Range("Lastname").Value = Sheets("Parameter").Range("Last_neu").Value
            
            Sheets("Last").Range("|fffd|nderung").Value = 0

            
            Exit Sub
        End If
    End If


    If Range("|fffd|nderung").Value = 1 Then
        Antwort = MsgBox("Speichern Sie bitte das Lastprofil, bevor Sie diese Seite verlassen!", vbOKCancel, "Lastprofil speichern")
        If Antwort = vbOK Then
            Sheets("Last").Activate
            Exit Sub
        ElseIf Antwort = vbCancel Then
            Range("|fffd|nderung").Value = 0
            Exit Sub
        End If
    End If

    Range("Testwert").Value = 0
    Range("|fffd|nderung").Value = 0

End Sub




Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



Private Sub Worksheet_Activate()

    Application.EnableEvents = False
    Application.ScreenUpdating = False
    
    If Sheets("Config").Range("Aktualisierung").Value = 0 Then
    
        'Hauptblatt als Bild in die Ergebnisse kopieren
        Sheets("Ergebnisse").Unprotect Password:=SCFWPW
        
        On Error Resume Next
        Sheets("Ergebnisse").Shapes("G_Hauptblatt").Delete
        
        Sheets("Hauptblatt").Range("A1:O37").CopyPicture Appearance:=xlScreen, Format:=xlPicture
    
        Sheets("Ergebnisse").Paste Range("A5")
        
        Selection.ShapeRange.LockAspectRatio = msoTrue
        Selection.ShapeRange.Height = 515
        Selection.Name = "G_Hauptblatt"
        Sheets("Ergebnisse").Shapes("G_Hauptblatt").Rotation = -90
        
        Sheets("Ergebnisse").Shapes("G_Hauptblatt").Cut
        Sheets("Ergebnisse").Paste Range("A2")
        Selection.ShapeRange.LockAspectRatio = msoFalse
        Selection.ShapeRange.Width = 775
        Selection.SendToBack
        
        Application.CutCopyMode = False
        
        If DebugMode = 0 Then
            Sheets("Ergebnisse").Protect Password:=SCFWPW
        End If
        
        Application.EnableEvents = True
        Application.ScreenUpdating = True
    
    ElseIf Sheets("Config").Range("Aktualisierung").Value = 1 Then
        MsgBox "Die angezeigten Ergebnisse sind nicht aktuell. Berechnen Sie die Ergebnisse neu, um sie anzuzeigen.", vbOKOnly, "Berechnung"
    End If
    
End Sub


Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Temp"
Option Explicit


Public Sub Temp_Berechnen()

    Application.ScreenUpdating = False
    Application.EnableEvents = False


    With Sheets("Temp")
    
    
    
        If Range("VL_min") = "" And Range("VL_max") = "" And Range("RL_min") = "" And Range("RL_max") = "" Then
            'nur Berechnung des Mittelwerts
            .Range("E11:E8770").FormulaR1C1Local = "= Runden(Mittelwert(Z(0)S(-3);Z(0)S(-2));2) "
            .Range("E11:E8770").Copy
            .Range("E11:E8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Application.CutCopyMode = False
        Else:
            'Formel zur Berechnung des Temperaturverlaufes wird in die gr|fffd|nen Zellen im Blatt Temp eingetragen
            .Range("B11:B8770").FormulaR1C1Local = "= Runden((((VL_max - VL_min) / 2) " & _
                " * Cos(((Z(0)S(-1) + 8760) * 360 / 8760) * pi / 180) " & _
                " + Mittelwert(VL_max;VL_min));2) "
        
            .Range("C11:C8770").FormulaR1C1Local = "= Runden((((RL_max - RL_min) / 2) " & _
                " * Cos(((Z(0)S(-2) + 8760/2) * 360 / 8760) * pi / 180) " & _
                " + Mittelwert(RL_max;RL_min));2) "
            
            .Range("E11:E8770").FormulaR1C1Local = "= Runden(Mittelwert(Z(0)S(-3);Z(0)S(-2));2) "
            
            'Kopieren der Daten, damit nur noch Werte in den Zellen stehen
            .Range("B11:B8770").Copy
            .Range("B11:B8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            .Range("C11:C8770").Copy
            .Range("C11:C8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            .Range("E11:E8770").Copy
            .Range("E11:E8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Application.CutCopyMode = False
        End If
    
    End With

    Application.EnableEvents = True
    Application.ScreenUpdating = True


End Sub
Attribute VB_Name = "Weather"
Option Explicit



Private Sub ausblenden()
    ' Wetterdaten f|fffd|r die vorab angelegten Orte werden ausgeblendet
    Worksheets("_Athen").Visible = xlSheetVeryHidden
    Worksheets("_Davos").Visible = xlSheetVeryHidden
    Worksheets("_Frankfurt").Visible = xlSheetVeryHidden
    Worksheets("_Hamburg").Visible = xlSheetVeryHidden
    Worksheets("_Stockholm").Visible = xlSheetVeryHidden
    Worksheets("_W|fffd|rzburg").Visible = xlSheetVeryHidden
    Worksheets("Wetterdaten").Visible = xlSheetVeryHidden
    
End Sub


Private Sub einblenden()

    'ausgeblendete Bl|fffd|tter k|fffd|nnen nur |fffd|ber das Makro wieder eingeblendet werden
    Worksheets("_Athen").Visible = True
    Worksheets("_Davos").Visible = True
    Worksheets("_Frankfurt").Visible = True
    Worksheets("_Hamburg").Visible = True
    Worksheets("_Stockholm").Visible = True
    Worksheets("_W|fffd|rzburg").Visible = True
    Worksheets("Wetterdaten").Visible = True

End Sub




Attribute VB_Name = "frmAllgemein"
Attribute VB_Base = "0{D25EA58C-6CF1-4E48-BB1C-FA86263E0687}{2302353A-D429-4D0A-985C-618A9136BE5B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 245)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 400)

    txtDatStart.Value = Left(Range("StartDatum").Value, 5)
    txtDatEnd.Value = Left(Range("EndDatum").Value, 5)
    
    On Error GoTo Fehler
    cboStandort.Value = Range("Ort").Value
    Exit Sub
    
Fehler:
    cboStandort.Value = Sheets("Config").Range("Q6")

End Sub


Private Sub cmdStandort_Click()
    Me.Hide
    frmNeuerOrt.Show
End Sub


Private Sub cmdOK_Click()
    
    Application.ScreenUpdating = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW
    
    Range("Ort").Value = cboStandort.Value
    
    On Error GoTo Fehler 'wenn ein falsches Datum eingegeben wird
    Range("StartDatum").Value = CDate(txtDatStart.Value & ".2015")
    Range("EndDatum").Value = CDate(txtDatEnd.Value & ".2015")
    Range("StartTag").Value = Day(Range("StartDatum"))
    Range("StartMonat").Value = Month(Range("StartDatum"))
    Range("EndTag").Value = Day(Range("EndDatum"))
    Range("EndMonat").Value = Month(Range("EndDatum"))
    
    Range("Aktualisierung") = 1
    
    If DebugMode = 0 Then
        Sheets("Parameter").Protect Password:=SCFWPW
        Sheets("Config").Protect Password:=SCFWPW
    End If
    
    Unload Me
    Application.ScreenUpdating = True
    
    Exit Sub
    
Fehler:
    MsgBox "Bitte geben Sie ein g|fffd|ltiges Datum ein.", vbOKOnly, "Ung|fffd|ltiges Datum"

End Sub



Private Sub cmdCancel_Click()
    Unload Me
End Sub


Attribute VB_Name = "frmKollektor"
Attribute VB_Base = "0{262A96E2-6F43-4713-AD3E-2304B6D73E45}{46FEF4F7-008D-4074-8FC6-C0C794AE41D7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit



Public Sub UserForm_Initialize()

   Dim Zeile As Integer, letzte As Integer
   
   Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 555)
   Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 538)
   
    'Kollektorauswahl wird aus dem Kollektorfeldformular |fffd|bernommen
    txtHersteller = frmKollektorfeld!cboKoll_Hersteller.Value
    txtKollArt.Value = frmKollektorfeld!cboKoll_Art.Value
    txtProdukt.Value = frmKollektorfeld!cboKoll_Produkt.Value
    txtZertifikat.Value = frmKollektorfeld!txtKoll_Zertifikat.Value
    
    
    'Kollektordaten aus der Kollektordatenbank laden
    
    Call Zeile_Coll(Zeile, letzte)


    txt_KollAG.Value = Sheets("Kollektoren").Cells(Zeile, 13).Value
    txt_KollAAp.Value = Sheets("Kollektoren").Cells(Zeile, 14).Value
    
    txt_Eta0hem.Value = Sheets("Kollektoren").Cells(Zeile, 5).Value
    txt_a1.Value = Sheets("Kollektoren").Cells(Zeile, 6).Value
    txt_a2.Value = Sheets("Kollektoren").Cells(Zeile, 7).Value
    txt_Eta0b.Value = Sheets("Kollektoren").Cells(Zeile, 8).Value
    txt_c1.Value = Sheets("Kollektoren").Cells(Zeile, 9).Value
    txt_c2.Value = Sheets("Kollektoren").Cells(Zeile, 10).Value
    txt_c3.Value = Sheets("Kollektoren").Cells(Zeile, 11).Value
    txt_Ktd.Value = Sheets("Kollektoren").Cells(Zeile, 12).Value
    
    If Sheets("Kollektoren").Cells(Zeile, 15).Value = 1 Then
        optBezugG = True
    Else: optBezugAp = True
    End If
    
    If Sheets("Kollektoren").Cells(Zeile, 8).Value > 0 Then
        cboMethode.Value = "Quasi dynamisch"
    Else: cboMethode.Value = "Station|fffd|r"
    End If
    
    txt_West0.Value = Sheets("Kollektoren").Cells(Zeile, 16).Value
    txt_West10.Value = Sheets("Kollektoren").Cells(Zeile, 17).Value
    txt_West20.Value = Sheets("Kollektoren").Cells(Zeile, 18).Value
    txt_West30.Value = Sheets("Kollektoren").Cells(Zeile, 19).Value
    txt_West40.Value = Sheets("Kollektoren").Cells(Zeile, 20).Value
    txt_West50.Value = Sheets("Kollektoren").Cells(Zeile, 21).Value
    txt_West60.Value = Sheets("Kollektoren").Cells(Zeile, 22).Value
    txt_West70.Value = Sheets("Kollektoren").Cells(Zeile, 23).Value
    txt_West80.Value = Sheets("Kollektoren").Cells(Zeile, 24).Value
    txt_West90.Value = Sheets("Kollektoren").Cells(Zeile, 25).Value
    
    txt_Nord0.Value = Sheets("Kollektoren").Cells(Zeile, 26).Value
    txt_Nord10.Value = Sheets("Kollektoren").Cells(Zeile, 27).Value
    txt_Nord20.Value = Sheets("Kollektoren").Cells(Zeile, 28).Value
    txt_Nord30.Value = Sheets("Kollektoren").Cells(Zeile, 29).Value
    txt_Nord40.Value = Sheets("Kollektoren").Cells(Zeile, 30).Value
    txt_Nord50.Value = Sheets("Kollektoren").Cells(Zeile, 31).Value
    txt_Nord60.Value = Sheets("Kollektoren").Cells(Zeile, 32).Value
    txt_Nord70.Value = Sheets("Kollektoren").Cells(Zeile, 33).Value
    txt_Nord80.Value = Sheets("Kollektoren").Cells(Zeile, 34).Value
    txt_Nord90.Value = Sheets("Kollektoren").Cells(Zeile, 35).Value
    
    txt_KollCeff.Value = Sheets("Kollektoren").Cells(Zeile, 36).Value
    
    If txt_Nord0.Value = txt_West0.Value And txt_Nord10.Value = txt_West10.Value And txt_Nord20.Value = txt_West20.Value _
    And txt_Nord30.Value = txt_West30.Value And txt_Nord40.Value = txt_West40.Value And txt_Nord50.Value = txt_West50.Value _
    And txt_Nord60.Value = txt_West60.Value And txt_Nord70.Value = txt_West70.Value And txt_Nord80.Value = txt_West80.Value _
    And txt_Nord90.Value = txt_West90.Value Then
        chk_bidirektional.Value = False
        chk_simple.Enabled = True
        txt_Nord0 = ""
        txt_Nord10 = ""
        txt_Nord20 = ""
        txt_Nord30 = ""
        txt_Nord40 = ""
        txt_Nord50 = ""
        txt_Nord60 = ""
        txt_Nord70 = ""
        txt_Nord80 = ""
        txt_Nord90 = ""
        txt_Nord0.Enabled = False
        txt_Nord10.Enabled = False
        txt_Nord20.Enabled = False
        txt_Nord30.Enabled = False
        txt_Nord40.Enabled = False
        txt_Nord50.Enabled = False
        txt_Nord60.Enabled = False
        txt_Nord70.Enabled = False
        txt_Nord80.Enabled = False
        txt_Nord90.Enabled = False
        txt_Nord0.BackColor = &H80000016
        txt_Nord10.BackColor = &H80000016
        txt_Nord20.BackColor = &H80000016
        txt_Nord30.BackColor = &H80000016
        txt_Nord40.BackColor = &H80000016
        txt_Nord50.BackColor = &H80000016
        txt_Nord60.BackColor = &H80000016
        txt_Nord70.BackColor = &H80000016
        txt_Nord80.BackColor = &H80000016
        txt_Nord90.BackColor = &H80000016

    Else:
        chk_bidirektional.Value = True
        chk_simple.Enabled = False
        txt_Nord0.Enabled = True
        txt_Nord10.Enabled = True
        txt_Nord20.Enabled = True
        txt_Nord30.Enabled = True
        txt_Nord40.Enabled = True
        txt_Nord50.Enabled = True
        txt_Nord60.Enabled = True
        txt_Nord70.Enabled = True
        txt_Nord80.Enabled = True
        txt_Nord90.Enabled = True

        txt_Nord0.BackColor = &H80000005
        txt_Nord10.BackColor = &H80000005
        txt_Nord20.BackColor = &H80000005
        txt_Nord30.BackColor = &H80000005
        txt_Nord40.BackColor = &H80000005
        txt_Nord50.BackColor = &H80000005
        txt_Nord60.BackColor = &H80000005
        txt_Nord70.BackColor = &H80000005
        txt_Nord80.BackColor = &H80000005
        txt_Nord90.BackColor = &H80000005

    End If

    If Sheets("Kollektoren").Cells(Zeile, 16).Value = "" And Sheets("Kollektoren").Cells(Zeile, 21).Value > 0 Then
        chk_simple = True
    End If


End Sub

Private Sub cboMethode_Change()

    Dim Zeile As Integer, letzte As Integer
    Call Zeile_Coll(Zeile, letzte)
    
    If cboMethode = "Station|fffd|r" Then
        txt_Eta0hem.Enabled = True
        txt_a1.Enabled = True
        txt_a2.Enabled = True
        txt_Eta0b.Enabled = False
        txt_Ktd.Enabled = False
        txt_c1.Enabled = False
        txt_c2.Enabled = False
        txt_c3.Enabled = False
        
        txt_Eta0hem.BackColor = &H80000005
        txt_a1.BackColor = &H80000005
        txt_a2.BackColor = &H80000005
        txt_Eta0b.BackColor = &H80000016
        txt_Ktd.BackColor = &H80000016
        txt_c1.BackColor = &H80000016
        txt_c2.BackColor = &H80000016
        txt_c3.BackColor = &H80000016
        
        If Zeile = 0 Then 'Fehler bei leerem Formular abfangen
            Exit Sub
        Else:
            txt_Eta0hem.Value = Sheets("Kollektoren").Cells(Zeile, 5).Value
            txt_a1.Value = Sheets("Kollektoren").Cells(Zeile, 6).Value
            txt_a2.Value = Sheets("Kollektoren").Cells(Zeile, 7).Value
        End If
        

        txt_Eta0b.Value = ""
        txt_Ktd.Value = ""
        txt_c1.Value = ""
        txt_c2.Value = ""
        txt_c3.Value = ""
    
    ElseIf cboMethode = "Quasi dynamisch" Then
        txt_Eta0hem.Enabled = False
        txt_a1.Enabled = False
        txt_a2.Enabled = False
        txt_Eta0b.Enabled = True
        txt_Ktd.Enabled = True
        txt_c1.Enabled = True
        txt_c2.Enabled = True
        txt_c3.Enabled = True
        
        txt_Eta0hem.BackColor = &H80000016
        txt_a1.BackColor = &H80000016
        txt_a2.BackColor = &H80000016
        txt_Eta0b.BackColor = &H80000005
        txt_Ktd.BackColor = &H80000005
        txt_c1.BackColor = &H80000005
        txt_c2.BackColor = &H80000005
        txt_c3.BackColor = &H80000005
    
        txt_Eta0hem.Value = ""
        txt_a1.Value = ""
        txt_a2.Value = ""

        If Zeile = 0 Then 'Fehler bei leerem Formular abfangen
            Exit Sub
        Else:
            txt_Eta0b.Value = Sheets("Kollektoren").Cells(Zeile, 8).Value
            txt_c1.Value = Sheets("Kollektoren").Cells(Zeile, 9).Value
            txt_c2.Value = Sheets("Kollektoren").Cells(Zeile, 10).Value
            txt_c3.Value = Sheets("Kollektoren").Cells(Zeile, 11).Value
            txt_Ktd.Value = Sheets("Kollektoren").Cells(Zeile, 12).Value
        End If

        
    Else
        txt_Eta0hem.Enabled = True
        txt_a1.Enabled = True
        txt_a2.Enabled = True
        txt_Eta0b.Enabled = True
        txt_Ktd.Enabled = True
        txt_c1.Enabled = True
        txt_c2.Enabled = True
        txt_c3.Enabled = True
        
        txt_Eta0hem.BackColor = &H80000005
        txt_a1.BackColor = &H80000005
        txt_a2.BackColor = &H80000005
        txt_Eta0b.BackColor = &H80000005
        txt_Ktd.BackColor = &H80000005
        txt_c1.BackColor = &H80000005
        txt_c2.BackColor = &H80000005
        txt_c3.BackColor = &H80000005
        
        If Zeile = 0 Then 'Fehler bei leerem Formular abfangen
            Exit Sub
        Else:
            txt_Eta0hem.Value = Sheets("Kollektoren").Cells(Zeile, 5).Value
            txt_a1.Value = Sheets("Kollektoren").Cells(Zeile, 6).Value
            txt_a2.Value = Sheets("Kollektoren").Cells(Zeile, 7).Value
            txt_Eta0b.Value = Sheets("Kollektoren").Cells(Zeile, 8).Value
            txt_c1.Value = Sheets("Kollektoren").Cells(Zeile, 9).Value
            txt_c2.Value = Sheets("Kollektoren").Cells(Zeile, 10).Value
            txt_c3.Value = Sheets("Kollektoren").Cells(Zeile, 11).Value
            txt_Ktd.Value = Sheets("Kollektoren").Cells(Zeile, 12).Value
        End If
        
    End If

    
End Sub


Private Sub chk_bidirektional_Click()

    Dim Zeile As Integer, letzte As Integer
    Call Zeile_Coll(Zeile, letzte)

    If chk_bidirektional = False Then
    
        chk_simple.Enabled = True
    
        txt_Nord0 = ""
        txt_Nord10 = ""
        txt_Nord20 = ""
        txt_Nord30 = ""
        txt_Nord40 = ""
        txt_Nord50 = ""
        txt_Nord60 = ""
        txt_Nord70 = ""
        txt_Nord80 = ""
        txt_Nord90 = ""
    
        txt_Nord0.Enabled = False
        txt_Nord10.Enabled = False
        txt_Nord20.Enabled = False
        txt_Nord30.Enabled = False
        txt_Nord40.Enabled = False
        txt_Nord50.Enabled = False
        txt_Nord60.Enabled = False
        txt_Nord70.Enabled = False
        txt_Nord80.Enabled = False
        txt_Nord90.Enabled = False
        
        txt_Nord0.BackColor = &H80000016
        txt_Nord10.BackColor = &H80000016
        txt_Nord20.BackColor = &H80000016
        txt_Nord30.BackColor = &H80000016
        txt_Nord40.BackColor = &H80000016
        txt_Nord50.BackColor = &H80000016
        txt_Nord60.BackColor = &H80000016
        txt_Nord70.BackColor = &H80000016
        txt_Nord80.BackColor = &H80000016
        txt_Nord90.BackColor = &H80000016
        
    ElseIf chk_bidirektional = True Then
    
        chk_simple.Enabled = False
        chk_simple = False
    
        txt_Nord0.Enabled = True
        txt_Nord10.Enabled = True
        txt_Nord20.Enabled = True
        txt_Nord30.Enabled = True
        txt_Nord40.Enabled = True
        txt_Nord50.Enabled = True
        txt_Nord60.Enabled = True
        txt_Nord70.Enabled = True
        txt_Nord80.Enabled = True
        txt_Nord90.Enabled = True
        
        txt_Nord0.BackColor = &H80000005
        txt_Nord10.BackColor = &H80000005
        txt_Nord20.BackColor = &H80000005
        txt_Nord30.BackColor = &H80000005
        txt_Nord40.BackColor = &H80000005
        txt_Nord50.BackColor = &H80000005
        txt_Nord60.BackColor = &H80000005
        txt_Nord70.BackColor = &H80000005
        txt_Nord80.BackColor = &H80000005
        txt_Nord90.BackColor = &H80000005
        
        If Zeile = 0 Then 'Fehler bei leerem Formular abfangen
            Exit Sub
        Else:
            txt_Nord0.Value = Sheets("Kollektoren").Cells(Zeile, 26).Value
            txt_Nord10.Value = Sheets("Kollektoren").Cells(Zeile, 27).Value
            txt_Nord20.Value = Sheets("Kollektoren").Cells(Zeile, 28).Value
            txt_Nord30.Value = Sheets("Kollektoren").Cells(Zeile, 29).Value
            txt_Nord40.Value = Sheets("Kollektoren").Cells(Zeile, 30).Value
            txt_Nord50.Value = Sheets("Kollektoren").Cells(Zeile, 31).Value
            txt_Nord60.Value = Sheets("Kollektoren").Cells(Zeile, 32).Value
            txt_Nord70.Value = Sheets("Kollektoren").Cells(Zeile, 33).Value
            txt_Nord80.Value = Sheets("Kollektoren").Cells(Zeile, 34).Value
            txt_Nord90.Value = Sheets("Kollektoren").Cells(Zeile, 35).Value
        End If
    
    End If

End Sub


Private Sub chk_simple_Click()

    Dim Zeile As Integer, letzte As Integer
    Call Zeile_Coll(Zeile, letzte)

    If chk_simple = True Then
    
        cmdInterpolate.Visible = False
    
        txt_West0 = ""
        txt_West10 = ""
        txt_West20 = ""
        txt_West30 = ""
        txt_West40 = ""
        txt_West60 = ""
        txt_West70 = ""
        txt_West80 = ""
        txt_West90 = ""
    
        txt_West0.Enabled = False
        txt_West10.Enabled = False
        txt_West20.Enabled = False
        txt_West30.Enabled = False
        txt_West40.Enabled = False
        txt_West60.Enabled = False
        txt_West70.Enabled = False
        txt_West80.Enabled = False
        txt_West90.Enabled = False
        
        txt_West0.BackColor = &H80000016
        txt_West10.BackColor = &H80000016
        txt_West20.BackColor = &H80000016
        txt_West30.BackColor = &H80000016
        txt_West40.BackColor = &H80000016
        txt_West60.BackColor = &H80000016
        txt_West70.BackColor = &H80000016
        txt_West80.BackColor = &H80000016
        txt_West90.BackColor = &H80000016
        
     
    ElseIf chk_simple = False Then
    
        cmdInterpolate.Visible = True
    
        txt_West0.Enabled = True
        txt_West10.Enabled = True
        txt_West20.Enabled = True
        txt_West30.Enabled = True
        txt_West40.Enabled = True
        txt_West60.Enabled = True
        txt_West70.Enabled = True
        txt_West80.Enabled = True
        txt_West90.Enabled = True
        
        txt_West0.BackColor = &H80000005
        txt_West10.BackColor = &H80000005
        txt_West20.BackColor = &H80000005
        txt_West30.BackColor = &H80000005
        txt_West40.BackColor = &H80000005
        txt_West60.BackColor = &H80000005
        txt_West70.BackColor = &H80000005
        txt_West80.BackColor = &H80000005
        txt_West90.BackColor = &H80000005
        
        
        If Zeile = 0 Then 'Fehler bei leerem Formular abfangen
            Exit Sub
        Else:
            txt_West0.Value = Sheets("Kollektoren").Cells(Zeile, 16).Value
            txt_West10.Value = Sheets("Kollektoren").Cells(Zeile, 17).Value
            txt_West20.Value = Sheets("Kollektoren").Cells(Zeile, 18).Value
            txt_West30.Value = Sheets("Kollektoren").Cells(Zeile, 19).Value
            txt_West40.Value = Sheets("Kollektoren").Cells(Zeile, 20).Value
            txt_West50.Value = Sheets("Kollektoren").Cells(Zeile, 21).Value
            txt_West60.Value = Sheets("Kollektoren").Cells(Zeile, 22).Value
            txt_West70.Value = Sheets("Kollektoren").Cells(Zeile, 23).Value
            txt_West80.Value = Sheets("Kollektoren").Cells(Zeile, 24).Value
            txt_West90.Value = Sheets("Kollektoren").Cells(Zeile, 25).Value
        End If
        
    End If

End Sub


Private Sub cmdInterpolate_Click()

    Const n = 9
    Dim i As Integer, j As Integer
    Dim n_empty As Integer
    Dim n_full As Integer, i_full(0 To n) As Integer
    Dim isEmpty(0 To n) As Boolean
    Dim isLeft As Boolean
    Dim Degree As Integer
    
    Dim k As Double                             ' The slope of the linear equation: y = k*x + m
    Dim m As Double                             ' The y-intercept of the linear equation: y = k*x + m
    Dim isLeftNode As Boolean                   ' TRUE if a left-node is established for the current textbox
    
    Dim K_theta(0 To n, 1 To 2) As Variant  ' The values chosen for K_theta_b (K_theta_b_EW in the 1st row and K_theta_b_NS in the 2nd row)
    Dim x_degrees(0 To n) As Double         ' The degrees from the UserForm
    Dim i_EW_NS As Integer                  ' The index used for investigating the EW-row or the NS-row
    
    Dim txt As String
    
    
    ' Enter Values for 0|fffd| and 90|fffd|
    If chk_bidirektional = False Then
        If Not IsNumeric(txt_West0) Or Not IsNumeric(txt_West90) Then
            txt_West0.Value = 1
            txt_West90.Value = 0
        End If
    ElseIf chk_bidirektional = True Then
        If Not IsNumeric(txt_West0) Or Not IsNumeric(txt_West90) Or Not IsNumeric(txt_Nord0) Or Not IsNumeric(txt_Nord90) Then
            txt_West0.Value = 1
            txt_West90.Value = 0
            txt_Nord0.Value = 1
            txt_Nord90.Value = 0
        End If
    End If
    
    
    ' Retrieve the values from the UserForm
    For i = 0 To n
        ' Give the current degree a label according to the naming of the fields
        Degree = 10 * i
    
        ' Retrieve the values from the UserForm
        x_degrees(i) = Degree
        K_theta(i, 1) = Seperator(Me.Controls("txt_West" & Degree).Value)
        K_theta(i, 2) = Seperator(Me.Controls("txt_Nord" & Degree).Value)
    Next i
    
    
    For i_EW_NS = 1 To 2 ' Loop through the two rows of K_theta_b
    
        If i_EW_NS = 1 Then
            txt = "txt_West"
        ElseIf i_EW_NS = 2 Then
            txt = "txt_Nord"
        End If
        
    
        Degree = 0
        n_empty = 0
        n_full = 0
        
        
        ' Check and remember the filled fields
        For i = 0 To n
            Degree = 10 * i
            If Not IsNumeric(K_theta(i, i_EW_NS)) Then
                n_empty = n_empty + 1
                isEmpty(i) = True
            End If
        
            isLeft = False
            
            If i <= n - 1 Then
                If IsNumeric(K_theta(i, i_EW_NS)) And (K_theta(i + 1, i_EW_NS) = "" Or _
                Not IsNumeric(K_theta(i + 1, i_EW_NS))) Then
                    n_empty = n_empty
                    n_full = n_full + 1
                    i_full(n_full) = i
                    isLeft = True
                End If
            End If
            
            If i > 1 And Not isLeft Then
                If IsNumeric(K_theta(i, i_EW_NS)) And Not IsNumeric(K_theta(i - 1, i_EW_NS)) Then
                    n_empty = n_empty
                    n_full = n_full + 1
                    i_full(n_full) = i
                End If
            End If
        Next
        
        
        ' Fill the empty fields with interpolated values
        If n_empty > 0 Then
            ' Loop through the full fields, calculate the linear equation, fill the empty fields
            For i = 1 To n_full - 1
                ' Calculate the linear equation
                k = (K_theta(i_full(i + 1), i_EW_NS) - K_theta(i_full(i), i_EW_NS)) / (x_degrees(i_full(i + 1)) - x_degrees(i_full(i)))
                m = K_theta(i_full(i), i_EW_NS) - k * x_degrees(i_full(i))
                
                ' Fill the empty fields
                For j = i_full(i) + 1 To i_full(i + 1) - 1
                    ' The value of the field should only change if the field is empty
                    
                    If isEmpty(j) Then
                        Degree = 10 * j 'for the name of the empty fields
                        
                        ' Write the values in the empty fields according to the linear equation
                        If i_EW_NS = 1 Then Me.Controls("txt_West" & Degree).Value = k * x_degrees(j) + m
                        If i_EW_NS = 2 Then Me.Controls("txt_Nord" & Degree).Value = k * x_degrees(j) + m
                    End If
                Next j
            Next i
        End If
        
    Next i_EW_NS


End Sub

Private Sub cmdDelete_Click()
    
    'alle Felder des Formulars werden geleert

    txtHersteller.Value = ""
    txtKollArt.Value = ""
    txtProdukt.Value = ""
    txtZertifikat.Value = ""
    
    cboMethode.Value = ""
    
    txt_Eta0hem.Value = ""
    txt_a1.Value = ""
    txt_a2.Value = ""
    txt_Eta0b.Value = ""
    txt_Ktd.Value = ""
    txt_c1.Value = ""
    txt_c2.Value = ""
    txt_c3.Value = ""
    
    txt_KollAG.Value = ""
    txt_KollAAp.Value = ""
    txt_KollCeff.Value = ""

    chk_bidirektional = True

    txt_Nord0 = ""
    txt_Nord10 = ""
    txt_Nord20 = ""
    txt_Nord30 = ""
    txt_Nord40 = ""
    txt_Nord50 = ""
    txt_Nord60 = ""
    txt_Nord70 = ""
    txt_Nord80 = ""
    txt_Nord90 = ""
    
    txt_West0 = ""
    txt_West10 = ""
    txt_West20 = ""
    txt_West30 = ""
    txt_West40 = ""
    txt_West50 = ""
    txt_West60 = ""
    txt_West70 = ""
    txt_West80 = ""
    txt_West90 = ""
    

End Sub


Private Sub cmdSave_Click()

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False
    
    Dim Zeile As Integer, letzte As Integer
    
    
    With Sheets("Kollektoren")
    
        Call Zeile_Coll(Zeile, letzte)
        letzte = Sheets("Kollektoren").Cells(Rows.Count, 2).End(xlUp).Row + 1
        
        For Zeile = 5 To letzte
            If .Cells(Zeile, 2).Value = txtHersteller.Value Then
                If txtProdukt.Value = .Cells(Zeile, 4).Value Then 'Pr|fffd|fen, ob der Produktname schon vorhanden ist
                    MsgBox "Bitte geben Sie einen eindeutigen Produktnamen ein!", vbOKOnly, "Produktname"
                    Exit Sub
                End If
            End If
        Next
        
        
        If txtProdukt.Value = "" Then
            MsgBox "Bitte geben Sie einen eindeutigen Produktnamen ein!", vbOKOnly, "Produktname"
            Exit Sub
        End If
        
        If txtHersteller.Value = "" Or txtKollArt.Value = "" Or txtZertifikat = "" Then
            MsgBox "Bitte f|fffd|llen Sie alle Textfelder aus!", vbOKOnly, "Ung|fffd|ltiger Wert"
            Exit Sub
        End If
        
        
        'Pr|fffd|fen, ob in allen Feldern Zahlen stehen
        If cboMethode = "Station|fffd|r" Then
            If Not IsNumeric(txt_Eta0hem) Or Not IsNumeric(txt_a1) Or Not IsNumeric(txt_a2) Then
                MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
                Exit Sub
            End If
        ElseIf cboMethode = "Quasi dynamisch" Then
            If Not IsNumeric(txt_Eta0b) Or Not IsNumeric(txt_Ktd) Or Not IsNumeric(txt_c1) Or Not IsNumeric(txt_c2) Or _
                Not IsNumeric(txt_c3) Then
                MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
                Exit Sub
            End If
        End If
        
        
        If chk_simple = True Then
            If Not IsNumeric(txt_West50) Then
                MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
                Exit Sub
            End If
        Else:
            If Not IsNumeric(txt_West0) Or Not IsNumeric(txt_West10) Or Not IsNumeric(txt_West20) Or _
            Not IsNumeric(txt_West30) Or Not IsNumeric(txt_West40) Or Not IsNumeric(txt_West50) Or _
            Not IsNumeric(txt_West60) Or Not IsNumeric(txt_West70) Or Not IsNumeric(txt_West80) Or _
            Not IsNumeric(txt_West90) Then
                MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
                Exit Sub
            End If
        End If
        
        
        If chk_bidirektional = True Then
            If Not IsNumeric(txt_Nord0) Or Not IsNumeric(txt_Nord10) Or Not IsNumeric(txt_Nord20) Or _
            Not IsNumeric(txt_Nord30) Or Not IsNumeric(txt_Nord40) Or Not IsNumeric(txt_Nord50) Or _
            Not IsNumeric(txt_Nord60) Or Not IsNumeric(txt_Nord70) Or Not IsNumeric(txt_Nord80) Or _
            Not IsNumeric(txt_Nord90) Then
                MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
                Exit Sub
            End If
        End If
        
        
        If Not IsNumeric(txt_KollAG) Or Not IsNumeric(txt_KollAAp) Or _
        Not IsNumeric(txt_KollCeff) Then
            MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
            Exit Sub
        End If
        
        
        'Werte in die Kollektordatenbank speichern
        
        .Cells(letzte, 2).Value = txtHersteller.Value
        .Cells(letzte, 3).Value = txtKollArt.Value
        .Cells(letzte, 4).Value = txtProdukt.Value
        .Cells(letzte, 1).Value = txtZertifikat.Value
        
        
        'Bezugsfl|fffd|che wird in Ergebnissen mit angegeben, Ergebnis wird f|fffd|r beide M|fffd|glichkeiten berechnet
        
        If optBezugG = True Then
            Range("optBezug").Value = 1
            .Cells(letzte, 15).Value = 1
        ElseIf optBezugAp = True Then
            Range("optBezug").Value = 2
            .Cells(letzte, 15).Value = 2
        End If
        
        
        
                
        If cboMethode = "Station|fffd|r" Then
            .Cells(letzte, 5).Value = Seperator(txt_Eta0hem.Value)
            .Cells(letzte, 6).Value = Seperator(txt_a1.Value)
            .Cells(letzte, 7).Value = Seperator(txt_a2.Value)
            .Cells(letzte, 8).Value = ""
            .Cells(letzte, 12).Value = ""
            .Cells(letzte, 9).Value = ""
            .Cells(letzte, 10).Value = ""
            .Cells(letzte, 11).Value = ""
        ElseIf cboMethode = "Quasi dynamisch" Then
            .Cells(letzte, 5).Value = ""
            .Cells(letzte, 6).Value = ""
            .Cells(letzte, 7).Value = ""
            .Cells(letzte, 8).Value = Seperator(txt_Eta0b.Value)
            .Cells(letzte, 12).Value = Seperator(txt_Ktd.Value)
            .Cells(letzte, 9).Value = Seperator(txt_c1.Value)
            .Cells(letzte, 10).Value = Seperator(txt_c2.Value)
            .Cells(letzte, 11).Value = Seperator(txt_c3.Value)
        Else
            .Cells(letzte, 5).Value = Seperator(txt_Eta0hem.Value)
            .Cells(letzte, 6).Value = Seperator(txt_a1.Value)
            .Cells(letzte, 7).Value = Seperator(txt_a2.Value)
            .Cells(letzte, 8).Value = Seperator(txt_Eta0b.Value)
            .Cells(letzte, 12).Value = Seperator(txt_Ktd.Value)
            .Cells(letzte, 9).Value = Seperator(txt_c1.Value)
            .Cells(letzte, 10).Value = Seperator(txt_c2.Value)
            .Cells(letzte, 11).Value = Seperator(txt_c3.Value)
        End If
        
            
        .Cells(letzte, 13).Value = Seperator(txt_KollAG.Value)
        .Cells(letzte, 14).Value = Seperator(txt_KollAAp.Value)
        .Cells(letzte, 36).Value = Seperator(txt_KollCeff.Value)
        
        .Cells(letzte, 16).Value = Seperator(txt_West0.Value)
        .Cells(letzte, 17).Value = Seperator(txt_West10.Value)
        .Cells(letzte, 18).Value = Seperator(txt_West20.Value)
        .Cells(letzte, 19).Value = Seperator(txt_West30.Value)
        .Cells(letzte, 20).Value = Seperator(txt_West40.Value)
        .Cells(letzte, 21).Value = Seperator(txt_West50.Value)
        .Cells(letzte, 22).Value = Seperator(txt_West60.Value)
        .Cells(letzte, 23).Value = Seperator(txt_West70.Value)
        .Cells(letzte, 24).Value = Seperator(txt_West80.Value)
        .Cells(letzte, 25).Value = Seperator(txt_West90.Value)

        
        If chk_bidirektional = False Then
            .Cells(letzte, 26).Value = .Cells(letzte, 16).Value
            .Cells(letzte, 27).Value = .Cells(letzte, 17).Value
            .Cells(letzte, 28).Value = .Cells(letzte, 18).Value
            .Cells(letzte, 29).Value = .Cells(letzte, 19).Value
            .Cells(letzte, 30).Value = .Cells(letzte, 20).Value
            .Cells(letzte, 31).Value = .Cells(letzte, 21).Value
            .Cells(letzte, 32).Value = .Cells(letzte, 22).Value
            .Cells(letzte, 33).Value = .Cells(letzte, 23).Value
            .Cells(letzte, 34).Value = .Cells(letzte, 24).Value
            .Cells(letzte, 35).Value = .Cells(letzte, 25).Value
        Else:
            .Cells(letzte, 26).Value = Seperator(txt_Nord0.Value)
            .Cells(letzte, 27).Value = Seperator(txt_Nord10.Value)
            .Cells(letzte, 28).Value = Seperator(txt_Nord20.Value)
            .Cells(letzte, 29).Value = Seperator(txt_Nord30.Value)
            .Cells(letzte, 30).Value = Seperator(txt_Nord40.Value)
            .Cells(letzte, 31).Value = Seperator(txt_Nord50.Value)
            .Cells(letzte, 32).Value = Seperator(txt_Nord60.Value)
            .Cells(letzte, 33).Value = Seperator(txt_Nord70.Value)
            .Cells(letzte, 34).Value = Seperator(txt_Nord80.Value)
            .Cells(letzte, 35).Value = Seperator(txt_Nord90.Value)
        End If
        
   
    End With
    
    
    Range("Koll_Hersteller").Value = txtHersteller.Value
    Range("Koll_Art").Value = txtKollArt.Value
    Range("Koll_Produkt").Value = txtProdukt.Value
    Range("Koll_Zertifikat").Value = txtZertifikat.Value
    
    Call Coll_Database
    
    frmKollektorfeld!cboKoll_Hersteller.RowSource = "Manufacturer"
    frmKollektorfeld!cboKoll_Art.RowSource = "Type"
    frmKollektorfeld!cboKoll_Produkt.RowSource = "Product"
    
    frmKollektorfeld!cboKoll_Hersteller.Value = txtHersteller.Value
    frmKollektorfeld!cboKoll_Art.Value = txtKollArt.Value
    frmKollektorfeld!cboKoll_Produkt.Value = txtProdukt.Value
    frmKollektorfeld!txtKoll_Zertifikat.Value = txtZertifikat.Value
    


    If Range("Koll_Hersteller").Value <> frmKollektorfeld!cboKoll_Hersteller.Value Then
        frmKollektorfeld!cboKoll_Hersteller.Value = Range("Koll_Hersteller").Value
    End If
    
    If Range("Koll_Art").Value <> frmKollektorfeld!cboKoll_Art.Value Then
        frmKollektorfeld!cboKoll_Art.Value = Range("Koll_Art").Value
    End If
    
    If Range("Koll_Produkt").Value <> frmKollektorfeld!cboKoll_Produkt.Value Then
        frmKollektorfeld!cboKoll_Produkt.Value = Range("Koll_Produkt").Value
    End If
    
'    frmKollektorfeld!txtKoll_Zertifikat.Value = Range("Koll_Zertifikat").Value
    
    
    Unload Me
    
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True

    
End Sub


Private Sub cmdKollDelete_Click()

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False

    Dim Zeile As Integer, letzte As Integer
    Dim Antwort As Integer
    
    Antwort = MsgBox("M|fffd|chten Sie den Kollektor " & txtProdukt & " wirklich aus der Datenbank l|fffd|schen?", vbYesNo, "Kollektor L|fffd|schen")
    If Antwort = 6 Then
    
        With Sheets("Kollektoren")
        
        Call Zeile_Coll(Zeile, letzte)
        letzte = letzte + 1
            
        Call cmdDelete_Click
        .Rows(Zeile).Delete Shift:=xlUp
        Range("Koll_Hersteller").Value = Sheets("Config").Range("M4")
        Exit Sub

        End With
        
        If Zeile - 1 = letzte Then
            MsgBox "Dieser Kollektor ist nicht in der Datenbank gespeichert!", vbOKOnly, "Produktname"
        End If
        
    ElseIf Antwort = 7 Then
        Exit Sub
    End If

    Application.EnableEvents = True
    Application.ScreenUpdating = True

End Sub

Private Sub cmdCancel_Click()

    If txtHersteller.Value = "" Then
        frmKollektorfeld!cboKoll_Hersteller.Value = Sheets("Config").Range("M4")
    End If
    
    Unload Me
    
End Sub


Attribute VB_Name = "frmKollektorfeld"
Attribute VB_Base = "0{2074F8ED-074E-4976-B1B5-756095209DE1}{A190F78A-46A1-4139-98F1-8AC3AFFDC7E1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit



Private Sub Label47_Click()

End Sub

Public Sub UserForm_Initialize()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 590)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 706)
    


On Error GoTo Fehler 'wenn der Kollektor, der in den Parametern steht, nicht in der Datenbak gefunden wird
    
    Call Coll_Database

    'Daten aus dem Parameterblatt als Anfangswerte

    Me.cboKoll_Hersteller.RowSource = "Manufacturer"
    cboKoll_Hersteller.Value = Range("Koll_Hersteller").Value
    Me.cboKoll_Art.RowSource = "Type"
    cboKoll_Art.Value = Range("Koll_Art").Value
    Me.cboKoll_Produkt.RowSource = "Product"
    cboKoll_Produkt.Value = Range("Koll_Produkt").Value
    
    txtKoll_Feld.Value = Range("BruttoFlaeche").Value
    
    cboKoll_Tracking.Value = Range("Koll_Tracking").Value
    txtKoll_Neigung.Value = Range("Koll_Neigung").Value
    txtKoll_Azimut.Value = Range("Koll_Azimut").Value
    
    If Range("Koll_Medium").Value = "Wasser-Glykol" Then
        optGlycol = True
        txtf_Glycol.Visible = True
        txtf_Water.Visible = False
        txtT_Grenz.Visible = False
        lbl_Water.Visible = False
        lbl_Water2.Visible = False
    ElseIf Range("Koll_Medium").Value = "Wasser" Then
        optWater = True
        txtf_Glycol.Visible = False
        lbl_Glycol.Visible = False
        txtf_Water.Visible = True
        txtT_Grenz.Visible = True
        lbl_Water.Visible = True
        lbl_Water2.Visible = True
    End If
    
    txtf_Glycol.Value = Range("f_Glycol").Value * 100
    txtf_Water.Value = Range("f_Water").Value * 100
    txtT_Grenz.Value = Range("T_Grenz").Value


    If Sheets("Hauptblatt").chk_Netz = True Then
        'Mittlere Kollektortemperatur wird bei Systemberechnung nicht ber|fffd|cksichtigt
        opt_konstant.Enabled = False
        opt_variabel.Enabled = False
        txt_TKollMittel.Enabled = False
        txt_TKollMittel.BackColor = &H80000016
        Label46.Visible = True
        
        
        If Range("Y_Regelung").Value = 1 Then
            opt_VWB = True
            chk_Ytset = False
            txt_GTmaxTset.Enabled = False
            txt_DTsetT.Enabled = False
            txt_GTmaxTset.BackColor = &H80000016
            txt_DTsetT.BackColor = &H80000016
        ElseIf Range("Y_Regelung").Value = 2 Then
            opt_NVL = True
            If Range("Ytset").Value = 1 Then
                chk_Ytset = True
                txt_GTmaxTset.Enabled = True
                txt_DTsetT.Enabled = True
                txt_GTmaxTset.BackColor = &H80000005
                txt_DTsetT.BackColor = &H80000005
            ElseIf Range("Ytset").Value = 0 Then
                chk_Ytset = False
                txt_GTmaxTset.Enabled = False
                txt_DTsetT.Enabled = False
                txt_GTmaxTset.BackColor = &H80000016
                txt_DTsetT.BackColor = &H80000016
            End If
        End If
        
    
    ElseIf Sheets("Hauptblatt").chk_Netz = False Then
        opt_konstant.Enabled = True
        opt_variabel.Enabled = True
        txt_TKollMittel.Enabled = True
        txt_TKollMittel.BackColor = &H80000005
        Label46.Visible = False
        
        If Range("TKollArt") = "konstant" Then
            opt_konstant = True
            txt_TKollMittel.Visible = True
            Label45.Visible = True
            txt_TKollMittel.Value = Range("TKollMittel").Value
        ElseIf Range("TKollArt") = "variabel" Then
            opt_variabel = True
            txt_TKollMittel.Visible = False
            Label45.Visible = False
'            txt_TKollMittel.Value = ""
            Range("VL_max").Value = Range("P_VL_max").Value
            Range("VL_min").Value = Range("P_VL_min").Value
            Range("RL_max").Value = Range("P_RL_max").Value
            Range("RL_min").Value = Range("P_RL_min").Value
        ElseIf Range("TKollArt") = "" Then
            opt_konstant = True
            txt_TKollMittel.Visible = True
            Label45.Visible = True
'            txt_TKollMittel.Value = 75
'            Range("P_VL_max").Value = ""
'            Range("P_VL_min").Value = ""
'            Range("P_RL_max").Value = ""
'            Range("P_RL_min").Value = ""
        End If
        
        opt_VWB.Enabled = False
        opt_NVL.Enabled = False
        chk_Ytset.Enabled = False
        txt_GTmaxTset.Enabled = False
        txt_DTsetT.Enabled = False
        txt_GTmaxTset.BackColor = &H80000016
        txt_DTsetT.BackColor = &H80000016

    End If


   
    txt_GTmaxTset.Value = Range("GTmaxTset").Value
    txt_DTsetT.Value = Range("DTsetT").Value
    
        
    Exit Sub

Fehler:
    cboKoll_Hersteller.Value = Sheets("Config").Range("M4")

End Sub

Private Sub cboKoll_Hersteller_Change()

    If frmKollektorfeld.Visible = False Then  'Or frmKollektor.Visible = True
        Exit Sub
    End If

    'Auswahl Hersteller, automatische Aktualisierung der anderen Felder

    Call Coll_Database

    Me.cboKoll_Art.RowSource = "Type"
    Me.cboKoll_Art.ListIndex = 0
    Me.cboKoll_Produkt.RowSource = "Product"
    Me.cboKoll_Produkt.ListIndex = 0

End Sub


Private Sub cboKoll_Art_Change()

    If frmKollektorfeld.Visible = False Then
        Exit Sub
    End If

    Dim Zeile As Integer, letzte As Integer
    
    Call Zeile_Coll(Zeile, letzte)
    
    Call Coll_Choice(letzte)

    Me.cboKoll_Produkt.RowSource = "Product"
    Me.cboKoll_Produkt.ListIndex = 0
    

End Sub


Private Sub cboKoll_Produkt_Change()

    Dim Zeile As Integer, letzte As Integer
    letzte = Sheets("Kollektoren").Cells(Rows.Count, 2).End(xlUp).Row
    
    For Zeile = 5 To letzte
        If Sheets("Kollektoren").Cells(Zeile, 2).Value = cboKoll_Hersteller And _
            Sheets("Kollektoren").Cells(Zeile, 3).Value = cboKoll_Art And _
            Sheets("Kollektoren").Cells(Zeile, 4).Value = cboKoll_Produkt Then
            txtKoll_Zertifikat.Value = Sheets("Kollektoren").Cells(Zeile, 1).Value
            
            If Sheets("Kollektoren").Cells(Zeile, 15).Value = 1 Then
                Label47.Visible = True
                Label48.Visible = False
            ElseIf Sheets("Kollektoren").Cells(Zeile, 15).Value = 2 Then
                Label47.Visible = False
                Label48.Visible = True
            End If
        End If
    Next
    
End Sub


Private Sub cmdKollNew_Click()
    
    frmKollektor.Show
    
End Sub


Private Sub opt_konstant_Click()

    txt_TKollMittel.Visible = True
    Label45.Visible = True
    txt_TKollMittel.Value = Range("TKollMittel").Value

End Sub

Private Sub opt_variabel_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Temp").Unprotect Password:=SCFWPW

    If frmKollektorfeld.Visible = True Then
        frmKollektorfeld.Hide
        ActiveWorkbook.Sheets("Temp").Visible = True
        ActiveWorkbook.Sheets("Temp").Select
    End If

    txt_TKollMittel.Visible = False
    Label45.Visible = False
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub


Private Sub opt_VWB_Click()

    chk_Ytset.Enabled = False
    chk_Ytset.Value = False

End Sub


Private Sub opt_NVL_Click()

    chk_Ytset.Enabled = True

End Sub


Private Sub chk_Ytset_Click()

    If chk_Ytset = True Then
        txt_GTmaxTset.Enabled = True
        txt_DTsetT.Enabled = True
        txt_GTmaxTset.BackColor = &H80000005
        txt_DTsetT.BackColor = &H80000005
    ElseIf chk_Ytset = False Then
        txt_GTmaxTset.Enabled = False
        txt_DTsetT.Enabled = False
        txt_GTmaxTset.BackColor = &H80000016
        txt_DTsetT.BackColor = &H80000016
    End If
    
End Sub



Private Sub cmdOK_Click()


    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Sheets("Berechnung").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    Dim Zeile As Integer, letzte As Integer
    
    
    'Pr|fffd|fen, ob alle Felder ausgef|fffd|llt sind
    If cboKoll_Art = "" Or cboKoll_Produkt = "" Or txtKoll_Zertifikat = "" Or Not IsNumeric(txtKoll_Feld) Or Not IsNumeric(txtKoll_Neigung) Or Not IsNumeric(txtKoll_Azimut) Then
        MsgBox "Bitte f|fffd|llen Sie alle Felder aus!", vbOKOnly, "Ung|fffd|ltiger Wert"
        Exit Sub
    End If
    
    
    Range("BruttoFlaeche").Value = Seperator(txtKoll_Feld.Value)
    Range("Koll_Hersteller").Value = cboKoll_Hersteller.Value
    Range("Koll_Art").Value = cboKoll_Art.Value
    Range("Koll_Produkt").Value = cboKoll_Produkt.Value
    Range("Koll_Zertifikat").Value = txtKoll_Zertifikat.Value
    
    
    'Kollektordaten aus der Kollektordatenbank laden
    
    Call Zeile_Coll(Zeile, letzte)

    Range("KollAG").Value = Sheets("Kollektoren").Cells(Zeile, 13).Value
    Range("KollAAp").Value = Sheets("Kollektoren").Cells(Zeile, 14).Value
    
    Range("Eta0_hem").Value = Sheets("Kollektoren").Cells(Zeile, 5).Value
    Range("Koll_a1").Value = Sheets("Kollektoren").Cells(Zeile, 6).Value
    Range("Koll_a2").Value = Sheets("Kollektoren").Cells(Zeile, 7).Value
    
    If Sheets("Kollektoren").Cells(Zeile, 18).Value = 0 Then
        Range("IAM_simple") = 1
    Else: Range("IAM_simple") = ""
    End If
    
    Range("West50").Value = Sheets("Kollektoren").Cells(Zeile, 21).Value
    Range("Nord50").Value = Sheets("Kollektoren").Cells(Zeile, 31).Value

    Range("optBezug").Value = Sheets("Kollektoren").Cells(Zeile, 15).Value
    Range("KollCeff_A").Value = Sheets("Kollektoren").Cells(Zeile, 36).Value
    
    
    If Range("IAM_simple") = 1 Then
        Range("West0").Value = Sheets("Kdiff").Cells(11, 3).Value
        Range("West10").Value = Sheets("Kdiff").Cells(11, 4).Value
        Range("West20").Value = Sheets("Kdiff").Cells(11, 5).Value
        Range("West30").Value = Sheets("Kdiff").Cells(11, 6).Value
        Range("West40").Value = Sheets("Kdiff").Cells(11, 7).Value
        Range("West60").Value = Sheets("Kdiff").Cells(11, 9).Value
        Range("West70").Value = Sheets("Kdiff").Cells(11, 10).Value
        Range("West80").Value = Sheets("Kdiff").Cells(11, 11).Value
        Range("West90").Value = Sheets("Kdiff").Cells(11, 12).Value
        
        Range("Nord0").Value = Sheets("Kdiff").Cells(12, 3).Value
        Range("Nord10").Value = Sheets("Kdiff").Cells(12, 4).Value
        Range("Nord20").Value = Sheets("Kdiff").Cells(12, 5).Value
        Range("Nord30").Value = Sheets("Kdiff").Cells(12, 6).Value
        Range("Nord40").Value = Sheets("Kdiff").Cells(12, 7).Value
        Range("Nord60").Value = Sheets("Kdiff").Cells(12, 9).Value
        Range("Nord70").Value = Sheets("Kdiff").Cells(12, 10).Value
        Range("Nord80").Value = Sheets("Kdiff").Cells(12, 11).Value
        Range("Nord90").Value = Sheets("Kdiff").Cells(12, 12).Value
    
    ElseIf Range("IAM_simple") = "" Then
        Range("West0").Value = Sheets("Kollektoren").Cells(Zeile, 16).Value
        Range("West10").Value = Sheets("Kollektoren").Cells(Zeile, 17).Value
        Range("West20").Value = Sheets("Kollektoren").Cells(Zeile, 18).Value
        Range("West30").Value = Sheets("Kollektoren").Cells(Zeile, 19).Value
        Range("West40").Value = Sheets("Kollektoren").Cells(Zeile, 20).Value
        Range("West60").Value = Sheets("Kollektoren").Cells(Zeile, 22).Value
        Range("West70").Value = Sheets("Kollektoren").Cells(Zeile, 23).Value
        Range("West80").Value = Sheets("Kollektoren").Cells(Zeile, 24).Value
        Range("West90").Value = Sheets("Kollektoren").Cells(Zeile, 25).Value
        
        Range("Nord0").Value = Sheets("Kollektoren").Cells(Zeile, 26).Value
        Range("Nord10").Value = Sheets("Kollektoren").Cells(Zeile, 27).Value
        Range("Nord20").Value = Sheets("Kollektoren").Cells(Zeile, 28).Value
        Range("Nord30").Value = Sheets("Kollektoren").Cells(Zeile, 29).Value
        Range("Nord40").Value = Sheets("Kollektoren").Cells(Zeile, 30).Value
        Range("Nord60").Value = Sheets("Kollektoren").Cells(Zeile, 32).Value
        Range("Nord70").Value = Sheets("Kollektoren").Cells(Zeile, 33).Value
        Range("Nord80").Value = Sheets("Kollektoren").Cells(Zeile, 34).Value
        Range("Nord90").Value = Sheets("Kollektoren").Cells(Zeile, 35).Value
        
    End If
    
    
    Sheets("Kdiff").Calculate

    
    If Sheets("Kollektoren").Cells(Zeile, 8).Value = 0 Then
        Range("Eta0b").Value = Range("Eta0b_SST").Value
        Range("Koll_c1").Value = Range("Koll_a1").Value
        Range("Koll_c2").Value = Range("Koll_a2").Value
        Range("Koll_c3").Value = 0
        Range("Kthetadiff").Value = Range("Kthetadiff_SST").Value
    Else:
        Range("Eta0b").Value = Sheets("Kollektoren").Cells(Zeile, 8).Value
        Range("Koll_c1").Value = Sheets("Kollektoren").Cells(Zeile, 9).Value
        Range("Koll_c2").Value = Sheets("Kollektoren").Cells(Zeile, 10).Value
        Range("Koll_c3").Value = Sheets("Kollektoren").Cells(Zeile, 11).Value
        Range("Kthetadiff").Value = Sheets("Kollektoren").Cells(Zeile, 12).Value
    End If
    

    If Sheets("Hauptblatt").chk_Netz = False Then
        If opt_konstant = True Then
            Sheets("Parameter").Range("TKollArt").Value = "konstant"
            Range("P_VL_max").Value = ""
            Range("P_VL_min").Value = ""
            Range("P_RL_max").Value = ""
            Range("P_RL_min").Value = ""
            Range("TKollMittel").Value = Seperator(txt_TKollMittel.Value)
            Range("TKollMittel").Copy
            Sheets("Berechnung").Range("AC11:AC8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        ElseIf opt_variabel = True Then
            Sheets("Parameter").Range("TKollArt").Value = "variabel"
            Sheets("Temp").Range("E11:E8770").Copy
            Sheets("Berechnung").Range("AC11:AC8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Range("P_VL_max").Value = Range("VL_max").Value
            Range("P_VL_min").Value = Range("VL_min").Value
            Range("P_RL_max").Value = Range("RL_max").Value
            Range("P_RL_min").Value = Range("RL_min").Value
        End If
    End If
    
         
    Range("Koll_Tracking").Value = cboKoll_Tracking.Value
    Range("Koll_Neigung").Value = Seperator(txtKoll_Neigung.Value)
    Range("Koll_Azimut").Value = Seperator(txtKoll_Azimut.Value)
    
    If optGlycol = True Then
        Range("Koll_Medium").Value = "Wasser-Glykol"
        Range("f_Glycol").Value = Seperator(txtf_Glycol.Value) / 100
        Range("Eta0b_neu").Value = Range("Eta0b").Value - Range("f_Glycol").Value
    ElseIf optWater = True Then
        Range("Koll_Medium").Value = "Wasser"
        Range("f_Water").Value = Seperator(txtf_Water.Value) / 100
        Range("T_Grenz").Value = Seperator(txtT_Grenz.Value)
        Range("Eta0b_neu").Value = Range("Eta0b").Value
    End If
    

    If opt_VWB = True Then
        Range("Y_Regelung").Value = 1
        Range("Ytset").Value = 0
        Range("GTmaxTset").Value = ""
        Range("DTsetT").Value = 8
    ElseIf opt_NVL = True Then
        Range("Y_Regelung").Value = 2
        If chk_Ytset = True Then
            Range("Ytset").Value = 1
            Range("GTmaxTset").Value = Seperator(txt_GTmaxTset.Value)
            Range("DTsetT").Value = Seperator(txt_DTsetT.Value)
        ElseIf chk_Ytset = False Then
            Range("Ytset").Value = 0
            Range("GTmaxTset").Value = ""
            Range("DTsetT").Value = ""
        End If
    End If
    
    
    Application.EnableEvents = True
    Sheets("Config").Range("Aktualisierung").Value = 1
    
    Unload Me
    
End Sub



Private Sub optGlycol_Click()
    txtf_Glycol.Visible = True
    lbl_Glycol.Visible = True
    txtf_Water.Visible = False
    txtT_Grenz.Visible = False
    lbl_Water.Visible = False
    lbl_Water2.Visible = False
End Sub

Private Sub optWater_Click()
    txtf_Glycol.Visible = False
    lbl_Glycol.Visible = False
    txtf_Water.Visible = True
    txtT_Grenz.Visible = True
    lbl_Water.Visible = True
    lbl_Water2.Visible = True
End Sub



Private Sub cmdCancel_Click()

    Unload Me
    Sheets("Hauptblatt").Select

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

    Unload Me
    Sheets("Hauptblatt").Select

End Sub
Attribute VB_Name = "frmLaden"
Attribute VB_Base = "0{37A6265A-F3C8-4EB2-995F-758B55E0FBB4}{C74E409A-08C8-4437-A378-5B7A5E9ED51F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub UserForm_Initialize()
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Config").Unprotect Password:=SCFWPW
    
    Dim Spalte As Long, i As Long
    
    Spalte = Sheets("Archiv").Cells(2, Columns.Count).End(xlToLeft).Column 'letzte Spalte im Archiv
    If Spalte = 2 Then
        Spalte = 3
    End If

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 155)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 296)

    'alte Projektliste l|fffd|schen
    Sheets("Config").Columns(19).Value = ""

    'Projektliste anlegen
    ActiveWorkbook.Names.Add Name:="Names_Archiv", _
    RefersToR1C1:="= Archiv!R2C3:R2C" & Spalte

    ActiveWorkbook.Names.Add Name:="List_Archiv", _
    RefersToR1C1:="= Config!R4C19" & ":R" & Spalte + 1 & "C19"

    ' Namen aller Varianten in das Blatt Config schreiben
    Range("Names_Archiv").Copy
    Range("List_Archiv").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=True

    
    'Bezeichnungen der abgespeicherten Versionen in das Auswahlfeld laden
    Me.cboAuswahl.RowSource = "List_Archiv"
    Me.cboAuswahl.ListIndex = 0

    Application.ScreenUpdating = True
    Application.EnableEvents = True
    
    If DebugMode = 0 Then
        Sheets("Config").Protect Password:=SCFWPW
    End If

End Sub



Private Sub cmdDelete_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Archiv").Unprotect Password:=SCFWPW
    
    Dim c As Long, letzte As Long
    Dim Antwort As Integer
    
    If cboAuswahl.Value = "" Then
        MsgBox "Bitte w|fffd|hlen Sie ein Projekt aus!", vbOKOnly, "Projekt w|fffd|hlen"
        Exit Sub
    End If
    
    'Spalte der ausgew|fffd|hlten Version
    c = Me.cboAuswahl.ListIndex + 3
    
    Antwort = MsgBox("M|fffd|chten Sie das Projekt " & Sheets("Archiv").Cells(2, c).Value & " wirklich aus dem Archiv l|fffd|schen?", vbYesNo, "Projekt l|fffd|schen")
    
    If Antwort = 6 Then
    
        Sheets("Archiv").Columns(c).Delete Shift:=xlToLeft
        
        Call UserForm_Initialize
        
        ElseIf Antwort = 7 Then
        Exit Sub
        
    End If

    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
'    If DebugMode = 0 Then
'        Sheets("Archiv").Protect Password:=SCFWPW
'    End If

End Sub



Private Sub cmdOK_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Archiv").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW
    Sheets("Berechnung").Unprotect Password:=SCFWPW
    
    Dim c As Long, letzte As Long, i As Integer, y As Integer
    
    If cboAuswahl.Value = "" Then
        MsgBox "Bitte w|fffd|hlen Sie ein Projekt aus!", vbOKOnly, "Projekt w|fffd|hlen"
        Exit Sub
    End If
    
    Sheets("Parameter").Visible = True
    Sheets("Parameter").Select
    
    letzte = Sheets("Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 1
    
    'Spalte der ausgew|fffd|hlten Version
    c = Me.cboAuswahl.ListIndex + 3
    
    'Werte in die Eingabefelder laden
    Range("Name").Value = Sheets("Archiv").Cells(2, c).Value
    Range("Projektname").Value = Sheets("Archiv").Cells(2, c).Value
    Range("Ort").Value = Sheets("Archiv").Cells(3, c).Value
    
    Range("TKollArt").Value = Sheets("Archiv").Cells(4, c).Value
            
    Range("BruttoFlaeche").Value = Sheets("Archiv").Cells(10, c).Value
    
    Range("Koll_Hersteller").Value = Sheets("Archiv").Cells(12, c).Value
    Range("Koll_Art").Value = Sheets("Archiv").Cells(13, c).Value
    Range("Koll_Produkt").Value = Sheets("Archiv").Cells(14, c).Value
    Range("Koll_Zertifikat").Value = Sheets("Archiv").Cells(15, c).Value
    'die Kollektordaten werden anhand von Hersteller und Produkt aus der Datenbank geladen
    
    Range("Eta0_hem").Value = Sheets("Archiv").Cells(16, c).Value
    Range("Koll_a1").Value = Sheets("Archiv").Cells(17, c).Value
    Range("Koll_a2").Value = Sheets("Archiv").Cells(18, c).Value
    Range("Koll_c1").Value = Sheets("Archiv").Cells(19, c).Value
    Range("Koll_c2").Value = Sheets("Archiv").Cells(20, c).Value
    Range("Koll_c3").Value = Sheets("Archiv").Cells(21, c).Value
    Range("Eta0b").Value = Sheets("Archiv").Cells(22, c).Value
    Range("Kthetadiff").Value = Sheets("Archiv").Cells(23, c).Value
    
    Range("KollAG").Value = Sheets("Archiv").Cells(24, c).Value
    Range("KollAap").Value = Sheets("Archiv").Cells(25, c).Value
    Range("optBezug").Value = Sheets("Archiv").Cells(26, c).Value
    Range("KollCeff_A").Value = Sheets("Archiv").Cells(27, c).Value

    Range("West0").Value = Sheets("Archiv").Cells(28, c).Value
    Range("West10").Value = Sheets("Archiv").Cells(29, c).Value
    Range("West20").Value = Sheets("Archiv").Cells(30, c).Value
    Range("West30").Value = Sheets("Archiv").Cells(31, c).Value
    Range("West40").Value = Sheets("Archiv").Cells(32, c).Value
    Range("West50").Value = Sheets("Archiv").Cells(33, c).Value
    Range("West60").Value = Sheets("Archiv").Cells(34, c).Value
    Range("West70").Value = Sheets("Archiv").Cells(35, c).Value
    Range("West80").Value = Sheets("Archiv").Cells(36, c).Value
    Range("West90").Value = Sheets("Archiv").Cells(37, c).Value
    
    Range("Nord0").Value = Sheets("Archiv").Cells(38, c).Value
    Range("Nord10").Value = Sheets("Archiv").Cells(39, c).Value
    Range("Nord20").Value = Sheets("Archiv").Cells(40, c).Value
    Range("Nord30").Value = Sheets("Archiv").Cells(41, c).Value
    Range("Nord40").Value = Sheets("Archiv").Cells(42, c).Value
    Range("Nord50").Value = Sheets("Archiv").Cells(43, c).Value
    Range("Nord60").Value = Sheets("Archiv").Cells(44, c).Value
    Range("Nord70").Value = Sheets("Archiv").Cells(45, c).Value
    Range("Nord80").Value = Sheets("Archiv").Cells(46, c).Value
    Range("Nord90").Value = Sheets("Archiv").Cells(47, c).Value
    Range("IAM_simple").Value = Sheets("Archiv").Cells(48, c).Value
    
    Range("Koll_Tracking").Value = Sheets("Archiv").Cells(49, c).Value
    Range("Koll_Neigung").Value = Sheets("Archiv").Cells(50, c).Value
    Range("Koll_Azimut").Value = Sheets("Archiv").Cells(51, c).Value
    
    Range("StartTag").Value = Sheets("Archiv").Cells(52, c).Value
    Range("StartMonat").Value = Sheets("Archiv").Cells(53, c).Value
    Range("EndTag").Value = Sheets("Archiv").Cells(54, c).Value
    Range("EndMonat").Value = Sheets("Archiv").Cells(55, c).Value
        
    Range("Koll_Medium").Value = Sheets("Archiv").Cells(56, c).Value
    Range("f_Glycol").Value = Sheets("Archiv").Cells(57, c).Value
    Range("Eta0b_neu").Value = Sheets("Archiv").Cells(58, c).Value
    
    Range("f_Water").Value = Sheets("Archiv").Cells(59, c).Value
    Range("T_Grenz").Value = Sheets("Archiv").Cells(60, c).Value
    
    Range("Y_Netz").Value = Sheets("Archiv").Cells(61, c).Value
    
    Range("Y_Regelung").Value = Sheets("Archiv").Cells(62, c).Value
    Range("Ytset").Value = Sheets("Archiv").Cells(63, c).Value
    Range("GTmaxTset").Value = Sheets("Archiv").Cells(64, c).Value
    Range("DTsetT").Value = Sheets("Archiv").Cells(65, c).Value

    Range("Y_Rohre").Value = Sheets("Archiv").Cells(66, c).Value
    Range("VRV").Value = Sheets("Archiv").Cells(67, c).Value
    Range("KK").Value = Sheets("Archiv").Cells(68, c).Value
    Range("Y_R").Value = Sheets("Archiv").Cells(69, c).Value
    Range("Lrbin").Value = Sheets("Archiv").Cells(70, c).Value
    Range("Drbin").Value = Sheets("Archiv").Cells(71, c).Value
    Range("P_KR").Value = Sheets("Archiv").Cells(72, c).Value
    Range("Lrbin_E").Value = Sheets("Archiv").Cells(73, c).Value
    Range("Drbin_E").Value = Sheets("Archiv").Cells(74, c).Value
    Range("P_KR_E").Value = Sheets("Archiv").Cells(75, c).Value
    Range("Lrbin_kT").Value = Sheets("Archiv").Cells(76, c).Value
    Range("Drbin_kT").Value = Sheets("Archiv").Cells(77, c).Value
    Range("P_KR_kT").Value = Sheets("Archiv").Cells(78, c).Value
    Range("T_Ru").Value = Sheets("Archiv").Cells(79, c).Value
    Range("Y_WT").Value = Sheets("Archiv").Cells(80, c).Value
    Range("DT_WT_Solar").Value = Sheets("Archiv").Cells(81, c).Value
    Range("YWT_Netz").Value = Sheets("Archiv").Cells(82, c).Value
    Range("DT_WT_Netz").Value = Sheets("Archiv").Cells(83, c).Value
    Range("Y_Speicher").Value = Sheets("Archiv").Cells(84, c).Value
    Range("VS").Value = Sheets("Archiv").Cells(85, c).Value
    Range("Tsmax").Value = Sheets("Archiv").Cells(86, c).Value
    Range("Qsa").Value = Sheets("Archiv").Cells(87, c).Value
    Range("Kas").Value = Sheets("Archiv").Cells(88, c).Value
    Range("Ydezentral").Value = Sheets("Archiv").Cells(89, c).Value
    Range("Last_neu").Value = Sheets("Archiv").Cells(90, c).Value
    Range("Last_skal").Value = Sheets("Archiv").Cells(91, c).Value
    Range("Y_skal").Value = Sheets("Archiv").Cells(92, c).Value

    Sheets("Hauptblatt").Select
    
    If Range("Y_Netz").Value = 0 Then
        Sheets("Hauptblatt").chk_Netz = False
        
        Sheets("Parameter").Unprotect Password:=SCFWPW
        Sheets("Config").Unprotect Password:=SCFWPW
        Sheets("Berechnung").Unprotect Password:=SCFWPW
        
        If Sheets("Archiv").Cells(4, c).Value = "konstant" Then
            Range("TKollMittel").Value = Sheets("Archiv").Cells(5, c).Value
            Range("TKollMittel").Copy
            Sheets("Berechnung").Range("AC11:AC8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Else:
            Sheets("Temp").Unprotect Password:=SCFWPW
            Range("VL_max") = Sheets("Archiv").Cells(6, c).Value
            Range("VL_min") = Sheets("Archiv").Cells(7, c).Value
            Range("RL_max") = Sheets("Archiv").Cells(8, c).Value
            Range("RL_min") = Sheets("Archiv").Cells(9, c).Value
            Call Temp_Berechnen
            Sheets("Temp").Range("E11:E8770").Copy
            Sheets("Berechnung").Range("AC11:AC8770").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        End If
        
    ElseIf Range("Y_Netz").Value = 1 Then
        Sheets("Hauptblatt").chk_Netz = True
        
        'Lastdaten in das Blatt Last kopieren
        letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 1
        
        'Spalten der ausgew|fffd|hlten Version in das Blatt Last kopieren
        For i = 2 To letzte
            If Sheets("Last_Archiv").Cells(2, i).Value = Sheets("Parameter").Range("Last_neu").Value Then
'                Sheets("Last").Unprotect Password:=SCFWPW
                Sheets("Parameter").Unprotect Password:=SCFWPW
                Sheets("Last").Range("Lastname").Value = Sheets("Parameter").Range("Last_neu").Value
                ActiveWorkbook.Names.Add Name:="Lastprofil_Archiv", _
                RefersToR1C1:="= Last_Archiv!R3C" & i & ":R8762C" & i + 2
                Sheets("Last_Archiv").Range("Lastprofil_Archiv").Copy
                Application.ScreenUpdating = False
                Application.EnableEvents = False
                Range("Testwert").Value = 1
                Range("|fffd|nderung").Value = 0
                Sheets("Last").Range("Lastprofil_neu").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
                Sheets("Parameter").Range("Last_neu").Value = Sheets("Last_Archiv").Cells(2, i).Value
                i = letzte
                y = 1
            ElseIf i = letzte And y = 0 Then 'Last nicht vorhanden
                MsgBox "Die gew|fffd|hlten Lastdaten wurden nicht gefunden. W|fffd|hlen Sie bitte vor der Berechnung andere Lastdaten aus.", vbOKOnly, "Produktname"
                Range("Last_neu").Value = ""
                Range("Lastprofil_neu").Value = ""
            End If
        Next
        
        y = 0
        
        Range("L_VL_min") = ""
        Range("L_VL_max") = ""
        Range("L_RL_min") = ""
        Range("L_RL_max") = ""
        
        'Lastskalierung berechnen und kopieren
        Sheets("Berechnung System").Range("E:E").Calculate
        Sheets("Berechnung System").Range("E11:E8770").Copy
        Sheets("Last").Range("Last_skaliert").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        
        Sheets("Last").Range("N37").Calculate

    End If
    
    'Parameter nocheinmal setzen, damit die Anzeige auf dem Hauptblatt stimmt
    Range("Y_Netz").Value = Sheets("Archiv").Cells(61, c).Value
    Range("Y_Rohre").Value = Sheets("Archiv").Cells(66, c).Value
    Range("Y_R").Value = Sheets("Archiv").Cells(69, c).Value
    Range("Y_WT").Value = Sheets("Archiv").Cells(80, c).Value
    Range("YWT_Netz").Value = Sheets("Archiv").Cells(82, c).Value
    Range("Y_Speicher").Value = Sheets("Archiv").Cells(84, c).Value
    Range("Ydezentral").Value = Sheets("Archiv").Cells(89, c).Value
    
    If Range("Y_Rohre").Value = 0 Then
        Sheets("Hauptblatt").chk_Rohre = False
    ElseIf Range("Y_Rohre").Value <> 0 Then
        Sheets("Hauptblatt").chk_Rohre = True
    End If
    
    If Range("Y_WT").Value = 0 Then
        Sheets("Hauptblatt").chk_WUE1 = False
    ElseIf Range("Y_WT").Value = 1 Then
        Sheets("Hauptblatt").chk_WUE1 = True
    End If
        
    If Range("Y_Speicher").Value = 0 Then
        Sheets("Hauptblatt").chk_Speicher = False
'        Sheets("Config").Range("Anzeige") = 12
    ElseIf Range("Y_Speicher").Value = 1 Then
        Sheets("Hauptblatt").chk_Speicher = True
    End If
    
    If Range("YWT_Netz").Value = 0 Then
        Sheets("Hauptblatt").chk_WUE2 = False
    ElseIf Range("YWT_Netz").Value = 1 Then
        Sheets("Hauptblatt").chk_WUE2 = True
    End If
    

    Application.EnableEvents = True
    
    Sheets("Config").Unprotect Password:=SCFWPW
    Sheets("Config").Range("Aktualisierung") = 1

    
    Application.ScreenUpdating = True
    
    If DebugMode = 0 Then
'        Sheets("Archiv").Protect Password:=SCFWPW
        Sheets("Parameter").Protect Password:=SCFWPW
        Sheets("Config").Protect Password:=SCFWPW
        Sheets("Berechnung").Protect Password:=SCFWPW
'        Sheets("Last").Protect Password:=SCFWPW
    End If

    Sheets("Parameter").Visible = False
    
    Unload Me
    

End Sub


Private Sub cmdCancel_Click()

    Unload Me

End Sub


Attribute VB_Name = "frmNetz"
Attribute VB_Base = "0{FAA59844-F977-4D60-A5B2-5A5CC526969E}{C66D2EA9-80BB-4CD2-A8C8-C6B00D2061C7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit



Private Sub UserForm_Initialize()

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 345)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 405)

    Dim letzte As Long, Zeile As Long


    On Error GoTo Fehler 'wenn die Last nicht gefunden wird
    
    If Range("Ydezentral").Value = 1 Then
        chk_Skal.Value = False
        txt_Last_skal.Enabled = False
        txt_Last_skal.BackColor = &H80000016
        chk_dezentral.Value = True
        chk_Skal.Value = False
    ElseIf Range("Ydezentral").Value = 0 Then
        If Range("Y_Skal").Value = 1 Then
            chk_Skal.Value = True
            txt_Last_skal.Enabled = True
            txt_Last_skal.BackColor = &H80000005
            If Range("Last_skal").Value = 0 Then
                txt_Last_skal.Value = WorksheetFunction.Round(WorksheetFunction.Sum(Sheets("Last").Range("D11:D8770")) / 1000, 1)
            Else: txt_Last_skal.Value = Range("Last_skal").Value
            End If
        ElseIf Range("Y_Skal").Value = 0 Then
            chk_Skal.Value = False
            txt_Last_skal.Enabled = False
            txt_Last_skal.BackColor = &H80000016
        End If
    
        chk_dezentral.Value = False
    End If
    
    'Bezeichnungen der abgespeicherten Versionen in das Auswahlfeld laden
    Me.cboLast.RowSource = "List_Last"
    Me.cboLast.Value = Sheets("Last").Range("Lastname")
    
    Exit Sub

Fehler:

    Sheets("Last_Archiv").Unprotect Password:=SCFWPW

    'Liste mit den Namen der Lastprofile neu anlegen
    letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 1
    If letzte = 2 Then
        letzte = 5
    End If

    ActiveWorkbook.Names.Add Name:="Names_Last", _
    RefersToR1C1:="= Last_Archiv!R2C3:R2C" & letzte

    ' Namen aller Varianten in die erste freie Spalte schreiben

    ActiveWorkbook.Names.Add Name:="List_Last2", _
    RefersToR1C1:="= Last_Archiv!R2C" & letzte + 2 & ":R" & letzte - 1 & "C" & letzte + 2

    Zeile = Round(letzte / 3, 0) + 1

    ActiveWorkbook.Names.Add Name:="List_Last", _
    RefersToR1C1:="= Last_Archiv!R1C" & letzte + 1 & ":R" & Zeile & "C" & letzte + 1

    Range("Names_Last").Copy
    Range("List_Last2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=True

    Sheets("Last_Archiv").Range("List_Last2").AdvancedFilter _
    Action:=xlFilterCopy, _
    CopytoRange:=Sheets("Last_Archiv").Range("List_Last"), _
    Unique:=True

    Range("List_Last2").Value = ""

    ActiveWorkbook.Names.Add Name:="List_Last", _
    RefersToR1C1:="= Last_Archiv!R2C" & letzte + 1 & ":R" & Zeile & "C" & letzte + 1

    Sheets("Last_Archiv").Cells(1, letzte + 1).Value = ""

    Me.cboLast.RowSource = "List_Last"

    
End Sub


Private Sub chk_dezentral_Click()

    If chk_dezentral = True Then
        chk_Skal.Enabled = False
        chk_Skal.Value = False
        txt_Last_skal.Enabled = False
        txt_Last_skal.BackColor = &H80000016
    ElseIf chk_dezentral = False Then
        chk_Skal.Enabled = True
        txt_Last_skal.Enabled = True
        txt_Last_skal.BackColor = &H80000005
    End If

End Sub


Private Sub chk_Skal_Click()

    If chk_Skal.Value = True Then
        txt_Last_skal.Enabled = True
        txt_Last_skal.BackColor = &H80000005
        txt_Last_skal.Value = Range("Last_skal").Value
    ElseIf chk_Skal.Value = False Then
        txt_Last_skal.Enabled = False
        txt_Last_skal.BackColor = &H80000016
    End If

End Sub



Private Sub cmdDelete_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Last_Archiv").Unprotect Password:=SCFWPW
    
    Dim i As Long, c As Long, letzte As Long, Zeile As Long
    Dim Antwort As Integer
    
    If cboLast.Value = "" Then
        MsgBox "W|fffd|hlen Sie ein Lastprofil aus, um es zu l|fffd|schen!", vbOKOnly, "Lastprofil w|fffd|hlen"
        Exit Sub
    End If
    
    letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 1
    
    Antwort = MsgBox("M|fffd|chten Sie das Lastprofil " & Me.cboLast.Value & " wirklich aus dem Archiv l|fffd|schen?", vbYesNo, "Lastprofil l|fffd|schen")
    
    If Antwort = 6 Then
    
        'Spalte der ausgew|fffd|hlten Version l|fffd|schen
        For i = 6 To letzte
            If Sheets("Last_Archiv").Cells(2, i).Value = Me.cboLast.Value Then
                Sheets("Last_Archiv").Columns(i).Delete Shift:=xlToLeft
                i = i - 1
            End If
        Next
        
        letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 1
        
        ActiveWorkbook.Names.Add Name:="Names_Last", _
        RefersToR1C1:="= Last_Archiv!R2C3:R2C" & letzte
        
        Sheets("Last_Archiv").Columns(letzte + 1).Value = ""
                    
        ' Namen aller Varianten in die erste freie Spalte schreiben
        
        ActiveWorkbook.Names.Add Name:="List_Last2", _
        RefersToR1C1:="= Last_Archiv!R2C" & letzte + 2 & ":R" & letzte - 1 & "C" & letzte + 2
        
        Zeile = Round(letzte / 3, 0) + 1
        
        ActiveWorkbook.Names.Add Name:="List_Last", _
        RefersToR1C1:="= Last_Archiv!R1C" & letzte + 1 & ":R" & Zeile & "C" & letzte + 1
    
        Range("Names_Last").Copy
        Sheets("Last_Archiv").Range("List_Last2").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=True
        
        Range("List_Last2").AdvancedFilter _
        Action:=xlFilterCopy, _
        CopytoRange:=Sheets("Last_Archiv").Range("List_Last"), _
        Unique:=True
        
        Range("List_Last2").Value = ""
        
        ActiveWorkbook.Names.Add Name:="List_Last", _
        RefersToR1C1:="= Last_Archiv!R2C" & letzte + 1 & ":R" & Zeile & "C" & letzte + 1
    
        Sheets("Last_Archiv").Cells(1, letzte + 1).Value = ""
        
        Call UserForm_Initialize
        Me.cboLast.ListIndex = 0

    ElseIf Antwort = 7 Then
        Exit Sub
        
    End If

    Application.EnableEvents = True
    Application.ScreenUpdating = True
    

End Sub


Private Sub cmdBearbeiten_Click()
    
    'Code aus cmdOK_click
    Dim i As Long, letzte As Long
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    If cboLast.Value = "" Then
        MsgBox "W|fffd|hlen Sie ein Lastprofil aus, um es zu bearbeiten!", vbOKOnly, "Lastprofil w|fffd|hlen"
        Exit Sub
    End If
    
    Sheets("Last_Archiv").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
    
    letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 1
    
    'Spalten der ausgew|fffd|hlten Version in das Blatt Last kopieren
    For i = 2 To letzte
        If Sheets("Last_Archiv").Cells(2, i).Value = Me.cboLast.Value And Sheets("Last_Archiv").Cells(8760, i).Value <> "" Then
            Sheets("Last").Range("Lastname").Value = Me.cboLast.Value
            ActiveWorkbook.Names.Add Name:="Lastprofil_Archiv", _
            RefersToR1C1:="= Last_Archiv!R3C" & i & ":R8762C" & i + 2
            Sheets("Last_Archiv").Range("Lastprofil_Archiv").Locked = False
            Sheets("Last_Archiv").Range("Lastprofil_Archiv").Copy
            Sheets("Last").Range("Lastprofil_neu").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Range("Last_neu").Value = Sheets("Last_Archiv").Cells(2, i).Value
            Application.CutCopyMode = False
            Sheets("Last_Archiv").Range("Lastprofil_Archiv").Locked = True
            i = letzte
        End If
    Next
    
    Sheets("Last").Range("Bearbeiten").Value = 1
    Sheets("Last").Select
    Sheets("Last").Unprotect Password:=SCFWPW
    Sheets("Last").Calculate
    
    Unload Me
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True

    Exit Sub

End Sub


Private Sub cmdDateneingabe_Click()

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Sheets("Last_Archiv").Unprotect Password:=SCFWPW
    Sheets("Last").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
    
    Dim c As Long, letzte As Long, i As Long
    
    letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column
            
    'eindeutiger Name notwendig
    For i = 3 To letzte
        If Sheets("Last_Archiv").Cells(2, i).Value = txt_Last_neu.Value Then
            MsgBox "Bitte geben Sie einen eindeutigen Namen f|fffd|r das Lastprofil ein!", vbOKOnly, "Name des Lastprofils"
            Exit Sub
        End If
    Next

    If txt_Last_neu.Value = "" Then
        MsgBox "Bitte geben Sie einen Namen f|fffd|r das Lastprofil ein!", vbOKOnly, "Name des Lastprofils"
        Exit Sub
    End If
    
    Sheets("Last_Archiv").Cells(1, letzte).Value = ""
    
    Sheets("Last_Archiv").Cells(2, letzte).Value = txt_Last_neu.Value
    Sheets("Last_Archiv").Cells(2, letzte + 1).Value = txt_Last_neu.Value
    Sheets("Last_Archiv").Cells(2, letzte + 2).Value = txt_Last_neu.Value
    
    
    Sheets("Last").Select
    Sheets("Last").Range("Bearbeiten").Value = 2
    Sheets("Last").Range("Lastname").Value = txt_Last_neu.Value
    frmNetz.Hide
    
    Unload Me
    
'    Sheets("Last").Unprotect Password:=SCFWPW
    
    Application.EnableEvents = True
    Application.ScreenUpdating = True

End Sub



Private Sub cmdOK_Click()

    Dim i As Long, letzte As Long
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
'    Sheets("Last").Unprotect Password:=SCFWPW
    Sheets("Last_Archiv").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW
    
    letzte = Sheets("Last_Archiv").Cells(2, Columns.Count).End(xlToLeft).Column - 1
    
    'Spalten der ausgew|fffd|hlten Version in das Blatt Last kopieren
    For i = 2 To letzte
        If Sheets("Last_Archiv").Cells(2, i).Value = Me.cboLast.Value And Sheets("Last_Archiv").Cells(8760, i).Value <> "" Then
            Sheets("Last").Range("Lastname").Value = Me.cboLast.Value
            ActiveWorkbook.Names.Add Name:="Lastprofil_Archiv", _
            RefersToR1C1:="= Last_Archiv!R3C" & i & ":R8762C" & i + 2
            Sheets("Last_Archiv").Range("Lastprofil_Archiv").Copy
            Sheets("Last").Range("Lastprofil_neu").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Range("Last_neu").Value = Sheets("Last_Archiv").Cells(2, i).Value
            i = letzte
        End If
    Next
    
    Range("L_VL_min") = ""
    Range("L_VL_max") = ""
    Range("L_RL_min") = ""
    Range("L_RL_max") = ""
    
    Range("Bearbeiten").Value = 0
    
    Sheets("Parameter").Unprotect Password:=SCFWPW
    
    If chk_Skal.Value = True Then
        Range("Y_Skal").Value = 1
        'Meldung, wenn keine Lastskalierung eingegeben wurde
        If Seperator(txt_Last_skal.Value) = "" Or Seperator(txt_Last_skal.Value) <= 0 Then
            MsgBox "Der Wert f|fffd|r die Lastskalierung muss gr|fffd||fffd|er 0 sein.", vbOKOnly, "Lastskalierung"
            Exit Sub
        End If
        Range("Last_skal").Value = Seperator(txt_Last_skal.Value)
    ElseIf chk_Skal.Value = False Then
        Range("Y_Skal").Value = 0
    End If

    'Last berechnen und kopieren
    Sheets("Berechnung System").Range("E:E").Calculate
    Sheets("Berechnung System").Range("E11:E8770").Copy
    Sheets("Last").Range("Last_skaliert").PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    Application.CutCopyMode = False
    
    Sheets("Last").Range("N37").Calculate

    If cboLast.Value = "" Then
        MsgBox "Bitte w|fffd|hlen Sie ein Lastprofil aus!", vbOKOnly, "Lastprofil w|fffd|hlen"
        Exit Sub
    End If
    
    
    Application.EnableEvents = True
        
    If chk_dezentral.Value = True Then
        Range("Ydezentral").Value = 1
        Sheets("Hauptblatt").chk_Speicher = False
        Sheets("Hauptblatt").chk_Speicher.Enabled = False
    ElseIf chk_dezentral.Value = False Then
        Range("Ydezentral").Value = 0
        Sheets("Hauptblatt").chk_Speicher.Enabled = True
        'Meldung, wenn keine Leistung in den Lastdaten enthalten ist
        If Sheets("Last").Range("D12").Value = "" Then
        MsgBox "Dieses Lastprofil enth|fffd|lt nur die Netztemperaturen." & vbNewLine & _
        "Wenn Sie eine Berechnung mit W|fffd|rmenetz durchf|fffd|hren m|fffd|chten, erg|fffd|nzen Sie bitte die st|fffd|ndliche W|fffd|rmeleistung." & vbNewLine & _
        "Andernfalls aktivieren Sie das Kontrollk|fffd|stchen f|fffd|r eine direkte W|fffd|rmeeinspeisung.", vbOKOnly, "Lastprofil"
        Exit Sub
        End If
    End If
        
    
    If Sheets("Config").Range("Aktualisierung") = 0 Then
        Sheets("Config").Unprotect Password:=SCFWPW
        Sheets("Config").Range("Aktualisierung") = 1
    End If
    
    If DebugMode = 0 Then
'        Sheets("Last").Protect Password:=SCFWPW
        Sheets("Last_Archiv").Protect Password:=SCFWPW
        Sheets("Parameter").Protect Password:=SCFWPW
        Sheets("Config").Protect Password:=SCFWPW
    End If
        
    Unload Me
    
    Application.ScreenUpdating = True
    
End Sub




Private Sub cmdCancel_Click()

Unload Me

End Sub
Attribute VB_Name = "frmNeuerOrt"
Attribute VB_Base = "0{C6D3B669-B158-4B88-8C97-BC9DADD289F3}{206DEBC1-5A27-41EB-820B-5337BEA357DA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub UserForm_Initialize()

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 285)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 310)

    Dim letzte As Integer
    
    letzte = Sheets("config").Cells(Rows.Count, 17).End(xlUp).Row + 1
    
    Me.cboOrt.RowSource = "config!Q4:Q" & letzte
    
End Sub

Private Sub cmdOK_Click()
        
    Application.ScreenUpdating = False
    Application.EnableEvents = False
'    Sheets("Neuer Ort").Unprotect Password:=SCFWPW

    ' Blattvorlage 'Neuer Ort' kopieren und f|fffd|r diesen Ort anlegen
    If SheetnameOK("_" & txtOrt) = True Then
        Sheets("Neuer Ort").Copy After:=Sheets("_W|fffd|rzburg")  'neues Blatt ans Ende Stellen
        ' Blatt umbenennen
        Sheets("Neuer Ort (2)").Visible = True
        Sheets("Neuer Ort (2)").Activate
        Sheets("Neuer Ort (2)").Name = "_" & txtOrt
        
        ' Name des Orts eintragen und Blattschutz aufheben
        Sheets("_" & txtOrt).Unprotect Password:=SCFWPW
        ActiveSheet.Range("B1").Value = txtOrt
        
        Call Ortsliste
        
        Unload Me
        
    Else ' The suggested name of the location is not a valid sheet name
        Call MsgBox("Bitte geben Sie einen g|fffd|ltigen Namen ein." & vbNewLine & _
            "Der Name darf keine Sonderzeichen enthalten und h|fffd|chstens 30 Zeichen lang sein." & vbNewLine & _
            "Au|fffd|erdem darf der Name noch nicht in der Mappe vorhanden sein.", vbOKOnly, "Ung|fffd|ltiger Ortsname")
    End If

    Application.ScreenUpdating = True
    Application.EnableEvents = True


End Sub


Private Sub Ortsliste()

    Application.ScreenUpdating = False
    Sheets("Config").Unprotect Password:=SCFWPW
    Sheets("Parameter").Unprotect Password:=SCFWPW

    'Liste mit angelegten Orten leeren
    Sheets("Config").Columns(17) = ""
    
'    Sheets("Config").Select
    
    Dim BlattNr As Integer
    Dim i As Integer
    
    
    'Liste mit den angelegten Orten im Blatt Config anlegen
    i = 4
    
    For BlattNr = 1 To ThisWorkbook.Worksheets.Count
        If Left(Sheets(BlattNr).Name, 1) = "_" Then
            Sheets("config").Cells(i, 17) = Right(Worksheets(BlattNr).Name, Len(Worksheets(BlattNr).Name) - 1)
            i = i + 1
        End If
    Next BlattNr
    
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Sheets("Config").Unprotect Password:=SCFWPW
    
    'Ortsliste alphabetisch sortieren
    ActiveWorkbook.Worksheets("Config").Sort.SortFields.Add Key:=Range("Q4"), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortTextAsNumbers
    ActiveWorkbook.Worksheets("Config").Sort.SortFields.Clear
    With ActiveWorkbook.Worksheets("Config").Sort
        .SetRange Range(Cells(4, 17), Cells(i - 1, 17))
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    

    'Liste mit den Orten im Auswahlfeld Standort anzeigen
    ActiveWorkbook.Names.Add Name:="Orte", _
    RefersTo:="=" + Sheets("Config").[Q4].CurrentRegion.Address(External:=True)

    Range("Ort") = Sheets("Config").Range("Q4")


End Sub



Private Sub cmdDelete_Click()

    Dim Ortname As String
    
    On Error GoTo Fehler
    
    If cboOrt.Value = "" Then
        MsgBox "Bitte w|fffd|hlen Sie den Ort aus, den Sie l|fffd|schen m|fffd|chten.", vbOKOnly, "Ort ausw|fffd|hlen"
        Exit Sub
    Else: Ortname = "_" & cboOrt.Value
        Sheets(Ortname).Delete
        Call Ortsliste
    End If
    
    Unload Me
    
    frmAllgemein!cboStandort.Value = Sheets("Config").Range("Q4")
    frmAllgemein.Show
    
    Exit Sub
    
    
    'Wenn einer der mitgelieferten Orte gel|fffd|scht werden soll
Fehler:
    MsgBox "Dieser Ort kann nicht gel|fffd|scht werden.", vbOKOnly, "Ort l|fffd|schen"
    Exit Sub

End Sub


Private Sub cmdCancel_Click()
    Unload Me
    frmAllgemein.Show
End Sub


Attribute VB_Name = "frmRohre"
Attribute VB_Base = "0{D10AA5DC-69F4-4A8D-95B5-687D1535D3F2}{E47DD08F-85F0-4BCE-96CB-B675A5644D2F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Public Sub UserForm_Initialize()

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 390)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 338)

    txt_VRV.Value = Range("VRV").Value
    txt_KK.Value = Range("KK").Value
    

    If Range("Y_R").Value = 1 Then
        cbo_Y_R = "oberirdisch"
        txt_Lrbin.Value = Range("Lrbin").Value
        txt_Drbin.Value = Range("Drbin").Value
        txt_KR.Value = Range("P_KR").Value
        
    ElseIf Range("Y_R").Value = 2 Then
        cbo_Y_R = "erdvergraben"
        txt_Lrbin.Value = Range("Lrbin_E").Value
        txt_Drbin.Value = Range("Drbin_E").Value
        txt_KR.Value = Range("P_KR_E").Value
        
    ElseIf Range("Y_R").Value = 3 Then
        cbo_Y_R = "konstante Umgebungstemperatur"
        txt_Lrbin.Value = Range("Lrbin_kT").Value
        txt_Drbin.Value = Range("Drbin_kT").Value
        txt_KR.Value = Range("P_KR_kT").Value
        txt_T_Ru.Value = Range("T_Ru").Value
    
    End If


End Sub



Private Sub cbo_Y_R_Change()

    If cbo_Y_R = "konstante Umgebungstemperatur" Then
        txt_T_Ru.Visible = True
        txt_T_Ru.Enabled = True
        Label11.Visible = True
    Else:
        txt_T_Ru.Visible = False
        txt_T_Ru.Enabled = False
        Label11.Visible = False
    End If

End Sub



Private Sub cmdOK_Click()

    Application.ScreenUpdating = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    If Not IsNumeric(txt_VRV) Or Not IsNumeric(txt_KK) Or Not IsNumeric(txt_Lrbin) Or Not IsNumeric(txt_Drbin) Or Not IsNumeric(txt_KR) Or _
    txt_VRV.Value < 0 Or txt_KK.Value < 0 Or txt_Lrbin.Value < 0 Or txt_Drbin.Value < 0 Or txt_KR.Value < 0 Then
        MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
        Exit Sub
    End If

    Range("VRV").Value = Seperator(txt_VRV.Value)
    Range("KK").Value = Seperator(txt_KK.Value)

    If cbo_Y_R = "oberirdisch" Then
        Range("Y_R").Value = 1
        Range("Lrbin").Value = Seperator(txt_Lrbin.Value)
        Range("Drbin").Value = Seperator(txt_Drbin.Value)
        Range("P_KR").Value = Seperator(txt_KR.Value)
        
        Range("Lrbin_E").Value = 0
        Range("Drbin_E").Value = 0
        Range("P_KR_E").Value = 0
    
        Range("Lrbin_kT").Value = 0
        Range("Drbin_kT").Value = 0
        Range("P_KR_kT").Value = 0
        Range("T_Ru").Value = 0
    
    ElseIf cbo_Y_R = "erdvergraben" Then
        Range("Y_R").Value = 2
        Range("Lrbin_E").Value = Seperator(txt_Lrbin.Value)
        Range("Drbin_E").Value = Seperator(txt_Drbin.Value)
        Range("P_KR_E").Value = Seperator(txt_KR.Value)
    
        Range("Lrbin").Value = 0
        Range("Drbin").Value = 0
        Range("P_KR").Value = 0
    
        Range("Lrbin_kT").Value = 0
        Range("Drbin_kT").Value = 0
        Range("P_KR_kT").Value = 0
        Range("T_Ru").Value = 0
    
    ElseIf cbo_Y_R = "konstante Umgebungstemperatur" Then
        
        If Not IsNumeric(txt_T_Ru) Then
        MsgBox "Bitte geben Sie in alle Felder Zahlen ein!", vbOKOnly, "Ung|fffd|ltiger Wert"
        Exit Sub
        End If
        
        Range("Y_R").Value = 3
        Range("Lrbin_kT").Value = Seperator(txt_Lrbin.Value)
        Range("Drbin_kT").Value = Seperator(txt_Drbin.Value)
        Range("P_KR_kT").Value = Seperator(txt_KR.Value)
        Range("T_Ru").Value = Seperator(txt_T_Ru.Value)
    
        Range("Lrbin_E").Value = 0
        Range("Drbin_E").Value = 0
        Range("P_KR_E").Value = 0

        Range("Lrbin").Value = 0
        Range("Drbin").Value = 0
        Range("P_KR").Value = 0

    End If
    
    Range("Aktualisierung").Value = 1
    
Unload Me


End Sub



Private Sub cmdCancel_Click()

    Unload Me

End Sub
Attribute VB_Name = "frmSpeicher"
Attribute VB_Base = "0{86EBE192-15C8-4C18-AADA-3DF40AFF6119}{7E1CC0FB-3A3E-479A-91DF-A3D36EC3E785}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 225)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 310)

    txt_VS.Value = Range("VS").Value
    txt_Tsmax.Value = Range("Tsmax").Value
    txt_Qsa.Value = Range("Qsa").Value
    txt_Kas.Value = Range("Kas").Value

End Sub



Private Sub cmdOK_Click()

Dim QSmax As Integer

    Application.ScreenUpdating = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    Range("VS").Value = Seperator(txt_VS.Value)
    Range("Tsmax").Value = Seperator(txt_Tsmax.Value)
    Range("Qsa").Value = Seperator(txt_Qsa.Value)
    Range("Kas").Value = Seperator(txt_Kas.Value)
    
    QSmax = 1.16 * Range("VS").Value * (Range("Tsmax").Value - Range("L_RL_mean").Value) / 1000
    
    If Range("Qsa").Value > QSmax Then
        MsgBox "Der maximale Speicherinhalt betr|fffd|gt " & QSmax & " MWh. Bitte w|fffd|hlen Sie einen niedrigeren Speicherinhalt zu Beginn.", vbOKOnly, "Speicherinhalt"
        Exit Sub
    End If
    
    Range("Aktualisierung") = 1
    
    Unload Me

End Sub



Private Sub cmdCancel_Click()

    Unload Me

End Sub
Attribute VB_Name = "frmWUE1"
Attribute VB_Base = "0{232596A2-4D5A-47C4-90A2-457399451D95}{6F5360AB-E3B3-4399-9BBA-0F6B00A42CE5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize()

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 155)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 260)

    txt_DT_WT_Solar.Value = Range("DT_WT_Solar").Value

End Sub



Private Sub cmdOK_Click()

    Application.ScreenUpdating = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    Range("DT_WT_Solar").Value = Seperator(txt_DT_WT_Solar.Value)
    Range("Aktualisierung") = 1
    
    Unload Me

End Sub



Private Sub cmdCancel_Click()

    Unload Me

End Sub
Attribute VB_Name = "frmWUE2"
Attribute VB_Base = "0{4B213F88-7E27-4A0C-9112-7BAB35B52A9F}{C1A4E07E-4D6C-4D9B-BF2E-4F6758184D1D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub UserForm_Initialize()

    Me.Height = WorksheetFunction.Min(Application.ActiveWindow.Height, 155)
    Me.Width = WorksheetFunction.Min(Application.ActiveWindow.Width, 260)

    txt_DT_WT_Netz.Value = Range("DT_WT_Netz").Value

End Sub



Private Sub cmdOK_Click()

    Application.ScreenUpdating = False
    Sheets("Parameter").Unprotect Password:=SCFWPW
    Sheets("Config").Unprotect Password:=SCFWPW

    Range("DT_WT_Netz").Value = Seperator(txt_DT_WT_Netz.Value)
    Range("Aktualisierung") = 1
    
    Unload Me

End Sub



Private Sub cmdCancel_Click()

    Unload Me

End Sub


INQUEST-PP=macro
