Attribute VB_Name = "AutoGETMes"
Attribute VB_Base = "0{A204921A-499E-44F6-BE34-E688F1DEC823}{AA936599-2DBA-4C0F-99A2-CCF48D240688}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub cmdAutoFinBtn_Click()
    '
   UNIDOSwebline_for_Excel.IsStopButtonClicked = True
   UNIDOSwebline_for_Excel.Enabled = True
   Unload AutoGETMes
End Sub


Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    
    If UNIDOSwebline_for_Excel.Enabled = False Then
        UNIDOSwebline_for_Excel.Enabled = True
    End If
    
End Sub
Attribute VB_Name = "Module1"
Sub cmdFormOpen()

   UNIDOSwebline_for_Excel.Show   '|fffd|i1|fffd|j

End Sub



Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub UNIDOSwebline_for_Excel_AddinInstall()

    Dim myToolBar As CommandBar
    Dim myButton As CommandBarButton
    On Error Resume Next
    Application.CommandBars("UNIDOSwebline for Excel").Delete
    Set myToolBar = Application.CommandBars.Add _
        (Name:="UNIDOSwebline for Excel")
    Set myButton = myToolBar.Controls.Add _
        (Type:=msoControlButton)
    With myButton
        .Caption = "UNIDOSwebline for Excel"
        .FaceId = 59
        .Style = msoButtonIconAndCaption
        .OnAction = "UNIDOSwebline for Excel"
    End With
    myToolBar.Visible = True

End Sub

Private Sub UNIDOSwebline_for_Excel_AddUninInstall()
    
    Application.CommandBars("UNIDOSwebline for Excel").Delete

End Sub

Attribute VB_Name = "UNIDOSwebline_for_Excel"
Attribute VB_Base = "0{19075130-CFB9-40E1-969B-8198DC7A4754}{3573953A-4422-4E35-9AC1-B9624B3E4366}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Const constSP As String = " "

Private Type IniSetting
   UNIDOSwebline_PortNum As Integer
   UNIDOSwebline_Cursor As Integer

   Barometer_Enable As Boolean
   Barometer_Type As Integer
   Barometer_Unit As Integer
   Barometer_PortNum As Integer
   Barometer_Cursor As Integer
   
   Temperature_Enable As Boolean
   Temperature_Type As Integer
   Temperature_PortNum As Integer
   Temperature_Cursor As Integer
   
   SoundSTART As String
   SoundHOLD As String
   SoundWRITE As String
   SoundRESET As String
   SoundZERO As String
   SoundPRESSURE As String
   SoundTEMP As String
   SoundAUTO As String
   SoundAUTORESET As String
   SoundMANUAL As String
   SoundAUTOGET As String
   
End Type

Private IniSettingTable As IniSetting

'Stop|fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a0bd||fffd||fffd|IsStopButtonClicked = True

Private IsStopButtonClicked_ As Boolean

Property Get IsStopButtonClicked() As Boolean
    IsStopButtonClicked = IsStopButtonClicked_
End Property

Property Let IsStopButtonClicked(ByVal vData As Boolean)
    IsStopButtonClicked_ = vData
End Property

Sub Stop_Button_Clicked()
  IsStopButtonClicked = True
End Sub

' |fffd|Z|fffd||fffd||fffd||693||fffd|
Private Sub Move_ActiveCell(ComboText As String)

    If ComboText = "|fffd||fffd|" Then
       ActiveCell.Offset(1, 0).Activate
    
       ElseIf ComboText = "|fffd|E" Then
        ActiveCell.Offset(0, 1).Activate
   
       Else
    
        ActiveCell.Offset(1, 0).Activate
   
    End If

End Sub

' GetPortNum(COM_Num): |fffd||7c2||fffd|l|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||50d||fffd|
Private Function GetPortNum(COM_Num As String) As String
    
   Dim letter As String
   Dim port_no As String
   Dim PTW As String
   Dim strCmd As String
         
   GetPortNum = ""
   letter = COM_Num
   port_no = ""
   
   'COM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd||14c82||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|COM|fffd||250||752||80b7||fffd||fffd|
    Do While InStr(letter, "(COM") <> 0
        letter = Mid(letter, InStr(letter, "(COM") + 4)
        port_no = port_no + Mid(letter, 1, InStr(letter, ")") - 1)
        If InStr(letter, "(COM") <> 0 Then
            port_no = port_no & ","
        End If
    Loop
    
   GetPortNum = port_no
   
End Function

Public Sub GetSerialPort()
   
   Dim Serial        As Object
   Dim SerialSet     As Object
   Dim objWMIService As Object
   Dim strComputer   As String
   Dim intCnt        As Integer    '|fffd|v|fffd|f|fffd||fffd|
   Dim strComName    As String     '|fffd||64fe||fffd||fffd||fffd||fffd||fffd|f|fffd|o|fffd|C|fffd|X|fffd||fffd|
   Dim ListB As ListBox
   
On Error GoTo ElseError

   strComputer = "."
   Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\cimv2")

   Set SerialSet = objWMIService.ExecQuery("Select * from Win32_PNPEntity Where " & _
                    "(ClassGuid = '{4D36E978-E325-11CE-BFC1-08002BE10318}') and " & _
                    "(Name like '%(COM%)')")

   '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||202||fffd||fffd||fffd||383||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|\|fffd||fffd||fffd||fffd||fffd||10f||fffd||fffd||fffd||fffd||14c82||fffd||fffd||fffd|
   If SerialSet.Count < 1 Then
      cmbUNIDOSPortNum.Clear
      cmbBarometerPortNum.Clear
      cmbTemperaturePortNum.Clear
      MsgBox "|fffd|V|fffd||fffd||fffd|A|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd||94|\|fffd||203|V|fffd||fffd||fffd|A|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||113|x|fffd|N|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      
   Else
      
      '|fffd|S|fffd|||fffd|[|fffd|g|fffd||310||fffd|(|fffd||64fe||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||690||fffd|)
      intCnt = SerialSet.Count
   
      '|fffd||fffd||fffd||30e||64fe|
      cmbUNIDOSPortNum.Clear
      cmbBarometerPortNum.Clear
      cmbTemperaturePortNum.Clear
      
      For Each Serial In SerialSet
         '|fffd|f|fffd|o|fffd|C|fffd|X|fffd||fffd||fffd||fffd||fffd||64fe| |fffd|u"|fffd||290|M|fffd|||fffd|[|fffd|g (COM1)"|fffd|v
         strComName = GetPortNum(Serial.Name)
         If strComName <> "" Then
            cmbUNIDOSPortNum.AddItem Trim(strComName)
            cmbBarometerPortNum.AddItem Trim(strComName)
            cmbTemperaturePortNum.AddItem Trim(strComName)
         End If
         
      Next
      
      ' |fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|
   End If
      
      
On Error GoTo EndEnd

    Exit Sub

ElseError:
   MsgBox "|fffd|V|fffd||fffd||fffd|A|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||256||fffd||80aa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd||113|x|fffd|N|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical

   
EndEnd:


End Sub


Private Sub Auto_Get_Click()

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundAUTOGET


On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long
    
    Dim Ctrl As Control

    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    If ActiveCell.Count <= 0 Then
        MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
        Exit Sub
    End If
    
    IsStopButtonClicked = False
    UNIDOSwebline_for_Excel.Enabled = False
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
   
'|fffd|K|fffd||fffd|UNIDOSweb|fffd||311||fffd||fffd||80c2||fffd|[|fffd|h|fffd||fffd|AutoStart & AutoReset|fffd||250||752||80b7||fffd||fffd|B
'|fffd|I|fffd|[|fffd|g|fffd|Q|fffd|b|fffd|g|fffd||fffd||fffd||343||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd|\|fffd||fffd|(|fffd|I|fffd|[|fffd|g|fffd|Q|fffd|b|fffd|g|fffd||fffd|)|fffd||fffd||fffd||10f|I|fffd||fffd||fffd|{|fffd|^|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||102||fffd||fffd||fffd||fffd|B
'Loop|fffd||30a|O|fffd||243||fffd||fffd|b|fffd|Z|fffd|[|fffd|W|fffd|{|fffd|b|fffd|N|fffd|X|fffd||fffd||fffd||c42c||fffd||fffd||fffd||202||fffd||fffd||fffd|Loop|fffd||fffd||fffd||24d||c42c||fffd||fffd||fffd||fffd||fffd||302||152||fffd||fffd||fffd|
    ec.AsciiLine = "S"  '|fffd|X|fffd|e|fffd|[|fffd|^|fffd|X|fffd||115d0|M|fffd||fffd||fffd||fffd|
    strValue1 = ec.AsciiLine
    
    ec.AsciiLine = "DUV;34;2"  'AutoStart & AutoReset|fffd||115d0|M|fffd||fffd||fffd||fffd|
    strValue1 = ec.AsciiLine
    
    ec.WAITmS = 5000      '1|fffd|bWait
    
    '|fffd|K|fffd||fffd||fffd||342||fffd||fffd||7c2||fffd|RESET|fffd||fffd||fffd||fffd|
    ec.AsciiLine = "RES"
    strValue1 = ec.AsciiLine
    
    '|fffd|I|fffd|[|fffd|g|fffd|Q|fffd|b|fffd|g|fffd|t|fffd|H|fffd|[|fffd||fffd||fffd|\|fffd||fffd|
    AutoGETMes.Show vbModeless
    
Again:

    ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
    ec.AsciiLine = "MV"
    strValue1 = ec.AsciiLine

    strValue() = Split(strValue1, ";")



  Do
  
  If strValue(1) = 7 Then GoTo one
  If Not strValue(1) = 7 Then GoTo Two
one:


    ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
    ec.AsciiLine = "MV"
    strValue1 = ec.AsciiLine

    strValue() = Split(strValue1, ";")
        
    'If Not strValue(1) = 7 Then GoTo Again
    'If strValue(1) = 7 Then GoTo ExitLoop
    
    ec.WAITmS = 1000      '1|fffd|bWait
    
    '[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If
        
  Loop
    
Two:
    
    
   Do
      
      If strValue(1) = 7 Then GoTo ExitLoop
      
      ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
      ec.AsciiLine = "MV"
      strValue1 = ec.AsciiLine
      
      strValue() = Split(strValue1, ";")
      
      ' |fffd||fffd||fffd||fffd|r|fffd||fffd||fffd||fffd|CLOSE|fffd||30f||a347||fffd||34f||fffd||fffd||fffd||fffd||fffd||fffd||702||202||fffd||fffd||14f|I|fffd||fffd||fffd||fffd||fffd||90b1||fffd||181|B
      DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
      If IsStopButtonClicked Then
         IsStopButtonClicked = False
         GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
       End If
    
   Loop
    
    
    
ExitLoop:
  
    
    ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strValue(10) = strValue(4) * 1000000000
    ActiveCell.Value = strValue(10)

    ec.WAITmS = 1000      '1|fffd|bWait
    
    '[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    Move_ActiveCell (cmbUNIDOSCursorDirection.Text)

GoTo Again

On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub
        

ElseError:
    MsgBox "Get Value|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
EndEnd:
    If UNIDOSwebline_for_Excel.Enabled = False Then
        UNIDOSwebline_for_Excel.Enabled = True
    End If

End Sub

Private Sub Auto_Kpol_Click()


On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, X As Long
    Dim T As Integer
    Dim n As Integer
    Dim HV As String

    If Numbers.Value = "" And TextBox_Time.Value = "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||191||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf Numbers.Value <> "" And TextBox_Time.Value = "" Then
      MsgBox "|fffd||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf Numbers.Value = "" And TextBox_Time.Value <> "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    n = Numbers.Value
    T = TextBox_Time.Value

   '[|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|]
    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    If ActiveCell.Count <= 0 Then
        MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
        Exit Sub
    End If

    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
    If cmbHV.Text = "+400" Then
       HV = "HV;+400"
    
       ElseIf cmbHV.Text = "+300" Then
          HV = "HV;+300"

       ElseIf cmbHV.Text = "+200" Then
          HV = "HV;+200"
         
       ElseIf cmbHV.Text = "+150" Then
          HV = "HV;+150"
         
       ElseIf cmbHV.Text = "+100" Then
          HV = "HV;+100"

       ElseIf cmbHV.Text = "-100" Then
          HV = "HV;-100"
       
       ElseIf cmbHV.Text = "-150" Then
          HV = "HV;-150"
       
       ElseIf cmbHV.Text = "-200" Then
          HV = "HV;-200"
          
       ElseIf cmbHV.Text = "-300" Then
          HV = "HV;-300"
    
        ElseIf cmbHV.Text = "-400" Then
          HV = "HV;-400"
       
       ElseIf cmbHV.Text = "0" Then
          HV = "HV;+0"
           
       Else
    
          HV = "HV;" + Trim(cmbHV.Text)
    End If
     
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|


    ec.COMn = 0                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
    ec.WAITmS = 25000      '25|fffd|bWait

'[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

'[|fffd||fffd||fffd||fffd|+]
For i = 1 To n
    
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    '|fffd|J|fffd|n
     ec.AsciiLine = "STA"
     STA = ec.AsciiLine
    
    'T|fffd|b|fffd||fffd||fffd||fffd|
     ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
        
    'HOLD
    ec.AsciiLine = "HLD"
    ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
    HLD = ec.AsciiLine

    ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
    ec.AsciiLine = "MV"
    strValue1 = ec.AsciiLine

    strValue() = Split(strValue1, ";")
    
    ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strValue(10) = strValue(4) * 1000000000
    ActiveCell.Value = strValue(10)
    
    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
    
    'RESET
    ec.AsciiLine = "RES"

    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
'[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

Next i

    '[|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|]
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
        
    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
    
    If cmbHV.Text = "+400" Then
       HV = "HV;-400"
    
    ElseIf cmbHV.Text = "+300" Then
       HV = "HV;-300"

    ElseIf cmbHV.Text = "+200" Then
       HV = "HV;-200"
      
    ElseIf cmbHV.Text = "+150" Then
       HV = "HV;-150"
      
    ElseIf cmbHV.Text = "+100" Then
       HV = "HV;-100"

    ElseIf cmbHV.Text = "-100" Then
       HV = "HV;+100"
    
    ElseIf cmbHV.Text = "-150" Then
       HV = "HV;+150"
    
    ElseIf cmbHV.Text = "-200" Then
       HV = "HV;+200"
       
    ElseIf cmbHV.Text = "-300" Then
       HV = "HV;+300"
 
     ElseIf cmbHV.Text = "-400" Then
       HV = "HV;+400"
    
    ElseIf cmbHV.Text = "0" Then
       HV = "HV;+0"
     
    Else
 
       HV = "HV;" + Trim(cmbHV.Text)
   
    End If
     
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|

    ec.COMn = 0                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|

    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
    
    ec.WAITmS = 25000      '25|fffd|bWait

'[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

'[|fffd||fffd||fffd||fffd|1/2]
   For i = 1 To n
      ec.Delimiter = ec.DELIMs.CrLf   ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Cr/Lf|fffd||fffd||fffd|w|fffd||fffd|
      Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

      '|fffd|J|fffd|n
       ec.AsciiLine = "STA"
       STA = ec.AsciiLine
      
      'T|fffd|b|fffd||fffd||fffd||fffd|
       ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
      
          
      'HOLD
      ec.AsciiLine = "HLD"
      ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
      HLD = ec.AsciiLine
      
      ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
      ec.AsciiLine = "MV"
      strValue1 = ec.AsciiLine
      
      strValue() = Split(strValue1, ";")
      
      ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      strValue(10) = strValue(4) * 1000000000
      ActiveCell.Value = strValue(10)
            
      '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
      Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
      
      'RESET
      ec.AsciiLine = "RES"
      
      ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
      
'[Stop|fffd||fffd||fffd||fffd|]
      DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
      If IsStopButtonClicked Then
        IsStopButtonClicked = False
        GoTo EndEnd
        'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
      End If

   Next i

ElseError:
'    MsgBox "Get Value|fffd|G|fffd||fffd||fffd|["
'    Exit Sub
    
EndEnd:

    MsgBox "|fffd||fffd||fffd||fffd|I|fffd||fffd|"

End Sub

Private Sub btnRefreshCOM_Click()

   'COM Port|fffd||fffd||fffd||10e||64fe|
   GetSerialPort

End Sub

Private Sub cmbBarometerCursorDirection_Change()
   
   IniSettingTable.Barometer_Cursor = cmbBarometerCursorDirection.ListIndex
   
End Sub


Private Sub cmbBarometerPortNum_Change()
   
   If cmbBarometerPortNum.Text <> "" Then
      IniSettingTable.Barometer_PortNum = CInt(cmbBarometerPortNum.Text)
   End If

End Sub

Private Sub cmbBarometerType_Change()

   IniSettingTable.Barometer_Type = cmbBarometerType.ListIndex

End Sub

Private Sub cmbBarometerUnit_Change()

   IniSettingTable.Barometer_Unit = cmbBarometerUnit.ListIndex

End Sub

Private Sub cmbTemperatureCursorDirection_Change()
   
   IniSettingTable.Temperature_Cursor = cmbTemperatureCursorDirection.ListIndex
   
End Sub

Private Sub cmbTemperaturePortNum_Change()
   
   If cmbTemperaturePortNum.Text <> "" Then
      IniSettingTable.Temperature_PortNum = CInt(cmbTemperaturePortNum.Text)
   End If
   
End Sub

Private Sub cmbTemperatureType_Change()
   
   IniSettingTable.Temperature_Type = cmbTemperatureType.ListIndex
   
End Sub

Private Sub cmdAutoMeasureMode_Click()

    ' AUTO mode
    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundAUTO

On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long
    
    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If

    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    ' AutoStart|fffd||752||fffd|
    ec.AsciiLine = "DUV;34;1"  'AutoStart|fffd||115d0|M|fffd||fffd||fffd||fffd|
    strValue1 = ec.AsciiLine
    
    
On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub
        

ElseError:
    MsgBox "|fffd|I|fffd|[|fffd|g(|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd|)|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
EndEnd:

End Sub


Private Sub cmdAutoMeasureResetMode_Click()

    ' AUTO mode
    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundAUTORESET

On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long
    
    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If

    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    ' AutoStart|fffd||752||fffd|
    ec.AsciiLine = "DUV;34;2"  'AutoStart & AutoReset|fffd||115d0|M|fffd||fffd||fffd||fffd|
    strValue1 = ec.AsciiLine
    
    
On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub
        

ElseError:
    MsgBox "|fffd|I|fffd|[|fffd|g(|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|L)|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
EndEnd:
End Sub

Private Sub cmdManualMeasureMode_Click()
    
    ' Manual mode
    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundMANUAL


On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long

    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)  ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    ' |fffd|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|
    ec.AsciiLine = "DUV;34;0"  '|fffd|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|
    strValue1 = ec.AsciiLine
    
    
On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub
        

ElseError:
    MsgBox "|fffd|}|fffd|j|fffd||fffd||fffd|A|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
EndEnd:
    
End Sub

Private Sub cmbUNIDOSPortNum_Change()
   
   If cmbUNIDOSPortNum.Text <> "" Then
      IniSettingTable.UNIDOSwebline_PortNum = CInt(cmbUNIDOSPortNum.Text)
   End If
   
End Sub

Private Sub cmbUNIDOSCursorDirection_Change()

   IniSettingTable.UNIDOSwebline_Cursor = cmbUNIDOSCursorDirection.ListIndex
  
End Sub

Private Sub GetPressure_Click()
     
     Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
     Dim i, T, n, X As Long

    ' COM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd|UNIDOS|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||193||fffd||fffd||fffd||fffd||50d||fffd||fffd||142||202||fffd||fffd||fffd||fffd|m|fffd|F
    If IniSettingTable.UNIDOSwebline_PortNum = IniSettingTable.Barometer_PortNum Then
        MsgBox "UNIDOSwebline|fffd||193||fffd||fffd||fffd|COM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||342||fffd||fffd|g|fffd|p|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|C|fffd||fffd||fffd|v|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
        Exit Sub
    End If
    
    If ActiveCell.Count <= 0 Then
        MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
        Exit Sub
    End If

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     'ec.Sound = "C:\Windows\Media\Windows User Account Control.wav"
      ec.Sound = IniSettingTable.SoundPRESSURE
      
On Error GoTo ElseError

   If cmbBarometerType.Text = "T-68/T-68K" Or cmbBarometerType.Text = "R-30" Then
       
       '|fffd|C|fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|O|fffd||243|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||452||290|M|fffd||752||fffd||fffd||fffd|s|fffd||fffd|
       'COM Port|fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|
                
      ec.COMn = IniSettingTable.Barometer_PortNum   ' COM|fffd||fffd||fffd|J|fffd||fffd|
   
      If cmbBarometerType.Text = "T-68/T-68K" Then
         ec.Setting = "1200,n,8,1"   ' T-68 |fffd||290|M|fffd||fffd||fffd||fffd||fffd||310||752||fffd|
      Else
         ec.Setting = "9600,n,8,1"   ' R-30 |fffd||290|M|fffd||fffd||fffd||fffd||fffd||310||752||fffd|
      End If
      
      ec.HandShaking = "N"    ' handshake|fffd||202||fffd|
      
      ec.Delimiter = ec.DELIMs.CrLf   ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Cr/Lf|fffd||fffd||fffd|w|fffd||fffd|
   
      '|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd||fffd||fffd|M |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
      ec.AsciiLine = "?011QD00."
      
      strValue1 = ec.AsciiLine
   
      strValue() = Split(strValue1, " ")
      
      ' |fffd|P|fffd||282||fffd||fffd|m|fffd|F|fffd||fffd||fffd||112|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      If cmbBarometerType.Text = "T-68/T-68K" Then
        If cmbBarometerUnit.Text = "kPa" Then
          strValue1 = strValue(1) / 1000
        Else
          strValue1 = strValue(1) / 100
        End If
      Else
        If cmbBarometerUnit.Text = "kPa" Then
          strValue1 = WorksheetFunction.RoundDown(strValue(1) / 1000, 2)
        Else
          strValue1 = WorksheetFunction.RoundDown(strValue(1) / 100, 1)
        End If

      End If
      
      ActiveCell.Value = strValue1
      '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
      Move_ActiveCell (cmbBarometerCursorDirection.Text)
      
      ec.COMn = 0   ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
   End If
     
    
On Error GoTo EndEnd
    'ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub


ElseError:
    MsgBox "|fffd|C|fffd||fffd||fffd|l|fffd||64fe||fffd|G|fffd||fffd||fffd|["
    Exit Sub
    'Return

EndEnd:

End Sub


Private Sub GetTemperature_Click()
     
     Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
     Dim i, T, n, X As Long

    ' COM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd|UNIDOS|fffd||303|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||193||fffd||fffd||fffd||fffd||50d||fffd||fffd||142||202||fffd||fffd||fffd||fffd|m|fffd|F
    If IniSettingTable.UNIDOSwebline_PortNum = IniSettingTable.Barometer_PortNum Then
        MsgBox "UNIDOSwebline|fffd||193||fffd||fffd||fffd|COM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||342||fffd||fffd|g|fffd|p|fffd||142||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||fffd||fffd|x|fffd|v|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
        Exit Sub
    End If
    
    If ActiveCell.Count <= 0 Then
        MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
        Exit Sub
    End If

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     'ec.Sound = "C:\Windows\Media\Windows User Account Control.wav"
      ec.Sound = IniSettingTable.SoundTEMP
      
On Error GoTo ElseError

   If cmbTemperatureType.Text = "RTD HD2107.1/HD2107.2" Then
       
       '|fffd|C|fffd||fffd||fffd|v|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|O|fffd||243|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||452||290|M|fffd||752||fffd||fffd||fffd|s|fffd||fffd|
       'COM Port|fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|
                
      ec.COMn = IniSettingTable.Temperature_PortNum   ' COM|fffd||fffd||fffd|J|fffd||fffd|
   
      ec.Setting = "38400,n,8,1"   ' RTD HD2107.1 |fffd||290|M|fffd||fffd||fffd||fffd||fffd||310||752||fffd|
      
      ec.HandShaking = "XonXoff"    ' handshake|fffd||202||fffd|
      
      ec.Delimiter = ec.DELIMs.CR   ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Cr/Lf|fffd||fffd||fffd|w|fffd||fffd|
   
      '|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd||fffd||fffd|M |fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd||fffd||fffd|b|fffd|N(70sec)
      ec.AsciiLine = "P0"
      strValue0 = ec.AsciiLine

      '|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd||fffd||fffd|M |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
      ec.AsciiLine = "S0"
             
      'strValue = Split(Trim(ec.AsciiLine), constSP)
      ActiveCell.Value = Trim(ec.AsciiLine)
      
      '|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd||fffd||fffd|M |fffd|L|fffd|[|fffd|{|fffd|[|fffd|h|fffd||fffd||fffd|b|fffd|N|fffd||fffd||fffd||fffd|
      ec.AsciiLine = "P1"
      strValue0 = ec.AsciiLine
      
      '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
      Move_ActiveCell (cmbTemperatureCursorDirection.Text)
       
      ec.COMn = 0   ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
   ElseIf cmbBarometerType.Text = "FLUKE 1504" Then
   
       '|fffd||fffd||fffd|x|fffd|v|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||64fe||fffd||fffd||fffd||fffd|O|fffd||243|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||452||290|M|fffd||752||fffd||fffd||fffd|s|fffd||fffd|
       'COM Port|fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|
                
      ec.COMn = IniSettingTable.Temperature_PortNum   ' COM|fffd||fffd||fffd|J|fffd||fffd|
   
      ec.Setting = "9600,n,8,1"
      
      ec.HandShaking = ec.HANDSHAKEs.RTSCTS   ' handshake RTSCTS
      
      ec.Delimiter = ec.DELIMs.CR   ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Cr|fffd||fffd||fffd|w|fffd||fffd|
   
      ec.WAITmS = 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
      
      '|fffd|R|fffd|}|fffd||fffd||fffd|h|fffd||fffd||fffd|M |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
      ec.AsciiLine = "T"
      
      strValue1 = ec.AsciiLine
   
      strValue1 = Replace(strValue1, "C", "")
      strValue1 = Replace(strValue1, "t:", "")
      strValue1 = Replace(strValue1, "T:", "")
      ActiveCell.Value = Trim(strValue1)
   
      '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
      Move_ActiveCell (cmbTemperatureCursorDirection.Text)
      
      ec.COMn = 0   ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
   
   
   End If
     
    
On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub


ElseError:
    MsgBox "|fffd||fffd||fffd|x|fffd|l|fffd||64fe||fffd|G|fffd||fffd||fffd|["
    Exit Sub
    'Return

EndEnd:

End Sub

Private Sub Multi_MEAS_Click()


On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long
    
    n = Numbers.Value
    T = TextBox_Time.Value
    
    If n = "" And T = "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||191||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf n <> "" And T = "" Then
      MsgBox "|fffd||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf n = "" And T <> "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If

'[|fffd||fffd||fffd||fffd|]
     If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
       MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
       Exit Sub
     End If
     
     If ActiveCell.Count <= 0 Then
       MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
       Exit Sub
     End If
     
     Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
    
    For i = 1 To n
     
       '|fffd|J|fffd|n
        ec.AsciiLine = "STA"
        STA = ec.AsciiLine
       
       'T|fffd|b|fffd||fffd||fffd||fffd|
       ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
           
       'HOLD
       ec.AsciiLine = "HLD"
       ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
       HLD = ec.AsciiLine
   
       ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
       ec.AsciiLine = "MV"
       strValue1 = ec.AsciiLine
   
       strValue() = Split(strValue1, ";")
       
       ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       strValue(10) = strValue(4) * 1000000000
       
       ActiveCell.Value = strValue(10)
       
       '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
       Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
   
   '[Stop|fffd||fffd||fffd||fffd|]
   
       DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
       If IsStopButtonClicked Then
         IsStopButtonClicked = False
         GoTo EndEnd
         'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
       End If
   
   Next i
    
    'RESET
    ec.AsciiLine = "RES"
    RES = ec.AsciiLine
    
    'ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
On Error GoTo CloseError
    MsgBox "|fffd|@|fffd|@|fffd||fffd||fffd||fffd|I|fffd||fffd||fffd|@|fffd|@"
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
    Exit Sub

CloseError:
    MsgBox "|fffd|||fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
ElseError:
    MsgBox "|fffd|X|fffd|^|fffd|[|fffd|g|fffd|G|fffd||fffd||fffd|["
    Exit Sub
EndEnd:

    
End Sub

Private Sub INTEG_Click()


On Error GoTo ElseError
     
   If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
     MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
     Exit Sub
   End If
    IsStopButtonClicked = False
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    '|fffd|J|fffd|n
     ec.AsciiLine = "INT"
    
On Error GoTo EndEnd
      
    ec.COMn = IniSettingTable.UNIDOSwebline_PortNum ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|

    Exit Sub

ElseError:
    MsgBox "|fffd|X|fffd|^|fffd|[|fffd|g|fffd|G|fffd||fffd||fffd|["
    'Return
    Exit Sub
EndEnd:


End Sub

Private Sub HV_SET_Click()


     Dim strValue1, strValue(), HV As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
     Dim i, T, n, X As Long


    '[|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|]
    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
    If cmbHV.Text = "+400" Then
       HV = "HV;+400"
    
    ElseIf cmbHV.Text = "+300" Then
       HV = "HV;+300"

    ElseIf cmbHV.Text = "+200" Then
       HV = "HV;+200"
      
    ElseIf cmbHV.Text = "+150" Then
       HV = "HV;+150"
      
    ElseIf cmbHV.Text = "+100" Then
       HV = "HV;+100"

    ElseIf cmbHV.Text = "-100" Then
       HV = "HV;-100"
    
    ElseIf cmbHV.Text = "-150" Then
       HV = "HV;-150"
    
    ElseIf cmbHV.Text = "-200" Then
       HV = "HV;-200"
       
    ElseIf cmbHV.Text = "-300" Then
       HV = "HV;-300"
 
     ElseIf cmbHV.Text = "-400" Then
       HV = "HV;-400"
    
    ElseIf cmbHV.Text = "0" Then
       HV = "HV;+0"
     
    Else
    
       HV = "HV;" + Trim(cmbHV.Text)

    End If
        
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|
    
    HV = ec.AsciiLine    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||fffd||fffd||3cd|X|fffd||142||fffd||fffd||fffd||fffd||fffd||fffd|m|fffd|F

    If HV = "E;03" Or HV = "E;08" Then
        MsgBox "|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||fffd||3cd|X|fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|B" & vbCrLf & "|fffd|{|fffd||302||310||752||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
    End If
    
    ec.COMn = IniSettingTable.UNIDOSwebline_PortNum                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|

End Sub

Private Sub Auto_Ks_Click()


On Error GoTo ElseError

    '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim strValue1, strValue() As String
    Dim i, X As Long
    Dim T As Integer
    Dim n As Integer
    Dim HV As String

    If Numbers.Value = "" And TextBox_Time.Value = "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||191||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf Numbers.Value <> "" And TextBox_Time.Value = "" Then
      MsgBox "|fffd||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf Numbers.Value = "" And TextBox_Time.Value <> "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    n = Numbers.Value
    T = TextBox_Time.Value
    
    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If

    If ActiveCell.Count <= 0 Then
      MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
    
    If cmbHV.Text = "+400" Then
       HV = "HV;+400"
    
    ElseIf cmbHV.Text = "+300" Then
       HV = "HV;+300"

    ElseIf cmbHV.Text = "+200" Then
       HV = "HV;+200"
      
    ElseIf cmbHV.Text = "+150" Then
       HV = "HV;+150"
      
    ElseIf cmbHV.Text = "+100" Then
       HV = "HV;+100"

    ElseIf cmbHV.Text = "-100" Then
       HV = "HV;-100"
    
    ElseIf cmbHV.Text = "-150" Then
       HV = "HV;-150"
    
    ElseIf cmbHV.Text = "-200" Then
       HV = "HV;-200"
       
    ElseIf cmbHV.Text = "-300" Then
       HV = "HV;-300"
 
     ElseIf cmbHV.Text = "-400" Then
       HV = "HV;-400"
    
    ElseIf cmbHV.Text = "0" Then
       HV = "HV;+0"
     
    Else
 
       HV = "HV;" + Trim(cmbHV.Text)
   
    End If
    
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|


    ec.COMn = 0                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
    ec.WAITmS = 20000      '20|fffd|bWait



'[Stop|fffd||fffd||fffd||fffd|]

    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

'[|fffd||fffd||fffd||fffd|+]
   For i = 1 To n
   
       Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
   
   
       '|fffd|J|fffd|n
        ec.AsciiLine = "STA"
        STA = ec.AsciiLine
       
       'T|fffd|b|fffd||fffd||fffd||fffd|
        ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
       
           
       'HOLD
       ec.AsciiLine = "HLD"
       ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
       HLD = ec.AsciiLine
      
       ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
       ec.AsciiLine = "MV"
       strValue1 = ec.AsciiLine
   
       strValue() = Split(strValue1, ";")
       
       ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       strValue(10) = strValue(4) * 1000000000
       ActiveCell.Value = strValue(10)
       
       
       '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
       Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
   
       'RESET
       ec.AsciiLine = "RES"
   
   
       ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
       
   '[Stop|fffd||fffd||fffd||fffd|]
       DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
       If IsStopButtonClicked Then
         IsStopButtonClicked = False
         GoTo EndEnd
         'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
       End If
   
   Next i
   
    '[|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|]
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
  
    If cmbHV.Text = "+400" Then
       HV = "HV;+200"
    
    ElseIf cmbHV.Text = "+300" Then
       HV = "HV;+150"

    ElseIf cmbHV.Text = "+200" Then
       HV = "HV;+100"
      
    ElseIf cmbHV.Text = "+150" Then
       HV = "HV;+75"
      
    ElseIf cmbHV.Text = "+100" Then
       HV = "HV;+50"

    ElseIf cmbHV.Text = "-100" Then
       HV = "HV;-50"
    
    ElseIf cmbHV.Text = "-150" Then
       HV = "HV;-75"
    
    ElseIf cmbHV.Text = "-200" Then
       HV = "HV;-100"
       
    ElseIf cmbHV.Text = "-300" Then
       HV = "HV;-150"
 
     ElseIf cmbHV.Text = "-400" Then
       HV = "HV;-200"
    
    ElseIf cmbHV.Text = "0" Then
       HV = "HV;+0"
     

    Else
 
       HV = "HV;" + Trim(cmbHV.Text)
        
    End If
    
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|

    ec.COMn = 0                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
    
    ec.WAITmS = 20000      '20|fffd|bWait

'[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If
    
'[|fffd||fffd||fffd||fffd|-]
   For i = 1 To n
   
       Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
   
       '|fffd|J|fffd|n
        ec.AsciiLine = "STA"
        STA = ec.AsciiLine
       
       'T|fffd|b|fffd||fffd||fffd||fffd|
        ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
       
           
       'HOLD
       ec.AsciiLine = "HLD"
       ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
       HLD = ec.AsciiLine
      
       ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
       ec.AsciiLine = "MV"
       strValue1 = ec.AsciiLine
   
       strValue() = Split(strValue1, ";")
       
       ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       strValue(10) = strValue(4) * 1000000000
       ActiveCell.Value = strValue(10)
       
       
       '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
       Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
   
       'RESET
       ec.AsciiLine = "RES"
   
       ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
       
   '[Stop|fffd||fffd||fffd||fffd|]
       DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
       If IsStopButtonClicked Then
         IsStopButtonClicked = False
         GoTo EndEnd
         'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
       End If
   
   Next i

On Error GoTo ElseError
   Exit Sub

ElseError:
'    MsgBox "Get Value|fffd|G|fffd||fffd||fffd|["
'    Return
    
EndEnd:
   MsgBox "     |fffd||fffd||fffd||fffd|I|fffd||fffd|"


End Sub

Private Sub Auto_Ks_Kpol_Click()

On Error GoTo ElseError
   
    '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim strValue1, strValue() As String
    Dim i, X As Long
    Dim T As Integer
    Dim n As Integer
    Dim HV As String
   
    If Numbers.Value = "" And TextBox_Time.Value = "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||191||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf Numbers.Value <> "" And TextBox_Time.Value = "" Then
      MsgBox "|fffd||fffd||fffd||839e||fffd||502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    ElseIf Numbers.Value = "" And TextBox_Time.Value <> "" Then
      MsgBox "|fffd||fffd||fffd||fffd||50502||fffd||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    n = Numbers.Value
    T = TextBox_Time.Value

    '[|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|]
    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If

    If ActiveCell.Count <= 0 Then
      MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If

    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen


    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
    
    If cmbHV.Text = "+400" Then
       HV = "HV;+400"
 
    ElseIf cmbHV.Text = "+300" Then
       HV = "HV;+300"

    ElseIf cmbHV.Text = "+200" Then
       HV = "HV;+200"
      
    ElseIf cmbHV.Text = "+150" Then
       HV = "HV;+150"
      
    ElseIf cmbHV.Text = "+100" Then
       HV = "HV;+100"

    ElseIf cmbHV.Text = "-100" Then
       HV = "HV;-100"
    
    ElseIf cmbHV.Text = "-150" Then
       HV = "HV;-150"
    
    ElseIf cmbHV.Text = "-200" Then
       HV = "HV;-200"
       
    ElseIf cmbHV.Text = "-300" Then
       HV = "HV;-300"
 
     ElseIf cmbHV.Text = "-400" Then
       HV = "HV;-400"
    
    ElseIf cmbHV.Text = "0" Then
       HV = "HV;+0"
     
    Else
 
       HV = "HV;" + Trim(cmbHV.Text)
   
    End If
     
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|

    ec.COMn = 0                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
    ec.WAITmS = 20000      '20|fffd|bWait

'[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

'[|fffd||fffd||fffd||fffd|+]
   For i = 1 To n
      
       Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
   
       '|fffd|J|fffd|n
        ec.AsciiLine = "STA"
        STA = ec.AsciiLine
       
       'T|fffd|b|fffd||fffd||fffd||fffd|
        ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
               
       'HOLD
       ec.AsciiLine = "HLD"
       ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
       HLD = ec.AsciiLine
      
       ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
       ec.AsciiLine = "MV"
       strValue1 = ec.AsciiLine
   
       strValue() = Split(strValue1, ";")
       
       ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       strValue(10) = strValue(4) * 1000000000
       ActiveCell.Value = strValue(10)
   
       '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
       Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
       
       'RESET
       ec.AsciiLine = "RES"
   
       ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
       
   '[Stop|fffd||fffd||fffd||fffd|]
       DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
       If IsStopButtonClicked Then
         IsStopButtonClicked = False
         GoTo EndEnd
         'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
       End If
   
   Next i

    '[|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|]
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
    
    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
    If cmbHV.Text = "+400" Then
       HV = "HV;+200"
    
    ElseIf cmbHV.Text = "+300" Then
       HV = "HV;+150"

    ElseIf cmbHV.Text = "+200" Then
       HV = "HV;+100"
      
    ElseIf cmbHV.Text = "+150" Then
       HV = "HV;+75"
      
    ElseIf cmbHV.Text = "+100" Then
       HV = "HV;+50"

    ElseIf cmbHV.Text = "-100" Then
       HV = "HV;-50"
    
    ElseIf cmbHV.Text = "-150" Then
       HV = "HV;-75"
    
    ElseIf cmbHV.Text = "-200" Then
       HV = "HV;-100"
       
    ElseIf cmbHV.Text = "-300" Then
       HV = "HV;-150"
 
     ElseIf cmbHV.Text = "-400" Then
       HV = "HV;-200"
    
    ElseIf cmbHV.Text = "0" Then
       HV = "HV;+0"
     

    Else
       HV = "HV;" + Trim(cmbHV.Text)
   
    End If
         
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|

    ec.COMn = 0                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
    
    ec.WAITmS = 20000      '20|fffd|bWait

'[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

'[|fffd||fffd||fffd||fffd|-]
   For i = 1 To n
   
       Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
   
       '|fffd|J|fffd|n
        ec.AsciiLine = "STA"
        STA = ec.AsciiLine
       
       'T|fffd|b|fffd||fffd||fffd||fffd|
        ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
       
       'HOLD
       ec.AsciiLine = "HLD"
       ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
       HLD = ec.AsciiLine
   
       ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
       ec.AsciiLine = "MV"
       strValue1 = ec.AsciiLine
   
       strValue() = Split(strValue1, ";")
       
       ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       strValue(10) = strValue(4) * 1000000000
       ActiveCell.Value = strValue(10)
       
       '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
       Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
   
       'RESET
       ec.AsciiLine = "RES"
   
       ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
       
   '[Stop|fffd||fffd||fffd||fffd|]
       DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
       If IsStopButtonClicked Then
         IsStopButtonClicked = False
         GoTo EndEnd
         'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
       End If
   
   Next i

    '[|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|]
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
    
    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||611||fffd|
    
    
    If cmbHV.Text = "+400" Then
       HV = "HV;-400"
    
    ElseIf cmbHV.Text = "+300" Then
       HV = "HV;-300"

    ElseIf cmbHV.Text = "+200" Then
       HV = "HV;-200"
      
    ElseIf cmbHV.Text = "+150" Then
       HV = "HV;-150"
      
    ElseIf cmbHV.Text = "+100" Then
       HV = "HV;-100"

    ElseIf cmbHV.Text = "-100" Then
       HV = "HV;+100"
    
    ElseIf cmbHV.Text = "-150" Then
       HV = "HV;+150"
    
    ElseIf cmbHV.Text = "-200" Then
       HV = "HV;+200"
       
    ElseIf cmbHV.Text = "-300" Then
       HV = "HV;+300"
 
     ElseIf cmbHV.Text = "-400" Then
       HV = "HV;+400"
    
    ElseIf cmbHV.Text = "0" Then
       HV = "HV;+0"
     
    Else
 
      HV = "HV;" + Trim(cmbHV.Text)
        
    End If
         
    ec.AsciiLine = HV    '|fffd||fffd||fffd||fffd|d|fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd|

    ec.COMn = 0                     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    
    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
    
    ec.WAITmS = 20000      '20|fffd|bWait

'[Stop|fffd||fffd||fffd||fffd|]
    DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
    If IsStopButtonClicked Then
      IsStopButtonClicked = False
      GoTo EndEnd
      'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
    End If

'[|fffd||fffd||fffd||fffd|1/2]
   For i = 1 To n
   
       Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
   
       '|fffd|J|fffd|n
        ec.AsciiLine = "STA"
        STA = ec.AsciiLine
       
       'T|fffd|b|fffd||fffd||fffd||fffd|
        ec.WAITmS = T * 1000    'T|fffd|b|fffd||fffd||fffd||fffd|
       
           
       'HOLD
       ec.AsciiLine = "HLD"
       ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
       HLD = ec.AsciiLine
      
       ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
       ec.AsciiLine = "MV"
       strValue1 = ec.AsciiLine
   
       strValue() = Split(strValue1, ";")
       
       ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       strValue(10) = strValue(4) * 1000000000
       ActiveCell.Value = strValue(10)
       
       '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
       Move_ActiveCell (cmbUNIDOSCursorDirection.Text)
   
       'RESET
       ec.AsciiLine = "RES"
   
       ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
       
   '[Stop|fffd||fffd||fffd||fffd|]
       DoEvents '|fffd|}|fffd|E|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||c2bd5|t|fffd||fffd||fffd||fffd|
       If IsStopButtonClicked Then
         IsStopButtonClicked = False
         GoTo EndEnd
         'Exit Sub  '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|f
       End If
   
   Next i

ElseError:
'    MsgBox "Get Value|fffd|G|fffd||fffd||fffd|["
'    Return
    
EndEnd:

    MsgBox "|fffd||fffd||fffd||fffd|I|fffd||fffd|"

End Sub

Private Sub MEAS_Click()

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     'ec.Sound = "C:\Windows\Media\Windows User Account Control.wav"
      ec.Sound = IniSettingTable.SoundSTART

On Error GoTo ElseError

     Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
     Dim i, T, n, X As Long
    'Dim strValue1, strValue(), Data1 As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l


     If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
       MsgBox "COM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||310||752||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
       Exit Sub
     End If
     
     ec.COMn = 0
     
     Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    '|fffd|J|fffd|n
     ec.AsciiLine = "STA"
     STA = ec.AsciiLine

On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub


ElseError:
    MsgBox "|fffd|X|fffd|^|fffd|[|fffd|g|fffd|G|fffd||fffd||fffd|["
    Exit Sub
EndEnd:


End Sub

Private Sub HOLD_Click()

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundHOLD


On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long

    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    ec.COMn = 0   ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
        
    'HOLD
    ec.AsciiLine = "HLD"
    ' |fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||1c9||fffd||fffd||fffd||fffd||5c2||fffd||fffd||182||fffd||fffd||fffd|
    HLD = ec.AsciiLine
    
    
On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub
        

ElseError:
    MsgBox "|fffd|z|fffd|[|fffd||fffd||fffd|h|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
EndEnd:

        
End Sub


Private Sub RESET_Click()

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundRESET

On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long

    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
    
    'RESET
    ec.AsciiLine = "RES"
    RES = ec.AsciiLine
  
    
On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub
        

ElseError:
    MsgBox "|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
EndEnd:

End Sub

Private Sub Get_Value_Click()

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundWRITE


On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long

    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    If ActiveCell.Count <= 0 Then
        MsgBox "|fffd|Z|fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||80b9||fffd||fffd|B" & vbCrLf & "|fffd|I|fffd||fffd||fffd||fffd||fffd||10d||113|x|fffd||fffd||fffd|s|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
        Exit Sub
    End If
    
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
    ec.AsciiLine = "MV"
    strValue1 = ec.AsciiLine

    strValue() = Split(strValue1, ";")
        
    ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strValue(10) = strValue(4) * 1000000000
    
    ActiveCell.Value = strValue(10)

    '|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|Z|fffd||fffd||fffd||fffd||fffd||693||fffd||fffd||fffd||fffd||fffd|
    Move_ActiveCell (cmbUNIDOSCursorDirection.Text)

On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub
        

ElseError:
    MsgBox "Get Value|fffd|G|fffd||fffd||fffd|["
    Exit Sub
    
EndEnd:


End Sub

Private Sub SetPressureBtn_Click()
    ' |fffd|C|fffd||fffd||fffd|v|fffd|^|fffd|u|fffd|L|fffd||fffd||fffd|E|fffd||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|- |fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||6c1|A|fffd|||fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y|fffd||202||1cd|s|fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|B
    If SetPressureBtn.Value = True Then
                              
        If IniSettingTable.Temperature_PortNum < 0 Then
            MsgBox "|fffd|C|fffd||fffd||fffd|v|fffd|pCOM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd|C|fffd||fffd||fffd|v|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
           Exit Sub
        End If
        
        IniSettingTable.Barometer_Enable = True
        SetPressureBtn.BackColor = &H8000000D
        GetPressure.Enabled = True
        GetPressure.Visible = True
                        
    Else
        IniSettingTable.Barometer_Enable = False
        SetPressureBtn.BackColor = &H8000000F
        GetPressure.Enabled = False
        GetPressure.Visible = False

    End If
        
End Sub

Private Sub ToggleButton1_Click()


    Dim strValue1, strValue() As String  '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim Data1 As String
 
    Label1.Visible = True    '|fffd||fffd||fffd|x|fffd||fffd||fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||fffd|
    Label2.Visible = True
    Label3.Visible = True
    Label4.Visible = True
    
    Label1.Caption = TextBox1
    TextBox1.Enabled = False

   If ToggleButton1.Value Then
      ToggleButton1.Caption = "ON"
   End If
           
   Do
      Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen
  
      ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
      ec.AsciiLine = "MV"
      strValue1 = ec.AsciiLine
      strValue() = Split(strValue1, ";")
   
      ' |fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Data1 = strValue(4) * 1000000000
   
      Label1.Caption = Data1
   
   
      If strValue(4) <= 0.000000001 Then
         Label3.Caption = "pC"
      
      ElseIf strValue(4) >= 0.000000001 Then
             Label3.Caption = "nC"
      
      End If
      
      Label2.Caption = strValue(7)
   
   
      If strValue(7) <= 0.000000001 Then
        Label4.Caption = "pA"
      
      ElseIf strValue(7) >= 0.000000001 Then
            Label4.Caption = "nA"
      
      End If
 
   Loop
   
   ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|

End Sub

Private Sub SetTemperatureBtn_Click()
    ' |fffd|C|fffd||fffd||fffd|v/|fffd||fffd||fffd|x|fffd|v|fffd|^|fffd|u|fffd|L|fffd||fffd||fffd|E|fffd||fffd||fffd||fffd||fffd|{|fffd|^|fffd||fffd|- |fffd|L|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||6c1|A|fffd|||fffd|[|fffd|g|fffd|N|fffd||fffd||fffd|[|fffd|Y|fffd||202||1cd|s|fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|B
    If SetTemperatureBtn.Value = True Then
               
        If IniSettingTable.Temperature_PortNum < 0 Then
            MsgBox "|fffd||fffd||fffd|x|fffd|v|fffd|pCOM|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||fffd||fffd|x|fffd|v|fffd|Z|fffd|b|fffd|g|fffd|A|fffd|b|fffd|v|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
           Exit Sub
        End If
        
        IniSettingTable.Temperature_Enable = True
        SetTemperatureBtn.BackColor = &H8000000D
        GetTemperature.Enabled = True
        GetTemperature.Visible = True
                        
    Else
        IniSettingTable.Temperature_Enable = False
        SetTemperatureBtn.BackColor = &H8000000F
        GetTemperature.Enabled = False
        GetTemperature.Visible = False
    End If
End Sub

Private Sub Stop_Button_Click()
   IsStopButtonClicked = True
End Sub


Private Sub UserForm_Initialize()


    With cmbHV
        .AddItem "+400"
        .AddItem "+300"
        .AddItem "+200"
        .AddItem "+150"
        .AddItem "+100"
        .AddItem "0"
        .AddItem "-100"
        .AddItem "-150"
        .AddItem "-200"
        .AddItem "-300"
        .AddItem "-400"
        
    End With

   cmbUNIDOSCursorDirection.Clear

   With cmbUNIDOSCursorDirection
    
        .AddItem "|fffd|E"
        .AddItem "|fffd||fffd|"

   End With

   cmbBarometerUnit.Clear
   With cmbBarometerUnit

       .AddItem "hPa"
       .AddItem "kPa"

   End With

   cmbBarometerCursorDirection.Clear
   With cmbBarometerCursorDirection
    
        .AddItem "|fffd|E"
        .AddItem "|fffd||fffd|"
        
   End With

   cmbBarometerType.Clear

    With cmbBarometerType

        .AddItem "T-68/T-68K"
        .AddItem "R-30"

    End With
    
   cmbTemperatureCursorDirection.Clear
   With cmbTemperatureCursorDirection
    
        .AddItem "|fffd|E"
        .AddItem "|fffd||fffd|"
        
   End With

   cmbTemperatureType.Clear

    With cmbTemperatureType

        .AddItem "RTD HD2107.1/HD2107.2"
        .AddItem "FLUKE 1504"

    End With

   ' |fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|
   GetSerialPort

   ' |fffd||fffd||fffd||fffd||fffd||752||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||1cd||fffd|/|fffd||c42c|
   ReadSetting



End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

   Dim FSO As Object
   Dim TextFile As Object
   Dim i As Integer
   Dim Target As String
   Dim strFolder As String
   Dim strText As String
   Dim strArrText() As String
   
   strFolder = "C:\UNIDOSwebline"
   
   Set FSO = CreateObject("Scripting.FileSystemObject")
   Target = strFolder + "\UNIDOSwebline_Setting.txt"
   
   ' |fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||742||fffd||fffd||fffd||a347|
   If FSO.FolderExists(strFolder) Then
      If Not FSO.FileExists(Target) Then
         FSO.CreateFolder (strFolder)
         FSO.CreateTextFile (Target)
      End If
      
      ' |fffd||752||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
      Set TextFile = FSO.OpenTextFile(Target, 2)
      
      'UNIDOSweb
      TextFile.WriteLine ("UNIDOSwebline_PortNum = " + CStr(IniSettingTable.UNIDOSwebline_PortNum))
      TextFile.WriteLine ("UNIDOSwebline_Cursor = " + CStr(IniSettingTable.UNIDOSwebline_Cursor))
      'Barometer
      TextFile.WriteLine ("Barometer = " + CStr(CInt(IniSettingTable.Barometer_Enable)))
      TextFile.WriteLine ("Barometer_Type = " + CStr(IniSettingTable.Barometer_Type))
      TextFile.WriteLine ("Barometer_Unit = " + CStr(IniSettingTable.Barometer_Unit))
      TextFile.WriteLine ("Barometer_PortNum = " + CStr(IniSettingTable.Barometer_PortNum))
      TextFile.WriteLine ("Barometer_Cursor = " + CStr(IniSettingTable.Barometer_Cursor))

      'Temperature
      TextFile.WriteLine ("Temperature = " + CStr(CInt(IniSettingTable.Temperature_Enable)))
      TextFile.WriteLine ("Temperature_Type = " + CStr(IniSettingTable.Temperature_Type))
      TextFile.WriteLine ("Temperature_PortNum = " + CStr(IniSettingTable.Temperature_PortNum))
      TextFile.WriteLine ("Temperature_Cursor = " + CStr(IniSettingTable.Temperature_Cursor))
        
      TextFile.WriteLine ("SoundSTART = " + IniSettingTable.SoundSTART)
      TextFile.WriteLine ("SoundHOLD = " + IniSettingTable.SoundHOLD)
      TextFile.WriteLine ("SoundWRITE = " + IniSettingTable.SoundWRITE)
      TextFile.WriteLine ("SoundRESET = " + IniSettingTable.SoundRESET)
      TextFile.WriteLine ("SoundZERO = " + IniSettingTable.SoundZERO)
      TextFile.WriteLine ("SoundPRESSURE = " + IniSettingTable.SoundPRESSURE)
      TextFile.WriteLine ("SoundTEMP = " + IniSettingTable.SoundTEMP)
      TextFile.WriteLine ("SoundAUTO = " + IniSettingTable.SoundAUTO)
      TextFile.WriteLine ("SoundAUTORESET = " + IniSettingTable.SoundAUTORESET)
      TextFile.WriteLine ("SoundMANUAL = " + IniSettingTable.SoundMANUAL)
      TextFile.WriteLine ("SoundAUTOGET = " + IniSettingTable.SoundAUTOGET)
      
   ' |fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347|
   Else
      MsgBox "|fffd||752||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||10b|N|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||18e||fffd||fffd||fffd||fffd||150||752||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||c42c||fffd||fffd||fffd||fffd||702||fffd||fffd|B", vbCritical
   End If
   
   Set TextFile = Nothing
   Set FSO = Nothing
   

End Sub

Private Sub ZERO_Click()

    '|fffd|T|fffd|E|fffd||fffd||fffd|h
     ec.Sound = IniSettingTable.SoundZERO


On Error GoTo ElseError

    Dim strValue1, strValue() As String '|fffd|f|fffd|[|fffd|^|fffd||1c2||74e||fffd||fffd|l
    Dim i, T, n, X As Long

    If IniSettingTable.UNIDOSwebline_PortNum < 1 Then
      MsgBox "|fffd||691||fffd||fffd||94|\|fffd||fffd|UNIDOSwebline|fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||702||fffd||fffd||fffd|B" & vbCrLf & "|fffd||691||fffd||fffd|m|fffd|F|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B", vbCritical
      Exit Sub
    End If
    
    Set_ecBasic (IniSettingTable.UNIDOSwebline_PortNum)   ' COM|fffd||752||fffd|ACOM|fffd||50d||fffd||fffd|L= |fffd|||fffd|[|fffd|gOpen

    ' |fffd|l|fffd||313||1c2||74d||fffd||fffd||fffd|
    ec.AsciiLine = "NUL"
    strValue1 = ec.AsciiLine
    
    If strValue1 = "E;02" Or _
       strValue1 = "E;03" Or _
       strValue1 = "E;11" Then
      GoTo ElseError
    End If
    
On Error GoTo EndEnd
    ec.COMn = 0 ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
    Exit Sub

ElseError:
    ec.COMn = 0
    MsgBox "|fffd|[|fffd||fffd||fffd||fffd||fffd|G|fffd||fffd||fffd|[: " + strValue1
    Exit Sub
    
EndEnd:

        
End Sub

Private Function Set_ecBasic(ComNum As Integer) As Integer

On Error GoTo ElseError

   Set_ecBasic = 0
   ec.Xerror = 1
   
   ec.COMn = ComNum
   
   ec.Setting = "57600,n,8,1"   ' |fffd||290|M|fffd||fffd||fffd||fffd||fffd||310||752||fffd|
   
   ec.HandShaking = "N"    ' handshake|fffd||202||fffd|
   
   ec.Delimiter = ec.DELIMs.CrLf   ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Cr/Lf|fffd||fffd||fffd|w|fffd||fffd|
   
On Error GoTo EndEnd
   Exit Function
   
ElseError:
   Set_ecBasic = Err.Number
   
   Exit Function
   
EndEnd:
   
End Function

Private Sub ReadSetting()

   Dim FSO As Object
   Dim TextFile As Object
   Dim i As Integer
   Dim Target As String
   Dim strFolder As String
   Dim strText As String
   Dim strArrText() As String
   
   '|fffd|e|fffd|[|fffd|u|fffd||fffd||fffd||30f||fffd||fffd||fffd||fffd||fffd|
   IniSettingTable.UNIDOSwebline_PortNum = -1
   IniSettingTable.UNIDOSwebline_Cursor = -1
   
   IniSettingTable.Barometer_Enable = False
   IniSettingTable.Barometer_Type = -1
   IniSettingTable.Barometer_Unit = -1
   IniSettingTable.Barometer_PortNum = -1
   IniSettingTable.Barometer_Cursor = -1
   
   IniSettingTable.Temperature_Enable = False
   IniSettingTable.Temperature_Type = -1
   IniSettingTable.Temperature_PortNum = -1
   IniSettingTable.Temperature_Cursor = -1
   
   IniSettingTable.SoundSTART = ""
   IniSettingTable.SoundHOLD = ""
   IniSettingTable.SoundWRITE = ""
   IniSettingTable.SoundRESET = ""
   IniSettingTable.SoundZERO = ""
   IniSettingTable.SoundAUTO = ""
   IniSettingTable.SoundAUTOGET = ""
   IniSettingTable.SoundAUTORESET = ""
   IniSettingTable.SoundMANUAL = ""
   IniSettingTable.SoundPRESSURE = ""
   IniSettingTable.SoundTEMP = ""
   
   strFolder = "C:\UNIDOSwebline"
   
   Set FSO = CreateObject("Scripting.FileSystemObject")
   Target = strFolder + "\UNIDOSwebline_Setting.txt"
   
   ' |fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||742||fffd||fffd||fffd||a347|
   If FSO.FolderExists(strFolder) And FSO.FileExists(Target) Then
   
      '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||202||fffd||fffd||fffd||390|V|fffd|K|fffd||c42c||fffd||fffd||fffd||fffd|B
      If FileLen(Target) = 0 Then
      
         Kill (Target)
         
         FSO.CreateTextFile (Target)
            
          ' default|fffd||752||fffd||fffd||1c9||fffd|
         Set TextFile = FSO.OpenTextFile(Target, 2)
         
         'UNIDOSweb
         TextFile.WriteLine ("UNIDOSwebline_PortNum=1")
         TextFile.WriteLine ("UNIDOSwebline_Cursor=0")
         'Barometer
         TextFile.WriteLine ("Barometer = 0")
         TextFile.WriteLine ("Barometer_Type = 0")
         TextFile.WriteLine ("Barometer_Unit = 0")
         TextFile.WriteLine ("Barometer_PortNum = 2")
         TextFile.WriteLine ("Barometer_Cursor = 0")
         
         IniSettingTable.UNIDOSwebline_PortNum = 1
         IniSettingTable.UNIDOSwebline_Cursor = 0
         
         IniSettingTable.Barometer_Enable = 0
         IniSettingTable.Barometer_Type = 0
         IniSettingTable.Barometer_Unit = 0
         IniSettingTable.Barometer_PortNum = 2
         IniSettingTable.Barometer_Cursor = 0

         IniSettingTable.Temperature_Enable = 0
         IniSettingTable.Temperature_Type = 0
         IniSettingTable.Temperature_PortNum = 3
         IniSettingTable.Temperature_Cursor = 0
            
         IniSettingTable.SoundSTART = "C:\Windows\Media\Windows Notify.wav"
         IniSettingTable.SoundHOLD = "C:\Windows\Media\Windows User Account Control.wav"
         IniSettingTable.SoundWRITE = "C:\Windows\Media\Windows Battery Low.wav"
         IniSettingTable.SoundRESET = "C:\Windows\Media\notify.wav"
         IniSettingTable.SoundZERO = "C:\Windows\Media\Windows User Account Control.wav"
         IniSettingTable.SoundPRESSURE = "C:\Windows\Media\Windows Notify.wav"
         IniSettingTable.SoundTEMP = "C:\Windows\Media\Windows Notify.wav"
         IniSettingTable.SoundAUTO = "C:\Windows\Media\Windows Battery Low.wav"
         IniSettingTable.SoundAUTORESET = "C:\Windows\Media\Windows Battery Low.wav"
         IniSettingTable.SoundMANUAL = "C:\Windows\Media\Windows Battery Low.wav"
         IniSettingTable.SoundAUTOGET = "C:\Windows\Media\Windows Battery Low.wav"
        
      Else
         ' |fffd||752||fffd||313||1c2||74d||fffd||fffd||fffd|
         Set TextFile = FSO.OpenTextFile(Target)
      
         strText = TextFile.ReadAll
         strArrText = Split(strText, vbCrLf)
   
         IniSettingTable.UNIDOSwebline_PortNum = CInt(Mid(strArrText(0), InStr(strArrText(0), "=") + 1))
         IniSettingTable.UNIDOSwebline_Cursor = CInt(Mid(strArrText(1), InStr(strArrText(1), "=") + 1))
            
         IniSettingTable.Barometer_Enable = CBool(Mid(strArrText(2), InStr(strArrText(2), "=") + 1))
         IniSettingTable.Barometer_Type = CInt(Mid(strArrText(3), InStr(strArrText(3), "=") + 1))
         IniSettingTable.Barometer_Unit = CInt(Mid(strArrText(4), InStr(strArrText(4), "=") + 1))
         IniSettingTable.Barometer_PortNum = CInt(Mid(strArrText(5), InStr(strArrText(5), "=") + 1))
         IniSettingTable.Barometer_Cursor = CInt(Mid(strArrText(6), InStr(strArrText(6), "=") + 1))
            
         IniSettingTable.Temperature_Enable = CBool(Mid(strArrText(7), InStr(strArrText(7), "=") + 1))
         IniSettingTable.Temperature_Type = CInt(Mid(strArrText(8), InStr(strArrText(8), "=") + 1))
         IniSettingTable.Temperature_PortNum = CInt(Mid(strArrText(9), InStr(strArrText(9), "=") + 1))
         IniSettingTable.Temperature_Cursor = CInt(Mid(strArrText(10), InStr(strArrText(10), "=") + 1))

         IniSettingTable.SoundSTART = Trim(CStr(Mid(strArrText(11), InStr(strArrText(11), "=") + 1)))
         IniSettingTable.SoundHOLD = Trim(CStr(Mid(strArrText(12), InStr(strArrText(12), "=") + 1)))
         IniSettingTable.SoundWRITE = Trim(CStr(Mid(strArrText(13), InStr(strArrText(13), "=") + 1)))
         IniSettingTable.SoundRESET = Trim(CStr(Mid(strArrText(14), InStr(strArrText(14), "=") + 1)))
         IniSettingTable.SoundZERO = Trim(CStr(Mid(strArrText(15), InStr(strArrText(15), "=") + 1)))
         IniSettingTable.SoundPRESSURE = Trim(CStr(Mid(strArrText(16), InStr(strArrText(16), "=") + 1)))
         IniSettingTable.SoundTEMP = Trim(CStr(Mid(strArrText(17), InStr(strArrText(17), "=") + 1)))
         IniSettingTable.SoundAUTO = Trim(CStr(Mid(strArrText(18), InStr(strArrText(18), "=") + 1)))
         IniSettingTable.SoundAUTORESET = Trim(CStr(Mid(strArrText(19), InStr(strArrText(19), "=") + 1)))
         IniSettingTable.SoundMANUAL = Trim(CStr(Mid(strArrText(20), InStr(strArrText(20), "=") + 1)))
         IniSettingTable.SoundAUTOGET = Trim(CStr(Mid(strArrText(21), InStr(strArrText(21), "=") + 1)))

      End If

   ' |fffd|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||a347|
   Else
   
      If FSO.FolderExists(strFolder) Then
         FSO.CreateTextFile (Target)
      Else
         FSO.CreateFolder (strFolder)
         FSO.CreateTextFile (Target)
      End If

      ' default|fffd||752||fffd||fffd||1c9||fffd|
      Set TextFile = FSO.OpenTextFile(Target, 2)
      
      'UNIDOSweb
      TextFile.WriteLine ("UNIDOSwebline_PortNum=1")
      TextFile.WriteLine ("UNIDOSwebline_Cursor=0")
      'Barometer
      TextFile.WriteLine ("Barometer = 0")
      TextFile.WriteLine ("Barometer_Type = 0")
      TextFile.WriteLine ("Barometer_Unit = 0")
      TextFile.WriteLine ("Barometer_PortNum = 2")
      TextFile.WriteLine ("Barometer_Cursor = 0")
      
      TextFile.WriteLine ("Temperature = 0")
      TextFile.WriteLine ("Temperature_Type = 0")
      TextFile.WriteLine ("Temperature_PortNum = 3")
      TextFile.WriteLine ("Temperature_Cursor = 0")
      
      TextFile.WriteLine ("SoundSTART = " + "C:\Windows\Media\Windows Notify.wav")
      TextFile.WriteLine ("SoundHOLD = " + "C:\Windows\Media\Windows User Account Control.wav")
      TextFile.WriteLine ("SoundWRITE = " + "C:\Windows\Media\Windows Battery Low.wav")
      TextFile.WriteLine ("SoundRESET = " + "C:\Windows\Media\notify.wav")
      TextFile.WriteLine ("SoundZERO = " + "C:\Windows\Media\Windows User Account Control.wav")
      TextFile.WriteLine ("SoundPRESSURE = " + "C:\Windows\Media\Windows Notify.wav")
      TextFile.WriteLine ("SoundTEMP = " + "C:\Windows\Media\Windows Notify.wav")
      TextFile.WriteLine ("SoundAUTO = " + "C:\Windows\Media\Windows Battery Low.wav")
      TextFile.WriteLine ("SoundAUTORESET = " + "C:\Windows\Media\Windows Battery Low.wav")
      TextFile.WriteLine ("SoundMANUAL = " + "C:\Windows\Media\Windows Battery Low.wav")
      TextFile.WriteLine ("SoundAUTOGET = " + "C:\Windows\Media\Windows Battery Low.wav")
      
      IniSettingTable.UNIDOSwebline_PortNum = 1
      IniSettingTable.UNIDOSwebline_Cursor = 0
      
      IniSettingTable.Barometer_Type = 0
      IniSettingTable.Barometer_Unit = 0
      IniSettingTable.Barometer_PortNum = 2
      IniSettingTable.Barometer_Cursor = 0

      IniSettingTable.Temperature_Enable = 0
      IniSettingTable.Temperature_Type = 0
      IniSettingTable.Temperature_PortNum = 3
      IniSettingTable.Temperature_Cursor = 0
     
      IniSettingTable.SoundSTART = "C:\Windows\Media\Windows Notify.wav"
      IniSettingTable.SoundHOLD = "C:\Windows\Media\Windows User Account Control.wav"
      IniSettingTable.SoundWRITE = "C:\Windows\Media\Windows Battery Low.wav"
      IniSettingTable.SoundRESET = "C:\Windows\Media\notify.wav"
      IniSettingTable.SoundZERO = "C:\Windows\Media\Windows User Account Control.wav"
      IniSettingTable.SoundPRESSURE = "C:\Windows\Media\Windows Notify.wav"
      IniSettingTable.SoundTEMP = "C:\Windows\Media\Windows Notify.wav"
      IniSettingTable.SoundAUTO = "C:\Windows\Media\Windows Battery Low.wav"
      IniSettingTable.SoundAUTORESET = "C:\Windows\Media\Windows Battery Low.wav"
      IniSettingTable.SoundMANUAL = "C:\Windows\Media\Windows Battery Low.wav"
      IniSettingTable.SoundAUTOGET = "C:\Windows\Media\Windows Battery Low.wav"
      
      
   End If
   
   Set TextFile = Nothing
   Set FSO = Nothing
   
   cmbUNIDOSPortNum.Text = CStr(IniSettingTable.UNIDOSwebline_PortNum)
   cmbUNIDOSCursorDirection.ListIndex = IniSettingTable.UNIDOSwebline_Cursor
   
   cmbBarometerType.ListIndex = IniSettingTable.Barometer_Type
   cmbBarometerPortNum.Text = CStr(IniSettingTable.Barometer_PortNum)
   cmbBarometerUnit.ListIndex = IniSettingTable.Barometer_Unit
   cmbBarometerCursorDirection.ListIndex = IniSettingTable.Barometer_Cursor
   
   If IniSettingTable.Barometer_Enable Then
   
      SetPressureBtn.Value = True
   
   End If
   
   cmbTemperatureType.ListIndex = IniSettingTable.Temperature_Type
   cmbTemperaturePortNum.Text = CStr(IniSettingTable.Temperature_PortNum)
   cmbTemperatureCursorDirection.ListIndex = IniSettingTable.Temperature_Cursor
   
   If IniSettingTable.Temperature_Enable Then
   
      SetTemperatureBtn.Value = True
   
   End If
   
   
End Sub



Attribute VB_Name = "ec"
Option Explicit
'   EasyComm
'   Module ec.bas

'|fffd|||fffd|||fffd|||fffd|||fffd|||fffd||EasyComm |fffd||fffd||fffd|p|fffd|K|fffd||fffd|||fffd|||fffd|||fffd|||fffd|||fffd||
'   |fffd|i|fffd|d|fffd||fffd||fffd||fffd||fffd||fffd||fffd|b|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||197||fffd||fffd|L|fffd||fffd||fffd||702||fffd||fffd|j
'|fffd|i|fffd|P|fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|P|fffd||302||154||314||fffd||fffd||fffd||fffd||90b1||fffd||182||34f|o|fffd||fffd||fffd||702||fffd||fffd||fffd|D
'|fffd|i|fffd|Q|fffd|j|fffd||fffd||fffd||fffd||fffd||13b8d||c0b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||281|C|fffd||fffd||fffd||fffd||fffd||202||9479||fffd|Q|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd|C|fffd||609||fffd||fffd||fffd||fffd||348||fffd||610||4d4|C|fffd||15242||fffd||fffd||702||fffd||fffd||fffd|D
'|fffd|i|fffd|R|fffd|j|fffd||fffd||fffd||fffd||fffd||341|C|fffd|A|fffd|v|fffd||fffd||fffd|P|fffd|[|fffd|V|fffd||fffd||fffd||fffd||fffd||308||a554||fffd||182||fffd||fffd||117||fffd||fffd|p|fffd||fffd||fffd||fffd||a347||fffd||24c||fffd||fffd||fffd||fffd||101|C|fffd||609||fffd||fffd||fffd||fffd||30b||fffd||fffd||96||fffd||fffd||fffd||fffd||fffd||fffd|R
'       |fffd||249||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||702||fffd||fffd||348||a554||fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd||117||fffd||fffd|p|fffd|C|fffd|z|fffd|z|fffd|C|fffd||314||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd|o|fffd||fffd||fffd||702||fffd||fffd|D
'
'   Version 1.00    Aug 25,2000  Created by T.Kinoshita
'   Version 1.10    Nov 21,2000
'   Version 1.20    Jan 14,2001
'       DCD,RI,Break|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||1c9||fffd|
'   Version 1.30    Mar 31,2001
'       |fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||fffd||fffd||fffd||752||fffd|l|fffd||fffd||3cd|X
'       |fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||311||fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||310||752||fffd||fffd||fffd|@|fffd||fffd||3cd|X
'       Xerror=1|fffd||141|CSTOP|fffd||30c||fffd||242||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd||60a4||fffd||243|R|fffd|[|fffd|h|fffd||fffd||1c9||fffd|
'   Version 1.31    May 17,2001
'       WAITmS|fffd||303|o|fffd|O|fffd|C|fffd||fffd||fffd|i|fffd||fffd||fffd|c|fffd|l|fffd||302||fffd||fffd|w|fffd|E|fffd||242||fffd||fffd|j
'   Version 1.40    Jul 25,2001
'       Binary|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||303|f|fffd|[|fffd|^|fffd|^|fffd||389||fffd||fffd||fffd||fffd|g|fffd||fffd|
'       |fffd||fffd||fffd|[|fffd|h|fffd|[|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||341|C|fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd||60a4||fffd||24e|d|fffd|l|fffd||3cd|X
'       |fffd|B|fffd||fffd||fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||fffd|CLoseAll|fffd||fffd|CloseAll|fffd||255||3cd|X
'       |fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||314|p|fffd|~
'       |fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||303|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|L|fffd||fffd||fffd|O|fffd||fffd|"N"|fffd||255||3cd|X
'       |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd|w|fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||90bd||fffd||7c2||313||1c2||74e||fffd||fffd||fffd|p|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|BDELIMS|fffd||fffd||1c9||fffd|
'       |fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|L|fffd||fffd||fffd|O|fffd|w|fffd||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||90bd||fffd||7c2||313||1c2||74e||fffd||fffd||fffd|p|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|BHANDSHAKEs|fffd||fffd||1c9||fffd|
'       |fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||310||752||fffd||fffd||3cd|X
'
'   Version 1.50    Oct 23,2001
'       Windows2000|fffd||251||389||fffd||fffd|iReadFile,WriteFile|fffd||312||fffd|`|fffd||fffd||fffd|C|fffd||fffd|
'
'   Version 1.51    Jan 17,2002
'       tomot|fffd||fffd||fffd||fffd||302||fffd||fffd||4cc||fffd||fffd||fffd||fffd|Q|fffd|l|fffd||241|CAsciiLine|fffd||313||1c2||74f|o|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||1c9||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D
'   Version 1.51a   Jan 17,2002
'       COMn|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||243|[|fffd||fffd||fffd||209||fffd||fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd|C|fffd|||fffd|[|fffd|g|fffd|Z|fffd|b|fffd|e|fffd|B|fffd||fffd||fffd|O|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||60a4||fffd||255||3cd|X
'       COMnClose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||155||82||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||251||382||fffd||fffd||102||fffd||fffd|C|fffd|||fffd|[|fffd|g|fffd|Z|fffd|b|fffd|e|fffd|B|fffd||fffd||fffd|O|fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd|p|fffd||255||3cd|X
'   Version 1.60    Jul 9,2002
'       Version|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||1c9||fffd|(Private|fffd||fffd|Public|fffd||255||3cd|X)
'       DoseSeconds|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||312||1c9||fffd|
'       |fffd||151||54ef||fffd||fffd||fffd|I|fffd|[|fffd|v|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|20|fffd||fffd||fffd||fffd|50|fffd||24a|g|fffd||fffd|
'       |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd||fffd|e|fffd||fffd||fffd|||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|ecPort.tmp|fffd||30e|g|fffd|p
'       AsciiLine|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||30e||fffd|M|fffd||141|C|fffd||752||fffd||242||fffd||fffd||fffd||102||355||fffd||fffd||fffd||fffd||fffd||316||fffd||fffd||fffd||fffd||fffd|chr(0)|fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|O|fffd||fffd||fffd|C|fffd||fffd|
'   Version 1.61    Jul 23,2002
'       shin|fffd||fffd||fffd||fffd||302||fffd||fffd|w|fffd|E|fffd||242||fffd||fffd|C|fffd|e|fffd||fffd||fffd|||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|t|fffd|H|fffd||fffd||fffd|_|fffd||fffd|ThisWorkbook.Path|fffd||242||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||7c1|C
'       Excel|fffd||20a|O|fffd||303|A|fffd|v|fffd||fffd||fffd||14e|g|fffd|p|fffd|s|fffd|\|fffd||242||202||fffd||fffd||102||fffd||fffd||fffd||fffd|o|fffd|O|fffd||fffd||fffd|C|fffd||fffd||fffd|D
'       Windows|fffd||303|e|fffd||fffd||fffd|||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||24d||c42c||fffd||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd||fffd|D
'   Version 1.62    Jul 31,2002
'       |fffd||fffd||fffd||80b3||fffd||fffd||302||fffd||fffd|w|fffd|E|fffd||242||fffd||fffd|Excel97|fffd||142||315|s|fffd||f347||fffd||fffd||fffd|C|fffd||fffd|
'   Version 1.62a   Aug 10,2002
'       |fffd||fffd||fffd|p|fffd|K|fffd||fffd||fffd||3cd|X
'   Version 1.70    Mar 6,2003
'       Binary|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||303|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|BinaryBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||1c9||fffd||fffd|D
'       Ascii|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||303|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|AsciiBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||1c9||fffd||fffd|D
'       |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||143|[|fffd||fffd|(|fffd||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||74a||fffd|)
'       InBufferClear|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||fffd||1c9||fffd|(|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||34f||fffd||fffd||7c2||fffd|)
'   Version 1.71    Mar 7,2003
'       |fffd||fffd||fffd||fffd||fffd|f|fffd||8e||4c3|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd|
'       BinaryBytes,AsciiBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||303|o|fffd|O|fffd|C|fffd||fffd|
'       |fffd|w|fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||256||fffd||fffd||fffd||fffd||fffd||fffd||341|C|fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||702||152||fffd|~|fffd||fffd||502||242||202||fffd|o|fffd|O|fffd||30f|C|fffd||fffd|
'   Version 1.72    Apr 5,2003
'       InBufferCLear|fffd||fffd|Sub|fffd||fffd||fffd||fffd|Function|fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|W|fffd||fffd||fffd||255||3cd|X
'   Version 1.80    Dec 25,2003
'       |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd||fffd||30e||fffd||782||11749||fffd|
'       Setting|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||183|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|L|fffd||fffd||fffd|O|fffd||fffd|"N"|fffd||242||202||fffd|o|fffd|O|fffd||fffd||fffd|C|fffd||fffd|
'       |fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||30d||151||fffd|l|fffd||fffd|255|fffd||24a|g|fffd||fffd|
'       |fffd||fffd||fffd|M|fffd||48b|@|fffd||fffd||fffd||303|t|fffd||fffd||fffd|[|fffd|Y|fffd||fffd||502||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd|
'
'   Version 1.81    Jan 11,2004
'       Windows98|fffd||153||fffd||fffd||c0b3||fffd||fffd||fffd||fffd||181|CWriteFile|fffd||fffd|False|fffd||182||202||8457||fffd|M|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|o|fffd|O|fffd|C|fffd||fffd|

'   Version 1.82    Jan 15,2004
'       |fffd||3d0||fffd||fffd||316||fffd||fffd||fffd|`|fffd||242||fffd||93c9||fffd||fffd||fffd|I|fffd||203|o|fffd|O|fffd||142||fffd||fffd|D
'       N.K.|fffd|l|fffd||302||fffd||fffd|w|fffd|E|fffd||242||fffd||852d||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D
'       |fffd||fffd||fffd||80aa||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D

'   Version 1.83    Mar 13,2004
'       |fffd|@|fffd|{|fffd|[|fffd||fffd||fffd|[|fffd|g|fffd||fffd||fffd||30b0||fffd||fffd||191||fffd||fffd|M|fffd||fffd||fffd||303|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||30c|v|fffd|Z|fffd|l|fffd||fffd||fffd|[|fffd||fffd||fffd||242||202||fffd|C|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||242||202||fffd||302||14d||14f||fffd||fffd|l|fffd||fffd|50mS|fffd||242||fffd||fffd||fffd||fffd|D
'       |fffd|A|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||24a||582||fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||183||fffd||fffd|\|fffd|b|fffd|h|fffd||312||1c9||fffd||fffd|D
'           XnotOpenLog|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'               = False (|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g)    |fffd||fffd||fffd||fffd||fffd||282||fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'               = True                  |fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd|
'           XdeleteOpenLogFile|fffd||fffd||fffd|\|fffd|b|fffd|h
'               Windows|fffd||303|e|fffd||fffd||fffd|||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||243|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||38d||d3dc||fffd||fffd||fffd||fffd|
'       |fffd|BSound|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||312||1c9||fffd|
'
'   Version 1.84    JUN 15,2004
'       Setting|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd|RTS,DTR|fffd|o|fffd||342||30b||fffd||fffd||fffd||fffd||752||fffd||fffd||502||fffd||fffd||3c9||fffd||fffd||fffd||fffd||fffd|o|fffd|O|fffd|C|fffd||fffd|
'           EscapeCommFunction|fffd||202||42a4e|g|fffd||fffd||fffd||142||202||fffd||fffd|I|fffd||fffd|ecDef|fffd|Q|fffd||fffd|
'

Public Const Version As String = "1.84"
'
'   Copyright(c) 2000 - 2004 T.Kinoshita


'===================================
' |fffd||3d0||fffd||fffd||312||fffd|`
'===================================

'-----------------------------------
'   XnotOpenLog|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Version1.83|fffd||fffd||fffd||fffd||1c9||fffd|)
'-----------------------------------
'   XnotOpenLog|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'       = False (|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g)    |fffd||fffd||fffd||fffd||fffd||282||fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||fffd|
'       = True                  |fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd|
Public XnotOpenLog As Boolean

'-----------------------------------
'   AsciiBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Version1.70|fffd||fffd||fffd||fffd||1c9||fffd|)
'-----------------------------------
'Ascii|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||24e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||702||fffd|
'|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||343|[|fffd||fffd||fffd||141|C|fffd|[|fffd||fffd||fffd||209||fffd||fffd||30e||fffd||fffd||34e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||5c2||10e||64fe||fffd||fffd||fffd||702||fffd||fffd|D
Public AsciiBytes As Long

'-----------------------------------
'   BinaryBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(Version1.70|fffd||fffd||fffd||fffd||1c9||fffd|)
'-----------------------------------
'Ascii|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||24e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd|o|fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||80b5||fffd||702||fffd|
'|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||343|[|fffd||fffd||fffd||141|C|fffd|[|fffd||fffd||fffd||209||fffd||fffd||30e||fffd||fffd||34e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd||5c2||10e||64fe||fffd||fffd||fffd||702||fffd||fffd|D
Public BinaryBytes As Long

'-----------------------------------
'   Xerror|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'|fffd|[|fffd||fffd|(|fffd|K|fffd||fffd|j|fffd||30e||fffd||fffd||fffd|EasyComm|fffd|W|fffd||fffd||fffd||303|G|fffd||fffd||fffd|[|fffd||fffd||fffd|[|fffd|h|fffd||141|C|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||192||fffd|~|fffd||fffd||fffd||702||fffd||fffd|D
'Version1.4|fffd||fffd||fffd||fffd||341|C|fffd||fffd||fffd||303||fffd||fffd|[|fffd|h|fffd||143|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd||60a4||fffd||24e|d|fffd|l|fffd||3cd|X|fffd|D
'|fffd|P|fffd||30e||fffd||fffd||343|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd||203|G|fffd||fffd||fffd|[|fffd||14b50||fffd||fffd|D
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd|P|fffd||250||752||80b5||fffd||103|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd|C|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||fffd||fffd|[|fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||183|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||115||3d0||fffd||fffd||fffd|
'|fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||fffd||302||141|C|fffd||fffd||fffd||142||24a|J|fffd||fffd||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||90b1||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||202||90b1||fffd||182||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'|fffd|Q|fffd||30e||fffd||fffd||341|C|fffd|G|fffd||fffd||fffd|[|fffd||16cce||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'Public|fffd||933e||fffd||fffd||fffd||90b1||fffd||182||242||fffd||fffd||fffd||101|C|fffd||1c2||74f||fffd||fffd||fffd||fffd||94|\|fffd||203|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||242||fffd||fffd||102||fffd||fffd||702||fffd||fffd|D
Public Xerror As Long

'|fffd|f|fffd||fffd||fffd|~|fffd|^|fffd|w|fffd||8576||fffd||fffd||fffd||fffd|
Type DelimType
    CR      As String   ' CR
    LF      As String   ' LF
    CrLf    As String   ' CR + LF
    LfCr    As String   ' LF + CR
' |fffd||209||fffd|Version1.80|fffd||152||1c9||fffd|
    ETX     As String   ' 03h   ETX |fffd|e|fffd|L|fffd|X|fffd|g|fffd|I|fffd||fffd|
    EOT     As String   ' 04h   EOT |fffd|`|fffd||fffd||fffd|I|fffd||fffd|
    DLE     As String   ' 10h   DLE |fffd|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|N|fffd||142||30a|g|fffd||fffd|
    ETB     As String   ' 17h   ETB |fffd|`|fffd||fffd||fffd|u|fffd||fffd||fffd|b|fffd|N|fffd|I|fffd||fffd|
' -------- |fffd||fffd||fffd||fffd||fffd||702||fffd|

End Type

'|fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|L|fffd||fffd||fffd|O|fffd|w|fffd||8576||fffd||fffd||fffd||fffd|
Type HandShakingType
    No      As String   ' |fffd||202||fffd|
    XonXoff As String   ' Xon/Off
    RTSCTS  As String   ' RTS/CTS
    DTRDSR  As String   ' DTR/DSR
End Type

'===================================
'   |fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|C|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||312||fffd|`
'===================================

'-----------------------------------
'   XdeleteOpenLogFile|fffd||fffd||fffd|\|fffd|b|fffd|h
'-----------------------------------
'   Windows|fffd||303|e|fffd||fffd||fffd|||fffd||fffd||fffd||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||243|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd|O|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||38d||d3dc||fffd||fffd||fffd||fffd|
Public Function XdeleteOpenLogFile()
    Dim Fpath As String * 260
    Dim Fname As String
    Dim rv As Long
    GetTempPath 260, Fpath
    If rv <> INVALID_HANDLE_VALUE Then  ' |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||356||fffd||fffd||fffd|
        Fname = Left(Fpath, InStr(Fpath, vbNullChar) - 1) & "ecPort.tmp"
        Fname = Dir(Fname)
        If Fname <> "" Then
            Kill Fname
        End If
    End If

End Function

'-----------------------------------
'   InBufferClear|fffd||fffd||fffd|\|fffd|b|fffd|h
'-----------------------------------
'COMn|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e|w|fffd||80b3||fffd||fffd||102||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|N|fffd||fffd||fffd|A|fffd||fffd||fffd||702||fffd|.
'Ascii|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||313||1c2||74f|o|fffd||fffd||fffd||151||fffd|p|fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd||fffd|CAsciiBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||312||1c9||fffd||fffd||254||fffd||fffd||fffd||fffd|CInBufferClear|fffd||fffd||fffd|\|fffd|b|fffd|h|fffd||fffd||1c9||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D
Public Function InBufferClear()
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10280, _
                    Description:="InBufferClear " & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Function
        End Select
    End If
    If ecDef.PurgeComm(ecH(Cn).Handle, ecDef.PURGE_RXCLEAR) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|N|fffd||fffd||fffd|A|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10281, _
                    Description:="InBufferClear " & Chr$(&HA) & "|fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|N|fffd||fffd||fffd|A|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Function
        End Select
    End If

End Function

'-----------------------------------
'   Sound|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||750||fffd|p)
'-----------------------------------
' Version1.83|fffd||152||1c9||fffd|
' WAV|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|p|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||782||181|C|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||fffd||182||fffd||fffd||34d||110||fffd||fffd||fffd||fffd||702||fffd||fffd|D
' |fffd||fffd||fffd||742||fffd||fffd||202||fffd||fffd||182||fffd||fffd||341|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||156||7c2||fffd||702||fffd||fffd|D
' |fffd||110||fffd||fffd||354||53bca||fffd||fffd||14d|s|fffd||fffd||fffd||90bd||fffd||7c1|C|fffd||fffd||fffd||fffd||fffd||343|t|fffd|@|fffd|C|fffd||fffd||fffd||30d||110||fffd||fffd|I|fffd||fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||241|C|fffd||fffd||fffd||fffd||fffd||256||7c2||fffd||702||fffd||fffd|D
Public Property Let Sound(WaveSoundFile As String)
    If WaveSoundFile = "" Then
        ecDef.sndPlaySound vbNullString, SND_ASYNC + SND_NODEFAULT + SND_FILENAME
        Exit Property
    End If
    If Dir(WaveSoundFile) <> "" Then
        ecDef.sndPlaySound WaveSoundFile, SND_ASYNC + SND_NODEFAULT + SND_FILENAME
    End If
End Property

'-----------------------------------
'   COMn|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||1c2||74f|o|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'-----------------------------------
'|fffd||fffd||fffd||fffd||311||38f||6c2||182||202||fffd||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|C|fffd||702||fffd||fffd||34e||64fe||fffd||fffd||fffd||702||fffd||fffd|D
'COMn|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||243|[|fffd||fffd||fffd||209||fffd||fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||181|C|fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
'ec.COMn = 0 |fffd||fffd| ec.COMnClose = 0 |fffd||341|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||30f|I|fffd||fffd||fffd||fffd||fffd||241|C|fffd||fffd||fffd||fffd||fffd||a0a9||fffd||303|R|fffd|[|fffd|h|fffd||142||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|D

'|fffd||1c2||74f|o|fffd||fffd||fffd|v|fffd||fffd||fffd|V|fffd|[|fffd|W|fffd||fffd|
Public Property Get COMn() As Long
    COMn = Cn
End Property

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||743|v|fffd||fffd||fffd|V|fffd|[|fffd|W|fffd||fffd|
Public Property Let COMn(PortNumber As Long)
    Dim rv As Long
    Dim PortName As String
    Dim SettingFlag As Boolean          ' |fffd|W|fffd||fffd||fffd||752||fffd|p|fffd|t|fffd||fffd||fffd|O
    Dim i As Integer
    Dim Fnumb As Integer                ' |fffd|L|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim RxBuffer As Long                ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||310||752||fffd|p|fffd||3d0||fffd|
    Dim TxBuffer As Long                ' |fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||310||752||fffd|p|fffd||3d0||fffd|
    Dim FileNumber As Integer           ' |fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||94|\|fffd||203|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim Handle As Long
    Dim Fpath As String * 260
    FileNumber = FreeFile()

    If PortNumber <= 0 Then
        '|fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd|
        ec.CloseAll

      ElseIf PortNumber > ecMaxPort Then

        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||34b||fffd||fffd|e|fffd||348||342||242||fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10010, _
                    Description:="COMn - Write" & Chr$(&HA) & "|fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||50d||fffd|(" & PortNumber & ")|fffd||34b||fffd||fffd|e|fffd||348||342||242||fffd||fffd||fffd||702||fffd||fffd||fffd|"
                End

        End Select
        
      Else
        
        '|fffd||fffd||fffd||24a|J|fffd||fffd||fffd||fffd||102||fffd||fffd||90a9||fffd||1c2||fffd||fffd||fffd||fffd|`|fffd|F|fffd|b|fffd|N
        If ecH(PortNumber).Handle > 0 Then
            '|fffd||fffd||fffd||24a|J|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|
            Cn = PortNumber     '|fffd||fffd||fffd||fffd||fffd||38f||6c2||303|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||250||752||fffd|
            Exit Property       '|fffd||fffd||fffd||fffd|
        End If

        '|fffd|||fffd|[|fffd|g|fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|
        PortName = "\\.\COM" & Trim(str(PortNumber))
        rv = CreateFile(PortName, GENERIC_READ Or GENERIC_WRITE, _
                        0&, 0&, OPEN_EXISTING, 0&, 0&)
        
        GetTempPath 260, Fpath
        If rv <> INVALID_HANDLE_VALUE Then
' Version1.83|fffd||152||1c9||fffd|
            If ec.XnotOpenLog = False Then
'-----|fffd||fffd||fffd||fffd||fffd||702||fffd|
                ' |fffd|L|fffd|^
                Open Left(Fpath, InStr(Fpath, vbNullChar) - 1) & "ecPort.tmp" For Random Access Read Write As #FileNumber Len = Len(Handle)
                Put #FileNumber, PortNumber, rv
                Close #FileNumber
' Version1.83|fffd||152||1c9||fffd|
            End If
'-----|fffd||fffd||fffd||fffd||fffd||702||fffd|
            ecH(PortNumber).Handle = rv     ' |fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||30d|X|fffd|V
        End If
        Cn = PortNumber                     ' |fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||310||752||fffd|
' Version1.83|fffd||152||1c9||fffd|
        If ec.XnotOpenLog = False Then
'-----|fffd||fffd||fffd||fffd||fffd||702||fffd|
            ' |fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||34b|L|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd|g|fffd||fffd||fffd||103|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||102||fffd||fffd||fffd||112||fffd||fffd||fffd|
            If rv = INVALID_HANDLE_VALUE Then
                Open Left(Fpath, InStr(Fpath, vbNullChar) - 1) & "ecPort.tmp" For Random Access Read Write As #FileNumber Len = Len(Handle)
                Get #FileNumber, PortNumber, Handle
                If Handle > 0 Then
                    ecDef.CloseHandle Handle
                    rv = CreateFile(PortName, GENERIC_READ Or GENERIC_WRITE, _
                                    0&, 0&, OPEN_EXISTING, 0&, 0&)
                    If rv <> INVALID_HANDLE_VALUE Then
                        ' |fffd|L|fffd|^
                        Put #FileNumber, PortNumber, rv
                        ecH(PortNumber).Handle = rv     ' |fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||30d|X|fffd|V
                      Else
                        rv = 0&
                        Put #FileNumber, PortNumber, rv
                        ecH(PortNumber).Handle = 0      ' |fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||30d|X|fffd|V
                    End If
                End If
                Close #FileNumber
            End If
' Version1.83|fffd||152||1c9||fffd|
        End If
'-----|fffd||fffd||fffd||fffd||fffd||702||fffd|
        
        If rv = INVALID_HANDLE_VALUE Then
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10011, _
                        Description:="COMn - Write" & Chr$(&HA) & "|fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||50d||fffd|(" & PortNumber & ")|fffd||fffd||fffd|J|fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"
                    End
            
            End Select
        End If

        '--------------------------
        '|fffd|J|fffd||fffd||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||315|W|fffd||fffd||fffd||752||fffd|
        SettingFlag = True
        
        '|fffd|||fffd|[|fffd|g|fffd||30b|@|fffd|\|fffd||fffd||fffd||64fe|
        If GetCommProperties(ecH(Cn).Handle, fCOMMPROP) = False Then
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd|||fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
    
                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10013, _
                        Description:="InCount - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30f||fffd||fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"
                    Exit Property
            
            End Select
        End If

        ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||310||752||fffd|
        RxBuffer = ecDef.fCOMMPROP.dwMaxRxQueue
        If RxBuffer = 0 Then    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||fffd|
            RxBuffer = ecDef.ecInBufferSize     ' |fffd|K|fffd||fffd||30d||151||fffd|l|fffd||250||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If

        ' |fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||310||752||fffd|
        TxBuffer = ecDef.fCOMMPROP.dwMaxTxQueue
        If TxBuffer = 0 Then    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||fffd|
            TxBuffer = ecDef.ecOutBufferSize    ' |fffd|K|fffd||fffd||30d||151||fffd|l|fffd||250||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        End If

        ' |fffd||fffd||fffd|s
        If SetupComm(ecH(PortNumber).Handle, RxBuffer, TxBuffer) = False Then
            SettingFlag = False
        End If

        ' DCB|fffd||303|Z|fffd|b|fffd|g
        ' |fffd|W|fffd||fffd||fffd||752||fffd|l|fffd||348||fffd||293|I|fffd||202||fffd||fffd||302||202||302||141|C|fffd|T|fffd|||fffd|[|fffd|g|fffd||317|L|fffd||fffd||fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||202||fffd||fffd|D
        If GetCommState(ecH(PortNumber).Handle, fDCB) <> False Then
            If BuildCommDCB(ecSetting, fDCB) <> False Then
                fDCB.fBitFields = &H1011
                fDCB.XonLim = ecXonLim
                fDCB.XoffLim = ecXoffLim
                If SetCommState(ecH(PortNumber).Handle, fDCB) = False Then
                    SettingFlag = False
                End If
              Else
                SettingFlag = False
            End If
          Else
            SettingFlag = False
        End If
        
        '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|N|fffd||fffd||fffd|A
        If PurgeComm(ecH(PortNumber).Handle, PURGE_TXCLEAR) = False Then
            SettingFlag = False
        End If
        If PurgeComm(ecH(PortNumber).Handle, PURGE_RXCLEAR) = False Then
            SettingFlag = False
        End If
    
        '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||310||752||fffd|
        If GetCommTimeouts(ecH(PortNumber).Handle, fCOMMTIMEOUTS) <> False Then
            '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd|l|fffd||315|W|fffd||fffd||fffd||752||fffd|
            With fCOMMTIMEOUTS
                .ReadIntervalTimeout = ecReadIntervalTimeout
                .ReadTotalTimeoutConstant = ecReadTotalTimeoutConstant
                .ReadTotalTimeoutMultiplier = ecReadTotalTimeoutMultiplier
                .WriteTotalTimeoutConstant = ecWriteTotalTimeoutConstant
                .WriteTotalTimeoutMultiplier = ecWriteTotalTimeoutMultiplier
            End With
            If SetCommTimeouts(ecH(PortNumber).Handle, fCOMMTIMEOUTS) = False Then
                SettingFlag = False
            End If
          Else
            SettingFlag = False
        End If
        If SettingFlag = False Then
            
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd|||fffd|[|fffd|g|fffd||315|W|fffd||fffd||fffd||752||80aa||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
                
                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10012, _
                        Description:="COMn - Write" & Chr$(&HA) & "|fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||50d||fffd|(" & PortNumber & ")|fffd||315|W|fffd||fffd||fffd||752||80aa||fffd|o|fffd||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"
                        Exit Property
            
            End Select
            
        End If
    End If
    
End Property

'-----------------------------------
'   COMnClose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd|w|fffd||80b5||fffd||fffd||fffd||50d||fffd||fffd||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
'COMnClose|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||243|[|fffd||fffd||fffd||209||fffd||fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||181|C|fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
'ec.COMn = 0 |fffd||fffd| ec.COMnClose = 0 |fffd||341|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||30f|I|fffd||fffd||fffd||fffd||fffd||241|C|fffd||fffd||fffd||fffd||fffd||a0a9||fffd||303|R|fffd|[|fffd|h|fffd||142||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|D
Public Property Let COMnClose(PortNumber As Long)
    Dim rv As Long
    Dim SheetObj As Object
    Dim i As Integer
    Dim Fnumb As Integer
    Dim FileNumber As Integer           ' |fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||94|\|fffd||203|t|fffd|@|fffd|C|fffd||fffd||fffd||50d||fffd|
    Dim Handle As Long
    Dim Fpath As String * 260
    FileNumber = FreeFile()

    If PortNumber <= 0 Then
        '|fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||502||fffd||fffd||702||fffd||fffd||fffd|
        ec.CloseAll
      Else
        '|fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||502||fffd||fffd||702||fffd||fffd|D
        rv = CloseHandle(ecH(PortNumber).Handle)

       '|fffd||14f|I|fffd||fffd||fffd||fffd|
        If rv = False Then
            '|fffd||fffd||fffd|s
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||303|N|fffd||fffd||fffd|[|fffd|Y|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
                
                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10020, _
                        Description:="COMnClose - Write" & Chr$(&HA) & "|fffd|w|fffd||80b3||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||50d||fffd|(" & PortNumber & ")|fffd||303|N|fffd||fffd||fffd|[|fffd|Y|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
            
            End Select
          
          Else
            '|fffd||fffd||fffd||fffd|
            ecH(PortNumber).Handle = 0          '|fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd|X|fffd|g|fffd||30d|X|fffd|V
            ecH(PortNumber).Delimiter = ""      '|fffd|W|fffd||fffd||fffd|f|fffd||fffd||fffd|~|fffd|^
            ecH(PortNumber).LineInTimeOut = 0   'AsciiLineTimeOut|fffd||303||fffd||fffd|Z|fffd|b|fffd|g
            
            If XnotOpenLog = False Then
                GetTempPath 260, Fpath
                Open Left(Fpath, InStr(Fpath, vbNullChar) - 1) & "ecPort.tmp" For Random Access Read Write As #FileNumber Len = Len(Handle)
                rv = 0&
                Put #FileNumber, PortNumber, rv
                Close #FileNumber
            End If
        End If
    End If
End Property

'-----------------------------------
'   Setting|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||753||1c2||74f|o|fffd||fffd|)
'-----------------------------------
'|fffd||fffd||fffd||fffd||311||38f||6c2||182||202||fffd||fffd||102||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||312||290|M|fffd||fffd||fffd||fffd||fffd||310||752||fffd|C|fffd||702||fffd||fffd||353||1c2||74f|o|fffd||fffd||fffd||fffd||fffd|s|fffd||202||fffd||fffd||702||fffd||fffd|D

'|fffd||1c2||74f|o|fffd||fffd|
Public Property Get Setting() As String

    Dim ModeStr As String

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10038, _
                    Description:="Setting - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
    
    End If

    If GetCommState(ecH(Cn).Handle, fDCB) = False Then     'DCB|fffd||313||1c2||74f|o|fffd||fffd|
        
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10030, _
                    Description:="Setting - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30c||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If

    ModeStr = "baud=" & Trim(str(fDCB.BaudRate))
    ModeStr = ModeStr & " parity="
    If fDCB.fBitFields And &H2 <> 0 Then
        Select Case fDCB.Parity
            Case Is = NOPARITY
                ModeStr = ModeStr & "N"
            Case Is = ODDPARITY
                ModeStr = ModeStr & "O"
            Case Is = EVENPARITY
                ModeStr = ModeStr & "E"
            Case Is = MARKPARITY
                ModeStr = ModeStr & "M"
            Case Is = SPACEPARITY
                ModeStr = ModeStr & "S"
        End Select
      Else
        ModeStr = ModeStr & "N"
    End If
    
    ModeStr = ModeStr & " data=" & Trim(str(fDCB.ByteSize))

    ModeStr = ModeStr & " stop="
    Select Case fDCB.StopBits
        Case Is = ONESTOPBIT
            ModeStr = ModeStr & "1"
        Case Is = ONE5STOPBITS
            ModeStr = ModeStr & "1.5"
        Case Is = TWOSTOPBITS
            ModeStr = ModeStr & "2"
    End Select
    
    Setting = ModeStr

End Property

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Version1.80 |fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||fffd||fffd||3c2||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|o|fffd|O|fffd|C|fffd||fffd|
Public Property Let Setting(Mode As String)
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10039, _
                    Description:="Setting - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If

    ' DCB|fffd||313||1c2||74f|o|fffd||fffd|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10031, _
                    Description:="Setting - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30c||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        End Select
    End If
' Version1.80|fffd||152||1c9||fffd|
    ecDef.fDCBtemp = ecDef.fDCB     ' DCB|fffd||315||6d1||fffd|
'----- |fffd||fffd||fffd||fffd||fffd||702||fffd|

    '|fffd||fffd||fffd||fffd||fffd||fffd||315||3ca||fffd|
' Version1.80|fffd||155||3cd|X
    'If BuildCommDCB(Mode, fDCB) = False Then
    If BuildCommDCB(Mode, ecDef.fDCBtemp) = False Then
'----- |fffd||fffd||fffd||fffd||fffd||702||fffd|

        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                
                Stop            ' |fffd||752||8576||fffd||fffd||fffd||fffd||309||fffd||342||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10032, _
                    Description:="Setting - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||310||752||8576||fffd||fffd||fffd||fffd|(" & Mode & ")|fffd||309||fffd||342||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If
    
    'DCB|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' Version1.80|fffd||152||1c9||fffd|
    'BuildCommDCB|fffd||303|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||251||389||fffd||fffd||fffd||fffd||90c1||fffd||fffd||fffd|o|fffd||fffd||fffd||fffd||fffd||fffd||3cd|X|fffd||fffd||fffd||fffd|
    ecDef.fDCB.BaudRate = ecDef.fDCBtemp.BaudRate   ' |fffd||290|M|fffd||fffd||fffd|x
    ecDef.fDCB.Parity = ecDef.fDCBtemp.Parity       ' |fffd|p|fffd||fffd||fffd|e|fffd|B
    ecDef.fDCB.ByteSize = ecDef.fDCBtemp.ByteSize   ' |fffd|f|fffd|[|fffd|^|fffd|r|fffd|b|fffd|g|fffd||fffd|
    ecDef.fDCB.StopBits = ecDef.fDCBtemp.StopBits   ' |fffd|X|fffd|g|fffd|b|fffd|v|fffd|r|fffd|b|fffd|g|fffd||fffd|
'----- |fffd||fffd||fffd||fffd||fffd||702||fffd|

    If SetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10033, _
                    Description:="Setting - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30c||fffd||fffd||750||752||fffd|l(DCB)|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|N|fffd||fffd||fffd|A
    '|fffd||fffd||fffd||fffd||fffd||702||143|p|fffd|X|fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|N|fffd||fffd||fffd|A|fffd||143|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||94|\|fffd||fffd||fffd||342||202||fffd||fffd||18e|v|fffd||fffd||fffd||fffd||302||141|C
    '|fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||34d|s|fffd||fffd||fffd||702||fffd||fffd||fffd|D
    PurgeComm ecH(Cn).Handle, PURGE_TXCLEAR + PURGE_RXCLEAR

End Property

'-----------------------------------
'   HandShaking|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'-----------------------------------
'COMn|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e|w|fffd||80b3||fffd||fffd||102||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||303|t|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||fffd|C|fffd||702||fffd||fffd||34e||64fe||fffd||fffd||fffd||702||fffd|

'|fffd||1c2||74f|o|fffd||fffd|
Public Property Get HandShaking() As String
    Dim Flow As String
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10188, _
                    Description:="HandShaking - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If
    
    ' DCB|fffd||313||1c2||74f|o|fffd||fffd|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10180, _
                    Description:="HandShaking - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select

    End If
    
    Flow = ""

    'RTS|fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||303|`|fffd|F|fffd|b|fffd|N
    If (fDCB.fBitFields And &H2000) <> 0 Then
        Flow = ec.HANDSHAKEs.RTSCTS
    End If

    'XON/OFF|fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||303|`|fffd|F|fffd|b|fffd|N
    If (fDCB.fBitFields And &H300) <> 0 Then
        Flow = Flow & ec.HANDSHAKEs.XonXoff
    End If
    
    'DTR/DSR|fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||303|`|fffd|F|fffd|b|fffd|N
    If (fDCB.fBitFields And &H20) <> 0 Then
        Flow = Flow & ec.HANDSHAKEs.DTRDSR
    End If
    
    If Flow = "" Then
        Flow = ec.HANDSHAKEs.No
    End If

    HandShaking = Flow

End Property

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Property Let HandShaking(Flow As String)
    Dim f As String

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10189, _
                    Description:="HandShaking - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    f = Left(UCase(Flow), 1)        '|fffd||64ea||fffd|P|fffd||fffd||fffd||fffd||fffd||302||757|L|fffd||fffd|
    
    ' DCB|fffd||313||1c2||74f|o|fffd||fffd|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10181, _
                    Description:="HandShaking - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
        
    End If

    With fDCB
        .fBitFields = .fBitFields And &HCC83            '|fffd|Y|fffd||fffd||fffd|r|fffd|b|fffd|g|fffd||303||fffd||fffd|Z|fffd|b|fffd|g
        Select Case f
            Case Is = "N"
                '|fffd|t|fffd||fffd||fffd|[|fffd||202||fffd|
                .fBitFields = .fBitFields Or &H1010     '|fffd|Y|fffd||fffd||fffd|r|fffd|b|fffd|g|fffd||303|Z|fffd|b|fffd|g
            Case Is = "X"
                'Xon/Off|fffd||242||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|C|fffd|N
                .fBitFields = .fBitFields Or &H1310     '|fffd|Y|fffd||fffd||fffd|r|fffd|b|fffd|g|fffd||303|Z|fffd|b|fffd|g
            Case Is = "R"
                'RTS|fffd||242||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N
                .fBitFields = .fBitFields Or &H2014     '|fffd|Y|fffd||fffd||fffd|r|fffd|b|fffd|g|fffd||303|Z|fffd|b|fffd|g
            Case Is = "D"
                'DTR|fffd||242||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N
                .fBitFields = .fBitFields Or &H1068     '|fffd|Y|fffd||fffd||fffd|r|fffd|b|fffd|g|fffd||303|Z|fffd|b|fffd|g
        End Select
    End With

    ' DCB|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If SetCommState(ecH(Cn).Handle, fDCB) = False Then

        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10182, _
                    Description:="HandShaking - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||303|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If
End Property

'-----------------------------------
'   InBuffer|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
'-----------------------------------
'COMn|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e|w|fffd||80b3||fffd||fffd||102||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||752||fffd|C|fffd||702||fffd||fffd||34e||64fe||fffd||fffd||fffd||702||fffd||fffd|D

'|fffd||1c2||74f|o|fffd||fffd|
'|fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||242||fffd||fffd||702||fffd||fffd||fffd||fffd||fffd|M|fffd|f|fffd|[|fffd|^|fffd||303|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd||fffd|D
Public Property Get InBuffer() As Long
    Dim Er As Long
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10068, _
                    Description:="InBuffer - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If
    
    If ClearCommError(ecH(Cn).Handle, Er, fCOMSTAT) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|f|fffd|[|fffd|^|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||313||1c2||74e||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10060, _
                    Description:="InBuffer - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|f|fffd|[|fffd|^|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||313||1c2||74e||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    InBuffer = fCOMSTAT.cbInQue
End Property

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||74f||fffd||fffd||fffd|
'|fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||fffd||fffd|w|fffd||80b5||fffd||702||fffd||fffd|D
'|fffd||14f||fffd||fffd||752||fffd|l|fffd||fffd|ecMinimumInBuffer|fffd||14e|w|fffd||80b3||fffd||fffd||702||fffd||fffd|D
'ecMinimumInBuffer|fffd||341|CecDef|fffd||fffd||fffd||152||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|D
Public Property Let InBuffer(BufferSize As Long)
    Dim InBuff As Long      '|fffd||fffd||fffd||742||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y
    Dim OutBuff As Long     '|fffd||fffd||fffd||742||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10069, _
                    Description:="InBuffer - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If

    '|fffd|w|fffd||fffd|T|fffd|C|fffd|Y|fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
    If BufferSize < ecMinimumInBuffer Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd|o|fffd|b|fffd|t|fffd|@|fffd||312|l|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||702||fffd||fffd|D
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10065, _
                    Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd| " & ecMinimumInBuffer & "|fffd||20f||fffd||250||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    '|fffd|||fffd|[|fffd|g|fffd||310||752||fffd|l|fffd||30e||64fe|
    If GetCommProperties(ecH(Cn).Handle, fCOMMPROP) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||313||1c2||74e||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10061, _
                    Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||313||1c2||74e||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If

    '|fffd||fffd||fffd||fffd|l|fffd||303|`|fffd|F|fffd|b|fffd|N
    If fCOMMPROP.dwMaxRxQueue <> 0 Then     '|fffd|[|fffd||fffd||fffd||30e||fffd||fffd||34f||fffd||fffd||fffd||202||fffd|
        '|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|
        If BufferSize > fCOMMPROP.dwMaxRxQueue Then
            '|fffd||fffd||fffd||fffd||12d02||fffd||fffd||fffd||fffd||752||fffd|
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd|||fffd|[|fffd|g|fffd||30d||151||fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||fffd||752||fffd||fffd||fffd||fffd||fffd||60a4||fffd||182||fffd||fffd||702||fffd||fffd||fffd||fffd|D
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
    
                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10066, _
                        Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||fffd||fffd|l (" & fCOMMPROP.dwMaxRxQueue & "|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||752||fffd||34f|o|fffd||fffd||fffd||702||fffd||fffd||fffd|D"
                    Exit Property
            
            End Select
        End If
    End If
    
    InBuff = fCOMMPROP.dwCurrentRxQueue     '|fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||310||752||fffd||fffd||1c2||74f|o|fffd||fffd|
    OutBuff = fCOMMPROP.dwCurrentTxQueue    '|fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||310||752||fffd||fffd||1c2||74f|o|fffd||fffd|
    
    '|fffd|V|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y|fffd||310||752||fffd|
    If SetupComm(ecH(Cn).Handle, BufferSize, OutBuff) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10062, _
                    Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
        
    ' DCB|fffd||313||1c2||74f|o|fffd||fffd|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10063, _
                    Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30c||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    If SetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10064, _
                    Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||310||752||fffd|l(DCB)|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If

End Property

'-----------------------------------
'   OutBuffer|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||750||fffd|p)
'-----------------------------------
'COMn|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e|w|fffd||80b3||fffd||fffd||102||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||311||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||752||fffd|C|fffd||702||fffd||fffd||34e||64fe||fffd||fffd||fffd||702||fffd||fffd|D
'|fffd||14f||fffd||fffd||752||fffd|l|fffd||fffd|ecMinimumOutBuffer|fffd||14e|w|fffd||80b3||fffd||fffd||702||fffd||fffd|D
'ecMinimumOutBuffer|fffd||341|CecDef|fffd||fffd||fffd||152||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|D
Public Property Let OutBuffer(BufferSize As Long)
    
    Dim InBuff As Long      '|fffd||fffd||fffd||742||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y
    Dim OutBuff As Long     '|fffd||fffd||fffd||742||311||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10079, _
                    Description:="OutBuffer - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If
    
    '|fffd|w|fffd||fffd|T|fffd|C|fffd|Y|fffd||303|`|fffd|F|fffd|b|fffd|N
    If BufferSize < ecMinimumOutBuffer Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||310||752||fffd|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10073, _
                    Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd| " & ecMinimumOutBuffer & "|fffd||20f||fffd||250||752||80b5||fffd||102||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    If GetCommProperties(ecH(Cn).Handle, fCOMMPROP) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||313||1c2||74e||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10071, _
                    Description:="OutBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||311||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||313||1c2||74e||fffd||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
    End If
    
    '|fffd||fffd||fffd||fffd|l|fffd||303|`|fffd|F|fffd|b|fffd|N
    If fCOMMPROP.dwMaxTxQueue <> 0 Then     '|fffd|[|fffd||fffd||fffd||30e||fffd||fffd||34f||fffd||fffd||fffd||202||fffd|
        '|fffd||fffd||fffd||fffd|l|fffd||fffd||fffd||fffd|
        If BufferSize > fCOMMPROP.dwMaxTxQueue Then
            '|fffd||fffd||fffd||fffd||12d02||fffd||fffd||fffd||fffd||752||fffd|
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd|||fffd|[|fffd|g|fffd||30d||151||fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||fffd||752||fffd||fffd||fffd||fffd||fffd||60a4||fffd||182||fffd||fffd||702||fffd||fffd||fffd||fffd|D
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
    
                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10076, _
                        Description:="InBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||fffd||fffd|l (" & fCOMMPROP.dwMaxRxQueue & "|fffd||fffd||fffd|z|fffd||fffd||fffd||fffd||752||fffd||34f|o|fffd||fffd||fffd||702||fffd||fffd||fffd|D"
                    Exit Property
            
            End Select
        End If
    End If
    
    InBuff = fCOMMPROP.dwCurrentRxQueue     '|fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||310||752||fffd||fffd||1c2||74f|o|fffd||fffd|
    OutBuff = fCOMMPROP.dwCurrentTxQueue    '|fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||310||752||fffd||fffd||1c2||74f|o|fffd||fffd|
    
    '|fffd|V|fffd||fffd||fffd||fffd||fffd|T|fffd|C|fffd|Y|fffd||310||752||fffd|
    If SetupComm(ecH(Cn).Handle, InBuff, BufferSize) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10072, _
                    Description:="OutBuffer - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||311||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If

End Property

'-----------------------------------
'   Ascii|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd||1c2||74f|o|fffd||fffd|
Public Property Get Ascii() As String
    Dim ReadBytes As Long       '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim ReadedBytes As Long     '|fffd||1c2||74d||fffd||fffd||7c2||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim bdata() As Byte         '|fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|z|fffd||fffd|
    Dim Er As Long              ' error value
    Dim ErrorFlag As Boolean    '|fffd|G|fffd||fffd||fffd|[|fffd|t|fffd||fffd||fffd|O

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10108, _
                    Description:="Ascii - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
    End If

    If ClearCommError(ecH(Cn).Handle, Er, fCOMSTAT) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10100, _
                    Description:="Ascii - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    
    End If
    
    '--------- Version1.70|fffd||155||3cd|X
'    ReadBytes = fCOMSTAT.cbInQue       '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||30e||64fe|
    If ec.AsciiBytes <= 0 Then
        ' |fffd||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||74a||fffd|
        ReadBytes = fCOMSTAT.cbInQue    '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||30e||64fe|
      Else
        '--------- Version1.71|fffd||14f|C|fffd||fffd|
'        ReadBytes = ec.AsciiBytes
        If ec.AsciiBytes <= fCOMSTAT.cbInQue Then
            ReadBytes = ec.AsciiBytes
          Else
            ReadBytes = fCOMSTAT.cbInQue    '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||30e||64fe|
        End If
        '--------- |fffd||fffd||fffd||fffd||fffd||702||fffd|
    End If
    '--------- |fffd||fffd||fffd||fffd||fffd||702||fffd|


    If ReadBytes = 0 Then       '|fffd|f|fffd|[|fffd|^|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||302||182||fffd|
        Ascii = ""
        Exit Property
    End If

    ReDim bdata(ReadBytes - 1)
    
    ErrorFlag = False
    
    If ReadFile(ecH(Cn).Handle, bdata(0), ReadBytes, ReadedBytes, 0&) = False Then ErrorFlag = True
    If ReadBytes <> ReadedBytes Then ErrorFlag = True
    If ErrorFlag Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10101, _
                    Description:="Ascii - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If
    Ascii = StrConv(bdata, vbUnicode)

End Property

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Version1.80|fffd||151|S|fffd||295||3cd|X
'|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||17617|p|fffd||fffd||fffd|C|fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||702||143|t|fffd||fffd||fffd|[|fffd|Y|fffd||fffd||502||242||202||fffd||202||fffd||fffd||60a4||fffd||249||fffd||fffd||fffd|
Public Property Let Ascii(TxD As String)
    Dim WriteBytes As Long      '|fffd||fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim WrittenBytes As Long    '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim bdata() As Byte         '|fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|z|fffd||fffd|
    Dim ErrorFlag As Boolean    '|fffd|G|fffd||fffd||fffd|[|fffd|t|fffd||fffd||fffd|O

    Dim StrTemp As String       '|fffd||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim BitLen As Long          '|fffd|S|fffd|r|fffd|b|fffd|g|fffd||fffd|
    
    Dim rv As Long

    If TxD = "" Then Exit Property

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10109, _
                    Description:="Ascii - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
    End If

    ' DCB|fffd||30e||64fe|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10103, _
                    Description:="Ascii - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30c||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        End Select
    End If

    ErrorFlag = False
    '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||30e||64fe||fffd||190||752||fffd|
    If GetCommTimeouts(ecDef.ecH(Cn).Handle, ecDef.fCOMMTIMEOUTS) <> False Then
        With ecDef.fDCB
            '|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||90bd||fffd||7c2||311|S|fffd|r|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd|v|fffd|Z
            BitLen = .ByteSize + .StopBits / 2 + 1
            If .Parity > 0 Then BitLen = BitLen + 1
            '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd|i|fffd|Q|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||257|v|fffd||fffd||fffd||939e||fffd||502||182||fffd||fffd||fffd|j|fffd||310||752||fffd|
'            ecDef.fCOMMTIMEOUTS.WriteTotalTimeoutMultiplier = Int(BitLen / .BaudRate * 2000&)
' Version 1.83|fffd||155||3cd|X
            ecDef.fCOMMTIMEOUTS.WriteTotalTimeoutMultiplier = Int(BitLen / .BaudRate * 2000&) + 50&
'----|fffd||fffd||fffd||fffd||fffd||702||fffd|
        
        End With
        If SetCommTimeouts(ecDef.ecH(Cn).Handle, ecDef.fCOMMTIMEOUTS) = False Then
            ErrorFlag = True
        End If
      Else
        ErrorFlag = True
    End If
    
    If ErrorFlag Then
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||fffd||fffd||515d0|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10104, _
                    Description:="Ascii - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||303|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||313||1c2||74f|o|fffd||fffd||fffd|C|fffd||702||fffd||fffd||350||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If
    
    StrTemp = StrConv(TxD, vbFromUnicode)   'ANSI|fffd||255||3ca||fffd|
    ' |fffd||fffd||fffd|M|fffd||fffd||fffd|[|fffd|v
    Do
        DoEvents
        bdata = StrTemp
        WriteBytes = UBound(bdata) + 1
' Version1.81|fffd||155||3cd|X
' WriteFile|fffd||316||7c2||fffd|l|fffd||fffd|Windows|fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||108||642||202||90bd||fffd||7c1|C|fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|D
'        If WriteFile(ecH(Cn).Handle, bdata(0), WriteBytes, WrittenBytes, 0&) = False Then
'            ErrorFlag = True
'            Exit Do
'        End If
        rv = WriteFile(ecH(Cn).Handle, bdata(0), WriteBytes, WrittenBytes, 0&)
        
        If WriteBytes = WrittenBytes Then Exit Do   ' |fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|
        If WrittenBytes > 0 Then
            '|fffd||fffd||fffd||202||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|
            '|fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc|
            StrTemp = MidB(StrTemp, WrittenBytes + 1)
        End If
    Loop
    If ErrorFlag Then
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||fffd||fffd||515d0|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10102, _
                    Description:="Ascii - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||515d0|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If
End Property

'-----------------------------------
'   AsciiLineTimeOut|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'Version1.51|fffd||152||1c9||fffd|
'AsciiLine|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||313||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||303|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||752||fffd|C|fffd||702||fffd||fffd||350||752||fffd|l|fffd||fffd||1c2||74f|o|fffd||fffd||fffd||702||fffd||fffd|D
'AsciiLine|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd|v|fffd||fffd||fffd||fffd||fffd|CAsciiLineTimeOut(mS)|fffd||fffd||fffd|z|fffd||fffd||fffd||102||fffd||fffd|f|fffd||fffd|
'|fffd|~|fffd|^|fffd||fffd||fffd||fffd|M|fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||34f||fffd||fffd||fffd||fffd||1218e|~|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||702||142||24e||fffd|M|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||702||715||502||fffd||fffd||702||fffd||fffd|D
'|fffd|G|fffd||fffd||fffd|[|fffd||354||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|D
'AsciiLineTimeOut|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||343|||fffd|[|fffd|g|fffd||fffd||fffd||182||250||752||80b5||fffd||702||fffd||fffd|D
'|fffd||fffd||fffd||fffd||fffd|l|fffd||343|[|fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|C|fffd|[|fffd||fffd||fffd||209||fffd||fffd||312|l|fffd||fffd||fffd||752||80b3||fffd||fffd||102||fffd||fffd||fffd||183|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||354||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|D
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Property Let AsciiLineTimeOut(TimeOut As Long)
    If Cn = 0 Then Exit Property
    ecH(Cn).LineInTimeOut = TimeOut
End Property
'|fffd||1c2||74f|o|fffd||fffd|
Public Property Get AsciiLineTimeOut() As Long
    If Cn = 0 Then
        AsciiLineTimeOut = 0
        Exit Property
      Else
        AsciiLineTimeOut = ecH(Cn).LineInTimeOut
    End If
End Property

'-----------------------------------
'   AsciiLine|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||702||142||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M
'|fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Delimiter|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||141|C|fffd|||fffd|[|fffd|g|fffd||fffd||fffd||182||250||752||fffd|E|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||94|\|fffd||142||fffd||fffd|D
'Version1.51|fffd||fffd||fffd|C|fffd||1c2||74f|o|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|T|fffd|||fffd|[|fffd|g|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D
'|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||343|||fffd|[|fffd|g|fffd||fffd||fffd||182||250||752||80b7||fffd||fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'AsciiLine|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd|C|fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||702||142||30e||fffd||fffd||502||fffd||fffd||752||fffd|l(mS)|fffd||fffd|
'|fffd|z|fffd||fffd||fffd||fffd||183|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd|G|fffd||fffd||fffd|[|fffd||242||342||202||70b8||fffd|C|fffd||fffd||fffd||fffd||fffd||702||142||253||1c2||74d||fffd||fffd||42f95||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||702||fffd|
'|fffd||502||fffd||fffd||702||fffd||fffd|D
'|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd|l|fffd||fffd|AsciiLine|fffd||313||1c2||74f|o|fffd||fffd||fffd||fffd||fffd||302||757|L|fffd||fffd||fffd||142||fffd||fffd|D
'
'|fffd||1c2||74f|o|fffd||fffd|
Public Property Get AsciiLine() As String
    Dim ReadBytes As Long       '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim ReadedBytes As Long     '|fffd||1c2||74d||fffd||fffd||7c2||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim bdata As Byte           '|fffd|o|fffd|C|fffd|g|fffd||3d0||fffd|
    Dim Bstr() As Byte          '|fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd|
    Dim Er As Long              ' error value
    Dim n As Long               '|fffd||fffd||fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|g
    Dim DelimStr As String      '|fffd|f|fffd||fffd||fffd|~|fffd|^
    Dim ErrorFlag As Boolean    '|fffd|G|fffd||fffd||fffd|[|fffd|t|fffd||fffd||fffd|O

    '----Version 1.51
    Dim TimeOutFlag As Boolean  ' |fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd|t|fffd||fffd||fffd|O
    Dim STARTmS As Double       ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd|(mS)
    Dim NOWmS As Double         ' |fffd||fffd||fffd||742||30e||fffd||fffd||fffd|(mS)

    STARTmS = GetTickCount      ' |fffd|J|fffd|n|fffd||fffd||fffd||30e||fffd||fffd||502||fffd||fffd||64fe|
    If STARTmS < 0 Then
        STARTmS = STARTmS + 4294967296#
    End If
    TimeOutFlag = False
    '----|fffd||fffd||fffd||fffd||fffd||702||fffd|

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10218, _
                    Description:="AsciiLine - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If

    ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||752||fffd|l|fffd||30e||64fe|
    DelimStr = Trim(UCase(StrConv(ecH(Cn).Delimiter, vbNarrow)))
    
'Version1.80|fffd||155||3cd|X
'    Select Case DelimStr
'        Case Is = "CR"
'            ecH(Cn).Delimiter = "CR"
'        Case Is = "LF"
'            ecH(Cn).Delimiter = "LF"
'        Case Is = "CRLF"
'            ecH(Cn).Delimiter = "CRLF"
'        Case Is = "LFCR"
'            ecH(Cn).Delimiter = "LFCR"
'        Case Else
'            ecH(Cn).Delimiter = "CR"    ' |fffd|K|fffd||fffd|l|fffd||20a|O|fffd||342|b|fffd|q|fffd||182||742||202||fffd||fffd||702||fffd||fffd|D
'            DelimStr = "CR"
'    End Select
'----- |fffd||fffd||fffd||fffd||fffd||702||fffd|
    
    n = 0   ' |fffd||fffd||fffd||fffd||fffd|J|fffd|E|fffd||fffd||fffd|^|fffd||303||fffd||fffd|Z|fffd|b|fffd|g

    Do
        '|fffd|f|fffd|[|fffd|^|fffd||fffd|M|fffd||702||151||482||fffd|
        Do
            If ClearCommError(ecH(Cn).Handle, Er, fCOMSTAT) = False Then
                '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
                Select Case Xerror
                    Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                        ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                        Stop            ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                        End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

                    Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                        Err.Raise _
                            Number:=10210, _
                            Description:="AsciiLine - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                        Exit Property
                
                End Select
                
            End If
        
            ReadBytes = fCOMSTAT.cbInQue
            DoEvents

            If ecH(Cn).LineInTimeOut > 0 Then   ' |fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||209||fffd||fffd||202||fffd||383|X|fffd|L|fffd|b|fffd|v
                ' |fffd||fffd||fffd||742||30e||fffd||fffd||502||fffd||fffd||64fe|
                NOWmS = GetTickCount
                If NOWmS < 0 Then
                    NOWmS = NOWmS + 4294967296#
                End If
                '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||303|`|fffd|F|fffd|b|fffd|N
                If STARTmS + ecH(Cn).LineInTimeOut <= NOWmS Then
                    ' |fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||fffd||fffd||fffd|
                    TimeOutFlag = True
                    Exit Do
                End If
            End If
        Loop While ReadBytes = 0

        If TimeOutFlag Then Exit Do

        '|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd|M
        ErrorFlag = False
        
        If ReadFile(ecH(Cn).Handle, bdata, 1&, ReadedBytes, 0&) = False Then ErrorFlag = True
        If ReadedBytes <> 1 Then ErrorFlag = True
        If ErrorFlag Then
            '|fffd||fffd||fffd|s
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10211, _
                        Description:="AsciiLine - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                    Exit Property
            
            End Select
        End If

        '|fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||309||fffd||fffd|
        Select Case bdata
            Case Is = &HD   'Cr|fffd||fffd||fffd||fffd|M
                Select Case DelimStr
                    Case Is = "CR"
                        Exit Do                     ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                    Case Is = "LF", "CRLF"
                        ReDim Preserve Bstr(n)      ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                        Bstr(n) = bdata             ' |fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||fffd|
                        n = n + 1
                    Case Is = "LFCR"
                        If n >= 1 Then
                            If Bstr(n - 1) = &HA Then   ' |fffd||fffd||91|O|fffd||315||fffd||fffd||fffd||fffd||fffd|Lf?
                                n = n - 1               ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd||fffd||16ccc||fffd||fffd||fffd|
                                Exit Do                 ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                            End If
                          Else
                            ReDim Preserve Bstr(n)  ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                            Bstr(n) = bdata         ' |fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||fffd|
                            n = n + 1
                        End If
                End Select
            
            Case Is = &HA   'Lf|fffd||fffd||fffd||fffd|M
                
                Select Case DelimStr
                    Case Is = "CR", "LFCR"
                        ReDim Preserve Bstr(n)      ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                        Bstr(n) = bdata             ' |fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||fffd|
                        n = n + 1
                    Case Is = "LF"                  ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                        Exit Do
                    Case Is = "CRLF"
                        If n >= 1 Then
                            If Bstr(n - 1) = &HD Then   ' |fffd||fffd||91|O|fffd||315||fffd||fffd||fffd||fffd||fffd|Cr?
                                n = n - 1               ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd||fffd||16ccc||fffd||fffd||fffd|
                                Exit Do                 ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                            End If
                          Else
                            ReDim Preserve Bstr(n)  ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                            Bstr(n) = bdata         ' |fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||249||fffd||fffd||fffd||fffd||fffd|
                            n = n + 1
                        End If
                End Select
                
'Version1.80|fffd||152||1c9||fffd|
            Case Is = &H3   'ETX|fffd||fffd||fffd||fffd|M
                If DelimStr = "ETX" Then            ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                    Exit Do
                  Else
                    '|fffd||28f||fffd||315||fffd||fffd||fffd|
                    ReDim Preserve Bstr(n)          ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                    Bstr(n) = bdata
                    n = n + 1
                End If
            Case Is = &H4   'EOT|fffd||fffd||fffd||fffd|M
                If DelimStr = "EOT" Then            ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                    Exit Do
                  Else
                    '|fffd||28f||fffd||315||fffd||fffd||fffd|
                    ReDim Preserve Bstr(n)          ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                    Bstr(n) = bdata
                    n = n + 1
                End If
            Case Is = &H10  'DLE|fffd||fffd||fffd||fffd|M
                If DelimStr = "DLE" Then            ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                    Exit Do
                  Else
                    '|fffd||28f||fffd||315||fffd||fffd||fffd|
                    ReDim Preserve Bstr(n)          ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                    Bstr(n) = bdata
                    n = n + 1
                End If
            Case Is = &H17  'ETB|fffd||fffd||fffd||fffd|M
                If DelimStr = "ETB" Then            ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd|M
                    Exit Do
                  Else
                    '|fffd||28f||fffd||315||fffd||fffd||fffd|
                    ReDim Preserve Bstr(n)          ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                    Bstr(n) = bdata
                    n = n + 1
                End If
            Case Else
                '|fffd||28f||fffd||315||fffd||fffd||fffd|
                ReDim Preserve Bstr(n)              ' |fffd||211|O|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||fffd||fffd||702||70d||112||fffd|`
                Bstr(n) = bdata
                n = n + 1
        End Select
    Loop

    If n > 0 Then
        ReDim Preserve Bstr(n - 1)
        AsciiLine = StrConv(Bstr, vbUnicode)
      Else
        AsciiLine = ""
    End If

End Property

'|fffd|w|fffd||80b3||fffd||a0bd||fffd||fffd||fffd||fffd||fffd||fffd||243|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|t|fffd||fffd||fffd||fffd||fffd||111||fffd||fffd|M
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'Version1.80|fffd||151|S|fffd||295||3cd|X
'|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||17617|p|fffd||fffd||fffd|C|fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||702||151||482||fffd||fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||60a4||fffd||242||fffd||fffd||fffd|
Public Property Let AsciiLine(TxD As String)
    Dim WriteBytes As Long      '|fffd||fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim WrittenBytes As Long    '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim bdata() As Byte         '|fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|z|fffd||fffd|
    Dim DelimStr As String      '|fffd|f|fffd||fffd||fffd|~|fffd|^
    Dim Td As String            '|fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||fffd|
    Dim ErrorFlag As Boolean    '|fffd|G|fffd||fffd||fffd|[|fffd|t|fffd||fffd||fffd|O
    
    Dim StrTemp As String       '|fffd||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim BitLen As Long          '|fffd|S|fffd|r|fffd|b|fffd|g|fffd||fffd|

' Version 1.82 |fffd||152||1c9||fffd||fffd|i|fffd|o|fffd|O|fffd|C|fffd||fffd||fffd|j
    Dim rv As Long
'--------|fffd||fffd||fffd||fffd||fffd||702||fffd|
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10219, _
                    Description:="AsciiLine - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If

    ' DCB|fffd||30e||64fe|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10213, _
                    Description:="AsciiLine - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30c||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        End Select
    End If
    
    ErrorFlag = False
    '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||30e||64fe||fffd||190||752||fffd|
    If GetCommTimeouts(ecDef.ecH(Cn).Handle, ecDef.fCOMMTIMEOUTS) <> False Then
        With ecDef.fDCB
            '|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||90bd||fffd||7c2||311|S|fffd|r|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd|v|fffd|Z
            BitLen = .ByteSize + .StopBits / 2 + 1
            If .Parity > 0 Then BitLen = BitLen + 1
            '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd|i|fffd|Q|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||257|v|fffd||fffd||fffd||939e||fffd||502||182||fffd||fffd||fffd|j|fffd||310||752||fffd|
'            ecDef.fCOMMTIMEOUTS.WriteTotalTimeoutMultiplier = Int(BitLen / .BaudRate * 2000&)
' Version 1.83|fffd||155||3cd|X
            ecDef.fCOMMTIMEOUTS.WriteTotalTimeoutMultiplier = Int(BitLen / .BaudRate * 2000&) + 50&
'----|fffd||fffd||fffd||fffd||fffd||702||fffd|
        End With
        If SetCommTimeouts(ecDef.ecH(Cn).Handle, ecDef.fCOMMTIMEOUTS) = False Then
            ErrorFlag = True
        End If
      Else
        ErrorFlag = True
    End If
    
    If ErrorFlag Then
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||fffd||fffd||515d0|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10214, _
                    Description:="AsciiLine - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||303|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||313||1c2||74f|o|fffd||fffd||fffd|C|fffd||702||fffd||fffd||350||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If

    ' |fffd||fffd||fffd||fffd||fffd||fffd||243|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|t|fffd||fffd|
    DelimStr = Trim(UCase(StrConv(ecH(Cn).Delimiter, vbNarrow)))
'Version1.80|fffd||155||3cd|X
    Select Case DelimStr
        Case Is = "CR"
            Td = TxD & Chr(&HD)
        Case Is = "LF"
            Td = TxD & Chr(&HA)
        Case Is = "CRLF"
            Td = TxD & Chr(&HD) & Chr(&HA)
        Case Is = "LFCR"
            Td = TxD & Chr(&HA) & Chr(&HD)
        Case Is = "ETX"
            Td = TxD & Chr(&H3)
        Case Is = "EOT"
            Td = TxD & Chr(&H4)
        Case Is = "DLE"
            Td = TxD & Chr(&H10)
        Case Is = "ETB"
            Td = TxD & Chr(&H17)
'----- |fffd||fffd||fffd||fffd||fffd||702||fffd|
        Case Else
            ecH(Cn).Delimiter = "CR"        ' |fffd|K|fffd||fffd|l|fffd||20a|O|fffd||342|b|fffd|q|fffd||182||742||202||fffd||fffd||702||fffd||fffd|D
            Td = TxD & Chr(&HD)
    End Select
    
    StrTemp = StrConv(Td, vbFromUnicode)   'ANSI|fffd||255||3ca||fffd|
    ' |fffd||fffd||fffd|M|fffd||fffd||fffd|[|fffd|v
    Do
        DoEvents
        bdata = StrTemp
        WriteBytes = UBound(bdata) + 1
' Version1.81|fffd||155||3cd|X
' WriteFile|fffd||316||7c2||fffd|l|fffd||fffd|Windows|fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||108||642||202||90bd||fffd||7c1|C|fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|D
'        If WriteFile(ecH(Cn).Handle, bdata(0), WriteBytes, WrittenBytes, 0&) = False Then
'            ErrorFlag = True
'            Exit Do
'        End If
        rv = WriteFile(ecH(Cn).Handle, bdata(0), WriteBytes, WrittenBytes, 0&)
        
        If WriteBytes = WrittenBytes Then Exit Do   ' |fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|
        If WrittenBytes > 0 Then
            '|fffd||fffd||fffd||202||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|
            '|fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc|
            StrTemp = MidB(StrTemp, WrittenBytes + 1)
        End If
    Loop
    If ErrorFlag Then
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||fffd||fffd||515d0|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10212, _
                    Description:="AsciiLine - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||515d0|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If
End Property

'-----------------------------------
'   Binary|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'1.80|fffd||151|S|fffd||295||3cd|X
Public Property Let Binary(ByteData As Variant)
    Dim WriteBytes As Long          '|fffd||fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim WrittenBytes As Long        '|fffd||1c2||74d||fffd||fffd||7c2||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim bdata() As Byte             '|fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|z|fffd||fffd|
    Dim Er As Long                  'error value
    Dim ErrorFlag As Boolean        '|fffd|G|fffd||fffd||fffd|[|fffd|t|fffd||fffd||fffd|O
    
    Dim i As Long
    Dim j As Long
    Dim C As Long

    Dim StrTemp As String       '|fffd||fffd||fffd||fffd||fffd||fffd||3d0||fffd|
    Dim BitLen As Long          '|fffd|S|fffd|r|fffd|b|fffd|g|fffd||fffd|

' Version 1.82 |fffd||152||1c9||fffd||fffd|i|fffd|o|fffd|O|fffd|C|fffd||fffd||fffd|j
    Dim rv As Long
'--------|fffd||fffd||fffd||fffd||fffd||702||fffd|

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10169, _
                    Description:="Binary - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If

    ' DCB|fffd||30e||64fe|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10164, _
                    Description:="Binary - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30c||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        End Select
    End If

    ErrorFlag = False
    '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||30e||64fe||fffd||190||752||fffd|
    If GetCommTimeouts(ecDef.ecH(Cn).Handle, ecDef.fCOMMTIMEOUTS) <> False Then
        With ecDef.fDCB
            '|fffd|P|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||90bd||fffd||7c2||311|S|fffd|r|fffd|b|fffd|g|fffd||fffd||fffd||fffd||fffd|v|fffd|Z
            BitLen = .ByteSize + .StopBits / 2 + 1
            If .Parity > 0 Then BitLen = BitLen + 1
            '|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd|i|fffd|Q|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||257|v|fffd||fffd||fffd||939e||fffd||502||182||fffd||fffd||fffd|j|fffd||310||752||fffd|
'            ecDef.fCOMMTIMEOUTS.WriteTotalTimeoutMultiplier = Int(BitLen / .BaudRate * 2000&)
' Version 1.83|fffd||155||3cd|X
            ecDef.fCOMMTIMEOUTS.WriteTotalTimeoutMultiplier = Int(BitLen / .BaudRate * 2000&) + 50&
'----|fffd||fffd||fffd||fffd||fffd||702||fffd|
        End With
        If SetCommTimeouts(ecDef.ecH(Cn).Handle, ecDef.fCOMMTIMEOUTS) = False Then
            ErrorFlag = True
        End If
      Else
        ErrorFlag = True
    End If
    
    If ErrorFlag Then
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||fffd||fffd||515d0|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10165, _
                    Description:="Binary - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||303|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||313||1c2||74f|o|fffd||fffd||fffd|C|fffd||702||fffd||fffd||350||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If

    '|fffd||fffd||fffd||fffd||fffd||30c|^|fffd||242||fffd||93c8||fffd||fffd||fffd||315||fffd||fffd||fffd|
    Select Case TypeName(ByteData)
        Case "Byte"
            ReDim bdata(0)
            bdata(0) = ByteData
        Case "Integer", "Long", "Single", "Double"
            If ByteData < 0 Or ByteData > 255 Then
                '|fffd|I|fffd|[|fffd|o|fffd|[|fffd|t|fffd||fffd||fffd|[|fffd|G|fffd||fffd||fffd|[
                Select Case Xerror
                    Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                        ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                        Stop            ' |fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd|0|fffd|`255|fffd||314||348||342||242||fffd||fffd||fffd||702||fffd||fffd||fffd|D
                        End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
        
                    Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                        Err.Raise _
                            Number:=10162, _
                            Description:="Binary - Write" & Chr$(&HA) & "|fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd|0|fffd|`255|fffd||314||348||342||242||fffd||fffd||fffd||702||fffd||fffd||fffd|"
                        Exit Property

                End Select
            End If
            If ByteData <> Int(ByteData) Then
                ' |fffd||50b90||fffd||fffd|G|fffd||fffd||fffd|[
                Select Case Xerror
                    Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                        ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                        Stop            ' |fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|D
                        End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
        
                    Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                        Err.Raise _
                            Number:=10163, _
                            Description:="Binary - Write" & Chr$(&HA) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|"
                        Exit Property
                
                End Select
            End If
            ReDim bdata(0)
            bdata(0) = CByte(ByteData)
    
        Case "String", "Byte()"
            '|fffd||fffd||fffd||fffd||fffd||fffd|CByte|fffd|z|fffd||fffd||343||fffd||fffd|j|fffd|R|fffd|[|fffd|h|fffd||302||702||711||fffd||fffd|M
            bdata = ByteData
    
        Case "Integer()", "Long()", "Single()", "Double()", "Variant()"
            ReDim bdata(UBound(ByteData))   ' |fffd|f|fffd|[|fffd|^|fffd|z|fffd||fffd||30d||110||933e|
            ' |fffd|o|fffd|C|fffd|g|fffd|z|fffd||fffd||582||311||fffd||fffd||fffd||183|I|fffd|[|fffd|o|fffd|[|fffd|t|fffd||fffd||fffd|[|fffd|C|fffd||fffd||fffd||fffd||fffd||303|`|fffd|F|fffd|b|fffd|N
            For i = 0 To UBound(ByteData)
                If ByteData(i) < 0 Or ByteData(i) > 255 Then
                '|fffd|I|fffd|[|fffd|o|fffd|[|fffd|t|fffd||fffd||fffd|[|fffd|G|fffd||fffd||fffd|[
                    Select Case Xerror
                        Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                            ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                            Stop            ' |fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd|0|fffd|`255|fffd||314||348||342||242||fffd||fffd||fffd||702||fffd||fffd||fffd|D
                            End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
            
                        Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                            Err.Raise _
                                Number:=10162, _
                                Description:="Binary - Write" & Chr$(&HA) & "|fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd|0|fffd|`255|fffd||314||348||342||242||fffd||fffd||fffd||702||fffd||fffd||fffd|"
                            Exit Property
    
                    End Select
                End If
                If ByteData(i) <> Int(ByteData(i)) Then
                    ' |fffd||50b90||fffd||fffd|G|fffd||fffd||fffd|[
                    Select Case Xerror
                        Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                            ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                            Stop            ' |fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|D
                            End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
            
                        Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                            Err.Raise _
                                Number:=10163, _
                                Description:="Binary - Write" & Chr$(&HA) & "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||342||fffd||fffd||fffd||702||fffd||fffd||fffd|"
                            Exit Property
                    
                    End Select
                End If
                ' |fffd|f|fffd|[|fffd|^|fffd||303|Z|fffd|b|fffd|g
                bdata(i) = ByteData(i)
            Next i
        
        Case Else
            ' |fffd||fffd||389||fffd||fffd|^
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' |fffd|w|fffd||80b3||fffd||a0bd||fffd|^|fffd||242||351||389||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|D
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
    
                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10164, _
                        Description:="Binary - Write" & Chr$(&HA) & "|fffd|w|fffd||80b3||fffd||a0bd||fffd|^|fffd||242||351||389||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                    Exit Property
            
            End Select
    
    End Select
    StrTemp = bdata
    
    ' |fffd||fffd||fffd|M|fffd||fffd||fffd|[|fffd|v
    Do
        DoEvents
        bdata = StrTemp
        WriteBytes = UBound(bdata) + 1
        
' Version1.81|fffd||155||3cd|X
' WriteFile|fffd||316||7c2||fffd|l|fffd||fffd|Windows|fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||242||fffd||fffd||fffd||108||642||202||90bd||fffd||7c1|C|fffd|G|fffd||fffd||fffd|[|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||202||fffd||fffd||fffd||fffd|D
'        If WriteFile(ecH(Cn).Handle, bdata(0), WriteBytes, WrittenBytes, 0&) = False Then
'            ErrorFlag = True
'            Exit Do
'        End If
        rv = WriteFile(ecH(Cn).Handle, bdata(0), WriteBytes, WrittenBytes, 0&)
        
        If WriteBytes = WrittenBytes Then Exit Do   ' |fffd|S|fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|
        If WrittenBytes > 0 Then
            '|fffd||fffd||fffd||202||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|
            '|fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||d3dc|
            StrTemp = MidB(StrTemp, WrittenBytes + 1)
        End If
    Loop
    If ErrorFlag Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|[|fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10160, _
                    Description:="Binary - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd||fffd||fffd||303|o|fffd|C|fffd|i|fffd||fffd||fffd|[|fffd|f|fffd|[|fffd|^|fffd||311||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If
End Property

'|fffd||1c2||74f|o|fffd||fffd|
'Version1.70|fffd||fffd||fffd|CBinaryBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||1c2||74f|o|fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd|w|fffd||fffd||142||fffd||fffd||fffd||60a4||fffd||242||202||fffd||702||fffd||fffd||fffd||fffd|D
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|CBytes|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd|[|fffd||fffd||fffd||209||fffd||fffd||30e||fffd||fffd||341|C|fffd||fffd||fffd||5c2||102||303|f|fffd|[|fffd|^|fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd|(|fffd||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||74a||fffd|)
Public Property Get Binary() As Variant
    Dim ReadBytes As Long       '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim ReadedBytes As Long     '|fffd||1c2||74d||fffd||fffd||7c2||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd|
    Dim bdata() As Byte         '|fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|z|fffd||fffd|
    Dim Er As Long              ' error value
    Dim ErrorFlag As Boolean    '|fffd|G|fffd||fffd||fffd|[|fffd|t|fffd||fffd||fffd|O
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10179, _
                    Description:="Binary - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    ' |fffd|||fffd|[|fffd|g|fffd||30f||fffd||502||fffd||fffd||64fe|
    If ClearCommError(ecH(Cn).Handle, Er, fCOMSTAT) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10172, _
                    Description:="Binary - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
        
    End If

    '--------- Version1.70|fffd||155||3cd|X
'    ReadBytes = fCOMSTAT.cbInQue       '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||30e||64fe|
    If ec.BinaryBytes <= 0 Then
        ' |fffd||fffd||fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||74a||fffd|
        ReadBytes = fCOMSTAT.cbInQue    '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||30e||64fe|
      Else
        '--------- Version1.71|fffd||14f|C|fffd||fffd|
'        ReadBytes = ec.BinaryBytes
        If ec.AsciiBytes <= fCOMSTAT.cbInQue Then
            ReadBytes = ec.BinaryBytes
          Else
            ReadBytes = fCOMSTAT.cbInQue    '|fffd||fffd|M|fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||30e||64fe|
        End If
        '--------- |fffd||fffd||fffd||fffd||fffd||702||fffd|
    End If
    '--------- |fffd||fffd||fffd||fffd||fffd||702||fffd|
    
    If ReadBytes = 0 Then           '|fffd|f|fffd|[|fffd|^|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||302||182||fffd|
        Binary = 0                  ' 0 |fffd||fffd||502||fffd|
        Exit Property
    End If
    
    ReDim bdata(ReadBytes - 1)

    ErrorFlag = False

    If ReadFile(ecH(Cn).Handle, bdata(0), ReadBytes, ReadedBytes, 0&) = False Then ErrorFlag = True
    If ReadBytes <> ReadedBytes Then ErrorFlag = True
    If ErrorFlag Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|[|fffd|f|fffd|[|fffd|^|fffd||30e||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10171, _
                    Description:="Binary - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd||fffd||fffd||303|o|fffd|C|fffd|i|fffd||fffd||fffd|[|fffd|f|fffd|[|fffd|^|fffd||30e||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                Exit Property
        
        End Select
    End If
    Binary = bdata
End Property

'-----------------------------------
'   WAITmS |fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd||50c||fffd||256||7c2||fffd||702||fffd||fffd|D
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|^(Long)|fffd|CmS|fffd|P|fffd||282||14e|w|fffd||80b5||fffd||702||fffd||fffd|D
'|fffd||151||fffd|49.7|fffd||fffd||fffd||702||14e|w|fffd||fffd||142||fffd||fffd||702||fffd||fffd|D
Public Property Let WAITmS(WaitTime As Long)
    'mS|fffd|P|fffd||282||303|f|fffd|B|fffd||fffd||fffd|C
    Dim STARTmS As Double   ' |fffd|J|fffd|n|fffd||fffd||fffd||fffd|(mS)
    Dim NOWmS As Double     ' |fffd||fffd||fffd||742||30e||fffd||fffd||fffd|(mS)

    '|fffd|J|fffd|n|fffd||fffd||fffd||30e||fffd||fffd||502||fffd||fffd||64fe|
    STARTmS = GetTickCount
    If STARTmS < 0 Then
        STARTmS = STARTmS + 4294967296#
    End If

    '|fffd||fffd||fffd||511||482||fffd|
    Do
        DoEvents
        NOWmS = GetTickCount
        If NOWmS < 0 Then
            NOWmS = NOWmS + 4294967296#
        End If
        If STARTmS > NOWmS Then
            NOWmS = NOWmS + 4294967296#
        End If
    Loop While STARTmS + WaitTime > NOWmS    ' GetTickCount

End Property

'-----------------------------------
'   DozeSeconds |fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
' |fffd|w|fffd||80b5||fffd||fffd||fffd||fffd||fffd||fffd|(Sec)|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd|~|fffd||fffd||fffd||702||fffd||fffd|D
' |fffd||fffd|~|fffd||fffd||fffd||939e||fffd||502||355|b|fffd|P|fffd||282||151||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
' Doze|fffd||182||341|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd|Q|fffd|v|fffd||182||fffd||fffd||fffd||fffd||4d6||fffd||fffd||141|C0.1|fffd|b|fffd||fffd||fffd||182||fffd|DoEvents|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd||fffd||90b1||fffd||182||fffd||fffd||75bd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D
' Excel2000|fffd||20d|~|fffd||142||357|L|fffd||fffd||fffd||142||fffd||fffd||fffd||fffd||fffd||fffd||fffd||211|O|fffd||303|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd||fffd||142||342||642||182||fffd||1c8||4d6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|D
Public Property Let DozeSeconds(Seconds As Integer)
    Dim WakeUp As Date                  ' |fffd||68a|o|fffd||7c2||30e||fffd||fffd||fffd|
    If Seconds < 1 Then Exit Property   ' 1|fffd|b|fffd||20f||fffd||302||757|L|fffd||fffd|
    WakeUp = Now + TimeSerial(0, 0, Seconds)
    Do
        DoEvents
        If Now >= WakeUp Then Exit Do
        ecDef.Sleep 100
    Loop
End Property

'-----------------------------------
'   RTSCTS|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
' RTS|fffd||30b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|CTS|fffd||30f||fffd||513||1c2||74e||fffd||fffd|

'|fffd||1c2||74f|o|fffd||fffd|(CTS|fffd||30f||fffd||fffd|)
Public Property Get RTSCTS() As Boolean
    Dim Stat As Long    ' Status

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10198, _
                    Description:="RTSCTS - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
    
    End If

    If GetCommModemStatus(ecH(Cn).Handle, Stat) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' CTS|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10190, _
                    Description:="RTSCTS - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|CTS|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                RTSCTS = False
                Exit Property
        
        End Select
        
    End If

    If (Stat And MS_CTS_ON) <> 0 Then
        'CTS is ON
        RTSCTS = True
      Else
        'CTS is OFF
        RTSCTS = False
    End If
End Property

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Property Let RTSCTS(Status As Boolean)
    Dim Stat As Long    ' Status
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10199, _
                    Description:="RTSCTS - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
'Version1.84|fffd||155||3cd|X|fffd|D
'|fffd||fffd||fffd||fffd||fffd|EscapeCommFunction|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd||fffd|D
'EscapeCommFunction|fffd||348||a39e||fffd|I|fffd||20f||fffd||510||752||fffd||142||fffd||fffd||fffd||fffd||101|CDCB|fffd||242||354||fffd||fffd|f|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||182||fffd||fffd||d0a9||fffd||fffd||fffd||fffd||fffd|D
'RTS|fffd|o|fffd||342||fffd||fffd|P|fffd|v|fffd|I|fffd||252||fffd||fffd||683|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||242||341|CDCB|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|D
'    If Status = True Then
'        Stat = SETRTS
'      Else
'        Stat = CLRRTS
'    End If
'
'    If EscapeCommFunction(ecH(Cn).Handle, Stat) = False Then
'        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
'        Select Case Xerror
'            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
'                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
'                Stop            ' RTS|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
'                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'
'            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
'                Err.Raise _
'                    Number:=10191, _
'                    Description:="RTSCTS - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|RTS|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
'                Exit Property
'
'        End Select
'    End If
    ' DCB|fffd||313||1c2||74f|o|fffd||fffd|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10191, _
                    Description:="RTSCTS - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|RTS|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        End Select
    End If

    ' RTS|fffd||315||3cd|X
    With ecDef.fDCB
        .fBitFields = .fBitFields And &HCFFB
        If Status = True Then
            .fBitFields = .fBitFields Or &H1000
        End If
    End With

    ' DCB|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If SetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10191, _
                    Description:="RTSCTS - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|RTS|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
    End If
'------|fffd||fffd||fffd||fffd||fffd||702||fffd|


End Property

'-----------------------------------
'   DTRDSR|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
' DTR|fffd||30b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|DSR|fffd||30f||fffd||513||1c2||74e||fffd||fffd|

'|fffd||1c2||74f|o|fffd||fffd|(DSR|fffd||30f||fffd||fffd|)
Public Property Get DTRDSR() As Boolean
    Dim Stat As Long    ' Status
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10208, _
                    Description:="DTRDSR - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    If GetCommModemStatus(ecH(Cn).Handle, Stat) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' DSR|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10200, _
                    Description:="DTRDSR - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|DSR|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                DTRDSR = False
                Exit Property
        
        End Select
    End If

    If (Stat And MS_DSR_ON) <> 0 Then
        'DSR is ON
        DTRDSR = True
      Else
        'DSR is OFF
        DTRDSR = False
    End If
End Property

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Property Let DTRDSR(Status As Boolean)
    Dim Stat As Long    ' Status
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10209, _
                    Description:="DTRDSR - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property

        End Select
        
    End If
    
'Version1.84|fffd||155||3cd|X|fffd|D
'|fffd||fffd||fffd||fffd||fffd|EscapeCommFunction|fffd||fffd||fffd|g|fffd|p|fffd||fffd||fffd||202||fffd||fffd|D
'EscapeCommFunction|fffd||348||a39e||fffd|I|fffd||20f||fffd||510||752||fffd||142||fffd||fffd||fffd||fffd||101|CDCB|fffd||242||354||fffd||fffd|f|fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||182||fffd||fffd||d0a9||fffd||fffd||fffd||fffd||fffd|D
'DCD|fffd|o|fffd||342||fffd||fffd|P|fffd|v|fffd|I|fffd||252||fffd||fffd||683|R|fffd||fffd||fffd|g|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||242||341|CDCB|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|K|fffd|v|fffd||fffd||fffd||fffd||fffd||fffd|D
'
'    If Status = True Then
'        Stat = SETDTR
'      Else
'        Stat = CLRDTR
'    End If
'
'    If EscapeCommFunction(ecH(Cn).Handle, Stat) = False Then
'        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
'        Select Case Xerror
'            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
'                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
'                Stop            ' DTR|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
'                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
'
'            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
'                Err.Raise _
'                    Number:=10201, _
'                    Description:="DTRDSR - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|DTR|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
'                Exit Property
'
'        End Select
'
'    End If

    ' DCB|fffd||313||1c2||74f|o|fffd||fffd|
    If GetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||313||1c2||74d||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10201, _
                    Description:="DTRDSR - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|DTR|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        End Select
    End If

    ' DTR|fffd||315||3cd|X
    With ecDef.fDCB
        .fBitFields = .fBitFields And &HFFC7
        If Status = True Then
            .fBitFields = .fBitFields Or &H10
        End If
    End With

    ' DCB|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If SetCommState(ecH(Cn).Handle, fDCB) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||fffd||fffd||750||752||fffd|l(DCB)|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||742||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10201, _
                    Description:="DTRDSR - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|DTR|fffd||310||752||fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
    End If
'------|fffd||fffd||fffd||fffd||fffd||702||fffd|

End Property


'-----------------------------------
'   Delimiter|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'AsciiLine|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||310||752||fffd|C|fffd||1c2||74f|o|fffd||fffd||fffd||fffd||fffd|s|fffd||fffd||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||142||fffd||fffd|D
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Property Let Delimiter(DelimiterType As String)
    Dim DelimStr As String
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                Stop        ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10248, _
                    Description:="Delimiter - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D
        
        End Select

    End If

    ' |fffd||fffd||fffd||fffd||fffd||310||fffd||fffd|K|fffd||fffd|
    DelimStr = Trim(UCase(StrConv(DelimiterType, vbNarrow)))
'Version1.80|fffd||155||3cd|X
'    Select Case DelimStr
'        Case Is = "CR"
'            ecH(Cn).Delimiter = "CR"
'        Case Is = "LF"
'            ecH(Cn).Delimiter = "LF"
'        Case Is = "CRLF"
'            ecH(Cn).Delimiter = "CRLF"
'        Case Is = "LFCR"
'            ecH(Cn).Delimiter = "LFCR"
'        Case Else
'            ecH(Cn).Delimiter = "CR"    ' |fffd|K|fffd||fffd|l|fffd||20a|O|fffd||342|b|fffd|q|fffd||182||742||202||fffd||fffd||702||fffd||fffd|D
'    End Select
    Select Case DelimStr
        Case Is = "CR", "LF", "CRLF", "LFCR", "ETX", "EOT", "DLE", "ETB"
            ecH(Cn).Delimiter = DelimStr
        Case Else
            ecH(Cn).Delimiter = "CR"    ' |fffd|K|fffd||fffd|l|fffd||20a|O|fffd||342|b|fffd|q|fffd||182||742||202||fffd||fffd||702||fffd||fffd|D
    End Select

End Property

'|fffd||1c2||74f|o|fffd||fffd|
Public Property Get Delimiter() As String
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10249, _
                    Description:="Delimiter - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If

    ' |fffd||752||fffd|l|fffd||313||1c2||74e||fffd||fffd|
'Version1.80|fffd||155||3cd|X
    Delimiter = ecH(Cn).Delimiter
'    Select Case ecH(Cn).Delimiter
'        Case Is = ""
'            Delimiter = "CR"
'        Case Is = "CR"
'            Delimiter = "CR"
'        Case Is = "LF"
'            Delimiter = "LF"
'        Case Is = "CRLF"
'            Delimiter = "CRLF"
'        Case Is = "LFCR"
'            Delimiter = "LFCR"
'        Case Else
'            Delimiter = "CR"                ' |fffd|K|fffd||fffd|l|fffd||20a|O|fffd||342|b|fffd|q|fffd||182||742||202||fffd||fffd||702||fffd||fffd|D
'            ecH(Cn).Delimiter = "CR"        ' CR |fffd||255||2433||fffd||fffd||fffd||702||fffd|
'    End Select
'----- |fffd||fffd||fffd||fffd||fffd||702||fffd|
End Property

'-----------------------------------
'   Break|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd|u|fffd||fffd||fffd|[|fffd|N|fffd|M|fffd||fffd||fffd||115d0|M|fffd|C|fffd||702||fffd||fffd||343|u|fffd||fffd||fffd|[|fffd|N|fffd|M|fffd||fffd||fffd||311||fffd||fffd|M|fffd||fffd||fffd|~|fffd||fffd||fffd||93d1||fffd||fffd||fffd||fffd||fffd||750||fffd|p|fffd||303|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||142||fffd||fffd|D
Public Property Let Break(BreakOn As Boolean)
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10259, _
                    Description:="Break - Write" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property

        End Select
        
    End If
    
    If BreakOn = True Then
        ' Break|fffd||311||fffd||fffd|M
        If SetCommBreak(ecH(Cn).Handle) = False Then
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' Break|fffd||311||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10251, _
                        Description:="Break - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||303|u|fffd||fffd||fffd|[|fffd|N|fffd||fffd||fffd|M|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                    Exit Property
            
            End Select
        End If
      Else
        ' Break|fffd||fffd||fffd|M|fffd||312||fffd|~
        If ClearCommBreak(ecH(Cn).Handle) = False Then
            '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
            Select Case Xerror
                Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                    ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                    Stop            ' Break|fffd||fffd||fffd|M|fffd||312||fffd|~|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd|
                    End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

                Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                    Err.Raise _
                        Number:=10252, _
                        Description:="Break - Write" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||303|u|fffd||fffd||fffd|[|fffd|N|fffd||fffd||fffd|M|fffd||312||fffd|~|fffd||24e||fffd||fffd|s|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|D"
                    Exit Property
            
            End Select
        End If
          
    End If

End Property

'-----------------------------------
'   RI|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||1ce||fffd||fffd|p)
'-----------------------------------
' RI|fffd||30f||fffd||513||1c2||74e||fffd||fffd|
Public Property Get RI() As Boolean
    Dim Stat As Long    ' Status
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10268, _
                    Description:="RI - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    If GetCommModemStatus(ecH(Cn).Handle, Stat) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' RI|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10261, _
                    Description:="RI - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|RI|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                DTRDSR = False
                Exit Property
        
        End Select
    End If

    If (Stat And MS_RING_ON) <> 0 Then
        'RI is ON
        RI = True
      Else
        'RI is OFF
        RI = False
    End If
End Property

'-----------------------------------
'   DCD|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||1ce||fffd||fffd|p)
'-----------------------------------
' DCD|fffd||30f||fffd||513||1c2||74e||fffd||fffd|
Public Property Get DCD() As Boolean
    Dim Stat As Long    ' Status
    
    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10278, _
                    Description:="DCD - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select
        
    End If
    
    If GetCommModemStatus(ecH(Cn).Handle, Stat) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' DCD|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10271, _
                    Description:="DCD - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||fffd|DCD|fffd||30f||fffd||502||fffd||fffd||1c2||74e||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd||fffd|D"
                DTRDSR = False
                Exit Property
        
        End Select
    End If

    If (Stat And MS_RLSD_ON) <> 0 Then
        'DCD is ON
        DCD = True
      Else
        'DCD is OFF
        DCD = False
    End If
End Property


'-----------------------------------
'   Spec|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd|||fffd|[|fffd|g|fffd|n|fffd||fffd||fffd|h|fffd||fffd| ecH(Cn).Handle |fffd||30f||fffd||fffd||15d8e||fffd||fffd||fffd||155||502||fffd||fffd||702||fffd||fffd|D
'Spec|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd|Api|fffd||fffd|GetCommProperties|fffd||590||fffd||fffd||fffd||fffd|R|fffd|[|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd|C
'|fffd||fffd||fffd||6c2||303|n|fffd|[|fffd|h|fffd|E|fffd|F|fffd|A|fffd||30f||fffd||502||242||fffd||70b8||fffd|C|fffd||fffd||fffd||202||80a2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||212|l|fffd||fffd||502||fffd||fffd||fffd||fffd||182||fffd||fffd||d0a9||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|D
'|fffd|\|fffd|t|fffd|g|fffd||30a9||fffd||fffd||342||1c2||fffd||fffd||fffd||fffd||60a4||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||202||302||141|C|fffd||fffd||fffd|p|fffd||fffd||fffd||fffd||182||fffd||fffd||355|K|fffd||fffd||fffd||fffd||fffd||fffd|M|fffd|g|fffd|`|fffd||14a|m|fffd|F|fffd||fffd||fffd||fffd||202||fffd|
'|fffd||fffd||fffd|K|fffd|v|fffd||142||fffd||fffd|D
'|fffd||fffd||fffd||302||fffd||fffd||fffd||fffd||80aa||fffd||fffd||fffd|K|fffd|V|fffd|[|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|t|fffd|F|fffd|[|fffd|X|fffd||30b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd|D
Public Property Get Spec() As String
    Dim Er As Long
    Dim Mes As String
    Dim CrLf As String
    'CRLF = Chr$(&HD) & Chr$(&HA)
    CrLf = Chr$(&HA)

    If Cn = 0 Then
        '|fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||fffd|
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=10238, _
                    Description:="InBuffer - Read" & Chr$(&HA) & "|fffd||38f||6c2||182||202||fffd|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd|w|fffd||80b3||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If

    If GetCommProperties(ecH(Cn).Handle, fCOMMPROP) = False Then
        '|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|
        Select Case Xerror
            Case Is = 0 '-----|fffd|W|fffd||fffd||fffd|G|fffd||fffd||fffd|[
                ec.CloseAll     ' |fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||702||fffd||fffd|D
                Stop            ' |fffd|||fffd|[|fffd|g|fffd||30f||fffd||fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|
                End             ' |fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|D

            Case Is = 1 '-----|fffd|g|fffd||fffd||fffd|b|fffd|v|fffd||94|\|fffd|G|fffd||fffd||fffd|[
                Err.Raise _
                    Number:=12300, _
                    Description:="InCount - Read" & Chr$(&HA) & "|fffd|||fffd|[|fffd|g(" & Cn & ")|fffd||30f||fffd||fffd||fffd||fffd||64fe||fffd||142||fffd||fffd||702||fffd||fffd||fffd||142||fffd||fffd||fffd|"
                Exit Property
        
        End Select

    End If

    '|fffd||fffd||fffd||fffd||fffd|o|fffd||30a|m|fffd|F
    With fCOMMPROP
        Mes = "|fffd|\|fffd||fffd||fffd||302||303|o|fffd|C|fffd|g|fffd|T|fffd|C|fffd|Y" & CrLf
        Mes = Mes & "|fffd|@" & .wPacketLength & CrLf
        Mes = Mes & "|fffd|o|fffd|[|fffd|W|fffd||fffd||fffd||fffd|" & CrLf
        Mes = Mes & "|fffd|@" & .wPacketVersion & CrLf
        Mes = Mes & "|fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30d||151||fffd|o|fffd|C|fffd|g|fffd||fffd|" & CrLf
        If .dwMaxTxQueue = 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & CrLf
          Else
            Mes = Mes & "|fffd|@" & .dwMaxTxQueue & CrLf
        End If
        Mes = Mes & "|fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30d||151||fffd|o|fffd|C|fffd|g|fffd||fffd|" & CrLf
        If .dwMaxRxQueue = 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" & CrLf
          Else
            Mes = Mes & "|fffd|@" & .dwMaxRxQueue & CrLf
        End If
        Mes = Mes & "|fffd||151||fffd|f|fffd|[|fffd|^|fffd|]|fffd||fffd||fffd||fffd||fffd|x" & CrLf & "|fffd|@"
        Select Case .dwMaxBaud
            Case Is = BAUD_075
                Mes = Mes & "75 bps"
            Case Is = BAUD_110
                Mes = Mes & "110 bps"
            Case Is = BAUD_134_5
                Mes = Mes & "134.5 bps"
            Case Is = BAUD_150
                Mes = Mes & "150 bps"
            Case Is = BAUD_300
                Mes = Mes & "300 bps"
            Case Is = BAUD_600
                Mes = Mes & "600 bps"
            Case Is = BAUD_1200
                Mes = Mes & "1200 bps"
            Case Is = BAUD_1800
                Mes = Mes & "1800 bps"
            Case Is = BAUD_2400
                Mes = Mes & "2400 bps"
            Case Is = BAUD_4800
                Mes = Mes & "4800 bps"
            Case Is = BAUD_7200
                Mes = Mes & "7200 bps"
            Case Is = BAUD_9600
                Mes = Mes & "9600 bps"
            Case Is = BAUD_14400
                Mes = Mes & "14400 bps"
            Case Is = BAUD_19200
                Mes = Mes & "19200 bps"
            Case Is = BAUD_38400
                Mes = Mes & "38400 bps"
            Case Is = BAUD_56K
                Mes = Mes & "56 K bps"
            Case Is = BAUD_57600
                Mes = Mes & "57600 bps"
            Case Is = BAUD_115200
                Mes = Mes & "115200 bps"
            Case Is = BAUD_128K
                Mes = Mes & "128 K bps"
            Case Is = BAUD_USER
                Mes = Mes & "|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd|}|fffd|u|fffd||fffd|"
        End Select
        Mes = Mes & CrLf

        Mes = Mes & "|fffd|T|fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|@|fffd|\" & CrLf
        
        If .dwProvCapabilities & PCF_DTRDSR <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|FDTR/DSR" & CrLf
        
        If .dwProvCapabilities & PCF_RTSCTS <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|FRTS/CTS" & CrLf
        
        If .dwProvCapabilities & PCF_RLSD <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|FCD(RLSD)" & CrLf
        
        If .dwProvCapabilities & PCF_PARITY_CHECK <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|p|fffd||fffd||fffd|e|fffd|B|fffd|`|fffd|F|fffd|b|fffd|N" & CrLf
        
        If .dwProvCapabilities & PCF_XONXOFF <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|FXON/XOFF|fffd||242||fffd||fffd|t|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|" & CrLf
        
        If .dwProvCapabilities & PCF_SETXCHAR <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|FXON/XOFF|fffd||315||fffd||fffd||fffd||fffd|w|fffd||fffd|" & CrLf
        
        If .dwProvCapabilities & PCF_TOTALTIMEOUTS <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|g|fffd|[|fffd|^|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||310||752||fffd|" & CrLf
        
        If .dwProvCapabilities & PCF_INTTIMEOUTS <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|C|fffd||fffd||fffd|^|fffd|[|fffd|o|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||310||752||fffd|" & CrLf
        
        If .dwProvCapabilities & PCF_SPECIALCHARS <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd||fffd||fffd||a576||fffd||fffd||fffd||30e|g|fffd|p" & CrLf
       
        If .dwProvCapabilities & PCF_16BITMODE <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd||fffd||fffd||fffd||fffd|16|fffd|r|fffd|b|fffd|g|fffd||fffd||fffd|[|fffd|h" & CrLf

        Mes = Mes & "|fffd|e|fffd||fffd|@|fffd|\|fffd||310||752||fffd||309||94||fffd|" & CrLf
        
        If .dwSettableParams & SP_PARITY <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|p|fffd||fffd||fffd|e|fffd|B|fffd||303||fffd||fffd|[|fffd|h" & CrLf
        
        If .dwSettableParams & SP_BAUD <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|{|fffd|[|fffd||fffd||fffd|[|fffd|g" & CrLf

        If .dwSettableParams & SP_DATABITS <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|f|fffd|[|fffd|^|fffd|r|fffd|b|fffd|g|fffd||fffd|" & CrLf

        If .dwSettableParams & SP_STOPBITS <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|X|fffd|g|fffd|b|fffd|v|fffd|r|fffd|b|fffd|g|fffd||fffd|" & CrLf

        If .dwSettableParams & SP_HANDSHAKING <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|t|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|i|fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd|j" & CrLf

        If .dwSettableParams & SP_PARITY_CHECK <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|p|fffd||fffd||fffd|e|fffd|B|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd|ON/OFF" & CrLf

        If .dwSettableParams & SP_RLSD <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|FCD(RLSD)" & CrLf

        If .dwSettableParams & SP_PARITY <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|p|fffd||fffd||fffd|e|fffd|B|fffd||fffd||fffd|[|fffd|h" & CrLf

        Mes = Mes & "|fffd||752||fffd||94|\|fffd||203|{|fffd|[|fffd||fffd||fffd|[|fffd|g" & CrLf
        
        If .dwSettableBaud And BAUD_075 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F75 bps" & CrLf
        
        If .dwSettableBaud And BAUD_110 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F110 bps" & CrLf
        
        If .dwSettableBaud And BAUD_134_5 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F134.5 bps" & CrLf
        
        If .dwSettableBaud And BAUD_150 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F150 bps" & CrLf
            
        If .dwSettableBaud And BAUD_300 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F300 bps" & CrLf
            
        If .dwSettableBaud And BAUD_600 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F600 bps" & CrLf
            
        If .dwSettableBaud And BAUD_1200 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F1200 bps" & CrLf
            
        If .dwSettableBaud And BAUD_1800 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F1800 bps" & CrLf
            
        If .dwSettableBaud And BAUD_2400 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F2400 bps" & CrLf
            
        If .dwSettableBaud And BAUD_4800 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F4800 bps" & CrLf
            
        If .dwSettableBaud And BAUD_7200 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F7200 bps" & CrLf
            
        If .dwSettableBaud And BAUD_9600 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F9600 bps" & CrLf
            
        If .dwSettableBaud And BAUD_14400 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F14400 bps" & CrLf
            
        If .dwSettableBaud And BAUD_19200 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F19200 bps" & CrLf
            
        If .dwSettableBaud And BAUD_38400 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F38400 bps" & CrLf
            
        If .dwSettableBaud And BAUD_56K <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F56 K bps" & CrLf
            
        If .dwSettableBaud And BAUD_57600 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F57600 bps" & CrLf
            
        If .dwSettableBaud And BAUD_115200 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F115200 bps" & CrLf
            
        If .dwSettableBaud And BAUD_128K <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F128 K bps" & CrLf
            
        If .dwSettableBaud And BAUD_USER <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd|" & CrLf

        Mes = Mes & "|fffd||752||fffd||94|\|fffd||203|f|fffd|[|fffd|^|fffd|r|fffd|b|fffd|g|fffd||fffd|" & CrLf
        
        If .wSettableData And DATABITS_5 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F5 |fffd|r|fffd|b|fffd|g" & CrLf

        If .wSettableData And DATABITS_6 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F6 |fffd|r|fffd|b|fffd|g" & CrLf
        
        If .wSettableData And DATABITS_7 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F7 |fffd|r|fffd|b|fffd|g" & CrLf
        
        If .wSettableData And DATABITS_8 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F8 |fffd|r|fffd|b|fffd|g" & CrLf
        
        If .wSettableData And DATABITS_16 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F16 |fffd|r|fffd|b|fffd|g" & CrLf
        
        If .wSettableData And DATABITS_16X <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd||fffd||fffd||fffd||203||fffd||fffd|C|fffd|h|fffd|p|fffd|X" & CrLf

        Mes = Mes & "|fffd||752||fffd||94|\|fffd||203|X|fffd|g|fffd|b|fffd|v|fffd|r|fffd|b|fffd|g|fffd||fffd|" & CrLf
        
        If .wSettableStopParity And STOPBITS_10 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F1 |fffd|r|fffd|b|fffd|g" & CrLf
        
        If .wSettableStopParity And STOPBITS_15 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F1.5 |fffd|r|fffd|b|fffd|g" & CrLf
        
        If .wSettableStopParity And STOPBITS_20 <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F2 |fffd|r|fffd|b|fffd|g" & CrLf

        Mes = Mes & "|fffd||752||fffd||94|\|fffd||203|p|fffd||fffd||fffd|e|fffd|B|fffd|`|fffd|F|fffd|b|fffd|N" & CrLf
        
        If .wSettableStopParity And PARITY_NONE <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|p|fffd||fffd||fffd|e|fffd|B|fffd||202||fffd|" & CrLf

        If .wSettableStopParity And PARITY_ODD <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd||f414||fffd|p|fffd||fffd||fffd|e|fffd|B" & CrLf

        If .wSettableStopParity And PARITY_EVEN <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd|e|fffd|B" & CrLf

        If .wSettableStopParity And PARITY_MARK <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|}|fffd|[|fffd|N|fffd|p|fffd||fffd||fffd|e|fffd|B" & CrLf

        If .wSettableStopParity And PARITY_SPACE <> 0 Then
            Mes = Mes & "|fffd|@|fffd||fffd|"
          Else
            Mes = Mes & "|fffd|@|fffd|~"
        End If
        Mes = Mes & "|fffd|F|fffd|X|fffd|y|fffd|[|fffd|X|fffd|p|fffd||fffd||fffd|e|fffd|B" & CrLf

    End With
    Spec = Mes
    
End Property
'-----------------------------------
'   CloseAll|fffd||fffd||fffd|\|fffd|b|fffd|h
'-----------------------------------
Private Sub CloseAll()
'|fffd||fffd||fffd||5c2||102||303|||fffd|[|fffd|g|fffd||fffd||82||fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|p|fffd||303||fffd||fffd|\|fffd|b|fffd|h|fffd||142||fffd||fffd|D
'ecPorts.tmp|fffd||255||6d1||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd|[|fffd|Y|fffd||fffd||fffd|C|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||702||fffd||fffd|D
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||502||fffd||fffd||702||fffd||fffd||fffd|
    Dim i As Long
    Dim rv As Long
    Dim Handle As Long
    Dim FileNumber As Integer
    Dim Fpath As String * 260
    FileNumber = FreeFile()
    
' Version1.83|fffd||152||1c9||fffd|
    If XnotOpenLog = False Then
'-----|fffd||fffd||fffd||fffd||fffd||702||fffd|
        GetTempPath 260, Fpath
        Open Left(Fpath, InStr(Fpath, vbNullChar) - 1) & "ecPort.tmp" For Random Access Read Write As #FileNumber Len = Len(Handle)
' Version1.83|fffd||152||1c9||fffd|
    End If
'-----|fffd||fffd||fffd||fffd||fffd||702||fffd|

    For i = 1 To ecMaxPort
        ecH(i).Delimiter = "CR"         ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||702||fffd|
        ecH(i).LineInTimeOut = 0        ' |fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||303||fffd||fffd|Z|fffd|b|fffd|g
        
        If XnotOpenLog = False Then
            Get #FileNumber, i, Handle      ' |fffd|L|fffd|^|fffd||fffd||fffd||fffd||102||fffd||fffd||fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||702||fffd|
            If Handle > 0 Then
                CloseHandle Handle          ' |fffd|N|fffd||fffd||fffd|[|fffd|Y
                rv = 0&
                Put #FileNumber, i, rv
            End If
          ElseIf ecH(i).Handle > 0 Then
            CloseHandle ecH(i).Handle       ' |fffd|N|fffd||fffd||fffd|[|fffd|Y
        End If
        ecH(i).Handle = 0
    Next i
    Cn = 0      ' |fffd||fffd||fffd||fffd||fffd||38f||6c2||303|||fffd|[|fffd|g|fffd||50d||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g
    Close #FileNumber
End Sub

'-----------------------------------
'|fffd|B|fffd||fffd||fffd|R|fffd|}|fffd||fffd||fffd|h

'-----------------------------------
'   OutBufferSize|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd||1c2||74f|o|fffd||fffd||fffd||fffd|p
'|fffd||fffd||fffd||74f||fffd||fffd||fffd||fffd||311||38f||6c2||182||202||fffd||fffd||102||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||311||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|T|fffd|C|fffd|Y|fffd||fffd||502||fffd||fffd||702||fffd|
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|-1|fffd||fffd||502||fffd||fffd||702||fffd|
Private Property Get OutBufferSize() As Long
    If GetCommProperties(ecH(Cn).Handle, fCOMMPROP) = False Then
        '|fffd||fffd||502||30e||64fe||fffd||24e||fffd||fffd|s
        OutBufferSize = -1
        Exit Property
    End If
    OutBufferSize = ecDef.fCOMMPROP.dwCurrentTxQueue
End Property

'-----------------------------------
'   InBufferSize|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd||1c2||74f|o|fffd||fffd||fffd||fffd|p
'|fffd||fffd||fffd||74f||fffd||fffd||fffd||fffd||311||38f||6c2||182||202||fffd||fffd||102||fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30e||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|T|fffd|C|fffd|Y|fffd||fffd||502||fffd||fffd||702||fffd|
'|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd|-1|fffd||fffd||502||fffd||fffd||702||fffd|
Private Property Get InBufferSize() As Long
    If GetCommProperties(ecH(Cn).Handle, fCOMMPROP) = False Then
        '|fffd||fffd||502||30e||64fe||fffd||24e||fffd||fffd|s
        InBufferSize = -1
        Exit Property
    End If
    InBufferSize = ecDef.fCOMMPROP.dwCurrentRxQueue
End Property

'-----------------------------------
'   DELIMs|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'DELIMs
'|fffd|f|fffd||fffd||fffd|~|fffd|^|fffd|p|fffd||752||8576||fffd||fffd||fffd||fffd||64fe||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||1c2||74f|o|fffd||fffd||fffd||fffd|p)
'   Delimiter|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||310||752||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||90bd||fffd||7c2||303|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|D
'   |fffd||fffd||fffd||317||fffd||341|C|fffd||fffd||fffd||fffd||fffd||fffd||14e|w|fffd||80b7||fffd||fffd||fffd||fffd||302||fffd|HANDSHAKINGs|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||182||314||fffd|r|fffd||142||fffd||fffd|D
'|fffd||fffd|
' |fffd||fffd||fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Cr|fffd||250||752||80b5||fffd||702||fffd||fffd|D
'   ec.Delimiter = ec.DELIMs.Cr
'   ec.Delimiter = "Cr"
' |fffd||fffd||fffd|f|fffd||fffd||fffd|~|fffd|^|fffd||fffd|Cr+Lf|fffd||250||752||80b5||fffd||702||fffd||fffd|D
'   ec.Delimiter = ec.DELIMs.CrLf
'   ec.Delimiter = "CRLF"

Public Property Get DELIMs() As DelimType
    ' |fffd|f|fffd||fffd||fffd|~|fffd|^|fffd|w|fffd||8576||fffd||fffd||fffd||fffd||8414|
    DELIMs.CR = "CR"            ' CR
    DELIMs.LF = "LF"            ' LF
    DELIMs.CrLf = "CRLF"        ' CR + LF
    DELIMs.LfCr = "LFCR"        ' LF + CR
'Version1.80|fffd||152||1c9||fffd|
    DELIMs.ETX = "ETX"          ' ETX
    DELIMs.EOT = "EOT"          ' EOT
    DELIMs.DLE = "DLE"          ' DLE
    DELIMs.ETB = "ETB"          ' ETB
'-----|fffd||fffd||fffd||fffd||fffd||702||fffd|
End Property

'-----------------------------------
'   HANDSHAKEs|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B
'-----------------------------------
'|fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|L|fffd||fffd||fffd|O|fffd||752||8576||fffd||fffd||fffd||fffd||64fe||fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B(|fffd||1c2||74f|o|fffd||fffd||fffd||fffd|p)
'   HandHsaking|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||14e|g|fffd|p|fffd||fffd||fffd||fffd||752||fffd|p|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||64fe||fffd||fffd||fffd||90bd||fffd||7c2||303|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd|D
'   |fffd||fffd||fffd||317||fffd||341|C|fffd||fffd||fffd||fffd||fffd||fffd||14e|w|fffd||80b7||fffd||fffd||fffd||fffd||302||fffd|HANDSHAKINGs|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||182||314||fffd|r|fffd||142||fffd||fffd|D
'|fffd||fffd|
' |fffd||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||fffd||fffd||202||fffd||fffd||250||752||80b5||fffd||702||fffd||fffd|D
'   ec.HandShaking = ec.HANDSHAKEs.No
'   ec.HandShaking = "N"
' |fffd||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd||fffd|RTS/CTS|fffd||250||752||80b5||fffd||702||fffd||fffd|D
'   ec.HandShaking = ec.HANDSHAKEs.RTSCTS
'   ec.HandShaking = "R"
'
Public Property Get HANDSHAKEs() As HandShakingType
    ' |fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N|fffd|w|fffd||8576||fffd||fffd||fffd||fffd||8414|
    HANDSHAKEs.No = "N"         ' |fffd||202||fffd|
    HANDSHAKEs.XonXoff = "X"    ' Xon/Off
    HANDSHAKEs.RTSCTS = "R"     ' RTS/CTS
    HANDSHAKEs.DTRDSR = "D"     ' DTR/DSR
End Property


Attribute VB_Name = "ecDef"
Option Explicit

'   EasyComm
'   Module ecDef.bas
'   Copyright(c) 2000 T.Kinoshita
'   Copyright(c) 2001 T.Kinoshita
'   Copyright(c) 2002 T.Kinoshita
'   Copyright(c) 2003 T.Kinoshita
'   Copyright(c) 2004 T.Kinoshita

'   2001.10.23 ReadFile,WriteFile|fffd||30f|C|fffd||fffd|

'----------------------
'   |fffd||3d0||fffd||fffd|E|fffd||8414||fffd||312||fffd|`
'----------------------
Private Const Version As String = "1.84"

Type PortSetting
    Handle As Long          ' |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|n|fffd||fffd||fffd|h|fffd||fffd|
    Delimiter As String     ' |fffd|f|fffd||fffd||fffd|~|fffd|^
            ' .Delimiter = ""           : CR    |fffd|i|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd|j
            ' .Delimiter = "CR"         : CR
            ' .Delimiter = "LF"         : LF
            ' .Delimiter = "CRLF"       : CRLF
            ' .Delimiter = "LFCR"       : LFCR
    ' Version 1.51|fffd||152||1c9||fffd|
    LineInTimeOut As Long   ' AsciiLine|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||313||1c2||74f|o|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g(mS)
    ' |fffd||fffd||fffd||fffd||fffd||702||fffd|
End Type

Public Const ecMaxPort As Long = 255&               ' |fffd||151||fffd|||fffd|[|fffd|g|fffd||50d||fffd|
Public ecH(0 To ecMaxPort) As PortSetting           ' |fffd|||fffd|[|fffd|g|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd|C|fffd|f|fffd||fffd||fffd|~|fffd|^
Public Const ecMinimumInBuffer As Long = 2048&      ' |fffd||14f||fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y
Public Const ecMinimumOutBuffer As Long = 2048&     ' |fffd||14f||fffd||fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y
Public Cn As Long                                   ' |fffd||fffd||fffd||fffd||fffd||38f||6c2||303|||fffd|[|fffd|g|fffd||50d||fffd|

'|fffd|W|fffd||fffd||fffd||752||fffd|
Public Const ecSetting As String = "9600,n,8,1"     '|fffd|W|fffd||fffd||fffd||290|M|fffd||fffd||fffd||fffd|
Public Const ecReadIntervalTimeout = 0&             'Version1.80|fffd||fffd||83c9||fffd||fffd||fffd||fffd||502||142||356||fffd||fffd||fffd||fffd||255||3cd|X
Public Const ecReadTotalTimeoutConstant = 0&
Public Const ecReadTotalTimeoutMultiplier = 0&
Public Const ecWriteTotalTimeoutConstant = 0&
Public Const ecWriteTotalTimeoutMultiplier = 0&     'Version1.80|fffd||fffd||83c9||fffd||fffd||fffd||fffd||502||142||356||fffd||fffd||fffd||fffd||255||3cd|X

Public Const ecInBufferSize As Long = 2048&
    '|fffd||fffd||fffd||343|o|fffd|b|fffd|t|fffd|@|fffd||250||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||342||fffd||fffd||312|l|fffd||fffd|W|fffd||fffd||fffd||752||fffd|l|fffd||182||fffd||fffd||90aa||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||fffd||fffd||fffd|ecInBufferSize|fffd||fffd|W|fffd||fffd||fffd||242||fffd||fffd||fffd|D
Public Const ecXonLim As Long = 128&                '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd||fffd||fffd||fffd||fffd|l
Public Const ecXoffLim As Long = 128&               '|fffd|o|fffd|b|fffd|t|fffd|@|fffd||14f||fffd||fffd||c2ad7|e|fffd||fffd|
Public Const ecOutBufferSize As Long = 2048&
    '|fffd|o|fffd||343|o|fffd|b|fffd|t|fffd|@|fffd||250||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||342||fffd||fffd||312|l|fffd||fffd|W|fffd||fffd||fffd||752||fffd|l|fffd||182||fffd||fffd||90aa||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e||fffd||fffd||fffd|ecOutBufferSize|fffd||fffd|W|fffd||fffd||fffd||242||fffd||fffd||fffd|D

'----------------------
'   API|fffd||310||933e|
'----------------------

'======================
'CreateFile
'======================
'   |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd|[|fffd|v|fffd||fffd|api
'   |fffd||fffd||fffd||fffd||fffd||fffd| = |fffd|n|fffd||fffd||fffd|h|fffd||fffd||fffd|C|fffd||fffd||fffd|s|fffd||fffd| = INVALID_HANDLE_VALUE
'   lpSecurityAttributes |fffd||fffd| SECURITY_ATTRIBUTES|fffd||582||303|||fffd|C|fffd||fffd||fffd|^
'   |fffd|g|fffd||fffd||202||fffd||fffd||302||fffd| long |fffd||152||fffd|`|fffd||fffd||fffd||fffd| Null(&0)|fffd||fffd|n|fffd||fffd||fffd|B|fffd|iByVal|fffd||255||3cd|X|fffd|j
Public Declare PtrSafe Function _
    CreateFile Lib "kernel32" Alias "CreateFileA" ( _
        ByVal lpFileName As String, _
        ByVal dwDesiredAccess As Long, _
        ByVal dwShareMode As Long, _
        ByVal lpSecurityAttributes As Long, _
        ByVal dwCreationDisposition As Long, _
        ByVal dwFlagsAndAttributes As Long, _
        ByVal hTemplateFile As Long) _
As Long
'|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||308||4d6||fffd|
'   lpFileName             |fffd|||fffd|[|fffd|g|fffd||318|_|fffd||fffd||fffd||fffd|
'       "COM1","COM2",...
'   dwDesiredAccess        |fffd|A|fffd|N|fffd|Z|fffd|X|fffd||fffd||fffd|[|fffd|h
'      |fffd||1c2||74f|o|fffd||fffd||fffd||fffd|p GENERIC_READ
'      |fffd||fffd||fffd||fffd||fffd||fffd||fffd||750||fffd|p GENERIC_WRITE
'      |fffd|o|fffd||fffd||fffd||fffd|      GENERIC_READ Or GENERIC_WRITE
'      |fffd||28f||fffd||303|V|fffd||fffd||fffd|A|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||142||351|o|fffd||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|
'   dwShareMode            |fffd||fffd||fffd|L|fffd|t|fffd||fffd||fffd|O|fffd|B
'       |fffd|V|fffd||fffd||fffd|A|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||34b||fffd||fffd|L|fffd||142||fffd||fffd||202||fffd||fffd||302||fffd| &0 |fffd||fffd|n|fffd||fffd||fffd|B
'   lpSecurityAttributes   |fffd|Z|fffd|L|fffd||fffd||fffd||fffd||fffd|e|fffd|B|fffd||fffd||fffd||fffd||fffd||24e|w|fffd||fffd|B
'       |fffd|q|fffd|v|fffd||fffd||fffd|Z|fffd|X|fffd||24c|p|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||302||141|C|fffd|f|fffd|t|fffd|H|fffd||fffd||fffd|g|fffd||311||fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||80b7||fffd||fffd||60a4||fffd||fffd| &0 |fffd||fffd|n|fffd||fffd||fffd|B
'   dwCreationDisposition  |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|J|fffd||fffd||fffd||fffd||fffd|@|fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|B
'       |fffd|||fffd|[|fffd|g|fffd||350|V|fffd|K|fffd||c42c||fffd||fffd||fffd||fffd||302||142||342||202||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||202||302||fffd|OPEN_EXISTING|fffd||fffd|n|fffd||fffd||fffd|B
'   dwFlagsAndAttributes   |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||30e|w|fffd||fffd|B
'       |fffd|V|fffd||fffd||fffd|A|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||142||fffd| &0|fffd|C|fffd||702||fffd||fffd||fffd|FILE_FLAG_OVERLAPPED|fffd||fffd|n|fffd||fffd||fffd|B
'       FILE_FLAG_OVERLAPPED|fffd||30f||a347||fffd|C|fffd|||fffd|[|fffd|g|fffd||354||53bca||fffd|I/O|fffd||fffd||fffd|[|fffd|h|fffd||14a|J|fffd||fffd||fffd||fffd||fffd|B
'   hTemplateFile
'       |fffd|||fffd|[|fffd|g|fffd||303|I|fffd|[|fffd|v|fffd||fffd||fffd||242||34a||58c|W|fffd||202||fffd||fffd||302||fffd| &0|fffd||fffd|n|fffd||fffd||fffd|B
'|fffd||246b||fffd||fffd||fffd||fffd|
'   |fffd|f|fffd|o|fffd|b|fffd|O|fffd||fffd||fffd||343|v|fffd||fffd||fffd|O|fffd||fffd||fffd||fffd||fffd||312||fffd||fffd|f|fffd||242||fffd||fffd|||fffd|[|fffd|g|fffd||fffd||fffd|J|fffd||fffd||fffd||a0bd||fffd||702||702||242||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd|B
'   |fffd|J|fffd||fffd||fffd||a0bd||fffd|||fffd|[|fffd|g|fffd||303|n|fffd||fffd||fffd|h|fffd||fffd||fffd||fffd||fffd||d0a9||fffd||fffd||202||fffd||fffd||195||82||fffd||fffd||90b1||fffd||182||fffd||fffd||142||fffd||fffd||202||fffd||fffd||fffd||fffd||7c1|C|fffd|||fffd|[|fffd|g|fffd||303|n|fffd||fffd||fffd|h
'   |fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||24f||fffd||fffd||fffd||fffd||fffd||fffd||782||60a4||fffd||203|}|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||fffd||fffd||182||60a2||fffd|B


'======================
'CloseHandle
'======================
'   |fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||303|N|fffd||fffd||fffd|[|fffd|Y
'   |fffd||fffd||fffd||fffd||fffd||fffd| <>0|fffd|C|fffd||fffd||fffd|s|fffd||fffd| = 0
Public Declare PtrSafe Function _
    CloseHandle Lib "kernel32" ( _
        ByVal hObject As Long) _
As Long


'======================
'GetCommState
'======================
'   |fffd|||fffd|[|fffd|g|fffd||310||752||fffd|l|fffd||fffd|DCB|fffd||253||1c2||74f|o|fffd||fffd|
'   |fffd||fffd||fffd||fffd||fffd||fffd| <>0|fffd|C|fffd||fffd||fffd|s|fffd||fffd| = 0
Public Declare PtrSafe Function _
    GetCommState Lib "kernel32" ( _
        ByVal nCid As Long, _
        ByRef lfDCB As DCB) _
As Long

'======================
'SetCommState
'======================
'   DCB|fffd||313||fffd||fffd|e|fffd||fffd||752||80b7||fffd||fffd|
'   |fffd||fffd||fffd||fffd||fffd||fffd| <>0|fffd|C|fffd||fffd||fffd|s|fffd||fffd| = 0
Public Declare PtrSafe Function _
    SetCommState Lib "kernel32" ( _
        ByVal hCommDev As Long, _
        ByRef lfDCB As DCB) _
As Long


'======================
'BuildCommDCB
'======================
'|fffd||fffd||fffd||fffd||fffd||fffd||242||fffd||fffd|||fffd|[|fffd|g|fffd||310||752||fffd|
'
'Version1.80|fffd||fffd||fffd|L
'BuildCommDCB|fffd||341|CDCB|fffd||fffd|baud,parity,data,stop|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||142||342||202||fffd||fffd|C
'|fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|L|fffd||fffd||fffd|O|fffd||702||14f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||10a4||fffd||42f82||2c1|D
'|fffd||442||fffd||fffd||fffd||fffd||80be||fffd|D
Public Declare PtrSafe Function _
    BuildCommDCB Lib "kernel32" Alias "BuildCommDCBA" ( _
    ByVal lpDef As String, _
    ByRef lfDCB As DCB) _
As Long

'======================
'GetCommTimeouts
'======================
'|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||313||1c2||74f|o|fffd||fffd|
Public Declare PtrSafe Function _
    GetCommTimeouts Lib "kernel32" ( _
        ByVal hFile As Long, _
        ByRef lfCOMMTIMEOUTS As COMMTIMEOUTS) _
As Long

'======================
'SetCommTimeouts
'======================
'|fffd|^|fffd|C|fffd||fffd||fffd|A|fffd|E|fffd|g|fffd||310||752||fffd|
Public Declare PtrSafe Function _
    SetCommTimeouts Lib "kernel32" ( _
        ByVal hFile As Long, _
        ByRef lfCOMMTIMEOUTS As COMMTIMEOUTS) _
As Long

'======================
'PurgeComm
'======================
'|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|N|fffd||fffd||fffd|A
Public Declare PtrSafe Function _
    PurgeComm Lib "kernel32" ( _
        ByVal hFile As Long, _
        ByVal dwFlags As Long) _
As Long

'======================
'ClearCommError
'======================
'|fffd|o|fffd|b|fffd|t|fffd|@|fffd||30f||fffd||502||fffd||fffd||64fe|
Public Declare PtrSafe Function _
    ClearCommError Lib "kernel32" ( _
        ByVal hFile As Long, _
        ByRef lpErrors As Long, _
        ByRef lpStat As COMSTAT) _
As Long

'======================
'SetupComm
'======================
'|fffd|o|fffd|b|fffd|t|fffd|@|fffd|T|fffd|C|fffd|Y|fffd||30e|w|fffd||fffd|
Public Declare PtrSafe Function _
    SetupComm Lib "kernel32" ( _
        ByVal hFile As Long, _
        ByVal dwInQueue As Long, _
        ByVal dwOutQueue As Long) _
As Long

'======================
'GetCommProperties
'======================
'|fffd|||fffd|[|fffd|g|fffd||30e|d|fffd|l|fffd||30e||64fe|
Public Declare PtrSafe Function _
    GetCommProperties Lib "kernel32" ( _
        ByVal hFile As Long, _
        ByRef lfCOMMPROP As COMMPROP) _
As Long

'======================
'WriteFile
'======================
'|fffd|||fffd|[|fffd|g|fffd|o|fffd||fffd|API
'lpBuffer|fffd||341|C|fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd||302||fffd|String|fffd||142||342||202||fffd|Any|fffd||150||933e||fffd||fffd||fffd||fffd|
'lpOverlapped|fffd||34e|g|fffd||fffd||202||fffd||fffd||182||fffd||fffd||fffd|Null|fffd||fffd|n|fffd||fffd||fffd||302||fffd|Long|fffd||702||fffd||fffd||fffd|Any
'---Vers 1.00
'Public Declare Function WriteFile Lib "kernel32" ( _
'    ByVal hFile As Long, _
'    ByRef lpBuffer As Any, _
'    ByVal nNumberOfBytesToWrite As Long, _
'    ByRef lecActiveOfBytesWritten As Long, _
'    ByVal lpOverlapped As Long) _
'As Long
'---Vers1.01

'Public Declare Function WriteFile Lib "kernel32" ( _
'    ByVal hFile As Long, _
'    ByRef lpBuffer As Any, _
'    ByVal nNumberOfBytesToWrite As Long, _
'    ByRef lecActiveOfBytesWritten As Long, _
'    ByRef lpOverlapped As Long) _
'As Long

'win32api.txt|fffd||142||fffd|lpOverlapped|fffd||fffd|ByRef|fffd||152||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||90aa|ByVal|fffd||30c||fffd||fffd|
'|fffd||fffd|`|fffd||fffd||fffd|e
'Declare Function WriteFile Lib "kernel32" ( _
'    ByVal hFile As Long, _
'    lpBuffer As Any, _
'    ByVal nNumberOfBytesToWrite As Long, _
'    lpNumberOfBytesWritten As Long, _
'    lpOverlapped As OVERLAPPED) _
'As Long
Declare PtrSafe Function WriteFile Lib "kernel32" ( _
    ByVal hFile As Long, _
    ByRef lpBuffer As Any, _
    ByVal nNumberOfBytesToWrite As Long, _
    ByRef lpNumberOfBytesWritten As Long, _
    ByVal lpOverlapped As Long) _
As Long

'======================
'ReadFile
'======================
'|fffd|||fffd|[|fffd|g|fffd||fffd||fffd||fffd|API
'lpBuffer|fffd||341|C|fffd|o|fffd|C|fffd|i|fffd||fffd||fffd|R|fffd|[|fffd|h|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||fffd||fffd||fffd||302||fffd|String|fffd||142||342||202||fffd|Any|fffd||150||933e||fffd||fffd||fffd||fffd|
'lpOverlapped|fffd||34e|g|fffd||fffd||202||fffd||fffd||182||fffd||fffd||fffd|Null|fffd||fffd|n|fffd||fffd||fffd||302||fffd|Long|fffd||702||fffd||fffd||fffd|Any
'---Vers1.00
'Public Declare Function ReadFile Lib "kernel32" ( _
'    ByVal hFile As Long, _
'    ByRef lpBuffer As Any, _
'    ByVal nNumberOfBytesToRead As Long, _
'    ByRef lecActiveOfBytesRead As Long, _
'    ByVal lpOverlapped As Long) _
'As Long
'---Vers1.01

'win32api.txt|fffd||142||fffd|lpOverlapped|fffd||fffd|ByRef|fffd||152||fffd|`|fffd||fffd||fffd||fffd||102||fffd||fffd||90aa|ByVal|fffd||30c||fffd||fffd|
'|fffd||fffd|`|fffd||fffd||fffd|e
'Declare Function ReadFile Lib "kernel32" ( _
'    ByVal hFile As Long, _
'    lpBuffer As Any, _
'    ByVal nNumberOfBytesToRead As Long, _
'    lpNumberOfBytesRead As Long, _
'    lpOverlapped As OVERLAPPED) _
'As Long

Public Declare PtrSafe Function ReadFile Lib "kernel32" ( _
    ByVal hFile As Long, _
    ByRef lpBuffer As Any, _
    ByVal nNumberOfBytesToRead As Long, _
    ByRef lecActiveOfBytesRead As Long, _
    ByVal lpOverlapped As Long) _
As Long


'---

' API
Public Const INVALID_HANDLE_VALUE = -1
Public Const GENERIC_READ = &H80000000
Public Const GENERIC_WRITE = &H40000000
Public Const OPEN_EXISTING = 3

'  PURGE function flags.
Public Const PURGE_TXCLEAR = &H4     '  |fffd||fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|N|fffd||fffd||fffd|A
Public Const PURGE_RXCLEAR = &H8     '  |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd|N|fffd||fffd||fffd|A

'======================
'Sleep
'======================
'|fffd||fffd|~|fffd|^|fffd|C|fffd|}|fffd|[|fffd||590||fffd|
'|fffd|w|fffd||839e||fffd||501|i|fffd|~|fffd||fffd||fffd|b|fffd|j|fffd|C|fffd||fffd||fffd|s|fffd||12192|f|fffd||fffd||fffd||fffd|D
Public Declare PtrSafe Sub Sleep Lib "kernel32" ( _
    ByVal dwMilliseconds As Long)

'======================
'EscapeCommFunction
'======================
'RTS,DTR|fffd||30b||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   Version 1.84|fffd||20d|~|fffd|g|fffd|p|fffd||1218e|~|fffd|D
'   EscapeCommFunction|fffd||fffd|RTS,DTR|fffd||fffd||fffd||fffd||fffd||fffd||fffd||752||80b7||fffd||90aa||fffd|CDCB|fffd||242||349|e|fffd||fffd||fffd||fffd||fffd||202||fffd||fffd|D
'   |fffd||82||702||fffd|Setting|fffd|v|fffd||fffd||fffd|p|fffd|e|fffd|B|fffd||202||1c2||fffd|DCB|fffd||fffd||1c2||74f|o|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd||fffd||fffd|x|fffd||fffd||fffd||fffd||fffd||fffd||fffd||782||fffd|RTS,DTR|fffd||310||752||80aa|
'   |fffd||fffd||fffd||fffd||fffd||242||202||fffd||fffd||102||fffd||fffd||702||fffd||fffd|D
'   |fffd||e0af||fffd||202||fffd||fffd||fffd||fffd||182||fffd||fffd|D
'   RTS,DTR|fffd|o|fffd||342||30b||fffd||fffd||fffd||fffd||752||fffd||341|CDCB|fffd||fffd|fBitFields|fffd||30f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||14d|s|fffd||fffd||fffd||fffd||fffd||181|D
'   EscapeCommFunction|fffd||341|C|fffd|P|fffd||248||a39e||fffd|I|fffd||20b||fffd||fffd||fffd||fffd||752||fffd||30b|@|fffd|\|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||182||252||fffd||fffd||4c1|I
Public Declare PtrSafe Function _
    EscapeCommFunction Lib "kernel32" ( _
        ByVal nCid As Long, _
        ByVal nFunc As Long) _
As Long

' Escape Functions
Public Const SETRTS = 3 '  Set RTS high
Public Const CLRRTS = 4 '  Set RTS low
Public Const SETDTR = 5 '  Set DTR high
Public Const CLRDTR = 6 '  Set DTR low


'======================
'GetCommModemStatus
'======================
'RTS,DTR|fffd||30f||fffd||502||313||1c2||74e||fffd||fffd|
Public Declare PtrSafe Function _
    GetCommModemStatus Lib "kernel32" ( _
        ByVal hFile As Long, _
        lpModemStat As Long) _
As Long

'  Modem Status Flags
Public Const MS_CTS_ON = &H10&
Public Const MS_DSR_ON = &H20&
Public Const MS_RING_ON = &H40&
Public Const MS_RLSD_ON = &H80&

'======================
'SetCommBreak
'======================
'Break|fffd|M|fffd||fffd||fffd||311||fffd||fffd|M
Public Declare PtrSafe Function SetCommBreak Lib "kernel32" ( _
    ByVal nCid As Long) _
As Long

'======================
'ClearCommBreak
'======================
'Break|fffd|M|fffd||fffd||fffd||311||fffd||fffd|M|fffd||fffd||fffd|~
Public Declare PtrSafe Function ClearCommBreak Lib "kernel32" ( _
    ByVal nCid As Long) _
As Long

'======================
'GetTickCount
'======================
'Windows |fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||30c|o|fffd||7ce||fffd||fffd||502||fffd||fffd|~|fffd||fffd||fffd|b|fffd|P|fffd||282||14e||64fe||fffd||fffd||fffd||702||fffd||fffd|D
'API|fffd||fffd||fffd||142||341|C|fffd|o|fffd||7ce||fffd||fffd||502||355||fffd||fffd||fffd||fffd||202||fffd||fffd||312||fffd||fffd||fffd||fffd||fffd| DWORD |fffd|^|fffd||155||6d1||fffd||fffd||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|D
Public Declare PtrSafe Function GetTickCount Lib "kernel32" () _
As Long

'======================
'GetLocalTime
'======================
'|fffd||fffd||fffd||742||303||fffd||fffd|[|fffd|J|fffd||fffd||fffd||fffd||fffd||502||fffd|mS|fffd|P|fffd||282||702||14e||64fe||fffd||fffd||fffd||702||fffd||fffd|D
Public Declare PtrSafe Sub GetLocalTime Lib "kernel32" ( _
    lpSystemTime As SYSTEMTIME)

'======================
'GetTempPath
'======================
Public Declare PtrSafe Function GetTempPath Lib "kernel32" Alias "GetTempPathA" ( _
    ByVal nBufferLength As Long, _
    ByVal lpBuffer As String) _
As Long

'======================
'sndPlaySound
'======================
' Version1.83|fffd||152||1c9||fffd|
' WAVE|fffd|T|fffd|E|fffd||fffd||fffd|h|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||30d||110||fffd|
Public Declare PtrSafe Function sndPlaySound Lib "winmm.dll" Alias "sndPlaySoundA" ( _
    ByVal lpszSoundName As String, _
    ByVal uFlags As Long) _
As Long
'  flag values for uFlags parameter
Public Const SND_SYNC = &H0            '  play synchronously (default)
Public Const SND_ASYNC = &H1           '  play asynchronously

Public Const SND_NODEFAULT = &H2       '  silence not default, if sound not found

Public Const SND_MEMORY = &H4          '  lpszSoundName points to a memory file
Public Const SND_ALIAS = &H10000       '  name is a WIN.INI [sounds] entry
Public Const SND_FILENAME = &H20000    '  name is a file name
Public Const SND_RESOURCE = &H40004    '  name is a resource name or atom
Public Const SND_ALIAS_ID = &H110000   '  name is a WIN.INI [sounds] entry identifier

Public Const SND_ALIAS_START = 0       '  must be > 4096 to keep strings in same section of resource file

Public Const SND_LOOP = &H8            '  loop the sound until next sndPlaySound
Public Const SND_NOSTOP = &H10         '  don't stop any currently playing sound
Public Const SND_VALID = &H1F          '  valid flags          / ;Internal /

Public Const SND_NOWAIT = &H2000       '  don't wait if the driver is busy

Public Const SND_VALIDFLAGS = &H17201F '  Set of valid flag bits.  Anything outside
                                '  this range will raise an error
Public Const SND_RESERVED = &HFF000000 '  In particular these flags are reserved

Public Const SND_TYPE_MASK = &H170007


'----------------------
'   |fffd|\|fffd||fffd||fffd||302||312||fffd|`
'----------------------

'DCB|fffd|\|fffd||fffd||fffd||fffd|
Type DCB
    DCBlength As Long
    BaudRate As Long
    fBitFields As Long 'See Comments in Win32API.Txt
    wReserved As Integer
    XonLim As Integer
    XoffLim As Integer
    ByteSize As Byte
    Parity As Byte
    StopBits As Byte
    XonChar As Byte
    XoffChar As Byte
    ErrorChar As Byte
    EofChar As Byte
    EvtChar As Byte
    wReserved1 As Integer 'Reserved; Do Not Use
End Type

'DCB|fffd|^|fffd||3d0||fffd||fffd||312||fffd|`
Public fDCB As DCB

'Version1.80|fffd||152||1c9||fffd|
'|fffd||a39e||fffd||6d1||fffd||fffd|pDCB|fffd|^|fffd||3d0||fffd||fffd||312||fffd|`
Public fDCBtemp As DCB
'----- |fffd||fffd||fffd||fffd||fffd||702||fffd|

'   |fffd||fffd||fffd||fffd||fffd|o|fffd||308||4d6||fffd|
'DCBlength
'   DCB|fffd|\|fffd||fffd||fffd||302||303|o|fffd|C|fffd|g|fffd|T|fffd|C|fffd|Y
'BaudRate
'   |fffd|{|fffd|[|fffd||fffd||fffd|[|fffd|g
'fBitFields
'   |fffd|e|fffd|r|fffd|b|fffd|g|fffd||14b|@|fffd|\|fffd||fffd||fffd|w|fffd||80b7||fffd||fffd|
'   |fffd|e|fffd|r|fffd|b|fffd|g|fffd||fffd|1|fffd||302||182||fffd||fffd||308||4d6||fffd||fffd||34e||fffd||fffd||312||282||fffd|
' bit1   fBinary
'   |fffd|o|fffd|C|fffd|i|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|g|fffd|p|fffd||94|\
'   Win32 API|fffd||354||fffd|o|fffd|C|fffd|i|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd|]|fffd||fffd||fffd||fffd||fffd|T|fffd|||fffd|[|fffd|g|fffd||fffd||fffd||202||fffd||fffd||302||142||fffd||fffd||303||fffd||fffd||fffd||fffd|o|fffd|[|fffd||34f||fffd||242|P
' bit2   fParity
'   |fffd|p|fffd||fffd||fffd|e|fffd|B|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd|g|fffd|p
' bit3   fOutxCtsFlow
'   CTS|fffd||fffd||fffd|o|fffd||343|t|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||14a||10e||fffd||fffd||fffd||fffd||fffd||fffd|
' bit4   fOutxDsrFlow
'   DSR|fffd||fffd||fffd|o|fffd||343|t|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||14a||10e||fffd||fffd||fffd||fffd||fffd||fffd|
' bit5,6 fDtrControl
'   DTR|fffd||242||fffd||fffd|t|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd|2|fffd|r|fffd|b|fffd|g|fffd||14e|w|fffd||fffd|
Public Const DTR_CONTROL_DISABLE = &H0      'DTR|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd|OFF
Public Const DTR_CONTROL_ENABLE = &H1       'DTR|fffd||fffd||fffd|C|fffd||fffd||fffd||fffd|ON
Public Const DTR_CONTROL_HANDSHAKE = &H2    'DTR|fffd||242||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N
' bit7   fDsrSensitivity
'   DSR|fffd||fffd|OFF|fffd||30a||502||24e||fffd|M|fffd||fffd||fffd||fffd||fffd|f|fffd|[|fffd|^|fffd||16cce||fffd|
' bit8   fTXContinueOnXoff
'   |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd||fffd|t|fffd||fffd||fffd||242||202||fffd|XoffChar|fffd||fffd||fffd||fffd||fffd||115d0|M|fffd||fffd||fffd||fffd||fffd||fffd||251||fffd||fffd|M|fffd||fffd||fffd|~|fffd||7c2||fffd|
' bit9   fOutX
'   |fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|XON/XOFF|fffd|t|fffd||fffd||fffd|[|fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||fffd|
' bit10  fInX
'   |fffd||fffd||fffd|M|fffd||fffd||fffd||fffd|XON/XOFF|fffd|t|fffd||fffd||fffd|[|fffd||fffd|L|fffd||fffd||fffd||242||fffd||fffd||fffd|
' bit11  fErrorChar
'   |fffd|p|fffd||fffd||fffd|e|fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||241|C|fffd||fffd||fffd||fffd||fffd||fffd|ErrorChar|fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' bit12  fNull
'   |fffd|k|fffd||fffd||fffd||fffd||fffd||fffd||fffd|i|fffd|l|fffd|O|fffd||303|f|fffd|[|fffd|^|fffd|j|fffd||fffd|j|fffd||fffd||fffd||fffd||fffd||fffd|
' bit13,14  fRtsControl
'   2|fffd|r|fffd|b|fffd|g|fffd||fffd|RTS|fffd||303|t|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd|w|fffd||fffd|
Public Const RTS_CONTROL_DISABLE = &H0      'RTS|fffd||fffd|OFF
Public Const RTS_CONTROL_ENABLE = &H1       'RTS|fffd||fffd|ON
Public Const RTS_CONTROL_HANDSHAKE = &H2    'RTS|fffd||242||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N*1
Public Const RTS_CONTROL_TOGGLE = &H3       'RTS|fffd||242||fffd||fffd|n|fffd||fffd||fffd|h|fffd|V|fffd|F|fffd|[|fffd|N*2
'       *1 |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||fffd| 3/4|fffd||20f||3584||fffd||702||fffd||fffd|RTS|fffd||fffd|ON|fffd|C1/2|fffd||209||fffd||fffd||242||202||fffd||fffd|OFF
'       *2 |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||243|f|fffd|[|fffd|^|fffd||fffd||fffd|c|fffd||fffd||fffd||102||fffd||fffd||fffd||fffd|RTS|fffd||fffd|ON|fffd|C|fffd|[|fffd||fffd||fffd||202||fffd||fffd|OFF
' bit15  fAbortOnError
'   |fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||242||353||1c2||74f||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd||fffd|
' bit16  fDummy2
'   |fffd||fffd||fffd|g|fffd|p

'wReserved
'   |fffd||fffd||fffd|g|fffd|p|fffd|B|fffd|[|fffd||fffd||fffd||fffd||fffd|Z|fffd|b|fffd|g|fffd||fffd||fffd||202||fffd||fffd||fffd||382||202||fffd||202||fffd|
'XonLim
'   |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||20f||fffd||242||202||fffd||fffd||fffd||fffd||fffd|XON|fffd||115c2||90a9||fffd||fffd||fffd|w|fffd||fffd|
'XoffLim
'   |fffd||fffd|M|fffd|o|fffd|b|fffd|t|fffd|@|fffd||303|f|fffd|[|fffd|^|fffd||fffd||fffd||fffd||fffd|o|fffd|C|fffd|g|fffd||fffd||fffd||fffd||fffd||242||202||fffd||fffd||fffd||fffd||fffd|XON|fffd||115c2||90a9||fffd||fffd||fffd|w|fffd||fffd|
'ByteSize
'   |fffd|f|fffd|[|fffd|^|fffd||303|r|fffd|b|fffd|g|fffd||fffd|
'Parity
'   |fffd|p|fffd||fffd||fffd|e|fffd|B|fffd||315||fffd||fffd||fffd|
Public Const NOPARITY = 0       '|fffd|p|fffd||fffd||fffd|e|fffd|B|fffd||202||fffd|
Public Const ODDPARITY = 1      '|fffd||f414||fffd|p|fffd||fffd||fffd|e|fffd|B
Public Const EVENPARITY = 2     '|fffd||fffd||fffd||fffd||fffd|p|fffd||fffd||fffd|e|fffd|B
Public Const MARKPARITY = 3     '|fffd||fffd||243|}|fffd|[|fffd|N
Public Const SPACEPARITY = 4    '|fffd||fffd||243|X|fffd|y|fffd|[|fffd|X
'StopBits
'   |fffd|X|fffd|g|fffd|b|fffd|v|fffd|r|fffd|b|fffd|g|fffd||310||fffd|
Public Const ONESTOPBIT = 0     '1 bit
Public Const ONE5STOPBITS = 1   '1.5 bit
Public Const TWOSTOPBITS = 2    '2 bit
'XonChar
'   XON|fffd||311||fffd||fffd|M|fffd||fffd||fffd||fffd|
'XoffChar
'   XOFF|fffd||311||fffd||fffd|M|fffd||fffd||fffd||fffd|
'ErrorChar
'   |fffd|p|fffd||fffd||fffd|e|fffd|B|fffd|G|fffd||fffd||fffd|[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||252|u|fffd||fffd||fffd||fffd||fffd||fffd||fffd||9576||fffd||fffd|
'EofChar
'   |fffd||fffd|o|fffd|C|fffd|i|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||302||182||fffd||fffd||242||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||183|f|fffd|[|fffd|^|fffd|I|fffd||fffd||fffd||fffd||fffd||742||202||fffd|
'   |fffd||fffd||fffd||fffd||fffd||fffd|Win32 API|fffd||142||354||fffd|o|fffd|C|fffd|i|fffd||fffd||fffd||fffd||fffd|[|fffd|h|fffd||fffd||fffd|T|fffd|||fffd|[|fffd|g|fffd||fffd||fffd||202||fffd||fffd||302||156||fffd||fffd||4d6||fffd|
'EvtChar
'   |fffd||fffd||fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd|M|fffd||fffd||fffd||fffd||183|C|fffd|x|fffd||fffd||fffd|g|fffd||fffd||fffd||fffd||fffd||fffd|
'wReserved1
'   |fffd||fffd||fffd|g|fffd|p

'COMMTIMEOUT|fffd|\|fffd||fffd||fffd||fffd|
Type COMMTIMEOUTS
    ReadIntervalTimeout As Long
    ReadTotalTimeoutMultiplier As Long
    ReadTotalTimeoutConstant As Long
    WriteTotalTimeoutMultiplier As Long
    WriteTotalTimeoutConstant As Long
End Type

'COMMTIMEOUTS|fffd|^|fffd||3d0||fffd||fffd||312||fffd|`
Public fCOMMTIMEOUTS As COMMTIMEOUTS


'COMSTAT|fffd|\|fffd||fffd||fffd||302||312||fffd|`
Type COMSTAT
    fBitFields As Long 'See Comment in Win32API.Txt
    cbInQue As Long
    cbOutQue As Long
End Type
' The eight actual COMSTAT bit-sized data fields within the four bytes of fBitFields can be manipulated by bitwise logical And/Or operations.
' FieldName     Bit #     Description
' ---------     -----     ---------------------------
' fCtsHold        1       Tx waiting for CTS signal
' fDsrHold        2       Tx waiting for DSR signal
' fRlsdHold       3       Tx waiting for RLSD signal
' fXoffHold       4       Tx waiting, XOFF char rec'd
' fXoffSent       5       Tx waiting, XOFF char sent
' fEof            6       EOF character sent
' fTxim           7       character waiting for Tx
' fReserved       8       reserved (25 bits)

'COMSTAT|fffd|^|fffd||3d0||fffd||fffd||312||fffd|`
Public fCOMSTAT As COMSTAT

'COMMPROP|fffd|\|fffd||fffd||fffd||302||312||fffd|`
Type COMMPROP
    wPacketLength As Integer
    wPacketVersion As Integer
    dwServiceMask As Long
    dwReserved1 As Long
    dwMaxTxQueue As Long
    dwMaxRxQueue As Long
    dwMaxBaud As Long
    dwProvSubType As Long
    dwProvCapabilities As Long
    dwSettableParams As Long
    dwSettableBaud As Long
    wSettableData As Integer
    wSettableStopParity As Integer
    dwCurrentTxQueue As Long
    dwCurrentRxQueue As Long
    dwProvSpec1 As Long
    dwProvSpec2 As Long
    wcProvChar(1) As Integer
End Type

'COMMPROP|fffd|^|fffd||3d0||fffd||fffd||312||fffd|`
Public fCOMMPROP As COMMPROP

'|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|\|fffd||fffd||fffd||fffd|
Type SYSTEMTIME
    wYear As Integer
    wMonth As Integer
    wDayOfWeek As Integer
    wDay As Integer
    wHour As Integer
    wMinute As Integer
    wSecond As Integer
    wMilliseconds As Integer
End Type

'|fffd||fffd||fffd|[|fffd|J|fffd||fffd||fffd|^|fffd|C|fffd||fffd||fffd|^|fffd||3d0||fffd||fffd||312||fffd|`
Public fSYSTEMTIME As SYSTEMTIME

'  Settable baud rates in the provider.
Public Const BAUD_075 = &H1&
Public Const BAUD_110 = &H2&
Public Const BAUD_134_5 = &H4&
Public Const BAUD_150 = &H8&
Public Const BAUD_300 = &H10&
Public Const BAUD_600 = &H20&
Public Const BAUD_1200 = &H40&
Public Const BAUD_1800 = &H80&
Public Const BAUD_2400 = &H100&
Public Const BAUD_4800 = &H200&
Public Const BAUD_7200 = &H400&
Public Const BAUD_9600 = &H800&
Public Const BAUD_14400 = &H1000&
Public Const BAUD_19200 = &H2000&
Public Const BAUD_38400 = &H4000&
Public Const BAUD_56K = &H8000&
Public Const BAUD_128K = &H10000
Public Const BAUD_115200 = &H20000
Public Const BAUD_57600 = &H40000
Public Const BAUD_USER = &H10000000


'  Provider capabilities flags.
Public Const PCF_DTRDSR = &H1&
Public Const PCF_RTSCTS = &H2&
Public Const PCF_RLSD = &H4&
Public Const PCF_PARITY_CHECK = &H8&
Public Const PCF_XONXOFF = &H10&
Public Const PCF_SETXCHAR = &H20&
Public Const PCF_TOTALTIMEOUTS = &H40&
Public Const PCF_INTTIMEOUTS = &H80&
Public Const PCF_SPECIALCHARS = &H100&
Public Const PCF_16BITMODE = &H200&

'  Comm provider settable parameters.
Public Const SP_PARITY = &H1&
Public Const SP_BAUD = &H2&
Public Const SP_DATABITS = &H4&
Public Const SP_STOPBITS = &H8&
Public Const SP_HANDSHAKING = &H10&
Public Const SP_PARITY_CHECK = &H20&
Public Const SP_RLSD = &H40&

'  Settable Data Bits
Public Const DATABITS_5 = &H1&
Public Const DATABITS_6 = &H2&
Public Const DATABITS_7 = &H4&
Public Const DATABITS_8 = &H8&
Public Const DATABITS_16 = &H10&
Public Const DATABITS_16X = &H20&

'  Settable Stop and Parity bits.
Public Const STOPBITS_10 = &H1&
Public Const STOPBITS_15 = &H2&
Public Const STOPBITS_20 = &H4&
Public Const PARITY_NONE = &H100&
Public Const PARITY_ODD = &H200&
Public Const PARITY_EVEN = &H400&
Public Const PARITY_MARK = &H800&
Public Const PARITY_SPACE = &H1000&




' InQuest injected base64 decoded content
' {-j{
' y:-jT

INQUEST-PP=macro
