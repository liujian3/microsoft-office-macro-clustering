Attribute VB_Name = "LearnMore"
Attribute VB_Base = "0{35843F2E-2B91-494F-BB31-777ADC1053B9}{C91CC1E3-A3E3-44FF-B956-BF66A6F36CA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Activate()




Application.Wait (Now + TimeValue("00:00:03"))

Unload Me

Sheet1.Visible = xlSheetVisible

Sheet1.Activate


End Sub

Attribute VB_Name = "Module1"
Function NumToWord(ByVal N As Currency) As String

' coverting number to rupees

   Const Ten = 10@
   Const Hundred = Ten * Ten
   Const Thousand = Ten * Hundred
   Const Lakh = Thousand * Hundred
   Const Crore = Lakh * Hundred
   Const Million = Thousand * Thousand
   Const Billion = Thousand * Million
   Const Trillion = Thousand * Billion

   If (N = 0@) Then NumToWord = "zero": Exit Function

   Dim Buf As String: If (N < 0@) Then Buf = "negative " Else Buf = ""
   Dim Frac As Currency: Frac = Abs(N - Fix(N))
   If (N < 0@ Or Frac <> 0@) Then N = Abs(Fix(N))
   Dim AtLeastOne As Integer: AtLeastOne = N >= 1

   If (N >= Crore) Then
      Buf = Buf & NumToWordDigitGroup(Int(N / Crore)) & " Crore"
      N = N - Int(N / Crore) * Crore
      If (N >= 1@) Then Buf = Buf & " "
   End If

   If (N >= Lakh) Then
      Buf = Buf & NumToWordDigitGroup(Int(N / Lakh)) & " Lakh"
      N = N - Int(N / Lakh) * Lakh
      If (N >= 1@) Then Buf = Buf & " "
   End If

   If (N >= Thousand) Then
      Buf = Buf & NumToWordDigitGroup(N \ Thousand) & " Thousand"
      N = N Mod Thousand
      If (N >= 1@) Then Buf = Buf & " "
   End If

   If (N >= Hundred) Then
      Buf = Buf & NumToWordDigitGroup(N \ Hundred) & " hundred"
      N = N Mod Hundred
      If (N >= 1@) Then Buf = Buf & " "
   End If

   If (N >= 1@) Then
      Buf = Buf & NumToWordDigitGroup(N)
   End If

   NumToWord = Buf
End Function

Private Function NumToWordDigitGroup(ByVal N As Integer) As String

   Const Hundred = " Hundred"
   Const One = "One"
   Const Two = "Two"
   Const Three = "Three"
   Const Four = "Four"
   Const Five = "Five"
   Const Six = "Six"
   Const Seven = "Seven"
   Const Eight = "Eight"
   Const Nine = "Nine"
   Dim Buf As String: Buf = ""
   Dim Flag As Integer: Flag = False

   Select Case (N \ 100)
      Case 0: Buf = "": Flag = False
      Case 1: Buf = One & Hundred: Flag = True
      Case 2: Buf = Two & Hundred: Flag = True
      Case 3: Buf = Three & Hundred: Flag = True
      Case 4: Buf = Four & Hundred: Flag = True
      Case 5: Buf = Five & Hundred: Flag = True
      Case 6: Buf = Six & Hundred: Flag = True
      Case 7: Buf = Seven & Hundred: Flag = True
      Case 8: Buf = Eight & Hundred: Flag = True
      Case 9: Buf = Nine & Hundred: Flag = True
   End Select

   If (Flag <> False) Then N = N Mod 100
   If (N > 0) Then
      If (Flag <> False) Then Buf = Buf & " "
   Else
      NumToWordDigitGroup = Buf
      Exit Function
   End If

   Select Case (N \ 10)
      Case 0, 1: Flag = False
      Case 2: Buf = Buf & "Twenty": Flag = True
      Case 3: Buf = Buf & "Thirty": Flag = True
      Case 4: Buf = Buf & "Forty": Flag = True
      Case 5: Buf = Buf & "Fifty": Flag = True
      Case 6: Buf = Buf & "Sixty": Flag = True
      Case 7: Buf = Buf & "Seventy": Flag = True
      Case 8: Buf = Buf & "Eighty": Flag = True
      Case 9: Buf = Buf & "Ninety": Flag = True
   End Select

   If (Flag <> False) Then N = N Mod 10
   If (N > 0) Then
      If (Flag <> False) Then Buf = Buf & "-"
   Else
      NumToWordDigitGroup = Buf
      Exit Function
   End If

   Select Case (N)
      Case 0:
      Case 1: Buf = Buf & One
      Case 2: Buf = Buf & Two
      Case 3: Buf = Buf & Three
      Case 4: Buf = Buf & Four
      Case 5: Buf = Buf & Five
      Case 6: Buf = Buf & Six
      Case 7: Buf = Buf & Seven
      Case 8: Buf = Buf & Eight
      Case 9: Buf = Buf & Nine
      Case 10: Buf = Buf & "Ten"
      Case 11: Buf = Buf & "Eleven"
      Case 12: Buf = Buf & "Twelve"
      Case 13: Buf = Buf & "Thirteen"
      Case 14: Buf = Buf & "Fourteen"
      Case 15: Buf = Buf & "Fifteen"
      Case 16: Buf = Buf & "Sixteen"
      Case 17: Buf = Buf & "Seventeen"
      Case 18: Buf = Buf & "Eighteen"
      Case 19: Buf = Buf & "Nineteen"
   End Select

   NumToWordDigitGroup = Buf

    End Function
Attribute VB_Name = "Module2"
Sub invoicesaving()
Dim path As String
Dim path1 As String
Dim file1 As String

If Sheet1.Range("B8").Value = "" Then

MsgBox "PLEASE SELECT PARTY NAME TO PROCEED"

Else



'Transfer values to sales order sheet

lrow = Sheet2.Range("A" & Rows.Count).End(xlUp).Row
lrow = lrow + 1

Sheet2.Cells(lrow, 1).Value = Sheet1.Range("E8").Value
Sheet2.Cells(lrow, 2).Value = Sheet1.Range("E9").Value
Sheet2.Cells(lrow, 3).Value = Sheet1.Range("C10").Value
Sheet2.Cells(lrow, 4).Value = Sheet1.Range("F8").Value
Sheet2.Cells(lrow, 5).Value = Sheet1.Range("F9").Value
Sheet2.Cells(lrow, 6).Value = Sheet1.Range("F10").Value
Sheet2.Cells(lrow, 7).Value = Sheet1.Range("B8").Value
Sheet2.Cells(lrow, 8).Value = Sheet1.Range("A9").Value
Sheet2.Cells(lrow, 9).Value = Sheet1.Range("E11").Value

Sheet2.Cells(lrow, 11).Value = Sheet1.Range("F36").Value



path = "D:\RKSEALS\EDIT INVOICE\"

'ASSIGN INVOICE NUMBER AS FILE NAME
file1 = Sheet1.Range("G8").Value & "-" & Sheet1.Range("B8").Value


Application.DisplayAlerts = False
ActiveWorkbook.SaveAs Filename:=path & file1 & ".xlsm", FileFormat:=xlOpenXMLWorkbookMacroEnabled

' PDF FILE CODE
path1 = "D:\RKSEALS\INVOICE PDF\"
file1 = Sheet1.Range("G8").Value & "-" & Sheet1.Range("B8").Value
Application.DisplayAlerts = False
'ActiveWorkbook.SaveAs Filename:=path & file1 & ".pdf", FileFormat:=xlTypePDF
 ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
        path1 & file1 & ".pdf", Quality:=xlQualityStandard, _
        IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:= _
        True
        



'linking pdf file to sales report sheet
Sheet2.Activate
Sheet2.Cells(lrow, 10).Select
    ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:= _
        path1 & file1 & ".pdf", TextToDisplay:=file1
        
Sheet1.Activate

'REPLACE SOFTWARE SAVE AS FILE
path = "D:\RKSEALS\"
file1 = "RKSEALS INVOICE GENERATOR"

Application.DisplayAlerts = False
ActiveWorkbook.SaveAs Filename:=path & file1 & ".xlsm", FileFormat:=xlOpenXMLWorkbookMacroEnabled

Sheet1.Range("E8").Value = "'" & Sheet1.Range("G8").Value + 1 & "/18-19"
Sheet1.Range("B8").Value = ""
Sheet1.Range("A13:E27").Value = ""
Sheet1.Range("C10").Value = ""
Sheet1.Range("F10").Value = ""
Sheet1.Range("F34").Value = ""
ActiveWorkbook.Save
  




MsgBox "PDF SAVE SUCCESSFULLY"
End If
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CommandButton1_Click()
BusReg.Show


End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
Sheet1.Visible = xlSheetVeryHidden
LearnMore.Show

End Sub


INQUEST-PP=macro
