Attribute VB_Name = "HTML1"




Sub FormatFont()

CallWLL "HTMLFormatFont"

End Sub
Sub mHTMLIncreaseFontSize()

CallWLL "HTMLIncreaseFontSize"

End Sub
Sub mHTMLDecreaseFontSize()

CallWLL "HTMLDecreaseFontSize"

End Sub
Sub FormatBulletsAndNumbering()

CallWLL "HTMLBulletsAndNumbersDlg"

End Sub
Sub mHTMLPreview()

CallWLL "HTMLPreview"

End Sub
Sub FormatBulletDefault()

CallWLL "HTMLBulletsButton"

End Sub
Sub FileProperties()

CallWLL "HTMLTitleBaseDlg"

End Sub
Sub mHTMLViewSource()

CallWLL "HTMLViewSource"

End Sub
Sub FormatPicture()

CallWLL "HTMLFormatPictureDlg"

End Sub
Sub mHTMLHorizontalLine()

CallWLL "HTMLSeparatorLine"

End Sub
Sub TableAutoFormat()

CallWLL "HTMLTableCellsDlg"

End Sub
Sub mHTMLTableProperties()

CallWLL "HTMLTablePropertiesDlg"

End Sub
Sub TableFormatCell()

CallWLL "HTMLTableBordersDlg"

End Sub
Sub InsertPicture()

CallWLL "HTMLInsertPicture"

End Sub
Sub FileSaveAs()

If fCheckAddin Then
    CallWLL "HTMLFileSaveAs"
Else
    Application.Dialogs(wdDialogFileSaveAs).Show
End If

End Sub
Sub FileSave()

If fCheckAddin Then
    CallWLL "HTMLFileSave"
Else
    ActiveDocument.Save
End If

End Sub
Sub FileClose()

If fCheckAddin Then
    CallWLL "HTMLFileClose"
Else
    ActiveDocument.Close
End If

End Sub
Sub DocClose()

If fCheckAddin Then
    CallWLL "HTMLDocClose"
Else
    ActiveWindow.Close
End If

End Sub
Sub mHTMLHorizontalLineDefault()

CallWLL "HTMLSeparatorLineButton"

End Sub
Sub FormatNumberDefault()

CallWLL "HTMLNumberButton"

End Sub
Sub mHTMLSoundEdit()

CallWLL "HTMLSoundEdit"

End Sub
Sub mHTMLSoundStop()

CallWLL "HTMLSoundStop"

End Sub
Sub mHTMLSoundStart()

CallWLL "HTMLSoundStart"

End Sub
Sub mHTMLTextColor()

CallWLL "HTMLTextColorsDlg"

End Sub
Sub mHTMLInsertVideo()

CallWLL "HTMLInsertVideo"

End Sub
Sub mHTMLInsertCheckbox()

CallWLL "HTMLInsertCheckbox"

End Sub
Sub mHTMLInsertHidden()

CallWLL "HTMLInsertHidden"

End Sub
Sub mHTMLInsertPassword()

CallWLL "HTMLInsertPassword"

End Sub
Sub mHTMLInsertRadio()

CallWLL "HTMLInsertRadio"

End Sub
Sub mHTMLInsertTextBox()

CallWLL "HTMLInsertTextBox"

End Sub
Sub mHTMLInsertSubmit()

CallWLL "HTMLInsertSubmit"

End Sub
Sub mHTMLInsertReset()

CallWLL "HTMLInsertReset"

End Sub
Sub mHTMLInsertListBox()

CallWLL "HTMLInsertListbox"

End Sub
Sub mHTMLInsertDropdown()

CallWLL "HTMLInsertDropdown"

End Sub
Sub mHTMLInsertTextArea()

CallWLL "HTMLInsertTextArea"

End Sub
Sub mHTMLInsertImage()

CallWLL "HTMLInsertImage"

End Sub
Sub mHTMLInsertMarquee()

CallWLL "HTMLInsertMarquee"

End Sub
Sub mHTMLBrowseSaveAsPic()

CallWLL "HTMLBrowseSaveAsPic"

End Sub
Sub mHTMLBrowseSaveAsLink()

CallWLL "HTMLBrowseSaveAsLink"

End Sub
Sub mHTMLBrowseOnlinePictures()

CallWLL "HTMLBrowseOnlinePictures"

End Sub
Sub mHTMLBrowseOnlineTemplates()

CallWLL "HTMLBrowseOnlineTemplates"

End Sub
Sub mHTMLTab()

CallWLL "HTMLTab"

End Sub
Sub mHTMLUpdate()

CallWLL "HTMLUpdate"

End Sub
Sub mHTMLPictureAlignLeft()

CallWLL "HTMLPictureAlignLeft"

End Sub
Sub mHTMLPictureAlignNone()

CallWLL "HTMLPictureAlignNone"

End Sub
Sub mHTMLPictureAlignRight()

CallWLL "HTMLPictureAlignRight"

End Sub
Sub mHTMLFileSaveAsDoc()

CallWLL "HTMLFileSaveAsDoc"

End Sub
Sub mHTMLFileNew()

CallWLL "HTMLFileNew"

End Sub

Sub mHTMLHTMLBeep()

   Beep

End Sub

Sub CallWLL(sCommand As String)

If fCheckAddin Then
    Application.Run sCommand
Else
    Beep
End If

End Sub

Function fCheckAddin() As Boolean
    fCheckAddin = False
    For iAddin = 1 To Application.AddIns.Count
        If UCase(Application.AddIns(iAddin).Name) = "HTML.WLL" Then
            If Application.AddIns(iAddin).Installed Then
                fCheckAddin = True
                Exit Function
            End If
        End If
    Next iAddin
End Function
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
