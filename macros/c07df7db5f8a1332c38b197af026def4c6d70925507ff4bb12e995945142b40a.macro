Attribute VB_Name = "Foglio1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Foglio6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Sub Find_LastBANCADATI()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE COGNOME E NOME DEL SOGGETTO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("BANCADATI").Range("F1:F20000")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("NOMINATIVO CONOSCIUTO! - MOSTRO STORICITA'"), vbInformation
                Application.Goto rng, True
            Else
                MsgBox "SCONOSCIUTO - SE HA PRESENTATO 5 RICHIESTE NEGLI ULTIMI 12 MESI INVIARE SEGNALAZIONE STORICITA' A PASCENTRALE ", vbCritical
                
            End If
        End With
    End If
End Sub




Attribute VB_Name = "Module10"
Sub AREARISERVATA()
s = InputBox("INSERIRE PASSWORD PER ACCESSO AREA RISERVATA:", "PORTALE ANTIFRODE PAS - AREA RISERVATA")
If s = "ANTIFRODE" Then


    For i = 5 To 10
        Sheets(i).Visible = True
        ThisWorkbook.Sheets("HOMEPAGEAREARISERVATA").Activate
        Application.ScreenUpdating = False
    Next
Else
    MsgBox "PASSWORD ERRATA", vbCritical
End If
End Sub

Attribute VB_Name = "Module11"
Sub AREARISERVATAindex()
ThisWorkbook.Sheets("HOMEPAGEAREARISERVATA").Activate
End Sub

Attribute VB_Name = "Module12"
Sub inserisciquarante()
 
  Dim Answer As Variant
  Dim NextCell As Range

    Set NextCell = Cells(Rows.Count, "A").End(xlUp)
    If NextCell.row > 1 Then NextCell = NextCell.Offset(1, 0)

    Answer = InputBox("INSERISCI NOME")
    If Answer = "" Then Exit Sub
 
    NextCell = Answer
    End Sub
    
    
Attribute VB_Name = "Module13"
Sub MAILINFORMATIVACIRCOSTANZE()

Dim WorkRng As Range
On Error Resume Next
xTitleId = "INVIA INFORMAZIONE A PASCENTRALE"
Set WorkRng = Application.Selection
Set WorkRng = Application.InputBox("SELEZIONARE CELLA MESSAGGIO DA INVIARE", xTitleId, WorkRng.Address, Type:=8)
Application.ScreenUpdating = False
WorkRng.Select
ActiveWorkbook.EnvelopeVisible = True
With ActiveSheet.MailEnvelope
    .Introduction = "Buongiorno, la presente per segnalare circostanza sospetta relativa a caso gestito. Cordiali saluti"
    .Item.To = "danilo.buscemi@unipolsai.it"
    .Item.Subject = "SEGNALAZIONE CIRCOSTANZE SOSPETTE "
    .Item.Send
End With
Application.ScreenUpdating = False
End Sub

Attribute VB_Name = "Module14"
Sub ESCIAREARISERVATA()
For i = 5 To 10
    Sheets(i).Visible = False
    Next
    Worksheets("HOMEPAGE").Activate
End Sub

Attribute VB_Name = "Module15"
Sub segnalazionireti()
Sheets("BANCADATI").Select
Set rng = ActiveSheet.Range("D:J")
riga = 2
valore = Application.InputBox("", "INSERIRE VALORE DA ESTRARRE", "")
If valore <> False Then
  valore = UCase(valore)
  For Each cell In rng.Cells
    If cell.Value = valore Then
      Rows(cell.row).Select
      Selection.Copy
      Sheets("AREALAVOROMINIERA").Select
      Rows(riga).Select
      ActiveSheet.Paste
      Sheets("BANCADATI").Select
      riga = riga + 1
      Application.ScreenUpdating = False
      Worksheets("AREALAVOROMINIERA").Activate
    End If
  Next
End If
End Sub

Attribute VB_Name = "Module16"
Sub faseUNO()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE COGNOME E NOME DEL SOGGETTO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("CONTATTIDAVERIFICARE").Range("A:C")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("NOMINATIVO PRESENTE TRA CONTATTI DA VERIFICARE! - SE PRESENTATA NUOVA RICHIESTA AGGIORNARE LA STORICITA' E CLICCARE INVIARE SEGNALAZIONE PAS CENTRALE - MOSTRO DETTAGLIO"), vbExclamation
                Application.Goto rng, True
            Else
            
              With Sheets("BANCADATI").Range("E:F")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("NOMINATIVO CONOSCIUTO! - MOSTRO STORICITA'"), vbInformation
                Application.Goto rng, True
            Else
                MsgBox "SCONOSCIUTO - PROSEGUIRE RICERCA CON NUMERO TELEFONO ", vbCritical
                Call faseTRE
                
            End If
        End With
        End If
      End With
      End If
         End Sub

Attribute VB_Name = "Module17"
Sub faseDUE()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE COGNOME E NOME DEL SOGGETTO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("BANCADATI").Range("E:F")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("NOMINATIVO CONOSCIUTO! - MOSTRO STORICITA'"), vbInformation
                Application.Goto rng, True
            Else
                MsgBox "SCONOSCIUTO - PROSEGUIRE RICERCA CON NUMERO TELEFONO ", vbCritical
                Call faseTRE

            End If
        End With
    End If
End Sub

Attribute VB_Name = "Module18"
Sub faseTRE()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE NUMERO TELEFONO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("CONTATTIDAVERIFICARE").Range("A:Z")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA IN CONTATTI DA VERIFICARE - MOSTRO DETTAGLIO"), vbExclamation
                Application.Goto rng, True
            Else
            
               With Sheets("BANCADATI").Range("A:Z")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA IN BANCA DATI - MOSTRO DETTAGLIO"), vbInformation
                Application.Goto rng, True
            Else
                MsgBox "NUMERO NON PRESENTE IN BANCA DATI - PROSEGUIRE RICERCA CON TARGA", vbCritical
               Call faseCINQUE
                              
             End If
        End With
        End If
      End With
      End If
         End Sub
Attribute VB_Name = "Module19"
Sub faseQUATTRO()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE NUMERO TELEFONO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("BANCADATI").Range("A:Z")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA IN BANCA DATI - MOSTRO DETTAGLIO"), vbInformation
                Application.Goto rng, True
            Else
                MsgBox "NUMERO NON PRESENTE IN BANCA DATI"
               Call faseCINQUE
                              
            End If
        End With
    End If
End Sub

Attribute VB_Name = "Module2"
Sub Find_LastNUMBERBANCADATI()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE NUMERO TELEFONO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("BANCADATI").Range("A:Z")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA IN BANCA DATI - MOSTRO DETTAGLIO"), vbInformation
                Application.Goto rng, True
            Else
                MsgBox "NUMERO NON PRESENTE IN BANCA DATI"
               
                              
            End If
        End With
    End If
End Sub
Attribute VB_Name = "Module20"
Sub faseCINQUE()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE TARGA DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("CONTATTIDAVERIFICARE").Range("G:I")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA CON TARGA IN CONTATTI DA VERIFICARE - MOSTRO DETTAGLIO"), vbInformation
                Application.Goto rng, True
            Else
               With Sheets("BANCADATI").Range("D:E")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA TRA TARGHE IN BANCA DATI - MOSTRO DETTAGLIO"), vbExclamation
                Application.Goto rng, True
            Else
                MsgBox "TARGA NON PRESENTE - VALUTARE ALTRE RICERCHE O CENSIMENTO SOGGETTO", vbCritical
                              
            End If
        End With
        End If
      End With
      End If
         End Sub
Attribute VB_Name = "Module21"
Sub faseSEI()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE TARGA DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("BANCADATI").Range("D:E")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA TRA TARGHE DI BANCA DATI - MOSTRO DETTAGLIO"), vbInformation
                Application.Goto rng, True
            Else
                MsgBox "TARGA NON PRESENTE - CONSULTARE TL PER VALUTARE SE SE ALTRE RICERCHE", vbCritical
               
                              
            End If
        End With
    End If
End Sub

Attribute VB_Name = "Module22"
Sub AREACONSULTAZIONEEXTRACO()
s = InputBox("INSERIRE PASSWORD PER ACCESSO AREA CONSULTAZIONE:", "PORTALE ANTIFRODE PAS - AREA RISERVATA")
If s = "ANTIFRODE" Then


    For i = 12 To 13
        Sheets(i).Visible = True
        ThisWorkbook.Sheets("HOMEPAGEEXTRACO").Activate
        Application.ScreenUpdating = False
    Next
Else
    MsgBox "PASSWORD ERRATA", vbCritical
End If
End Sub


Attribute VB_Name = "Module23"
Sub ESCIAREACONSULTAZIONE()
For i = 12 To 13
    Sheets(i).Visible = False
    Next
    Worksheets("HOMEPAGE").Activate
End Sub
Attribute VB_Name = "Module24"
Sub ESTRAZIONICONSULTAZIONE()
Sheets("BANCADATI").Select
Set rng = ActiveSheet.Range("J1:J100000")
riga = 2
valore = Application.InputBox("", "INSERIRE RENTER DA ESTRARRE", "")
If valore <> False Then
  valore = UCase(valore)
  For Each cell In rng.Cells
    If cell.Value = valore Then
      Rows(cell.row).Select
      Selection.Copy
      Sheets("ESTRAZIONIEXTRACO").Select
      Rows(riga).Select
      ActiveSheet.Paste
      Sheets("BANCADATI").Select
      riga = riga + 1
      Application.ScreenUpdating = False
      Worksheets("ESTRAZIONIEXTRACO").Activate
    End If
  Next
End If
End Sub

Attribute VB_Name = "Module3"
Sub IMPORTAESTRAZIONE()


Dim customerBook As Workbook
Dim filter As String
Dim caption As String
Dim customerFilename As String
Dim customerWorkbook As Workbook
Dim targetWorkbook As Workbook

' make weak assumption that active workbook is the target
Set targetWorkbook = Application.ActiveWorkbook

' get the customer workbook
filter = "Text files (*.xlsx),*.xlsx"
caption = "PORTALE ANTIFRODE - SELEZIONARE FILE ESTRAZIONI "
customerFilename = Application.GetOpenFilename(filter, , caption)

Set customerWorkbook = Application.Workbooks.Open(customerFilename)

' assume range is A1 - C10 in sheet1
' copy data from customer to target workbook
Dim targetSheet As Worksheet
Set targetSheet = targetWorkbook.Worksheets(7)
Dim sourceSheet As Worksheet
Set sourceSheet = customerWorkbook.Worksheets(1)

targetSheet.Range("A1", "Z1000").Value = sourceSheet.Range("A1", "Z1000").Value

' Close customer workbook
customerWorkbook.Close

End Sub

Attribute VB_Name = "Module4"
Sub Find_LastBLACKLIST()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE COGNOME E NOME DEL SOGGETTO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("CONTATTIDAVERIFICARE").Range("A1:A20000")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("NOMINATIVO PRESENTE TRA CONTATTI DA VERIFICARE! - SE PRESENTATA NUOVA RICHIESTA AGGIORNARE LA STORICITA' E CLICCARE INVIARE SEGNALAZIONE PAS CENTRALE - MOSTRO DETTAGLIO"), vbExclamation
                Application.Goto rng, True
            Else
                MsgBox "NOMINATIVO NON PRESENTE TRA CONTATTI DA VERIFICARE - VERIFICARE SE PRESENTE IN DATA BANCA "
                Call Find_LastBANCADATI
                
            End If
        End With
    End If
End Sub


Attribute VB_Name = "Module5"
Sub Find_LastNUMBERBLACKLIST()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE NUMERO TELEFONO DA VERIFICARE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("CONTATTIDAVERIFICARE").Range("A:Z")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("TROVATA CORRISPONDENZA - MOSTRO DETTAGLIO"), vbExclamation
                Application.Goto rng, True
            Else
                MsgBox "NUMERO NON PRESENTE - VERIFICARE IN BANCA DATI STORICITA'"
                Call Find_LastNUMBERBANCADATI
                              
            End If
        End With
    End If
End Sub

Attribute VB_Name = "Module6"
Sub CONTROLLIROUTINE()

    Dim rngFoglio4 As Range
    Dim row As Range
    Dim cell As Range
    
    Dim Results As Range
    
    
    Dim valIndex As Double
    
    Dim colA() As String
    Dim colB() As String

    Set rngFoglio3 = Sheets(6).Range("A1:A1000")
    
    Dim tabellaricerca As Range
    Set tabellaricerca = Sheets(7).Range("A1:Z1000")
   
    valIndex = 0
     
    For Each row In rngFoglio3.Rows
        For Each cell In row.Cells
            
            Dim resp As String
            
            
            resp = CercaVert(cell.Value, 2, tabellaricerca)
            
            If resp <> "" Then
    
                ReDim Preserve colA(valIndex)
                
                ReDim Preserve colB(valIndex)
                
                colA(valIndex) = cell.Value
                
                colB(valIndex) = resp
                
              valIndex = valIndex + 1
                
            End If
            

        Next cell
    Next row
    
    Dim ws As Worksheet

     Set ws = Sheets.Add(After:=Sheets(Worksheets.Count))
     ws.Name = "Res_" + Format(Now, "YYYYMMDDhh24miss")
     
   For i = 0 To valIndex - 1
   
        ws.Cells(i + 1, 1).Value = colA(i)
        ws.Cells(i + 1, 2).Value = colB(i)
   
   
   
    Next
   
   
   
    
    

End Sub


Function CercaVert(A, col As Integer, r As Range)
    
    
    On Error Resume Next
    
    
    
    CercaVert = Application.WorksheetFunction.VLookup(A, r, col, False)
    
    
    
End Function

Attribute VB_Name = "Module7"
Sub IMPORTESTRAZIONE()

Dim customerBook As Workbook
Dim filter As String
Dim caption As String
Dim customerFilename As String
Dim customerWorkbook As Workbook
Dim targetWorkbook As Workbook

' make weak assumption that active workbook is the target
Set targetWorkbook = Application.ActiveWorkbook

' get the customer workbook
filter = "Text files (*.xlsx),*.xlsx"
caption = "PORTALE ANTIFRODE - SELEZIONARE FILE ESTRAZIONI "
customerFilename = Application.GetOpenFilename(filter, , caption)

Set customerWorkbook = Application.Workbooks.Open(customerFilename)

' assume range is A1 - C10 in sheet1
' copy data from customer to target workbook
Dim targetSheet As Worksheet
Set targetSheet = targetWorkbook.Worksheets(5)
Dim sourceSheet As Worksheet
Set sourceSheet = customerWorkbook.Worksheets(1)

targetSheet.Range("A1", "Z1000").Value = sourceSheet.Range("A1", "Z1000").Value

' Close customer workbook
customerWorkbook.Close

End Sub
Attribute VB_Name = "Module8"
Sub index()
ThisWorkbook.Sheets("HOMEPAGE").Activate
End Sub
Attribute VB_Name = "Module9"
Sub lastupdate()
    MsgBox "ULTIMO INSERIMENTO BLACKLIST - 02/11/19 - SOGGETTI IN BLACKLIST: 109"
End Sub

Attribute VB_Name = "Modulo11"
Sub MAILINFORMATIVACIRCOSTANZE()

Dim WorkRng As Range
On Error Resume Next
xTitleId = "INVIA INFORMAZIONE A PASCENTRALE"
Set WorkRng = Application.Selection
Set WorkRng = Application.InputBox("SELEZIONARE CELLA MESSAGGIO DA INVIARE", xTitleId, WorkRng.Address, Type:=8)
Application.ScreenUpdating = False
WorkRng.Select
ActiveWorkbook.EnvelopeVisible = True
With ActiveSheet.MailEnvelope
    .Introduction = "Buongiorno, la presente per segnalare circostanza sospetta relativa a caso gestito. Cordiali saluti"
    .Item.To = "danilo.buscemi@unipolsai.it"
    .Item.Subject = "SEGNALAZIONE CIRCOSTANZE SOSPETTE "
    .Item.Send
End With
Application.ScreenUpdating = False
End Sub
Attribute VB_Name = "Modulo12"
Sub GOOGLE()
Dim chromePath As String
Dim search_string As String
Dim query As String
query = InputBox("COSA VUOI CERCARE?", "CERCA SU GOOGLE")
search_string = query
search_string = Replace(search_string, " ", "+")

chromePath = "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"

chromePath = "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
Shell (chromePath & " -url http://google.com/#q=" & search_string)
End Sub
Attribute VB_Name = "Modulo13"
Sub EVIDENZIA()
Dim rng As Range
Dim i As Integer
Dim c As Variant
c = InputBox("VALORE DA CERCARE IN BANCA DATI")
For Each rng In ActiveSheet.UsedRange
If rng = c Then
i = i + 1
End If
Next rng
MsgBox "CI SONO IN TUTTO " & i & " " & c & " IN BANCA DATI"
End Sub
Attribute VB_Name = "Modulo14"
Sub lastupdateBANCADATI()
    MsgBox "ULTIMO AGGIORNAMENTO BANCA DATI: 02/11/19"
End Sub

Attribute VB_Name = "Modulo15"
Sub exitfullscreen()
  Dim Answer As Integer
  Answer = MsgBox("USCIRE DA MODALITA' SCHERMO INTERO?", vbQuestion + vbYesNo)
 
  If Answer = vbNo Then Exit Sub
Application.DisplayFullScreen = False
End Sub

Attribute VB_Name = "Modulo16"
Sub BANCADATI()
ThisWorkbook.Sheets("BANCADATI").Activate
End Sub

Attribute VB_Name = "Modulo19"
Sub NICOSIA()
  MsgBox "NOMINATIVO BLACKLIST - inviato pi|fffd| volte accertatore e mezzi non trovati oppure trovati ma non in riparazione - titolare di officina richiede noleggi a suo nome o nome clienti - DIREZIONE AUTO HA DISPOSTO NO VEICOLO SOSTITUTIVO SE NON EROGATO TRAINO ", vbInformation
End Sub

Attribute VB_Name = "Modulo2"

Public Sub LevaRighe()

  Dim wb As Workbook
  Dim ws As Worksheet
  Dim rng As Range
  Dim bCalc As XlCalculation
  Dim nFirst As Long
  Dim nLast As Long
  Dim sInt As String
  Dim bOK As VbMsgBoxResult

  On Error GoTo LevaRighe_Error

  Set wb = ThisWorkbook
  Set ws = wb.ActiveSheet

  If Selection.Rows.Count > 1 Then _
    sInt = Selection.Address(False, False)

  sInt = InputBox("INSERIRE RIGHE DA ELIMINARE" & vbCrLf & _
            "CANCELLARE DA A (p.e. 2:1000): ", "INTERVALLO", sInt)

  If sInt = "" Then GoTo LevaRighe_Error

  Set rng = ws.Range(sInt)
  If rng Is Nothing Then
    MsgBox "INTERVALLO ILLEGALE", vbCritical
    GoTo LevaRighe_Error
  End If

  nFirst = rng.row
  nLast = nFirst + rng.Rows.Count - 1

  bOK = MsgBox("ELIMINO DALLA RIGA " & nFirst & " alla riga " & _
    nLast & vbCrLf & vbCrLf & "CONFERMI?", _
    vbQuestion + vbYesNo, "ELIMINA RIGHE")

  If bOK = vbYes Then
    rng.EntireRow.Delete
    MsgBox "FOGLIO RESETTATO", vbExclamation, "ELIMINA RIGHE"
  End If

  On Error GoTo 0

LevaRighe_Error:
  If Err.Number <> 0 Then
    MsgBox "INTERVALLO ILLEGALE", vbCritical
  End If

  Set rng = Nothing
  Set ws = Nothing
  Set wb = Nothing

End Sub


Attribute VB_Name = "Modulo20"
Sub PORCOBIAGIO()
  MsgBox "NOMINATIVO QUARANTENA - inviato pi|fffd| volte accertatore e mezzi trovati in riparazione - titolare di ditte con parchi mezzi grandi, richiede tutti i noleggi a suo nome cedendoli poi ai dipendenti - CHIEDERE SE INSERIRE SECONDA GUIDA ", vbInformation
End Sub

Attribute VB_Name = "Modulo21"
Sub CONTATTIDAVERIFICARE()
ThisWorkbook.Sheets("CONTATTIDAVERIFICARE").Activate
End Sub
Attribute VB_Name = "Modulo22"
Sub QUIT()
Application.QUIT
End Sub

Attribute VB_Name = "Modulo23"
Sub ARDEA()
  MsgBox "NOMINATIVO BLACKLIST - BANDA ARDEA - inviato pi|fffd| volte accertatore e mezzi non trovati. Ricevuti ct da officine inesistenti - Erogato vhsost a seguito traino dopo aver fatto ct con altra persona della banda . Caso in carico all'antifrode - RICHIEDERE CT SCRITTO ANCHE SE EROGATO TRAINO - SE CONTRAENTE DIVERSO DA BENEFICIARIO CERCARE DI RISALIRE A CONTRAENTE PER VERIFICHE - DIREZIONE AUTO HA DISPOSTO NO VEICOLO SOSTITUTIVO SE NO TRAINO - DIREZIONE AUTO HA DISPOSTO NO ASSISTENZA PER DE CUBELLIS RODOLFO ", vbInformation
End Sub
Attribute VB_Name = "Modulo3"
Sub Find_DOX()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE NOMINATIVO RELAZIONE ACCERTATORE:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("BANCADATI").Range("M1:M20000")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("REPORT TROVATI! - MOSTRO DETTAGLIO")
                Application.Goto rng, True
            Else
                MsgBox "REPORT NON DISPONIBILI "
            End If
        End With
    End If
End Sub


Attribute VB_Name = "Modulo4"
Sub MAILPASCENTRALE()

Dim WorkRng As Range
On Error Resume Next
xTitleId = "INVIA MAIL A PASCENTRALE"
Set WorkRng = Application.Selection
Set WorkRng = Application.InputBox("SELEZIONARE STORICITA' DA INVIARE", xTitleId, WorkRng.Address, Type:=8)
Application.ScreenUpdating = False
WorkRng.Select
ActiveWorkbook.EnvelopeVisible = True
With ActiveSheet.MailEnvelope
    .Introduction = "Buongiorno, invio storicita' per valutare richiesta da nominativo gia' presente in banca dati. Cordiali saluti"
    .Item.To = "danilo.buscemi@unipolsai.it"
    .Item.Subject = "STORICITA' PER RICHIESTA DA VALUTARE "
    .Item.Send
End With
Application.ScreenUpdating = False
End Sub

Attribute VB_Name = "Modulo5"
Sub MAILSEGNALAZIONEDAPROVA()

s = InputBox("INSERIRE PASSWORD AUTORIZZAZIONE PER OPERAZIONE:", "PORTALE ANTIFRODE PAS - RISERVATO TL")
If s = "ANTIFRODE" Then

Dim WorkRng As Range
On Error Resume Next
xTitleId = "INVIA MAIL A DIREZIONE AUTO"
Set WorkRng = Application.Selection
Set WorkRng = Application.InputBox("SELEZIONARE STORICITA' DA INVIARE", xTitleId, WorkRng.Address, Type:=8)
Application.ScreenUpdating = False
WorkRng.Select
ActiveWorkbook.EnvelopeVisible = True
With ActiveSheet.MailEnvelope
    .Introduction = "Buongiorno, a seguito di un'attenta verifica, la Centrale Operativa ha riscontrato diverse anomalie che riguardano l'assicurato in oggetto. Di seguito la storicita'. Per questo cliente non abbiamo speso somme tali da interessare un intervento o le circostanze non lo richiedono. Chiediamo per|fffd| di autorizzarci ad erogare veicolo sostitutivo solo a seguito di traino erogato dalla nostra Centrale. Restiamo a disposzione e in attesa Cordiali saluti"
    .Item.To = "danilo.buscemi@unipolsai.it"
    .Item.Subject = "CLIENTE ACCERTATO - RICHIESTA AUTORIZZAZIONE DISPOSIZIONE"
    .Item.Send
End With
Application.ScreenUpdating = False
End If
End Sub

Attribute VB_Name = "Modulo6"
Sub TROVAQUALSIASI()
    Dim FindString As String
    Dim rng As Range
    FindString = InputBox("INSERIRE VALORE DA RICERCARE")
    If Trim(FindString) <> "" Then
        With Sheets("CONTATTIDAVERIFICARE").Range("A:Z")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
                Application.Goto rng, True
            Else
                MsgBox "NON TROVATO"
            End If
        End With
    End If
End Sub
Attribute VB_Name = "Modulo7"
Sub TROVAQUALSIASIBANCADATI()
    Dim FindString As String
    Dim rng As Range
    FindString = Application.InputBox("INSERIRE VALORE DA RICERCA (NOMINATIVO, TELEFONO, TARGA:", "INTERROGAZIONE BANCA DATI ANTIFRODE PAS", , , , , 2)
    If Trim(FindString) <> "" Then
        With Sheets("BANCADATI").Range("A:Z")
            Set rng = .Find(What:=FindString, _
                            After:=.Cells(1), _
                            LookIn:=xlValues, _
                            LookAt:=xlWhole, _
                            SearchOrder:=xlByRows, _
                            SearchDirection:=xlPrevious, _
                            MatchCase:=False)
            If Not rng Is Nothing Then
            MsgBox ("CORRISPONDENZA TROVATA! - MOSTRO VALORE")
                Application.Goto rng, True
            Else
                MsgBox "NESSUNA CORRISPONDENZA TROVATA"
            End If
        End With
    End If
End Sub

Attribute VB_Name = "Modulo8"
Sub GetFromOutlook()

Dim OutlookApp As Outlook.Application
Dim OutlookNamespace As Namespace
Dim Folder As MAPIFolder
Dim OutlookMail As Variant
Dim i As Integer

Set OutlookApp = New Outlook.Application
Set OutlookNamespace = OutlookApp.GetNamespace("MAPI")
Set Folder = OutlookNamespace.GetDefaultFolder(olFolderInbox).Folders("ANTIFRODE").Folders("DIREZIONE AUTO")

i = 1

For Each OutlookMail In Folder.Items
    If OutlookMail.ReceivedTime >= Range("From_date").Value Then
        Range("eMail_subject").Offset(i, 0).Value = OutlookMail.Subject
        Range("eMail_date").Offset(i, 0).Value = OutlookMail.ReceivedTime
        Range("eMail_sender").Offset(i, 0).Value = OutlookMail.SenderName
        Range("eMail_text").Offset(i, 0).Value = OutlookMail.Body
        
        i = i + 1
    End If
Next OutlookMail

Set Folder = Nothing
Set OutlookNamespace = Nothing
Set OutlookApp = Nothing

End Sub
Attribute VB_Name = "Modulo9"
Sub MAILFILESTORICITA()

Dim WorkRng As Range
On Error Resume Next
xTitleId = "INVIA NUOVO FILE STORICITA' A PASCENTRALE"
Set WorkRng = Application.Selection
Set WorkRng = Application.InputBox("SELEZIONARE STORICITA' DA INVIARE", xTitleId, WorkRng.Address, Type:=8)
Application.ScreenUpdating = False
WorkRng.Select
ActiveWorkbook.EnvelopeVisible = True
With ActiveSheet.MailEnvelope
    .Introduction = "Buongiorno, invio file storicita' di nominativo non presente in banca dati. Cordiali saluti"
    .Item.To = "danilo.buscemi@unipolsai.it"
    .Item.Subject = "NUOVO FILE STORICITA' PER BANCA DATI "
    .Item.Send
End With
Application.ScreenUpdating = False
End Sub

Attribute VB_Name = "Questa_cartella_di_lavoro"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub Workbook_Open()
    Application.DisplayFullScreen = True
    MsgBox "----ESEMPIO----18/11/19 TL RIFERIMENTO SUPPORTO ANTIFRODE 08.00-12.00 FEMA 12.00-16.00 LUDA - ultimo aggiornamento banca dati 01/11/19 - mail pas.centrale@unipolsai.it", vbInformation
    Worksheets("HOMEPAGE").Activate
    Worksheets(1).ScrollArea = "A1:N34"
    Worksheets(5).ScrollArea = "A1:N34"
    Worksheets(12).ScrollArea = "A1:N34"
    For i = 5 To 13
    Sheets(i).Visible = False
    Next
    Application.StatusBar = "SISTEMA PRONTO - ULTIMO AGGIORNAMENTO 02/11/19 - TL RIFERIMENTO PER SETTIMANA CORRENTE FEMA 011778812052"
End Sub



Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean _
                              , ByRef Cancel As Boolean)
    If SaveAsUI Then
      Cancel = True
      MsgBox "OPERATORE NON ABILITATO A MODIFICARE PERMANENTEMENTE IL FILE." _
           , vbOKOnly Or vbInformation _
           , "Salva con nome"
    End If
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    ThisWorkbook.Saved = True
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub HideInactiveExcelWorkbooks()
    Application.ScreenUpdating = False
    Dim aWin As Window
    Set aWin = ActiveWindow
    Dim win As Window
    For Each win In Application.Windows
        win.Visible = False
    Next win
    aWin.Visible = True
    Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{DD4BA801-D0EA-4F89-9BE6-EC1793A474ED}{8911793E-AC8A-46C5-8EB1-A917AB3E6CBD}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

' InQuest injected base64 decoded content
' '^"v

INQUEST-PP=macro
