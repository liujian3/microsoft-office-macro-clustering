Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 40, 11, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 46, 17, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 47, 18, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 48, 19, MSForms, CommandButton"
Option Explicit

Dim suppPartNbrColSortFlag As Integer
Dim suppEDPEidColSortFlag As Integer
Dim suppPartDscColSortFlag As Integer
Dim suppPartUMColSortFlag As Integer
Dim suppUpdtPartNbrColSortFlag As Integer
Dim suppAvailColSortFlag As Integer
Dim suppCmntColSortFlag As Integer

Dim suppPartDscColNbr As Integer
Dim suppPartUMColNbr As Integer
Dim suppUpdtPartNbrColNbr As Integer
Dim suppAvailColNbr As Integer
Dim suppCmntColNbr As Integer

Dim strtRowPosnNbr As Integer
Dim strtColPosnNbr As Integer

Dim endRowPosnNbr As Integer
Dim endColPosnNbr As Integer

Dim mMyPassword As String
Dim strtCellLoc As String

Dim vldRng As Range
Dim mIgnoreEvnt As Boolean

Private Sub CommandButton1_Click()
    If suppPartNbrColSortFlag = 0 Then
        SortSuppPartNbrColDescending
        suppPartNbrColSortFlag = 1
    Else
        SortSuppPartNbrColAscending
        suppPartNbrColSortFlag = 0
    End If
        Range("B14").Select
End Sub

Private Sub CommandButton2_Click()
    If suppEDPEidColSortFlag = 0 Then
        SortSuppEDPEidColDescending
            suppEDPEidColSortFlag = 1
    Else
        SortSuppEDPEidColAscending
            suppEDPEidColSortFlag = 0
    End If
        Range("B14").Select
End Sub

Private Sub CommandButton3_Click()
    If suppPartDscColSortFlag = 0 Then
        SortSuppPartDscColDescending
        suppPartDscColSortFlag = 1
    Else
        SortSuppPartDscColAscending
        suppPartDscColSortFlag = 0
    End If
        Range("B14").Select
End Sub

Private Sub CommandButton4_Click()
    If suppPartUMColSortFlag = 0 Then
        SortSuppPartUMColDescending
        suppPartUMColSortFlag = 1
    Else
        SortSuppPartUMColAscending
        suppPartUMColSortFlag = 0
    End If
        Range("B14").Select
End Sub

Private Sub SortSuppPartNbrColAscending()
    
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count
    strtCellLoc = "A25"
    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppPartNbrColDescending()
    
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count
    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    strtCellLoc = "A25"
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword

End Sub

Private Sub SortSuppEDPEidColAscending()
    
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    
    Dim vldPrceRowCnt As Integer
    
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count
    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    strtCellLoc = "B25"
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppEDPEidColDescending()
    
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count
    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    strtCellLoc = "B25"
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppPartDscColAscending()

    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppPartDscColNbr = Worksheets("Price_Request").Application.Match("dsc", Range("20:20"), 0)
    strtCellLoc = Letter(suppPartDscColNbr) & strtRowPosnNbr
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlAscending, Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppPartDscColDescending()
    
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppPartDscColNbr = Worksheets("Price_Request").Application.Match("dsc", Range("20:20"), 0)
    strtCellLoc = Letter(suppPartDscColNbr) & strtRowPosnNbr
        
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppPartUMColAscending()

    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppPartUMColNbr = Worksheets("Price_Request").Application.Match("UM1", Range("20:20"), 0)
    strtCellLoc = Letter(suppPartUMColNbr) & strtRowPosnNbr
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppPartUMColDescending()
    
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppPartUMColNbr = Worksheets("Price_Request").Application.Match("UM1", Range("20:20"), 0)
    strtCellLoc = Letter(suppPartUMColNbr) & strtRowPosnNbr
        
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppUpdtPartNbrColAscending()

    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppUpdtPartNbrColNbr = Worksheets("Price_Request").Application.Match("updtPartNbr", Range("20:20"), 0)
    strtCellLoc = Letter(suppUpdtPartNbrColNbr) & strtRowPosnNbr
      
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppUpdtPartNbrColDescending()
   
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppUpdtPartNbrColNbr = Worksheets("Price_Request").Application.Match("updtPartNbr", Range("20:20"), 0)
    strtCellLoc = Letter(suppUpdtPartNbrColNbr) & strtRowPosnNbr
     
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppAvailColAscending()

    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppAvailColNbr = Worksheets("Price_Request").Application.Match("avail", Range("20:20"), 0)
    strtCellLoc = Letter(suppAvailColNbr) & strtRowPosnNbr
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppAvailColDescending()
    
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppAvailColNbr = Worksheets("Price_Request").Application.Match("avail", Range("20:20"), 0)
    strtCellLoc = Letter(suppAvailColNbr) & strtRowPosnNbr
 
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub
    
Private Sub SortSuppCmntColAscending()

    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    Dim vldPrceRowCnt As Integer
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count

    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppCmntColNbr = Worksheets("Price_Request").Application.Match("cmnts", Range("20:20"), 0)
    strtCellLoc = Letter(suppCmntColNbr) & strtRowPosnNbr
    
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlAscending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Sub SortSuppCmntColDescending()
   
    mMyPassword = "m@CeCarr"

    suppPartNbrColSortFlag = 0
    suppEDPEidColSortFlag = 0
    suppPartDscColSortFlag = 0
    suppPartUMColSortFlag = 0
    suppUpdtPartNbrColSortFlag = 0
    suppAvailColSortFlag = 0
    suppCmntColSortFlag = 0
    strtRowPosnNbr = 25
    strtColPosnNbr = 1
    
    Dim vldPrceRowCnt As Integer
    
    vldPrceRowCnt = Range("ID25", Range("ID25").End(xlDown)).Rows.Count
    endRowPosnNbr = vldPrceRowCnt + 24
    endColPosnNbr = 239
    suppCmntColNbr = Worksheets("Price_Request").Application.Match("cmnts", Range("20:20"), 0)
    strtCellLoc = Letter(suppCmntColNbr) & strtRowPosnNbr
         
    Worksheets("Price_Request").Activate
    Worksheets("Price_Request").Unprotect Password:=mMyPassword
    Range(Cells(strtRowPosnNbr, strtColPosnNbr), Cells(endRowPosnNbr, endColPosnNbr)).Select
    Range(strtCellLoc).Activate
    Selection.Sort Key1:=Range(strtCellLoc), Order1:=xlDescending, Header:=xlGuess, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Worksheets("Price_Request").Protect Password:=mMyPassword
    
End Sub

Private Function Letter(myInput As Integer) As String

   Dim output As String
   
Select Case myInput
Case 1
    Letter = "A"
Case 2
    Letter = "B"
Case 3
    Letter = "C"
Case 4
    Letter = "D"
Case 5
    Letter = "E"
Case 6
    Letter = "F"
Case 7
    Letter = "G"
Case 8
    Letter = "H"
Case 9
    Letter = "I"
Case 10
    Letter = "J"
Case 11
    Letter = "K"
Case 12
    Letter = "L"
Case 13
    Letter = "M"
Case 14
    Letter = "N"
Case 15
    Letter = "O"
Case 16
    Letter = "P"
Case 17
    Letter = "Q"
Case 18
    Letter = "R"
Case 19
    Letter = "S"
Case 20
    Letter = "T"
Case 21
    Letter = "U"
Case 22
    Letter = "V"
Case 23
    Letter = "W"
Case 24
    Letter = "X"
Case 25
    Letter = "Y"
Case 26
    Letter = "Z"
Case 27
    Letter = "AA"
Case 28
    Letter = "AB"
Case 29
    Letter = "AC"
Case 30
    Letter = "AD"
End Select
 
End Function
''' -----------------------------------------------------------------------------
''' <summary>
'''     Update the global variable used to ignore events.  This was needed to
'''     ignore the Worksheet_Change event processing when we are creating the
'''     spreadsheet.
''' </summary>
''' <param name="inpState">TRUE or FALSE</param>
''' -----------------------------------------------------------------------------

Private Sub setIgnoreEvnt(ByVal inpState As Boolean)
    mIgnoreEvnt = inpState
End Sub
''' -----------------------------------------------------------------------------
''' <summary>
'''     React to changes to the worksheet.  The primary focus of this
'''     section is to calculate the net price, and to manage comments
'''     for large price changes.
''' </summary>
''' <param name="Target">
'''     The area of the worksheet being modified.
''' </param>
''' <history>
'''     [Brian Coker]   02/07/2008  Created
''' </history>
''' -----------------------------------------------------------------------------
Private Sub Worksheet_Change(ByVal Target As Range)

    'If we are reclculating cells we will generate a Worksheet_Change
    'event for each cell we are changing.  Skip messages while recalculating.
    If mIgnoreEvnt Then Exit Sub

    ' Constant Declarations
    Dim FRST_CST_ROW As Integer: FRST_CST_ROW = 24
    Dim NMS_ROW_IDX As Integer: NMS_ROW_IDX = 20
    
    'Work variables
    Dim colNm As String
    Dim rowIdx As Integer
    
    If Target.Row > FRST_CST_ROW Then

        colNm = Cells(NMS_ROW_IDX, Target.Column)
        'If the changing column name starts with
        '"newNet" or equals "cmnts" we need to update.
        If InStr(1, colNm, "newNet", vbTextCompare) _
        Or colNm = "cmnts" Then
            Call setIgnoreEvnt(True)
            For rowIdx = Target.Row To Target.Row + (Target.Rows.Count - 1)
                Call chckForLrgPrceChg(rowIdx, Target.Column)
            Next
            Call setIgnoreEvnt(False)
        End If
    End If
End Sub

''' -----------------------------------------------------------------------------
''' <summary>
'''     Manage comments for large price changes.
''' </summary>
''' <param name="targetRowIdx">
'''     The row being changed.
''' </param>
''' <param name="targetColIdx">
'''     The column being changed.
''' </param>
''' <history>
'''     [Brian Coker]   02/07/2008  Created
''' </history>
''' -----------------------------------------------------------------------------
Private Sub chckForLrgPrceChg(ByVal targetRowIdx As Integer, _
                              ByVal targetColIdx As Integer)

    ' Constants:
    Dim COL_PER_LVL_CNT As Integer: COL_PER_LVL_CNT = 5
    Dim NMS_ROW_IDX As Integer: NMS_ROW_IDX = 20

    Dim updtPartNbrColIdx As Integer
    Dim cmntColIdx As Integer
    Dim lastPctChgColIdx As Integer
    Dim frstPctChgColIdx As Integer
    Dim idx As Integer
    
    updtPartNbrColIdx = getColIdxFrmNm("updtPartNbr")
    lastPctChgColIdx = updtPartNbrColIdx - 1
    cmntColIdx = getColIdxFrmNm("cmnts")
    frstPctChgColIdx = getColIdxFrmNm("pctChg1")
    
    mMyPassword = "m@CeCarr"
    ActiveSheet.Unprotect (mMyPassword)

    'There can be multiple pricing levels. Look at each percent changed
    'field to determine if we need to force a comment requirement.
    For idx = lastPctChgColIdx To frstPctChgColIdx Step -(COL_PER_LVL_CNT)
        'Excel defaults empty cells to zero so an empty cell will pass the IsNumeric test.
        'We must check the length of the field to determine if any input was entered.
        '"WarnPctChg" is a named range.
        If IsNumeric(Cells(targetRowIdx, idx).Value) _
        And Len(Cells(targetRowIdx, idx).Value > 0) Then
            If Abs(Cells(targetRowIdx, idx).Value) >= Range("WarnPctChg").Value Then
                If Cells(targetRowIdx, idx).Comment Is Nothing Then
                    Cells(targetRowIdx, idx).AddComment _
                        ("Please Explain the large price change in the comments column")
                End If
                If Len(Cells(targetRowIdx, cmntColIdx).Value) > 0 Then
                    Cells(targetRowIdx, idx).Comment.Visible = False
                Else
                    Cells(targetRowIdx, idx).Comment.Visible = True
                End If
            Else
                If Cells(targetRowIdx, idx).Comment Is Nothing Then
                    ' continue
                Else
                    Cells(targetRowIdx, idx).Comment.Delete
                End If
            End If
        Else
            If Cells(targetRowIdx, idx).Comment Is Nothing Then
                'continue
            Else
                Cells(targetRowIdx, idx).Comment.Delete
            End If
        End If
    Next
    
    ProtectTheSheet
    
End Sub

''' -----------------------------------------------------------------------------
''' <summary>
'''     Get the index for the column that has the proper name.
''' </summary>
''' <param name="inpColNm">
'''     The area of the worksheet being modified.
''' </param>
''' <history>
'''     [Todd Simec]   02/07/2008  Created
''' </history>
''' -----------------------------------------------------------------------------
Private Function getColIdxFrmNm(ByVal inpColNm As String) As Double
    'Look through hidden column label row and return the column index of the input column name.
    getColIdxFrmNm = 0 'Default return code to not found (0 index)
    
    Dim NMS_ROW_IDX As Integer
    Dim EXACT_MATCH As Integer
    
    NMS_ROW_IDX = 20
    EXACT_MATCH = 0
    
    Dim lastCol As Integer
    lastCol = findLastCol()
    
    If Len(Trim(inpColNm)) > 0 Then
        getColIdxFrmNm = Me.Application.WorksheetFunction.Match(inpColNm, _
            Me.Range(Me.Cells(NMS_ROW_IDX, 1), Me.Cells(NMS_ROW_IDX, lastCol)), EXACT_MATCH)
    End If
End Function
''' -----------------------------------------------------------------------------
''' <summary>
'''     Find the last column used in the spreadsheet.
''' </summary>
''' <history>
'''     [Todd Simec]   02/07/2008  Created
''' </history>
''' -----------------------------------------------------------------------------
Private Function findLastCol() As Integer
    'Find the last column used in the spreadsheet by moving backward one
    'column from the very first column.
    Static lastCol As Integer
    If lastCol = 0 _
    And WorksheetFunction.CountA(Cells) > 0 Then
        'Search for any entry, by searching backwards by Columns from the first cell
        lastCol = Cells.Find(What:="*", After:=[A1], _
                           SearchOrder:=xlByColumns, _
                       SearchDirection:=xlPrevious).Column

    End If
    findLastCol = lastCol
End Function

''' -----------------------------------------------------------------------------
''' <summary>
'''     Find the last row used in the spreadsheet.
''' </summary>
''' <history>
'''     [Brian Coker]   02/07/2008  Created
''' </history>
''' -----------------------------------------------------------------------------
Private Function findLastRow() As Integer
    'Find the last row used in the spreadsheet by moving backward one
    'row from the very first row.
    Static lastRow As Integer
    If lastRow = 0 _
    And WorksheetFunction.CountA(Cells) > 0 Then
        'Search for any entry, by searching backwards by Columns from the first cell
        lastRow = Cells.Find(What:="*", After:=[A1], _
                           SearchOrder:=xlByRows, _
                       SearchDirection:=xlPrevious).Row

    End If
    findLastRow = lastRow
End Function

''' -----------------------------------------------------------------------------
''' <summary>
'''     Protect all non-editable fields on the spreadsheet.
''' </summary>
''' <history>
'''     [Brian Coker]   02/07/2008  Created
''' </history>
''' -----------------------------------------------------------------------------
Sub ProtectTheSheet()
    
    Dim FRST_CST_ROW As Integer
    FRST_CST_ROW = 25
    Dim COLS_PER_LVL As Integer
    COLS_PER_LVL = 5
    mMyPassword = "m@CeCarr"
    
    Cells.Locked = True
    
    Dim newNetColIdx As Integer
    Dim cmntColIdx As Integer
    Dim updtPartNbrColIdx As Integer
    Dim lastRow As Integer
        
    newNetColIdx = getColIdxFrmNm("newNet1")
    cmntColIdx = getColIdxFrmNm("cmnts")
    updtPartNbrColIdx = cmntColIdx - 3   ' This is because there are four item info columns currently.
    lastRow = findLastRow
    
    'Unlock user header fields:
    Range("C4:D6,C9:D9,B14:E14").Locked = False
    'Unlock the item information columns:
    Range(Cells(FRST_CST_ROW, updtPartNbrColIdx), Cells(lastRow, cmntColIdx)).Locked = False
    'Unlock the net price column:
    Range(Cells(FRST_CST_ROW, newNetColIdx), Cells(lastRow, newNetColIdx)).Locked = False
    
    'Unlock all net price columns for all levels:
    Dim colNbr As Integer
    colNbr = newNetColIdx + COLS_PER_LVL
    Do
        Range(Cells(FRST_CST_ROW, colNbr), Cells(lastRow, colNbr)).Locked = False
        colNbr = colNbr + COLS_PER_LVL
    Loop While colNbr < updtPartNbrColIdx
    
    ActiveSheet.Protect (mMyPassword)

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
