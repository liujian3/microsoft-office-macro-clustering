Attribute VB_Name = "CLIPBOARD"
#If Mac Then
    ' do nothing
#Else
    #If VBA7 Then
        Declare PtrSafe Function GlobalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
        Declare PtrSafe Function GlobalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
        Declare PtrSafe Function GlobalAlloc Lib "kernel32" (ByVal wFlags As Long, ByVal dwBytes As LongPtr) As LongPtr

        Declare PtrSafe Function CloseClipboard Lib "User32" () As Long
        Declare PtrSafe Function OpenClipboard Lib "User32" (ByVal hwnd As LongPtr) As LongPtr
        Declare PtrSafe Function EmptyClipboard Lib "User32" () As Long

        Declare PtrSafe Function lstrcpy Lib "kernel32" (ByVal lpString1 As Any, ByVal lpString2 As Any) As LongPtr

        Declare PtrSafe Function SetClipboardData Lib "User32" (ByVal wFormat As Long, ByVal hMem As LongPtr) As LongPtr
    #Else
    'Following statements will produce Compile errors that can be ignored as they are included in an 'if' block that previously checks the System
        Declare Function GlobalUnlock Lib "kernel32" (ByVal hMem As Long) As Long
        Declare Function GlobalLock Lib "kernel32" (ByVal hMem As Long) As Long
        Declare Function GlobalAlloc Lib "kernel32" (ByVal wFlags As Long, ByVal dwBytes As Long) As Long

        Declare Function CloseClipboard Lib "User32" () As Long
        Declare Function OpenClipboard Lib "User32" (ByVal hwnd As Long) As Long
        Declare Function EmptyClipboard Lib "User32" () As Long

        Declare Function lstrcpy Lib "kernel32" (ByVal lpString1 As Any, ByVal lpString2 As Any) As Long

        Declare Function SetClipboardData Lib "User32" (ByVal wFormat As Long, ByVal hMem As Long) As Long
    #End If
#End If
Public Const GHND = &H42
Public Const CF_TEXT = 1
Public Const MAXSIZE = 4096

Sub ClipBoard_SetData(MyString As String)
    #If Mac Then
        With New MSForms.DataObject
            .SetText MyString
            .PutInClipboard
        End With
    #Else
        #If VBA7 Then
            Dim hGlobalMemory As LongPtr
            Dim hClipMemory   As LongPtr
            Dim lpGlobalMemory    As LongPtr
        #Else
            Dim hGlobalMemory As Long
            Dim hClipMemory   As Long
            Dim lpGlobalMemory    As Long
        #End If

        Dim x                 As Long

        ' Allocate moveable global memory.
       '-------------------------------------------
       hGlobalMemory = GlobalAlloc(GHND, Len(MyString) + 1)

        ' Lock the block to get a far pointer
       ' to this memory.
       lpGlobalMemory = GlobalLock(hGlobalMemory)

        ' Copy the string to this global memory.
       lpGlobalMemory = lstrcpy(lpGlobalMemory, MyString)

        ' Unlock the memory.
       If GlobalUnlock(hGlobalMemory) <> 0 Then
            MsgBox "Could not unlock memory location. Copy aborted."
            GoTo PrepareToClose
        End If

        ' Open the Clipboard to copy data to.
       If OpenClipboard(0&) = 0 Then
            MsgBox "Could not open the Clipboard. Copy aborted."
            Exit Sub
        End If

        ' Clear the Clipboard.
       x = EmptyClipboard()

        ' Copy the data to the Clipboard.
       hClipMemory = SetClipboardData(CF_TEXT, hGlobalMemory)

PrepareToClose:

        If CloseClipboard() = 0 Then
            MsgBox "Could not close Clipboard."
        End If
    #End If

End Sub
Attribute VB_Name = "MARCAS"
Public Const C = "CUMPLE"
Public Const R = "RECOMENDACIONES"
Public Const AC = "CUMPLE CON COMENTARIOS"
Public Const CP = "CUMPLE PARCIALMENTE"
Public Const NC = "NO CUMPLE"
Public Const NP = "NO PRESENTA"
Public STATUS As String
Public iSTATUS(7 To 16) As String

Public Sub MarcaRevision1()
    Marca ("RED")
End Sub
Public Sub MarcaRevision2()
    Marca ("AQUA")
End Sub
Public Sub MarcaRevision3()
    Marca ("BLUE")
End Sub
Public Sub MarcaRevision4()
    Marca ("DARK_BLUE")
End Sub
Public Sub MarcaRevision5()
    Marca ("INDIGO")
End Sub
Public Sub MarcaRevision6()
    Marca ("LAVENDER")
End Sub
Public Sub MarcaRevision7()
    Marca ("VIOLET")
End Sub
Public Sub MarcaRevision8()
    Marca ("BLACK")
End Sub

Public Sub Marca(Color As String)
    With Selection.ParagraphFormat
        .Borders(wdBorderLeft).LineStyle = wdLineStyleNone
        With .Borders(wdBorderRight)
            .LineStyle = wdLineStyleThickThinMedGap
            .LineWidth = wdLineWidth300pt
            .Color = wdColorRed
            Select Case Color
                Case "RED"
                    .Color = wdColorRed
                Case "AQUA"
                    .Color = wdColorAqua
                Case "BLUE"
                    .Color = wdColorBlue
                Case "DARK_BLUE"
                    .Color = wdColorDarkBlue
                Case "INDIGO"
                    .Color = wdColorIndigo
                Case "LAVENDER"
                    .Color = wdColorLavender
                Case "VIOLET"
                    .Color = wdColorViolet
                Case "BLACK"
                    .Color = wdColorBlack
            End Select
        End With
        .Borders(wdBorderTop).LineStyle = wdLineStyleNone
        .Borders(wdBorderBottom).LineStyle = wdLineStyleNone
        With .Borders
            .DistanceFromTop = 1
            .DistanceFromLeft = 4
            .DistanceFromBottom = 1
            .DistanceFromRight = 4
            .Shadow = False
        End With
    End With
    With Options
        .DefaultBorderLineStyle = wdLineStyleThickThinMedGap
        .DefaultBorderLineWidth = wdLineWidth300pt
        .DefaultBorderColor = wdColorRed
    End With
End Sub
Attribute VB_Name = "MISC"
#If Win64 Then
    Public Declare PtrSafe Function sndPlaySound32 Lib "winmm.dll" Alias "sndPlaySoundA" _
           (ByVal lpszSoundName As String, ByVal uFlags As Long) As Long
#Else
    Public Declare Function sndPlaySound32 Lib "winmm.dll" Alias "sndPlaySoundA" _
                                           (ByVal lpszSoundName As String, ByVal uFlags As Long) As Long
#End If
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Private Sub ComboBox1_Change()

End Sub

Private Sub Document_ContentControlOnExit(ByVal ContentControl As ContentControl, Cancel As Boolean)
    STATUS = "APROBADO"
    
    '7 AVALUO DE CARGAS
    iSTATUS(7) = ContentControls(2547402111#).Range.Text
    ContentControls(3297090291#).Range.Text = iSTATUS(7)
        
    '8 PAR|fffd|METROS DE DISE|fffd|O S|fffd|SMICO
    iSTATUS(8) = ContentControls(3451953558#).Range.Text
    ContentControls(3867075119#).Range.Text = iSTATUS(8)
    
    '9 RESISTENCIA AL FUEGO
    iSTATUS(9) = ContentControls(3424513051#).Range.Text
    ContentControls(4140425108#).Range.Text = iSTATUS(9)
    
    '10 AN|fffd|LISIS Y DISE|fffd|O ESTRUCTURAL
    iSTATUS(10) = ContentControls(3583616234#).Range.Text
    ContentControls(2431767069#).Range.Text = iSTATUS(10)
    
    '11 DEFORMACIONES DE LA ESTRUCTURA
    iSTATUS(11) = ContentControls(2383746504#).Range.Text
    ContentControls(2252843685#).Range.Text = iSTATUS(11)
    
    '12 PLANOS ESTRUCTURALES
    iSTATUS(12) = ContentControls(3608758509#).Range.Text
    ContentControls(2697269652#).Range.Text = iSTATUS(12)
    
    '13 CONCORDANCIA INFORME SUELOS
    iSTATUS(13) = ContentControls(3182531047#).Range.Text
    ContentControls(3056178540#).Range.Text = iSTATUS(13)
    
    '14 OBS INFORME ESTRUCTURAL
    iSTATUS(14) = ContentControls(3895057453#).Range.Text
    ContentControls(2197880301#).Range.Text = iSTATUS(14)
    
    '15 OBS ANEXO 1
    iSTATUS(15) = ContentControls(3233951913#).Range.Text
    ContentControls(3561726443#).Range.Text = iSTATUS(15)
    
    '16 REVISI|fffd|N ESTRUCTURAL INDEPENDIENTE
    iSTATUS(16) = ContentControls(2676677625#).Range.Text
    ContentControls(3144451878#).Range.Text = iSTATUS(16)
    
    'VALORACI|fffd|N TOTAL
    'Verificar si existe al menos un |fffd|tem con APROBADO CON COMENTARIOS
    For i = 7 To 16
        If (iSTATUS(i) = AC) Then STATUS = "APROBADO CON COMENTARIOS"
    Next i
    'Verificar si existe al menos un |fffd|tem con CUMPLE PARCIALMENTE, NO CUMPLE O NO PRESENTA
    For i = 7 To 16
        If (iSTATUS(i) = CP Or iSTATUS(i) = NC Or iSTATUS(i) = NP) Then STATUS = "NO CUMPLE"
    Next i
    'Imprimir valoraci|fffd|n
    ContentControls(2689859316#).Range.Text = STATUS
    ContentControls(3935307430#).Range.Text = STATUS
    
    'ACTUALIZACI|fffd|N DE R CUANDO EL OBJETO SEA CHECKBOX
    If ContentControl.Type = wdContentControlCheckBox Then R
    
    
    
    'ContentControl.SetFocus
    'ContentControl.Application.Activate
    'DoCmd.RunCommand acCmdCopy
    
    'ContentControl ID and Type
    'MsgBox ("_" & CStr(ContentControl.ID) & "_" & CStr(ContentControl.Type))
    
    'Send ContentControl ID to clipboard
    ClipBoard_SetData (ContentControl.ID)
    sndPlaySound32 "C:\Windows\Media\Windows Print complete.wav", SND_ASYNC
    
    
    'MsgBox (ContentControls(3297090291#).Range.Text)
    
    
    'ContentControl.Range.Text = "jajajaj"
    'If ContentControl.ID = 2854912302# Then ContentControls(2653395899#).Range.Text = "ok"
    
    
    'ContentControlBase(324).Text = 1
    'Microsoft.Office.Tools.Word.PlainTextContentControl(2653395899#).Text = "OK"
    'ContentControl.Title
    'PlainTextContentControl(2653395899#).Text = "OK"
    'Microsoft.Office.Tools.Word.PlainTextContentControl.
    'ContentControls(2653395899#).Text = "ok"
    'MsgBox (plaintextcontrols(1).Text)
End Sub

Sub R()
    'ACTUALIZAR VALORES DE FI
    'frX = SelectContentControlsByTag(frX).Count
    'MsgBox frX
    
    frX = ContentControls(3350577147#).Range.Text
    
    'if ContentControls(2885289574).Range.Text
    
    
    
End Sub


INQUEST-PP=macro
