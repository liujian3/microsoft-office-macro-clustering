Attribute VB_Name = "Module1"
Option Explicit

Sub GridlinesOn()
Attribute GridlinesOn.VB_Description = "Turn on Gridlines"
Attribute GridlinesOn.VB_ProcData.VB_Invoke_Func = " \n14"
'
' GridlinesOn Macro
' Turn on Gridlines
'

'
    Columns("C:C").EntireColumn.AutoFit
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Sub ToggleGridLines()
Attribute ToggleGridLines.VB_Description = "Turn off the gridlines"
Attribute ToggleGridLines.VB_ProcData.VB_Invoke_Func = " \n14"

  ' ActiveWindow.DisplayGridlines = True

 'If ActiveWindow.DisplayGridlines = True Then
' ActiveWindow.DisplayGridlines= False
  Esle
    'ActiveWindow.DisplayGridlines = True
    End If
' TurnGridlinesOff Macro
' Turn off the gridlines
'

'
    Range("C1").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "modFormatting"
Option Explicit

Sub FormatSalesSheet()
Attribute FormatSalesSheet.VB_Description = "This Macro formats the Sales Sheet."
Attribute FormatSalesSheet.VB_ProcData.VB_Invoke_Func = " \n14"
'
' FormatSalesSheet Macro
' This Macro formats the Sales Sheet.
'

'
    Range("C1").Select
    ActiveCell.FormulaR1C1 = "Sales Figures"
    Range("C2").Select
    ActiveWindow.DisplayGridlines = False
End Sub


INQUEST-PP=macro
