Attribute VB_Name = "F_HBB"
Attribute VB_Base = "0{5885113D-324D-4802-96AE-C94C495D408C}{FB812E4F-A2A6-423E-975F-94C737C92520}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

'Zeigt die zuletzt selektierte Mulitpage an
Public lastSelectedMultipage As Long
'Zeigt an, ob eine g|fffd|ltige Betriebsart vorhanden ist
Public BAGueltig As Boolean
'Zeigt an, ob es sich um ein Anfragepflichtiges Offert handelt
Public anfragepflichtig As Boolean

'Stack f|fffd|r startup Variable
Dim dataStatusStack() As M_Global_Stack.LIFO_StackType
'Subforms
Public oF_HBB_Kennzeichen_KFZRS As New F_HBB_RS_Kennzeichen
Public oF_HBB_GMRS_Adressen As New F_HBB_GMRS_Adresse
Public oF_HBB_Sach_Sublimits As New F_HBB_Sach_Sublimits
Public oF_HBB_Sach_Vorteilsdeckungen As New F_HBB_Sach_Vorteilsdeckungen
Public oF_HBB_Cyber_Risikofragen As New F_HBB_Cyber_Risikofragen
Public oF_HBB_Allrisk As New F_HBB_Allrisk
Public OF_HBB_Sach_Summenermittlung As New F_HBB_Summenermittlung
Public oF_HBB_Sach_Leistungsuebersicht As New F_HBB_Leistungsuebersicht_Sach
Public oF_HBB_Technik_Leistungsuebersicht As New F_HBB_Leistungsueberischt_Tech

#If VBA7 Then
    Dim mhWndForm As LongPtr 'Window Identifier
#Else
    Dim mhWndForm As Long 'Window Identifier
#End If

Private Const userFormMinWidth As Integer = 774
Private Const userFormMinHeigth As Integer = 480
Private Const userFormMaxHeigth As Integer = 975


'Change general size coefficient
Const SizeCoeff = 1


'//Procedure to set or clear a bit from a style flag
#If VBA7 Then
    Private Sub SetBit(ByRef lStyle As LongPtr, ByVal lBit As Long, ByVal bOn As Boolean)
#Else
    Private Sub SetBit(ByRef lStyle As Long, ByVal lBit As Long, ByVal bOn As Boolean)
#End If
    If bOn Then
       lStyle = lStyle Or lBit
    Else
       lStyle = lStyle And Not lBit
    End If
End Sub


'The size of a pixel, in points
Private Function PointsPerPixel() As Double

    #If VBA7 Then
        Dim hDC As LongPtr
    #Else
        Dim hDC As Long
    #End If
    Dim lDotsPerInch As Long
    
    hDC = GetDC(0)
    lDotsPerInch = GetDeviceCaps(hDC, LOGPIXELSX)
    PointsPerPixel = POINTS_PER_INCH / lDotsPerInch
    ReleaseDC 0, hDC

End Function

               
Private Sub AddTitleBarButtons()
    #If VBA7 Then
        Dim lStyle As LongPtr
    #Else
        Dim lStyle As Long
    #End If

   If Val(Application.Version) < 9 Then
      mhWndForm = FindWindow("ThunderXFrame", Me.Caption)   '//XL97
   Else
      mhWndForm = FindWindow("ThunderDFrame", Me.Caption)   '//XL2000+
   End If
   
   '// Have we got a form to set?
   If mhWndForm = 0 Then Exit Sub

   '//Get the basic window style
   lStyle = GetWindowLong(mhWndForm, GWL_STYLE)

   '//Build up the basic window style flags for the form
   SetBit lStyle, WS_CAPTION, True
   SetBit lStyle, WS_SYSMENU, True
   SetBit lStyle, WS_THICKFRAME, True
   SetBit lStyle, WS_MINIMIZEBOX, True
   'SetBit lStyle, WS_MAXIMIZEBOX, True
   
   'set the basic window styles
   SetWindowLong mhWndForm, GWL_STYLE, lStyle
End Sub
               

'|fffd|ndert die Gr|fffd||fffd|e anhand eines Faktors
'Private Sub AdjustSize()
'    Dim ControlOnForm As Object
'
'    With Me
'        'Change Userform size
'        .Width = .Width * SizeCoeff
'        .Height = .Height * SizeCoeff
'
'        'Change controls/font on the userform
'        For Each ControlOnForm In .Controls
'            With ControlOnForm
'                .Top = .Top * SizeCoeff
'                .Left = .Left * SizeCoeff
'                .Width = .Width * SizeCoeff
'                .Height = .Height * SizeCoeff
'                On Error Resume Next
'                .Font.Size = .Font.Size * SizeCoeff
'                On Error GoTo 0
'            End With
'        Next
'    End With
'
'    'Spezialbehandlung der Scrollheight notwendig!
'    Me.MultiPage_Sparten(global_Mulitpage_Spartenauswahl).ScrollHeight = Me.MultiPage_Sparten(global_Mulitpage_Spartenauswahl).ScrollHeight * SizeCoeff
'End Sub



Private Sub ResizeToFitMonitor()
    Dim screenWidth As Integer, screenHeigth As Integer
    Dim myPointsPerPixel As Double, optimalScreenHeigth As Integer
     
    screenWidth = GetSystemMetrics(0) ' width in points
    screenHeigth = GetSystemMetrics(1) ' height in points
    
    myPointsPerPixel = PointsPerPixel
    
    'manchmal liefert mypointsperpixel f|fffd|lschlicherweise 0 (nur auf 64 - bit systemen?)
    If myPointsPerPixel <> 0 Then
        F_HBB.Left = (screenWidth - F_HBB.Width) * myPointsPerPixel / 2
        
        'set 80% of screen heigth to optimal heigth
        optimalScreenHeigth = screenHeigth * 0.8 * myPointsPerPixel   ' minus taskleiste
    End If
    
    If optimalScreenHeigth > userFormMaxHeigth Then optimalScreenHeigth = userFormMaxHeigth
    If optimalScreenHeigth > userFormMinHeigth Then F_HBB.Height = optimalScreenHeigth
End Sub


Private Sub Button_Spartenauswahl_Technik_HBBPlus_Click()
    oF_HBB_Technik_Leistungsuebersicht.Show
End Sub

Private Sub CheckBox_Spartenauswahl_GMRS_RabatteWieSach_Click()
    
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_RabatteWieSach_Click
End Sub

Private Sub CheckBox_Spartenauswahl_GMRS_SBVerzicht_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_SBVerzicht_Click
End Sub



Private Sub Frame_Footer_Click()

End Sub

Private Sub MultiPage_Sparten_Change()
    'This is for MouseWheel Initialization for this Control
  
    Dim iIndex As Long
  
    iIndex = Me.MultiPage_Sparten.value
  
  
    If (iIndex = M_Global.global_Mulitpage_Spartenauswahl) Then
        M_Global_Form_Scroll.iGblControlType = M_Global_Form_Scroll.nMyControlTypeMULTIPAGE
        Set M_Global_Form_Scroll.myGblUserForm = Me
        Set M_Global_Form_Scroll.myGblControlObject = Me.MultiPage_Sparten.Pages(iIndex)
        #If Win64 Then
            'only hook in 32-bit env until bug resolved
        #Else
            Hook_Mouse
        #End If
    Else
        UnHook_Mouse
    End If
  
End Sub












Private Sub Textbox_Spartenauswahl_GMRS_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    M_HBB_Spartenauswahl_GMRS.Textbox_Spartenauswahl_GMRS_Rabatte_SR_Exit
End Sub

Private Sub Textbox_Spartenauswahl_GMRS_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
        M_HBB_Spartenauswahl_GMRS.Textbox_Spartenauswahl_GMRS_Rabatte_VPC_Exit
        
End Sub

Private Sub UserForm_Deactivate()
    UnHook_Mouse
End Sub


Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    Dim bResult As VbMsgBoxResult

    'm|fffd|glicherweise nicht gespeicherte |fffd|nderungen speichern
    M_HBB_Uebersicht.SchreibeDaten
    M_HBB_AllgemeineDaten.SchreibeDaten

    'Dialog zur Abfrage starten
    Dim dlgSpeichern As New F_Speichern
    dlgSpeichern.Show
    
    Cancel = True

    Select Case dlgSpeichern.speichernModus
        Case myF_SpeichernResult.Speichern
            M_Global_Speichern.Speichern False
            Cancel = False
        Case myF_SpeichernResult.SpeichernUnter
            Cancel = Not M_Global_Speichern.SpeichernUnter
        Case myF_SpeichernResult.NichtSpeichern
            'Verhindern, dass weitere Abfragen vom System kommen
            ThisWorkbook.Saved = True
            Cancel = False
        Case myF_SpeichernResult.Abbruch
            Cancel = True
    End Select
    
    UnHook_Mouse
End Sub


Private Sub UserForm_Initialize()
    
    'Stack, der den Status angibt, ob Daten initial geladen, geladen oder gespeichert werden sollen
    M_Global_Stack.InitializeStack dataStatusStack()
    'Basis des Stacks = Daten speichern
    PushDataStatus (DataStatus.Save)
    'Initiales Laden, speichern unterbinden
    PushDataStatus (DataStatus.Initial)
    
    'Initialisieren der Anfragepflicht
    anfragepflichtig = False
    'von einer ung|fffd|ltigen BA ausgehen, solange keine g|fffd|ltige geladen wurde
    BAGueltig = False
    
    'L|fffd|dt Betriebsarten in den Speicher
    'LadeBetriebsarten
    
    'Lade gespeicherte Werte nur, wenn es sich nicht um die Vorlage handelt.
    'in allen anderen F|fffd|llen, wird ein jungfr|fffd|uliches Dokument angzeigt
    M_HBB_Uebersicht.LadeDaten
    M_HBB_AllgemeineDaten.LadeDaten
    M_HBB_Spartenauswahl_Sach.LadeDaten
    M_HBB_Spartenauswahl_Technik.LadeDaten
    M_HBB_Spartenauswahl_BU.LadeDaten
    M_HBB_Spartenauswahl_Haft.LadeDaten
    M_HBB_Spartenauswahl_RS.LadeDaten
    M_HBB_Spartenauswahl_KFZRS.LadeDaten
    M_HBB_Spartenauswahl_GMRS.LadeDaten
    M_HBB_Spartenauswahl_Transport.LadeDaten
    M_HBB_Summenermittlung.LadeDaten
    M_HBB_Cyber.LadeDaten

    'Setzt die Page Allgemeine Daten sichtbar
    Me.MultiPage_Sparten.value = M_Global.global_Multipage_AllgemeineDaten
    lastSelectedMultipage = M_Global.global_Multipage_AllgemeineDaten
    'MultiPage_Sparten_Change
    
    PopDataStatus
    
    
    ResizeToFitMonitor
    M_Global_Form.MakeFormResizable Me
    'AdjustSize
    AddTitleBarButtons
    LizenzUIElemente
    F_HBB.Controls("MultiPage_Sparten").Pages(M_Global.global_Mulitpage_Spartenauswahl).ScrollTop = 0
    
    M_Global_Form.InfoButtonEventHandler_Initialize Me, M_Global_Form.F_HBB_ID
    
End Sub


Private Sub UserForm_Terminate()

    If ThisWorkbook.Version = VersionType.Release Then
        Application.ScreenUpdating = True
        Application.DisplayFormulaBar = True
        'Quit Excel only if only one Workbook is open (this one)
        If (Workbooks.Count = 1) Then
            Application.Quit
        Else
            ThisWorkbook.Close False
        End If
    End If

End Sub


Private Sub UserForm_Resize()
    Dim heightHeader As Integer, offsetBottomMultipage As Integer, offsetBottomButton As Integer
    Dim topMultipage As Integer, heightMultipage As Integer, heightForm As Integer
    Dim newHeightMultiPage As Integer, newFooterTop As Integer, currentUserFormMinWidth As Integer

    'if the userform was just minimized, don't change sizes
    If IsIconic(mhWndForm) Then Exit Sub
    
    'Height
    'keep at minimum heigth
    If F_HBB.Height < userFormMinHeigth Then F_HBB.Height = userFormMinHeigth
    
    'Change Size of Multipage
    heightHeader = 30 * SizeCoeff
    offsetBottomMultipage = 36 * SizeCoeff
    offsetBottomButton = 30 * SizeCoeff
    topMultipage = F_HBB.MultiPage_Sparten.Top
    heightMultipage = F_HBB.MultiPage_Sparten.Height
    heightForm = F_HBB.Height
    
    newHeightMultiPage = heightForm - heightHeader - topMultipage - offsetBottomMultipage
    F_HBB.MultiPage_Sparten.Height = newHeightMultiPage
    
    'Change Position of Footer
    newFooterTop = heightForm - heightHeader - offsetBottomButton
    F_HBB.Controls("Frame_Footer").Top = newFooterTop
    
    'Width
    'keep at minimum width
    currentUserFormMinWidth = userFormMinWidth * SizeCoeff
    
    F_HBB.Width = currentUserFormMinWidth ' keep at specific width
    
    'If F_HBB.Width < currentUserFormMinWidth Then F_HBB.Width = currentUserFormMinWidth
    
    
    F_HBB.Controls("Label_AllgemeineDaten_Info").Caption = "Top: " & F_HBB.Top & " - Left: " & F_HBB.Left & " - Width: " & F_HBB.Width & " - Heigth: " & F_HBB.Height
End Sub


'-------------------
'-- STATUS STACK ---
'-------------------

'Zeigt an, ob das Programm das erste Mal geladen wird.
'Wird auch f|fffd|r Exit verwendet, da sonst durch die vielen Exit-Eventhandler mehrmals hintereinander gespeichert wird!
'Private bStartupStatus As Boolean

Public Property Get currentDataStatus() As DataStatus
    currentDataStatus = M_Global_Stack.Top(dataStatusStack())
End Property

Public Property Get DatatStatusLoad() As Boolean
    DatatStatusLoad = (currentDataStatus = DataStatus.Load)
End Property

Public Property Get DatatStatusInitial() As Boolean
    DatatStatusInitial = (currentDataStatus = DataStatus.Initial)
End Property

Public Property Get DatatStatusSave() As Boolean
    DatatStatusSave = (currentDataStatus = DataStatus.Save)
End Property


'Setzt den neuen Status, r|fffd|ckgabe True wenn Push erfolgreich
Public Function PushDataStatus(newStatus As DataStatus) As Boolean
    'Wenn der Status Initial ist, bleibt er Initial.
    If (currentDataStatus = DataStatus.Initial) Then
        newStatus = DataStatus.Initial
    End If
    
    PushDataStatus = M_Global_Stack.Push(dataStatusStack(), newStatus)
End Function


'setzt den vorigen Status wieder aktiv, gibt den letzt g|fffd|ltigen (nicht den neu g|fffd|ltigen) zur|fffd|ck
Public Function PopDataStatus() As DataStatus
    PopDataStatus = M_Global_Stack.Pop(dataStatusStack())
End Function


'------------------
'-- Initalizing ---
'------------------

'Aktiviert / Deaktiviert alle Elemente auf der Form entsprechend der Berechtigung
Private Sub LizenzUIElemente()
    If ThisWorkbook.Lizenz = LizenzType.VT Then
        F_HBB.Controls("MultiPage_Sparten").Pages(M_Global.global_Multipage_VTLizenz).Visible = True
    Else
        F_HBB.Controls("MultiPage_Sparten").Pages(M_Global.global_Multipage_VTLizenz).Visible = False
    End If
    
    'Lizenzablauf
    If Sheet_Lizenz.CheckLizenzAblauf Then
        F_HBB.Controls("Label_AllgemeineDaten_Lizenzablauf").Visible = True
    End If
End Sub


'------------------
' Command Buttons
'------------------

Private Sub CommandButton_BerechnungsblattDruck_Click()
    If Sheet_Berechnungsblatt.DruckAllowed Then
        Sheet_Berechnungsblatt.Drucke
    End If
End Sub


Private Sub CommandButton_OffertDruck_Click()
    If Sheet_Offert.DruckAllowed Then
        Sheet_Offert.Drucke
    End If

End Sub



Private Sub CommandButton_Annahmerichtlinien_AnnahmerichtlinienOeffnen_Click()
    M_HBB_Annahmerichtlinien.CommandButton_Annahmerichtlinien_AnnahmerichtlinienOeffnen_Click
End Sub


'Speichert das aktuelle Offert
'Achtung: Vorlage darf nicht |fffd|berschrieben werden
Private Sub CommandButton_Speichern_Click()
    M_Global_Speichern.Speichern (True)
End Sub


'Speichert unter neuem Dateinamen
Private Sub CommandButton_SpeichernUnter_Click()
    M_Global_Speichern.SpeichernUnter
End Sub


Private Sub CommandButton_AntragDruck_Click()
    M_Global_Druck.CommandButton_Antrag_Click
End Sub


'------------------
' Multipage Handling
'------------------

'Zeigt ein bestimmtes Feld auf der Multipage an
Public Sub MultiPage_Sparten_ChangeToPage(neueSeite As Long)
    'Nur |fffd|ndern, wenn der neue Eintrag anders ist als der alte
    'sonst werden jede Menge Events erzeugt
    If (Me.lastSelectedMultipage <> neueSeite) Then
        Me.MultiPage_Sparten.value = neueSeite
    End If

End Sub


'------------------
' UI Eventhandler
'------------------

'|fffd|bersicht ANFANG

Private Sub TextBox_Uebersicht_Betriebsart_Suchbegriff_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.TextBox_Uebersicht_Betriebsart_Suchbegriff_Change (F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").value)
End Sub

Private Sub ComboBox_Uebersicht_Betriebsart_Ergebnis_Change()
    'Diese folgende Funktion pr|fffd|ft selber, ob es sich um InitialLoad handelt oder nicht
    'Diese |fffd|nderung wurde notwendig aufgrund der "Bitte w|fffd|hlen" Betriebsart, die beim InitialLoad anders zu behandeln ist.
    M_HBB_Uebersicht.ComboBox_Uebersicht_Betriebsart_Ergebnis_Change
End Sub

Private Sub CheckBox_Uebersicht_Sachversicherung_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.CheckBox_Uebersicht_Sachversicherung_Change
End Sub

Private Sub CheckBox_Uebersicht_Technik_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.CheckBox_Uebersicht_Technik_Change
End Sub

Private Sub CheckBox_Uebersicht_Transport_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.Checkbox_Uebersicht_Transport_Change
End Sub

Private Sub CheckBox_Uebersicht_Betriebsunterbrechnung_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.CheckBox_Uebersicht_Betriebsunterbrechnung_Change
End Sub

Private Sub CheckBox_Uebersicht_Haftpflicht_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.CheckBox_Uebersicht_Haftpflicht_Change
End Sub

Private Sub CheckBox_Uebersicht_Rechtsschutz_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.CheckBox_Uebersicht_Rechtsschutz_Change
End Sub

Private Sub CheckBox_Uebersicht_KFZRechtsschutz_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.CheckBox_Uebersicht_KFZRechtsschutz_Change
End Sub
Private Sub CheckBox_Uebersicht_GMRS_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.Checkbox_Uebersicht_GMRS_Change
End Sub

Private Sub CheckBox_Uebersicht_Cyber_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Uebersicht.Checkbox_Uebersicht_Cyber_Change

End Sub


'|fffd|bersicht ENDE



'Allgemeine Daten ANFANG

Private Sub TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    'Pr|fffd|fung auf max 10 Stellen und nur Zahlen
    KeyAscii = M_Global.CheckKeyPressedPolizzenNr( _
        Me.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr"), KeyAscii, False)
End Sub

Private Sub TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_AllgemeineDaten.TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr_Change
End Sub


Private Sub CheckBox_AllgemeineDaten_Versicherungsort_wieoben_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_AllgemeineDaten.CheckBox_AllgemeineDaten_Versicherungsort_wieoben_Change
End Sub

Private Sub OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Konvertierung_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_AllgemeineDaten.OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Change
End Sub

Private Sub OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Neuvertrag_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_AllgemeineDaten.OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Change
End Sub

Private Sub TextBox_AllgemeineDaten_Nachname_Firma_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_AllgemeineDaten.TextBox_AllgemeineDaten_Nachname_Firma_Exit
End Sub


'Allgemeine Daten ENDE


'Reiterkarte Spartenauswahl ANFANG


'Sachversicherung ANFANG

Private Sub TextBox_Spartenauswahl_Sachversicherung_InhaltVS_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR"), KeyAscii, True)
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC"), KeyAscii, False)
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_InhaltVS_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_InhaltVS_Change
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_InhaltVS_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_InhaltVS_Change
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_InhaltVS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_InhaltVS_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Change
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS"), KeyAscii, True)
        
    If (F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value < F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value) And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value Then
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = True
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = False
    End If
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Change
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Exit
End Sub

Private Sub CommandButton_Spartenauswahl_Allriskbearbeiten_Click()
    If DatatStatusInitial Then Exit Sub
    F_HBB.oF_HBB_Allrisk.Show
End Sub


Private Sub CommandButton_Spartenauswahl_Sachversicherung_Sublimits_Click()
    If DatatStatusInitial Then Exit Sub
    F_HBB.oF_HBB_Sach_Sublimits.Show
End Sub

Private Sub CommandButton_Spartenauswahl_Sachversicherung_Vorteilsdeckungen_Click()
    If DatatStatusInitial Then Exit Sub
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Show
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungGastro_Click()
    If DatatStatusInitial Then Exit Sub
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro").value = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungGastro").value
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungHandel_Click()
    If DatatStatusInitial Then Exit Sub
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Handel").value = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungHandel").value
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Allrisk_Click()
    If DatatStatusInitial Then Exit Sub
    
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Allrisk_Click
    
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv_Change
End Sub

'Checkboxes Sparten ANFANG

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Feuer_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Feuer_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Sturm_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Sturm_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change
End Sub

'Checkboxes Sparten ENDE

Private Sub Button_Spartenauswahl_Sachversicherung_HBBPlusKomfort_Click()
    oF_HBB_Sach_Leistungsuebersicht.Show
End Sub

'Feuer ANFANG

Private Sub ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck_Change
End Sub

'Feuer ENDE


'Sturm ANFANG

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_MehrAls4_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_WenigerAls4_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_Change
End Sub

'Sturm ENDE



'Leitungswasser ANFANG

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungMit_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Fremdenbeherbergung_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungOhne_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Fremdenbeherbergung_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerJa_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Warenlager_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerNein_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Warenlager_Change
End Sub


'Leitungswasser ENDE


'Einbruchdiebstahl ANFANG

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_GebaeudeUnbewohnt_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_GebaeudeUnbewohnt_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden_Change
End Sub

'Einbruchdiebstahl ENDE



'Glasbruch ANFANG

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Change
End Sub


Private Sub ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_Change
End Sub

'Glasbruch ENDE


'Summenermittlung ANFANG
Private Sub CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung_Click()
    If DatatStatusInitial Then Exit Sub
    
    M_HBB_Summenermittlung.CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung_Click
    
    
End Sub

Private Sub CommandButton_Spartenauswahl_Sachversicherung_Summenermittlung_Click()
    If DatatStatusInitial Then Exit Sub
    
    
    If Not CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung.value Then
        CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung.value = True
        
        
    Else
        F_HBB.OF_HBB_Sach_Summenermittlung.Show
        M_HBB_Summenermittlung.BerechneNeu
        
    End If
    
      Dim gebaeude As Double
   Dim summenerm As Double
   
   If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = "" Then
        gebaeude = 0
   Else
        gebaeude = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value, "General Number")
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value = "" Then
        summenerm = 0
   Else
        summenerm = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value, "General Number")
    End If
    
   
    If (gebaeude < summenerm) And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value Then
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = True
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = False
    End If
End Sub
'Summenermittlung Ende

'Rabatte ANFANG

Private Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR_Change
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR_Exit
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC_Change
End Sub

Private Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Sach.TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC_Exit
End Sub


'Rabatte ENDE


'Sachversicherung ENDE



'Technik ANFANG

Private Sub TextBox_Spartenauswahl_Technik_InhaltVS_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Technik_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR"), KeyAscii, True)
End Sub

Private Sub TextBox_Spartenauswahl_Technik_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC"), KeyAscii, False)
End Sub

'Dieses Feld spiegelt den Wert des Inhalt-VS-Feldes aus SACH wieder
Private Sub TextBox_Spartenauswahl_Technik_InhaltVS_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.TextBox_Spartenauswahl_Technik_InhaltVS_Change
End Sub

Private Sub TextBox_Spartenauswahl_Technik_InhaltVS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.TextBox_Spartenauswahl_Technik_InhaltVS_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Technik_HBBPlus_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.CheckBox_Spartenauswahl_Technik_HBBPlus_Change
End Sub


Private Sub CheckBox_Spartenauswahl_Technik_HBBExklusiv_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.CheckBox_Spartenauswahl_Technik_HBBExklusiv_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Technik_Buero_SBVariante_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.ComboBox_Spartenauswahl_Technik_Buero_SBVariante_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Technik_Betrieb_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.OptionButton_Spartenauswahl_Technik_Betrieb_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Technik_Buero_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.OptionButton_Spartenauswahl_Technik_Betrieb_Change
End Sub

Private Sub TextBox_Spartenauswahl_Technik_Rabatte_SR_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.TextBox_Spartenauswahl_Technik_Rabatte_SR_Change
End Sub

Private Sub TextBox_Spartenauswahl_Technik_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.TextBox_Spartenauswahl_Technik_Rabatte_SR_Exit
End Sub

Private Sub TextBox_Spartenauswahl_Technik_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.TextBox_Spartenauswahl_Technik_Rabatte_VPC_Change
End Sub

Private Sub TextBox_Spartenauswahl_Technik_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.TextBox_Spartenauswahl_Technik_Rabatte_VPC_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Technik_RabatteWieSach_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Technik.CheckBox_Spartenauswahl_Technik_RabatteWieSach_Change
End Sub


'Technik ENDE


'Transport ANFANG

Private Sub CheckBox_Spartenauswahl_Transport_RabatteWieSach_Change()
    
    M_HBB_Spartenauswahl_Transport.CheckBox_Spartenauswahl_Transport_RabatteWieSach_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Transport_Versicherungssumme_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Transport.ComboBox_Spartenauswahl_Transport_Versicherungssumme_Change
End Sub


Private Sub TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
   
   KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_Exit(ByVal Cancel As MSForms.ReturnBoolean)

    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Transport.TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_Exit

End Sub

Private Sub TextBox_Spartenauswahl_Transport_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If DatatStatusInitial Then Exit Sub
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR"), KeyAscii, True)
    
End Sub

Private Sub TextBox_Spartenauswahl_Transport_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If DatatStatusInitial Then Exit Sub
     KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_Change()
 If DatatStatusInitial Then Exit Sub
    
    M_HBB_Spartenauswahl_Transport.TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_Change
End Sub


Private Sub CheckBox_Spartenauswahl_Transport_Nachtdeckung_Click()
     If DatatStatusInitial Then Exit Sub
     M_HBB_Spartenauswahl_Transport.CheckBox_Spartenauswahl_Transport_Nachtdeckung_Click
End Sub

Private Sub TextBox_Spartenauswahl_Transport_Rabatte_SR_Change()
     If DatatStatusInitial Then Exit Sub
     M_HBB_Spartenauswahl_Transport.TextBox_Spartenauswahl_Transport_Rabatte_SR_Change
End Sub


Private Sub TextBox_Spartenauswahl_Transport_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
   
    
             'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR"), "General Number"
End Sub



Private Sub TextBox_Spartenauswahl_Transport_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
     'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC"), "General Number"
End Sub

Private Sub TextBox_Spartenauswahl_Transport_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    
    M_HBB_Spartenauswahl_Transport.TextBox_Spartenauswahl_Transport_Rabatte_VPC_Change
End Sub

'Transport ENDE


'BU ANFANG

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_Change
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Change
End Sub


Private Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten_Click()
If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.CheckBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten_Click
End Sub

Private Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit_Change
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR"), KeyAscii, True)
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR_Change
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR_Exit
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC_Change
End Sub

Private Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_BU.CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel_Change
End Sub


'BU ENDE


'Haftpflicht ANFANG

Private Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR"), KeyAscii, True)
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC"), KeyAscii, False)
End Sub


Private Sub OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb_Change
End Sub

Private Sub OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_HGHP_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS_Change
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert_Change
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert_Exit
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR_Change
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR_Exit
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC_Change
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Bau_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Bau_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Gastronomie_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Gastronomie_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_GastronomiePauschalreisen_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_GastronomiePauschalreisen_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handel_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handel_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handwerk_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handwerk_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebe_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebe_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebeTaetigkeiten_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebeTaetigkeiten_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Produktion_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Produktion_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS_Change
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_Change
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_Exit
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_Change
End Sub

Private Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv_Change
End Sub


Private Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_Haft.CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort_Change
End Sub
'Haftpflicht ENDE


'Rechtsschutz ANFANG

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv_Change
End Sub

Private Sub TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter"), KeyAscii, False)
End Sub

Private Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR"), KeyAscii, True)
End Sub

Private Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC"), KeyAscii, False)
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_AVRS_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.CheckBox_Spartenauswahl_Rechtsschutz_AVRS_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_VD_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.CheckBox_Spartenauswahl_Rechtsschutz_VD_Change
End Sub

Private Sub ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_Verkehrsrisiko_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.ComboBox_Spartenauswahl_Rechtsschutz_Verkehrsrisiko_Change
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_Cyber_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.ComboBox_Spartenauswahl_Rechtsschutz_Cyber_Change
End Sub

Private Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR_Change
End Sub

Private Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR_Exit
End Sub

Private Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC_Change
End Sub

Private Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC_Exit
End Sub

Private Sub CheckBox_Spartenauswahl_Rechtsschutz_HBBPlus_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort_Change
End Sub

Private Sub TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_Change
End Sub

Private Sub TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_RS.TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_Exit
End Sub


'Rechtsschutz ENDE

'KFZ Rechtsschutz ANFANG

Private Sub CheckBox_Spartenauswahl_KFZRechtsschutz_FzgVertragsRS_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.CheckBox_Spartenauswahl_KFZRechtsschutz_FzgVertragsRS_Change
End Sub

Private Sub CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht_Change
End Sub

Private Sub CommandButton_Spartenauswahl_KFZRechtsschutz_Kennzeichen_Click()
    If DatatStatusInitial Then Exit Sub
    oF_HBB_Kennzeichen_KFZRS.Show
End Sub

Private Sub CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach_Change
End Sub

Private Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR_Change
End Sub

Private Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR_Exit
End Sub

Private Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR"), KeyAscii, True)
End Sub

Private Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC_Change
End Sub

Private Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC_Exit
End Sub

Private Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC"), KeyAscii, False)
End Sub


'KFZ Rechtsschutz ENDE

'GMRS ANFANG
Private Sub CommandButton_Spartenauswahl_GMRS_Adressen_Click()
 If DatatStatusInitial Then Exit Sub
    oF_HBB_GMRS_Adressen.Show
End Sub


Private Sub TextBox_Spartenauswahl_Transport_Rabatte_Genehmigt_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Private Sub TextBox_Spartenauswahl_GMRS_Rabatte_SR_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_GMRS.TextBox_Spartenauswahl_GMRS_Rabatte_SR_Change
End Sub



Private Sub Textbox_Spartenauswahl_GMRS_Rabatte_VPC_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_GMRS.Textbox_Spartenauswahl_GMRS_Rabatte_VPC_Change
 
End Sub

Private Sub TextBox_Spartenauswahl_GMRS_Rabatte_SR_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_SR"), KeyAscii, False)
End Sub


Private Sub TextBox_Spartenauswahl_GMRS_Rabatte_VPC_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_VPC"), KeyAscii, False)
End Sub
'GMRS ENDE


'Cyber ANFANG

Private Sub CommandButton_Cyber_Risikofragen_Click()
    If DatatStatusInitial Then Exit Sub
    oF_HBB_Cyber_Risikofragen.Show
End Sub

Private Sub OptionButton_Cyber_BU_J_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Cyber.OptionButton_Cyber_BU_Change
End Sub

Private Sub OptionButton_Cyber_BU_N_Click()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Cyber.OptionButton_Cyber_BU_Change
End Sub

Private Sub ComboBox_Cyber_SB_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Cyber.ComboBox_Cyber_SB_Change
End Sub

Private Sub ComboBox_Cyber_VSSumme_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Cyber.ComboBox_Cyber_VSSumme_Change
End Sub

Private Sub TextBox_Cyber_Umsatz_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_Cyber.TextBox_Cyber_Umsatz_Change
End Sub

Private Sub TextBox_Cyber_Umsatz_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_Cyber_Umsatz"), KeyAscii, False)
End Sub

Private Sub TextBox_Cyber_Umsatz_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    M_HBB_Cyber.TextBox_Cyber_Umsatz_Exit
End Sub


'CYBER Ende



'VT Lizenzfunktionen
Private Sub TextBox_SuperUser_GDRabatt_BU_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_BU_Change
End Sub

Private Sub TextBox_SuperUser_GDRabatt_BU_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_BU_Exit
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Haftpflicht_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Haftpflicht_Change
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Haftpflicht_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Haftpflicht_Exit
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Rechtsschutz_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Rechtsschutz_Change
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Rechtsschutz_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Rechtsschutz_Exit
End Sub

Private Sub TextBox_SuperUser_GDRabatt_KFZRechtsschutz_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_KFZRechtsschutz_Change
End Sub

Private Sub TextBox_SuperUser_GDRabatt_KFZRechtsschutz_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_KFZRechtsschutz_Exit
End Sub


Private Sub TextBox_SuperUser_GDRabatt_Sach_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Sach_Change
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Sach_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Sach_Exit
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Technik_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Technik_Change
End Sub
Private Sub TextBox_SuperUser_GDRabatt_Transport_Change()
 If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Transport_Change
End Sub

Private Sub TextBox_SuperUser_GDRabatt_GMRS_Change()
If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_GMRS_Change
End Sub
Private Sub TextBox_SuperUser_GDRabatt_Technik_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Technik_Exit
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Transport_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_Transport_Exit
End Sub

Private Sub TextBox_SuperUser_GDRabatt_GMRS_Exit(ByVal Cancel As MSForms.ReturnBoolean)
 If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_GDRabatt_GMRS_Exit
End Sub

Private Sub TextBox_SuperUser_Gesamtpraemie_Praemienanpassung_Change()
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_Gesamtpraemie_Praemienanpassung_Change
End Sub

Private Sub TextBox_SuperUser_Gesamtpraemie_Praemienanpassung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If DatatStatusInitial Then Exit Sub
    M_HBB_SuperUser.TextBox_SuperUser_Gesamtpraemie_Praemienanpassung_Exit
End Sub

Private Sub TextBox_SuperUser_GDRabatt_BU_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU"), KeyAscii, True)
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Haftpflicht_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht"), KeyAscii, True)
End Sub

Private Sub TextBox_SuperUser_GDRabatt_KFZRechtsschutz_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz"), KeyAscii, True)
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Rechtsschutz_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz"), KeyAscii, True)
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Sach_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach"), KeyAscii, True)
End Sub

Private Sub TextBox_SuperUser_GDRabatt_Technik_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik"), KeyAscii, True)
End Sub


Private Sub TextBox_SuperUser_GDRabatt_Transport_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
 KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport"), KeyAscii, True)
End Sub

Private Sub TextBox_SuperUser_GDRabatt_GMRS_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS"), KeyAscii, True)
End Sub


Private Sub Frame_Spartenauswahl_Sachversicherung_Rabatte_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    M_HBB_Spartenauswahl_Sach.Frame_Spartenauswahl_Sachversicherung_Rabatte_Exit
End Sub

Private Sub Frame_Spartenauswahl_Technik_Rabatte_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    M_HBB_Spartenauswahl_Technik.Frame_Spartenauswahl_Technik_Rabatte_Exit
End Sub


Private Sub Frame4_Exit(ByVal Cancel As MSForms.ReturnBoolean)

    M_HBB_Spartenauswahl_Transport.Frame_Spartenauswahl_Transport_Rabatte_Exit
End Sub

Private Sub Frame_Spartenauswahl_Betriebsunterbrechung_Rabatte_Exit(ByVal Cancel As MSForms.ReturnBoolean)
      M_HBB_Spartenauswahl_BU.Frame_Spartenauswahl_BU_Rabatte_Exit
End Sub

Private Sub Frame_Spartenauswahl_Haftpflicht_Rabatte_Exit(ByVal Cancel As MSForms.ReturnBoolean)
     M_HBB_Spartenauswahl_Haft.Frame_Spartenauswahl_Haft_Rabatte_Exit
End Sub

Private Sub Frame_Spartenauswahl_Rechtsschutz_Rabatte_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    M_HBB_Spartenauswahl_RS.Frame_Spartenauswahl_Rechtsschutz_Rabatte_Exit
End Sub

Private Sub Frame_Spartenauswahl_KFZRechtsschutz_Rabatte_Exit(ByVal Cancel As MSForms.ReturnBoolean)
     M_HBB_Spartenauswahl_KFZRS.Frame_Spartenauswahl_KFZRS_Rabatte_Exit
End Sub
Private Sub Frame2_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    M_HBB_Spartenauswahl_GMRS.Frame_Spartenauswahl_GMRS_Rabatte_Exit
End Sub

'Command Buttons

Private Sub CommandButton_NeuesOffert_Click()
    
    M_HBB_SuperUser.Neu
    M_HBB_AllgemeineDaten.Neu
    M_HBB_Spartenauswahl_Sach.Neu
    M_HBB_SachVorteilsdeckung.Neu
    M_HBB_SachSublimit.Neu
    M_HBB_Summenermittlung.Neu
    M_HBB_Spartenauswahl_Technik.Neu
    M_HBB_Spartenauswahl_Transport.Neu
    M_HBB_Spartenauswahl_BU.Neu
    M_HBB_Spartenauswahl_Haft.Neu
    M_HBB_Spartenauswahl_RS.Neu
    M_HBB_Spartenauswahl_KFZRS.Neu
    M_HBB_Spartenauswahl_GMRS.Neu
    M_HBB_Cyber.Neu
    M_HBB_Cyber_Risikofragen.Neu
    M_HBB_Uebersicht.Neu
    
End Sub

'Command Buttons Ende




Attribute VB_Name = "F_HBB_Allrisk"
Attribute VB_Base = "0{133BCD94-E196-43D0-ABEA-12BF194A0BCF}{93832681-02DD-440C-B31B-4BE1C64595AB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton_Fertig_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    
        
    If ((F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").value = 0 Or F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").value = "") _
         And F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version3")) Then
         
        MsgBox "Bitte geben Sie eine Versicherungssumme ein."
        Exit Sub
    End If
    
    If Not (F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version1") Or F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version2") Or F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version3")) Then
        MsgBox "Bitte w|fffd|hlen Sie eine Option aus."
        Exit Sub
    End If
    
    
    M_HBB_Allrisk.SchreibeAllrisk
    Me.Hide
End Sub



Private Sub OptionButton_Allrisk_Version1_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Allrisk.OptionButton_Allrisk_Version_Click
End Sub

Private Sub OptionButton_Allrisk_Version2_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Allrisk.OptionButton_Allrisk_Version_Click
End Sub

Private Sub OptionButton_Allrisk_Version3_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Allrisk.OptionButton_Allrisk_Version3_Click
End Sub

Private Sub TextBox_Allrisk_VersicherungssummeVersion3_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Allrisk.TextBox_Allrisk_VersicherungssummeVersion3_Change

End Sub

Private Sub TextBox_Allrisk_VersicherungssummeVersion3_Exit(ByVal Cancel As MSForms.ReturnBoolean)
     If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Allrisk.TextBox_Allrisk_VersicherungssummeVersion3_Exit
End Sub

Private Sub TextBox_Allrisk_VersicherungssummeVersion3_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3"), KeyAscii, False)
        M_HBB_Spartenauswahl_Sach.BerechneNeu
End Sub

Attribute VB_Name = "F_HBB_Cyber_Risikofragen"
Attribute VB_Base = "0{1692F101-8CD3-4D33-8066-CC0D71D91059}{9EBB8A75-8CF5-4E16-9B16-762A0671786D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit




Private Sub CommandButton_Obliegenheiteneinblenden_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    
    M_HBB_Cyber_Risikofragen.CommandButton_Obliegenheiteneinblenden_Click
    
End Sub

Private Sub UserForm_Activate()
    F_HBB.PushDataStatus DataStatus.Load
    
    M_HBB_Cyber_Risikofragen.UserForm_OnActivation
    M_HBB_Cyber_Risikofragen.RisikofragenChange
    
    F_HBB.PopDataStatus
    
End Sub

Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
    M_Global_Form.InfoButtonEventHandler_Initialize Me, M_Global_Form.F_HBB_Cyber_Risikofragen
    M_HBB_Cyber_Risikofragen.Initialize
    
End Sub



Private Sub TextBox_Polizzennummer_Polizzennummer_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If F_HBB.DatatStatusInitial Then Exit Sub
    KeyAscii = M_Global.CheckKeyPressedPolizzenNr( _
        Me.Controls("TextBox_Polizzennummer_Polizzennummer"), KeyAscii, False)
End Sub

Private Sub TextBox_Polizzennummer_Polizzennummer_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.TextBox_Polizzennummer_Polizzennummer_Change
End Sub

Private Sub CommandButton_OK_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    Me.Hide
    M_HBB_Cyber.BerechneNeu
    M_HBB_Cyber.AktiviereCyberBerechnung
End Sub



'Event Handler
'Allgemeine Risikofragen ANFANG

Private Sub OptionButton_RisikofragenAllgemein_F1_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub


Private Sub OptionButton_RisikofragenAllgemein_F1_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenAllgemein_F2_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenAllgemein_F2_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub


'Allgemeine Risikofragen ENDE

'Risikofragen GKL2 ANFANG


Private Sub OptionButton_RisikofragenGKL2_F1_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F1_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F2_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F2_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F3_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F3_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F4_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F4_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F5_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F5_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F6_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F6_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F7_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.F7Change
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F7_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.F7Change
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F8_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL2_F8_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

'Risikofragen GKL2 ENDE

'Risikofragen GKL3 ANFANG

Private Sub OptionButton_RisikofragenGKL3_F1_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL3_F1_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL3_F2_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL3_F2_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL3_F3_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL3_F3_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL3_F4_J_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

Private Sub OptionButton_RisikofragenGKL3_F4_N_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub

'Risikofragen GKL3 ENDE
Attribute VB_Name = "F_HBB_GMRS_Adresse"
Attribute VB_Base = "0{06EE314F-E5FB-4ED6-A85E-DE82A90E2C59}{79EFC0EA-92B1-4B9A-9CED-FA020F2C5A4A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit



Private Sub CommandButton_GMRS_Versicherungsorthinzufuegen_Click()
        M_HBB_Spartenauswahl_GMRS.CommandButton_GMRS_Versicherungsorthinzufuegen_Click
End Sub

Private Sub UserForm_Activate()

    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutzGemietet_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_WohnunVermietet_Click

    If F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value = "" And F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Strasse").value = "" And F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Strasse").value = "" Then
        Frame_GMRS_Versicherungsort.Visible = False
        Exit Sub
    End If
    Frame_GMRS_Versicherungsort.Visible = True
    'Versicherungsorte f|fffd|llen
    If Not F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value = "" Then
        CheckBox_GMRS_Versicherungsort1.Caption = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value & " " & _
                                                  F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_PLZ").value & " " & F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Ort").value
        CheckBox_GMRS_Versicherungsort1.Visible = True
                                                  
    Else
        CheckBox_GMRS_Versicherungsort1.Caption = "1. Versicherungsort"
        CheckBox_GMRS_Versicherungsort1.Visible = False
    End If
    
    If Not F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Strasse").value = "" Then
        CheckBox_GMRS_Versicherungsort2.Caption = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Strasse").value & " " & _
                                                  F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_PLZ").value & " " & F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Ort").value
        CheckBox_GMRS_Versicherungsort2.Visible = True
    Else
        CheckBox_GMRS_Versicherungsort2.Caption = "2. Versicherungsort"
        CheckBox_GMRS_Versicherungsort2.Visible = False
    End If
    
    If Not F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Strasse").value = "" Then
        CheckBox_GMRS_Versicherungsort3.Caption = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Strasse").value & " " & _
                                                  F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_PLZ").value & " " & F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Ort").value
       CheckBox_GMRS_Versicherungsort3.Visible = True
    Else
        CheckBox_GMRS_Versicherungsort3.Caption = "3. Versicherungsort"
        CheckBox_GMRS_Versicherungsort3.Visible = False
    End If
        



    


End Sub

Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
    M_Global_Form.InfoButtonEventHandler_Initialize Me, M_Global_Form.F_HBB_GMRS_Adressen
    
    With F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen")
        .AddItem "Wohnung Selbstgenutzt"
        .AddItem "Wohnung Vermietet"
        .AddItem "Gewerblilch Genutzte Einheit Vermietet"
        .AddItem "Gewerblich Genutzte Einheit Eigentum"
        .AddItem "Gewerblich Genutzte Einheit Gemietet"
    End With
    
        'Beim |fffd|ffnen schauen ob etwas angehakt ist und dann auf Visible setzen
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutzGemietet_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt_Click
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_WohnunVermietet_Click
    
    
End Sub

'Verhindern, dass man X klicken kann um Form zu schlie|fffd|en
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = 0 Then Cancel = True
End Sub


'Fertig geklickt
Private Sub CommandButton_Fertig_Click()
'TODO Speichern der einzelnen Felder
    M_HBB_Spartenauswahl_GMRS.CommandButton_Fertig_Click
    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt").value And _
        (F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt").value < 1 Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt").value = "" _
        Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value = "") Then
        MsgBox "Bitte f|fffd|llen Sie alle orange markierten Felder aus!"
        Exit Sub
    End If
    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnunVermietet").value And _
        (F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet").value < 1 Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet").value = "" _
        Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value = "") Then
        MsgBox "Bitte f|fffd|llen Sie alle orange markierten Felder aus!"
        Exit Sub
    End If
    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum").value And _
        (F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche").value < 1 Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche").value = "" _
        Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value = "") Then
        MsgBox "Bitte f|fffd|llen Sie alle orange markierten Felder aus!"
        Exit Sub
    End If
    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGentztGemietet").value And _
        (F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet").value < 1 Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet").value = "" _
        Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value = "") Then
        MsgBox "Bitte f|fffd|llen Sie alle orange markierten Felder aus!"
        Exit Sub
    End If
    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet").value And _
        (F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet").value < 1 Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet").value = "" _
        Or F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value = "") Then
        MsgBox "Bitte f|fffd|llen Sie alle orange markierten Felder aus!"
        Exit Sub
    End If
    
    Me.Hide
End Sub

'Eventhandler
Private Sub CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt_Click()
   If F_HBB.DatatStatusInitial Then Exit Sub
   
   M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt_Click
End Sub

Private Sub CheckBox_Spartenauswahl_GMRS_WohnunVermietet_Click()
   If F_HBB.DatatStatusInitial Then Exit Sub
   
   M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_WohnunVermietet_Click
End Sub

Private Sub CheckBox_Spartenauswahl_GMRS_GewGentztGemietet_Click()
   If F_HBB.DatatStatusInitial Then Exit Sub
       
    M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutzGemietet_Click
End Sub

Private Sub CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum_Click()
   If F_HBB.DatatStatusInitial Then Exit Sub
   
   M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum_Click
End Sub

Private Sub CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet_Click()
   If F_HBB.DatatStatusInitial Then Exit Sub
   
   M_HBB_Spartenauswahl_GMRS.CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet_Click
End Sub


'Eventhandler |fffd|berpr|fffd|fung ob Ziffern eingegeben wurden

Private Sub TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If F_HBB.DatatStatusInitial Then Exit Sub
    
     KeyAscii = M_Global.CheckKeyPressed(F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If F_HBB.DatatStatusInitial Then Exit Sub
    
     KeyAscii = M_Global.CheckKeyPressed(F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet"), KeyAscii, False)
End Sub


Private Sub TextBox_Spartenauswahl_GMRS_Nutzflaeche_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If F_HBB.DatatStatusInitial Then Exit Sub
    
    KeyAscii = M_Global.CheckKeyPressed(F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche"), KeyAscii, False)
End Sub

Private Sub TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

    If F_HBB.DatatStatusInitial Then Exit Sub
    
    KeyAscii = M_Global.CheckKeyPressed(F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet"), KeyAscii, False)

End Sub

Private Sub TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    If F_HBB.DatatStatusInitial Then Exit Sub
    KeyAscii = M_Global.CheckKeyPressed(F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet"), KeyAscii, False)
End Sub


Private Sub TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub


Private Sub TextBox_GMRS_AdresseWohnungSelbstgenutzt_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Private Sub TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Private Sub TextBox_GMRS_AdresseWohnungVermietet_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Private Sub TextBox_Spartenauswahl_GMRS_Nutzflaeche_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Private Sub TextBox_GMRS_GewGenEinheitEigentum_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub


Private Sub TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Private Sub TextBox_GMRS_GewGenEinheitGemietet_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Private Sub TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub
Private Sub TextBox_GMRS_GewGenEinheitVermietet_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet"), "", weiss, orange
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Attribute VB_Name = "F_HBB_Info"
Attribute VB_Base = "0{9878F9B1-42EA-4187-B400-22A21C2D9C6D}{B0E659B0-2A92-4587-B877-3F043909BD3E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Public InfoHeader As String
Public InfoText As String

Private Sub UserForm_Activate()
    Me.Left = F_HBB.Left + (F_HBB.Width - Me.Width) / 2
    
    Me.Controls("Label_Info_Ueberschrift").Caption = InfoHeader
    Me.Controls("TextBox_Info_Text").value = InfoText
    Me.Controls("TextBox_Info_Text").SetFocus
    Me.Controls("TextBox_Info_Text").CurLine = 0
    
    
End Sub


Private Sub CommandButton_Info_OK_Click()
    Me.Hide
End Sub


Attribute VB_Name = "F_HBB_Leistungsueberischt_Tech"
Attribute VB_Base = "0{6E97F813-ABB5-4945-A1FB-1B59A51A86FF}{F0BA801F-18AA-46C1-8D85-35E75B66FC7F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton_Close_Click()
    Me.Hide
End Sub



Private Sub CommandButton_ViewBetrieb_Click()
    Dim o As Variant
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_Betrieb")
        o.Verb xlVerbPrimary
        On Error GoTo 0
    End With
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
End Sub

Private Sub CommandButton_ViewBuero_Click()
    Dim o As Variant
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_Buero")
        o.Verb xlVerbPrimary
        On Error GoTo 0
    End With
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
End Sub

Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
End Sub
Attribute VB_Name = "F_HBB_Leistungsuebersicht_Sach"
Attribute VB_Base = "0{F7FB5EF0-3F75-4080-A812-AB34A16B4A5F}{D38E559D-4332-4492-8ACC-02016B1D3F8B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub CommandButton_Close_Click()
    Me.Hide
End Sub

Private Sub CommandButton_ViewED_Click()
    Dim o As Variant
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_ED")
        o.Verb xlVerbPrimary
        On Error GoTo 0
    End With
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
End Sub

Private Sub CommandButton_ViewFeuer_Click()
    Dim o As Variant
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_Feuer")
        o.Verb xlVerbPrimary
        On Error GoTo 0
    End With
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With

End Sub

Private Sub CommandButton_ViewGlasbruch_Click()
    Dim o As Variant
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_Glasbruch")
        o.Verb xlVerbPrimary
        On Error GoTo 0
    End With
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
End Sub

Private Sub CommandButton_ViewLW_Click()
    Dim o As Variant
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_LW")
        o.Verb xlVerbPrimary
        On Error GoTo 0
    End With
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With

End Sub

Private Sub CommandButton_ViewSturm_Click()
    Dim o As Variant
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_Sturm")
        o.Verb xlVerbPrimary
        On Error GoTo 0
    End With
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
End Sub

Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
End Sub
Attribute VB_Name = "F_HBB_RS_Kennzeichen"
Attribute VB_Base = "0{EBE482E1-3FCA-4DEF-B2A8-AD30F01EFA0E}{727C565F-702D-416D-99EA-18B2306483D5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit




Private Sub UserForm_Activate()
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_PKW_Change
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_LKW_Change
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_Sattelzug_Change
End Sub

'UserForm Initialize

Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
    
    ComboBox_Kennzeichen_PKW_Anzahl_FillData
    ComboBox_Kennzeichen_LKW_Anzahl_FillData
    ComboBox_Kennzeichen_Sattelzug_Anzahl_FillData
   
End Sub


Private Sub ComboBox_FillWithNumbers(comboBox As MSForms.comboBox, min As Integer, max As Integer)
    Dim i As Integer
    For i = min To max
        comboBox.AddItem (i)
    Next i
End Sub



Private Sub ComboBox_Kennzeichen_PKW_Anzahl_FillData()
    ComboBox_FillWithNumbers Me.Controls("ComboBox_Kennzeichen_PKW_Anzahl"), 0, 100
    Me.Controls("ComboBox_Kennzeichen_PKW_Anzahl").ListIndex = 0
End Sub


Private Sub ComboBox_Kennzeichen_LKW_Anzahl_FillData()
    ComboBox_FillWithNumbers Me.Controls("ComboBox_Kennzeichen_LKW_Anzahl"), 0, 100
    Me.Controls("ComboBox_Kennzeichen_LKW_Anzahl").ListIndex = 0
End Sub

Private Sub ComboBox_Kennzeichen_Sattelzug_Anzahl_FillData()
    ComboBox_FillWithNumbers Me.Controls("ComboBox_Kennzeichen_Sattelzug_Anzahl"), 0, 100
    Me.Controls("ComboBox_Kennzeichen_Sattelzug_Anzahl").ListIndex = 0
End Sub

'UserForm Finish

Private Sub CommandButton_Fertig_Click()
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_PKW_Change
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_LKW_Change
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_Sattelzug_Change
    
    If F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_PKW_Anzahl").ListIndex > 0 And F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_PKW_Kennzeichen").value = "" Then
        MsgBox "Bitte f|fffd|llen Sie alle gelb markierten Felder aus"
        Exit Sub
    End If
    
    If F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_LKW_Anzahl").ListIndex > 0 And F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_LKW_Kennzeichen").value = "" Then
        MsgBox "Bitte f|fffd|llen Sie alle gelb markierten Felder aus"
        Exit Sub
    End If
    
    If F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_Sattelzug_Anzahl").ListIndex > 0 And F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_Sattelzug_Kennzeichen").value = "" Then
        MsgBox "Bitte f|fffd|llen Sie alle gelb markierten Felder aus"
        Exit Sub
    End If
    
    Me.Hide
End Sub


'Helpers
Public Property Get Rechenbar() As Boolean
    Rechenbar = Me.Controls("Textbox_Rechenbar").value
End Property




'Event Handler


Private Sub ComboBox_Kennzeichen_PKW_Anzahl_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_PKW_Change
End Sub

Private Sub ComboBox_Kennzeichen_LKW_Anzahl_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_LKW_Change
End Sub

Private Sub ComboBox_Kennzeichen_Sattelzug_Anzahl_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_Sattelzug_Change
End Sub

Private Sub TextBox_Kennzeichen_PKW_Kennzeichen_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_PKW_Change
End Sub

Private Sub TextBox_Kennzeichen_LKW_Kennzeichen_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_LKW_Change
End Sub

Private Sub TextBox_Kennzeichen_Sattelzug_Kennzeichen_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Spartenauswahl_KFZRS.ComboBox_Kennzeichen_Sattelzug_Change
End Sub
Attribute VB_Name = "F_HBB_Sach_Sublimits"
Attribute VB_Base = "0{80FF02AF-1F06-4DA9-95ED-1DC20EDD1F6E}{FC240F0F-7260-4011-9339-041370A0F9A3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit




Private Sub CommandButton_Fertig_Click()
    Me.Hide
End Sub


Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
    M_Global_Form.InfoButtonEventHandler_Initialize Me, M_Global_Form.F_HBB_Sach_Sublimits_ID

End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Change False
End Sub

Private Sub CheckBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreienmitTeildiebstahl_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.CheckBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreienmitTeildiebstahl_Click
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung"), KeyAscii, False)
End Sub


Private Sub TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung"), KeyAscii, False)
End Sub


Private Sub TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung"), KeyAscii, False)

End Sub

Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung"), KeyAscii, False)
End Sub



Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung"), KeyAscii, False)
End Sub


Private Sub TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung"), KeyAscii, False)
End Sub


Private Sub TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
            F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
            F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung"), KeyAscii, False)
End Sub



Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
     KeyAscii = M_Global.CheckKeyPressed( _
            F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung"), KeyAscii, False)
End Sub

Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Change False
End Sub


Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Exit
End Sub


Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Exit
End Sub


Private Sub TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Exit
End Sub


Private Sub TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Exit
End Sub


Private Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Exit
End Sub

Private Sub TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Exit
End Sub


Private Sub TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Exit
End Sub


Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung_Exit
End Sub


Private Sub TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Change False
End Sub

Private Sub TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Change False
End Sub

Attribute VB_Name = "F_HBB_Sach_Vorteilsdeckungen"
Attribute VB_Base = "0{F99F3CB3-9DB0-4BE8-BF6C-A02A4CFEBD6E}{41963381-41E1-4A9F-99AE-7A4971CD51FC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private Sub CommandButton_Fertig_Click()
    Me.Hide
End Sub


Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
    M_Global_Form.InfoButtonEventHandler_Initialize Me, M_Global_Form.F_HBB_Sach_Vorteilsdeckungen_ID
End Sub

'Eventhandler

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro_Change
End Sub

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Handel_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Handel_Change
End Sub

'Feuer

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastro_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastronomie_Change
End Sub

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel_Change
End Sub

'Sturm

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro_Change
End Sub

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel_Change
End Sub

'ED

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro_Change
End Sub

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel_Change
End Sub

'Glasbruch

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro_Change
End Sub

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel_Change
End Sub

'Leitungswasser

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro_Change
End Sub

Private Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel_Click()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_SachVorteilsdeckung.CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel_Change
End Sub


Attribute VB_Name = "F_HBB_Summenermittlung"
Attribute VB_Base = "0{A990925D-1ACD-4DD9-8035-CF9BB0A19652}{E07D6139-15F0-4C4E-97EE-BCB607EAAB69}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub ComboBox_Summenermittlung_Gebaude1_EG_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude1_OG1_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude1_OG2_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude1_OG3_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude1_UG_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude2_EG_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude2_OG1_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude2_OG2_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude2_OG3_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude2_UG_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude3_EG_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude3_OG1_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude3_OG2_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude3_OG3_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub ComboBox_Summenermittlung_Gebaude3_UG_Change()
    If F_HBB.DatatStatusInitial Then Exit Sub
    M_HBB_Summenermittlung.ComboBox_Changed
End Sub

Private Sub CommandButton_Fertig_Click()
    Me.Hide
End Sub



Private Sub TextBox_Summenermittlung_Gebaude1_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_EGQM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_EGQM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_EGQM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_OG1QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_OG1QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG1QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_OG2QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_OG2QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG2QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_OG3QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_OG3QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG3QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_UGQM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude1_UGQM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
    KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_UGQM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Gebaude2_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
     
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_EGQM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_EGQM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_EGQM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_OG1QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_OG1QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG1QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_OG2QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_OG2QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG2QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_OG3QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_OG3QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG3QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_UGQM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude2_UGQM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_UGQM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Gebaude3_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_EGQM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_EGQM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_EGQM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_OG1QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_OG1QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG1QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_OG2QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_OG2QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG2QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_OG3QM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_OG3QM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG3QM"), KeyAscii, False)
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_UGQM_Change()
     If F_HBB.DatatStatusInitial Then Exit Sub
     M_HBB_Summenermittlung.QM_Changed
End Sub

Private Sub TextBox_Summenermittlung_Geb|fffd|ude3_UGQM_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
        KeyAscii = M_Global.CheckKeyPressed( _
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_UGQM"), KeyAscii, False)
End Sub

Private Sub UserForm_Initialize()
    M_Global_Form.subRemoveCloseButton Me
   M_HBB_Summenermittlung.FillComboBoxes

End Sub
Attribute VB_Name = "F_Speichern"
Attribute VB_Base = "0{A8FA73DC-19B7-44EC-810C-6CB5EDC73EFA}{0C22DB7D-444C-4303-A832-FD63AF52B2FF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Public Enum myF_SpeichernResult
    Invalid = 0
    Speichern = 1
    SpeichernUnter = 2
    NichtSpeichern = 3
    Abbruch = 4
End Enum

Public speichernModus As myF_SpeichernResult


Private Sub UserForm_Initialize()
    Me.speichernModus = Invalid
End Sub


Private Sub UserForm_Activate()
    Dim bIsVorlage As Boolean
    bIsVorlage = Sheet_AllgemeineDaten.IsVorlage

    'Speichern ist nicht m|fffd|glich, wenn es sich um die Vorlage handelt
    Me.Controls("CommandButton_Speichern").Visible = Not bIsVorlage
    Me.Controls("Label_BitteWaehlen").Visible = bIsVorlage

End Sub


Private Sub CommandButton_Speichern_Click()
    Me.speichernModus = Speichern
    Me.Hide
End Sub


Private Sub CommandButton_SpeichernUnter_Click()
    Me.speichernModus = SpeichernUnter
    Me.Hide
End Sub


Private Sub CommandButton_NichtSpeichern_Click()
    Me.speichernModus = NichtSpeichern
    Me.Hide
End Sub


Private Sub CommandButton_Cancel_Click()
    Me.speichernModus = Abbruch
    Me.Hide
End Sub




Attribute VB_Name = "M_Global"
Option Explicit

'GLOBALE KONSTANTEN

'Seiten der Multipage
Public Const global_Multipage_AllgemeineDaten As Long = 0
Public Const global_Mulitpage_Spartenauswahl As Long = 1
Public Const global_Mulitpage_Cyber As Long = 2
Public Const global_Multipage_VTLizenz As Long = 3

'Tabellenbl|fffd|tter
Public Const global_Tabellenblatt_AllgemeineDaten As String = "AllgemeineDaten"
Public Const global_Tabellenblatt_Sachversicherung As String = "Sachversicherung"
Public Const global_Tabellenblatt_Betriebsart As String = "Betriebsart"
Public Const global_Tabellenblatt_Uebersicht As String = "Uebersicht"
Public Const global_Tabellenblatt_Technik As String = "Technik"
Public Const global_Tabellenblatt_BU As String = "BU"
Public Const global_Tabellenblatt_Haftpflicht As String = "Haftpflicht"
Public Const global_Tabellenblatt_Rechtsschutz As String = "Rechtsschutz"
Public Const global_Tabellenblatt_KFZRechtsschutz As String = "KFZRechtsschutz"
Public Const global_Tabellenblatt_Berechnungsblatt As String = "Berechnungsblatt"
Public Const global_Tabellenblatt_Offert As String = "Offert"
Public Const global_Tabellenblatt_Start As String = "Start"
Public Const global_Tabellenblatt_OleObjects As String = "OLEObjects"
Public Const global_Tabellenblatt_Lizenz As String = "Lizenz"
Public Const global_Tabellenblatt_Cyber As String = "Cyber"
Public Const global_Tabellenblatt_Transport As String = "Transport"
Public Const global_Tabellenblatt_Summenermittlung As String = "Summenermittlung"

Public Const global_Tabellenblatt_IPIDFeuer As String = "IPID_Feuer"
Public Const global_Tabellenblatt_IPIDSturm As String = "IPID_Sturm"
Public Const global_Tabellenblatt_IPIDLeitungswasser As String = "IPID_Leitungswasser"
Public Const global_Tabellenblatt_IPIDGlasbruch As String = "IPID_Glasbruch"
Public Const global_Tabellenblatt_IPIDEinbruchdiebstahl As String = "IPID_Einbruchdiebstahl"
Public Const global_Tabellenblatt_IPIDHaftpflicht As String = "IPID_Haftpflicht"
Public Const global_Tabellenblatt_IPIDRechtsschutz As String = "IPID_Rechtsschutz"
Public Const global_Tabellenblatt_IPIDBUFeuer As String = "IPID_BU_Feuer"
Public Const global_Tabellenblatt_IPIDBUElementar As String = "IPID_BU_Elementar"
Public Const global_Tabellenblatt_IPIDTechnik As String = "IPID_Technik"
Public Const global_Tabellenblatt_IPIDCyber As String = "IPID_Cyber"
Public Const global_Tabellenblatt_IPIDTransport As String = "IPID_Transportversicherung"


Public Const global_NullEuroString As String = "0,00"
Public Const global_NullBoolean As String = "NULL"

'Farben
'Zum Ermitteln des Decimal Wertes folgende Zeile im Immediate Window eingeben:
' ?RGB(r,g,b)
Public Enum Color
    Rot = 255 'rgb(255, 0, 0)
    orange = 42495
    weiss = 16777215
    HelvetiaBlau = 16769505 'RGB(225, 225, 255)
    HelvetiaGruen = 14542792
    HelvetiaRot = 14868989 'rgb(253, 225, 226)
    HelvetiaLila = 16771837 'rgb(253,234,255)
    CyberLila = 16768993 'RGB(220, 216, 236)
    Schwarz = 3679284
    grau = 15856113
    HellGrau = 14935011
    hellgelb = 14745599 'rgb(255, 255, 224)
End Enum


Public Type PositionType
    Top As Integer
    Left As Integer
    Heigth As Integer
    Width As Integer
End Type


'Tabellen
Public Const global_Tabelle_Sachversicherung_Einbruchdiebstahl_Vorschaeden = "T_Sachversicherung_Einbruchdiebstahl_Vorschaeden"


Public Property Get VSMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VSMaximum = 99000000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VSMaximum = 15000000
    Else
        VSMaximum = 0
    End If
End Property



'aktiviert oder deaktiviert ein Control anhand des Types des Controls
Public Sub EnableControl(ByVal Control As Object, enable As Boolean, Optional enabledBackColor As Color = -1, Optional disabledBackColor As Color = -1)
    With Control
        .enabled = enable
       
        If (enabledBackColor >= 0) And (enable) Then .BackColor = enabledBackColor
        If (disabledBackColor >= 0) And (Not enable) Then .BackColor = disabledBackColor
        
    End With
End Sub


'Alle Element innerhalb eines andere Elements, z.B. Frame, aktivieren oder deaktivieren.
Public Sub EnableControlRecursive(startControl As Object, enable As Boolean)
    'jedes Element innerhalb der Elemente durchsuchen
    Dim cCont As Object
    For Each cCont In startControl.Controls
        EnableControl cCont, enable
    Next cCont
    EnableControl startControl, enable
End Sub




'pr|fffd|ft einen eingebenen Wert sofort nach der Eingabe, formatiert die Zahl
'inputTextBox: Objekt, dessen Value property gepr|fffd|ft wird
'Maximum: Maximum Wert
'Minimum: Minimum Wert
'FormatAs: Werte werden formatiert als
'Silent: es werden keine Messageboxes angezeigt
Public Sub PruefeEingabeChange(inputTextBox As Object, maximum As Long, Optional minimum As Long, Optional formatAs As String, Optional silent As Boolean, Optional title, Optional message)
    Dim inputValue As Double
    
    If (IsMissing(formatAs) Or formatAs = "") Then
        formatAs = "Standard"
    End If
    
    If IsMissing(minimum) Then
        minimum = 0
    End If
    
    If IsMissing(silent) Then
        silent = False
    End If
    
    If IsMissing(title) Then
        title = "Achtung!"
    End If
    
    inputValue = 0
    If IsNumeric(inputTextBox.value) Then
        inputValue = Val(Format(inputTextBox.value, "General Number"))
                
        If inputValue < minimum And minimum = 0 Then
            If (Not silent) Then MsgBox "Der Wert darf nicht neagtiv sein!", vbInformation, title
            inputTextBox.value = Abs(inputValue)
        ElseIf inputValue < minimum Then
            If (Not silent) Then
                If IsMissing(message) Then message = "Der Wert darf " & Format(minimum, formatAs) & " nicht unterschreiten!"
                MsgBox message, vbInformation, title
            End If
            inputTextBox.value = Format(minimum, formatAs)
        ElseIf inputValue > maximum Then
            If (Not silent) Then
                If IsMissing(message) Then message = "Der Wert darf " & Format(maximum, formatAs) & " nicht |fffd|berschreiten."
                MsgBox message, vbInformation, title
            End If
            inputTextBox.value = Format(maximum, formatAs)
        End If
              
    Else
        If inputTextBox.value <> "" Then
            If (Not silent) Then MsgBox "Bitte nur Zahlen eingeben!", vbInformation, title
            inputTextBox.value = Format(0, formatAs)
        End If
    End If
End Sub


'pr|fffd|ft einen eingebenen Wert beim Verlassen des Eingabetextfeldes, formatiert die Zahl
Public Sub PruefeEingabeExit(inputTextBox As Object, Optional formatAs As String)
    If (IsMissing(formatAs) Or formatAs = "") Then
        'formatAs = "Standard"
        formatAs = "Standard"
    End If

    If (inputTextBox.value = "") Then
        inputTextBox.value = Format(0, formatAs)
    ElseIf IsNumeric(inputTextBox.value) Then
        inputTextBox.value = Format(inputTextBox.value, formatAs)
    End If
End Sub

'pr|fffd|ft ob ein Rabattfeld und das zugeh|fffd|rige GenehmigtDurchFeld
Public Sub PruefeRabattGehnehmigtDurch(inputTextBoxRabatt As MSForms.textBox, inputTextBoxGenehmigtDurch As MSForms.textBox)
    With inputTextBoxRabatt
        If (.value > 0) And (inputTextBoxGenehmigtDurch.value = "") Then
            MsgBox "Bitte erfassen Sie zuerst durch wen der VKL/VPC Rabatt genehmigt wurde, bevor Sie den Rabatt eingeben."
            .value = 0
        End If
    End With
End Sub

'Markiert eine Combobox farblich, wenn kein g|fffd|ltiger Wert erfasst wurde
'liefert true, wenn keine g|fffd|tlige Eingabe vorhanden ist
Public Function PruefeFehlendeEingabeComboBox(inputControl As MSForms.comboBox, invalidValue As String, Optional okColor As Color = -1, Optional NokColor As Color = -1) As Boolean
    
    If (inputControl.value = invalidValue) Then
        If (NokColor > -1) Then inputControl.BackColor = NokColor
        PruefeFehlendeEingabeComboBox = True
    Else
        If (okColor > -1) Then inputControl.BackColor = okColor
        PruefeFehlendeEingabeComboBox = False
    End If
End Function


'Markiert eine Combobox farblich, wenn kein g|fffd|ltiger Wert erfasst wurde (anhand des Indexwertes ermittelt)
'liefert true, wenn keine g|fffd|tlige Eingabe vorhanden ist
Public Function PruefeFehlendeEingabeComboBoxMitIndex(inputControl As MSForms.comboBox, invalidIndex As Integer, Optional okColor As Color = -1, Optional NokColor As Color = -1) As Boolean
    
    If (inputControl.ListIndex = invalidIndex) Then
        If (NokColor > -1) Then inputControl.BackColor = NokColor
        PruefeFehlendeEingabeComboBoxMitIndex = True
    Else
        If (okColor > -1) Then inputControl.BackColor = okColor
        PruefeFehlendeEingabeComboBoxMitIndex = False
    End If
End Function



'Markiert eine Textbox farblich, wenn kein g|fffd|ltiger Wert erfasst wurde
'liefert true, wenn keine g|fffd|tlige Eingabe vorhanden ist
Public Function PruefeFehlendeEingabeTextBox(inputControl As MSForms.textBox, invalidValue As String, Optional okColor As Color = -1, Optional NokColor As Color = -1) As Boolean
    
    If (inputControl.value = invalidValue) Then
        If (NokColor > -1) Then inputControl.BackColor = NokColor
        PruefeFehlendeEingabeTextBox = True
    Else
        If (okColor > -1) Then inputControl.BackColor = okColor
        PruefeFehlendeEingabeTextBox = False
    End If
End Function


'Markiert eine Textbox farblich, wenn kein g|fffd|ltiger Wert erfasst wurde
'liefert true, wenn keine g|fffd|tlige Eingabe vorhanden ist
Public Function PruefeEingabeBereichTextBox(inputControl As MSForms.textBox, minValid As Double, maxValid As Double, Optional okColor As Color = -1, Optional NokColor As Color = -1) As Boolean
    Dim curVal As Double
    curVal = Val(CStr(Format(inputControl.value, "General Number")))
    
    If (curVal < minValid Or curVal > maxValid) Then
        If (NokColor > -1) Then inputControl.BackColor = NokColor
        PruefeEingabeBereichTextBox = True
    Else
        If (okColor > -1) Then inputControl.BackColor = okColor
        PruefeEingabeBereichTextBox = False
    End If
End Function



'Pr|fffd|ft zwei OptionButtons: wenn beide false sind, dann werden beide farblich markiert
'liefert true, wenn keine g|fffd|tlige Eingabe vorhanden ist
Public Function PruefeFehlendeEingabeOptionButton(OptionButton1 As MSForms.OptionButton, OptionButton2 As MSForms.OptionButton, Optional okColor As Color = -1, Optional NokColor As Color = -1) As Boolean
    
    If (OptionButton1.value = False) And (OptionButton2.value = False) Then
        If (NokColor > -1) Then
            OptionButton1.BackColor = NokColor
            OptionButton2.BackColor = NokColor
        End If
        PruefeFehlendeEingabeOptionButton = True
    Else
        If (okColor > -1) Then
            OptionButton1.BackColor = okColor
            OptionButton2.BackColor = okColor
        End If
        PruefeFehlendeEingabeOptionButton = False
    End If
End Function



'Pr|fffd|ft zwei Checkboxes: wenn beide false sind, dann werden beide farblich markiert
'liefert true, wenn keine g|fffd|tlige Eingabe vorhanden ist
Public Function PruefeFehlendeEingabeCheckBoxes(CheckBox1 As MSForms.CheckBox, CheckBox2 As MSForms.CheckBox, Optional okColor As Color = -1, Optional NokColor As Color = -1) As Boolean
    
    If (CheckBox1.value = False) And (CheckBox2.value = False) Then
        If (NokColor > -1) Then
            CheckBox1.BackColor = NokColor
            CheckBox2.BackColor = NokColor
        End If
        PruefeFehlendeEingabeCheckBoxes = True
    Else
        If (okColor > -1) Then
            CheckBox1.BackColor = okColor
            CheckBox2.BackColor = okColor
        End If
        PruefeFehlendeEingabeCheckBoxes = False
    End If
End Function

'Pr|fffd|ft ob eine Textbox leer ist
Public Function IsTextBoxEmpty(TextBox1 As MSForms.textBox) As Boolean
    IsTextBoxEmpty = (Trim(TextBox1.value & vbNullString) = vbNullString)
End Function


'erlaubt nur Zahlen und eventuell ein Minus-Zeichen
Public Function CheckKeyPressed(textBox As MSForms.textBox, ByVal KeyAscii As Integer, negativeValuesAllowed As Boolean) As Integer
    Select Case KeyAscii
        Case 45
            'minus only allowed at the beginning of the string
            'If (Len(textBox) > 0) Or (Not negativeValuesAllowed) Then CheckKeyPressed = 0 Else CheckKeyPressed = KeyAscii
            If (InStr(1, textBox, "-", vbTextCompare) > 0) Or (Not negativeValuesAllowed) Then CheckKeyPressed = 0 Else CheckKeyPressed = KeyAscii
        Case 48 To 57
            'no Change
            CheckKeyPressed = KeyAscii
        Case Else
            'change to Nothing
            CheckKeyPressed = 0
    End Select
End Function


'erlaubt nur Zahlen, kein Minus-Zeichen und maximal 10 Stellen
Public Function CheckKeyPressedPolizzenNr(textBox As MSForms.textBox, ByVal KeyAscii As Integer, negativeValuesAllowed As Boolean) As Integer
    'wenn die L|fffd|nge 10 |fffd|berschreitet, Eingabe verwerfen
    If (Len(textBox) > 9 And textBox.SelLength = 0) Then
        CheckKeyPressedPolizzenNr = 0
    Else
    'ansonsten pr|fffd|fen
        CheckKeyPressedPolizzenNr = CheckKeyPressed(textBox, KeyAscii, False)
    End If
End Function



Public Function CheckLizenzAblauf_Global() As Boolean
    CheckLizenzAblauf_Global = Sheet_Lizenz.CheckLizenzAblauf
End Function


' --------------------------------------------------------------



'Hilfsfunktion zum Aktivieren der Releaseversion
Private Sub PrepareReleaseVersion()
    PrepareReleaseVersionWorksheet Sheet_AllgemeineDaten
    PrepareReleaseVersionWorksheet Sheet_Betriebsart
    PrepareReleaseVersionWorksheet Sheet_Uebersicht
    PrepareReleaseVersionWorksheet Sheet_Sachversicherung
    PrepareReleaseVersionWorksheet Sheet_BU
    PrepareReleaseVersionWorksheet Sheet_Haftpflicht
    PrepareReleaseVersionWorksheet Sheet_Rechtsschutz
    PrepareReleaseVersionWorksheet Sheet_KFZRechtsschutz
    PrepareReleaseVersionWorksheet Sheet_GMRS
    PrepareReleaseVersionWorksheet Sheet_Technik
    PrepareReleaseVersionWorksheet Sheet_Transport
    PrepareReleaseVersionWorksheet Sheet_OLEObjects
    PrepareReleaseVersionWorksheet Sheet_Infotext
    PrepareReleaseVersionWorksheet Sheet_Cyber
    PrepareReleaseVersionWorksheet Sheet_Lizenz
    
End Sub


Private Sub PrepareReleaseVersionWorksheet(wrkSheet As Worksheet)
    wrkSheet.Visible = xlSheetVeryHidden
    wrkSheet.Protect
End Sub

'Remember to add a reference to Microsoft Visual Basic for Applications Extensibility
'Exports all VBA project components containing code to a folder in the same directory as this spreadsheet.
Public Sub ExportAllComponents()
    Dim VBComp As VBIDE.VBComponent
    Dim destDir As String, fName As String, ext As String
    'Create the directory where code will be created.
    'Alternatively, you could change this so that the user is prompted
    If ActiveWorkbook.Path = "" Then
        MsgBox "You must first save this workbook somewhere so that it has a path.", , "Error"
        Exit Sub
    End If
    destDir = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name & " Modules"
    If Dir(destDir, vbDirectory) = vbNullString Then MkDir destDir
    
    'Export all non-blank components to the directory
    For Each VBComp In ActiveWorkbook.VBProject.VBComponents
        If VBComp.CodeModule.CountOfLines > 0 Then
            'Determine the standard extention of the exported file.
            'These can be anything, but for re-importing, should be the following:
            Select Case VBComp.Type
                Case vbext_ct_ClassModule: ext = ".cls"
                Case vbext_ct_Document: ext = ".cls"
                Case vbext_ct_StdModule: ext = ".bas"
                Case vbext_ct_MSForm: ext = ".frm"
                Case Else: ext = vbNullString
            End Select
            If ext <> vbNullString Then
                fName = destDir & "\" & VBComp.Name & ext
                'Overwrite the existing file
                'Alternatively, you can prompt the user before killing the file.
                If Dir(fName, vbNormal) <> vbNullString Then Kill (fName)
                VBComp.Export (fName)
            End If
        End If
    Next VBComp
End Sub

Sub CountFormulas()
Dim cl As Range, ws As Worksheet, fcount As Long, ftcount As Long
    For Each ws In ThisWorkbook.Worksheets
        For Each cl In ws.UsedRange
            If cl.HasFormula Then fcount = fcount + 1
        Next cl
        ftcount = ftcount + fcount
        fcount = 0
    Next ws
    Debug.Print "Total Formulas in Model: " & ftcount
End Sub
Attribute VB_Name = "M_Global_DDL"
Option Explicit


Public Const VK_NUMLOCK = &H90
Public Const KEYEVENTF_KEYUP = &H2
Public Const GWL_STYLE = (-16)
Public Const WS_SYSMENU = &H80000
Public Const WS_THICKFRAME As Long = &H40000   '// style to add a sizable frame
Public Const SM_CXSCREEN                 As Long = 0       'Screen width
Public Const SM_CYSCREEN                 As Long = 1       'Screen height
Public Const LOGPIXELSX                  As Long = 88      'Pixels/inch in X
Public Const POINTS_PER_INCH             As Long = 72      'A point is defined as 1/72 inches
Public Const GWL_EXSTYLE                 As Long = (-20)     '//The offset of a window's extended style
Public Const WS_CAPTION                  As Long = &HC00000  '// style to add a titlebar
Public Const WS_MINIMIZEBOX              As Long = &H20000   '// style to add a Minimize box on the title bar
Public Const WS_MAXIMIZEBOX              As Long = &H10000   '// style to add a Maximize box to the title bar
Public Const WS_EX_APPWINDOW             As Long = &H40000


Public Const HC_ACTION = 0
Public Const WH_MOUSE_LL = 14
Public Const WM_MOUSEWHEEL = &H20A
Public Const GWL_HINSTANCE = (-6)


#If VBA7 Then
    Public Declare PtrSafe Function GetKeyState Lib "user32" (ByVal nVirtKey As Long) As Integer
    Public Declare PtrSafe Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
    Public Declare PtrSafe Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
    #If Win64 Then
        Public Declare PtrSafe Function GetWindowLong Lib "user32" Alias "GetWindowLongPtrA" (ByVal hWnd As LongPtr, ByVal nIndex As Long) As LongPtr
        Public Declare PtrSafe Function SetWindowLong Lib "user32" Alias "SetWindowLongPtrA" (ByVal hWnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
    #Else
        Public Declare PtrSafe Function GetWindowLong Lib "user32" Alias "GetWindowLongA" (ByVal hWnd As LongPtr, ByVal nIndex As Long) As LongPtr
        Public Declare PtrSafe Function SetWindowLong Lib "user32" Alias "SetWindowLongA" (ByVal hWnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
    #End If
    Public Declare PtrSafe Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Long) As Long '?
    Public Declare PtrSafe Function CallWindowProc Lib "user32.dll" Alias "CallWindowProcA" (ByVal lpPrevWndFunc As Long, ByVal hWnd As Long, ByVal Msg As Long, ByVal wParam As Long, ByVal lParam As Long) As LongPtr
    Public Declare PtrSafe Function IsIconic Lib "user32" (ByVal hWnd As LongPtr) As Long '?
    Public Declare PtrSafe Function GetSystemMetrics Lib "user32" (ByVal nIndex As Long) As Long
    Public Declare PtrSafe Function GetDC Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
    Public Declare PtrSafe Function GetDeviceCaps Lib "gdi32" (ByVal hDC As LongPtr, ByVal nIndex As Long) As Long
    Public Declare PtrSafe Function ReleaseDC Lib "user32" (ByVal hWnd As LongPtr, ByVal hDC As LongPtr) As Long
    Public Declare PtrSafe Function GetForegroundWindow Lib "user32.dll" () As LongPtr
    Public Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (ByVal Destination As LongPtr, ByVal Source As Long, ByVal Length As Long) '?
    Public Declare PtrSafe Function CallNextHookEx Lib "user32" (ByVal hHook As LongPtr, ByVal ncode As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
    Public Declare PtrSafe Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExA" (ByVal idHook As Long, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
    Public Declare PtrSafe Function UnhookWindowsHookEx Lib "user32" (ByVal hhk As LongPtr) As Long
    
#Else
    Public Declare Function GetKeyState Lib "user32" (ByVal nVirtKey As Long) As Integer
    Public Declare Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
    Public Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
    Public Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long) As Long
    Public Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" (ByVal hWnd As Long, ByVal nIndex As Long, ByVal dwNewLong As Long) As Long
    Public Declare Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Long) As Long
    Public Declare Function CallWindowProc Lib "user32.dll" Alias "CallWindowProcA" (ByVal lpPrevWndFunc As Long, ByVal hWnd As Long, ByVal Msg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
    Public Declare Function IsIconic Lib "user32" (ByVal hWnd As Long) As Long
    Public Declare Function GetSystemMetrics Lib "user32" (ByVal nIndex As Long) As Long
    Public Declare Function GetDC Lib "user32" (ByVal hWnd As Long) As Long
    Public Declare Function GetDeviceCaps Lib "gdi32" (ByVal hDC As Long, ByVal nIndex As Long) As Long
    Public Declare Function ReleaseDC Lib "user32" (ByVal hWnd As Long, ByVal hDC As Long) As Long
    Public Declare Function GetForegroundWindow Lib "user32" () As Long
    Public Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (ByVal Destination As Long, ByVal Source As Long, ByVal Length As Long)
    Public Declare Function CallNextHookEx Lib "user32" (ByVal hHook As Long, ByVal ncode As Long, ByVal wParam As Long, lParam As Any) As Long
    Public Declare Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExA" (ByVal idHook As Long, ByVal lpfn As Long, ByVal hmod As Long, ByVal dwThreadId As Long) As Long
    Public Declare Function UnhookWindowsHookEx Lib "user32" (ByVal hHook As Long) As Long
#End If
Attribute VB_Name = "M_Global_Druck"
Option Explicit


'-----------------
'Hilfsfunktionen zur Vorbereitung der Tabellenbl|fffd|tter f|fffd|r den Druck
'-----------------

'Version 2.0: Blendet nicht ben|fffd|tigte Zeilen aus
Public Sub ShowHideRows(rngCheck As Range)
    Dim i As Integer
    Dim rngHide As Range
    Dim rngShow As Range
    
    For i = 1 To rngCheck.Rows.Count
        If rngCheck(i, 1) Then
            If rngShow Is Nothing Then
                Set rngShow = rngCheck.Cells(i, 1)
            Else
                Set rngShow = Union(rngShow, rngCheck(i, 1))
            End If
        Else
            If rngHide Is Nothing Then
                Set rngHide = rngCheck.Cells(i, 1)
            Else
                Set rngHide = Union(rngHide, rngCheck(i, 1))
            End If
        End If
    Next i
    
    If rngShow Is Nothing Then Else rngShow.EntireRow.Hidden = False
    If rngHide Is Nothing Then Else rngHide.EntireRow.Hidden = True

End Sub



Public Sub AddPageBreak(wrkSheet As Worksheet, rowBefore As Integer)
    wrkSheet.HPageBreaks.Add before:=Cells(rowBefore, 1)
End Sub

'-----------------
'    Eventhandler
'-----------------


Public Sub CommandButton_Antrag_Click()
    If Sheet_Antrag.DruckAllowed Then
        Sheet_Antrag.Drucke
    End If
End Sub
Attribute VB_Name = "M_Global_Form"
Option Explicit


'Collection f|fffd|r die InfoButton EventHandler
Dim MIBHs As New Collection
'sorgt daf|fffd|r, dass die InfoBoxen Eventhandler nur einmal initialisiert werden
Dim InfoButtonEventHandlerInitializedArr(1 To 5) As Boolean

Public Const F_HBB_ID = 1
Public Const F_HBB_Sach_Sublimits_ID = 2
Public Const F_HBB_Sach_Vorteilsdeckungen_ID = 3
Public Const F_HBB_Cyber_Risikofragen = 4
Public Const F_HBB_GMRS_Adressen = 5

Dim LocalHwnd As Long
Dim LocalPrevWndProc As Long
Dim myForm As UserForm




Public Sub subRemoveCloseButton(frm As Object)
    #If VBA7 Then
        Dim lngHWnd As LongPtr
        Dim lngStyle As LongPtr
    #Else
        Dim lngHWnd As Long
        Dim lngStyle As Long
    #End If

    lngHWnd = FindWindow(vbNullString, frm.Caption)
    lngStyle = GetWindowLong(lngHWnd, GWL_STYLE)

    If lngStyle And WS_SYSMENU > 0 Then
        SetWindowLong lngHWnd, GWL_STYLE, (lngStyle And Not WS_SYSMENU)
    End If

End Sub



Private Property Get IsInfoButtonEventHandlerInitialized(frmID As Integer) As Boolean
    IsInfoButtonEventHandlerInitialized = InfoButtonEventHandlerInitializedArr(frmID)
End Property

Private Sub SetInfoButtonEventHandlerInitialized(frmID As Integer, newValue As Boolean)
    InfoButtonEventHandlerInitializedArr(frmID) = newValue
End Sub


Public Sub Initialize()
    Dim i As Integer
    For i = 1 To UBound(InfoButtonEventHandlerInitializedArr)
        InfoButtonEventHandlerInitializedArr(i) = False
    Next i
End Sub


'Setzt den InfoButtonEventhandler f|fffd|r alle InfoButtons
'Erkennungsmerkmal: Caption beginnt mit "InfoButton_"
Public Sub InfoButtonEventHandler_Initialize(frm As Object, frmID As Integer)
    'already initalized?
    If IsInfoButtonEventHandlerInitialized(frmID) Then Exit Sub
    
    Dim MIBH As MyInfoButtonHandler
    Dim C As MSForms.Control

    'Visit all controls anywhere in here
    For Each C In frm.Controls
        'Hit a button?
        If TypeOf C Is MSForms.CommandButton Then
            If Left(C.Name, 10) = "InfoButton" Then
                'Create a new event handler
                Set MIBH = New MyInfoButtonHandler
                'Setup the refering objects
                With MIBH
                    Set .MyCommandButton = C
                    .OwnerFormCaption = frm.Caption
                End With
                'Keep it alive inside a collection
                MIBHs.Add MIBH
            End If
        End If
    Next

    SetInfoButtonEventHandlerInitialized frmID, True
End Sub




Public Sub MakeFormResizable(frm As Object)
    #If VBA7 Then
        Dim hWnd As LongPtr
        Dim lStyle As LongPtr
    #Else
        Dim hWnd As Long
        Dim lStyle As Long
    #End If
  
    Dim RetVal
  
  'AppActivate F_HBB.Caption
  'hwnd = GetActiveWindow
  hWnd = FindWindow(vbNullString, frm.Caption)
  
  'Get the basic window style
  lStyle = GetWindowLong(hWnd, GWL_STYLE) Or WS_THICKFRAME
     
  'Set the basic window styles
  RetVal = SetWindowLong(hWnd, GWL_STYLE, lStyle)
    
  'Clear any previous API error codes
  SetLastError 0
    
  'Did the style change?
  If RetVal = 0 Then MsgBox "Unable to make UserForm Resizable."
End Sub




Attribute VB_Name = "M_Global_Form_Scroll"
Option Explicit

Private Type POINTAPI
  X As Long
  Y As Long
End Type

Private Type MSLLHOOKSTRUCT  'Will Hold the lParam struct Data
  pt As POINTAPI
  mouseData As Long  ' Holds Forward\Backward flag
  flags As Long
  time As Long
  dwExtraInfo As Long
End Type

Public Const nMyControlTypeNONE = 0
Public Const nMyControlTypeUSERFORM = 1
Public Const nMyControlTypeFRAME = 2
Public Const nMyControlTypeCOMBOBOX = 3
Public Const nMyControlTypeLISTBOX = 4
Public Const nMyControlTypeMULTIPAGE = 5

#If VBA7 Then
    Private hhkLowLevelMouse As LongPtr
#Else
    Private hhkLowLevelMouse As Long
#End If
Private udtlParamStuct As MSLLHOOKSTRUCT

Public myGblUserForm As UserForm
Public myGblControlObject As Object
Public iGblControlType As Integer

Public myGblUserFormControl As Object



Function GetHookStruct(ByVal lParam As Long) As MSLLHOOKSTRUCT
' VarPtr returns address; LenB returns size in bytes.
  CopyMemory VarPtr(udtlParamStuct), lParam, LenB(udtlParamStuct)
  GetHookStruct = udtlParamStuct
End Function

Function LowLevelMouseProc _
         (ByVal ncode As Long, ByVal wParam As Long, ByVal lParam As Long) As Long

  'Avoid XL crashing if RunTime error occurs due to Mouse fast movement
  
  Dim iDirection As Long

  On Error Resume Next
  '    \\ Unhook & get out in case the application is deactivated
  If GetForegroundWindow <> FindWindow("ThunderDFrame", myGblUserForm.Caption) Then
    UnHook_Mouse
    Exit Function
  End If
  If (ncode = HC_ACTION) Then
    If wParam = WM_MOUSEWHEEL Then
    
      iDirection = GetHookStruct(lParam).mouseData
      Call ProcessMouseWheelMovement(iDirection)
    
      '\\ Don't process Default WM_MOUSEWHEEL Window message
      LowLevelMouseProc = True
    End If
    
    Exit Function
  End If
  'LowLevelMouseProc = CallNextHookEx(0, ncode, wParam, ByVal lParam)
End Function

Sub Hook_Mouse()
' Statement to maintain the handle of the hook if clicking outside of the control.
' There isn't a Hinstance for Application, so used GetWindowLong to get handle.
  If hhkLowLevelMouse < 1 Then
    hhkLowLevelMouse = SetWindowsHookEx(WH_MOUSE_LL, AddressOf LowLevelMouseProc, _
      GetWindowLong(FindWindow("ThunderDFrame", myGblUserForm.Caption), GWL_HINSTANCE), 0)
  End If
End Sub

Sub UnHook_Mouse()
  If hhkLowLevelMouse <> 0 Then
    UnhookWindowsHookEx hhkLowLevelMouse
    hhkLowLevelMouse = 0
  End If
End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'UserForm MouseWheel Code
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub ProcessMouseWheelMovement(ByVal iDirection As Long)
  'This processes MouseWheel Scrolls
  '
  'Thank You Mathieu Plante from July 2004
  
  Dim i As Long
  Dim iMultiplier As Long
  
  Select Case iGblControlType
    
    
    ''''''''''''''''''''''''''''''''''''''''''''''''
    'UserForm Mouse Scroll
    ''''''''''''''''''''''''''''''''''''''''''''''''
    Case nMyControlTypeUSERFORM
    
      iMultiplier = 3
      
      If iDirection > 0 Then
      
        For i = 1 To iMultiplier
          myGblControlObject.Scroll fmScrollActionNoChange, fmScrollActionLineUp
        Next i
      Else
        For i = 1 To iMultiplier
          myGblControlObject.Scroll fmScrollActionNoChange, fmScrollActionLineDown
        Next i
      End If
    
    
    ''''''''''''''''''''''''''''''''''''''''''''''''
    'Frame Mouse Scroll
    ''''''''''''''''''''''''''''''''''''''''''''''''
    Case nMyControlTypeFRAME
    
      iMultiplier = 5
      
      If iDirection > 0 Then
      
        For i = 1 To iMultiplier
          myGblControlObject.Scroll fmScrollActionNoChange, fmScrollActionLineUp
        Next i
      Else
        For i = 1 To iMultiplier
          myGblControlObject.Scroll fmScrollActionNoChange, fmScrollActionLineDown
        Next i
      End If
  
    
    ''''''''''''''''''''''''''''''''''''''''''''''''
    'ComboBox Mouse Scroll
    ''''''''''''''''''''''''''''''''''''''''''''''''
    Case nMyControlTypeCOMBOBOX
      
      With myGblControlObject
        '\\ if rolling forward increase Top index by 1 to cause an Up Scroll
        If iDirection > 0 Then
          .TopIndex = .TopIndex - 1
        Else  '\\ if rolling backward decrease Top index by 1 to cause a Down Scroll
          .TopIndex = .TopIndex + 1
        End If
      End With
    
    ''''''''''''''''''''''''''''''''''''''''''''''''
    'Listbox Mouse Scroll
    ''''''''''''''''''''''''''''''''''''''''''''''''
    Case nMyControlTypeLISTBOX
      
      With myGblControlObject
        '\\ if rolling forward increase Top index by 1 to cause an Up Scroll
        If iDirection > 0 Then
          .TopIndex = .TopIndex - 1
        Else  '\\ if rolling backward decrease Top index by 1 to cause a Down Scroll
          .TopIndex = .TopIndex + 1
        End If
      End With
    
    ''''''''''''''''''''''''''''''''''''''''''''''''
    'Multipage Mouse Scroll
    ''''''''''''''''''''''''''''''''''''''''''''''''
    Case nMyControlTypeMULTIPAGE
      
      iMultiplier = 5
      
      If iDirection > 0 Then
      
        For i = 1 To iMultiplier
          myGblControlObject.Scroll fmScrollActionNoChange, fmScrollActionLineUp
        Next i
      Else
        For i = 1 To iMultiplier
          myGblControlObject.Scroll fmScrollActionNoChange, fmScrollActionLineDown
        Next i
      End If
    
  End Select
  
End Sub


Attribute VB_Name = "M_Global_Sparten"
Option Explicit

Public Type CyberType
    Cyber As Boolean
    Risikofragen As Boolean
End Type

'User defined Data Types
Public Type SachspartenType
    Feuer As Boolean
    Sturm As Boolean
    Leitungswasser As Boolean
    Einbruchdiebstahl As Boolean
    Glasbruch As Boolean
End Type


Public Type SpartenType
    Sach As Boolean
    Sachsparten As SachspartenType
    Technik As Boolean
    Transport As Boolean
    Betriebsunterbrechung As Boolean
    Haftpflicht As Boolean
    Rechtsschutz As Boolean
    KFZRechtsschutz As Boolean
    GMRS As Boolean
    Cyber As CyberType
End Type

'Sparten, die erlaubt sind aufgrund der Eingaben/Auswahlen des Benutzers
Public SpartenErlaubt As SpartenType

'Sparten, die aktuell Rechenbar sind
Public Rechenbar As SpartenType

'Sparten, die anfragepflichtig sind
Public AnfragepflichtigeSparten As SpartenType


Public Sub Initialize(sparten As SpartenType, initValue As Boolean)
    sparten.Sachsparten.Feuer = initValue
    sparten.Sachsparten.Sturm = initValue
    sparten.Sachsparten.Leitungswasser = initValue
    sparten.Sachsparten.Einbruchdiebstahl = initValue
    sparten.Sachsparten.Glasbruch = initValue
    
    sparten.Sach = initValue
    sparten.Technik = initValue
    sparten.Betriebsunterbrechung = initValue
    sparten.Haftpflicht = initValue
    sparten.Transport = initValue
    sparten.Rechtsschutz = initValue
    sparten.KFZRechtsschutz = initValue
    sparten.GMRS = initValue
    sparten.Cyber.Cyber = initValue
    sparten.Cyber.Risikofragen = initValue
End Sub


Public Function AlleSachSpartenGewaehlt(sparten As SpartenType) As Boolean
    AlleSachSpartenGewaehlt = sparten.Sachsparten.Feuer And sparten.Sachsparten.Sturm And sparten.Sachsparten.Leitungswasser And sparten.Sachsparten.Einbruchdiebstahl And sparten.Sachsparten.Glasbruch
End Function

Public Function MindestensEineSachSparteGewaehlt(sparten As SpartenType) As Boolean
    MindestensEineSachSparteGewaehlt = sparten.Sachsparten.Feuer Or sparten.Sachsparten.Sturm Or sparten.Sachsparten.Leitungswasser Or sparten.Sachsparten.Einbruchdiebstahl Or sparten.Sachsparten.Glasbruch
End Function

'liefert true, wenn der Eintrag im Datatype True ist oder die entsprechende Sparte nicht gew|fffd|hlt wurde
Public Function AlleSpartenRechenbar(sparten As SpartenType) As Boolean
    AlleSpartenRechenbar = _
        (sparten.Betriebsunterbrechung Or Not (M_HBB_Uebersicht.BU)) And _
        (sparten.Haftpflicht Or Not (M_HBB_Uebersicht.Haftpflicht)) And _
        (sparten.Transport Or Not (M_HBB_Uebersicht.Transport)) And _
        (sparten.Rechtsschutz Or Not (M_HBB_Uebersicht.Rechtsschutz)) And _
        (sparten.GMRS Or Not (M_HBB_Uebersicht.GMRS)) And _
        (sparten.KFZRechtsschutz Or Not (M_HBB_Uebersicht.KFZRechtsschutz)) And _
        (sparten.Sach Or Not (M_HBB_Uebersicht.Sach)) And _
        (sparten.Technik Or Not (M_HBB_Uebersicht.Technik)) And _
        (sparten.Cyber.Cyber Or Not (M_HBB_Uebersicht.Cyber))
End Function
Attribute VB_Name = "M_Global_Speichern"
Option Explicit

Public Sub Speichern(bVorlagenWarnungAnzeigen As Boolean)
    'nochmal alles Schreiben
    ReCalculate
    
    
    'Wenn es sich um die Vorlage handelt, darf diese nicht |fffd|berschrieben werden.
    '-> ein neuer Name muss gew|fffd|hlt werden
    If Sheet_AllgemeineDaten.IsVorlage Then
        If (bVorlagenWarnungAnzeigen) Then MsgBox "Diese Datei ist die Vorlage. Sie d|fffd|rfen sie nicht |fffd|berschreiben. W|fffd|hlen Sie stattdessen einen neuen Dateinamen.", vbInformation, "Vorlage - W|fffd|hlen Sie einen Dateinamen"
        SpeichernUnter
    Else
        ThisWorkbook.Save
    End If
End Sub


'liefert False, wenn Speichern Unter abgebrochen werden soll
Public Function SpeichernUnter() As Boolean
    'nochmal alles Schreiben
    ReCalculate
    
    'immer Abbrechen, wenn der Benutzer den Dialog abbricht
    SpeichernUnter = False
    
    Dim InitialFileName As String, filefilter As String, Filename As Variant
    InitialFileName = F_HBB.Controls("TextBox_AllgemeineDaten_Nachname_Firma").value
    filefilter = "Excel Bin|fffd|rdateien (*.xlsb), *.xlsb"
    Filename = Application.GetSaveAsFilename(InitialFileName, filefilter, , "Offert speichern unter ..")
    Filename = Replace(Filename, "'", "_")
    Filename = Replace(Filename, "#", "_")
    Filename = Replace(Filename, "%", "_")
    Filename = Replace(Filename, "$", "_")
    If Filename <> False Then
        ThisWorkbook.SaveAs Filename
        Sheet_AllgemeineDaten.DeaktiviereVorlage
        ThisWorkbook.Save
        SpeichernUnter = True
    End If
End Function


Public Sub ReCalculate()
    
    'eventuell nicht gespeicherte Werte speichern
    M_HBB_AllgemeineDaten.SchreibeDaten
    If M_HBB_Uebersicht.Sach Then M_HBB_Spartenauswahl_Sach.SchreibeDaten
    If M_HBB_Uebersicht.Technik Then M_HBB_Spartenauswahl_Technik.SchreibeDaten
    If M_HBB_Uebersicht.Transport Then M_HBB_Spartenauswahl_Transport.SchreibeDaten
    If M_HBB_Uebersicht.BU Then M_HBB_Spartenauswahl_BU.SchreibeDaten
    If M_HBB_Uebersicht.Haftpflicht Then M_HBB_Spartenauswahl_Haft.SchreibeDaten
    If M_HBB_Uebersicht.Rechtsschutz Then M_HBB_Spartenauswahl_RS.SchreibeDaten
    If M_HBB_Uebersicht.KFZRechtsschutz Then M_HBB_Spartenauswahl_KFZRS.SchreibeDaten
    If M_HBB_Uebersicht.GMRS Then M_HBB_Spartenauswahl_GMRS.SchreibeDaten
    If M_HBB_Uebersicht.Cyber Then M_HBB_Cyber.SchreibeDaten
    
    M_HBB_Uebersicht.BerechneNeu
    

    
End Sub
Attribute VB_Name = "M_Global_Stack"
Option Explicit


'DatenStati
Public Enum DataStatus
    Invalid = -1
    Initial = 0
    Save = 1
    Load = 2
End Enum


Private ErrMsg As String
Private StackIsEmpty As Boolean

Public Type LIFO_StackType
    value As Variant
End Type

Public Function InitializeStack(lifo() As LIFO_StackType) As Boolean
    ErrMsg = ""
    On Error GoTo InitErr
        ReDim lifo(0)
        StackIsEmpty = True
        InitializeStack = True
    Exit Function
InitErr:
    InitializeStack = False
    ErrMsg = Err.Description
End Function

Public Function Push(lifo() As LIFO_StackType, value As Variant) As Boolean
    ErrMsg = ""
    On Error GoTo PushErr
        If IsEmpty(value) Or IsNull(value) Or value = "" Then Err.Raise 9999, , "No value to handle"
        Dim idx As Long
        
        Dim lifoVal As LIFO_StackType
        lifoVal.value = value
        
        idx = UBound(lifo) + 1
        ReDim Preserve lifo(idx)
        lifo(idx) = lifoVal
        StackIsEmpty = False
        Push = True
    Exit Function
PushErr:
    Push = False
    ErrMsg = Err.Description
End Function

Public Function Pop(lifo() As LIFO_StackType) As Variant
    Dim idx, i As Long
    
    ErrMsg = ""
    On Error GoTo PopErr
        If UBound(lifo) = 0 Then
            StackIsEmpty = True
            Err.Raise 9998, , "Stack is empty"
        End If
        
        idx = UBound(lifo) + 1
        Pop = lifo(UBound(lifo)).value
        
        Dim lifoTmp() As LIFO_StackType
        ReDim lifoTmp(UBound(lifo) - 1)
        
        If UBound(lifo) > 1 Then
            For i = 0 To UBound(lifo) - 1
                lifoTmp(i).value = lifo(i).value
            Next i
            lifo = lifoTmp
        Else
            ReDim lifo(0)
            StackIsEmpty = True
        End If
    Exit Function
PopErr:
    Pop = ""
    ErrMsg = Err.Description
End Function

'Reads the last-in value of the stack without removing it (no pop)
Public Function Top(lifo() As LIFO_StackType) As Variant
    ErrMsg = ""
    On Error GoTo PopErr
        If UBound(lifo) = 0 Then
            StackIsEmpty = True
            Err.Raise 9998, , "Stack is empty"
        End If
        
        Top = lifo(UBound(lifo)).value
    Exit Function
PopErr:
    Top = -1
    ErrMsg = Err.Description
End Function

Public Function GetStackCount(stack() As LIFO_StackType) As Long
    If StackIsEmpty Then GetStackCount = 0 Else GetStackCount = UBound(stack)
End Function

Public Function StackToString(lifo() As LIFO_StackType) As String
    Dim i As Long
    
    StackToString = ""
    If UBound(lifo) > 0 Then
        For i = 0 To UBound(lifo) - 1
            StackToString = StackToString & lifo(i).value & ","
        Next i
    End If
End Function




Attribute VB_Name = "M_HBB_AllgemeineDaten"
Option Explicit

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------

'L|fffd|dt beim erstmaligen Starten die Daten
'Direkter Aufruf nur bei Initialisierung
Public Sub LadeDaten()
    'Daten Laden wenn eine g|fffd|ltige BA gew|fffd|hlt wurde
    If F_HBB.BAGueltig Then
    
        'Daten laden
        Sheet_AllgemeineDaten.LadeDaten
    
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
            CheckBox_AllgemeineDaten_Versicherungsort_wieoben_Change
            OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Change
        Else 'neue |fffd|bersichtspr|fffd|mien beim erstmaligem Laden nicht neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    
    End If
End Sub


'Direkter Aufruf: Nur Daten schreiben, nicht neu laden
'Schreiben und neu Laden: Aufruf von BerechneNeu()
Public Sub SchreibeDaten()
    'Daten Speichern
    If F_HBB.DatatStatusSave Then
        Sheet_AllgemeineDaten.SchreibeDaten
    End If
End Sub


'keine Tarifierungsrelevate oder sonstige Auswirkung. Neu Berechnen kann daher reines Schreiben sein.
Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub


'Setzt alle Werte auf nicht gew|fffd|hlt bzw. auf nicht gew|fffd|hlt
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'Frame Vertrag
    F_HBB.Controls("OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Neuvertrag").value = True
    F_HBB.Controls("OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Konvertierung").value = False
    F_HBB.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr").value = ""
    
    'Frame Allgemeine Daten
    F_HBB.Controls("TextBox_AllgemeineDaten_Anrede").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Titel").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Vorname").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Nachname_Firma").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Strasse").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_PLZ").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Ort").value = ""
    
    'Frame Versicherungsorte
    F_HBB.Controls("CheckBox_AllgemeineDaten_Versicherungsort_wieoben").value = False
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_PLZ").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Ort").value = ""
    
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Strasse").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_PLZ").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Ort").value = ""
    
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Strasse").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_PLZ").value = ""
    F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Ort").value = ""
    
    
    F_HBB.PopDataStatus
    
    BerechneNeu
End Sub



'--------------------------------
' Event Handler
'--------------------------------


Public Sub CheckBox_AllgemeineDaten_Versicherungsort_wieoben_Change()
    Dim bWieOben As Boolean
    bWieOben = F_HBB.Controls("CheckBox_AllgemeineDaten_Versicherungsort_wieoben").value
    
    M_Global.EnableControl F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse"), Not (bWieOben)
    M_Global.EnableControl F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_PLZ"), Not (bWieOben)
    M_Global.EnableControl F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Ort"), Not (bWieOben)
    
    '1. Versicherungsort wie oben/wie links angegeben
    If bWieOben Then
        F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value = F_HBB.Controls("TextBox_AllgemeineDaten_Strasse").value
        F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_PLZ").value = F_HBB.Controls("TextBox_AllgemeineDaten_PLZ").value
        F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Ort").value = F_HBB.Controls("TextBox_AllgemeineDaten_Ort").value
    End If
    
    'Nur schreiben, nichts neu berechnen
    SchreibeDaten
End Sub



Public Sub OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Change()
    M_Global.EnableControl F_HBB.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr"), F_HBB.Controls("OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Konvertierung").value, weiss, HellGrau
    
    M_HBB_Cyber.AktiviereCyberBerechnung
    
    BerechneNeu
End Sub


Public Sub TextBox_AllgemeineDaten_Nachname_Firma_Exit()
    If (F_HBB.Controls("TextBox_AllgemeineDaten_Nachname_Firma").value <> "") And (ThisWorkbook.OffertName <> "") Then
        If (ThisWorkbook.OffertName <> F_HBB.Controls("TextBox_AllgemeineDaten_Nachname_Firma").value) Then
            MsgBox "Um ein neues Offert anzulegen, klicken Sie bitte immer auf den Button 'NEU'.", vbInformation, "Achtung!"
        End If
    End If
    
    ThisWorkbook.OffertName = F_HBB.Controls("TextBox_AllgemeineDaten_Nachname_Firma").value
End Sub


Public Sub TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr_Change()
    BerechneNeu
    
    'direkte Abh|fffd|ngikeit zur Cyberberechnung
    If M_HBB_Cyber.Cyber Then M_HBB_Cyber.AktiviereCyberBerechnung
End Sub
Attribute VB_Name = "M_HBB_Allrisk"

Private Const VersicherungssummeMaximumVersion3 As Long = 3000000

Public Property Get Allrisk() As Boolean
    Allrisk = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value
End Property


'Auf Button Fertig geklickt
Public Sub SchreibeAllrisk()

    
    Sheet_Sachversicherung.SchreibeDaten_Allrisk
    

End Sub

Public Sub TextBox_Allrisk_VersicherungssummeVersion3_Exit()

    M_Global.PruefeEingabeExit F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3")
End Sub

'Click auf den dritten Option Button
Public Sub OptionButton_Allrisk_Version3_Click()
    
    F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").Visible = True
    F_HBB.oF_HBB_Allrisk.Controls("Label_Versicherungssumme").Visible = True

End Sub

'Click auf den ersten oder zweiten Option Button
Public Sub OptionButton_Allrisk_Version_Click()
     
     F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").Visible = False
     F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").value = 0
     F_HBB.oF_HBB_Allrisk.Controls("Label_Versicherungssumme").Visible = False
     M_HBB_Spartenauswahl_Sach.BerechneNeu
     

End Sub

'Pr|fffd|ft, ob die richtigen Werte in Versicherungssumme eingegeben werden
Public Sub TextBox_Allrisk_VersicherungssummeVersion3_Change()

    Dim min As Long
    Dim inhalt As Long
    Dim gebaude As Long
    
    
    min = 0
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value = "" Then Exit Sub
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = "" Then Exit Sub
    
    inhalt = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value, "General Number")
    gebauede = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value, "General Number")
    
    If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value Then
        gebauede = 0
    End If
    
  
        
    
    
    If VersicherungssummeMaximumVersion3 < (inhalt + gebauede) Then
        min = VersicherungssummeMaximumVersion3
    Else
        min = inhalt + gebauede
    End If
        
        
    
    M_Global.PruefeEingabeChange F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3"), min, , , False, , "Die Allrisk VS wurde auf die Maximal m|fffd|gliche VS zr|fffd|ckgesetzt"
        
        M_HBB_Spartenauswahl_Sach.BerechneNeu


End Sub


Attribute VB_Name = "M_HBB_Annahmerichtlinien"
Option Explicit

Public Sub CommandButton_Annahmerichtlinien_AnnahmerichtlinienOeffnen_Click()
    Dim o As Object
    With ThisWorkbook.Sheets(global_Tabellenblatt_OleObjects)
        'Fehlerbehandlung f|fffd|r das |fffd|ffnen des PDFs deaktiveren, da aus nicht gekl|fffd|rter Ursache
        'manchmal der Fehler "Die Verb-Methode des OLE-Objektes konnte nicht ausgef|fffd|hrt werden." angezeigt wird
        'obwohl das PDF Dokument ge|fffd|ffnet wird.
        On Error Resume Next
        Set o = .OLEObjects("Object_Annahmerichtlinien")
        o.Verb xlVerbPrimary
        'Fehlerbehandlung wieder aktivieren
        On Error GoTo 0
    End With
End Sub
Attribute VB_Name = "M_HBB_Cyber"
Option Explicit

'Enth|fffd|lt die aktuelle Cyber GKL der gew|fffd|hlten Betriebsart
Public GKL As Integer
Public AlleFragenBeantwortet As Boolean

'--------------------------------
' Properties
'--------------------------------

Public Property Get Cyber() As Boolean
    Cyber = F_HBB.Controls("CheckBox_Uebersicht_Cyber").value
End Property

'Ermittelt den maximal m|fffd|glichen HGHP Geb|fffd|udeneubauwert
Private Property Get UmsatzMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        UmsatzMaximum = 30000000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        UmsatzMaximum = 30000000
    Else
        UmsatzMaximum = 0
    End If
End Property


Public Property Get IsVertragsabschlussErlaubt() As Boolean
    IsVertragsabschlussErlaubt = M_Global_Sparten.Rechenbar.Cyber.Risikofragen And AlleFragenBeantwortet
End Property

Public Property Get IsPolizzennummerGueltig() As Boolean
    IsPolizzennummerGueltig = True
    
    If Not AndereSparteGewaehlt Then
        IsPolizzennummerGueltig = _
            Not M_Global.PruefeEingabeBereichTextBox(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_Polizzennummer"), 1000000000, 9999999999#, weiss, hellgelb) Or _
            (F_HBB.Controls("OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Konvertierung").value And F_HBB.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr").value <> "")
    End If
End Property

'Liefert true, wenn eine andere Sparte gew|fffd|hlt wurde
Public Property Get AndereSparteGewaehlt() As Boolean
    
    AndereSparteGewaehlt = _
        F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Technik").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Transport").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_GMRS").value
        
End Property


'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------


Public Sub LadeDaten()
    'Dropdownlisten nur beim erstemaligen Starten f|fffd|llen
    If F_HBB.DatatStatusInitial Then
        'Achtung: wenn Cyber abgespeichert ist, dann darf der Dialog der Risikofragen nicht erscheinen beim Laden des Offert.
        If F_HBB.Controls("CheckBox_Uebersicht_Cyber").value Then
            'TODO
        End If
    
        ComboBox_Cyber_VSSumme_FillData
        ComboBox_Cyber_SB_FillData
    End If

    'wenn eine g|fffd|ltige BA geladen wurden, dann Daten laden
    If F_HBB.BAGueltig Then

        'Daten laden
        Sheet_Cyber.LadeDaten
                        
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
            'Spezialbehandlung des Tabs
            F_HBB.Controls("MultiPage_Sparten").Pages(M_Global.global_Mulitpage_Cyber).Visible = F_HBB.Controls("CheckBox_Uebersicht_Cyber").value
            
            AktiviereCyberBerechnung
            PruefeSpartenAbhaengigkeiten
            
            OptionButton_Cyber_BU_Change
            ComboBox_Cyber_SB_Change
            ComboBox_Cyber_VSSumme_Change
            TextBox_Cyber_Umsatz_Change
                   
        Else 'neue |fffd|bersichtspr|fffd|mien beim erstmaligem Laden nicht neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    
    End If
End Sub


'Direktes Aufrufen: nur Schreiben, ohne Daten neu zu laden
'Schreiben und Laden: Aufruf von BerechneNeu()
Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Cyber.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub



'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    With F_HBB
        .Controls("TextBox_Cyber_Umsatz").value = M_Global.global_NullEuroString
        .Controls("ComboBox_Cyber_VSSumme").ListIndex = 0
        .Controls("ComboBox_Cyber_SB").ListIndex = 0
        .Controls("OptionButton_Cyber_BU_J").value = False
        .Controls("OptionButton_Cyber_BU_N").value = False
        .Controls("OptionButton_Cyber_BU_J").BackColor = Color.hellgelb
        .Controls("OptionButton_Cyber_BU_N").BackColor = Color.hellgelb
        
    End With
    
    F_HBB.PopDataStatus
    
    BerechneNeu

End Sub

'------------------
' ComboBoxes f|fffd|llen
'------------------

Private Sub ComboBox_Cyber_VSSumme_FillData()
    Dim i As Integer

    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Cyber_VSSumme")
            Dim CyberVSListe As Variant
            CyberVSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Cyber).Range("T_Cyber_VS[Summe]").value
            
            For i = 1 To UBound(CyberVSListe)
                CyberVSListe(i, 1) = Format(CyberVSListe(i, 1), "Standard")
            Next i
            
            .List = CyberVSListe
            .ListIndex = 0
        End With
    End If
End Sub


Private Sub ComboBox_Cyber_SB_FillData()
    Dim i As Integer

    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Cyber_SB")
            Dim CyberSBListe As Variant
            CyberSBListe = ThisWorkbook.Sheets(global_Tabellenblatt_Cyber).Range("T_Cyber_Basispr|fffd|mie[SB]").value
            
            For i = 1 To UBound(CyberSBListe)
                CyberSBListe(i, 1) = Format(CyberSBListe(i, 1), "Standard")
            Next i
            
            .List = CyberSBListe
            .ListIndex = 0
        End With
    End If
End Sub


'------------------
' Hilfsfunktionen
'------------------


'Pr|fffd|ft Abh|fffd|ngigkeiten untereinandern
Public Sub PruefeSpartenAbhaengigkeiten()
    
    'Umsatz
    'Wenn Haftpflicht Betrieb gew|fffd|hlt ist, dann kann der Umsatz hier nicht erfasst werden.
    'Der Umsatz ist aber dennoch begrenzt auf 30 Mio, Haftpflicht ist auf 100 Mio begrenzt.
    Dim bHaftBetrieb As Boolean
    bHaftBetrieb = M_HBB_Spartenauswahl_Haft.Betrieb
    F_HBB.Controls("TextBox_Cyber_UmsatzHaftpflicht").Visible = bHaftBetrieb
    F_HBB.Controls("Label_Cyber_UmsatzHaftpflicht").Visible = bHaftBetrieb
    F_HBB.Controls("TextBox_Cyber_Umsatz").Visible = Not bHaftBetrieb
    
End Sub




'------------------
' Event Handler Hilfsfunktionen
'------------------



'Aktiviert oder Deaktiviert die Cyber Berechnung auf der Form F_HBB
Public Sub AktiviereCyberBerechnung()
    Dim bOK As Boolean
    bOK = IsVertragsabschlussErlaubt And IsPolizzennummerGueltig
    F_HBB.Controls("Frame_Cyber_Cyber").Visible = bOK
    F_HBB.Controls("Label_Cyber_Hinweis").Visible = Not bOK
    
    M_HBB_Uebersicht.LadeDaten
End Sub


Public Sub OptionButton_Cyber_BU_Change()
    M_Global.PruefeFehlendeEingabeOptionButton _
        F_HBB.Controls("OptionButton_Cyber_BU_J"), _
        F_HBB.Controls("OptionButton_Cyber_BU_N"), _
        Color.CyberLila, Color.hellgelb

    BerechneNeu
End Sub


Public Sub ComboBox_Cyber_SB_Change()
    M_Global.PruefeFehlendeEingabeComboBoxMitIndex F_HBB.Controls("ComboBox_Cyber_SB"), 0, weiss, hellgelb
    BerechneNeu
End Sub


Public Sub ComboBox_Cyber_VSSumme_Change()
    M_Global.PruefeFehlendeEingabeComboBoxMitIndex F_HBB.Controls("ComboBox_Cyber_VSSumme"), 0, weiss, hellgelb
    BerechneNeu
End Sub


Public Sub TextBox_Cyber_Umsatz_Change()
    M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_Cyber_Umsatz"), UmsatzMaximum, , "Standard"
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.Controls("TextBox_Cyber_Umsatz"), M_Global.global_NullEuroString, weiss, hellgelb
    
    BerechneNeu
End Sub


Public Sub TextBox_Cyber_Umsatz_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Cyber_Umsatz")
End Sub
Attribute VB_Name = "M_HBB_Cyber_Risikofragen"
Option Explicit

Dim ShowRisikofragen As Boolean


Public Sub Initialize()
    ShowRisikofragen = False
End Sub
'Button Obliegenheiten einblenden geklickt
Public Sub CommandButton_Obliegenheiteneinblenden_Click()

    ShowRisikofragen = Not ShowRisikofragen
    
    UserForm_OnActivation


End Sub


'Aktiviert und Deaktiviert ben|fffd|tigte Felder beim Anzeigen der Maske
Public Sub UserForm_OnActivation()
    'Konstanten
    Const TopDist As Integer = 0
    Const FrameDist As Integer = 12
    Const BottomDist As Integer = 80
     Const ButtonDist As Integer = 24
    'Aktuelle Daten laden
    M_HBB_Cyber.LadeDaten
        
    'Feststellen, ob ein Polizzennummerfeld angezeigt werden soll oder nicht
    Dim bTextBox_Polizzennummer_PolizzennummerKonvertierungVisible As Boolean
    Dim bTextBox_Polizzennummer_PolizzennummerVisible As Boolean
    Dim bFrame_PolizzennummerVisible As Boolean
    Dim bFrame_RisikofragenGKL3Visible As Boolean
    
    bTextBox_Polizzennummer_PolizzennummerKonvertierungVisible = False
    bTextBox_Polizzennummer_PolizzennummerVisible = False
    'Wert immer |fffd|bernehmen, egal ob angezeigt werden soll oder nicht
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_PolizzennummerKonvertierung").value = F_HBB.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr").value
    bFrame_RisikofragenGKL3Visible = (M_HBB_Cyber.GKL > 2 And ShowRisikofragen)
    
    'Konvertierungspolnr erfasst
    If F_HBB.Controls("OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Konvertierung").value And F_HBB.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr").value <> "" Then
        bTextBox_Polizzennummer_PolizzennummerKonvertierungVisible = True
    Else 'Konvertierungspolnr nicht erfasst
        If AndereSparteGewaehlt Then
            'nichts tun, da schon visible auf false gesetzt
        Else
            bTextBox_Polizzennummer_PolizzennummerVisible = True
        End If
    End If
    
    'Frame nur anzeigen, wenn entweder das eine oder das andere Feld angezeigt wird
    bFrame_PolizzennummerVisible = bTextBox_Polizzennummer_PolizzennummerKonvertierungVisible Or bTextBox_Polizzennummer_PolizzennummerVisible
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_PolizzennummerKonvertierung").Visible = bTextBox_Polizzennummer_PolizzennummerKonvertierungVisible
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_Polizzennummer").Visible = bTextBox_Polizzennummer_PolizzennummerVisible
  
    'Pr|fffd|ft beim Laden eines Offerts, ob die F8 angezeigt werden muss
    F7Change
    
    'UI anpassen
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_Polizzennummer").Visible = bFrame_PolizzennummerVisible
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("CommandButton_Obliegenheiteneinblenden").Visible = True
    'F_HBB.oF_HBB_Cyber_Risikofragen.Controls("CommandButton_Obliegenheiteneinblenden").Top = 126
    
    With F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenAllgemein")
        .Top = IIf(bFrame_PolizzennummerVisible, TopDist + F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_Polizzennummer").Height + FrameDist, TopDist)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Top = _
            .Top + .Height + FrameDist + ButtonDist
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("CommandButton_Obliegenheiteneinblenden").Top = .Top + .Height + FrameDist - 4
            
            
    End With
    
    
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("CommandButton_Obliegenheiteneinblenden").Visible = True

        
    

    
    
    'Risikofragen ein oder ausblenden
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Visible = ShowRisikofragen
    
    
    With F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL3")
        .Visible = bFrame_RisikofragenGKL3Visible
        .Top = F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Top + F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Height + FrameDist
        
        Dim buttonTop As Integer
        
            If bFrame_RisikofragenGKL3Visible Then
                buttonTop = .Top + .Height + FrameDist
            ElseIf ShowRisikofragen Then
                buttonTop = F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Top + F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Height + FrameDist
            Else
                buttonTop = F_HBB.oF_HBB_Cyber_Risikofragen.Controls("CommandButton_Obliegenheiteneinblenden").Top + ButtonDist + FrameDist
            End If
            
    
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("CommandButton_OK").Top = buttonTop
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Label_AlleFragen").Top = buttonTop - 6
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Label_KeinVertragsabschluss").Top = buttonTop - 6
    End With
    
    
    With F_HBB.oF_HBB_Cyber_Risikofragen
        If bFrame_RisikofragenGKL3Visible Then
            .Height = F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL3").Top + F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL3").Height + BottomDist
        ElseIf ShowRisikofragen Then
            .Height = F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Top + F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Frame_RisikofragenGKL2").Height + BottomDist
        Else
            .Height = F_HBB.oF_HBB_Cyber_Risikofragen.Controls("CommandButton_Obliegenheiteneinblenden").Top + ButtonDist + BottomDist
        End If
    End With
   
End Sub


'Speichert die Risikofragen und passt die Anzeige auf der Maske dazu an
Public Sub RisikofragenChange()
    M_HBB_Cyber.BerechneNeu
    
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Label_AlleFragen").Visible = Not AlleFragenBeantwortet
    'Kein Vertragsabschluss m|fffd|glich nur dann anzeigen, wenn alle Fragen beantwortet wurden und ein Abschluss nicht m|fffd|glich ist.
    F_HBB.oF_HBB_Cyber_Risikofragen.Controls("Label_KeinVertragsabschluss").Visible = (Not IsVertragsabschlussErlaubt) And AlleFragenBeantwortet

End Sub



'F7 und F8 stehen in logischer Abh|fffd|ngigkeit zueinander
Public Sub F7Change()
    With F_HBB.oF_HBB_Cyber_Risikofragen
            Dim bValue As Boolean
            bValue = .Controls("OptionButton_RisikofragenGKL2_F7_J").value
            .Controls("Frame_RisikofragenGKL2_F8").Visible = bValue
            .Controls("Label_RisikofragenGKL2_F8").Visible = bValue
    End With
End Sub



'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    With F_HBB.oF_HBB_Cyber_Risikofragen
    
        ShowRisikofragen = False
        
        .Controls("TextBox_Polizzennummer_Polizzennummer").value = ""
        .Controls("OptionButton_RisikofragenAllgemein_F1_J").value = False
        .Controls("OptionButton_RisikofragenAllgemein_F1_N").value = False
        .Controls("OptionButton_RisikofragenAllgemein_F2_J").value = False
        .Controls("OptionButton_RisikofragenAllgemein_F2_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F1_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F1_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F2_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F2_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F3_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F3_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F4_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F4_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F5_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F5_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F6_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F6_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F7_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F7_N").value = False
        .Controls("OptionButton_RisikofragenGKL2_F8_J").value = True
        .Controls("OptionButton_RisikofragenGKL2_F8_N").value = False
        .Controls("OptionButton_RisikofragenGKL3_F1_J").value = True
        .Controls("OptionButton_RisikofragenGKL3_F1_N").value = False
        .Controls("OptionButton_RisikofragenGKL3_F2_J").value = True
        .Controls("OptionButton_RisikofragenGKL3_F2_N").value = False
        .Controls("OptionButton_RisikofragenGKL3_F3_J").value = True
        .Controls("OptionButton_RisikofragenGKL3_F3_N").value = False
        .Controls("OptionButton_RisikofragenGKL3_F4_J").value = True
        .Controls("OptionButton_RisikofragenGKL3_F4_N").value = False
    End With
    
    
    F_HBB.PopDataStatus
End Sub



Public Sub TextBox_Polizzennummer_Polizzennummer_Change()
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_Polizzennummer"), "", weiss, hellgelb
    M_HBB_Cyber_Risikofragen.RisikofragenChange
End Sub
Attribute VB_Name = "M_HBB_SachSublimit"
Option Explicit

Private Const SublimitMaximum As Long = 100000
Private Const SublimitEN0Maximum As Long = 40000
Private Const SublimitEN1Maximum As Long = 80000
Private Const SublimitKFZMaximum As Long = 2000000
Private Const SublimitSturmMaximum As Long = 20000
Private Const SublimitWarenautomatenMaximum As Long = 20000
Private Const SublimitRohrbruchMaximum As Long = 50000



'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------


Public Sub LadeDaten()
    Sheet_Sachversicherung.LadeDaten
    Sheet_Uebersicht.LadeDaten
End Sub


'Direktes Aufrufen: nur Schreiben, ohne Daten neu zu laden
'Schreiben und Laden: Aufruf von BerechneNeu()
Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Sachversicherung.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub


Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'Feuer
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung").value = M_Global.global_NullEuroString
    
    
    'Sturm
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung").value = M_Global.global_NullEuroString
    
    'Leitungswasser
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung").value = M_Global.global_NullEuroString
   
    'ED
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.oF_HBB_Sach_Sublimits.Controls("CheckBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreienmitTeildiebstahl").value = False
    F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung").value = M_Global.global_NullEuroString
    F_HBB.PopDataStatus
    
    BerechneNeu
    
End Sub


'--------------------------------
' Locked und Enable Handler
'--------------------------------

Public Sub Frame_SachversicherungSublimits_Feuer_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Sublimits.Controls("Frame_SachversicherungSublimits_Feuer"), enabled
End Sub

Public Sub Frame_SachversicherungSublimits_Sturm_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Sublimits.Controls("Frame_SachversicherungSublimits_Sturm"), enabled
End Sub

Public Sub Frame_SachversicherungSublimits_Leitungswasser_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Sublimits.Controls("Frame_SachversicherungSublimits_Leitungswasser"), enabled
End Sub

Public Sub Frame_SachversicherungSublimits_Einbruchdiebstahl_Enable(enabled As Boolean, HBBPlus As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Sublimits.Controls("Frame_SachversicherungSublimits_Einbruchdiebstahl"), enabled
    
    'M_Global.EnableControl F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung"), Not HBBPlus, weiss, HellGrau
    'M_Global.EnableControl F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung"), Not HBBPlus, weiss, HellGrau
End Sub


'--------------------------------
' Eventhandler Change und Exit
'--------------------------------

'Ausgeborgtes Event: Behandelt eine |fffd|nderung des HBB Plus Statuses aus der F_HBB Form
Public Sub CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort_Change(bHBBPlus As Boolean)

   'pr|fffd|fe alle Sublimits: sollte sich ein Wert ver|fffd|ndern, nicht neu berechnen, sondern einmal ganz zum Schluss (daher DataStatus gesetzt)
    'Feuer
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Change True
    
    'Sturm
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Change True
    
    
    'Leitungswasser
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Change True
    
    'Einbruchdiebstahl
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Change True



End Sub

Public Sub CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv_Change(bHBBPlus As Boolean)

'pr|fffd|fe alle Sublimits: sollte sich ein Wert ver|fffd|ndern, nicht neu berechnen, sondern einmal ganz zum Schluss (daher DataStatus gesetzt)
    'Feuer
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Change True
    
    'Sturm
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Change True
    
    
    'Leitungswasser
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Change True
    
    'Einbruchdiebstahl
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change True
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Change True


    'enable / disable
    'M_Global.EnableControl F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung"), Not bHBBPlus, weiss, HellGrau
    'M_Global.EnableControl F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung"), Not bHBBPlus, weiss, HellGrau


End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub CheckBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreienmitTeildiebstahl_Click()
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung"), _
        SublimitKFZMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_AktuellerWert").value, , , silent
    BerechneNeu

End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung"), _
        SublimitSturmMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung"), _
        SublimitSturmMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_AktuellerWert").value, , , silent
    BerechneNeu

End Sub


Public Sub TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Change(silent As Boolean)
     M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung"), _
        SublimitWarenautomatenMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung"), _
        SublimitWarenautomatenMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung"), _
        SublimitRohrbruchMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_AktuellerWert").value, , , silent
    BerechneNeu

End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung"), _
        SublimitWarenautomatenMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung")
    BerechneNeu

End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung")
    BerechneNeu

End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung")
    BerechneNeu

End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung"), _
        SublimitKFZMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_AktuellerWert").value, , , silent, "Feuer KFZ Sublimit"
    
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung"), _
        SublimitKFZMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_AktuellerWert").value, , , silent, "Sturm KFZ Sublimit"
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung"), _
        SublimitEN0Maximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_AktuellerWert").value, , , silent
    BerechneNeu
    
    If F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_NeuerWert") > 10000 Then
        F_HBB.oF_HBB_Sach_Sublimits.Controls("Label_KassenEN0").Visible = True
    Else
        F_HBB.oF_HBB_Sach_Sublimits.Controls("Label_KassenEN0").Visible = False
    End If
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung")
        
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung"), _
        SublimitEN1Maximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_AktuellerWert").value, , , silent
    BerechneNeu
    
    If F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_NeuerWert") > 20000 Then
        F_HBB.oF_HBB_Sach_Sublimits.Controls("Label_KassenEN1").Visible = True
    Else
        F_HBB.oF_HBB_Sach_Sublimits.Controls("Label_KassenEN1").Visible = False
    End If

End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung"), _
        SublimitMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_AktuellerWert").value, , , silent
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung")
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung"), _
        SublimitKFZMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_AktuellerWert").value, , , silent, "Einbruchdiebstahl KFZ in R|fffd|umlichkeiten Sublimit"
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung")
    BerechneNeu
End Sub


Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change(silent As Boolean)
    M_Global.PruefeEingabeChange _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung"), _
        SublimitKFZMaximum - F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_AktuellerWert").value, , , silent, "Einbruchdiebstahl KFZ in R|fffd|umlichkeiten/Freien Sublimit"
    BerechneNeu
End Sub

Public Sub TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Exit()
    M_Global.PruefeEingabeExit _
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung")
    BerechneNeu
End Sub




Attribute VB_Name = "M_HBB_SachVorteilsdeckung"
Option Explicit

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------


Public Sub LadeDaten()
    Sheet_Sachversicherung.LadeDaten
    Sheet_Uebersicht.LadeDaten
End Sub


'Direktes Aufrufen: nur Schreiben, ohne Daten neu zu laden
'Schreiben und Laden: Aufruf von BerechneNeu()
Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Sachversicherung.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub


Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'Feuer
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastro").value = False
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel").value = False
    
    'Sturm
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro").value = False
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel").value = False
    
    'Leitungswasser
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro").value = False
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel").value = False
   
    'ED
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro").value = False
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel").value = False
        
    'Glasbruch
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro").value = False
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel").value = False
       
    F_HBB.PopDataStatus
    
    BerechneNeu
    
End Sub


'--------------------------------
' Alle VDs w|fffd|hlen
'--------------------------------

'Setzt alle HandelVDs, berechnet nicht neu
Public Sub SetzteAlleVorteilsdeckungenHandel(newValue As Boolean)
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel").value = newValue
    
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel").locked = newValue

    F_HBB.PopDataStatus

End Sub



'Setzt alle Gastro VDs, berechnet nicht neu
Public Sub SetzteAlleVorteilsdeckungenGastro(newValue As Boolean)
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastro").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro").value = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro").value = newValue
    
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastro").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro").locked = newValue
    F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro").locked = newValue

    F_HBB.PopDataStatus

End Sub


'--------------------------------
' Locked und Enable Handler
'--------------------------------

Public Sub Frame_Sachversicherung_Vorteilsdeckungen_Feuer_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("Frame_Sachversicherung_Vorteilsdeckungen_Feuer"), enabled
End Sub

Public Sub Frame_Sachversicherung_Vorteilsdeckungen_Sturm_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("Frame_Sachversicherung_Vorteilsdeckungen_Sturm"), enabled
End Sub

Public Sub Frame_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("Frame_Sachversicherung_Vorteilsdeckungen_Leitungswasser"), enabled
End Sub

Public Sub Frame_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("Frame_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl"), enabled
End Sub

Public Sub Frame_Sachversicherung_Vorteilsdeckungen_Glasbruch_Enable(enabled As Boolean)
    M_Global.EnableControlRecursive F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("Frame_Sachversicherung_Vorteilsdeckungen_Glasbruch"), enabled
End Sub



'--------------------------------
' Eventhandler Change und Exit
'--------------------------------

Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Handel_Change()
    SetzteAlleVorteilsdeckungenHandel (F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Handel").value)
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungHandel").value = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Handel").value
    BerechneNeu
End Sub


Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro_Change()
    SetzteAlleVorteilsdeckungenGastro (F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro").value)
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungGastro").value = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro").value
    BerechneNeu
End Sub


Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastronomie_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro_Change()
    BerechneNeu
End Sub
Public Sub CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel_Change()
    BerechneNeu
End Sub
Attribute VB_Name = "M_HBB_Spartenauswahl_BU"
Option Explicit

'Bei einer Haftungszeit von 6 Monaten bei Feuer muss ein Infotext eingeblendet werden.
Private Const FeuerHaftungszeitInfo = 6


'gew|fffd|hlt/nicht gew|fffd|hlt
Public Property Get BU() As Boolean
    BU = F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value
End Property

'Maximalwerte abh|fffd|ngig von der Lizenz
Private Property Get DeckungsbeitragMaximum() As Long
    'wenn BU Feuer atkiviert ist, dann z|fffd|hlt Gesamt-VS plus Haftungssumme BU Feuer
    If F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value Then
        DeckungsbeitragMaximum = (M_Global.VSMaximum - M_HBB_Spartenauswahl_Sach.InhaltVS * 1.2 - M_HBB_Spartenauswahl_Sach.GebaeudeVS * 1.2) / (Feuer_Haftungszeit / 12)
        If DeckungsbeitragMaximum < 0 Then DeckungsbeitragMaximum = 0
    Else 'ansonsten fix laut VS Maximum
        DeckungsbeitragMaximum = M_Global.VSMaximum
    End If
End Property


'Minimalwerte abh|fffd|ngig von der Lizenz
Private Property Get DeckungsbeitragMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        DeckungsbeitragMinimum = 10000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        DeckungsbeitragMinimum = 10000
    Else
        DeckungsbeitragMinimum = 10000
    End If
End Property

Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property

Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property


Public Property Get Deckungsbeitrag() As Double
    If (F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value) Then
        Deckungsbeitrag = Val(Format(F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag").value, "General Number"))
    Else
        Deckungsbeitrag = 0
    End If
End Property


Private Property Get Feuer_Haftungszeit() As Integer
    If (F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value And F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value) Then
        Feuer_Haftungszeit = Val(Format(F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").value, "General Number"))
    Else
        'Achtung: bei nicht gew|fffd|hlter BU Feuer muss 12 Monate retour gegeben werden, damit der gesamtfaktor 12/12 = 1 ergibt und keine |fffd|nderung der Summe bewirkt wird.
        Feuer_Haftungszeit = 12
    End If
End Property



Public Property Get Feuer_Haftungsssumme() As Double
    If (F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value And F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value) Then
        Feuer_Haftungsssumme = Val(Format(F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Feuer_DB").value, "General Number"))
    Else
        Feuer_Haftungsssumme = 0
    End If
End Property

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------


Public Sub LadeDaten()
    If F_HBB.DatatStatusInitial Then
        'Beim erstamligen Laden Technik anzeigen wenn gew|fffd|hlt
        If F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Then CheckBox_Uebersicht_Betriebsunterbrechnung_Change
        'Comboboxes f|fffd|llen
        ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit_FillData
        ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit_FillData
    End If

    'wenn eine g|fffd|ltige BA geladen wurden, dann Daten laden
    If F_HBB.BAGueltig Then

        'Daten laden
        Sheet_BU.LadeDaten
                        
        PruefeSpartenAbhaengigkeiten
                        
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
                   
            TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_Change
            If F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value Then CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Change
            If F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").value Then CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Change
            CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach_Change
        
        Else 'neue |fffd|bersichtspr|fffd|mien beim erstmaligem Laden nicht neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    
    End If
End Sub



'Pr|fffd|ft Spartenabh|fffd|ngigkeiten untereinandern: |fffd|nderungen in Sach haben Auswirkungen auf die Anzeige in Technik
Public Sub PruefeSpartenAbhaengigkeiten()
    'Alle Werte, die durch andere Sparten beeinflusst werden und Auswirkung auf das UI haben, m|fffd|ssen hier gepr|fffd|ft werden.
    'Rabatte wie Sach - Checkbox aktivieren
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach").Visible = M_HBB_Uebersicht.Sach
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach").value = M_HBB_Uebersicht.Sach And F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach").value

End Sub


'Direktes Aufrufen: nur Schreiben, ohne Daten neu zu laden
'Schreiben und Laden: Aufruf von BerechneNeu()
Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_BU.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub



'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
       
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag").value = M_Global.global_NullEuroString
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag").BackColor = Color.hellgelb
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").BackColor = Color.hellgelb
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").BackColor = Color.hellgelb
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel").value = False
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach").value = False
    
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_GenehmigtDurch").value = ""
    
    F_HBB.PopDataStatus
    
    BerechneNeu

End Sub

'------------------
' ComboBoxes f|fffd|llen
'------------------

Private Sub ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit_FillData()
    Dim i As Integer
    
    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit")
            Dim SBListe As Variant
            SBListe = ThisWorkbook.Sheets(global_Tabellenblatt_BU).Range("T_BU_Feuer_Haftungszeit").value
            
            For i = 1 To UBound(SBListe)
                SBListe(i, 1) = Format(SBListe(i, 1), "General Number")
            Next i
            
            .List = SBListe
            .ListIndex = 0
        End With
    End If
End Sub


Private Sub ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit_FillData()
    Dim i As Integer
    
    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit")
            Dim SBListe As Variant
            SBListe = ThisWorkbook.Sheets(global_Tabellenblatt_BU).Range("T_BU_Elementar_Haftungszeit").value
            
            For i = 1 To UBound(SBListe)
                SBListe(i, 1) = Format(SBListe(i, 1), "General Number")
            Next i
            
            .List = SBListe
            .ListIndex = 0
        End With
    End If
End Sub


'--------------------------------
' Eventhandler
'--------------------------------

Public Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_Change()
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag"), _
        DeckungsbeitragMaximum, 0, "Standard", False, "Maximale VS |fffd|berschritten", "Die Gesamtversicherungssumme inkl. DB BU darf " & Format(M_Global.VSMaximum, "Currency") & " nicht |fffd|berschreiten."
        
    'M_Global.PruefeFehlendeEingabeTextBox F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag"), M_Global.global_NullEuroString, Color.weiss, Color.Hellgelb
    M_Global.PruefeEingabeBereichTextBox F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag"), DeckungsbeitragMinimum, DeckungsbeitragMaximum, Color.weiss, Color.hellgelb
    BerechneNeu
End Sub

Public Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag"), "Standard"
End Sub

Public Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Change()
    Dim bFeuer As Boolean
    bFeuer = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value

    F_HBB.Controls("Label_Spartenauswahl_Betriebsunterbrechung_Feuer_Monate").Visible = bFeuer
    F_HBB.Controls("Label_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").Visible = bFeuer
    F_HBB.Controls("Label_Spartenauswahl_Betriebsunterbrechung_Feuer_Vorteilsdeckung").Visible = bFeuer
    F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").Visible = bFeuer
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel").Visible = bFeuer
    F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro").Visible = bFeuer
    
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Feuer_DB").Visible = bFeuer
    
    F_HBB.Controls("InfoButton_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro").Visible = bFeuer
    F_HBB.Controls("InfoButton_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel").Visible = bFeuer
    
    M_Global.PruefeFehlendeEingabeCheckBoxes F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer"), F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar"), Color.HelvetiaLila, Color.hellgelb
    
    'Pr|fffd|fung auf GesamtVS
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag"), _
        DeckungsbeitragMaximum, 0, "Standard", , "Zu hohe Versicheurngssumme", "Die Gesamtversicherungssumme aus der Sachversicherung plus die Haftungssumme aus BU Feuer |fffd|berschreiten das erlaubte Maximum."
    
    BerechneNeu
End Sub

Public Sub ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit_Change()
    If F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").ListIndex < 0 Then Exit Sub
    'Hinweistext ein/ausblenden
    F_HBB.Controls("Label_Spartenauswahl_Betriebsunterbrechung_Feuer_HaftungszeitInfo").Visible = _
        (F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").value = FeuerHaftungszeitInfo)
    'Maximale VS Summe pr|fffd|fen
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag"), _
        DeckungsbeitragMaximum, 0, "Standard"
    
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten_Click()
'    Dim bMehrkosten As Boolean
'
'    bMehrkosten = F_HBB.CheckBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten.value
'
'    F_HBB.Label_Spartenauswahl_Betriebsunterbrechung_Mehrkosten_VS.Visible = bMehrkosten
'    F_HBB.TextBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten_VS.Visible = bMehrkosten
    
    
    
    BerechneNeu
    
End Sub


Public Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Change()
    Dim bElementar As Boolean
    bElementar = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").value

    F_HBB.Controls("Label_Spartenauswahl_Betriebsunterbrechung_Elementar_Monate").Visible = bElementar
    F_HBB.Controls("Label_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit").Visible = bElementar
    F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit").Visible = bElementar
    
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Elementar_DB").Visible = bElementar
    
    M_Global.PruefeFehlendeEingabeCheckBoxes F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer"), F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar"), Color.HelvetiaLila, Color.hellgelb

    BerechneNeu
End Sub

Public Sub ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit_Change()
    If F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit").ListIndex < 0 Then Exit Sub

    BerechneNeu
End Sub

Public Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
    End If

End Sub
Public Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR_Exit()
    'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR"), "General Number"

End Sub
Public Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC"), _
            F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_GenehmigtDurch")
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC"), _
            VPCrabattMaximum, 0, "General Number"
        BerechneNeu
    End If

End Sub
Public Sub TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC_Exit()
    'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC"), "General Number"

End Sub


Public Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach_Change()
    Dim bRabatteWieSach As Boolean
    bRabatteWieSach = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach").value

    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_GenehmigtDurch").Visible = Not bRabatteWieSach
    
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SRSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPCSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_GenehmigtDurchSach").Visible = bRabatteWieSach
    
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel_Change()
    BerechneNeu
End Sub

Public Sub Frame_Spartenauswahl_BU_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = 0
    End If
        
        
End Sub


Attribute VB_Name = "M_HBB_Spartenauswahl_GMRS"
Option Explicit

'GMRS angehakt
Public Property Get GMRS() As Boolean
    GMRS = F_HBB.Controls("CheckBox_Uebersicht_GMRS").value
End Property


'Ermittelt den maximal m|fffd|glichen VPC Rabatt
Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt
Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property

'Pr|fffd|ft Abh|fffd|ngigkeit zu Rechtsschutz oder KFZ-RS
Public Sub PruefeSpartenAbhaengigkeiten()

    'Rabatte wie Sach - Checkbox aktivieren
    F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").Visible = M_HBB_Uebersicht.Sach
    F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").value = M_HBB_Uebersicht.Sach And F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").value
    
    'CheckBox SB Verzicht h|fffd|ngt logisch an RS Genereller SB Verzicht
    With F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_SBVerzicht")
        If F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Then
            .value = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht").value
            .Caption = "Selbstbehaltsverzicht (|fffd|bernommen von RS)"
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value Then
            .value = F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht").value
            .Caption = "Selbstbehaltsverzicht (|fffd|bernommen von KFZ-RS)"
        Else
        
            .Caption = "Selbstbehaltsverzicht"
        End If
        .enabled = Not (F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Or F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value)
    End With


        'Textbox VS h|fffd|ngt an RS und HBB Plus
    With F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Versicherungssumme")
        If F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value And (F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value Or F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value) Then
            .value = "160.000,00"
        Else
            .value = "120.000,00"
        End If
    End With
End Sub



Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
        Sheet_GMRS.Reset
        LadeDaten
        SchreibeDaten
        
    F_HBB.PopDataStatus
    
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
        M_HBB_Uebersicht.LadeDaten
    End If
End Sub



Public Sub LadeDaten()

    Sheet_GMRS.LadeDaten
    M_HBB_Uebersicht.LadeDaten
    
    If F_HBB.DatatStatusInitial Then
        M_HBB_Uebersicht.Checkbox_Uebersicht_GMRS_Change
        M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt"), "", weiss, orange
        M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet"), "", weiss, orange
        M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum"), "", weiss, orange
        M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet"), "", weiss, orange
        M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet"), "", weiss, hellgelb
         M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt"), "", weiss, orange
         M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet"), "", weiss, orange
         M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche"), "", weiss, orange
         M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet"), "", weiss, orange
         M_Global.PruefeFehlendeEingabeTextBox F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet"), "", weiss, orange
    End If
End Sub


Public Sub SchreibeDaten()
    Sheet_GMRS.SchreibeDaten
End Sub

Public Sub CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt_Click()

    'ein und ausblenden von den Labels
    Dim Checked As Boolean
    Checked = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt").value
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_SelbstgenuetztAnzahl").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt").Visible = Checked
    If Checked Then
        F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_GMRS_Adressen").Visible = True
     End If

End Sub

Public Sub CheckBox_Spartenauswahl_GMRS_WohnunVermietet_Click()


    'ein und ausblenden von den Labels
    Dim Checked As Boolean
    Checked = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnunVermietet").value
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_WohnungenVermietetAnzahl").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").Visible = Checked
    If Checked Then
        F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_GMRS_Adressen").Visible = True
    End If

End Sub

Public Sub CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum_Click()


    'ein und ausblenden von den Labels
    Dim Checked As Boolean
    Checked = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum").value
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_Quadratmeter").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_Nutzflaeche").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").Visible = Checked
    If Checked Then
        F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_GMRS_Adressen").Visible = True
    End If
    


End Sub

Public Sub CheckBox_Spartenauswahl_GMRS_GewGenutzGemietet_Click()
'TODO was macht das mit dem Tarif

    'ein und ausblenden von den Labels
    Dim Checked As Boolean
    Checked = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGentztGemietet").value
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_Euro").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_JahresbruttomieteGemietet").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").Visible = Checked
    If Checked Then
        F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_GMRS_Adressen").Visible = True

    End If

End Sub


Public Sub CommandButton_GMRS_Versicherungsorthinzufuegen_Click()
Dim plz As String, ort As String, strasse As String


    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_GMRS_Versicherungsort1").value Then
        
        plz = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_PLZ").value
        ort = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Ort").value
        strasse = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value
        
        If F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Wohnung Vermietet" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value + " " + strasse + " " + plz + " " + ort + ";"
        
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblilch Genutzte Einheit Vermietet" Then
            
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value + " " + strasse + " " + plz + " " + ort + ";"
            
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblich Genutzte Einheit Eigentum" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value + " " + strasse + " " + plz + " " + ort + ";"
        
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Wohnung Selbstgenutzt" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value + " " + strasse + " " + plz + " " + ort + ";"
            
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblich Genutzte Einheit Gemietet" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value + " " + strasse + " " + plz + " " + ort + ";"
        End If
        
        
    End If
    
    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_GMRS_Versicherungsort2").value Then
        
        plz = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_PLZ").value
        ort = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Ort").value
        strasse = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Strasse").value
        
         If F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Wohnung Vermietet" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value + " " + strasse + " " + plz + "" + ort + ";"
        
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblilch Genutzte Einheit Vermietet" Then
            
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value + " " + strasse + " " + plz + "" + ort + ";"
            
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblich Genutzte Einheit Eigentum" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value + " " + strasse + " " + plz + "" + ort + ";"
        
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Wohnung Selbstgenutzt" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value + " " + strasse + " " + plz + "" + ort + ";"
            
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblich Genutzte Einheit Gemietet" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value + " " + strasse + " " + plz + "" + ort + ";"
        End If
        
    End If
    
    If F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_GMRS_Versicherungsort3").value Then
    
        plz = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_PLZ").value
        ort = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Ort").value
        strasse = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Strasse").value
        
        
 If F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Wohnung Vermietet" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value + " " + strasse + " " + plz + "" + ort + ";"
        
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblilch Genutzte Einheit Vermietet" Then
            
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value + " " + strasse + " " + plz + "" + ort + ";"
            
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblich Genutzte Einheit Eigentum" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value + " " + strasse + " " + plz + "" + ort + ";"
        
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Wohnung Selbstgenutzt" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value + " " + strasse + " " + plz + "" + ort + ";"
            
        ElseIf F_HBB.oF_HBB_GMRS_Adressen.Controls("ComboBox_GMRS_WohnungstypHinzufuegen").value = "Gewerblich Genutzte Einheit Gemietet" Then
        
            F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value + " " + strasse + " " + plz + "" + ort + ";"
        End If
        
    End If
    

End Sub

Public Sub CheckBox_Spartenauswahl_GMRS_RabatteWieSach_Click()

    Dim bRabatteWieSach As Boolean
    bRabatteWieSach = F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").value

    F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SR").Visible = Not bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPC").Visible = Not bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_GenehmigtDurch").Visible = Not bRabatteWieSach
        
    F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SRSach").Visible = bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPCSach").Visible = bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_GenehmigtDurchSach").Visible = bRabatteWieSach
    If F_HBB.DatatStatusInitial Then Exit Sub
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_GMRS_SBVerzicht_Click()

    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet_Click()
'TODO was macht das mit dem Tarif

    'ein und ausblenden von den Labels
    Dim Checked As Boolean
    Checked = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet").value
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_Euro2").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_Spartenauswahl_GMRS_JahresbruttomieteVermietet").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet").Visible = Checked
    F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").Visible = Checked
    If Checked Then
        F_HBB.oF_HBB_GMRS_Adressen.Controls("Label_GMRS_Adressen").Visible = True
    End If
End Sub

Public Sub Textbox_Spartenauswahl_GMRS_Rabatte_VPC_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPC").value = "-" Or _
       F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPC").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPC"), _
            F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_GenehmigtDurch")
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPC"), _
            VPCrabattMaximum, 0, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub TextBox_Spartenauswahl_GMRS_Rabatte_SR_Change()

    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
    End If

End Sub

Public Sub Frame_Spartenauswahl_GMRS_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_VPC").value = 0
    End If
        
        
End Sub

Public Sub Textbox_Spartenauswahl_GMRS_Rabatte_VPC_Exit()

    If F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_VPC").value = 0
    End If

End Sub

Public Sub Textbox_Spartenauswahl_GMRS_Rabatte_SR_Exit()

    If F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Rabatte_SR").value = 0
    End If

End Sub


Public Sub CommandButton_Fertig_Click()
    Sheet_GMRS.SchreibeDaten
    Sheet_GMRS.LadeDaten
    M_HBB_Uebersicht.LadeDaten
    
    
    End Sub
   
Attribute VB_Name = "M_HBB_Spartenauswahl_Haft"
Option Explicit

Public Property Get Haft() As Boolean
    Haft = F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value
End Property

Public Property Get Betrieb() As Boolean
    Betrieb = F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").value And Haft
End Property

'Ermittelt den maximal m|fffd|glichen HGHP Geb|fffd|udeneubauwert
Private Property Get HGHPGebaedeNeubauwertMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        HGHPGebaedeNeubauwertMaximum = 99999999
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        HGHPGebaedeNeubauwertMaximum = 10000000
    Else
        HGHPGebaedeNeubauwertMaximum = 0
    End If
End Property


'Ermittelt den minimal m|fffd|glichen HGHP Geb|fffd|udeneubauwert
Private Property Get HGHPGebaedeNeubauwertMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        HGHPGebaedeNeubauwertMinimum = 10000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        HGHPGebaedeNeubauwertMinimum = 10000
    Else
        HGHPGebaedeNeubauwertMinimum = 10000
    End If
End Property


Private Property Get BetriebLohnsummeMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        BetriebLohnsummeMaximum = 10000000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        BetriebLohnsummeMaximum = 10000000
    Else
        BetriebLohnsummeMaximum = 0
    End If
End Property


Private Property Get BetriebUmsatzMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        BetriebUmsatzMaximum = 100000000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        BetriebUmsatzMaximum = 100000000
    Else
        BetriebUmsatzMaximum = 0
    End If
End Property


'Ermittelt den maximal m|fffd|glichen Sonderrabatt
Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property



'Ermittelt den maximal m|fffd|glichen VPC Rabatt
Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property



'Alle Methoden, die auf der Page Haftpflicht der Start Form ben|fffd|tigt werden

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------

Public Sub LadeDaten()
    'Dropdownlisten nur beim erstemaligen Starten f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        'beim erstamligen Laden Haft anzeigen wenn gew|fffd|hlt
        If F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value Then CheckBox_Uebersicht_Haftpflicht_Change
        
        ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS_FillData
        ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS_FillData
    End If
    
    
    If F_HBB.BAGueltig Then

        Sheet_Haftpflicht.LadeDaten
    
        PruefeSpartenAbhaengigkeiten
    
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
            If F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").value Then OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb_Change
            If F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_HGHP").value Then OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb_Change
            'If F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlus").value Then CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlus_Change
            CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort_Change
            CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv_Change
            TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_Change
            TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_Change
            TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert_Change
            CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach_Change
            
            
        Else 'neue |fffd|bersichtspr|fffd|mien beim erstmaligem Laden nicht neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    
    End If
End Sub


'Pr|fffd|ft Spartenabh|fffd|ngigkeiten untereinandern: |fffd|nderungen in Sach haben Auswirkungen auf die Anzeige in Technik
Public Sub PruefeSpartenAbhaengigkeiten()
    'Alle Werte, die durch andere Sparten beeinflusst werden und Auswirkung auf das UI haben, m|fffd|ssen hier gepr|fffd|ft werden.
    'Inhalts-VS Felder umschalten, wenn InhaltVS gew|fffd|hlt
    Dim bGebaeudeVSSach As Boolean
    bGebaeudeVSSach = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value And M_HBB_Uebersicht.Sach
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert").Visible = Not bGebaeudeVSSach
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_GebaeudeneubauwertSach").Visible = bGebaeudeVSSach
    
    If bGebaeudeVSSach Then
        F_HBB.Controls("Label_Spartenauswahl_Haftpflicht_HGHP_MindesVS").Visible = False
    Else
    
        If Format(F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert").value, "General Number") < HGHPGebaedeNeubauwertMinimum Then
            F_HBB.Controls("Label_Spartenauswahl_Haftpflicht_HGHP_MindesVS").Visible = True
        Else
            F_HBB.Controls("Label_Spartenauswahl_Haftpflicht_HGHP_MindesVS").Visible = False
        End If
    
    
    End If
    
            
    'Rabatte wie Sach - Checkbox aktivieren
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach").Visible = M_HBB_Uebersicht.Sach
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach").value = M_HBB_Uebersicht.Sach And F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach").value
       
End Sub


Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Haftpflicht.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub



'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'Betrieb
    F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").value = False
    F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht_Betrieb").Visible = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").BackColor = Color.hellgelb
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort").value = True
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme").value = ""
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme").BackColor = Color.hellgelb
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz").value = M_Global.global_NullEuroString
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz").BackColor = Color.hellgelb
    
    F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex = 0
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Bau").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Gastronomie").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_GastronomiePauschalreisen").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handel").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handwerk").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebe").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebeTaetigkeiten").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Produktion").value = False
    
    'HGHP
    F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_HGHP").value = False
    F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht_HGHP").Visible = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_HGHP").BackColor = Color.hellgelb
    
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert").value = M_Global.global_NullEuroString
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert").BackColor = Color.hellgelb
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach").value = False
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_GenehmigtDurch").value = ""
    
    F_HBB.PopDataStatus
    
    BerechneNeu

End Sub





'------------------
' ComboBoxes f|fffd|llen
'------------------

Private Sub ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS_FillData()
    Dim i As Integer

    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS")
            Dim PVSListe As Variant
            PVSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Haftpflicht).Range("T_Haftpflicht_HGHP_PVS").value
            
            For i = 1 To UBound(PVSListe)
                PVSListe(i, 1) = Format(PVSListe(i, 1), "Standard")
            Next i
            
            .List = PVSListe
            .ListIndex = 0
        End With
    End If
End Sub


Private Sub ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS_FillData()
    Dim i As Integer

    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS")
            Dim PVSListe As Variant
            PVSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Haftpflicht).Range("T_Haftpflicht_Betrieb_PVS").value
            
            For i = 1 To UBound(PVSListe)
                PVSListe(i, 1) = Format(PVSListe(i, 1), "Standard")
            Next i
            
            .List = PVSListe
            .ListIndex = 0
        End With
    End If
End Sub



'--------------------------------
' Eventhandler
'--------------------------------

Public Sub OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb_Change()
    Dim bBetrieb As Boolean
    bBetrieb = F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").value
    
    F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht_Betrieb").Visible = bBetrieb
    F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht_HGHP").Visible = Not bBetrieb
    
    M_Global.PruefeFehlendeEingabeOptionButton F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb"), F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_HGHP"), Color.HelvetiaBlau, Color.hellgelb
    
    BerechneNeu
    
    'Cyber ist abh|fffd|ngig Haftpflicht Betrieb
    M_HBB_Cyber.PruefeSpartenAbhaengigkeiten
End Sub


Public Sub ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS_Change()
    If F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS").ListIndex < 0 Then Exit Sub
    
    BerechneNeu
End Sub


Public Sub TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert_Change()
    M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert"), HGHPGebaedeNeubauwertMaximum, , "Standard"
    'M_Global.PruefeFehlendeEingabeTextBox F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert"), M_Global.global_NullEuroString, weiss, Hellgelb
    M_Global.PruefeEingabeBereichTextBox F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert"), HGHPGebaedeNeubauwertMinimum, HGHPGebaedeNeubauwertMaximum, weiss, hellgelb
    BerechneNeu

    If Format(F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert").value, "General Number") < HGHPGebaedeNeubauwertMinimum Then
        F_HBB.Controls("Label_Spartenauswahl_Haftpflicht_HGHP_MindesVS").Visible = True
    Else
        F_HBB.Controls("Label_Spartenauswahl_Haftpflicht_HGHP_MindesVS").Visible = False
    End If
    
End Sub


Public Sub TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert")
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach_Change()

    Dim bRabatteWieSach As Boolean
    bRabatteWieSach = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach").value

    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_GenehmigtDurch").Visible = Not bRabatteWieSach
        
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SRSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPCSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_GenehmigtDurchSach").Visible = bRabatteWieSach
        
    BerechneNeu
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR_Exit()
   'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = ""
    End If
    
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR"), "General Number"
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC"), _
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_GenehmigtDurch")
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC"), _
            VPCrabattMaximum, 0, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC_Exit()
   'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = """"
    End If
    
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC"), "General Number"
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Bau_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Gastronomie_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_GastronomiePauschalreisen_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handel_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handwerk_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebe_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebeTaetigkeiten_Change()
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Produktion_Change()
    BerechneNeu
End Sub

Public Sub ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS_Change()
   If F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex < 0 Then Exit Sub
   BerechneNeu
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_Change()
    M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme"), BetriebLohnsummeMaximum, , "Standard"
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme"), "", weiss, hellgelb
    BerechneNeu
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme")
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_Change()
    M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz"), BetriebUmsatzMaximum, , "Standard"
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz"), M_Global.global_NullEuroString, weiss, hellgelb
    BerechneNeu
    
    'Cyber neu laden
    M_HBB_Cyber.LadeDaten
End Sub

Public Sub TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz")
End Sub

Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort_Change()
    
    Dim bHBBPlusKom As Boolean
    Dim id As Integer
    bHBBPlusKom = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort").value
     id = F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex
    'If else Block - Falls sich da wieder etwas |fffd|ndert!!
    If bHBBPlusKom Then
       
        If F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv").value = False
            id = id + 1

        End If
        
        
            
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Clear
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "1.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "2.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "3.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "4.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "5.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex = id
    Else
        If (F_HBB.DatatStatusInitial) Then Exit Sub
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Clear
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "1.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "2.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "3.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "4.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "5.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex = id
        

    
    End If
    
    F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = True
    F_HBB.Controls("Textbox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = False
    
   
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv_Change()
    
    Dim bHBBPlusEx As Boolean
    Dim id As Integer
    bHBBPlusEx = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv").value
    
    id = F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex
    'Bei Exklusiv 2 bis 5 Mio
    If bHBBPlusEx Then
           
        
            
        id = id - 1
        If id = -1 Then
                id = 0
        End If

        F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort").value = False
        
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Clear
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "2.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "3.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "4.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "5.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = True
        F_HBB.Controls("Textbox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = False
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex = id
        
    Else
    
    If (F_HBB.DatatStatusInitial) Then Exit Sub
            id = id + 1

    
        
    'Bei Komfort 1 bis 5 Mio
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Clear
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "1.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "2.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "3.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "4.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").AddItem "5.000.000"
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = True
        F_HBB.Controls("Textbox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = False
        F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").ListIndex = id
        
    
    End If
    
    'F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = Not bHBBPlusEx
    'F_HBB.Controls("Textbox_Spartenauswahl_Haftpflicht_Betrieb_PVS").Visible = bHBBPlusEx
    
    BerechneNeu
End Sub

Public Sub Frame_Spartenauswahl_Haft_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = 0
    End If
        
        
End Sub

Attribute VB_Name = "M_HBB_Spartenauswahl_KFZRS"
Option Explicit

Public Property Get KFZRS() As Boolean
    KFZRS = F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt
Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen VPC Rabatt
Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property


Private Property Get Versicherungssumme() As Long
    If (F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value) Then
        Versicherungssumme = 160000
    Else
        Versicherungssumme = 120000
    End If
End Property

'Alle Methoden, die auf der Page KFZ-Rechtsschutz der Start Form ben|fffd|tigt werden

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------


Public Sub LadeDaten()
    'Dropdownlisten nur beim erstemaligen Starten f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        'beim erstamligen Laden KFZ RS anzeigen wenn gew|fffd|hlt
        If F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value Then CheckBox_Uebersicht_KFZRechtsschutz_Change
    End If
        
    If F_HBB.BAGueltig Then

        Sheet_KFZRechtsschutz.LadeDaten
    
        'PruefeSpartenAbhaengigkeiten
    
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
            
            CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach_Change
            CheckRechenbar
            
        Else 'neue |fffd|bersichtspr|fffd|mien beim erstmaligem Laden nicht neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    
    End If
End Sub


Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_KFZRechtsschutz.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub


'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
     
    F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_FzgVertragsRS").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach").value = False
    
    F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_GenehmigtDurch").value = ""
    
    F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_PKW_Anzahl").value = 0
    F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_PKW_Kennzeichen").value = ""
    F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_LKW_Anzahl").value = 0
    F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_LKW_Kennzeichen").value = ""
    F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_Sattelzug_Anzahl").value = 0
    F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_Sattelzug_Kennzeichen").value = ""
    
    F_HBB.Controls("Label_Spartenauswahl_KFZRechtsschutz_Kennzeichen").Visible = True
    
    F_HBB.PopDataStatus
    
    LadeDaten
    SchreibeDaten
       
    

End Sub



'Pr|fffd|ft Spartenabh|fffd|ngigkeiten untereinandern: |fffd|nderungen in Sach und RS haben Auswirkungen auf die Anzeige in KFZ-RS
Public Sub PruefeSpartenAbhaengigkeiten()
    'Rabatte wie Sach - Checkbox aktivieren
    F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach").Visible = M_HBB_Uebersicht.Sach
    F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach").value = M_HBB_Uebersicht.Sach And F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach").value
    
    'CheckBox SB Verzicht h|fffd|ngt logisch an RS Genereller SB Verzicht
    With F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht")
        If F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Then
            .value = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht").value
            .Caption = "Selbstbehaltsverzicht (|fffd|bernommen von RS)"
        Else
            .Caption = "Selbstbehaltsverzicht"
        End If
        .enabled = Not F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value
    End With
    
    'Textbox VS h|fffd|ngt an RS und HBB Plus
    With F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Versicherungssumme")
        If F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value And (F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value Or F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value) Then
            .value = "160.000,00"
        Else
            .value = "120.000,00"
        End If
    End With
    
    
End Sub

'--------------------------------
' Event Handler der User controls
'--------------------------------


Public Sub CheckBox_Spartenauswahl_KFZRechtsschutz_FzgVertragsRS_Change()
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht_Change()
    'Abh|fffd|ngigkeit zum SB Verzicht aus RS ist vorhanden, aber:
    'wenn RS aktiviert ist, kann man den SB nur aus der Rechtsschutz aktivieren oder deaktivieren
    'wenn RS nicht aktiviert ist, dann kann man den SB hier aktivieren/deaktivieren, aber RS braucht nicht behandelt werden.
   
   'GMRS Abh|fffd|ngigkeit SB Verzicht
    F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_SBVerzicht").value = F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht").value
       
    BerechneNeu
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
    
    
End Sub

Private Sub ComboBox_Kennzeichen_Anzahl_Helper(comboBoxAnzahl As MSForms.comboBox, textBox As MSForms.textBox)
    Dim anzahl As Integer
    anzahl = comboBoxAnzahl.value
    M_Global.EnableControl textBox, anzahl > 0, weiss, grau
    If anzahl > 0 Then M_Global.PruefeFehlendeEingabeTextBox textBox, "", weiss, hellgelb

End Sub


Public Sub CheckRechenbar()
    F_HBB.Controls("Label_Spartenauswahl_KFZRechtsschutz_Kennzeichen").Visible = Not (F_HBB.oF_HBB_Kennzeichen_KFZRS.Rechenbar)
End Sub


'Pr|fffd|ffunktion f|fffd|r die korrekte Eingabe von Anzahl und Kennzeichen der PKWs
Public Sub ComboBox_Kennzeichen_PKW_Change()
    ComboBox_Kennzeichen_Anzahl_Helper F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_PKW_Anzahl"), F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_PKW_Kennzeichen")
    CheckRechenbar
    BerechneNeu
End Sub

'Pr|fffd|ffunktion f|fffd|r die korrekte Eingabe von Anzahl und Kennzeichen der LKWs
Public Sub ComboBox_Kennzeichen_LKW_Change()
    ComboBox_Kennzeichen_Anzahl_Helper F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_LKW_Anzahl"), F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_LKW_Kennzeichen")
    CheckRechenbar
    BerechneNeu
End Sub

'Pr|fffd|ffunktion f|fffd|r die korrekte Eingabe von Anzahl und Kennzeichen der SZM
Public Sub ComboBox_Kennzeichen_Sattelzug_Change()
    ComboBox_Kennzeichen_Anzahl_Helper F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_Sattelzug_Anzahl"), F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_Sattelzug_Kennzeichen")
    CheckRechenbar
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach_Change()
    Dim bRabatteWieSach As Boolean
    bRabatteWieSach = F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach").value

    F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").Visible = Not bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").Visible = Not bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_GenehmigtDurch").Visible = Not bRabatteWieSach
        
    F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SRSach").Visible = bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPCSach").Visible = bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_GenehmigtDurchSach").Visible = bRabatteWieSach
    
    BerechneNeu
End Sub


Public Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
    End If
End Sub


Public Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR_Exit()
   'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = "-" Then
        F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = ""
    End If
    
    M_Global.PruefeEingabeExit F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR"), "General Number"
End Sub


Public Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = "-" Or _
       F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC"), _
            F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_GenehmigtDurch")
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC"), _
            VPCrabattMaximum, 0, "General Number"
        BerechneNeu
    End If
End Sub


Public Sub Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC_Exit()
   'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = "-" Then
        F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = ""
    End If
    
    M_Global.PruefeEingabeExit F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC"), "General Number"
End Sub


Public Sub Frame_Spartenauswahl_KFZRS_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = 0
    End If
        
        
End Sub

Attribute VB_Name = "M_HBB_Spartenauswahl_RS"
Option Explicit

Public Property Get RS() As Boolean
    RS = F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt
Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen VPC Rabatt
Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property


Private Property Get Versicherungssumme() As Long
    If (F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value Or F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value) Then
        Versicherungssumme = 160000
    Else
        Versicherungssumme = 120000
    End If
End Property



Public Sub Frame_Spartenauswahl_Rechtsschutz_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = 0
    End If
        
        
End Sub



 'Alle Methoden, die auf der Page Rechtsschutz der Start Form ben|fffd|tigt werden

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------


Public Sub LadeDaten()
    'Dropdownlisten nur beim erstemaligen Starten f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        'beim erstamligen Laden RS anzeigen wenn gew|fffd|hlt
        If F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Then CheckBox_Uebersicht_Rechtsschutz_Change
    
        ComboBox_Spartenauswahl_Rechtsschutz_Streitwert_FillData
    End If
        
    If F_HBB.BAGueltig Then

        Sheet_Rechtsschutz.LadeDaten
    
        PruefeSpartenAbhaengigkeiten
    
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
            
            CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach_Change
            CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort_Change
            If F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_AVRS").value Then CheckBox_Spartenauswahl_Rechtsschutz_AVRS_Change
            TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_Change
            
        Else 'neue |fffd|bersichtspr|fffd|mien beim erstmaligem Laden nicht neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    
    End If
End Sub


'Pr|fffd|ft Spartenabh|fffd|ngigkeiten untereinandern: |fffd|nderungen in Sach haben Auswirkungen auf die Anzeige in Technik
Public Sub PruefeSpartenAbhaengigkeiten()
   'Vorteilsdeckung muss geladen / angezeigt werden
    Sheet_Rechtsschutz.LadeVorteilsdeckung
    
    'Rabatte wie Sach - Checkbox aktivieren
    F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach").Visible = M_HBB_Uebersicht.Sach
    F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach").value = M_HBB_Uebersicht.Sach And F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach").value
End Sub


Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Rechtsschutz.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub


'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
     
    F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value = True
    F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value = False
    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter").value = ""
    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter").BackColor = Color.hellgelb
    
    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_NameVersichertePerson").value = ""
    F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_AVRS").value = False
    F_HBB.Controls("ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert").ListIndex = 0
    F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht").value = False
    
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach").value = False
    
    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_GenehmigtDurch").value = ""
    
    F_HBB.PopDataStatus
    
    BerechneNeu

End Sub


'------------------
' ComboBoxes f|fffd|llen
'------------------


Private Sub ComboBox_Spartenauswahl_Rechtsschutz_Streitwert_FillData()
    Dim i As Integer

    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert")
            Dim StreitwertListe As Variant
            StreitwertListe = ThisWorkbook.Sheets(global_Tabellenblatt_Rechtsschutz).Range("T_Rechtsschutz_Streitwertgrenze").value
            
            For i = 1 To UBound(StreitwertListe)
                StreitwertListe(i, 1) = Format(StreitwertListe(i, 1), "Standard")
            Next i
            
            .List = StreitwertListe
            .ListIndex = 0
        End With
    End If
End Sub



'--------------------------------
' Eventhandler
'--------------------------------


Public Sub CheckBox_Spartenauswahl_Rechtsschutz_AVRS_Change()
    Dim bAVRS As Boolean
    bAVRS = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_AVRS").value

    F_HBB.Controls("Label_Spartenauswahl_Rechtsschutz_AVRSStreitwert").Visible = bAVRS
    F_HBB.Controls("ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert").Visible = bAVRS
    
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach_Change()
    Dim bRabatteWieSach As Boolean
    bRabatteWieSach = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach").value

    F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR").Visible = Not bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").Visible = Not bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_GenehmigtDurch").Visible = Not bRabatteWieSach
        
    F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SRSach").Visible = bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPCSach").Visible = bRabatteWieSach
    F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_GenehmigtDurchSach").Visible = bRabatteWieSach
    
    BerechneNeu

End Sub

Public Sub CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht_Change()
    
    'Abh|fffd|ngigkeit zum SB Verzicht aus dem KFZ-RS und GMRS
    F_HBB.PushDataStatus DataStatus.Load
    F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht").value = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht").value
    F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_SBVerzicht").value = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht").value
    F_HBB.PopDataStatus
    
    BerechneNeu
    
    'KFZ RS und GMRS Neu laden
    M_HBB_Spartenauswahl_KFZRS.BerechneNeu
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Rechtsschutz_VD_Change()
    BerechneNeu
End Sub

Public Sub ComboBox_Spartenauswahl_Rechtsschutz_Verkehrsrisiko_Change()
    BerechneNeu
End Sub

Public Sub ComboBox_Spartenauswahl_Rechtsschutz_Cyber_Change()
    BerechneNeu
End Sub

Public Sub ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert_Change()
    If F_HBB.Controls("ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert").ListIndex < 0 Then Exit Sub
    
    BerechneNeu
End Sub

Public Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR_Exit()
   'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = "-" Then
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = ""
    End If
    
    M_Global.PruefeEingabeExit F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR"), "General Number"

End Sub

Public Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = "-" Or _
       F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC"), _
            F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Rabatte_GenehmigtDurch")
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC"), _
            VPCrabattMaximum, 0, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC_Exit()
   'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = "-" Then
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = ""
    End If
    
    M_Global.PruefeEingabeExit F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC"), "General Number"

End Sub

Public Sub CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort_Change()
    If (F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value) Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value = False
    End If
    
    
    
    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Versicherungssumme").value = Format(Versicherungssumme, "Standard")
    
    BerechneNeu

    'KFZ RS und GMRS neu laden (Abh|fffd|ngigkeit HBB Plus)
    M_HBB_Spartenauswahl_KFZRS.BerechneNeu
    M_HBB_Spartenauswahl_GMRS.BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv_Change()
    If (F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value) Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value = False
    End If

    F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_Versicherungssumme").value = Format(Versicherungssumme, "Standard")
    
    BerechneNeu

    'KFZ RS neu laden (Abh|fffd|ngigkeit HBB Plus)
    M_HBB_Spartenauswahl_KFZRS.BerechneNeu
    M_HBB_Spartenauswahl_GMRS.BerechneNeu

End Sub


Public Sub TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_Change()
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter"), _
            50, 0, "General Number"
    
    M_Global.PruefeFehlendeEingabeTextBox F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter"), "", weiss, hellgelb

    BerechneNeu
End Sub


Public Sub TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter"), "General Number"
End Sub
Attribute VB_Name = "M_HBB_Spartenauswahl_Sach"
Option Explicit

Private Const Branche_Gastronomie As String = "Gastronomie"
Dim bInhaltVSSetztHBBPlus As Boolean



Public Property Get bSachHBBPlus() As Boolean
    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Or F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then
        bSachHBBPlus = True
    Else
        bSachHBBPlus = False
    End If
        

End Property


Public Property Get Sach() As Boolean
    Sach = F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value
End Property


'Ermittelt die aktuelle Inhaltsversicherungssumme
'liefert Werte < 0, wenn InhaltVS nicht zur Ver|fffd|fgung steht
Public Property Get InhaltVS() As Double
'    If (M_HBB_Uebersicht.Sach) Then
        If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value Then
            InhaltVS = -1
        Else
            InhaltVS = Val(Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value, "General Number"))
        End If
'    Else
'       InhaltVS = -2
'    End If
End Property

'Ermittelt die maximal m|fffd|gliche Inhaltsversicherungssumme in Abh|fffd|ngigkeit der Lizenz sowie der bereits erfassten Geb|fffd|udeversicherungssumme und des Deckungsbeitrags aus BU.
Private Property Get InhaltVSMaximum() As Double
     If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then
        InhaltVSMaximum = (M_Global.VSMaximum - 1.3 * GebaeudeVS - M_HBB_Spartenauswahl_BU.Feuer_Haftungsssumme) / 1.3
     Else
        InhaltVSMaximum = (M_Global.VSMaximum - 1.2 * GebaeudeVS - M_HBB_Spartenauswahl_BU.Feuer_Haftungsssumme) / 1.2
     End If
        
    
    If InhaltVSMaximum < 0 Then InhaltVSMaximum = 0
    If InhaltVSMaximum > M_Global.VSMaximum Then InhaltVSMaximum = M_Global.VSMaximum
End Property

'Ermittelt die minimal m|fffd|gliche Inhaltsversicherungssumme
Private Property Get InhaltVSMinimum() As Double
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        InhaltVSMinimum = 10000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        InhaltVSMinimum = 10000
    Else
        InhaltVSMinimum = 10000
    End If
End Property

'Ermittelt die aktuelle Geb|fffd|udeversicherungssumme
'liefert Werte < 0, wenn Geb|fffd|udeVS nicht zur Ver|fffd|fgung steht
Public Property Get GebaeudeVS() As Double
    If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value Then
        GebaeudeVS = -1
    Else
        GebaeudeVS = Val(Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value, "General Number"))
    End If
End Property

'Ermittelt die maximal m|fffd|gliche Geb|fffd|udeversicherungssumme in Abh|fffd|ngigkeit der Lizenz sowie der bereits erfassten Inhaltsversicherungssumme und des Deckungsbeitrags aus BU.
Private Property Get GebaeudeVSMaximum() As Double
    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then
        GebaeudeVSMaximum = (M_Global.VSMaximum - 1.3 * InhaltVS - M_HBB_Spartenauswahl_BU.Feuer_Haftungsssumme) / 1.3
    Else
        GebaeudeVSMaximum = (M_Global.VSMaximum - 1.2 * InhaltVS - M_HBB_Spartenauswahl_BU.Feuer_Haftungsssumme) / 1.2
    End If
    If GebaeudeVSMaximum < 0 Then GebaeudeVSMaximum = 0
End Property


'Ermittelt die minimal m|fffd|gliche Geb|fffd|udeversicherungssumme
Private Property Get GebaeudeVSMinimum() As Double
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        GebaeudeVSMinimum = 10000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        GebaeudeVSMinimum = 10000
    Else
        GebaeudeVSMinimum = 10000
    End If
End Property


'Ermittelt den maximal m|fffd|glichen Sonderrabatt
Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property


'Ermittelt den maximal m|fffd|glichen VPC Rabatt
Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property


'Alle Methoden, die auf der Page Spartenauswahl der Start Form ben|fffd|tigt werden

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------

Public Sub LadeDaten()
    'DropDownListen nur einmalig f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        'Beim erstamligen Laden Sach anzeigen wenn gew|fffd|hlt
        If F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then M_HBB_Uebersicht.CheckBox_Uebersicht_Sachversicherung_Change
    
        ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck_FillData
        ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_FillData
        ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden_FillData
    End If
    
    'wenn eine g|fffd|ltige BA geladen wurden, dann Daten laden
    If F_HBB.BAGueltig Then
            
        Sheet_Sachversicherung.LadeDaten
        
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
            If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort_Change
            If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv_Change
            If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value Then CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Change
            If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value Then CheckBox_Spartenauswahl_Sachversicherung_InhaltVS_Change
            ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck_Change
            ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden_Change
            If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").value Then CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage_Change
        Else 'neue |fffd|bersichtspr|fffd|mien beim erstmaligem Laden nicht neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    End If
End Sub


Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Sachversicherung.SchreibeDaten
    End If
End Sub

'Alle anderen Sheets m|fffd|ssen erneut berechnet werden, wenn es |fffd|nderungen am Systemrabatt geben k|fffd|nnte.
Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub


'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = True
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value = False
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = M_Global.global_NullEuroString
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").BackColor = Color.HellGrau
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value = False
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value = M_Global.global_NullEuroString
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").BackColor = Color.HellGrau
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungGastro").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungHandel").value = False
    
    'Feuer
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value = False
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck").ListIndex = 0
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck").BackColor = Color.hellgelb
    
    'Sturm
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_MehrAls4").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_WenigerAls4").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_MehrAls4").BackColor = Color.hellgelb
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_WenigerAls4").BackColor = Color.hellgelb
    
    'Leitungswasser
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerJa").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerNein").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerJa").BackColor = Color.hellgelb
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerNein").BackColor = Color.hellgelb
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungMit").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungOhne").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungMit").BackColor = Color.hellgelb
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungOhne").BackColor = Color.hellgelb
       
       
       
    'Einbruchdiebstahl
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_GebaeudeUnbewohnt").value = False
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").value = False
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").ListIndex = 0
    
    'Glasbruch
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").BackColor = Color.hellgelb
    F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").BackColor = Color.hellgelb
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").ListIndex = 0
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").BackColor = Color.hellgelb
    
    'Rabatte
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = "0"
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC").value = "0"
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_GenehmigtDurch").value = ""
    
    
    F_HBB.PopDataStatus
    
    BerechneNeu
    
    Check_Spartenverfuegbarkeit

End Sub



'------------------
' ComboBoxes f|fffd|llen
'------------------

Private Sub ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck_FillData()
    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck")
            Dim VerwendungszweckListe As Variant
            'T_Sachversicherung_Feuer_Verwendungszweck
            VerwendungszweckListe = ThisWorkbook.Sheets(global_Tabellenblatt_Sachversicherung).Range("T_Sachversicherung_Feuer_Verwendungszweck").value
            .List = VerwendungszweckListe
            .ListIndex = 0
        End With
    End If
End Sub


Private Sub ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_FillData()
    Dim i As Integer
    Dim HoechstentschaedigungListe As Variant
     With F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung")
    
    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then
            .Clear
             
             HoechstentschaedigungListe = ThisWorkbook.Sheets(global_Tabellenblatt_Sachversicherung).Range("T_Sachversicherung_Glasbruch_Betrieb_KomfPlus").value
              For i = 1 To UBound(HoechstentschaedigungListe)
                HoechstentschaedigungListe(i, 1) = Format(HoechstentschaedigungListe(i, 1), "Standard")
            Next i
            
            .List = HoechstentschaedigungListe
            .ListIndex = 0
    Else
       
            .Clear
            
            'T_Sachversicherung_Glasbruch_Betrieb -> Werte sind identisch f|fffd|r Variante Betrieb und Geb|fffd|ude, daher immer
            'von der Tabelle Variante Betrieb laden.
            HoechstentschaedigungListe = ThisWorkbook.Sheets(global_Tabellenblatt_Sachversicherung).Range("T_Sachversicherung_Glasbruch_Betrieb").value
            
            For i = 1 To UBound(HoechstentschaedigungListe)
                HoechstentschaedigungListe(i, 1) = Format(HoechstentschaedigungListe(i, 1), "Standard")
            Next i
            
            .List = HoechstentschaedigungListe
            .ListIndex = 0
        
    End If
    End With
End Sub


Private Sub ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden_FillData()
    Dim i As Integer

    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden")
            Dim VorschaedenListe As Variant
            'T_Sachversicherung_Feuer_Verwendungszweck
            VorschaedenListe = ThisWorkbook.Sheets(global_Tabellenblatt_Sachversicherung).Range(global_Tabelle_Sachversicherung_Einbruchdiebstahl_Vorschaeden).value
            
            For i = 1 To UBound(VorschaedenListe)
                VorschaedenListe(i, 1) = Format(VorschaedenListe(i, 2), "General Number")
            Next i
            
            .List = VorschaedenListe
            .ListIndex = 0
        End With
    End If
End Sub

'-----------------------
' ComboBoxes f|fffd|llen ENDE
'-----------------------



'-----------------------
' Pr|fffd|ffunktionen ANFANG
'-----------------------

' Ermittelt, ob f|fffd|r die aktuelle Auswahl die Abfrage f|fffd|r Leitungswasser/Fremdenbeherbergung erscheinen muss oder nicht
Private Function Check_Sachversicherung_Leitungswasser_Fremdenbeherbergung() As Boolean
    Check_Sachversicherung_Leitungswasser_Fremdenbeherbergung = _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value And _
        F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Branche").value = Branche_Gastronomie And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value
End Function


' Ermittelt, ob f|fffd|r die aktuelle Auswahl die Abfrage f|fffd|r Leitungswasser/Fremdenbeherbergung erscheinen muss oder nicht
Private Function Check_Sachversicherung_Leitungswasser_Warenlager() As Boolean
    Check_Sachversicherung_Leitungswasser_Warenlager = _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value
End Function

'ERmittelt, ob irgendeine Sparte gew|fffd|hlt wurde in der Sachversicherung
Private Function Check_Sachversicherung_IrgendeineSparte() As Boolean
    Check_Sachversicherung_IrgendeineSparte = _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value Or _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value Or _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser") Or _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl") Or _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch")
End Function


'ERmittelt, ob alle Sparten gew|fffd|hlt wurde in der Sachversicherung
Private Function Check_Sachversicherung_AlleSparten() As Boolean
    Check_Sachversicherung_AlleSparten = _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value
End Function


'-----------------------
' Pr|fffd|ffunktionen ENDE
'-----------------------


'------------------
' UI Eventhandler
'------------------


' Sachversicherung


Public Sub CheckBox_Spartenauswahl_Sachversicherung_Feuer_Change()
    Dim bFeuer, bVerwendungszweck As Boolean
    
    bFeuer = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value And M_Global_Sparten.SpartenErlaubt.Sachsparten.Feuer
        
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_FeuerSturmLinie").Visible = (bFeuer And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value)
  
    bVerwendungszweck = bFeuer And GebaeudeVS >= 0
   
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck").Visible = bVerwendungszweck
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck").Visible = bVerwendungszweck
    
    'nur wenn die Checkbox weggecklickt wurde, muss gepr|fffd|ft werden ob HBB noch m|fffd|glich ist.
    If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value Then
    
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value = Check_Sachversicherung_AlleSparten
            
        End If
    End If
    'Ausgrauen von Allrisk, falls nicht alle Sparten gew|fffd|hlt sind
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").enabled = Check_Sachversicherung_AlleSparten
    
    M_HBB_SachSublimit.Frame_SachversicherungSublimits_Feuer_Enable (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value)
    M_HBB_SachVorteilsdeckung.Frame_Sachversicherung_Vorteilsdeckungen_Feuer_Enable (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value)
    
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_Sturm_Change()
    Dim bSturm, bSturmGeschosse As Boolean
   
    bSturm = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value And M_Global_Sparten.SpartenErlaubt.Sachsparten.Sturm
    
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_FeuerSturmLinie").Visible = (bSturm And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value)
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SturmLeitungswasserLinie").Visible = (bSturm And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value)

    bSturmGeschosse = bSturm And GebaeudeVS >= 0
    F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung_Sturm_Geschosse").Visible = bSturmGeschosse
    
    'wenn die checkbox aktiviert wird, muss gepr|fffd|ft werden, ob ein oder gar kein Wert der Optionsbutton gew|fffd|hlt wurde.
    'wenn beide false sind, dann farblich markieren.
    If bSturmGeschosse Then
        F_HBB.PushDataStatus DataStatus.Load
    
        OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_Change
        
        F_HBB.PopDataStatus
    ElseIf Not bSturm Then
       'nur wenn die Checkbox weggecklickt wurde, muss gepr|fffd|ft werden ob HBB noch m|fffd|glich ist.
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value = Check_Sachversicherung_AlleSparten
            
        End If
        
        'Or bForceHBBPlus
    End If
    
        'Ausgrauen von Allrisk, falls nicht alle Sparten gew|fffd|hlt sind
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").enabled = Check_Sachversicherung_AlleSparten
    
    M_HBB_SachSublimit.Frame_SachversicherungSublimits_Sturm_Enable (bSturm)
    M_HBB_SachVorteilsdeckung.Frame_Sachversicherung_Vorteilsdeckungen_Sturm_Enable (bSturm)
    
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change()
    Dim bLeitungswasser, bFremdenbeherbergung, bWarenlager As Boolean

    bLeitungswasser = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value And _
                        M_Global_Sparten.SpartenErlaubt.Sachsparten.Leitungswasser

    Dim LinienbreiteMitFremdenbeherbergung, LinienbreiteOhneFremdenbeherbergung As Integer
    LinienbreiteOhneFremdenbeherbergung = 276
    LinienbreiteMitFremdenbeherbergung = 510
    
    F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung_Leitungswasser_Warenlager").Visible = bLeitungswasser
    
    bFremdenbeherbergung = Check_Sachversicherung_Leitungswasser_Fremdenbeherbergung And bLeitungswasser
    
    F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung_Leitungswasser_Fremdenbeherbergung").Visible = bFremdenbeherbergung
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_LeitungswasserLinie").Visible = bFremdenbeherbergung
    
    If bFremdenbeherbergung Then
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SturmLeitungswasserLinie").Width = LinienbreiteMitFremdenbeherbergung
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_LeitungswasserEinbruchdiebstahlLinie").Width = LinienbreiteMitFremdenbeherbergung
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SturmLeitungswasserLinie").Width = LinienbreiteOhneFremdenbeherbergung
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_LeitungswasserEinbruchdiebstahlLinie").Width = LinienbreiteOhneFremdenbeherbergung
    End If
    
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SturmLeitungswasserLinie").Visible = (bLeitungswasser And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value)
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_LeitungswasserEinbruchdiebstahlLinie").Visible = (bLeitungswasser And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value)
    
    
    bWarenlager = Check_Sachversicherung_Leitungswasser_Warenlager
    
    F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung_Leitungswasser_Warenlager").Visible = bWarenlager
    
    
    'wenn die checkbox aktiviert wird, muss gepr|fffd|ft werden, ob ein oder gar kein Wert der Optionsbutton gew|fffd|hlt wurde.
    'wenn beide false sind, dann orange markieren.
    If bLeitungswasser Then
        F_HBB.PushDataStatus DataStatus.Load
        
        OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Warenlager_Change
        OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Fremdenbeherbergung_Change
        
        F_HBB.PopDataStatus
    Else
    'nur wenn die Checkbox weggecklickt wurde, muss gepr|fffd|ft werden ob HBB noch m|fffd|glich ist.
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value = Check_Sachversicherung_AlleSparten
            
        End If
    End If
    
        'Ausgrauen von Allrisk, falls nicht alle Sparten gew|fffd|hlt sind
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").enabled = Check_Sachversicherung_AlleSparten
    
    M_HBB_SachSublimit.Frame_SachversicherungSublimits_Leitungswasser_Enable (bLeitungswasser)
    M_HBB_SachVorteilsdeckung.Frame_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Enable (bLeitungswasser)
    
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Change()
    Dim bEinbruchdiebstahl As Boolean
    Dim bAlarmanlageErforderlich As Boolean

    'andere Elemente werden nur dann angezeigt, wenn ED sichtbar und angehakt ist
    bEinbruchdiebstahl = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value And _
                    M_Global_Sparten.SpartenErlaubt.Sachsparten.Einbruchdiebstahl

    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_GebaeudeUnbewohnt").Visible = bEinbruchdiebstahl
    
    bAlarmanlageErforderlich = bEinbruchdiebstahl And F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Sicherheitstechnik").value > 0 And F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Sicherheitstechnik").value <> ""
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").Visible = bAlarmanlageErforderlich
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").Caption = "Alarmanlage lt. " & F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_AlarmanlageText").value & " ist vorhanden und installiert."
    
    '-->
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").Visible = bAlarmanlageErforderlich And Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").value
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").Visible = bAlarmanlageErforderlich And Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").value
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_EinbruchdiebstahlLinie").Visible = bAlarmanlageErforderlich
    F_HBB.Controls("InfoButton_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").Visible = bAlarmanlageErforderlich
    
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_LeitungswasserEinbruchdiebstahlLinie").Visible = (bEinbruchdiebstahl And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value)
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_EinbruchdiebstahlGlasbruchLinie").Visible = (bEinbruchdiebstahl And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value)

    'nur wenn die Checkbox weggecklickt wurde, muss gepr|fffd|ft werden ob HBB noch m|fffd|glich ist.
    If Not bEinbruchdiebstahl Then
            If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value = Check_Sachversicherung_AlleSparten
            
        End If
    End If
    
        'Ausgrauen von Allrisk, falls nicht alle Sparten gew|fffd|hlt sind
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").enabled = Check_Sachversicherung_AlleSparten
    M_HBB_SachSublimit.Frame_SachversicherungSublimits_Einbruchdiebstahl_Enable bEinbruchdiebstahl, F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value
    M_HBB_SachVorteilsdeckung.Frame_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Enable (bEinbruchdiebstahl)
   
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change()
    Dim bGlasbruch As Boolean
    
    bGlasbruch = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value And M_Global_Sparten.SpartenErlaubt.Sachsparten.Glasbruch

    F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude").Visible = bGlasbruch
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").Visible = bGlasbruch
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").Visible = bGlasbruch And Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value
    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").Visible = bGlasbruch And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value
    

    
    
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_EinbruchdiebstahlGlasbruchLinie").Visible = (bGlasbruch And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value)
    
    'wenn Glasbruch aktiviert wird, muss gepr|fffd|ft werden ob beide Varianten m|fffd|glich sind
    If bGlasbruch Then
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value Then
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").enabled = True
        Else
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").enabled = False
            'nicht ganz sauber: Inhalt-VS k|fffd|nnte auch 0 sein, und es wird trotzdem Betrieb=true gesetzt.
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").value = False
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").value = True
        End If
        
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value Then
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").enabled = True
        Else
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").enabled = False
            'nicht ganz sauber: Inhalt-VS k|fffd|nnte auch 0 sein, und es wird trotzdem Betrieb=true gesetzt.
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").value = False
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").value = True
        End If
        
        F_HBB.PushDataStatus DataStatus.Load
        OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Change
        ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_Change
        F_HBB.PopDataStatus
        
    Else 'nur wenn die Checkbox weggecklickt wurde, muss gepr|fffd|ft werden ob HBB noch m|fffd|glich ist.
       If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = Check_Sachversicherung_AlleSparten
        End If
        If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value = Check_Sachversicherung_AlleSparten
           
        End If
    End If
    
    'Ausgrauen von Allrisk, falls nicht alle Sparten gew|fffd|hlt sind
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").enabled = Check_Sachversicherung_AlleSparten

    M_HBB_SachVorteilsdeckung.Frame_Sachversicherung_Vorteilsdeckungen_Glasbruch_Enable (bGlasbruch)

    BerechneNeu
End Sub


'Pr|fffd|ft anhand der Spartenverf|fffd|gbarkeit, welche Sparten angezeigt werden und welche nicht.
Private Sub Check_Spartenverfuegbarkeit()
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").Visible = M_Global_Sparten.SpartenErlaubt.Sachsparten.Feuer
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").Visible = M_Global_Sparten.SpartenErlaubt.Sachsparten.Sturm
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").Visible = M_Global_Sparten.SpartenErlaubt.Sachsparten.Leitungswasser
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").Visible = M_Global_Sparten.SpartenErlaubt.Sachsparten.Einbruchdiebstahl
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").Visible = M_Global_Sparten.SpartenErlaubt.Sachsparten.Glasbruch
    
    F_HBB.PushDataStatus (DataStatus.Load)
    
    CheckBox_Spartenauswahl_Sachversicherung_Feuer_Change
    CheckBox_Spartenauswahl_Sachversicherung_Sturm_Change
    CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change
    CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Change
    CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change
    
    F_HBB.PopDataStatus
    
End Sub



'Inhaltsversicherungssummen|fffd|nderung ANFANG

Public Sub CheckBox_Spartenauswahl_Sachversicherung_InhaltVS_Change()
    Dim bInhaltVS As Boolean
    bInhaltVS = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value 'And M_HBB_Uebersicht.Sach
    
    
    'Vorteilsdeckung und Sublimite ein und ausblenden
    F_HBB.Controls("CommandButton_Spartenauswahl_Sachversicherung_Vorteilsdeckungen").Visible = bInhaltVS
    F_HBB.Controls("CommandButton_Spartenauswahl_Sachversicherung_Sublimits").Visible = bInhaltVS
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_VorteilsdeckungHandel").Visible = bInhaltVS
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungHandel").Visible = bInhaltVS
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_VorteilsdeckungGastro").Visible = bInhaltVS
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungGastro").Visible = bInhaltVS
    
    
    
    M_Global.EnableControl F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS"), bInhaltVS, weiss, HellGrau
   
    
    
    'auf fehlende Eingaben pr|fffd|fen
    If (bInhaltVS) Then
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_MindestInhaltsVSFehler").Visible = _
        M_Global.PruefeEingabeBereichTextBox(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS"), InhaltVSMinimum, InhaltVSMaximum, Color.weiss, Color.hellgelb) And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_MindestInhaltsVSFehler").Visible = False
    End If
    
    'M_HBB_Spartenauswahl_Sach.BerechneNeu
    
    'Automatisiertes Anhaken nur, wenn es sich nicht um das erstemalige Laden handelt
    If Not F_HBB.DatatStatusInitial Then
        If bInhaltVS Then  'nur wenn angehakt wurde, dann auf fehlende Eingabe pr|fffd|fen
            'Wenn InhaltVS gerade angehakt wurde ist es noch nicht gespeichert. Daher die Erlaubnis manuell setzen
            M_Global_Sparten.SpartenErlaubt.Sachsparten.Einbruchdiebstahl = True
            F_HBB.PushDataStatus (DataStatus.Load)
            'Wenn Inhalt gew|fffd|hlt wird, alle Subsparten vorbelegen
            If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value = True
            If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value = True
            If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value = True
            If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value = True
            If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value = True
            
            'HBB Plus setzen
            If Not (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value Or F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value) Then
                bInhaltVSSetztHBBPlus = True
                F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = True
                bInhaltVSSetztHBBPlus = False
            End If
            
            F_HBB.PopDataStatus
        Else 'wenn weggehakt wurde, dann m|fffd|ssen eventuell gew|fffd|hlt Vorteilsdeckungen gel|fffd|scht werden
            F_HBB.PushDataStatus (DataStatus.Load)
            F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Handel").value = False
            F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro").value = False
            F_HBB.PopDataStatus
        End If
    End If
    
    'Pr|fffd|ft HBB Plus Einstellungen
    'Check_HBBPlus
    
    BerechneNeu
    
    'Pr|fffd|fe welche Felder angezeigt werden m|fffd|ssen
    Check_Spartenverfuegbarkeit
    'schauen ob die Maximale Summe sich nicht ver|fffd|ndert hat bei Allrisk
    TextBox_Allrisk_VersicherungssummeVersion3_Change
    
    BerechneNeu
    
    'Technik neu Laden, sofern aktiv
    M_HBB_Spartenauswahl_Technik.LadeDaten
    
End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Change()
    Dim bGebaeudeVS As Boolean
    Dim Summenermittlung As Variant
    Dim summe As Double
    bGebaeudeVS = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value
    
    M_Global.EnableControl F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS"), bGebaeudeVS, weiss, HellGrau
    
    
     Summenermittlung = F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value
    If (bGebaeudeVS) Then
        summe = CDbl(Summenermittlung)
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_MindestGebauedeVSFehler").Visible = _
            M_Global.PruefeEingabeBereichTextBox(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS"), GebaeudeVSMinimum - summe, GebaeudeVSMaximum, Color.weiss, Color.hellgelb) And _
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_MindestGebauedeVSFehler").Visible = False
    End If
        
    BerechneNeu
    
    'schauen ob die Maximale Summe sich nicht ver|fffd|ndert hat bei Allrisk
    TextBox_Allrisk_VersicherungssummeVersion3_Change
    
    'Pr|fffd|fe welche Felder angezeigt werden m|fffd|ssen
    Check_Spartenverfuegbarkeit

    'Haftpflicht neu Laden, sofern aktiv
    M_HBB_Spartenauswahl_Haft.LadeDaten

End Sub


Public Sub TextBox_Spartenauswahl_Sachversicherung_InhaltVS_Change()
    
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS"), InhaltVSMaximum
    
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_MindestInhaltsVSFehler").Visible = _
        M_Global.PruefeEingabeBereichTextBox(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS"), InhaltVSMinimum, InhaltVSMaximum, Color.weiss, Color.hellgelb) And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value

    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'UI Anzeigeelemente pr|fffd|fen
    CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change
    CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Change
    CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change
           
    F_HBB.PopDataStatus
    
    'schauen ob die Maximale Summe sich nicht ver|fffd|ndert hat bei Allrisk
    TextBox_Allrisk_VersicherungssummeVersion3_Change
    
    BerechneNeu
    'Nach der Neuberechnung die Sublimite pr|fffd|fen, da diese von der Inhalt-VS abh|fffd|ngig sind. Dazu ist es nach der gesamten Pr|fffd|fung notwendig,
    'einmal neu zu berechnen.
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung_Change False
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung_Change False
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung_Change False
    M_HBB_SachSublimit.TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung_Change False
    
    F_HBB.PopDataStatus
    
    BerechneNeu
    
    'Technik neu Laden
    M_HBB_Spartenauswahl_Technik.LadeDaten

End Sub


Public Sub TextBox_Spartenauswahl_Sachversicherung_InhaltVS_Exit()
    
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS")
        
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'UI Anzeigeelemente pr|fffd|fen
    CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change
    CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change
    
    F_HBB.PopDataStatus
   
    BerechneNeu
End Sub
'Inhaltsversicherungssummen|fffd|nderung ENDE

'Geb|fffd|udeversicherungssummen|fffd|nderung ANFANG



Public Sub TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Change()
    
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS"), GebaeudeVSMaximum
        
   Dim gebaeude As Double
   Dim summenerm As Double
   
   If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = "" Then
        gebaeude = 0
   Else
        gebaeude = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value, "General Number")
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value = "" Then
        summenerm = 0
   Else
        summenerm = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value, "General Number")
    End If
    
   
    If (gebaeude < summenerm) And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value Then
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = True
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = False
    End If
    
        
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_MindestGebauedeVSFehler").Visible = _
        M_Global.PruefeEingabeBereichTextBox(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS"), GebaeudeVSMinimum, GebaeudeVSMaximum, Color.weiss, Color.hellgelb) And _
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value
        
    'schauen ob die Maximale Summe sich nicht ver|fffd|ndert hat bei Allrisk
    TextBox_Allrisk_VersicherungssummeVersion3_Change
        
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'UI Anzeigeelemente pr|fffd|fen
    CheckBox_Spartenauswahl_Sachversicherung_Feuer_Change
    CheckBox_Spartenauswahl_Sachversicherung_Sturm_Change
    CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change
    CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change
    
    F_HBB.PopDataStatus
    
    BerechneNeu

    'Haftpflicht neu Laden
    M_HBB_Spartenauswahl_Haft.LadeDaten
End Sub


Public Sub TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS")
    
       Dim gebaeude As Double
   Dim summenerm As Double
   
   If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = "" Then
        gebaeude = 0
   Else
        gebaeude = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value, "General Number")
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value = "" Then
        summenerm = 0
   Else
        summenerm = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value, "General Number")
    End If
    
   
    If (gebaeude < summenerm) And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value Then
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = True
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = False
    End If
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'UI Anzeigeelemente pr|fffd|fen
    CheckBox_Spartenauswahl_Sachversicherung_Feuer_Change
    CheckBox_Spartenauswahl_Sachversicherung_Sturm_Change
    CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change
    CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change

    
    F_HBB.PopDataStatus
    
    BerechneNeu
End Sub

'Geb|fffd|udeversicherungssummen|fffd|nderung ENDE


Public Sub ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck_Change()
    
    '0 bedeutet: muss gew|fffd|hlt werden
    M_Global.PruefeFehlendeEingabeComboBox F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck"), 0, Color.weiss, Color.hellgelb
    
    BerechneNeu
End Sub


Public Sub OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_Change()
    M_Global.PruefeFehlendeEingabeOptionButton _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_MehrAls4"), _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_WenigerAls4"), _
        Color.HelvetiaGruen, Color.hellgelb
    
    BerechneNeu
End Sub


Public Sub OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Change()
    M_Global.PruefeFehlendeEingabeOptionButton _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb"), _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude"), _
        HelvetiaGruen, hellgelb
    BerechneNeu
End Sub


Public Sub OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Fremdenbeherbergung_Change()
    
    M_Global.PruefeFehlendeEingabeOptionButton _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungMit"), _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungOhne"), _
        Color.HelvetiaGruen, Color.hellgelb
    
    BerechneNeu
End Sub


Public Sub OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_Warenlager_Change()
    M_Global.PruefeFehlendeEingabeOptionButton _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerJa"), _
        F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerNein"), _
        Color.HelvetiaGruen, Color.hellgelb
    
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage_Change()
    Dim bAlarmanlage As Boolean
    bAlarmanlage = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").value
    
    F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").Visible = Not bAlarmanlage
    F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").Visible = Not bAlarmanlage
    
    If bAlarmanlage Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").ForeColor = M_Global.Color.Schwarz
    Else
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").ForeColor = M_Global.Color.Rot
    End If
    
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_GebaeudeUnbewohnt_Change()
    BerechneNeu
End Sub


Public Sub ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden_Change()
    M_Global.PruefeFehlendeEingabeComboBox F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden"), "XX", Color.weiss, Color.hellgelb
    
    If F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").value = 0 Then
        F_HBB.Controls("Label_Anfragepflicht").Visible = False
    End If
        
    BerechneNeu
End Sub


Public Sub ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_Change()
    If F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").ListIndex < 0 Then Exit Sub

    M_Global.PruefeFehlendeEingabeComboBox F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung"), F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").List(0), Color.weiss, Color.hellgelb
    
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv_Change()

    Dim HBBPlusExklusiv, bInhaltVS As Boolean
    Dim bGlasbruchChanged As Boolean
    Dim VS As Double
    
    
    
    HBBPlusExklusiv = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value
    bInhaltVS = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value
     VS = F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GesamtVS").value
     
    If HBBPlusExklusiv And (VS / 1.2 * 1.3) > M_Global.VSMaximum Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = False
            MsgBox "HBB Exklusiv Plus kann nicht gew|fffd|hlt werden, da sonst die Maximale VS |fffd|berschritten wird!"
            Exit Sub
    End If
    
     
     
    If HBBPlusExklusiv Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = False
    End If
        
        
        'Wenn die |fffd|nderung |fffd|ber die Inhalt-VS kommt, dann diesen Block auslassen
    
        If (HBBPlusExklusiv) Then
            'wenn Inhalt nicht gew|fffd|hlt ist, dann Inhalt w|fffd|hlen. Sach-Subsparten werden dann |fffd|ber das Inhalt-Change Event gesetzt.
            If Not bInhaltVS Then
                F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value = True
            Else 'wurde Inhalt bereits gew|fffd|hlt, m|fffd|ssen alle Sach-Subsparten gepr|fffd|ft und ggf. gesetzt werden
                F_HBB.PushDataStatus (DataStatus.Load)
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value Then
                    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value = True
                    bGlasbruchChanged = True
                Else
                    bGlasbruchChanged = False
                End If
                F_HBB.PopDataStatus
            End If
        'Wert von Glasbruch H|fffd|chstentsch|fffd|digung anpassen
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").value = "7.000,00"
       
        End If
    
   
    'Update von Inhalten von Glasbruch H|fffd|chstentsch|fffd|digung
    If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value And Not F_HBB.DatatStatusInitial Then
        ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_FillData
    End If

    'Glasbruch muss bei jeder |fffd|nderung HBB Plus angepasst werden (sofern nicht der Wert weiter oben gesetzt wurde)
    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value And Not bGlasbruchChanged Then CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change

       If VS > M_Global.VSMaximum Then
            
       End If
    'Neu Berechnen und Daten neu laden: Sublimits sind hier noch nicht ver|fffd|ndert (da noch nicht die neuen aktuellen Werte geladen wurden)
    BerechneNeu
    
    
       
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)

    M_HBB_SachSublimit.CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv_Change (HBBPlusExklusiv)
    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = HBBPlusExklusiv
    
    F_HBB.PopDataStatus
    
    BerechneNeu

End Sub


Public Sub CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort_Change()
    
    Dim bHBBPlus, bInhaltVS As Boolean
    Dim bGlasbruchChanged As Boolean

    
    bHBBPlus = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value
    bInhaltVS = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value
    
    If bHBBPlus Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = False
    End If
    
        
 
        If (bHBBPlus) Then
            'wenn Inhalt nicht gew|fffd|hlt ist, dann Inhalt w|fffd|hlen. Sach-Subsparten werden dann |fffd|ber das Inhalt-Change Event gesetzt.
            If Not bInhaltVS Then
                F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value = True
            Else 'wurde Inhalt bereits gew|fffd|hlt, m|fffd|ssen alle Sach-Subsparten gepr|fffd|ft und ggf. gesetzt werden
                F_HBB.PushDataStatus (DataStatus.Load)
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value = True
                If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value Then
                    F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value = True
                    bGlasbruchChanged = True
                Else
                    bGlasbruchChanged = False
                End If
                F_HBB.PopDataStatus
            End If
            'Wert von Glasbruch H|fffd|chstentsch|fffd|digung anpassen
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").value = "5.000,00"
        End If
   
    
    'Glasbruch muss bei jeder |fffd|nderung HBB Plus angepasst werden (sofern nicht der Wert weiter oben gesetzt wurde)
    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value And Not bGlasbruchChanged Then CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change
    
    'Update von Inhalten von Glasbruch H|fffd|chstentsch|fffd|digung
    If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value And Not F_HBB.DatatStatusInitial Then
        ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung_FillData
    End If
    'Neu Berechnen und Daten neu laden: Sublimits sind hier noch nicht ver|fffd|ndert (da noch nicht die neuen aktuellen Werte geladen wurden)
    BerechneNeu
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)

    M_HBB_SachSublimit.CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort_Change (bHBBPlus)
    
    F_HBB.PopDataStatus
    
    BerechneNeu
    
End Sub

Public Sub CheckBox_Spartenauswahl_Sachversicherung_Allrisk_Click()
    Dim bGlasbruchChanged As Boolean
    Dim bInhaltVS As Boolean

    
    bInhaltVS = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value
    Dim inhalt As Long

    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value = "" Then
        Exit Sub
    Else
        inhalt = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value, "General Number")
    End If
    
    
    If inhalt = 0 Then
    
        MsgBox "Bitte zuerst die Inhaltsversicherungssumme eingeben!"
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value = False
        
        Exit Sub
        
    
    End If
    

    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk") Then
        
        If Not bInhaltVS Then
                F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value = True
        Else
        F_HBB.PushDataStatus (DataStatus.Load)
        'Alle Sparten auf TRUE setzen -> Bei Allrisk muss alles gew|fffd|hlt sein
        
        If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value = True
        If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value = True
        If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value = True
        If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value Then F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value = True
        If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value Then
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value = True
            bGlasbruchChanged = True
        Else
            bGlasbruchChanged = False
        End If
        F_HBB.Controls("CommandButton_Spartenauswahl_Allriskbearbeiten").Visible = True
        F_HBB.PopDataStatus
        F_HBB.oF_HBB_Allrisk.Show
        End If

    Else
        F_HBB.Controls("CommandButton_Spartenauswahl_Allriskbearbeiten").Visible = False

    End If
    Sheet_Sachversicherung.SchreibeDaten_Allrisk
    Sheet_Sachversicherung.Lade_Allrisk
    
    'Glasbruch muss bei jeder |fffd|nderung HBB Plus angepasst werden (sofern nicht der Wert weiter oben gesetzt wurde)
    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value And Not bGlasbruchChanged Then CheckBox_Spartenauswahl_Sachversicherung_Glasbruch_Change
    
    'Neu Berechnen und Daten neu laden: Sublimits sind hier noch nicht ver|fffd|ndert (da noch nicht die neuen aktuellen Werte geladen wurden)
    BerechneNeu
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    F_HBB.PopDataStatus
    
    BerechneNeu

End Sub






'Rabatte ANFANG

Public Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
        
        If M_HBB_Uebersicht.Technik Then M_HBB_Spartenauswahl_Technik.LadeDaten
        If M_HBB_Uebersicht.Transport Then M_HBB_Spartenauswahl_Transport.LadeDaten
        If M_HBB_Uebersicht.BU Then M_HBB_Spartenauswahl_BU.LadeDaten
        If M_HBB_Uebersicht.Haftpflicht Then M_HBB_Spartenauswahl_Haft.LadeDaten
        If M_HBB_Uebersicht.Rechtsschutz Then M_HBB_Spartenauswahl_RS.LadeDaten
        If M_HBB_Uebersicht.KFZRechtsschutz Then M_HBB_Spartenauswahl_KFZRS.LadeDaten
        If M_HBB_Uebersicht.GMRS Then M_HBB_Spartenauswahl_GMRS.LadeDaten
    End If
End Sub

Public Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR_Exit()
    'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR"), "General Number"
End Sub

Public Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    With F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC")
        If .value = "-" Or _
           .value = "" _
        Then
            'Do Nothing
        Else
            M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC"), _
                    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_GenehmigtDurch")
            M_Global.PruefeEingabeChange _
                    F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC"), _
                    VPCrabattMaximum, 0, "General Number"
                BerechneNeu
        End If
    End With
    
    If M_HBB_Uebersicht.Technik Then M_HBB_Spartenauswahl_Technik.LadeDaten
    If M_HBB_Uebersicht.BU Then M_HBB_Spartenauswahl_BU.LadeDaten
    If M_HBB_Uebersicht.Transport Then M_HBB_Spartenauswahl_Transport.LadeDaten
    If M_HBB_Uebersicht.Haftpflicht Then M_HBB_Spartenauswahl_Haft.LadeDaten
    If M_HBB_Uebersicht.Rechtsschutz Then M_HBB_Spartenauswahl_RS.LadeDaten
    If M_HBB_Uebersicht.KFZRechtsschutz Then M_HBB_Spartenauswahl_KFZRS.LadeDaten
    If M_HBB_Uebersicht.GMRS Then M_HBB_Spartenauswahl_GMRS.LadeDaten
End Sub

Public Sub TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC"), "General Number"
End Sub

Public Sub Frame_Spartenauswahl_Sachversicherung_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC").value = 0
    End If
        
        
End Sub

'Rabatte ENDE

' Sachversicherung ENDE






Attribute VB_Name = "M_HBB_Spartenauswahl_Technik"
Option Explicit


Public Property Get Technik() As Boolean
    Technik = F_HBB.Controls("CheckBox_Uebersicht_Technik").value
End Property


'Maximalwerte abh|fffd|ngig von der Lizenz un den bisherigen ausgef|fffd|llten Werten
Private Property Get VSMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VSMaximum = 99000000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VSMaximum = 10000000 - M_HBB_Spartenauswahl_BU.Deckungsbeitrag
    Else
        VSMaximum = 0
    End If
End Property


Private Property Get VSMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VSMinimum = 10000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VSMinimum = 10000
    Else
        VSMinimum = 10000
    End If
End Property


Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property

Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property


'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------


Public Sub LadeDaten()
    'Comboboxes nur einmalig f|fffd|llen
    If F_HBB.DatatStatusInitial Then
       'Beim erstamligen Laden Technik anzeigen wenn gew|fffd|hlt
        If F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then CheckBox_Uebersicht_Technik_Change

        ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante_FillData
        ComboBox_Spartenauswahl_Technik_Buero_SBVariante_FillData
    End If
    
    
    'wenn eine g|fffd|ltige BA geladen wurden, dann Daten laden
    If F_HBB.BAGueltig Then

        Sheet_Technik.LadeDaten
        
        PruefeSpartenAbhaengigkeiten
                
        'beim erstmaligen Laden Events manuell ausl|fffd|sen
        If F_HBB.DatatStatusInitial Then
            If F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Betrieb").value Then OptionButton_Spartenauswahl_Technik_Betrieb_Change
            If F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Buero").value Then OptionButton_Spartenauswahl_Technik_Betrieb_Change
            CheckBox_Spartenauswahl_Technik_RabatteWieSach_Change
            TextBox_Spartenauswahl_Technik_InhaltVS_Change
            PruefeSpartenAbhaengigkeiten
            
        Else
            'neue |fffd|bersichtspr|fffd|mien neu laden
            M_HBB_Uebersicht.LadeDaten
        End If
    
    End If
End Sub


'Pr|fffd|ft Spartenabh|fffd|ngigkeiten untereinandern: |fffd|nderungen in Sach haben Auswirkungen auf die Anzeige in Technik
Public Sub PruefeSpartenAbhaengigkeiten()
    'Alle Werte, die durch andere Sparten beeinflusst werden und Auswirkung auf das UI haben, m|fffd|ssen hier gepr|fffd|ft werden.
    'Inhalts-VS Felder umschalten, wenn InhaltVS gew|fffd|hlt
    Dim bInhaltVSSach As Boolean
    bInhaltVSSach = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value And M_HBB_Uebersicht.Sach
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS").Visible = Not bInhaltVSSach
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVSSach").Visible = bInhaltVSSach
    
    If bInhaltVSSach Then
        F_HBB.Controls("Label_Spartenauswahl_TEchnik_FehlerInhaltVS").Visible = False
        
    Else
        If F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS").value < 10000 Then
         F_HBB.Controls("Label_Spartenauswahl_TEchnik_FehlerInhaltVS").Visible = True
        End If
    End If
    
            
    'Rabatte wie Sach - Checkbox aktivieren
    F_HBB.Controls("CheckBox_Spartenauswahl_Technik_RabatteWieSach").Visible = M_HBB_Uebersicht.Sach
    F_HBB.Controls("CheckBox_Spartenauswahl_Technik_RabatteWieSach").value = M_HBB_Uebersicht.Sach And F_HBB.Controls("CheckBox_Spartenauswahl_Technik_RabatteWieSach").value
       

End Sub




'Direktes Aufrufen: nur Schreiben, ohne Daten neu zu laden
'Schreiben und Laden: Aufruf von BerechneNeu()
Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Technik.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub



'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
       
    F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBPlus").value = True
    F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Betrieb").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Buero").value = False
    F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Betrieb").BackColor = Color.hellgelb
    F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Buero").BackColor = Color.hellgelb
    
    F_HBB.Controls("Label_Spartenauswahl_Technik_Betrieb_SBVariante").Visible = False
    F_HBB.Controls("Label_Spartenauswahl_Technik_Buero_SBVariante").Visible = False
        
    F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante").Visible = False
    F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante").Visible = False
    
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS").value = M_Global.global_NullEuroString
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS").BackColor = Color.hellgelb
    
    F_HBB.Controls("CheckBox_Spartenauswahl_Technik_RabatteWieSach").value = False
    
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = 0
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_GenehmigtDurch").value = ""
    
    F_HBB.PopDataStatus
    
    BerechneNeu

End Sub


'------------------
' ComboBoxes f|fffd|llen
'------------------

Private Sub ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante_FillData()
    Dim i As Integer

    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante")
            Dim SBListe As Variant
            SBListe = ThisWorkbook.Sheets(global_Tabellenblatt_Technik).Range("T_Technik_Betrieb_SB").value
            
            For i = 1 To UBound(SBListe)
                SBListe(i, 1) = Format(SBListe(i, 1), "Standard")
            Next i
            
            .List = SBListe
            .ListIndex = 0
        End With
    End If
End Sub

Private Sub ComboBox_Spartenauswahl_Technik_Buero_SBVariante_FillData()
    Dim i As Integer
    
    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante")
            Dim SBListe As Variant
            SBListe = ThisWorkbook.Sheets(global_Tabellenblatt_Technik).Range("T_Technik_Buero_SB").value
            
            For i = 1 To UBound(SBListe)
                SBListe(i, 1) = Format(SBListe(i, 1), "Standard")
            Next i
            
            .List = SBListe
            .ListIndex = 0
        End With
    End If
End Sub




'--------------------------------
' Eventhandler
'--------------------------------


'Wechsel zwischen den beiden Varianten
Public Sub OptionButton_Spartenauswahl_Technik_Betrieb_Change()
    'Betrieb gew|fffd|hlt
    If F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Betrieb").value Then
        F_HBB.Controls("Label_Spartenauswahl_Technik_Betrieb_SBVariante").Visible = True
        F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante").Visible = True
        F_HBB.Controls("Label_Spartenauswahl_Technik_Buero_SBVariante").Visible = False
        F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante").Visible = False
    ElseIf F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Buero").value Then
        F_HBB.Controls("Label_Spartenauswahl_Technik_Betrieb_SBVariante").Visible = False
        F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante").Visible = False
        F_HBB.Controls("Label_Spartenauswahl_Technik_Buero_SBVariante").Visible = True
        F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante").Visible = True
    End If
    
    M_Global.PruefeFehlendeEingabeOptionButton F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Betrieb"), F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Buero"), HelvetiaRot, hellgelb
    
    BerechneNeu
End Sub


Public Sub ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante_Change()
    If F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante").ListIndex < 0 Then Exit Sub
    BerechneNeu
End Sub


Public Sub ComboBox_Spartenauswahl_Technik_Buero_SBVariante_Change()
    If F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante").ListIndex < 0 Then Exit Sub
    BerechneNeu
End Sub


Public Sub CheckBox_Spartenauswahl_Technik_HBBPlus_Change()
    If F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBPlus") Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBExklusiv").value = False
    End If
    
    
    BerechneNeu
End Sub

Public Sub CheckBox_Spartenauswahl_Technik_HBBExklusiv_Change()
    If F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBExklusiv") Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBPlus").value = False
    End If
    
    BerechneNeu
End Sub

Public Sub TextBox_Spartenauswahl_Technik_Rabatte_SR_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub TextBox_Spartenauswahl_Technik_Rabatte_SR_Exit()
    'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR"), "General Number"
End Sub

Public Sub TextBox_Spartenauswahl_Technik_Rabatte_VPC_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC"), _
            F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_GenehmigtDurch")
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC"), _
            VPCrabattMaximum, 0, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub TextBox_Spartenauswahl_Technik_Rabatte_VPC_Exit()
    'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = "-" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC"), "General Number"
End Sub


Public Sub CheckBox_Spartenauswahl_Technik_RabatteWieSach_Change()
    Dim bRabatteWieSach As Boolean
    bRabatteWieSach = F_HBB.Controls("CheckBox_Spartenauswahl_Technik_RabatteWieSach").value

    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_GenehmigtDurch").Visible = Not bRabatteWieSach
        
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SRSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPCSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_GenehmigtDurchSach").Visible = bRabatteWieSach
        
    BerechneNeu
End Sub




Public Sub TextBox_Spartenauswahl_Technik_InhaltVS_Change()
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS"), _
        VSMaximum, 0, "Standard"
    'M_Global.PruefeFehlendeEingabeTextBox F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS"), M_Global.global_NullEuroString, weiss, Hellgelb
    M_Global.PruefeEingabeBereichTextBox F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS"), VSMinimum, VSMaximum, weiss, hellgelb
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS").value < 10000 Then
        F_HBB.Controls("Label_Spartenauswahl_TEchnik_FehlerInhaltVS").Visible = True
    Else
         F_HBB.Controls("Label_Spartenauswahl_TEchnik_FehlerInhaltVS").Visible = False
    End If
        
    BerechneNeu
End Sub


Public Sub TextBox_Spartenauswahl_Technik_InhaltVS_Exit()
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS"), "Standard"
End Sub

Public Sub Frame_Spartenauswahl_Technik_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = 0
    End If
        
        
End Sub
Attribute VB_Name = "M_HBB_Spartenauswahl_Transport"
Option Explicit

Public Property Get Transport() As Boolean
    Transport = F_HBB.Controls("CheckBox_Uebersicht_Transport").value
End Property


Private Property Get SonderrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMaximum = 30
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMaximum = 30
    Else
        SonderrabattMaximum = 0
    End If
End Property

'Ermittelt den maximal m|fffd|glichen Sonderrabatt-Zuschlag
Private Property Get SonderrabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        SonderrabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        SonderrabattMinimum = -100
    Else
        SonderrabattMinimum = 0
    End If
End Property

Private Property Get VPCrabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        VPCrabattMaximum = 99
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        VPCrabattMaximum = 20
    Else
        VPCrabattMaximum = 0
    End If
End Property


Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
        Sheet_Transport.Reset
        LadeDaten
    F_HBB.PopDataStatus
    
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
        M_HBB_Uebersicht.LadeDaten
    End If
End Sub


Public Sub TextBox_Spartenauswahl_Transport_Rabatte_SR_Change()

        'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR"), _
            SonderrabattMaximum, SonderrabattMinimum, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub LadeDaten()

    If F_HBB.DatatStatusInitial Then
        M_HBB_Uebersicht.Checkbox_Uebersicht_Transport_Change
        ComboBox_Spartenauswahl_Transport_Versicherungssumme_FillData
    End If

    Sheet_Transport.LadeDaten
    M_HBB_Uebersicht.LadeDaten
    
    
    'beim ersten Mal ausf|fffd|hren Events manuell ausf|fffd|hren
    
     If F_HBB.DatatStatusInitial Then
        TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_Change
     End If

End Sub


Public Sub SchreibeDaten()
    Sheet_Transport.SchreibeDaten
End Sub

Public Sub ComboBox_Spartenauswahl_Transport_Versicherungssumme_Change()
    BerechneNeu
End Sub


Public Sub TextBox_Spartenauswahl_Transport_Rabatte_VPC_Change()

  'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value = "-" Or _
       F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeRabattGehnehmigtDurch F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC"), _
            F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_Genehmigt")
        M_Global.PruefeEingabeChange _
            F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC"), _
            VPCrabattMaximum, 0, "General Number"
        BerechneNeu
    End If
End Sub

Public Sub CheckBox_Spartenauswahl_Transport_RabatteWieSach_Change()

    Dim bRabatteWieSach As Boolean
    bRabatteWieSach = F_HBB.Controls("CheckBox_Spartenauswahl_Transport_RabatteWieSach").value

    F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").Visible = Not bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_Genehmigt").Visible = Not bRabatteWieSach
        
    F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SRSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPCSach").Visible = bRabatteWieSach
    F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_GenehmigtDurchSach").Visible = bRabatteWieSach
        
        
    If F_HBB.DatatStatusInitial Then Exit Sub
    
    BerechneNeu


End Sub

Public Sub TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_Exit()
M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge"), "General Number"

End Sub

Public Sub TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge_Change()
    M_Global.PruefeEingabeBereichTextBox F_HBB.Controls("TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge"), 1, 50, weiss, hellgelb
    M_Global.PruefeEingabeChange _
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge"), _
            20, 0, "General Number"
    
    
    BerechneNeu
    
End Sub

Public Sub CheckBox_Spartenauswahl_Transport_Nachtdeckung_Click()
    BerechneNeu
End Sub


Private Sub ComboBox_Spartenauswahl_Transport_Versicherungssumme_FillData()

    Dim i As Integer
    
    'beim erstmaligen Laden Comobox f|fffd|llen
    If (F_HBB.DatatStatusInitial) Then
        With F_HBB.Controls("ComboBox_Spartenauswahl_Transport_Versicherungssumme")
            Dim VSListe As Variant
            VSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Transport).Range("T_Transport_VS").value
            
            For i = 1 To UBound(VSListe)
                VSListe(i, 1) = Format(VSListe(i, 1), "Standard")
            Next i
            
            .List = VSListe
            .ListIndex = 0
            
        End With
    End If
End Sub


Public Sub Frame_Spartenauswahl_Transport_Rabatte_Exit()
    If F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value = 0
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value = "" Then
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value = 0
    End If
        
        
End Sub

Attribute VB_Name = "M_HBB_Summenermittlung"
Dim obergeschoss As String, untergeschoss As String, erdgeschoss As String
Dim data As Object


Public Sub Neu()


        F_HBB.PushDataStatus (DataStatus.Load)
            
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude1").value = "Geb|fffd|ude 1"
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude2").value = "Geb|fffd|ude 2"
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude3").value = "Geb|fffd|ude 3"
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_UGQM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_EGQM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG1QM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG2QM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG3QM").value = ""
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_UGQM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_EGQM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG1QM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG2QM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG3QM").value = ""
        
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_UGQM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_EGQM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG1QM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG2QM").value = ""
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG3QM").value = ""
        
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_UG").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_EG").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG1").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG2").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG3").ListIndex = 0
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_UG").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_EG").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG1").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG2").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG3").ListIndex = 0
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_UG").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_EG").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG1").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG2").ListIndex = 0
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG3").ListIndex = 0
        
        
        BerechneNeu
        F_HBB.PopDataStatus

End Sub

Public Sub LadeDaten()

    If F_HBB.DatatStatusInitial Then
        FillComboBoxes
        
    End If

    Sheet_Summenermittlung.LadeDaten
    M_HBB_Uebersicht.LadeDaten

End Sub
Public Sub ComboBox_Changed()

    Sheet_Summenermittlung.SchreibeDaten
    Sheet_Summenermittlung.LadeDaten
    
End Sub

Public Sub QM_Changed()
    Sheet_Summenermittlung.SchreibeDaten
    Sheet_Summenermittlung.LadeDaten
End Sub

Public Sub FillComboBoxes()

    InitializeUntergeschoss "ComboBox_Summenermittlung_Gebaude1_UG"
    InitializeUntergeschoss "ComboBox_Summenermittlung_Gebaude2_UG"
    InitializeUntergeschoss "ComboBox_Summenermittlung_Gebaude3_UG"
    
    InitializeErdgeschoss "ComboBox_Summenermittlung_Gebaude1_EG"
    InitializeErdgeschoss "ComboBox_Summenermittlung_Gebaude2_EG"
    InitializeErdgeschoss "ComboBox_Summenermittlung_Gebaude3_EG"
    
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude1_OG1"
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude1_OG2"
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude1_OG3"
    
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude2_OG1"
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude2_OG2"
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude2_OG3"
    
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude3_OG1"
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude3_OG2"
    InitializeObergeschoss "ComboBox_Summenermittlung_Gebaude3_OG3"
    

End Sub



Public Sub InitializeUntergeschoss(obj As String)
    'ComboBox Geschosstypen Untergeschoss bef|fffd|llen
        With F_HBB.OF_HBB_Sach_Summenermittlung.Controls(obj)
            .Clear
            
            Dim VSListe As Variant
            VSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung).Range("Table_Summenermittlung_Untergeschoss").value
            
            For i = 1 To UBound(VSListe)
                VSListe(i, 1) = Format(VSListe(i, 1), "Standard")
            Next i
            
            .List = VSListe
            .ListIndex = 0
            
        End With
End Sub

Public Sub InitializeErdgeschoss(obj As String)

        'ComboBox Geschosstypen Erdgeschoss bef|fffd|llen
        With F_HBB.OF_HBB_Sach_Summenermittlung.Controls(obj)
            .Clear
            
            Dim VSListe1 As Variant
            VSListe1 = ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung).Range("Table_Summenermittlung_Erdgeschoss2").value
            
            For i = 1 To UBound(VSListe1)
                VSListe1(i, 1) = Format(VSListe1(i, 1), "Standard")
            Next i
            
            .List = VSListe1
            .ListIndex = 0
            
        End With
End Sub

Public Sub InitializeObergeschoss(obj As String)

Dim i As Integer
   
        'ComboBox Geschosstypen Obergeschoss bef|fffd|llen
        With F_HBB.OF_HBB_Sach_Summenermittlung.Controls(obj)
            .Clear
            
            Dim VSListe2 As Variant
            VSListe2 = ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung).Range("Table_Summenermittlung_Obergeschoss").value
            
            For i = 1 To UBound(VSListe2)
                VSListe2(i, 1) = Format(VSListe2(i, 1), "Standard")
            Next i
            
            .List = VSListe2
            .ListIndex = 0
            
        End With
           
End Sub


'Public Sub CommandButton_Fertig_Click()
'
'    If F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_UntergeschossQuadratmeter").value > 0 _
'        And Not F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_UntergeschossQuadratmeter").value = "" Then
'
'
'
'    With ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung)
'        last = .Cells(Rows.Count, 1).End(xlUp).Row
'        last = last + i
'        .Cells(last, 1).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_Gebauede").value
'        .Cells(last, 2).value = untergeschoss
'        .Cells(last, 3).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.ComboBox_Summenermittlung_GeschosstypUntergeschoss.value
'        .Cells(last, 4).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.TextBox_Summenermittlung_UntergeschossQuadratmeter.value
'        i = 1
'    End With
'    End If
'
'
'    If F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_ErdgeschossQuadratmeter").value > 0 _
'        And Not F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_ErdgeschossQuadratmeter").value = "" Then
'
'    With ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung)
'        last = .Cells(Rows.Count, 1).End(xlUp).Row
'        last = last + i
'        .Cells(last, 1).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.ComboBox_Summenermittlung_Gebauede.value
'        .Cells(last, 2).value = erdgeschoss
'        .Cells(last, 3).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.ComboBox_Summenermittlung_GeschosstypErdgeschoss.value
'        .Cells(last, 4).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.TextBox_Summenermittlung_ErdgeschossQuadratmeter.value
'        i = 1
'    End With
'    End If
'
'    If F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_ObergeschossQuadratmeter").value > 0 _
'        And Not F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_ObergeschossQuadratmeter").value = "" Then
'
'    With ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung)
'        last = .Cells(Rows.Count, 1).End(xlUp).Row
'        last = last + i
'        .Cells(last, 1).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.ComboBox_Summenermittlung_Gebauede.value
'        .Cells(last, 2).value = obergeschoss
'        .Cells(last, 3).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.ComboBox_Summenermittlung_GeschosstypObergeschoss.value
'        .Cells(last, 4).value = F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.TextBox_Summenermittlung_ObergeschossQuadratmeter.value
'        i = 1
'    End With
'    End If
'    Application.EnableEvents = True
'    Application.Calculation = xlCalculationAutomatic
'
'
'
'    F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_Gebauede").ListIndex = 0
'    F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_GeschosstypObergeschoss").ListIndex = 0
'    F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_ObergeschossQuadratmeter").value = ""
'    F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_ErdgeschossQuadratmeter").value = ""
'    F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_GeschosstypErdgeschoss").ListIndex = 0
'    F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("TextBox_Summenermittlung_UntergeschossQuadratmeter").value = ""
'    F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_GeschosstypUntergeschoss").ListIndex = 0
'
'
'End Sub

'Public Sub OptionButton_Erdgeschoss_Click()
'
'        Dim i As Integer
'        'ACHTUNG NOCH |fffd|NDERUNG
'        With F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_GeschosstypErdgeschoss")
'            .Clear
'
'            Dim VSListe As Variant
'            VSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung).Range("Table_Summenermittlung_Erdgeschoss").value
'
'            For i = 1 To UBound(VSListe)
'                VSListe(i, 1) = Format(VSListe(i, 1), "Standard")
'            Next i
'
'            .List = VSListe
'            .ListIndex = 0
'
'        End With
'End Sub
'
'Public Sub OptionButton_Obergeschoss_Click()
'
'        Dim i As Integer
'        'ACHTUNG NOCH |fffd|NDERUNG
'        With F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_GeschosstypObergeschoss")
'            .Clear
'
'            Dim VSListe As Variant
'            VSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung).Range("Table_Summenermittlung_Obergeschoss").value
'
'            For i = 1 To UBound(VSListe)
'                VSListe(i, 1) = Format(VSListe(i, 1), "Standard")
'            Next i
'
'            .List = VSListe
'            .ListIndex = 0
'
'        End With
'End Sub
'
'Public Sub OptionButton_Untergeschoss_Click()
'
'              Dim i As Integer
'        'ACHTUNG NOCH |fffd|NDERUNG
'              With F_HBB.OF_HBB_Sach_Summenermittlung.oF_HBB_neuesGeschoss.Controls("ComboBox_Summenermittlung_GeschosstypUntergeschoss")
'            .Clear
'
'            Dim VSListe As Variant
'            VSListe = ThisWorkbook.Sheets(global_Tabellenblatt_Summenermittlung).Range("Table_Summenermittlung_Untergeschoss").value
'
'            For i = 1 To UBound(VSListe)
'                VSListe(i, 1) = Format(VSListe(i, 1), "Standard")
'            Next i
'
'            .List = VSListe
'            .ListIndex = 0
'
'        End With
'End Sub

Public Sub BerechneNeu()
    Sheet_Sachversicherung.SchreibeDaten_Summenermittlung
    Sheet_Sachversicherung.LadeDaten_Summenermittlung
    
    Sheet_Sachversicherung.LadeDaten

End Sub

Public Sub CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung_Click()
    If F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung") Then
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Show
        
        If Not F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value Then
            BerechneNeu
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = True
        Else
            If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value < F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value Then
                MsgBox "Es wird die ermittelte Geb|fffd|udeversicherungssumme verwendet!"
                F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value
            End If
        End If
        BerechneNeu
    Else
        BerechneNeu
    End If
    
      Dim gebaeude As Double
   Dim summenerm As Double
   
   If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = "" Then
        gebaeude = 0
   Else
        gebaeude = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value, "General Number")
    End If
    
    If F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value = "" Then
        summenerm = 0
   Else
        summenerm = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value, "General Number")
    End If
    
   
    If (gebaeude < summenerm) And F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value Then
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = True
    Else
        F_HBB.Controls("Label_Spartenauswahl_Sachversicherung_SummenermittlungFehler").Visible = False
    End If

End Sub

  
Attribute VB_Name = "M_HBB_SuperUser"
Option Explicit

'Modul f|fffd|r SuperUser funktionen


'Ermittelt die maximal m|fffd|gliche Pr|fffd|mienanpassung
Private Property Get PraemienAnpassungMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        PraemienAnpassungMaximum = 100000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        PraemienAnpassungMaximum = 0
    Else
        PraemienAnpassungMaximum = 0
    End If
End Property

'Ermittelt die minimal m|fffd|gliche Pr|fffd|mienanpassung
Private Property Get PraemienAnpassungMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        PraemienAnpassungMinimum = -100000
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        PraemienAnpassungMinimum = 0
    Else
        PraemienAnpassungMinimum = 0
    End If
End Property



'Ermittelt den maximal m|fffd|glichen GD Rabatt
Private Property Get GDRabattMaximum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        GDRabattMaximum = 100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        GDRabattMaximum = 0
    Else
        GDRabattMaximum = 0
    End If
End Property

'Ermittelt den minimal m|fffd|glichen GD Rabatt
Private Property Get GDRabattMinimum() As Long
    If (ThisWorkbook.Lizenz = LizenzType.VT) Then
        GDRabattMinimum = -100
    ElseIf (ThisWorkbook.Lizenz = LizenzType.User) Then
        GDRabattMinimum = 0
    Else
        GDRabattMinimum = 0
    End If
End Property


'---------------------
'--- Neu ----
'---------------------

Public Sub Neu()
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'GD Rabatt
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU").value = "0"
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht").value = "0"
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz").value = "0"
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach").value = "0"
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik").value = "0"
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport").value = "0"
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS").value = "0"
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz").value = "0"
    
    F_HBB.Controls("TextBox_SuperUser_GDRabatt_GenehmigtDurch").value = ""
    
    'Pr|fffd|mienanpassung
    F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung").value = M_Global.global_NullEuroString
    F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Zusatztext").value = ""
    
    F_HBB.PopDataStatus
End Sub



'---------------------
'--- Eventhandler ----
'---------------------



Public Sub TextBox_SuperUser_Gesamtpraemie_Praemienanpassung_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung").value = "-" Or _
       F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung"), PraemienAnpassungMaximum, PraemienAnpassungMinimum, "Standard"
        M_HBB_Uebersicht.BerechneNeu
    End If
End Sub

Public Sub TextBox_SuperUser_Gesamtpraemie_Praemienanpassung_Exit()
    'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung"), "Standard"
End Sub

Public Sub TextBox_SuperUser_GDRabatt_BU_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU").value = "-" Or _
       F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_BU.BerechneNeu
    End If
End Sub

Public Sub TextBox_SuperUser_GDRabatt_BU_Exit()
    'Sonderfall Rabatt: ein Minus k|fffd|nnte alleine stehen im Feld, da dies zugelassen wird aus Convenience Gr|fffd|nden
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU"), "General Number"
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Haftpflicht_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht").value = "-" Or _
       F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_Haft.BerechneNeu
    End If
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Haftpflicht_Exit()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht"), "General Number"
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Rechtsschutz_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz").value = "-" Or _
       F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_RS.BerechneNeu
    End If
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Rechtsschutz_Exit()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz"), "General Number"
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Sach_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach").value = "-" Or _
       F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_Sach.BerechneNeu
    End If
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Sach_Exit()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach"), "General Number"
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Technik_Change()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik").value = "-" Or _
       F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_Technik.BerechneNeu
    End If
End Sub

Public Sub TextBox_SuperUser_GDRabatt_Transport_Change()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport").value = "-" Or _
           F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_Transport.BerechneNeu
    End If
End Sub

Public Sub TextBox_SuperUser_GDRabatt_GMRS_Change()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS").value = "-" Or _
           F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_GMRS.BerechneNeu
    End If
End Sub
Public Sub TextBox_SuperUser_GDRabatt_Technik_Exit()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik"), "General Number"
End Sub
Public Sub TextBox_SuperUser_GDRabatt_GMRS_Exit()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS"), "General Number"
End Sub
Public Sub TextBox_SuperUser_GDRabatt_Transport_Exit()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport"), "General Number"
End Sub
Public Sub TextBox_SuperUser_GDRabatt_KFZRechtsschutz_Change()
    'Sonderfall Rabatte: Wenn das einzige Zeichen ein "-" ist, dann nichts tun
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz").value = "-" Or _
       F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz").value = "" _
    Then
        'Do Nothing
    Else
        M_Global.PruefeEingabeChange F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz"), GDRabattMaximum, GDRabattMinimum, "General Number"
        M_HBB_Spartenauswahl_KFZRS.BerechneNeu
    End If
End Sub


Public Sub TextBox_SuperUser_GDRabatt_KFZRechtsschutz_Exit()
    If F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz").value = "-" Then
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz").value = ""
    End If
    M_Global.PruefeEingabeExit F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz"), "General Number"
End Sub


Attribute VB_Name = "M_HBB_Uebersicht"
Option Explicit

Const Frame_Spartenauswahl_Top_Init As Integer = 10
Const Frame_Spartenauswahl_Top_Offset As Integer = 10


'--------------------------------
' Properties
'--------------------------------

Public Property Get Sach() As Boolean
    Sach = F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value
End Property

Public Property Get Technik() As Boolean
    Technik = F_HBB.Controls("CheckBox_Uebersicht_Technik").value
End Property
Public Property Get Transport() As Boolean
    Transport = F_HBB.Controls("CheckBox_Uebersicht_Transport").value
End Property

Public Property Get BU() As Boolean
    BU = F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value
End Property

Public Property Get Haftpflicht() As Boolean
    Haftpflicht = F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value
End Property

Public Property Get Rechtsschutz() As Boolean
    Rechtsschutz = F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value
End Property

Public Property Get KFZRechtsschutz() As Boolean
    KFZRechtsschutz = F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value
End Property

Public Property Get GMRS() As Boolean
    GMRS = F_HBB.Controls("CheckBox_Uebersicht_GMRS").value
End Property

Public Property Get Cyber() As Boolean
    Cyber = F_HBB.Controls("CheckBox_Uebersicht_Cyber").value
End Property

'--------------------------------
' Laden, Speichern, Neu Berechnen
'--------------------------------

Public Sub LadeDaten()
    'Daten laden
    Sheet_Uebersicht.LadeDaten
    
    
    'beim erstamligem Laden Events manuell ausl|fffd|sen
    If F_HBB.DatatStatusInitial Then
        'Events bei den jeweiligen LadeDaten Funktionen beim erstamligen Laden ausf|fffd|hren.
        'If F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then CheckBox_Uebersicht_Sachversicherung_Change
        'If F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then CheckBox_Uebersicht_Technik_Change
        'If F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Then CheckBox_Uebersicht_Betriebsunterbrechnung_Change
        'If F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value Then CheckBox_Uebersicht_Haftpflicht_Change
        'If F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Then CheckBox_Uebersicht_Rechtsschutz_Change
    End If
    
    
    If M_Global_Sparten.Rechenbar.Sach Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_Sach.Sach Then F_HBB.Controls("TextBox_Uebersicht_Sachversicherung").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_Sachversicherung").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.Technik Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_Technik.Technik Then F_HBB.Controls("TextBox_Uebersicht_Technik").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_Technik").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.Betriebsunterbrechung Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_BU.BU Then F_HBB.Controls("TextBox_Uebersicht_Betriebsunterbrechung").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_Betriebsunterbrechung").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.Transport Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_Transport.Transport Then F_HBB.Controls("TextBox_Uebersicht_Transport").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_Transport").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.Haftpflicht Or Not F_HBB.BAGueltig Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_Haft.Haft Then F_HBB.Controls("TextBox_Uebersicht_Haftpflcht").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_Haftpflcht").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.Rechtsschutz Or Not F_HBB.BAGueltig Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_RS.RS Then F_HBB.Controls("TextBox_Uebersicht_Rechtsschutz").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_Rechtsschutz").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.KFZRechtsschutz Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_KFZRS.KFZRS Then F_HBB.Controls("TextBox_Uebersicht_KFZRechtsschutz").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_KFZRechtsschutz").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.GMRS Or Not F_HBB.BAGueltig Or Not M_HBB_Spartenauswahl_GMRS.GMRS Then F_HBB.Controls("TextBox_Uebersicht_GMRS").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_GMRS").BackColor = Color.orange
    If M_Global_Sparten.Rechenbar.Cyber.Cyber Or Not M_HBB_Cyber.Cyber Or Not F_HBB.BAGueltig Then F_HBB.Controls("TextBox_Uebersicht_Cyber").BackColor = Color.grau Else F_HBB.Controls("TextBox_Uebersicht_Cyber").BackColor = Color.orange
    
    F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value = F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value And M_Global_Sparten.SpartenErlaubt.Rechtsschutz
    F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").enabled = M_Global_Sparten.SpartenErlaubt.Rechtsschutz And F_HBB.BAGueltig
    

End Sub


Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        Sheet_Uebersicht.SchreibeDaten
    End If
End Sub


Public Sub BerechneNeu()
    If F_HBB.DatatStatusSave Then
        SchreibeDaten
        LadeDaten
    End If
End Sub


'Setzt alle Einstellungen auf Neu bzw. Nicht gew|fffd|hlt.
Public Sub Neu()
    
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'auf Spartenauswahl Page switchen wegen Setfocus der Frames der Sparten
    F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
    
    F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value = False
    F_HBB.Controls("CheckBox_Uebersicht_Technik").value = False
    F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value = False
    F_HBB.Controls("CheckBox_Uebersicht_Transport").value = False
    F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value = False
    F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value = False
    F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value = False
    F_HBB.Controls("CheckBox_Uebersicht_GMRS").value = False
    F_HBB.Controls("CheckBox_Uebersicht_Cyber").value = False
    
    'auf AllgemeineDAten Page switchen
    F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Multipage_AllgemeineDaten
    
    'wenn im Suchbegriffsfenster nichts drin steht, dann muss das Event zum Neu laden manuell ausgel|fffd|st werden
    If F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").value = "" Then
        TextBox_Uebersicht_Betriebsart_Suchbegriff_Change ("")
    Else 'event wird mit der |fffd|nderung des Werte ausgel|fffd|st
        F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").value = ""
    End If
    
    F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Freitext").value = ""
    
    F_HBB.PopDataStatus
    
    BerechneNeu
    
End Sub


'--------------------------------
' Eventhandler
'--------------------------------

'Liefert True, wenn irgedeine Sparte gew|fffd|hlt ist.
Private Function Check_Uebersicht_IrgeneineSparte() As Boolean
    Check_Uebersicht_IrgeneineSparte = _
        F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Transport").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_Technik").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value Or _
        F_HBB.Controls("CheckBox_Uebersicht_GMRS").value 'Or _
        'F_HBB.Controls("CheckBox_Uebersicht_Cyber").value
End Function


Public Sub CheckBox_Uebersicht_Sachversicherung_Change()
    'Wurde zumindest eine Sparte gew|fffd|hlt
    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte
    
    'Frame anzeigen/ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Visible = F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value
    
    'wenn Sach aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value) Then
        'Sach ist immer ganz oben
        F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top = Frame_Spartenauswahl_Top_Init
        
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            'Focus setzen
            F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").SetFocus
        End If
        
    End If
     
    'Rabatte ansehen
    F_HBB.Controls("CheckBox_Spartenauswahl_Transport_RabatteWieSach").Visible = F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value
    F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").Visible = F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value
    
    If Not F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
        F_HBB.Controls("CheckBox_Spartenauswahl_Transport_RabatteWieSach").value = False
        F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").value = False
    
    End If
    
   
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (M_Global_Stack.DataStatus.Load)
    
    'Technik neu positionieren wenn n|fffd|tig
    CheckBox_Uebersicht_Technik_Change
    
    F_HBB.PopDataStatus
    
    BerechneNeu
End Sub



Public Sub CheckBox_Uebersicht_Technik_Change()
    'Wurde zumindest eine Sparte gew|fffd|hlt
    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte
       
    'Frame anzeigen / ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_Technik").Visible = F_HBB.Controls("CheckBox_Uebersicht_Technik").value
    'wenn Tech aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_Technik").value) Then
        'und Sach schon angezeigt wird, dann Technik unter Sach anzeigen
        If F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Technik").Top = F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top + F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Height + Frame_Spartenauswahl_Top_Offset
        'ansonsten ganz oben
        Else
            F_HBB.Controls("Frame_Spartenauswahl_Technik").Top = Frame_Spartenauswahl_Top_Init
        End If
        
        'Spartenabh|fffd|ngigkeiten untereinander pr|fffd|fen
        M_HBB_Spartenauswahl_Technik.PruefeSpartenAbhaengigkeiten
           
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            'Focus setzen
            F_HBB.Controls("Frame_Spartenauswahl_Technik").SetFocus
        End If
    
    End If
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'BU neu positionieren wenn n|fffd|tig
    Checkbox_Uebersicht_Transport_Change
    
    F_HBB.PopDataStatus

    BerechneNeu
End Sub




Public Sub CheckBox_Uebersicht_Betriebsunterbrechnung_Change()
    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte

    'Frame anzeigen / ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Visible = F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value

    'wenn Betriebsunterbrechnug aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value) Then
        'wenn Transport angezeigt wird, dann immer unter Transport anzeigen
        If F_HBB.Controls("CheckBox_Uebersicht_Transport").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top = F_HBB.Controls("Frame_Spartenauswahl_Transport").Top + F_HBB.Controls("Frame_Spartenauswahl_Transport").Height + Frame_Spartenauswahl_Top_Offset
        'wenn technik angezeigt wird, dann immer unter technik anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top = F_HBB.Controls("Frame_Spartenauswahl_Technik").Top + F_HBB.Controls("Frame_Spartenauswahl_Technik").Height + Frame_Spartenauswahl_Top_Offset
        'wenn sach angezeigt wird, dann immer unter sach anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top = F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top + F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Height + Frame_Spartenauswahl_Top_Offset
        'ansonsten ganz oben
        Else
            F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top = Frame_Spartenauswahl_Top_Init
        End If
        
        'Spartenabh|fffd|ngigkeiten untereinander pr|fffd|fen
        M_HBB_Spartenauswahl_BU.PruefeSpartenAbhaengigkeiten
        
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").SetFocus
        End If
    End If

    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'Haftpflicht neu positionieren wenn n|fffd|tig
    CheckBox_Uebersicht_Haftpflicht_Change
    
    F_HBB.PopDataStatus
    
    BerechneNeu
    

End Sub


Public Sub CheckBox_Uebersicht_Haftpflicht_Change()
    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte
    
    'Frame anzeigen / ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Visible = F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value
    
    'wenn Haftpflicht aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value) Then
        
        M_HBB_Spartenauswahl_Haft.PruefeSpartenAbhaengigkeiten
        
        'Wenn Betriebsunterbrechnung angezeigt wird, dann Haftpflicht unter BU anzeigen
        If F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top = F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top + F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Height + Frame_Spartenauswahl_Top_Offset
        'Wenn Transport angezeigt wird, dann Haftpflicht unter Transport anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Transport").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top = F_HBB.Controls("Frame_Spartenauswahl_Transport").Top + F_HBB.Controls("Frame_Spartenauswahl_Transport").Height + Frame_Spartenauswahl_Top_Offset
        'Wenn Technik angezeigt wird, dann Haftpflicht unter Technik anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top = F_HBB.Controls("Frame_Spartenauswahl_Technik").Top + F_HBB.Controls("Frame_Spartenauswahl_Technik").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Sach angezeigt wird, dann Haftpflicht unter Sach anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top = F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top + F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Height + Frame_Spartenauswahl_Top_Offset
        
        'ansonsten ganz oben anzeigen
        Else
            F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top = Frame_Spartenauswahl_Top_Init
        
        End If
    
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").SetFocus
        End If
        
        'HBB Plus PVS Anzeige muss sich anpassen bei Auswahl Haftpflicht
        CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort_Change
   
    End If
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    
    'Rechtsschutz neu positionieren wenn n|fffd|tig
    CheckBox_Uebersicht_Rechtsschutz_Change
    
    'Cyber ist abh|fffd|ngig Haftpflicht Betrieb
    M_HBB_Cyber.PruefeSpartenAbhaengigkeiten
    
    F_HBB.PopDataStatus

    BerechneNeu
End Sub

Public Sub Checkbox_Uebersicht_Transport_Change()
    'Wurde zumindest eine Sparte gew|fffd|hlt
    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte
       
    'Frame anzeigen / ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_Transport").Visible = F_HBB.Controls("CheckBox_Uebersicht_Transport").value
    'wenn Transport aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_Transport").value) Then
        'und Sach schon angezeigt wird, dann Technik unter Sach anzeigen
        If F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Transport").Top = F_HBB.Controls("Frame_Spartenauswahl_Technik").Top + F_HBB.Controls("Frame_Spartenauswahl_Technik").Height + Frame_Spartenauswahl_Top_Offset
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Transport").Top = F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top + F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Height + Frame_Spartenauswahl_Top_Offset
        'ansonsten ganz oben
        Else
            F_HBB.Controls("Frame_Spartenauswahl_Transport").Top = Frame_Spartenauswahl_Top_Init
        End If
        
        'Spartenabh|fffd|ngigkeiten untereinander pr|fffd|fen
        'TODO!!
        'M_HBB_Spartenauswahl_Transport.PruefeSpartenAbhaengigkeiten
           
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            'Focus setzen
            F_HBB.Controls("Frame_Spartenauswahl_Transport").SetFocus
        End If
    
    End If
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)
    
    'BU neu positionieren wenn n|fffd|tig
    CheckBox_Uebersicht_Betriebsunterbrechnung_Change
    
    F_HBB.PopDataStatus

    BerechneNeu


End Sub

Public Sub CheckBox_Uebersicht_Rechtsschutz_Change()

    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte
    
    'Frame anzeigen / ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Visible = F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value
    
    'wenn Rechtsschutz aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value) Then
        
        M_HBB_Spartenauswahl_RS.PruefeSpartenAbhaengigkeiten
        
        'Wenn Haftpflicht angezeigt wird, dann Rechtsschutz unter Haftpflicht anzeigen
        If F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top + F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Betriebsunterbrechnung angezeigt wird, dann Rechtsschutz unter BU anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top + F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Height + Frame_Spartenauswahl_Top_Offset
        'Wenn Transport angezeigt wird, dann Rechtusschutz unter Transport anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Transport").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Transport").Top + F_HBB.Controls("Frame_Spartenauswahl_Transport").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Technik angezeigt wird, dann Rechtsschutz unter Technik anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Technik").Top + F_HBB.Controls("Frame_Spartenauswahl_Technik").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Sach angezeigt wird, dann Rechtsschutz unter Sach anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top + F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Height + Frame_Spartenauswahl_Top_Offset
        
        'ansonsten ganz oben anzeigen
        Else
            F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top = Frame_Spartenauswahl_Top_Init
        
        End If
    
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").SetFocus
        End If
        
        'unn|fffd|tiges Berechnen verhindern
        F_HBB.PushDataStatus (DataStatus.Load)
        
        'VS Summe auf der Maske muss sich der Wahl HBB Plus anpassen
        CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort_Change
        

        
        F_HBB.PopDataStatus
    
    End If

    'KFZ Rechtsschutz muss neu positioniert werden wenn n|fffd|tig
    CheckBox_Uebersicht_KFZRechtsschutz_Change
    
    'unn|fffd|tiges Berechnen verhindern
    F_HBB.PushDataStatus (DataStatus.Load)

  

    F_HBB.PopDataStatus

    BerechneNeu

End Sub


Public Sub CheckBox_Uebersicht_KFZRechtsschutz_Change()
    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte
    
    'Frame anzeigen / ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Visible = F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value
    
    'wenn KFZ-Rechtsschutz aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value) Then
        
        M_HBB_Spartenauswahl_KFZRS.PruefeSpartenAbhaengigkeiten
        
        'Wenn Rechtsschutz angezeigt wird, dann KFZ-Rechtsschutz unter Rechtsschutz anzeigen
        If F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Then
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top + F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Haftpflicht angezeigt wird, dann KFZ-Rechtsschutz unter Haftpflicht anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value Then
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top + F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Betriebsunterbrechnung angezeigt wird, dann Rechtsschutz unter BU anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top + F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Transport angezeigt wird, dann KFZ Rechtusschutz unter Transport anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Transport").value Then
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Transport").Top + F_HBB.Controls("Frame_Spartenauswahl_Transport").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Technik angezeigt wird, dann Rechtsschutz unter Technik anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Technik").Top + F_HBB.Controls("Frame_Spartenauswahl_Technik").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Sach angezeigt wird, dann Rechtsschutz unter Sach anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top = F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top + F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Height + Frame_Spartenauswahl_Top_Offset
        
        'ansonsten ganz oben anzeigen
        Else
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top = Frame_Spartenauswahl_Top_Init
        
        End If
    
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").SetFocus
        End If
        
        'unn|fffd|tiges Berechnen verhindern
        F_HBB.PushDataStatus (DataStatus.Load)
        

        
        F_HBB.PopDataStatus
    
    End If
    
    'GMRS muss neu positioniert werden wenn n|fffd|tig
    Checkbox_Uebersicht_GMRS_Change

    'Cyber ist Abh|fffd|ngig davon, ob eine andere Sparte gew|fffd|hlt wurde.
    'Aufruf reicht hier einmal aus bei KFZRS, da diese Funktionen in Serie aufgerufen werden und KFZRS die letzte ist.
    M_HBB_Cyber.AktiviereCyberBerechnung

    BerechneNeu
End Sub

Public Sub Checkbox_Uebersicht_GMRS_Change()

    F_HBB.Controls("Label_Spartenauswahl_KeineSparte").Visible = Not Check_Uebersicht_IrgeneineSparte
    
    'Frame anzeigen / ausblenden
    F_HBB.Controls("Frame_Spartenauswahl_GMRS").Visible = F_HBB.Controls("CheckBox_Uebersicht_GMRS").value
    
    'wenn KFZ-Rechtsschutz aktiviert wird
    If (F_HBB.Controls("CheckBox_Uebersicht_GMRS").value) Then
        
        
        M_HBB_Spartenauswahl_GMRS.PruefeSpartenAbhaengigkeiten
        
        'Wenn KFZ-Rechtsschutz angezeigt wird, dann GMRS unter KFZ-Rechtsschutz anzeigen
        If F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value Then
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Top + F_HBB.Controls("Frame_Spartenauswahl_KFZRechtsschutz").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Rechtsschutz angezeigt wird, dann GMRS unter Rechtsschutz anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value Then
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Top + F_HBB.Controls("Frame_Spartenauswahl_Rechtsschutz").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Haftpflicht angezeigt wird, dann GMRS unter Haftpflicht anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value Then
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Top + F_HBB.Controls("Frame_Spartenauswahl_Haftpflicht").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Betriebsunterbrechnung angezeigt wird, dann GMRS unter BU anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Top + F_HBB.Controls("Frame_Spartenauswahl_Betriebsunterbrechung").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Transport angezeigt wird, dann GMRS unter Transport anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Transport").value Then
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = F_HBB.Controls("Frame_Spartenauswahl_Transport").Top + F_HBB.Controls("Frame_Spartenauswahl_Transport").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Technik angezeigt wird, dann GMRS unter Technik anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Technik").value Then
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = F_HBB.Controls("Frame_Spartenauswahl_Technik").Top + F_HBB.Controls("Frame_Spartenauswahl_Technik").Height + Frame_Spartenauswahl_Top_Offset
        
        'Wenn Sach angezeigt wird, dann GMRS unter Sach anzeigen
        ElseIf F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value Then
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Top + F_HBB.Controls("Frame_Spartenauswahl_Sachversicherung").Height + Frame_Spartenauswahl_Top_Offset
        
        'ansonsten ganz oben anzeigen
        Else
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").Top = Frame_Spartenauswahl_Top_Init
        
        End If
    
        'Multipage anzeigen, sofern es nicht um das initiale Laden handelt
        If (Not F_HBB.currentDataStatus = DataStatus.Initial) Then
            F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Mulitpage_Spartenauswahl
            F_HBB.Controls("Frame_Spartenauswahl_GMRS").SetFocus
        End If
        
        'unn|fffd|tiges Berechnen verhindern
        F_HBB.PushDataStatus (DataStatus.Load)
        
        
        F_HBB.PopDataStatus
    
    End If

    'Cyber ist Abh|fffd|ngig davon, ob eine andere Sparte gew|fffd|hlt wurde.
    'Aufruf reicht hier einmal aus bei GMRS, da diese Funktionen in Serie aufgerufen werden und GMRS die letzte ist.
    M_HBB_Cyber.AktiviereCyberBerechnung

    BerechneNeu


End Sub

Public Sub Checkbox_Uebersicht_Cyber_Change()
    'Cyber Form aufrufen und Risikofragen abfragen.
    'Erst wann die Risikofragen und die Polizzennummer (sofern notwendig) vollst|fffd|ndig erfasst wurden,
    'kann die Cyber Versicherung angezeigt werden
    If (F_HBB.Controls("CheckBox_Uebersicht_Cyber").value) Then
        
        'Allgemeine Daten speichern, bevor man auf Cyber wechselt. die KonvertierungPolizzennummer ist hier wichtig.
        'M_HBB_AllgemeineDaten.SchreibeDaten
        'M_HBB_Cyber.LadeDaten
        
        
        'Wenn Cyber angehakt wird, wird immer zuerst die Maske der Risikofragen aufgerufen
        M_HBB_Cyber.PruefeSpartenAbhaengigkeiten
        F_HBB.oF_HBB_Cyber_Risikofragen.Show
        F_HBB.Controls("MultiPage_Sparten").Pages(M_Global.global_Mulitpage_Cyber).Visible = True
        F_HBB.MultiPage_Sparten_ChangeToPage (M_Global.global_Mulitpage_Cyber)
                
    Else
        F_HBB.Controls("MultiPage_Sparten").Pages(M_Global.global_Mulitpage_Cyber).Visible = False
    End If
    
    BerechneNeu
End Sub


'------------------
' Betriebsarten Suchfunktion
'------------------

'setzt Felder aktiv oder inaktiv je nachdem ob eine g|fffd|ltige BA gew|fffd|hlt wurde oder nicht
Private Sub SetBAGueltig(bValid As Boolean)
    
    F_HBB.BAGueltig = bValid
    F_HBB.Controls("MultiPage_Sparten").Visible = bValid
    
    F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_Technik").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_Cyber").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_Transport").enabled = bValid
    F_HBB.Controls("CheckBox_Uebersicht_GMRS").enabled = bValid
    
    F_HBB.Controls("CommandButton_BerechnungsblattDruck").enabled = bValid
    F_HBB.Controls("CommandButton_OffertDruck").enabled = bValid
    F_HBB.Controls("CommandButton_AntragDruck").enabled = bValid
    
    'Wenn 'Bitte w|fffd|hlen' gew|fffd|hlt ist
    If F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis").value = 0 Then
        F_HBB.Controls("Label_BetriebsartWaehlen").Visible = Not bValid
        F_HBB.Controls("Label_BetriebsartUngueltig").Visible = False
    Else 'bei Falscheingabe
        F_HBB.Controls("Label_BetriebsartWaehlen").Visible = False
        F_HBB.Controls("Label_BetriebsartUngueltig").Visible = Not bValid
    End If
    
    
    If (bValid) Then
        F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").BackColor = Color.weiss
        F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis").BackColor = Color.weiss
    Else
        F_HBB.Controls("TextBox_Uebersicht_Betriebsunterbrechung").BackColor = Color.grau
        F_HBB.Controls("TextBox_Uebersicht_Haftpflcht").BackColor = Color.grau
        F_HBB.Controls("TextBox_Uebersicht_Rechtsschutz").BackColor = Color.grau
        F_HBB.Controls("TextBox_Uebersicht_Sachversicherung").BackColor = Color.grau
        F_HBB.Controls("TextBox_Uebersicht_Technik").BackColor = Color.grau
        
        F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").BackColor = Color.hellgelb
        F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis").BackColor = Color.hellgelb
    End If
End Sub


Public Sub TextBox_Uebersicht_Betriebsart_Suchbegriff_Change(suchString)

    'Filter des einmalig geladenen Recordssets setzen
    'Das Recordset wird beim |fffd|ffnen der Form mit allen Betriebsarten geladen, diese sind dann im Speicher.
    If Trim(suchString & vbNullString) = vbNullString Then
        ThisWorkbook.BArst.Filter = ""
    Else
        ThisWorkbook.BArst.Filter = "BA like '*" & suchString & "*' and BANr > 0"
    End If
    
    'Die Combobox mit den gefundenen Betriebsarten f|fffd|llen.
    With F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis")
        .Clear
        
        If Not ThisWorkbook.BArst.EOF Then ThisWorkbook.BArst.MoveFirst
        
        While Not ThisWorkbook.BArst.EOF
            .AddItem ThisWorkbook.BArst![BANr]
            .List(.ListCount - 1, 1) = ThisWorkbook.BArst![BA]
            ThisWorkbook.BArst.MoveNext
        Wend
        
        'Die erste gefundene Betriebsart setzen
        'dabei m|fffd|ssen auch alle Checks durchgef|fffd|hrt werden und die Daten neu geladen werden
        'dies passiert durch die _change Methode der Combobox automatisch (ausser beim Initial Load).
        'wurde keine Eintrag gefunden, enth|fffd|lt der Suchstring einen ung|fffd|ltigen Wert (bzw. einen Wert, zu dem es keine Ergebnisse gibt).
        If ThisWorkbook.BArst.RecordCount > 0 Then
            .ListIndex = 0
        Else
            SetBAGueltig (False)
        End If

    End With
End Sub


'Umfangreichere Pr|fffd|fungen und neues Laden notwendig, da die Betriebsart sehr elementar ist
Public Sub ComboBox_Uebersicht_Betriebsart_Ergebnis_Change()
    If (F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis").value > 0) Then
        
        ThisWorkbook.BArst.Filter = "BANr = " & F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis").value
        If (ThisWorkbook.BArst![Zeichenbar]) Then
        
            SetBAGueltig (True)
            
            'Gruppe ermitteln
            F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Branche").value = ThisWorkbook.BArst![Gruppe]
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Sicherheitstechnik").value = ThisWorkbook.BArst![ED Sicherheitstechnik]
            
            'beim erstmaligem Laden muss nicht gespeichert und neu geladen werden
            If Not F_HBB.DatatStatusInitial Then
                'zwingend schreiben
                F_HBB.PushDataStatus DataStatus.Save
                BerechneNeu
                F_HBB.PopDataStatus
                
                'Werte neu Laden
                F_HBB.PushDataStatus (DataStatus.Load)
                 
                If (M_HBB_Uebersicht.Sach) Then
                    M_HBB_Spartenauswahl_Sach.LadeDaten
                    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser_Change
                    M_HBB_Spartenauswahl_Sach.CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Change
                End If
                                           
                If M_HBB_Uebersicht.Technik Then M_HBB_Spartenauswahl_Technik.LadeDaten
                If M_HBB_Uebersicht.BU Then M_HBB_Spartenauswahl_BU.LadeDaten
                If M_HBB_Uebersicht.Transport Then M_HBB_Spartenauswahl_Transport.LadeDaten
                If M_HBB_Uebersicht.Haftpflicht Then M_HBB_Spartenauswahl_Haft.LadeDaten
                If M_HBB_Uebersicht.Rechtsschutz Then M_HBB_Spartenauswahl_RS.LadeDaten
                If M_HBB_Uebersicht.KFZRechtsschutz Then M_HBB_Spartenauswahl_KFZRS.LadeDaten
                If M_HBB_Uebersicht.GMRS Then M_HBB_Spartenauswahl_GMRS.LadeDaten
                
                '|fffd|berpr|fffd|fung notwendig, ob durch eine eventuelle |fffd|nderung der GKL neue Risikofragen erfasst werden m|fffd|ssen.
                If M_HBB_Uebersicht.Cyber Then
                    M_HBB_Cyber.LadeDaten
                    M_HBB_Cyber.AktiviereCyberBerechnung
                End If
                 
                F_HBB.PopDataStatus
            End If
        Else
            SetBAGueltig (False)
            
            'speichern, wenn es nicht das erstamlige Laden ist.
            If Not F_HBB.DatatStatusInitial Then
                F_HBB.PushDataStatus DataStatus.Save
                BerechneNeu
                F_HBB.PopDataStatus
            End If
        End If
    Else
        SetBAGueltig (False)
        
        'speichern, wenn es nicht das erstamlige Laden ist.
        If Not F_HBB.DatatStatusInitial Then
            F_HBB.PushDataStatus DataStatus.Save
            BerechneNeu
            F_HBB.PopDataStatus
        End If
        
    End If
End Sub



Attribute VB_Name = "MyInfoButtonHandler"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Event Handler f|fffd|r alle Info Buttons
'Beim erzeugen der Start Form wird allen Infobuttons dieser Eventhandler zugeordnet.
'So muss nicht jedem Button extra ein Event Hanlder zugeordnet werden.

Option Explicit

Public WithEvents MyCommandButton As MSForms.CommandButton
Attribute MyCommandButton.VB_VarHelpID = -1
Public OwnerFormCaption As String
'Public OwnerFormTop As Integer
'Public OwnerFormLeft As Integer
'Public OwnerFormHeigth As Integer
'Public OwnerFormWidth As Integer
'Public Owner As F_HBB


Private Sub MyCommandButton_Click()
    Dim Control As String, InfoHeader As String, InfoText As String
    Dim frmOwner As Variant
    Dim frm As Variant
    Control = MyCommandButton.Name
    
        
    On Error GoTo keinText
    InfoHeader = Application.WorksheetFunction.VLookup(Control, ThisWorkbook.Sheets("Infotext").Range("T_Infotext"), 2, False)
    InfoText = Application.WorksheetFunction.VLookup(Control, ThisWorkbook.Sheets("Infotext").Range("T_Infotext"), 3, False)
    
    Set frmOwner = Nothing
    For Each frm In VBA.UserForms
        If frm.Caption = OwnerFormCaption Then
            Set frmOwner = frm
            Exit For
        End If
    Next frm
    
    If frmOwner Is Nothing Then
        MsgBox "Technischer Fehler. Bitte wenden Sie sich an ihren Administrator."
        Exit Sub
    End If
    
    GoTo weiter
    
keinText:
    InfoHeader = "Noch kein Text vorhanden!"
    InfoText = "Noch kein Text vorhanden!"


weiter:
    
    With New F_HBB_Info
        .InfoHeader = InfoHeader
        .InfoText = InfoText
    
        .StartUpPosition = 3
        
        'Set frmOwner = GetOwnerForm
        
        .Left = frmOwner.Left + (0.5 * frmOwner.Width) - (0.5 * .Width)
        .Top = frmOwner.Top + (0.5 * frmOwner.Height) - (0.5 * .Height)
    
        '.Left = OwnerFormLeft + (0.5 * OwnerFormWidth) - (0.5 * .Width)
        '.Top = OwnerFormTop + (0.5 * OwnerFormHeigth) - (0.5 * .Height)
        
    
        .Show
    End With
End Sub






Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet24"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet_AllgemeineDaten"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'Alle Methoden, die zum Laden oder Speichern von Daten auf/vom Tabellenblatt Allgemeine ben|fffd|tigt werdne

'------------------

'L|fffd|dt nur die Info, ob es sich um eine Vorlage handelt oder nicht.
Public Function IsVorlage() As Boolean
    With Me
        IsVorlage = .Range("B2")
    End With
End Function

'Setzt die Vorlage auf FALSE
Public Sub DeaktiviereVorlage()
    With Me
       .Range("B2") = False
    End With
End Sub

'-----------------

Public Sub LadeDaten()
    
    With Me
        If (F_HBB.DatatStatusInitial) Then
        
            F_HBB.Controls("TextBox_AllgemeineDaten_Betreuer").Text = .Range("B4")
            F_HBB.Controls("OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Konvertierung").value = .Range("B5")
            F_HBB.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr").value = .Range("B6")
            F_HBB.Controls("TextBox_AllgemeineDaten_Anrede").value = .Range("B7")
            F_HBB.Controls("TextBox_AllgemeineDaten_Titel").Text = .Range("B8")
            F_HBB.Controls("TextBox_AllgemeineDaten_Vorname").Text = .Range("B9")
            F_HBB.Controls("TextBox_AllgemeineDaten_Nachname_Firma").Text = .Range("B10")
            ThisWorkbook.OffertName = .Range("B10")
            
            F_HBB.Controls("TextBox_AllgemeineDaten_Strasse").Text = .Range("B11")
            F_HBB.Controls("TextBox_AllgemeineDaten_PLZ").Text = .Range("B12")
            F_HBB.Controls("TextBox_AllgemeineDaten_Ort").Text = .Range("B13")
            F_HBB.Controls("TextBox_AllgemeineDaten_Staat").Text = .Range("B14")
            
            F_HBB.Controls("CheckBox_AllgemeineDaten_Versicherungsort_wieoben").value = .Range("B16")
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value = .Range("C4")
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_PLZ").value = .Range("D4")
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Ort").value = .Range("E4")
            
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Strasse").value = .Range("C5")
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_PLZ").value = .Range("D5")
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Ort").value = .Range("E5")
        
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Strasse").value = .Range("C6")
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_PLZ").value = .Range("D6")
            F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Ort").value = .Range("E6")
        
        End If
    End With
End Sub



Public Sub SchreibeDaten()
    
    With Me
        .Range("B4") = F_HBB.Controls("TextBox_AllgemeineDaten_Betreuer").Text
        .Range("B5") = F_HBB.Controls("OptionButton_AllgemeineDaten_NeuvertragKonvertierung_Konvertierung").value
        .Range("B6") = F_HBB.Controls("TextBox_AllgemeineDaten_NeuvertragKonvertierung_PolizzenNr").value
        .Range("B7") = F_HBB.Controls("TextBox_AllgemeineDaten_Anrede").value
        .Range("B8") = F_HBB.Controls("TextBox_AllgemeineDaten_Titel").Text
        .Range("B9") = F_HBB.Controls("TextBox_AllgemeineDaten_Vorname").Text
        .Range("B10") = F_HBB.Controls("TextBox_AllgemeineDaten_Nachname_Firma").Text
        .Range("B11") = F_HBB.Controls("TextBox_AllgemeineDaten_Strasse").Text
        .Range("B12") = F_HBB.Controls("TextBox_AllgemeineDaten_PLZ").Text
        .Range("B13") = F_HBB.Controls("TextBox_AllgemeineDaten_Ort").Text
        '.Range("B14") = F_HBB.Controls("TextBox_AllgemeineDaten_Staat").Text
        '.Range("B15") = F_HBB.Controls("TextBox_AllgemeineDaten_Geburtsdatum").value
        
        .Range("B16") = F_HBB.Controls("CheckBox_AllgemeineDaten_Versicherungsort_wieoben").value
        If (F_HBB.Controls("CheckBox_AllgemeineDaten_Versicherungsort_wieoben").value) Then
            .Range("C4") = F_HBB.Controls("TextBox_AllgemeineDaten_Strasse").value
            .Range("D4") = F_HBB.Controls("TextBox_AllgemeineDaten_PLZ").value
            .Range("E4") = F_HBB.Controls("TextBox_AllgemeineDaten_Ort").value
        Else
            .Range("C4") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse").value
            .Range("D4") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_PLZ").value
            .Range("E4") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Ort").value
        End If
        
        .Range("C5") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Strasse").value
        .Range("D5") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_PLZ").value
        .Range("E5") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort2_Ort").value
    
        .Range("C6") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Strasse").value
        .Range("D6") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_PLZ").value
        .Range("E6") = F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort3_Ort").value
    End With
    
End Sub


'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("B4") = ""
        .Range("B5") = False
        .Range("B6") = ""
        .Range("B7") = ""
        .Range("B8") = ""
        .Range("B9") = ""
        .Range("B10") = ""
        .Range("B11") = ""
        .Range("B12") = ""
        .Range("B13") = ""
        '.Range("B14") = "|fffd|sterreich" 'ist fix
        '.Range("B15") = "" 'wird nicht mehr verwendet
        .Range("B16") = False
        
        .Range("C4") = ""
        .Range("D4") = ""
        .Range("E4") = ""
        .Range("C5") = ""
        .Range("D5") = ""
        .Range("E5") = ""
        .Range("C6") = ""
        .Range("D6") = ""
        .Range("E6") = ""
    End With
End Sub


Attribute VB_Name = "Sheet_Antrag"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CheckBox4, 290, 15, MSForms, CheckBox"
Attribute VB_Control = "CheckBox3, 289, 16, MSForms, CheckBox"
Attribute VB_Control = "CheckBox2, 288, 17, MSForms, CheckBox"
Attribute VB_Control = "CheckBox22, 284, 18, MSForms, CheckBox"
Attribute VB_Control = "CheckBox21, 283, 19, MSForms, CheckBox"
Attribute VB_Control = "CheckBox20, 282, 20, MSForms, CheckBox"
Attribute VB_Control = "CheckBox94, 264, 21, MSForms, CheckBox"
Attribute VB_Control = "CheckBox93, 263, 22, MSForms, CheckBox"
Attribute VB_Control = "CheckBox92, 262, 23, MSForms, CheckBox"
Attribute VB_Control = "CheckBox91, 261, 24, MSForms, CheckBox"
Attribute VB_Control = "CheckBox5, 172, 25, MSForms, CheckBox"
Attribute VB_Control = "CheckBox6, 173, 26, MSForms, CheckBox"
Attribute VB_Control = "CheckBox7, 174, 27, MSForms, CheckBox"
Attribute VB_Control = "CheckBox8, 175, 28, MSForms, CheckBox"
Attribute VB_Control = "CheckBox9, 176, 29, MSForms, CheckBox"
Attribute VB_Control = "CheckBox10, 177, 30, MSForms, CheckBox"
Attribute VB_Control = "CheckBox11, 178, 31, MSForms, CheckBox"
Attribute VB_Control = "CheckBox12, 179, 32, MSForms, CheckBox"
Attribute VB_Control = "CheckBox13, 180, 33, MSForms, CheckBox"
Attribute VB_Control = "CheckBox14, 181, 34, MSForms, CheckBox"
Attribute VB_Control = "CheckBox15, 182, 35, MSForms, CheckBox"
Attribute VB_Control = "CheckBox16, 183, 36, MSForms, CheckBox"
Attribute VB_Control = "CheckBox17, 184, 37, MSForms, CheckBox"
Attribute VB_Control = "CheckBox1, 185, 38, MSForms, CheckBox"
Attribute VB_Control = "CheckBox18, 186, 39, MSForms, CheckBox"
Attribute VB_Control = "CheckBox19, 187, 40, MSForms, CheckBox"
Attribute VB_Control = "CheckBox24, 194, 41, MSForms, CheckBox"
Attribute VB_Control = "CheckBox25, 195, 42, MSForms, CheckBox"
Attribute VB_Control = "CheckBox26, 196, 43, MSForms, CheckBox"
Attribute VB_Control = "CheckBox27, 197, 44, MSForms, CheckBox"
Attribute VB_Control = "CheckBox28, 198, 45, MSForms, CheckBox"
Attribute VB_Control = "CheckBox29, 199, 46, MSForms, CheckBox"
Attribute VB_Control = "CheckBox30, 200, 47, MSForms, CheckBox"
Attribute VB_Control = "CheckBox31, 201, 48, MSForms, CheckBox"
Attribute VB_Control = "CheckBox32, 202, 49, MSForms, CheckBox"
Attribute VB_Control = "CheckBox33, 203, 50, MSForms, CheckBox"
Attribute VB_Control = "CheckBox34, 204, 51, MSForms, CheckBox"
Attribute VB_Control = "CheckBox35, 205, 52, MSForms, CheckBox"
Attribute VB_Control = "CheckBox36, 206, 53, MSForms, CheckBox"
Attribute VB_Control = "CheckBox37, 207, 54, MSForms, CheckBox"
Attribute VB_Control = "CheckBox38, 208, 55, MSForms, CheckBox"
Attribute VB_Control = "CheckBox39, 209, 56, MSForms, CheckBox"
Attribute VB_Control = "CheckBox40, 210, 57, MSForms, CheckBox"
Attribute VB_Control = "CheckBox41, 211, 58, MSForms, CheckBox"
Attribute VB_Control = "CheckBox42, 212, 59, MSForms, CheckBox"
Attribute VB_Control = "CheckBox43, 213, 60, MSForms, CheckBox"
Attribute VB_Control = "CheckBox44, 214, 61, MSForms, CheckBox"
Attribute VB_Control = "CheckBox45, 215, 62, MSForms, CheckBox"
Attribute VB_Control = "CheckBox46, 216, 63, MSForms, CheckBox"
Attribute VB_Control = "CheckBox47, 217, 64, MSForms, CheckBox"
Attribute VB_Control = "CheckBox48, 218, 65, MSForms, CheckBox"
Attribute VB_Control = "CheckBox49, 219, 66, MSForms, CheckBox"
Attribute VB_Control = "CheckBox50, 220, 67, MSForms, CheckBox"
Attribute VB_Control = "CheckBox51, 221, 68, MSForms, CheckBox"
Attribute VB_Control = "CheckBox52, 222, 69, MSForms, CheckBox"
Attribute VB_Control = "CheckBox53, 223, 70, MSForms, CheckBox"
Attribute VB_Control = "CheckBox54, 224, 71, MSForms, CheckBox"
Attribute VB_Control = "CheckBox55, 225, 72, MSForms, CheckBox"
Attribute VB_Control = "CheckBox56, 226, 73, MSForms, CheckBox"
Attribute VB_Control = "CheckBox57, 227, 74, MSForms, CheckBox"
Attribute VB_Control = "CheckBox58, 228, 75, MSForms, CheckBox"
Attribute VB_Control = "CheckBox59, 229, 76, MSForms, CheckBox"
Attribute VB_Control = "CheckBox60, 230, 77, MSForms, CheckBox"
Attribute VB_Control = "CheckBox61, 231, 78, MSForms, CheckBox"
Attribute VB_Control = "CheckBox62, 232, 79, MSForms, CheckBox"
Attribute VB_Control = "CheckBox63, 233, 80, MSForms, CheckBox"
Attribute VB_Control = "CheckBox64, 234, 81, MSForms, CheckBox"
Attribute VB_Control = "CheckBox65, 235, 82, MSForms, CheckBox"
Attribute VB_Control = "CheckBox66, 236, 83, MSForms, CheckBox"
Attribute VB_Control = "CheckBox67, 237, 84, MSForms, CheckBox"
Attribute VB_Control = "CheckBox68, 238, 85, MSForms, CheckBox"
Attribute VB_Control = "CheckBox69, 239, 86, MSForms, CheckBox"
Attribute VB_Control = "CheckBox70, 240, 87, MSForms, CheckBox"
Attribute VB_Control = "CheckBox71, 241, 88, MSForms, CheckBox"
Attribute VB_Control = "CheckBox72, 242, 89, MSForms, CheckBox"
Attribute VB_Control = "CheckBox73, 243, 90, MSForms, CheckBox"
Attribute VB_Control = "CheckBox74, 244, 91, MSForms, CheckBox"
Attribute VB_Control = "CheckBox75, 245, 92, MSForms, CheckBox"
Attribute VB_Control = "CheckBox76, 246, 93, MSForms, CheckBox"
Attribute VB_Control = "CheckBox77, 247, 94, MSForms, CheckBox"
Attribute VB_Control = "CheckBox78, 248, 95, MSForms, CheckBox"
Attribute VB_Control = "CheckBox79, 249, 96, MSForms, CheckBox"
Attribute VB_Control = "CheckBox80, 250, 97, MSForms, CheckBox"
Attribute VB_Control = "CheckBox81, 251, 98, MSForms, CheckBox"
Attribute VB_Control = "CheckBox82, 252, 99, MSForms, CheckBox"
Attribute VB_Control = "CheckBox83, 253, 100, MSForms, CheckBox"
Attribute VB_Control = "CheckBox84, 254, 101, MSForms, CheckBox"
Attribute VB_Control = "CheckBox85, 255, 102, MSForms, CheckBox"
Attribute VB_Control = "CheckBox86, 256, 103, MSForms, CheckBox"
Attribute VB_Control = "CheckBox87, 257, 104, MSForms, CheckBox"
Attribute VB_Control = "CheckBox88, 258, 105, MSForms, CheckBox"
Attribute VB_Control = "CheckBox89, 259, 106, MSForms, CheckBox"
Attribute VB_Control = "CheckBox90, 260, 107, MSForms, CheckBox"
Attribute VB_Control = "CheckBox97, 279, 108, MSForms, CheckBox"
Option Explicit
    
Public Sub ReCalculate()
    
    'eventuell nicht gespeicherte Werte speichern
    M_HBB_AllgemeineDaten.SchreibeDaten
    If M_HBB_Uebersicht.Sach Then M_HBB_Spartenauswahl_Sach.SchreibeDaten
    If M_HBB_Uebersicht.Technik Then M_HBB_Spartenauswahl_Technik.SchreibeDaten
    If M_HBB_Uebersicht.Transport Then M_HBB_Spartenauswahl_Transport.SchreibeDaten
    If M_HBB_Uebersicht.BU Then M_HBB_Spartenauswahl_BU.SchreibeDaten
    If M_HBB_Uebersicht.Haftpflicht Then M_HBB_Spartenauswahl_Haft.SchreibeDaten
    If M_HBB_Uebersicht.Rechtsschutz Then M_HBB_Spartenauswahl_RS.SchreibeDaten
    If M_HBB_Uebersicht.KFZRechtsschutz Then M_HBB_Spartenauswahl_KFZRS.SchreibeDaten
    If M_HBB_Uebersicht.GMRS Then M_HBB_Spartenauswahl_GMRS.SchreibeDaten
    If M_HBB_Uebersicht.Cyber Then M_HBB_Cyber.SchreibeDaten
    
    M_HBB_Uebersicht.BerechneNeu
    
    
End Sub



Private Sub NumPress()
    ' NUM-Lock aktivieren
    If (GetKeyState(VK_NUMLOCK)) Then 'wenn deaktiviert, dann
        keybd_event VK_NUMLOCK, 1, 0, 0
        keybd_event VK_NUMLOCK, 1, KEYEVENTF_KEYUP, 0
    End If
End Sub


'Pr|fffd|ft, ob der Antrag im jetzigen Zustand des Rechners gedruckt werden kann
Public Function DruckAllowed() As Boolean
    Dim EineSparteGewaehlt As Boolean
    Dim VersicherungsOrtNotwendig As Boolean
    EineSparteGewaehlt = M_HBB_Spartenauswahl_Sach.Sach Or M_HBB_Spartenauswahl_BU.BU Or M_HBB_Spartenauswahl_Technik.Technik Or M_HBB_Spartenauswahl_Transport.Transport Or _
                            M_HBB_Spartenauswahl_RS.RS Or M_HBB_Spartenauswahl_Haft.Haft Or M_HBB_Spartenauswahl_KFZRS.KFZRS Or M_HBB_Spartenauswahl_GMRS.GMRS Or M_HBB_Cyber.Cyber
    VersicherungsOrtNotwendig = M_HBB_Spartenauswahl_Sach.Sach Or M_HBB_Spartenauswahl_BU.BU Or M_HBB_Spartenauswahl_Technik.Technik
    
    DruckAllowed = False
    
    If Not (M_Global_Sparten.AlleSpartenRechenbar(M_Global_Sparten.Rechenbar)) Then
        MsgBox "Eingaben fehlen. Bitte f|fffd|llen Sie die gelb markierten Felder korrekt aus.", vbCritical, "Fehlende Eingaben"
    ElseIf Not EineSparteGewaehlt Then 'keine Sparte gew|fffd|hlt
        MsgBox "Es muss zumindest eine Sparte gew|fffd|hlt sein, um den Antrag drucken zu k|fffd|nnen.", vbCritical, "Fehlende Spartenauswahl"
    ElseIf M_Global.IsTextBoxEmpty(F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse")) And VersicherungsOrtNotwendig Then 'Textbox ist leer, Eingabe jedoch zwingend erforderlich bei SAch, Technik oder BU
        F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Multipage_AllgemeineDaten
        MsgBox "Bitte f|fffd|llen Sie den 1. Versicherungsort aus!", vbCritical, "Fehlende Eingaben"
    Else
        DruckAllowed = True
    End If
End Function



Public Sub Drucke()
    Dim bNumLock As Boolean
    Dim k As Integer
    Dim r As Integer
    
    'Num lock status merken
    bNumLock = Not GetKeyState(VK_NUMLOCK)
    
    Me.Unprotect
    Me.ReCalculate

    Application.ScreenUpdating = False
    
    With Me
        .Visible = True
        .Activate
        .Select
                
        .ResetAllPageBreaks
        
        M_Global_Druck.ShowHideRows Me.Range("AC1:AC525")
        
        If M_HBB_Spartenauswahl_Sach.Sach Then M_Global_Druck.AddPageBreak Me, 72
        If M_HBB_Cyber.AndereSparteGewaehlt Then M_Global_Druck.AddPageBreak Me, 153
        If M_HBB_Cyber.AndereSparteGewaehlt Then M_Global_Druck.AddPageBreak Me, 172
        If M_HBB_Uebersicht.Cyber Then M_Global_Druck.AddPageBreak Me, 228
        M_Global_Druck.AddPageBreak Me, 305
        M_Global_Druck.AddPageBreak Me, 353
        
        
        Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
        
'        r = .HPageBreaks.Count
'
'        For k = 1 To r
'
'            If Not .Rows(.HPageBreaks(k).Location.Row).PageBreak = xlNone Then
'                MsgBox .HPageBreaks(k).Location.Row
'            End If
'
'        Next k
'
        
        
        F_HBB.Hide
        
        Application.SendKeys "{PGDN}", True
        Application.SendKeys "{PGUP}", True
        
        Application.ScreenUpdating = True
        AppActivate ThisWorkbook.Application.Caption
        .PrintPreview (False)
        Application.ScreenUpdating = False
        

        If (ThisWorkbook.Version = VersionType.Release) Then
            Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        End If
        
        .Visible = False
    End With
    
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
    
    If bNumLock Then NumPress
    
    Me.Protect
    
    'Application.ScreenUpdating = True
    F_HBB.Show (vbModeless)
End Sub

Private Sub CheckBox96_Click()

End Sub

Private Sub CheckBox2_Click()

End Sub

Private Sub CheckBox95_Click()

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub


Attribute VB_Name = "Sheet_BU"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'Alle Methoden, die zum Laden oder Speichern von Daten auf/vom Tabellenblatt Technik ben|fffd|tigt werdne

Public Sub LadeDaten()
    With Me
       'Einzugebende Felder d|fffd|rfen nur beim ersten Mal neu geladen werden, sonst st|fffd|rt das die Eingabe
        If (F_HBB.DatatStatusInitial) Then
            F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag").value = Format(.Range("B12"), "Standard")
            
            'Feuer
            F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value = .Range("D8")
            F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").value = .Range("D10")
            F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro").value = .Range("D11")
            F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel").value = .Range("D12")
            
            'Elementar
            F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").value = .Range("F8")
            F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit").value = .Range("F9")
            
            'Mehrkosten
'            F_HBB.CheckBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten.value = .Range("H8")
'            F_HBB.TextBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten_VS = .Range("H9")
            
            'Rabatteinstellung
            F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach").value = .Range("B13")
        
            F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value = .Range("B14") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value = .Range("B15") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_GenehmigtDurch").value = .Range("B16")
            
            'VT Lizenz
            F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU").value = .Range("B17") * 100
        
        End If
        
        'Sach Rabatte jedes Mal neu laden, k|fffd|nnten sich ge|fffd|ndert haben
        
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SRSach").value = .Range("B18") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPCSach").value = .Range("B19") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_GenehmigtDurchSach").value = .Range("B20")

        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Elementar_DB").value = Format(.Range("F10"), "Standard")
        F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Feuer_DB").value = Format(.Range("D13"), "Standard")
        
    End With
End Sub


Public Sub SchreibeDaten()
    With Me
        
        .Range("B12") = Format(F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Deckungsbeitrag").value, "General Number")
        
        'Feuer
        .Range("D8") = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value
        
        If F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").ListIndex >= 0 Then .Range("D10") = F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Feuer_Haftungszeit").value
        .Range("D11") = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDGastro").value
        .Range("D12") = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer_VDHandel").value
        
        'Elementar
        .Range("F8") = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").value
         If F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit").ListIndex >= 0 Then .Range("F9") = F_HBB.Controls("ComboBox_Spartenauswahl_Betriebsunterbrechung_Elementar_Haftungszeit").value
        
        'Mehrkosten
'         .Range("H8") = F_HBB.CheckBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten.value
'        .Range("H9") = F_HBB.TextBox_Spartenauswahl_Betriebsunterbrechung_Mehrkosten_VS
            
        
        'Rabatteinstellung
        .Range("B13") = F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_RabatteWieSach").value
                        
        .Range("B14") = F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_SR").value / 100
        .Range("B15") = F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_VPC").value / 100
        .Range("B16") = F_HBB.Controls("TextBox_Spartenauswahl_Betriebsunterbrechung_Rabatte_GenehmigtDurch").value
        
        'VT Lizenz
        .Range("B17") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_BU").value / 100
    
    End With
End Sub


'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("B12") = 0
        .Range("B13") = False
        .Range("B14") = 0
        .Range("B15") = 0
        .Range("B16") = ""
        .Range("B17") = 0
        
        .Range("D8") = False
        .Range("D10") = 12
        .Range("D11") = False
        .Range("D12") = False
        
        .Range("F8") = False
        .Range("F9") = 9
        
        .Range("H8") = False
        .Range("H9") = 0
        
    End With
End Sub

Attribute VB_Name = "Sheet_Berechnungsblatt"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
    
Public Sub ReCalculate()
    
    'eventuell nicht gespeicherte Werte speichern
    M_HBB_AllgemeineDaten.SchreibeDaten
    If M_HBB_Uebersicht.Sach Then M_HBB_Spartenauswahl_Sach.SchreibeDaten
    If M_HBB_Uebersicht.Technik Then M_HBB_Spartenauswahl_Technik.SchreibeDaten
    If M_HBB_Uebersicht.Transport Then M_HBB_Spartenauswahl_Transport.SchreibeDaten
    If M_HBB_Uebersicht.BU Then M_HBB_Spartenauswahl_BU.SchreibeDaten
    If M_HBB_Uebersicht.Haftpflicht Then M_HBB_Spartenauswahl_Haft.SchreibeDaten
    If M_HBB_Uebersicht.Rechtsschutz Then M_HBB_Spartenauswahl_RS.SchreibeDaten
    If M_HBB_Uebersicht.KFZRechtsschutz Then M_HBB_Spartenauswahl_KFZRS.SchreibeDaten
    If M_HBB_Uebersicht.GMRS Then M_HBB_Spartenauswahl_GMRS.SchreibeDaten
    If M_HBB_Uebersicht.Cyber Then M_HBB_Cyber.SchreibeDaten
    
    M_HBB_Uebersicht.BerechneNeu
    
    'VBA Funktionen m|fffd|ssen manuell aufgerufen werden
    'alternative: Application.Volatile -> allerdings w|fffd|rde dann bei jedem Neuberechnen die Funktion aufgerufen werden. Unn|fffd|tig und dauert.
    Me.Range("M8").value = Sheet_Lizenz.GetVersion
    Me.Range("M9").value = Sheet_Lizenz.UserName
    Me.Range("Q12").value = M_Global.CheckLizenzAblauf_Global
    
End Sub



Private Sub NumPress()
    ' NUM-Lock aktivieren
    If (GetKeyState(VK_NUMLOCK)) Then 'wenn deaktiviert, dann
        keybd_event VK_NUMLOCK, 1, 0, 0
        keybd_event VK_NUMLOCK, 1, KEYEVENTF_KEYUP, 0
    End If
End Sub


'Pr|fffd|ft, ob das Berechnungsblatt im jetzigen Zustand des Rechners gedruckt werden kann
Public Function DruckAllowed() As Boolean
    Dim EineSparteGewaehlt As Boolean
    Dim VersicherungsOrtNotwendig As Boolean
    EineSparteGewaehlt = M_HBB_Spartenauswahl_Sach.Sach Or M_HBB_Spartenauswahl_BU.BU Or M_HBB_Spartenauswahl_Technik.Technik Or M_HBB_Spartenauswahl_Transport.Transport Or _
                            M_HBB_Spartenauswahl_RS.RS Or M_HBB_Spartenauswahl_Haft.Haft Or M_HBB_Spartenauswahl_KFZRS.KFZRS Or M_HBB_Spartenauswahl_GMRS.GMRS Or M_HBB_Cyber.Cyber
    VersicherungsOrtNotwendig = M_HBB_Spartenauswahl_Sach.Sach Or M_HBB_Spartenauswahl_BU.BU Or M_HBB_Spartenauswahl_Technik.Technik
    
    DruckAllowed = False
    
    If Not (M_Global_Sparten.AlleSpartenRechenbar(M_Global_Sparten.Rechenbar)) Then
        MsgBox "Eingaben fehlen. Bitte f|fffd|llen Sie die gelb markierten Felder korrekt aus.", vbCritical, "Fehlende Eingaben"
    ElseIf Not EineSparteGewaehlt Then 'keine Sparte gew|fffd|hlt
        MsgBox "Es muss zumindest eine Sparte gew|fffd|hlt sein, um das Berechnungsblatt drucken zu k|fffd|nnen.", vbCritical, "Fehlende Spartenauswahl"
    ElseIf M_Global.IsTextBoxEmpty(F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse")) And VersicherungsOrtNotwendig Then 'Textbox ist leer, Eingabe jedoch zwingend erforderlich bei SAch, Technik oder BU
        F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Multipage_AllgemeineDaten
        MsgBox "Bitte f|fffd|llen Sie den 1. Versicherungsort aus!", vbCritical, "Fehlende Eingaben"
    Else
        DruckAllowed = True
    End If
End Function



Public Sub Drucke()
    Dim bNumLock As Boolean
    Dim k As Integer
    Dim r As Integer
    
    'Num lock status merken
    bNumLock = Not GetKeyState(VK_NUMLOCK)
    
    Me.Unprotect
    Me.ReCalculate

    Application.ScreenUpdating = False
    
    With Me
        .Visible = True
        .Activate
        .Select
                
        .ResetAllPageBreaks
        
        M_Global_Druck.ShowHideRows Me.Range("Q12:Q533")
        If M_HBB_Cyber.AndereSparteGewaehlt Then M_Global_Druck.AddPageBreak Me, 457
        If M_HBB_Uebersicht.Cyber Then M_Global_Druck.AddPageBreak Me, 501

        
        Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
        
'        r = .HPageBreaks.Count
'
'        For k = 1 To r
'
'            If Not .Rows(.HPageBreaks(k).Location.Row).PageBreak = xlNone Then
'                MsgBox .HPageBreaks(k).Location.Row
'            End If
'
'        Next k
'
        
        
        F_HBB.Hide
        
        Application.SendKeys "{PGDN}", True
        Application.SendKeys "{PGUP}", True
        
        Application.ScreenUpdating = True
        AppActivate ThisWorkbook.Application.Caption
        .PrintPreview (False)
        Application.ScreenUpdating = False
        

        If (ThisWorkbook.Version = VersionType.Release) Then
            Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        End If
        
        .Visible = False
    End With
    
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
    
    If bNumLock Then NumPress
    
    Me.Protect
    
    'Application.ScreenUpdating = True
    F_HBB.Show (vbModeless)
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet_Betriebsart"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet_Cyber"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Public Sub LadeDaten()
    With Me
        'Einzugebende Felder d|fffd|rfen nur beim ersten Mal neu geladen werden, sonst st|fffd|rt das die Eingabe
        If (F_HBB.DatatStatusInitial) Then
            F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_Polizzennummer").value = .Range("D9")
            F_HBB.Controls("TextBox_Cyber_Umsatz").value = .Range("D11")
            F_HBB.Controls("ComboBox_Cyber_VSSumme").value = Format(.Range("D12"), "Standard")
            F_HBB.Controls("ComboBox_Cyber_SB").value = Format(.Range("D13"), "Standard")
            F_HBB.Controls("OptionButton_Cyber_BU_J").value = .Range("D14")
            F_HBB.Controls("OptionButton_Cyber_BU_N").value = Not F_HBB.Controls("OptionButton_Cyber_BU_J").value
            
            LadeDatenRisikofragen
        End If
        
        'jedes Mal neu laden
        F_HBB.Controls("TextBox_Cyber_UmsatzHaftpflicht").value = Format(.Range("D10"), "Standard")
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_PolizzennummerKonvertierung").value = .Range("B13")
        M_HBB_Cyber.GKL = .Range("D8")
        M_HBB_Cyber.AlleFragenBeantwortet = .Range("B19")
        M_Global_Sparten.Rechenbar.Cyber.Risikofragen = .Range("B21")
    End With
End Sub


Public Sub SchreibeDaten()
    With Me
        .Range("D11") = Format(F_HBB.Controls("TextBox_Cyber_Umsatz").value, "General Number")
        .Range("D12") = Format(F_HBB.Controls("ComboBox_Cyber_VSSumme").value, "General Number")
        .Range("D13") = Format(F_HBB.Controls("ComboBox_Cyber_SB").value, "General Number")
        .Range("D14") = IIf(F_HBB.Controls("OptionButton_Cyber_BU_J").value Or F_HBB.Controls("OptionButton_Cyber_BU_N").value, F_HBB.Controls("OptionButton_Cyber_BU_J").value, "")
        .Range("D9") = F_HBB.oF_HBB_Cyber_Risikofragen.Controls("TextBox_Polizzennummer_Polizzennummer").value
        
        SchreibeDatenRisikofragen
    End With
End Sub


'L|fffd|dt die Risikofragen
Public Sub LadeDatenRisikofragen()
    With Me
        'Allgemeine Fragen
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F1_J").value = IIf(.Range("F8") <> "", .Range("F8"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F1_N").value = IIf(.Range("F8") <> "", Not .Range("F8"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F2_J").value = IIf(.Range("F9") <> "", .Range("F9"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F2_N").value = IIf(.Range("F9") <> "", Not .Range("F9"), False)
        'GKL2
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F1_J").value = IIf(.Range("I8") <> "", .Range("I8"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F1_N").value = IIf(.Range("I8") <> "", Not .Range("I8"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F2_J").value = IIf(.Range("I9") <> "", .Range("I9"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F2_N").value = IIf(.Range("I9") <> "", Not .Range("I9"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F3_J").value = IIf(.Range("I10") <> "", .Range("I10"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F3_N").value = IIf(.Range("I10") <> "", Not .Range("i10"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F4_J").value = IIf(.Range("I11") <> "", .Range("I11"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F4_N").value = IIf(.Range("I11") <> "", Not .Range("I11"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F5_J").value = IIf(.Range("I12") <> "", .Range("I12"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F5_N").value = IIf(.Range("I12") <> "", Not .Range("I12"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F6_J").value = IIf(.Range("I13") <> "", .Range("I13"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F6_N").value = IIf(.Range("I13") <> "", Not .Range("I13"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F7_J").value = IIf(.Range("I14") <> "", .Range("I14"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F7_N").value = IIf(.Range("I14") <> "", Not .Range("I14"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F8_J").value = IIf(.Range("I15") <> "", .Range("I15"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F8_N").value = IIf(.Range("I15") <> "", Not .Range("I15"), False)
        'GKL3
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F1_J").value = IIf(.Range("L8") <> "", .Range("L8"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F1_N").value = IIf(.Range("L8") <> "", Not .Range("L8"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F2_J").value = IIf(.Range("L9") <> "", .Range("L9"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F2_N").value = IIf(.Range("L9") <> "", Not .Range("L9"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F3_J").value = IIf(.Range("L10") <> "", .Range("L10"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F3_N").value = IIf(.Range("L10") <> "", Not .Range("L10"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F4_J").value = IIf(.Range("L11") <> "", .Range("L11"), False)
        F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F4_N").value = IIf(.Range("L11") <> "", Not .Range("L11"), False)
    End With
End Sub



'Schreibt die Risikofragen
Public Sub SchreibeDatenRisikofragen()
    With Me
        'Allgemeine Fragen
        .Range("F8") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F1_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F1_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F1_J").value, "")
        .Range("F9") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F2_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F2_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenAllgemein_F2_J").value, "")
        'GKL2
        .Range("I8") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F1_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F1_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F1_J").value, "")
        .Range("I9") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F2_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F2_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F2_J").value, "")
        .Range("I10") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F3_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F3_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F3_J").value, "")
        .Range("I11") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F4_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F4_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F4_J").value, "")
        .Range("I12") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F5_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F5_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F5_J").value, "")
        .Range("I13") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F6_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F6_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F6_J").value, "")
        .Range("I14") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F7_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F7_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F7_J").value, "")
        .Range("I15") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F8_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F8_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL2_F8_J").value, "")
        'GKL3
        .Range("L8") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F1_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F1_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F1_J").value, "")
        .Range("L9") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F2_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F2_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F2_J").value, "")
        .Range("L10") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F3_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F3_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F3_J").value, "")
        .Range("L11") = IIf(F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F4_J").value Or F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F4_N").value, F_HBB.oF_HBB_Cyber_Risikofragen.Controls("OptionButton_RisikofragenGKL3_F4_J").value, "")
    End With
End Sub


'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("D11") = ""
        .Range("D12") = 50000
        .Range("D13") = 500
        .Range("D14") = ""
        
        'Risikofragen
        'Allgemeine Risikofragen
        .Range("F8") = ""
        .Range("F9") = ""
        'GKL2
        .Range("I8") = ""
        .Range("I9") = ""
        .Range("I10") = ""
        .Range("I11") = ""
        .Range("I12") = ""
        .Range("I13") = ""
        .Range("I14") = ""
        .Range("I15") = ""
        'GKL3
        .Range("L8") = ""
        .Range("L9") = ""
        .Range("L10") = ""
        .Range("L11") = ""
        
    End With
End Sub
Attribute VB_Name = "Sheet_GMRS"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public Sub SchreibeDaten()
    With Me
    'True oder False Werte schreiben
        .Range("D8").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt").value
        .Range("D9").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnunVermietet").value
        .Range("D10").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum").value
        .Range("D11").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGentztGemietet").value
        .Range("D12").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet").value
        .Range("D13").value = F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_SBVerzicht").value
    
    'Anzahl Wohnungen,... Schreiben
        .Range("F8").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt").value
        .Range("F9").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet").value
        .Range("F10").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche").value
        .Range("F11").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet").value
        .Range("F12").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet").value
        
    'Adressen schreiben
        .Range("H8").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value
        .Range("H9").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value
        .Range("H10").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value
        .Range("H11").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value
        .Range("H12").value = F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value
    
    'TODO Rabatte schreiben
        .Range("B12").value = F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").value
        .Range("B13").value = F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SR").value / 100
        .Range("B14").value = F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPC").value / 100
        .Range("B15").value = F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_GenehmigtDurch").value
        .Range("B16").value = F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS").value / 100
    
    End With
    

End Sub

Public Sub LadeDaten()
    With Me
    'True oder False Werte laden
        F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnungSelbstgenutzt").value = .Range("D8").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_WohnunVermietet").value = .Range("D9").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutztEigentum").value = .Range("D10").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGentztGemietet").value = .Range("D11").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("CheckBox_Spartenauswahl_GMRS_GewGenutzVermietet").value = .Range("D12").value
        F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_SBVerzicht").value = .Range("D13").value
        
    'Anzahl Wohnungen,... laden
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenSelbstgenuetzt").value = .Range("F8").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_AnzahlWohnungenGemietet").value = .Range("F9").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_Nutzflaeche").value = .Range("F10").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteGemietet").value = .Range("F11").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_Spartenauswahl_GMRS_JahresbruttomieteVermietet").value = .Range("F12").value
        
    'Adressen laden
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungSelbstgenutzt").value = .Range("H8").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_AdresseWohnungVermietet").value = .Range("H9").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitEigentum").value = .Range("H10").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitGemietet").value = .Range("H11").value
        F_HBB.oF_HBB_GMRS_Adressen.Controls("TextBox_GMRS_GewGenEinheitVermietet").value = .Range("H12").value
        
        'VS Summe jedes Mal neu laden, k|fffd|nnte sich ge|fffd|ndert haben
        F_HBB.Controls("TextBox_Spartenauswahl_GMRS_Versicherungssumme").value = Format(.Range("F14"), "Standard")
        
    
        'Rabatte schreiben
        F_HBB.Controls("CheckBox_Spartenauswahl_GMRS_RabatteWieSach").value = .Range("B12").value
        F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SRSach").value = .Range("B17").value * 100
        F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPCSach").value = .Range("B18").value * 100
        F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_GenehmigtDurchSach").value = Format(.Range("B19").value, "Standard")
        F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_SR").value = .Range("B13").value * 100
        F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_VPC").value = .Range("B14").value * 100
        F_HBB.Controls("Textbox_Spartenauswahl_GMRS_Rabatte_GenehmigtDurch").value = .Range("B15").value
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_GMRS").value = .Range("B16").value * 100
    End With


End Sub


Public Sub Reset()
    With Me
        'alle Eingaben auf False setzen
        .Range("D8").value = False
        .Range("D9").value = False
        .Range("D10").value = False
        .Range("D11").value = False
        .Range("D12").value = False
        .Range("D13").value = False
        
        'alle Anzahlen etc auf leer setzen
        .Range("F8").value = ""
        .Range("F9").value = ""
        .Range("F10").value = ""
        .Range("F11").value = ""
        .Range("F12").value = ""
        
        'alle Adressen l|fffd|schen
        .Range("H8").value = ""
        .Range("H9").value = ""
        .Range("H10").value = ""
        .Range("H11").value = ""
        .Range("H12").value = ""
        
        .Range("B13").value = ""
        .Range("B14").value = ""
        .Range("B15").value = ""
        .Range("B16").value = "0"

    End With
    

End Sub


Attribute VB_Name = "Sheet_Haftpflicht"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'Alle Methoden, die zum Laden oder Speichern von Daten auf/vom Tabellenblatt Technik ben|fffd|tigt werdne

Public Sub LadeDaten()
    With Me
        'Einzugebende Felder d|fffd|rfen nur beim ersten Mal neu geladen werden, sonst st|fffd|rt das die Eingabe
        If (F_HBB.DatatStatusInitial) Then
            
            'Haus- und Grundbesitzhaftpflicht
            F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_HGHP").value = .Range("D8")
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert").value = Format(.Range("D11"), "Standard")
            F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS").value = Format(.Range("D13"), "Standard")
            
            'Betriebshaftpflicht
            F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").value = .Range("F8")
            F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").value = .Range("F8")
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme").value = Format(.Range("F10"), "Standard")
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz").value = Format(.Range("F11"), "Standard")
            
            F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").value = Format(.Range("F12"), "Standard")
            
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort").value = .Range("F14")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv").value = .Range("H14")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Gastronomie").value = .Range("F15")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_GastronomiePauschalreisen").value = .Range("F16")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handel").value = .Range("F17")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebe").value = .Range("F18")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebeTaetigkeiten").value = .Range("F19")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Bau").value = .Range("F20")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Produktion").value = .Range("F21")
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handwerk").value = .Range("F22")
            
            'Rabatteinstellung
            F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach").value = .Range("B12")

            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value = .Range("B13") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value = .Range("B14") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_GenehmigtDurch").value = .Range("B15")
            
            'VT Lizenz
            F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht").value = .Range("B16") * 100
            
        End If
        
        'Sach-VS neu laden
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_GebaeudeneubauwertSach").value = Format(.Range("D10"), "Standard")
        
        'Sach Rabatte jedes Mal laden, k|fffd|nnten sich ge|fffd|ndert haben
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SRSach").value = .Range("B17") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPCSach").value = .Range("B18") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_GenehmigtDurchSach").value = .Range("B19")
        
    End With
End Sub


Public Sub SchreibeDaten()
    With Me
        'Haus- und Grundbesitzhaftpflicht
        .Range("D8") = F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_HGHP").value
        
        .Range("D11") = Format(F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_HGHP_Gebaeudeneubauwert").value, "General Number")
        If F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS").ListIndex >= 0 Then .Range("D13") = Format(F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_HGHP_PVS").value, "General Number")
        
        
        'Betriebshaftpflicht
        .Range("F8") = F_HBB.Controls("OptionButton_Spartenauswahl_Haftpflicht_BetriebHGHP_Betrieb").value
        
        .Range("F10") = Format(F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Lohnsumme").value, "General Number")
        .Range("F11") = Format(F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Betrieb_Umsatz").value, "General Number")
        .Range("F12") = Format(F_HBB.Controls("ComboBox_Spartenauswahl_Haftpflicht_Betrieb_PVS").value, "General Number")
        
        .Range("F14") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusKomfort").value
        .Range("H14") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_HBBPlusExklusiv").value
        .Range("F15") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Gastronomie").value
        .Range("F16") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_GastronomiePauschalreisen").value
        .Range("F17") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handel").value
        .Range("F18") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebe").value
        .Range("F19") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_KFZBetriebeTaetigkeiten").value
        .Range("F20") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Bau").value
        .Range("F21") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Produktion").value
        .Range("F22") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_Betrieb_VD_Handwerk").value
        
        'Rabatteinstellung
        .Range("B12") = F_HBB.Controls("CheckBox_Spartenauswahl_Haftpflicht_RabatteWieSach").value
        
        'Rabatte speichern
        .Range("B13") = F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_SR").value / 100
        .Range("B14") = F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_VPC").value / 100
        .Range("B15") = F_HBB.Controls("TextBox_Spartenauswahl_Haftpflicht_Rabatte_GenehmigtDurch").value
        
        'VT Lizenz
        .Range("B16") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_Haftpflicht").value / 100
    End With
End Sub



'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        'Hafpflicht
        .Range("B12") = False
        .Range("B13") = 0
        .Range("B14") = 0
        .Range("B15") = ""
        .Range("B16") = 0
        
        'HGHP
        .Range("D8") = False
        .Range("D11") = 0
        .Range("D13") = 1000000
        
        'Betrieb
        .Range("F8") = False
        .Range("F10") = ""
        .Range("F11") = 0
        .Range("F12") = 1000000
        .Range("F14") = False
        .Range("F15") = False
        .Range("F16") = False
        .Range("F17") = False
        .Range("F18") = False
        .Range("F19") = False
        .Range("F20") = False
        .Range("F21") = False
        .Range("F22") = False
    End With
End Sub

Attribute VB_Name = "Sheet_Infotext"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet_KFZRechtsschutz"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Public Sub LadeDaten()
    With Me
        'Einzugebende Felder d|fffd|rfen nur beim ersten Mal neu geladen werden, sonst st|fffd|rt das die Eingabe
        If (F_HBB.DatatStatusInitial) Then

            F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach").value = .Range("B12")
            F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_FzgVertragsRS").value = .Range("D9")
            F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht").value = .Range("D10")

            'eigene Form zu den Kennzeichen
            F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_PKW_Anzahl").value = .Range("F8")
            F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_PKW_Kennzeichen").value = .Range("G8")
            F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_LKW_Anzahl").value = .Range("F9")
            F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_LKW_Kennzeichen").value = .Range("G9")
            F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_Sattelzug_Anzahl").value = .Range("F10")
            F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_Sattelzug_Kennzeichen").value = .Range("G10")

            'VT Lizenz
            F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz").value = .Range("B16") * 100
            
            'Rabatte
            F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value = .Range("B13") * 100
            F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value = .Range("B14") * 100
            F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_GenehmigtDurch").value = .Range("B15")
        End If

        'VS Summe jedes Mal neu laden, k|fffd|nnte sich ge|fffd|ndert haben
        F_HBB.Controls("TextBox_Spartenauswahl_KFZRechtsschutz_Versicherungssumme").value = Format(.Range("D8"), "Standard")

        'Sach Rabatte jedes Mal neu laden, k|fffd|nnten sich ge|fffd|ndert haben
        F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SRSach").value = .Range("B17") * 100
        F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPCSach").value = .Range("B18") * 100
        F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_GenehmigtDurchSach").value = .Range("B19")
        
        'Rechenbar Status abfragen
        F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("Textbox_Rechenbar").value = .Range("B24")
        
    End With
End Sub


Public Sub SchreibeDaten()
    With Me
        
        .Range("B12") = F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_RabatteWieSach").value
        .Range("D9") = F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_FzgVertragsRS").value
        .Range("D10") = F_HBB.Controls("CheckBox_Spartenauswahl_KFZRechtsschutz_SBVerzicht").value
    
        'eigene Form zu den Kennzeichen
        .Range("F8") = F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_PKW_Anzahl").value
        .Range("G8") = F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_PKW_Kennzeichen").value
        .Range("F9") = F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_LKW_Anzahl").value
        .Range("G9") = F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_LKW_Kennzeichen").value
        .Range("F10") = F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("ComboBox_Kennzeichen_Sattelzug_Anzahl").value
        .Range("G10") = F_HBB.oF_HBB_Kennzeichen_KFZRS.Controls("TextBox_Kennzeichen_Sattelzug_Kennzeichen").value
    
        'VT Lizenz
        .Range("B16") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_KFZRechtsschutz").value / 100
        
        .Range("B13") = F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_SR").value / 100
        .Range("B14") = F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_VPC").value / 100
        .Range("B15") = F_HBB.Controls("Textbox_Spartenauswahl_KFZRechtsschutz_Rabatte_GenehmigtDurch").value
    
    End With
End Sub


'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("B12") = False
        .Range("B13") = 0
        .Range("B14") = 0
        .Range("B15") = ""
        .Range("B16") = 0
        
        .Range("D9") = False
        .Range("D10") = False
        
        .Range("F8") = 0
        .Range("G8") = ""
        .Range("F9") = 0
        .Range("G9") = ""
        .Range("F10") = 0
        .Range("G10") = ""
    End With
End Sub
Attribute VB_Name = "Sheet_Lizenz"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Public Enum LizenzType
    VT = 1
    User = 2
End Enum



Private Version As String


'ermittelt den angemeldeten AD-Username
Public Function UserName() As String
    Dim DomainName  As String
    DomainName = Environ("USERDNSDOMAIN")
    UserName = DomainName & "\" & Environ$("UserName")
End Function


'Pr|fffd|ft, ob diese Lizenz abgelaufen ist
'es erfolgt nur ein Hinweis, arbeiten ist generell weiterhin m|fffd|glich
'liefert true, wenn die Lizenz abgelaufen ist
Public Function CheckLizenzAblauf() As Boolean
    Dim LizenzablaufDatum As Date
    LizenzablaufDatum = ThisWorkbook.Sheets(global_Tabellenblatt_Lizenz).Range("B1").value
    CheckLizenzAblauf = Now() > LizenzablaufDatum
End Function


Public Function GetVersion() As String
    GetVersion = ThisWorkbook.Sheets(global_Tabellenblatt_Lizenz).Range("B2").value
End Function


'ermittelt anhand des Usernamen, ob eine VT-Lizenz vorliegt oder nicht
Public Function GetLizenzType() As LizenzType
    Dim rLizenz As Range
    
    GetLizenzType = User
    
    'Dev/Testing
    If (ThisWorkbook.Version = VersionType.Developer) Then
        GetLizenzType = LizenzType.VT
        'GetLizenzType = LizenzType.User
    Else 'Release
        Set rLizenz = ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Lizenz).Range("T_Lizenz_VT[DomainUser]").Find(UserName)
        If Not (rLizenz Is Nothing) Then GetLizenzType = VT
    End If
    
End Function



Attribute VB_Name = "Sheet_OLEObjects"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet_Offert"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Dim IPIDSheets() As String
Dim IPIDSheehtsCnt As Long

Private Sub NumPress()
    ' NUM-Lock aktivieren
    If (M_Global_DDL.GetKeyState(M_Global_DDL.VK_NUMLOCK)) Then  'wenn deaktiviert, dann
        M_Global_DDL.keybd_event M_Global_DDL.VK_NUMLOCK, 1, 0, 0
        M_Global_DDL.keybd_event M_Global_DDL.VK_NUMLOCK, 1, M_Global_DDL.KEYEVENTF_KEYUP, 0
    End If
End Sub


'Pr|fffd|ft, ob das Offert im jetzigen Zustand des Rechners gedruckt werden kann
Public Function DruckAllowed() As Boolean
    Dim EineSparteGewaehlt As Boolean
    Dim VersicherungsOrtNotwendig As Boolean
    EineSparteGewaehlt = M_HBB_Spartenauswahl_Sach.Sach Or M_HBB_Spartenauswahl_BU.BU Or M_HBB_Spartenauswahl_Technik.Technik Or M_HBB_Spartenauswahl_Transport.Transport Or _
                            M_HBB_Spartenauswahl_RS.RS Or M_HBB_Spartenauswahl_Haft.Haft Or M_HBB_Spartenauswahl_KFZRS.KFZRS Or M_HBB_Spartenauswahl_GMRS.GMRS Or M_HBB_Cyber.Cyber
    VersicherungsOrtNotwendig = M_HBB_Spartenauswahl_Sach.Sach Or M_HBB_Spartenauswahl_BU.BU Or M_HBB_Spartenauswahl_Technik.Technik
    
    DruckAllowed = False
    
    If Not (M_Global_Sparten.AlleSpartenRechenbar(M_Global_Sparten.Rechenbar)) Then
        MsgBox "Eingaben fehlen. Bitte f|fffd|llen Sie die gelb markierten Felder korrekt aus.", vbCritical, "Fehlende Eingaben"
    ElseIf Not EineSparteGewaehlt Then 'keine Sparte gew|fffd|hlt
        MsgBox "Es muss zumindest eine Sparte gew|fffd|hlt sein, um das Offert drucken zu k|fffd|nnen.", vbCritical, "Fehlende Spartenauswahl"
    ElseIf M_Global.IsTextBoxEmpty(F_HBB.Controls("TextBox_AllgemeineDaten_Versicherungsort_Strasse")) And VersicherungsOrtNotwendig Then 'Textbox ist leer, Eingabe jedoch zwingend erforderlich bei SAch, Technik oder BU
        F_HBB.MultiPage_Sparten_ChangeToPage M_Global.global_Multipage_AllgemeineDaten
        MsgBox "Bitte f|fffd|llen Sie den 1. Versicherungsort aus!", vbCritical, "Fehlende Eingaben"
    Else
        DruckAllowed = True
    End If
End Function

Public Sub ReCalculate()
    
    'eventuell nicht gespeicherte Werte speichern
    M_HBB_AllgemeineDaten.SchreibeDaten
    If M_HBB_Uebersicht.Sach Then M_HBB_Spartenauswahl_Sach.SchreibeDaten
    If M_HBB_Uebersicht.Technik Then M_HBB_Spartenauswahl_Technik.SchreibeDaten
    If M_HBB_Uebersicht.BU Then M_HBB_Spartenauswahl_BU.SchreibeDaten
    If M_HBB_Uebersicht.Haftpflicht Then M_HBB_Spartenauswahl_Haft.SchreibeDaten
    If M_HBB_Uebersicht.Rechtsschutz Then M_HBB_Spartenauswahl_RS.SchreibeDaten
    If M_HBB_Uebersicht.KFZRechtsschutz Then M_HBB_Spartenauswahl_KFZRS.SchreibeDaten
    If M_HBB_Uebersicht.Cyber Then M_HBB_Cyber.SchreibeDaten
    
    M_HBB_Uebersicht.BerechneNeu
    
    'VBA Funktionen m|fffd|ssen manuell aufgerufen werden (alternative: Application.Volatile)
    Me.Range("K8").value = Sheet_Lizenz.GetVersion() & " - " & Sheet_Lizenz.UserName()
    
End Sub


Public Sub Drucke()
    Dim bNumLock As Boolean
    
    'Num lock status merken
    bNumLock = Not GetKeyState(VK_NUMLOCK)
    
    Me.Unprotect
    
    Me.ReCalculate
    
    Application.ScreenUpdating = False
    
    With Me
        .Visible = True
        .Activate
        .Select
        .ResetAllPageBreaks
        
        M_Global_Druck.ShowHideRows Me.Range("P13:P1288")
        If M_HBB_Cyber.AndereSparteGewaehlt Then M_Global_Druck.AddPageBreak Me, 81
        If M_HBB_Cyber.Cyber Then M_Global_Druck.AddPageBreak Me, 1103
        
        
        
        Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
        
        F_HBB.Hide
        
        IPIDAuswaehlen
        
        Application.SendKeys "{PGDN}", True
        Application.SendKeys "{PGUP}", True
        
        Application.ScreenUpdating = True
        AppActivate ThisWorkbook.Application.Caption
        ActiveWindow.SelectedSheets.PrintPreview (False)
        Application.ScreenUpdating = False
        
        If (ThisWorkbook.Version = VersionType.Release) Then
            Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        End If
        
        .Visible = False
        HideIPIDSheets
    End With
    
    With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Start)
        .Activate
        .Select
    End With
    
    If bNumLock Then NumPress
    
    Me.Protect
    
    F_HBB.Show (vbModeless)
End Sub


Private Sub HideIPIDSheets()
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDFeuer).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDSturm).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDLeitungswasser).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDGlasbruch).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDEinbruchdiebstahl).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDTechnik).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDBUElementar).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDBUFeuer).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDHaftpflicht).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDRechtsschutz).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDCyber).Visible = False
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_IPIDTransport).Visible = False
End Sub


Private Sub IPIDHinzufuegen(newElement As String)
    'Array um eins vergr|fffd||fffd|ern
    ReDim Preserve IPIDSheets(IPIDSheehtsCnt)
    IPIDSheets(IPIDSheehtsCnt) = newElement
    IPIDSheehtsCnt = IPIDSheehtsCnt + 1
    ThisWorkbook.Sheets(newElement).Visible = True
End Sub


'selektiert IPID, die f|fffd|r das aktuelle Offert ben|fffd|tigt werden
Private Sub IPIDAuswaehlen()
    IPIDSheehtsCnt = 0
    IPIDHinzufuegen (M_Global.global_Tabellenblatt_Offert)
    
    'Sach
    If (M_HBB_Uebersicht.Sach) Then
        If (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDFeuer)
        If (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDSturm)
        If (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDLeitungswasser)
        If (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDGlasbruch)
        If (F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDEinbruchdiebstahl)
    End If
    
    'Technik
    If (M_HBB_Uebersicht.Technik) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDTechnik)
    
    If (M_HBB_Uebersicht.Transport) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDTransport)
    
    'BU
    If (M_HBB_Uebersicht.BU) Then
        If (F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Elementar").value) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDBUElementar)
        If (F_HBB.Controls("CheckBox_Spartenauswahl_Betriebsunterbrechung_Feuer").value) Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDBUFeuer)
    End If
    
    'Haftpflicht
    If M_HBB_Uebersicht.Haftpflicht Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDHaftpflicht)
    
    'Rechtsschutz
    If M_HBB_Uebersicht.Rechtsschutz Or M_HBB_Uebersicht.KFZRechtsschutz Or M_HBB_Uebersicht.GMRS Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDRechtsschutz)
    
    'Cyber
    If M_HBB_Uebersicht.Cyber Then IPIDHinzufuegen (M_Global.global_Tabellenblatt_IPIDCyber)
  
    ThisWorkbook.Sheets(IPIDSheets).Select
    ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Offert).Activate
    
End Sub







Attribute VB_Name = "Sheet_Rechtsschutz"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Public Sub LadeDaten()
    With Me
        'Einzugebende Felder d|fffd|rfen nur beim ersten Mal neu geladen werden, sonst st|fffd|rt das die Eingabe
        If (F_HBB.DatatStatusInitial) Then
            
            F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach").value = .Range("B12")
            
            F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value = .Range("D8")
            F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value = .Range("F8")
            F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter").value = .Range("D11")
            F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_AVRS").value = .Range("D12")
            F_HBB.Controls("ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert").value = Format(.Range("D13"), "Standard")
            'F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_VD").value = .range("D15")
            F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht").value = .Range("D16")
            F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_NameVersichertePerson").value = .Range("D17")
            F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_Verkehrsrisiko").value = .Range("D19")
            F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_Cyber").value = .Range("D20")

            
            
            F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value = .Range("B13") * 100
            F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value = .Range("B14") * 100
            F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_GenehmigtDurch").value = .Range("B15")
            
            'VT Lizenz
            F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz").value = .Range("B16") * 100
        End If
        
        'Sach Rabatte jedes Mal neu laden, k|fffd|nnten sich ge|fffd|ndert haben
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SRSach").value = .Range("B17") * 100
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPCSach").value = .Range("B18") * 100
        F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_GenehmigtDurchSach").value = .Range("B19")
            
        Me.LadeVorteilsdeckung
        
    End With
End Sub


'L|fffd|dt und Pr|fffd|ft den Status der Vorteilsdeckung (Spezialbehandlung, da die Daten zur Vorteilsdeckung in der BA-Liste enthalten sind).
Public Sub LadeVorteilsdeckung()
    With Me
        'Vorteilsdeckung muss jedes Mal neu geladen werden
        F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_VD").value = .Range("D15")
        F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_VD").Caption = .Range("E10")
        F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_VD").locked = Not .Range("F10")
        F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_VD").Visible = .Range("G10")
        F_HBB.Controls("InfoButton_Spartenauswahl_Rechtsschutz_VD").Visible = .Range("G10")
    End With
End Sub


Public Sub SchreibeDaten()
    With Me
    
        .Range("D8") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusKomfort").value
        .Range("F8") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_HBBPlusExklusiv").value
        .Range("D11") = F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_AnzahlMitarbeiter").value
        .Range("D12") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_AVRS").value
        If F_HBB.Controls("ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert").ListIndex >= 0 Then .Range("D13") = Format(F_HBB.Controls("ComboBox_Spartenauswahl_Rechtsschutz_AVRSStreitwert").value, "General Number")
        .Range("D14") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_VD").value
        .Range("D16") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_SBVerzicht").value
        .Range("D17") = F_HBB.Controls("TextBox_Spartenauswahl_Rechtsschutz_NameVersichertePerson").value
        .Range("D19") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_Verkehrsrisiko").value
        .Range("D20") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_Cyber").value
    
        .Range("B12") = F_HBB.Controls("CheckBox_Spartenauswahl_Rechtsschutz_RabatteWieSach").value
    
        .Range("B13") = F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_SR").value / 100
        .Range("B14") = F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_VPC").value / 100
        .Range("B15") = F_HBB.Controls("Textbox_Spartenauswahl_Rechtsschutz_Rabatte_GenehmigtDurch").value
        
        'VT Lizenz
        .Range("B16") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_Rechtsschutz").value / 100
    
    End With
End Sub



'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("B12") = False
        .Range("B13") = 0
        .Range("B14") = 0
        .Range("B15") = ""
        .Range("B16") = 0
        
        .Range("D8") = True
        .Range("F8") = False
        .Range("D11") = ""
        .Range("D12") = False
        .Range("D13") = 2000
        .Range("D14") = False
        .Range("D16") = False
        .Range("D17") = ""
        .Range("D19") = False
        
    End With
End Sub

Attribute VB_Name = "Sheet_Sachversicherung"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


'Alle Methoden, die zum Laden oder Speichern von Daten auf/vom Tabellenblatt Sachversicherung ben|fffd|tigt werdne

Public Sub LadeDaten()
    
    With Me
        
        'Sonderfall Alarmanlagentext: muss jedes Mal geladen werden und auch bevor die Alarmanlage gesetzt wird
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_AlarmanlageText").value = .Range("J16")
      
        'Einzugebende Felder d|fffd|rfen nur beim ersten Mal neu geladen werden, sonst st|fffd|rt das die Eingabe
        If (F_HBB.DatatStatusInitial) Then
            
            'ED Sicherheitstechnik muss am Anfang geladen werden
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Sicherheitstechnik").value = .Range("J13")
            
            'eingegeben Werte f|fffd|r aktuelles Offert
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value = .Range("B12")
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value = Format(.Range("B13"), "Standard")
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = .Range("B15")
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value = Format(.Range("B16"), "Standard")
                        
            'Feuer
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value = .Range("D8")
            F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck").ListIndex = .Range("D10")
            
            'Sturm
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_WenigerAls4").value = .Range("F9")
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_MehrAls4").value = .Range("F10")
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value = .Range("F8")
            
            
            'Leitungswasser
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value = .Range("H8")
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerJa").value = .Range("H9")
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerNein").value = .Range("H10")
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungMit").value = .Range("H11")
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungOhne").value = .Range("H12")
            
            'Einbruchdiebstahl
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value = .Range("J9")
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_GebaeudeUnbewohnt").value = .Range("J11")
            F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").value = Format(.Range("J12"), "General Number")
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").value = .Range("J15")
            
            'Glasbruch
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value = .Range("L8")
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").value = .Range("L11")
            F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").value = .Range("L12")
            
            
            'Rabatte
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value = .Range("B21") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC").value = .Range("B22") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_GenehmigtDurch").value = .Range("B23")
            
            'HBB Plus zum Schluss setzen
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value = .Range("B20")
            F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value = .Range("B28")
            
            'Glasbruch H|fffd|chstentsch|fffd|digung nach HBB Plus da sonst |fffd|berschrieben
            F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").value = Format(.Range("L13"), "Standard")
            
            
            'Vorteilsdeckungen
            LadeDaten_Vorteilsdeckungen
            
            'Allrisk
            Lade_Allrisk
            
            'VT-Lizenz
            F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach").value = .Range("B24") * 100
        End If
        
        'jedes Mal neu laden:
        
        'Sublimits - aktuelle Werte k|fffd|nnen sich |fffd|ndern aufgrund der HBB Einstellung
        LadeDaten_Sublimits_AktuelleWerte
      
       'Spartenverf|fffd|gbarkeiten laden
        LadeDaten_Spartenverfuegbarkeit
        
        'Summenermittlung
        LadeDaten_Summenermittlung

        'Die aktuellen Werte der Sublimits m|fffd|ssen geladen sein, bevor die Erh|fffd|hung geladen wird.
        'Die Erh|fffd|hung darf nur einmalig beim Start geladen werden.
        If (F_HBB.DatatStatusInitial) Then
            'Eingegebene Werte nur einmalig Laden am Anfang
            LadeDaten_Sublimits_Erhoehung
        End If

        
        'eingegebene Werte f|fffd|r das aktuelle Offert
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_SonstigeSachenVS").value = Format(.Range("B18"), "Standard")
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GesamtVS").value = Format(.Range("B19"), "Standard")
        
       
    End With

    
End Sub



Private Sub LadeDaten_Sublimits_Erhoehung()

    With Me
        'Die Werte, die der Benutzer eingibt, nur einmalig beim Starten laden
        If (F_HBB.DatatStatusInitial) Then

        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung").value = Format(.Range("D23"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung").value = Format(.Range("D24"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung").value = Format(.Range("D25"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung").value = Format(.Range("D26"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung").value = Format(.Range("D27"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung").value = Format(.Range("D28"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung").value = Format(.Range("D29"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung").value = Format(.Range("D30"), "Standard")
        

        'Sturm neue Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung").value = Format(.Range("F20"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung").value = Format(.Range("F21"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung").value = Format(.Range("F22"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung").value = Format(.Range("F23"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung").value = Format(.Range("F24"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung").value = Format(.Range("F25"), "Standard")
        
        'Leitungswasser neue Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung").value = Format(.Range("H19"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung").value = Format(.Range("H20"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung").value = Format(.Range("H21"), "Standard")
        
        'Einbruchdiebstahl neue Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung").value = Format(.Range("J24"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung").value = Format(.Range("J25"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung").value = Format(.Range("J26"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung").value = Format(.Range("J27"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung").value = Format(.Range("J28"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung").value = Format(.Range("J32"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung").value = Format(.Range("J33"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung").value = Format(.Range("J30"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung").value = Format(.Range("J31"), "Standard")
        End If
    
    End With

End Sub


'Ausgliederung aufgrund der Menge
Private Sub LadeDaten_Sublimits_AktuelleWerte()

    With Me
        
        'Feuer aktuelle Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_AktuellerWert").value = Format(.Range("D15"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_AktuellerWert").value = Format(.Range("D16"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_AktuellerWert").value = Format(.Range("D17"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_AktuellerWert").value = Format(.Range("D18"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_AktuellerWert").value = Format(.Range("D19"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_AktuellerWert").value = Format(.Range("D20"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_AktuellerWert").value = Format(.Range("D21"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_AktuellerWert").value = Format(.Range("D22"), "Standard")

        
        'Sturm aktuelle Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_AktuellerWert").value = Format(.Range("F14"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_AktuellerWert").value = Format(.Range("F15"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_AktuellerWert").value = Format(.Range("F16"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_AktuellerWert").value = Format(.Range("F17"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_AktuellerWert").value = Format(.Range("F18"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_AktuellerWert").value = Format(.Range("F19"), "Standard")
        
        'Leitungswasser aktuelle Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_AktuellerWert").value = Format(.Range("H16"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_AktuellerWert").value = Format(.Range("H17"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_AktuellerWert").value = Format(.Range("H18"), "Standard")
        
        'Einbruchdiebstahl aktuelle Werte
        
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_AktuellerWert").value = Format(.Range("J17"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_AktuellerWert").value = Format(.Range("J18"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_AktuellerWert").value = Format(.Range("J19"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_AktuellerWert").value = Format(.Range("J20"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_AktuellerWert").value = Format(.Range("J21"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_AktuellerWert").value = Format(.Range("J22"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_AktuellerWert").value = Format(.Range("J23"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_AktuellerWert").value = Format(.Range("L22"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_AktuellerWert").value = Format(.Range("L23"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("CheckBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreienmitTeildiebstahl").value = .Range("J29")
        'Feuer neue Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_NeuerWert").value = Format(.Range("D15") + .Range("D23"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_NeuerWert").value = Format(.Range("D16") + .Range("D24"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_NeuerWert").value = Format(.Range("D17") + .Range("D25"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_NeuerWert").value = Format(.Range("D18") + .Range("D26"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_NeuerWert").value = Format(.Range("D19") + .Range("D27"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_NeuerWert").value = Format(.Range("D20") + .Range("D28"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_NeuerWert").value = Format(.Range("D21") + .Range("D29"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_NeuerWert").value = Format(.Range("D22") + .Range("D30"), "Standard")
        

        'Sturm neue Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_NeuerWert").value = Format(.Range("F14") + .Range("F20"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_NeuerWert").value = Format(.Range("F15") + .Range("F21"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_NeuerWert").value = Format(.Range("F16") + .Range("F22"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_NeuerWert").value = Format(.Range("F17") + .Range("F23"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_NeuerWert").value = Format(.Range("F18") + .Range("F24"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_NeuerWert").value = Format(.Range("F19") + .Range("F25"), "Standard")
        
        'Leitungswasser neue Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_NeuerWert").value = Format(.Range("H16") + .Range("H19"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_NeuerWert").value = Format(.Range("H17") + .Range("H20"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_NeuerWert").value = Format(.Range("H18") + .Range("H21"), "Standard")
        
        'Einbruchdiebstahl neue Werte
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_NeuerWert").value = Format(.Range("J17") + .Range("J24"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_NeuerWert").value = Format(.Range("J18") + .Range("J25"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_NeuerWert").value = Format(.Range("J19") + .Range("J26"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_NeuerWert").value = Format(.Range("J20") + .Range("J27"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_NeuerWert").value = Format(.Range("J21") + .Range("J28"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_NeuerWert").value = Format(.Range("J22") + .Range("J32"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_NeuerWert").value = Format(.Range("J23") + .Range("J33"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_NeuerWert").value = Format(.Range("L22") + .Range("J30"), "Standard")
        F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_NeuerWert").value = Format(.Range("L23") + .Range("J31"), "Standard")
    End With
    
End Sub


Private Sub LadeDaten_Vorteilsdeckungen()

    With Me
    
        'Feuer
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastro").value = .Range("D31")
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel").value = .Range("D32")
        
        'Sturm
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro").value = .Range("F26")
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel").value = .Range("F27")
        
        'Leitungswasser
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro").value = .Range("H22")
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel").value = .Range("H23")
        
        'Einbruchdiebstahl
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro").value = .Range("J34")
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel").value = .Range("J35")
        
        'Glasbruch
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro").value = .Range("L14")
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel").value = .Range("L15")

        'Alle VD H|fffd|kchen
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Handel").value = .Range("B26")
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungHandel").value = .Range("B26")
        F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro").value = .Range("B27")
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_VorteilsdeckungGastro").value = .Range("B27")
        
    End With

End Sub


Private Sub LadeDaten_Spartenverfuegbarkeit()
    With Me
        
        M_Global_Sparten.SpartenErlaubt.Sachsparten.Einbruchdiebstahl = .Range("J36")
        M_Global_Sparten.SpartenErlaubt.Sachsparten.Feuer = .Range("D36")
        M_Global_Sparten.SpartenErlaubt.Sachsparten.Glasbruch = .Range("L36")
        M_Global_Sparten.SpartenErlaubt.Sachsparten.Leitungswasser = .Range("H36")
        M_Global_Sparten.SpartenErlaubt.Sachsparten.Sturm = .Range("F36")

    End With
End Sub


Public Sub Lade_Allrisk()
    With Me
        
         F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value = .Range("N8")
         F_HBB.Controls("CommandButton_Spartenauswahl_Allriskbearbeiten").Visible = .Range("N8")
         F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version1").value = .Range("N9")
         F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version2").value = .Range("N11")
         F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version3").value = .Range("N13")
         F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").Visible = .Range("N13")
         F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").value = Format(.Range("N14"), "Standard")

    End With
End Sub

Public Sub LadeDaten_Summenermittlung()

    With Me
        F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value = .Range("B29")
        F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Summenermittlung").value = Format(.Range("B30"), "Standard")
    End With

End Sub

Public Sub SchreibeDaten()
    
    With Me
        'eingegeben Werte f|fffd|r aktuelles Offert
        .Range("B12") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_InhaltVS").value
        .Range("B13") = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_InhaltVS").value, "General Number")
        .Range("B15") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value
        .Range("B16") = Format(F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_GebaeudeVS").value, "General Number")
        .Range("B20") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusKomfort").value
        .Range("B28") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_HBBPlusExklusiv").value
        
        
        'Feuer
        .Range("D8") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Feuer").value
        If F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck").ListIndex >= 0 Then .Range("D10") = F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Feuer_Verwendungszweck").value
        
        'Sturm
        .Range("F8") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Sturm").value
        .Range("F9") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_WenigerAls4").value
        .Range("F10") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Sturm_AnzahlGeschosse_MehrAls4").value
        
        'Leitungswasser
        .Range("H8") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Leitungswasser").value
        .Range("H9") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerJa").value
        .Range("H10") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_WarenlagerNein").value
        .Range("H11") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungMit").value
        .Range("H12") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Leitungswasser_FremdenbeherbergungOhne").value
            
        'Einbruchdiebstahl
        .Range("J9") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl").value
        .Range("J11") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_GebaeudeUnbewohnt").value
        If F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").ListIndex >= 0 Then .Range("J12") = F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Vorschaeden").value

        .Range("J15") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Einbruchdiebstahl_Alarmanlage").value
            
        'Glasbruch
        .Range("L8") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Glasbruch").value
        .Range("L11") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Gebaeude").value
        .Range("L12") = F_HBB.Controls("OptionButton_Spartenauswahl_Sachversicherung_Glasbruch_BetriebGebaeude_Betrieb").value
        If F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").ListIndex >= 0 Then .Range("L13") = Format(F_HBB.Controls("ComboBox_Spartenauswahl_Sachversicherung_Glasbruch_Hoechstentschaedigung").value, "General Number")

        'Rabatte
        .Range("B21") = F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_SR").value / 100
        .Range("B22") = F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_VPC").value / 100
        .Range("B23") = F_HBB.Controls("TextBox_Spartenauswahl_Sachversicherung_Rabatte_GenehmigtDurch").value

        'Schreibe Sublimits
        SchreibeDaten_Sublimits
        
        'Schreibe Vorteilsdeckungen
        SchreibeDaten_Vorteilsdeckungen
        
        'Schreibe Allrisk
        SchreibeAllrisk
        
        'Schreibe Summenermittlung
        SchreibeDaten_Summenermittlung
        
        'VT-Lizenz
        .Range("B24") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_Sach").value / 100
    End With
    
End Sub

Private Sub SchreibeDaten_Sublimits()

    With Me
    
        'FeuerErh|fffd|hung
        .Range("D23") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Blitzschlag_Erhoehung").value, "General Number")
        .Range("D24") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Datentraeger_Erhoehung").value, "General Number")
        .Range("D25") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Bargeld_Erhoehung").value, "General Number")
        .Range("D26") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZ_Erhoehung").value, "General Number")
        .Range("D27") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Planungskosten_Erhoehung").value, "General Number")
        .Range("D28") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Aussenversicherung_Erhoehung").value, "General Number")
        .Range("D29") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_Warenautomat_Erhoehung").value, "General Number")
        .Range("D30") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Feuer_KFZEuropa_Erhoehung").value, "General Number")
        
                        
        'SturmErh|fffd|hung
        .Range("F20") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Datentraeger_Erhoehung").value, "General Number")
        .Range("F21") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Bargeld_Erhoehung").value, "General Number")
        .Range("F22") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_KFZ_Erhoehung").value, "General Number")
        .Range("F23") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Hagel_Erhoehung").value, "General Number")
        .Range("F24") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Dachlawinen_Erhoehung").value, "General Number")
        .Range("F25") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Sturm_Warenautomat_Erhoehung").value, "General Number")

                        
        'LeitungswasserErh|fffd|hung
        .Range("H19") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Datentraeger_Erhoehung").value, "General Number")
        .Range("H20") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Bargeld_Erhoehung").value, "General Number")
        .Range("H21") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Leitungswasser_Rohrbruch_Erhoehung").value, "General Number")
                        
        'EinbruchdiebstahlErhoehung
        .Range("J24") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeiten_Erhoehung").value, "General Number")
        .Range("J25") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Datentraeger_Erhoehung").value, "General Number")
        .Range("J26") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN0_Erhoehung").value, "General Number")
        .Range("J27") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BargeldEN1_Erhoehung").value, "General Number")
        .Range("J28") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Beraubung_Erhoehung").value, "General Number")
        .Range("J32") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_BotenBeraubung_Erhoehung").value, "General Number")
        .Range("J33") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreien_Erhoehung").value, "General Number")
        .Range("J29") = F_HBB.oF_HBB_Sach_Sublimits.Controls("CheckBox_SachversicherungSublimits_Einbruchdiebstahl_KFZVersicherungsraeumlichkeitenFreienmitTeildiebstahl").value
        .Range("J30") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Warenautomaten_Erhoehung").value, "General Number")
        .Range("J31") = Format(F_HBB.oF_HBB_Sach_Sublimits.Controls("TextBox_SachversicherungSublimits_Einbruchdiebstahl_Aussenversicherung_Erhoehung").value, "General Number")
    
    End With

End Sub

Public Sub SchreibeDaten_Allrisk()
    With Me
        .Range("N8") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Allrisk").value
        .Range("N9") = F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version1").value
        .Range("N11") = F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version2").value
        .Range("N13") = F_HBB.oF_HBB_Allrisk.Controls("OptionButton_Allrisk_Version3").value
        .Range("N14") = Format(F_HBB.oF_HBB_Allrisk.Controls("TextBox_Allrisk_VersicherungssummeVersion3").value, "General Number")
    End With
End Sub


Private Sub SchreibeDaten_Vorteilsdeckungen()
    
    With Me
        
        'Feuer
        .Range("D31") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Gastro").value
        .Range("D32") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Feuer_Handel").value

        'Sturm
        .Range("F26") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Gastro").value
        .Range("F27") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Sturm_Handel").value
        
        'Leitungswasser
        .Range("H22") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Gastro").value
        .Range("H23") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Leitungswasser_Handel").value
        
        'Einbruchdiebstahl
        .Range("J34") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Gastro").value
        .Range("J35") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Einbruchdiebstahl_Handel").value
        
        'Glasbruch
        .Range("L14") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Gastro").value
        .Range("L15") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Glasbruch_Handel").value

        'Alle VD H|fffd|kchen
        .Range("B26") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Handel").value
        .Range("B27") = F_HBB.oF_HBB_Sach_Vorteilsdeckungen.Controls("CheckBox_Sachversicherung_Vorteilsdeckungen_Gastro").value

    End With
End Sub

Public Sub SchreibeDaten_Summenermittlung()



    With Me
        .Range("B29") = F_HBB.Controls("CheckBox_Spartenauswahl_Sachversicherung_Summenermittlung").value
        
    End With

End Sub




'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("B12") = False
        .Range("B13") = 0
        .Range("B15") = False
        .Range("B16") = 0
        .Range("B21") = 0
        .Range("B22") = 0
        .Range("B23") = ""
        .Range("B28") = False

        .Range("B29") = False
        
        .Range("D8") = False
        .Range("D10") = 0
        .Range("D23") = 0
        .Range("D24") = 0
        .Range("D25") = 0
        .Range("D26") = 0
        .Range("D27") = 0
        .Range("D28") = 0
        .Range("D29") = 0
        .Range("D30") = 0
        .Range("D31") = False
        .Range("D32") = False
       
        .Range("F8") = False
        .Range("F9") = False
        .Range("F10") = False
        .Range("F20") = 0
        .Range("F21") = 0
        .Range("F22") = 0
        .Range("F23") = 0
        .Range("F24") = 0
        .Range("F25") = 0
        .Range("F26") = False
        .Range("F27") = False
        
        .Range("H8") = False
        .Range("H9") = False
        .Range("H10") = False
        .Range("H11") = False
        .Range("H12") = False
        .Range("H19") = 0
        .Range("H20") = 0
        .Range("H21") = 0
        .Range("H22") = False
        .Range("H23") = False
        
        .Range("J9") = False
        .Range("J11") = False
        .Range("J12") = "XX"
        .Range("J15") = False
        .Range("J24") = 0
        .Range("J25") = 0
        .Range("J26") = 0
        .Range("J27") = 0
        .Range("J28") = 0
        .Range("J29") = False
        .Range("J30") = 0
        .Range("J31") = 0
        .Range("J32") = 0
        .Range("J33") = 0
        .Range("J34") = False
        .Range("J35") = False
                
        .Range("L8") = False
        .Range("L11") = False
        .Range("L12") = False
        .Range("L13") = "bitte w|fffd|hlen!"
        .Range("L14") = False
        .Range("L15") = False
        
        .Range("N8") = False
        .Range("N9") = False
        .Range("N11") = False
        .Range("N13") = False
        .Range("N14") = 0
        

        
    End With
End Sub

Attribute VB_Name = "Sheet_Summenermittlung"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit




Public Sub Reset()

    Me.Range("A1").value = "Geb|fffd|ude 1"
    Me.Range("A10").value = "Geb|fffd|ude 2"
    Me.Range("A19").value = "Geb|fffd|ude 3"
    Me.Range("C2:C8").ClearContents
    Me.Range("B2:B8").value = "bitte w|fffd|hlen!"
    Me.Range("C11:C17").ClearContents
    Me.Range("B11:B17").value = "bitte w|fffd|hlen!"
    Me.Range("C20:C29").ClearContents
    Me.Range("B20:B29").value = "bitte w|fffd|hlen!"
    

End Sub


Public Sub SchreibeDaten()

    With Me
        .Range("A1") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude1").value
        .Range("A10") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude2").value
        .Range("A19") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude3").value
        
        
        .Range("B2") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_UG").value
        .Range("B3") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_EG").value
        .Range("B4") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG1").value
        .Range("B5") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG2").value
        .Range("B6") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG3").value
        
        .Range("C2") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_UGQM").value
        .Range("C3") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_EGQM").value
        .Range("C4") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG1QM").value
        .Range("C5") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG2QM").value
        .Range("C6") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG3QM").value
        
        .Range("B11") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_UG").value
        .Range("B12") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_EG").value
        .Range("B13") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG1").value
        .Range("B14") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG2").value
        .Range("B15") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG3").value
        
        .Range("C11") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_UGQM").value
        .Range("C12") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_EGQM").value
        .Range("C13") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG1QM").value
        .Range("C14") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG2QM").value
        .Range("C15") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG3QM").value
        
        .Range("B20") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_UG").value
        .Range("B21") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_EG").value
        .Range("B22") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG1").value
        .Range("B23") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG2").value
        .Range("B24") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG3").value
        
        .Range("C20") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_UGQM").value
        .Range("C21") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_EGQM").value
        .Range("C22") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG1QM").value
        .Range("C23") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG2QM").value
        .Range("C24") = F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG3QM").value
    
        

    End With


End Sub


Public Sub LadeDaten()
        With Me
        
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude1").value = .Range("A1")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude2").value = .Range("A10")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Gebaude3").value = .Range("A19")
        
        
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_UG").value = .Range("B2")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_EG").value = .Range("B3")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG1").value = .Range("B4")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG2").value = .Range("B5")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude1_OG3").value = .Range("B6")
        
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_UGQM").value = .Range("C2")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_EGQM").value = .Range("C3")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG1QM").value = .Range("C4")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG2QM").value = .Range("C5")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude1_OG3QM").value = .Range("C6")
        
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_UG").value = .Range("B11")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_EG").value = .Range("B12")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG1").value = .Range("B13")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG2").value = .Range("B14")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude2_OG3").value = .Range("B15")
        
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_UGQM").value = .Range("C11")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_EGQM").value = .Range("C12")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG1QM").value = .Range("C13")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG2QM").value = .Range("C14")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude2_OG3QM").value = .Range("C15")
        
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_UG").value = .Range("B20")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_EG").value = .Range("B21")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG1").value = .Range("B22")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG2").value = .Range("B23")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("ComboBox_Summenermittlung_Gebaude3_OG3").value = .Range("B24")
        
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_UGQM").value = .Range("C20")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_EGQM").value = .Range("C21")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG1QM").value = .Range("C22")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG2QM").value = .Range("C23")
         F_HBB.OF_HBB_Sach_Summenermittlung.Controls("TextBox_Summenermittlung_Geb|fffd|ude3_OG3QM").value = .Range("C24")
    
    
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_UGReferenz") = Format(.Range("D2"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_EGReferenz") = Format(.Range("D3"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_OG1Referenz") = Format(.Range("D4"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_OG2Referenz") = Format(.Range("D5"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_OG3Referenz") = Format(.Range("D6"), "Currency")
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_UGReferenz") = Format(.Range("D11"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_EGReferenz") = Format(.Range("D12"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_OG1Referenz") = Format(.Range("D13"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_OG2Referenz") = Format(.Range("D14"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_OG3Referenz") = Format(.Range("D15"), "Currency")
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_UGReferenz") = Format(.Range("D20"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_EGReferenz") = Format(.Range("D21"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_OG1Referenz") = Format(.Range("D22"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_OG2Referenz") = Format(.Range("D23"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_OG3Referenz") = Format(.Range("D24"), "Currency")
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_UGWert") = Format(.Range("E2"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_EGWert") = Format(.Range("E3"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_OG1Wert") = Format(.Range("E4"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_OG2Wert") = Format(.Range("E5"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude1_OG3Wert") = Format(.Range("E6"), "Currency")
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_UGWert") = Format(.Range("E11"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_EGWert") = Format(.Range("E12"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_OG1Wert") = Format(.Range("E13"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_OG2Wert") = Format(.Range("E14"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude2_OG3Wert") = Format(.Range("E15"), "Currency")
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_UGWert") = Format(.Range("E20"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_EGWert") = Format(.Range("E21"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_OG1Wert") = Format(.Range("E22"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_OG2Wert") = Format(.Range("E23"), "Currency")
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_Geb|fffd|ude3_OG3Wert") = Format(.Range("E24"), "Currency")
        
        F_HBB.OF_HBB_Sach_Summenermittlung.Controls("Label_Summenermittlung_GesamtsummeZahl") = Format(.Range("G2"), "Currency")
    End With




End Sub
Attribute VB_Name = "Sheet_Technik"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


'Alle Methoden, die zum Laden oder Speichern von Daten auf/vom Tabellenblatt Technik ben|fffd|tigt werdne

Public Sub LadeDaten()
    With Me
        
        'Einzugebende Felder d|fffd|rfen nur beim ersten Mal neu geladen werden, sonst st|fffd|rt das die Eingabe
        If (F_HBB.DatatStatusInitial) Then

            F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS").value = Format(.Range("B14"), "Standard")
            F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBPlus").value = .Range("B16")
            F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBExklusiv").value = .Range("B26")
            F_HBB.Controls("CheckBox_Spartenauswahl_Technik_RabatteWieSach").value = .Range("B17")
            
            F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value = .Range("B18") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value = .Range("B19") * 100
            F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_GenehmigtDurch").value = .Range("B20")
            
            'Betrieb
            F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Betrieb").value = .Range("D8")
            F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante").value = Format(.Range("D10"), "Standard")
        
            'B|fffd|ro
            F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Buero").value = .Range("F8")
            F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante").value = Format(.Range("F9"), "Standard")
        
            'VT Lizenz
            F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik").value = .Range("B21") * 100
        End If
            
        'Sach InhaltsVS jedes Mal neu laden
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVSSach").value = Format(.Range("B13"), "Standard")
        'Sach Rabatte jedes Mal neu Laden, k|fffd|nnten sich |fffd|ndern
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SRSach").value = .Range("B22") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPCSach").value = .Range("B23") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_GenehmigtDurchSach").value = .Range("B24")
    End With
End Sub



Public Sub SchreibeDaten()
    If F_HBB.DatatStatusSave Then
        With Me
                
            .Range("B14") = Format(F_HBB.Controls("TextBox_Spartenauswahl_Technik_InhaltVS").value, "General Number")
            
            .Range("B16") = F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBPlus").value
            .Range("B17") = F_HBB.Controls("CheckBox_Spartenauswahl_Technik_RabatteWieSach").value
            .Range("B26") = F_HBB.Controls("CheckBox_Spartenauswahl_Technik_HBBExklusiv").value
            .Range("B18") = F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_SR").value / 100
            .Range("B19") = F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_VPC").value / 100
            .Range("B20") = F_HBB.Controls("TextBox_Spartenauswahl_Technik_Rabatte_GenehmigtDurch").value
            
            
            'Betrieb
            .Range("D8") = F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Betrieb").value
            If F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante").ListIndex >= 0 Then .Range("D10") = Format(F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Betrieb_SBVariante").value, "General Number")
            'B|fffd|ro
            .Range("F8") = F_HBB.Controls("OptionButton_Spartenauswahl_Technik_Buero").value
            If F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante").ListIndex >= 0 Then .Range("F9") = Format(F_HBB.Controls("ComboBox_Spartenauswahl_Technik_Buero_SBVariante").value, "General Number")
            
            'VT Lizenz
            .Range("B21") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_Technik").value / 100
        End With
    Else
        MsgBox "Ung|fffd|ltiger Aufruf von M_Sheet_Technik.SchreibeDaten", vbCritical, "Fehler"
    End If
End Sub



'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("B14") = 0
        .Range("B16") = False
        .Range("B17") = False
        .Range("B18") = 0
        .Range("B19") = 0
        .Range("B20") = ""
        .Range("B21") = 0
        .Range("B26") = False
        
        .Range("D8") = False
        .Range("D10") = 400
        
        .Range("F8") = False
        .Range("F9") = 0
    End With
End Sub
Attribute VB_Name = "Sheet_Transport"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Public Sub LadeDaten()
    With Me
        F_HBB.Controls("ComboBox_Spartenauswahl_Transport_Versicherungssumme").value = Format(.Range("D8"), "Standard")
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge").value = .Range("D9")
        F_HBB.Controls("CheckBox_Spartenauswahl_Transport_Nachtdeckung").value = .Range("D10")
        
        F_HBB.Controls("CheckBox_Spartenauswahl_Transport_RabatteWieSach").value = .Range("B12")
        'Lade Rabatte
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value = .Range("B13") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value = .Range("B14") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_Genehmigt").value = .Range("B15")
        
        
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SRSach").value = .Range("B17") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPCSach").value = .Range("B18") * 100
        F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_GenehmigtDurchSach").value = .Range("B19")
        F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport").value = .Range("B16") * 100

    End With
End Sub

Public Sub SchreibeDaten()
    With Me
        .Range("D8") = Format(F_HBB.Controls("ComboBox_Spartenauswahl_Transport_Versicherungssumme").value, "General Number")
        .Range("D9") = F_HBB.Controls("TextBox_Spartenauswahl_Transport_AnzahlFahrzeuge").value
        .Range("D10") = F_HBB.Controls("CheckBox_Spartenauswahl_Transport_Nachtdeckung").value
        .Range("B12") = F_HBB.Controls("CheckBox_Spartenauswahl_Transport_RabatteWieSach").value

        'Schreibe Rabatte
        .Range("B13") = F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_SR").value / 100
        .Range("B14") = F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_VPC").value / 100
        .Range("B15") = F_HBB.Controls("TextBox_Spartenauswahl_Transport_Rabatte_Genehmigt").value
        .Range("B16") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_Transport").value / 100
    
    End With
End Sub


Public Sub Reset()
    With Me
        .Range("D8") = Format(.Range("G29"), "Standard")
        .Range("D9") = 0
        .Range("D10") = False
        
        .Range("B12") = False
        .Range("B13") = 0
        .Range("B14") = 0
        .Range("B15") = ""
        .Range("B16") = 0
        
    End With
End Sub
Attribute VB_Name = "Sheet_Uebersicht"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


'Alle Methoden, die zum Laden oder Speichern von Daten auf/vom Tabellenblatt |fffd|bersicht ben|fffd|tigt werdne


Public Sub LadeDaten()
    
    With Me
    'With ThisWorkbook.Sheets(M_Global.global_Tabellenblatt_Uebersicht)
        
        'Nur beim ersten |fffd|ffnen laden
        If (F_HBB.DatatStatusInitial) Then
            'Suchbegriff nicht laden, da sonst bei einer nicht zeichenbaren Sparte die Berechnung abbricht
            'F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").value = .Range("B10")

            M_HBB_Uebersicht.TextBox_Uebersicht_Betriebsart_Suchbegriff_Change (F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").value)

            'Wenn ein Suchstring angegeben wurde und keine g|fffd|ltige Betriebart w|fffd|hlbar ist, dann laden abbrechen
            If F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").value <> "" And Not F_HBB.BAGueltig Then Exit Sub

            'Wenn kein Suchstring angegeben wurde, versuchen die Betriebsart zu laden
            F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis").value = .Range("B7")
            
            'Wenn noch immer eine ung|fffd|ltige BA Gew|fffd|hlt wurde ("Bitte w|fffd|hlen!") dann abbrechen
            If Not F_HBB.BAGueltig Then Exit Sub
            
            
            F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Branche").value = .Range("B9")
            F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Freitext").value = .Range("B12")
            F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value = .Range("D8")
            F_HBB.Controls("CheckBox_Uebersicht_Technik").value = .Range("D9")
            F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value = .Range("D10")
            F_HBB.Controls("CheckBox_Uebersicht_Transport").value = .Range("D11")
            F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value = .Range("D12")
            F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value = .Range("D13")
            F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value = .Range("D14")
            F_HBB.Controls("CheckBox_Uebersicht_GMRS").value = .Range("D15")
            F_HBB.Controls("CheckBox_Uebersicht_Cyber").value = .Range("D17")

            'VT-Lizenz
            F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Zusatztext").value = .Range("B13")
            F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung").value = Format(.Range("B14"), "General Number")
            F_HBB.Controls("TextBox_SuperUser_GDRabatt_GenehmigtDurch").value = .Range("B15")
            
        End If
        
        'Jedes Mal neue Pr|fffd|mienwerte laden
        
        F_HBB.Controls("Label_Anfragepflicht").Visible = .Range("B11")
        
        F_HBB.Controls("TextBox_Uebersicht_Sachversicherung").value = Format(.Range("E8"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_Technik").value = Format(.Range("E9"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_Betriebsunterbrechung").value = Format(.Range("E10"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_Transport").value = Format(.Range("E11"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_Rechtsschutz").value = Format(.Range("E12"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_Haftpflcht").value = Format(.Range("E13"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_KFZRechtsschutz").value = Format(.Range("E14"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_GMRS").value = Format(.Range("E15"), "Standard")
        F_HBB.Controls("TextBox_Uebersicht_Cyber").value = Format(.Range("E17"), "Standard")
        
        F_HBB.Controls("TextBox_Uebersicht_Gesamtpraemie").value = Format(.Range("E18"), "Standard")
        
        M_Global_Sparten.Rechenbar.Sach = .Range("F8")
        M_Global_Sparten.Rechenbar.Technik = .Range("F9")
        M_Global_Sparten.Rechenbar.Betriebsunterbrechung = .Range("F10")
        M_Global_Sparten.Rechenbar.Transport = .Range("F11")
        M_Global_Sparten.Rechenbar.Rechtsschutz = .Range("F12")
        M_Global_Sparten.Rechenbar.Haftpflicht = .Range("F13")
        M_Global_Sparten.Rechenbar.KFZRechtsschutz = .Range("F14")
        M_Global_Sparten.Rechenbar.GMRS = .Range("F15")
        M_Global_Sparten.Rechenbar.Cyber.Cyber = .Range("F17")
        
        M_Global_Sparten.SpartenErlaubt.Sach = .Range("G8")
        M_Global_Sparten.SpartenErlaubt.Technik = .Range("G9")
        M_Global_Sparten.SpartenErlaubt.Betriebsunterbrechung = .Range("G10")
        M_Global_Sparten.SpartenErlaubt.Transport = .Range("G11")
        M_Global_Sparten.SpartenErlaubt.Rechtsschutz = .Range("G12")
        M_Global_Sparten.SpartenErlaubt.Haftpflicht = .Range("G13")
        M_Global_Sparten.SpartenErlaubt.KFZRechtsschutz = .Range("G14")
        M_Global_Sparten.SpartenErlaubt.GMRS = .Range("G15")
        M_Global_Sparten.SpartenErlaubt.Cyber.Cyber = .Range("G17")
        
    End With

End Sub





Public Sub SchreibeDaten()
    
    With Me
        .Range("B7") = F_HBB.Controls("ComboBox_Uebersicht_Betriebsart_Ergebnis").value
        .Range("B10") = F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Suchbegriff").value
        .Range("B12") = F_HBB.Controls("TextBox_Uebersicht_Betriebsart_Freitext").value
        
        'VT-Lizenz
        .Range("B13") = F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Zusatztext").value
        .Range("B14") = Format(F_HBB.Controls("TextBox_SuperUser_Gesamtpraemie_Praemienanpassung").value, "General Number")
        .Range("B15") = F_HBB.Controls("TextBox_SuperUser_GDRabatt_GenehmigtDurch").value
        
        .Range("D8") = F_HBB.Controls("CheckBox_Uebersicht_Sachversicherung").value
        .Range("D9") = F_HBB.Controls("CheckBox_Uebersicht_Technik").value
        .Range("D10") = F_HBB.Controls("CheckBox_Uebersicht_Betriebsunterbrechnung").value
        .Range("D11") = F_HBB.Controls("CheckBox_Uebersicht_Transport").value
        .Range("D12") = F_HBB.Controls("CheckBox_Uebersicht_Rechtsschutz").value
        .Range("D13") = F_HBB.Controls("CheckBox_Uebersicht_Haftpflicht").value
        .Range("D14") = F_HBB.Controls("CheckBox_Uebersicht_KFZRechtsschutz").value
        .Range("D15") = F_HBB.Controls("CheckBox_Uebersicht_GMRS").value
        .Range("D17") = F_HBB.Controls("CheckBox_Uebersicht_Cyber").value

    End With
    
End Sub



'Setzt die Werte im Tabellenblatt zur|fffd|ck
Public Sub Reset()
    With Me
        .Range("B7") = 0
        .Range("B10") = ""
        .Range("B13") = ""
        .Range("B14") = 0
        .Range("B15") = ""
        
        .Range("D8") = False
        .Range("D9") = False
        .Range("D10") = False
        .Range("D11") = False
        .Range("D12") = False
        .Range("D13") = False
        .Range("D14") = False
        .Range("D15") = False
        .Range("D17") = False
    End With
End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'In diesem Recordset werden einmalig beim Start alle Betriebsarten geladen (keine weiteren Lese/Schreibzugriffe mehr w|fffd|hrend das Programm l|fffd|uft)
Public BArst As ADODB.Recordset

'----------------------
'Global Variablen
'---------------------

Public Lizenz As LizenzType

Public Version As Integer

Public Enum VersionType
    'Anzeigeelemente bleiben unver|fffd|ndert
    Developer = 1
    'Anzeigelemente werden ausgeblendet, User kann keine Einstellungen ver|fffd|ndern
    Release = 2
End Enum

'Handelt es sich um die Vorlage oder um ein bereits gerechnetes Offert?
Public Vorlage As Boolean


'Private MyForm As F_HBB

'Speichert den Offertnamen. Bei |fffd|nderungen erscheint ein Hinweis, dass mit dem "NEU" Button gearbeitet werden muss.
Public OffertName As String


'----------------------
'Workbook Eventhandler
'---------------------

Private Sub Workbook_Open()
    'F|fffd|r Entwicklungszwecke, ausblenden von Steuerungselementen (Ribbon-Leiste) unterbinden
    'ThisWorkbook.Version = VersionType.Developer
    ThisWorkbook.Version = VersionType.Release
    
    'Lizenzmanagement
    ThisWorkbook.Lizenz = Sheet_Lizenz.GetLizenzType
    
    
    'Lizenzablauf
    If (Sheet_Lizenz.CheckLizenzAblauf) Then
        MsgBox "ACHTUNG! Diese Lizenz ist ABGELAUFEN. Bitte laden Sie eine aktuelle Version.", vbCritical
    End If
    
    WB_Aktivieren
    
    Application.ScreenUpdating = False
    
    
    'wenn es sich um die Vorlagen-Datei handelt, dann alles zur|fffd|ck setzen
    If Sheet_AllgemeineDaten.IsVorlage Then
        WB_Reset
    End If
    
    'L|fffd|dt Betriebsarten in den Speicher
    LadeBetriebsarten
    
    M_Global_Form.Initialize
    Call F_HBB.Show(vbModeless)

End Sub


Private Sub Workbook_BeforeClose(Cancel As Boolean)
    WB_Deaktivieren
    ThisWorkbook.Saved = True
End Sub


Private Sub Workbook_Activate()
    'WB_Aktivieren
End Sub

Private Sub Workbook_Deactivate()
    'WB_Deaktivieren
End Sub


'Excel Bug: bei der Seitenansicht kommt manchmal die Sanduhr - diese geht erst bei einem Klick wieder weg, es wird gar nichts geladen.
'ein versuch, das PRoblem zu beheben.
Private Sub Workbook_BeforePrint(Cancel As Boolean)
    'Cursor auf Standardmodus setzen
    Application.Cursor = xlDefault
End Sub


'----------------------
'Workbook Hilfsfunktionen
'---------------------

Private Sub WB_Aktivieren()
    If ThisWorkbook.Version = VersionType.Release Then
        Application.ScreenUpdating = False
        Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",False)"
        Application.DisplayFormulaBar = False
        Application.DisplayStatusBar = False
        ActiveWindow.DisplayWorkbookTabs = False
    End If
End Sub


Private Sub WB_Deaktivieren()
    If ThisWorkbook.Version = VersionType.Release Then
        Application.ScreenUpdating = True
        Application.ExecuteExcel4Macro "SHOW.TOOLBAR(""Ribbon"",True)"
        Application.DisplayStatusBar = True
        ActiveWindow.DisplayWorkbookTabs = True
        Application.DisplayFormulaBar = True
    End If
End Sub


'Setzt den Rechenr zur|fffd|ck. Wird jedes Mal ausgef|fffd|hrt, wenn die Vorlage gestartet wird, um einen konsistenten, jungfr|fffd|ulichen Stand zu erhalten.
Private Sub WB_Reset()
    Sheet_Uebersicht.Reset
    Sheet_AllgemeineDaten.Reset
    Sheet_BU.Reset
    Sheet_Transport.Reset
    Sheet_Haftpflicht.Reset
    Sheet_KFZRechtsschutz.Reset
    Sheet_Rechtsschutz.Reset
    Sheet_Sachversicherung.Reset
    Sheet_GMRS.Reset
    Sheet_Technik.Reset
    Sheet_Cyber.Reset
    Sheet_Summenermittlung.Reset
End Sub

'BA-Liste im Speicher

'L|fffd|dt alle Betriebsarten in den Speicher f|fffd|r schnelles Filtern
Private Sub LadeBetriebsarten()
    Dim rst As New ADODB.Recordset
    Dim cnx As New ADODB.Connection
    Dim cmd As New ADODB.Command
    
        'setup the connection
        '[HDR=Yes] means the Field names are in the first row
        With cnx
            #If Win64 Then
                .Provider = "Microsoft.ACE.OLEDB.12.0"
            #Else
                .Provider = "Microsoft.Jet.OLEDB.4.0"
            #End If
            .ConnectionString = "Data Source='" & ThisWorkbook.FullName & "'; " & "Extended Properties='Excel 8.0;HDR=Yes;IMEX=1'"
            .Open
        End With
    
        'setup the command
        Set cmd.ActiveConnection = cnx
        cmd.CommandType = adCmdText
        cmd.CommandText = "SELECT [BANr],[BA],[Gruppe],[Zeichenbar],[ED Sicherheitstechnik] FROM [" & global_Tabellenblatt_Betriebsart & "$] WHERE BA IS NOT NULL ORDER BY BA"
        'cmd.CommandText = "SELECT * FROM [" & global_Tabellenblatt_Betriebsart & "$] ORDER BY BA"
        rst.CursorLocation = adUseClient
        rst.CursorType = adOpenDynamic
        rst.LockType = adLockOptimistic
    
        'open the connection
        rst.Open cmd
    
        'disconnect the recordset
        Set rst.ActiveConnection = Nothing
    
        'cleanup
        If CBool(cmd.State And adStateOpen) = True Then
            Set cmd = Nothing
        End If
    
        If CBool(cnx.State And adStateOpen) = True Then cnx.Close
        Set cnx = Nothing
        
        Set ThisWorkbook.BArst = rst
End Sub





' InQuest injected base64 decoded content
' q/z{Gjwez
' (VAz
' (VUz
' z'!M
' x(^r@h
' q/z{Gjwez
' q/z{ajwez
' V+"nW
' z+^2+E
' z+^:

INQUEST-PP=macro
