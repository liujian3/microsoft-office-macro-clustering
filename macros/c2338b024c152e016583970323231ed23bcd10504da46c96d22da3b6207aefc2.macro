Attribute VB_Name = "Foglio2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Module1"
Sub Macro1()
Dim straddress As String

Application.ScreenUpdating = False
Range("F22").Select
    ActiveSheet.Paste
    straddress = Sheets("RESULTADO").Range("F22").value
    Sheets("Dados2").Select
    Sheets("Dados2").Range("A1:AQ30000").Clear
            With ActiveSheet.QueryTables.Add(Connection:= _
            "URL;" & straddress _
            , Destination:=Range("A1"))
            .FieldNames = True
            .RowNumbers = False
            .FillAdjacentFormulas = False
            .PreserveFormatting = True
            .RefreshOnFileOpen = False
            .BackgroundQuery = True
            .RefreshStyle = xlInsertDeleteCells
            .SavePassword = False
            .SaveData = True
            .AdjustColumnWidth = True
            .RefreshPeriod = 0
            '.WebSelectionType = xlAllTables
            .WebSelectionType = xlSpecifiedTables
            .WebTables = "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,,45,46,47"
            .WebFormatting = xlWebFormattingNone
            .WebPreFormattedTextToColumns = True
            .WebConsecutiveDelimitersAsOne = True
            .WebSingleBlockTextImport = False
            .WebDisableDateRecognition = True
            .WebDisableRedirections = False
            .Refresh BackgroundQuery:=False
           End With
           
Dim LR  As Long, I  As Long, cls
cls = Array("A2", "A8", "I32", "J32", "K32", "I35", "J35", "K35", "C16", "C18", "D34", "T38", "T41", "T4", "U4", "V4", "T5", "U5", "V5", "t12", "u12", "v12", "t16", "u16", "v16", "u10")
With Sheets("NaoApagar")
    LR = WorksheetFunction.Max(4, .Range("A" & Rows.Count).End(xlUp).Row + 1)
    For I = LBound(cls) To UBound(cls)
        .Cells(LR, I + 1).value = Sheets("Geral").Range(cls(I)).value
    Next I
End With

Application.ScreenUpdating = True

Sheets("RESULTADO").Activate

Sheets("RESULTADO").Range("B2").Select

End Sub



Sub stergere()
ActiveSheet.Range("A4:Z396").ClearContents
ActiveSheet.Range("AB4:AB396").ClearContents
End Sub



' 05/13/2004 by Alan Ryder
' Calculates Competing Poisson Probability of a Win
' U = Intensity of Goals For [Average Goals For per Game (>=0)]
' V = Intensity of Goals Against [Average Goals Against per Game (>=0)]
' Time = Elapsed Percentage of Game (0<=T<=1)
' Lead = Goal Differential at Time of Calculation
' ET = Scoring Rate (% of U and V) for trailing team in "Endgame"
' EL = Scoring Rate (% of U and V) for leading team in "Endgame"
' OT = Percentage Extra Scoring Rate (% of U and V) in Overtime
' OTType = Overtime Type
' [0] = None
' [1] = Sudden Death (Playoff)
' [2] = 5 Minute (Regular Season)
' Calc = Calculation to perform
' [-1] = Pr(Loss)
' [0] = Pr(Tie)
' [1] = Pr(Win)
' [2] = Expected Points
' [3] = Win Equivalent (W + T/2)
'
Function PrWin(U As Double, V As Double, Time As Double, Lead As Integer, ET As Double, EL As Double, OT As Double, OTType As Integer, Calc As Integer) As Double
Dim PDF As Double, PDA As Double, CPA As Double, OTW As Double
Dim PrTie As Double, PrLossBy1 As Double, PrWinBy1 As Double
Dim A As Double, B As Double
Dim I As Integer, C As Integer
' Set U, V at rate for remainder of game
U = (1 - Time) * Application.WorksheetFunction.Max(U, 0.00001)
V = (1 - Time) * Application.WorksheetFunction.Max(V, 0.00001)
' If Trailing, Switch U, V
If Lead < 0 Then
A = U
U = V
V = A
End If
' Set Initial Values
C = Abs(Lead)
PrWin = 0
PrTie = 0
PrWinBy1 = 0
PrLossBy1 = 0
PDF = 0
PDA = 0
If C > 0 Then
CPA = Application.WorksheetFunction.Poisson(C - 1, V, vbTrue)
Else
CPA = 0
End If
I = 0
' Calculate Basic Probabilities
While I < 30
A = PDA
PDA = Application.WorksheetFunction.Poisson(I + C, V, vbFalse)
PrLossBy1 = PrLossBy1 + PDF * PDA
PDF = Application.WorksheetFunction.Poisson(I, U, vbFalse)
PrWinBy1 = PrWinBy1 + PDF * A
PrTie = PrTie + PDF * PDA
PrWin = PrWin + PDF * CPA
CPA = CPA + PDA
I = I + 1
Wend
' Restore Full Game Intensities
U = U / (1 - Time)
V = V / (1 - Time)
' Endgame Goals: Some Losses Become Ties, Some Wins Become Ties
If ET > 0 Then
A = PrWinBy1 * (1 - Exp(-U * EL - V * ET)) * V * ET / (U * EL + V * ET)
B = PrLossBy1 * (1 - Exp(-U * ET - V * EL)) * U * ET / (U * ET + V * EL)
PrWin = PrWin - A
PrTie = PrTie + A + B
End If
' If Trailing calculations were reversed
If Lead < 0 Then PrWin = 1 - PrWin - PrTie
' Adjust for Overtime
If OTType = 2 Then
A = (1 - Exp(-(U + V) * (1 + OT) / 12))
Else
A = OTType
End If
OTW = U / (U + V)
B = PrTie * A
PrWin = PrWin + B * OTW
PrTie = PrTie - B
If OTType = 1 Then B = 0
' Pr(Loss)
If Calc = -1 Then PrWin = 1 - PrWin - PrTie
' Pr(Tie)
If Calc = 0 Then PrWin = PrTie
' Expected Points
If Calc = 2 Then PrWin = 2 * PrWin + PrTie + B * (1 - OTW)
' Pr(Win Equivalent)
If Calc = 3 Then PrWin = PrWin + 0.5 * PrTie
End Function
Attribute VB_Name = "Module2"
Sub Update()
Dim LR  As Long, I  As Long, cls
cls = Array("a5", "a9", "m4", "n4", "o4", "m5", "n5", "p4", "q4", "r4", "p5", "q5", "b22", "d22", "e22", "j22", "j24", "n22", "n24")
With Sheets("PropuneriTotal")
    LR = WorksheetFunction.Max(3, .Range("A" & Rows.Count).End(xlUp).Row + 2)
    For I = LBound(cls) To UBound(cls)
        .Cells(LR, I + 1).value = Sheets("games").Range(cls(I)).value
    Next I
End With
End Sub
Attribute VB_Name = "Module3"
Sub Sorgu_Sil()

Dim RESULTADOs As Name
For Each RESULTADOs In Names
ActiveWorkbook.Names(RESULTADO.Names).Delete
Next RESULTADOs



End Sub
Sub Sorgulari_Sil()
Attribute Sorgulari_Sil.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Sorgulari_Sil Makro
'

'
    ActiveWorkbook.Names("D|fffd||fffd|Veri_7").Delete
    ActiveCell.Range("A1:N2").Select
End Sub
Sub LISTEKAYDET()
Attribute LISTEKAYDET.VB_ProcData.VB_Invoke_Func = " \n14"
'
' LISTEKAYDET Makro
'

'
    Range("B25:P25").Select
    Selection.Copy
    Application.Goto Reference:="R5000C2"
    Selection.End(xlUp).Select
    ActiveCell.Offset(1, 0).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    ActiveCell.Range("A1:D1").Select
    Application.CutCopyMode = False
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    ActiveCell.Offset(-25, 0).Range("A1:N2").Select
End Sub
Attribute VB_Name = "Module4"
Sub BultenCek()
'Sheets("VBulten").Visible = xlSheetVisible
  Sheets("VBulten").Select
    'ActiveSheet.Unprotect "NOWPRO2018"
        Columns("A:L").Select
        Selection.Clear
        Range("A1").Select
    With ActiveSheet.QueryTables.Add(Connection:= _
        "URL;http://data.nowgoal.id/1x2/", _
        Destination:=Range("$A$1"))
        .Name = "index"
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = False
        .RefreshOnFileOpen = False
        .BackgroundQuery = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = False
        .RefreshPeriod = 0
        .WebSelectionType = xlAllTables
        .WebFormatting = xlWebFormattingAll
        .WebPreFormattedTextToColumns = True
        .WebConsecutiveDelimitersAsOne = True
        .WebSingleBlockTextImport = False
        .WebDisableDateRecognition = True
        .WebDisableRedirections = False
        .Refresh BackgroundQuery:=False
    End With
  Range("A1").Select
    'ActiveSheet.Protect "NOWPRO2018"
    'Sheets("VBulten").Visible = xlSheetVeryHidden
 Sheets("RESULTADO").Select
 Range("A2").Select
    MsgBox "B|fffd|LTEN G|fffd|NCELLEND|fffd|!", vbInformation, "NOWGOAL *VIP* AUTO 2019"
End Sub
Sub Analiz_Yap()
Sheets("VBulten").Select
Dim straddress As String

Application.ScreenUpdating = False

    straddress = Sheets("VBulten").Range("AE4").value
    
    Sheets("Dados2").Select
    Sheets("Dados2").Range("A1:AQ30000").Clear
            With ActiveSheet.QueryTables.Add(Connection:= _
            "URL;" & straddress _
            , Destination:=Range("A1"))
            .FieldNames = True
            .RowNumbers = False
            .FillAdjacentFormulas = False
            .PreserveFormatting = True
            .RefreshOnFileOpen = False
            .BackgroundQuery = True
            .RefreshStyle = xlInsertDeleteCells
            .SavePassword = False
            .SaveData = True
            .AdjustColumnWidth = True
            .RefreshPeriod = 0
            '.WebSelectionType = xlAllTables
            .WebSelectionType = xlSpecifiedTables
            .WebTables = "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,,45,46,47"
            .WebFormatting = xlWebFormattingNone
            .WebPreFormattedTextToColumns = True
            .WebConsecutiveDelimitersAsOne = True
            .WebSingleBlockTextImport = False
            .WebDisableDateRecognition = True
            .WebDisableRedirections = False
            .Refresh BackgroundQuery:=False
           End With
           
Dim LR  As Long, I  As Long, cls
cls = Array("A2", "A8", "I32", "J32", "K32", "I35", "J35", "K35", "C16", "C18", "D34", "T38", "T41", "T4", "U4", "V4", "T5", "U5", "V5", "t12", "u12", "v12", "t16", "u16", "v16", "u10")
With Sheets("NaoApagar")
    LR = WorksheetFunction.Max(4, .Range("A" & Rows.Count).End(xlUp).Row + 1)
    For I = LBound(cls) To UBound(cls)
        .Cells(LR, I + 1).value = Sheets("Geral").Range(cls(I)).value
    Next I
End With

Application.ScreenUpdating = True

Sheets("RESULTADO").Activate
Sheets("RESULTADO").Select
Range("B25:P25").Select
    Selection.Copy
    Application.Goto Reference:="R5000C2"
    Selection.End(xlUp).Select
    ActiveCell.Offset(1, 0).Range("A1").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    ActiveCell.Range("A1:D1").Select
    Application.CutCopyMode = False
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

Sheets("RESULTADO").Range("G4").Select

End Sub

Attribute VB_Name = "Module5"
Function HLink(rng As Range) As String
  If rng(1).Hyperlinks.Count Then
      HLink = rng.Hyperlinks(1).Address
  End If
End Function
Attribute VB_Name = "M|fffd|dulo1"

Attribute VB_Name = "M|fffd|dulo10"
Sub manual()
Attribute manual.VB_ProcData.VB_Invoke_Func = " \n14"
'
' manual Macro

    With Worksheets("Dados")
        .Activate
        .Range("A4").Select
    End With
'

'
End Sub
Attribute VB_Name = "M|fffd|dulo2"
Attribute VB_Name = "M|fffd|dulo3"
Sub Colarlink()
Attribute Colarlink.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Colarlink Macro
'

'
    Range("F22").Select
    ActiveSheet.Paste
End Sub
Attribute VB_Name = "M|fffd|dulo4"
Sub Zoom100()
Attribute Zoom100.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Zoom100 Macro
'

'
    ActiveWindow.Zoom = 93
End Sub
Sub Zoom85()
Attribute Zoom85.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Zoom85 Macro
'

'
    ActiveWindow.Zoom = 86
    ActiveWindow.ScrollColumn = 1
End Sub
Attribute VB_Name = "M|fffd|dulo5"
Sub RESULTADO()
Attribute RESULTADO.VB_ProcData.VB_Invoke_Func = " \n14"
'
' RESULTADO Macro
'

'
    Sheets("NaoApagar").Select
    Range("A2").Select
    ActiveWindow.ScrollColumn = 2
    ActiveWindow.ScrollColumn = 3
    ActiveWindow.ScrollColumn = 4
    ActiveWindow.ScrollColumn = 5
    ActiveWindow.ScrollColumn = 6
    ActiveWindow.ScrollColumn = 7
    Range("A2:AA9").Select
    Selection.ClearContents
    Range("A1").Select
    Sheets("RESULTADO").Select
End Sub
Attribute VB_Name = "M|fffd|dulo6"
Attribute VB_Name = "M|fffd|dulo7"
'OCULTA OS BOT|fffd|ES MINIMIZAR / MAXIMIZAR E FECHAR DA BARRA DO EXCEL

'Sem as declara|fffd||fffd|es abaixo as macros para retirar e repor os bot|fffd|es n|fffd|o funcionar|fffd|
Declare PtrSafe Function FindWindow32 Lib "user32" Alias "FindWindowA" _
        (ByVal lpClassName As Any, ByVal lpWindowName As Any) As Integer
        
Declare PtrSafe Function GetWindowLong32 Lib "user32" Alias "GetWindowLongA" _
        (ByVal hWnd As Integer, ByVal nIndex As Integer) As Long
        
Declare PtrSafe Function SetWindowLong32 Lib "user32" Alias "SetWindowLongA" _
        (ByVal hWnd As Integer, ByVal nIndex As Integer, ByVal dwNewLong As Long) As Long
        
Global Const GWL_STYLE = (-16)
Global Const WS_SYSMENU = &H80000
 


Sub RepoeXdaBarra()

    Application.ScreenUpdating = True
    Dim WindowStyle As Long
    Dim hWnd As Integer
    Dim WindowName As String
    Dim Result As Variant

    WindowName = Application.Caption
    hWnd = FindWindow32(0&, ByVal WindowName)
    WindowStyle = GetWindowLong32(hWnd, GWL_STYLE)
    WindowStyle = WindowStyle Or WS_SYSMENU
    Result = SetWindowLong32(hWnd, GWL_STYLE, WindowStyle)
    
    'For|fffd|a a barra de t|fffd|tulos a se atualizar, Retornando os Bot|fffd|es
    Application.Caption = " An|fffd|lise "
    'ActiveWindow.Caption = " Gest|fffd|o MCS "

End Sub

Sub RetiraXdaBarra()

    Application.ScreenUpdating = False

    Dim WindowStyle As Long
    Dim hWnd As Integer
    Dim WindowName As String
    Dim Result As Variant

    WindowName = Application.Caption
    hWnd = FindWindow32(0&, ByVal WindowName)
    WindowStyle = GetWindowLong32(hWnd, GWL_STYLE)
    WindowStyle = WindowStyle And (Not WS_SYSMENU)
    Result = SetWindowLong32(hWnd, GWL_STYLE, WindowStyle)

    'For|fffd|a a barra de t|fffd|tulos a se atualizar, Ocultando os Bot|fffd|es
    'Application.Caption = " Dashboard "
    'ActiveWindow.Caption = " Produtividade "

End Sub









Attribute VB_Name = "M|fffd|dulo8"
Sub Colardados()
Attribute Colardados.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Colardados Macro
'

'
    Sheets("Dados").Select
    Range("D4").Select
    ActiveSheet.Paste
    Sheets("NaoApagar").Select
    Range("A2:Z12").Select
    Selection.ClearContents
    Range("A1").Select
    Sheets("RESULTADO").Select
    Range("S24").Select
End Sub
Attribute VB_Name = "M|fffd|dulo9"
Sub btnListajogos()
    With Worksheets("NowGoal")
        .Activate
        .Range("A4").Select
    End With
    
End Sub
Attribute VB_Name = "Plan1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBox2, 2, 0, MSForms, ComboBox"
Private Sub ComboBox1_Change()

End Sub
Attribute VB_Name = "Plan6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Plan7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sayfa2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet21"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet22"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet23"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "modMcsImportacao"
Option Explicit

Public MyBrowser As Object
Public messagem As String
Public MyProgressbar As ProgressBar
Public strEndereco As String, strSite As String

Dim myElement As Object
Dim elemCollection As Object, objElementTR As Variant
Dim blnOK As Boolean, blnMaisJogos As Boolean

Public dadosAcademia
Public dadosNowGoal
Public tabelaAcademia
Public tabelaNowGoal

Public Sub AbrirNavegador()

    'Fecha a instancia anterior, se existir
    If Not MyBrowser Is Nothing Then
        fcFecharBrowser
    End If
    
    'Initialize a New Instance of the Progressbars
    Set MyProgressbar = New ProgressBar
    
    With MyProgressbar
        .Title = "G|fffd|N|fffd|N MA|fffd|LARI KONTROL ED|fffd|L|fffd|YOR"
        .ExcelStatusBar = True
        .StartColour = rgbGreen
        .EndColour = rgbRed
    End With
    
    'Acoes que serao realizadas
    MyProgressbar.TotalActions = 6
    
    'Exibe o progressbar
    MyProgressbar.ShowBar
    
    'Exibe o andamento
    fcExibeAcaoProgressbar 1, "|fffd|nternet Eri|fffd|imi Sa|fffd|lan|fffd|yor"

    'Abre o Internet Explorer
    fcOpenBrowser
    
Exit_Sub:
    Exit Sub

Error_Exit:
    MsgBox "A|fffd|a|fffd||fffd|daki hatalar olu|fffd|tu:" & vbNewLine & vbNewLine & messagem & vbNewLine & "|fffd||fffd|lem yar|fffd|da kesildi!", vbCritical
    GoTo Exit_Sub
    
End Sub

Public Sub fcOpenBrowser()

    'Reseta a messagem
    messagem = ""

    'Instancia o Browser
    Set MyBrowser = CreateObject("InternetExplorer.Application")
    
    'MyBrowser.Silent = False
    MyBrowser.Visible = False
    
    'Aguarda carregamento
    While MyBrowser.Busy
        DoEvents
        Pause 1
    Wend

End Sub

Public Sub fcIrPagina(strUrl As String)

    'Se tudo OK, redireciona para a pagina de cadastro
    With MyBrowser
        .navigate strUrl
    
        'Aguarda o carregamento da pagina
        Do Until .readyState = 4
           DoEvents
        Loop

        'Checa se a pagina foi carregada
        If .document.Url <> strUrl Then
          messagem = messagem & "Adrese Eri|fffd|im Sa|fffd|lanamad|fffd|: " & strUrl & vbNewLine
          Exit Sub
        End If

    End With

End Sub

Public Sub fcFecharBrowser()
    
    If Not MyBrowser Is Nothing Then
        MyBrowser.Quit
        Set MyBrowser = Nothing
    End If
    
End Sub

Public Sub Pause(NumberOfSeconds As Variant)
    
    On Error GoTo Err_Pause

    Dim PauseTime As Variant, start As Variant

    PauseTime = NumberOfSeconds
    start = Timer
    Do While Timer < start + PauseTime
    DoEvents
    Loop

Exit_Pause:
    Exit Sub

Err_Pause:
    MsgBox Err.Number & " - " & Err.Description, vbCritical, "Pause()"
    Resume Exit_Pause

End Sub

Public Sub fcExibeAcaoProgressbar(intNumAcao As Integer, strMsg As String)

    With MyProgressbar
        .ActionNumber = intNumAcao
        .StatusMessage = strMsg
    End With
    
End Sub

Public Function fcLocalizaTabelaNowGoal() As Boolean

    Dim tabela As Object
    
    blnOK = False
    
    'Armazena os elementos do tipo especificado
    Set elemCollection = MyBrowser.document.getElementsByTagName("table")
    
    'Verifica os elementos do tipo input
    For Each tabela In elemCollection
    
        'Se existir, preenche o campo
        If tabela.ID = "table_live" Then
            blnOK = True
        End If
    
    Next
    
    If blnOK = False Then
        messagem = messagem & "|fffd|imdi hedef tablosunu bulamad|fffd|" & vbNewLine
    End If
    
    fcLocalizaTabelaNowGoal = blnOK
    
End Function

Public Sub getTabelaNowGoal()

    'Armazena a tabela
    Set elemCollection = MyBrowser.document.getElementsByTagName("table")
    
    'Verifica os elementos do tipo input
    For Each myElement In elemCollection
    
        'Se existir, preenche o campo
        If myElement.ID = "table_live" Then
            Set tabelaNowGoal = myElement
        End If
    
    Next
        
End Sub

Public Sub fcObtemTabelaNowGoal()

    Dim x As Long, y As Long, coluna As Long
    Dim oRow As Object, oCell As Object
    Dim intRow As Integer, celula As String, link As String, I As Long, j As Long, totalLinhas As Long
    
    y = 1: x = 1: coluna = 1

    'Percorre a tabela e armazena linhas e colunas
    With tabelaNowGoal
        ReDim dadosNowGoal(1 To .Rows.Length, 1 To 6)
        For Each oRow In .Rows
        
            If InStr(oRow.ID, "tr1_") Then
            
                For Each oCell In oRow.Cells
                
                    'Seleciona somente as colunas relevantes
                    If (y = 3 Or y = 5 Or y = 6 Or y = 7 Or y = 11) Then
                        
                        If (coluna = 1) Then
                            dadosNowGoal(x, coluna) = Trim(Right(oCell.innerText, 7))
                        ElseIf (coluna = 3) Then
                            dadosNowGoal(x, coluna) = Trim(Replace(StripAccent(oCell.innerText), Chr(10), ""))
                        Else
                            dadosNowGoal(x, coluna) = Trim(Replace(Replace(StripAccent(oCell.innerText), Chr(10), ""), "-", ""))
                        End If
                        coluna = coluna + 1
                    End If
                    
                    y = y + 1
                    
                Next oCell
                y = 1
                x = x + 1
                coluna = 1
                
            End If
            
        Next oRow
    End With
    
    'Ir para a planilha desejada
    'Application.DisplayAlerts = False
    'Sheets("NowGoal").Visible = True
    'Sheets("NowGoal").Select
    'Sheets("NowGoal").Range("A1:A1").Select

    'Limpa o conteudo anterior
    Sheets("NowGoal").Range("A6:L1000").Clear
    
    'Formata lista como texto
    Sheets("NowGoal").Range("A6:L1000").NumberFormat = "@"
    
    'Centraliza dados
    Sheets("NowGoal").Range("A6:L1000").HorizontalAlignment = xlCenter
    
    '===================================
    'Dados Now Goal
    Sheets("NowGoal").Cells(6, 1).Resize(UBound(dadosNowGoal), UBound(dadosNowGoal, 2)).value = dadosNowGoal

    'Total de linhas da tabela
    totalLinhas = tabelaNowGoal.Rows.Length

    'Adiciona os links
    intRow = 6 'Inicia a partir da linha 6, para n|fffd|o sobrescrever o cabecalho
    With tabelaNowGoal
    
        For Each oRow In .Rows
            
            'Extrai o codigo do link
            If InStr(oRow.ID, "tr1_") Then
                link = oRow.Cells(8).Children(0).innerHTML
                I = InStr(link, "Match analyze")
                If I > 0 Then
                    j = InStr(I, link, ")")
                    link = Mid(link, I + 41, j - I - 41)
                End If

                With Worksheets("NowGoal")
                    'Link externo do jogo
                    .Cells.Range("E" & intRow) = "http://www.nowgoal.vip/analysis/" & link & ".html"
                    
                    'Link para localizar o jogo na tabela "Academia das Apostas"
                    .Hyperlinks.Add .Range("F" & intRow), "", TextToDisplay:="|+ ANAL|fffd|Z YAP +|"
                    
                End With
                intRow = intRow + 1
            End If
            
        Next oRow
        
    End With
    
    'Oculta a coluna do link
    Sheets("NowGoal").Columns("E").EntireColumn.Hidden = True
    
    'Sheets("NowGoal").Visible = False
    'Application.DisplayAlerts = True

End Sub

'---------------------------------------------------------------------------------------------------------------------
'FUNCTION FINDALL : Find all macthing cells and return them into one single range.
'      What:    what to search for
'      Where:   range to search
'      LookIn:  look into xlComments, xlFormulas, or xlValues (default)
'      LookAt:  look at xlPart (default) or xlWhole
'      MatchCase:  True or False (default)
'      MatchByte:  True or False (default)
Public Function FindAll( _
    What As Variant, _
    Where As Range, _
    Optional LookIn As XlFindLookIn = xlValues, _
    Optional LookAt As XlLookAt = xlPart, _
    Optional MatchCase As Boolean = False, _
    Optional MatchByte As Boolean = False) As Range
    
    Dim ResultRg  As Range
    Dim rg As Range
    Dim firstAddress As String
     
    With Where
        Set rg = .Find(What, LookIn:=LookIn, LookAt:=LookAt, _
        MatchCase:=MatchCase, MatchByte:=MatchByte)
        If Not rg Is Nothing Then
            Set ResultRg = rg
            firstAddress = rg.Address
            Do
                Set ResultRg = Application.Union(ResultRg, rg)
                Set rg = .FindNext(rg)
            Loop While Not rg Is Nothing And rg.Address <> firstAddress
        End If
    End With
     
    Set FindAll = ResultRg 'Range to return
End Function

Function StripAccent(strTexto As String)
    Dim A As String * 1
    Dim B As String * 1
    Dim I As Integer
    
    Const AccChars = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Const RegChars = "SZszYAAAAAACEEEEIIIIDNOOOOOUUUUYaaaaaaceeeeiiiidnooooouuuuyy"
    
    For I = 1 To Len(AccChars)
        A = Mid(AccChars, I, 1)
        B = Mid(RegChars, I, 1)
        
        strTexto = Replace(strTexto, A, B)
    Next
    
    StripAccent = strTexto
End Function

Public Sub PreencheComboPartidas()

    Dim lin As Integer
    Dim time1 As String, time2 As String
    Dim arr
    Dim I As Variant
    
    Set arr = CreateObject("System.Collections.ArrayList")
    
    lin = 7
    
    Worksheets("NowGoal").cboPartidas.Text = ""
    Worksheets("NowGoal").cboPartidas.Clear
    
    Do Until Worksheets("NowGoal").Cells(lin, 2) = ""
    
        'Times
        time1 = Worksheets("NowGoal").Cells(lin, 2)
        time2 = Worksheets("NowGoal").Cells(lin, 4)
        
        'Limpa caracteres indesejaveis
        While InStr(time1, Chr(13))
            time1 = Replace(time1, Chr(13), "")
        Wend
        While InStr(time2, Chr(13))
            time2 = Replace(time2, Chr(13), "")
        Wend
        
        'Adiciona o jogo no array
        arr.Add time1 & " x " & time2
  
        lin = lin + 1
        
    Loop
    
    'Ordena o array
    arr.Sort
    
    'Adiciona os jogos no combobox
    For I = 0 To arr.Count - 1
        Worksheets("NowGoal").cboPartidas.AddItem arr(I)
    Next I
    
    
End Sub

Public Sub LocalizaJogo()

    Dim rng As Range
    Dim rngSelect As Range
    Dim texto() As String
    
    texto = Split(Worksheets("NowGoal").cboPartidas.Text, " x ")
    
    If Worksheets("NowGoal").cboPartidas.Text <> "" Then

        Set rng = FindAll(texto(0), Worksheets("NowGoal").Range("B:B"), xlValues, xlPart, False, False)
        
        If rng Is Nothing Then
            MsgBox "Oyun bulunamad|fffd|!"
        Else
         Set rngSelect = Range("A" & Range(rng.Address).Row & ":D" & Range(rng.Address).Row)
         rngSelect.Select
        End If
        
    End If
   
End Sub

Sub ExportarPDF()

    Dim wbA As Workbook
    Dim strTime As String
    Dim strName As String
    Dim strPath As String
    Dim strFile As String
    Dim strPathFile As String
    Dim myFile As Variant
    
    Set wbA = ActiveWorkbook
    strTime = Format(Now(), "yyyymmdd\_hhmm")
    
    'Obtem o diretorio da planilha
    strPath = wbA.Path
    If strPath = "" Then
      strPath = Application.DefaultFilePath
    End If
    strPath = strPath & "\"
    
    'Nome default
    strName = "analise"
    strFile = strName & "_" & strTime & ".pdf"
    strPathFile = strPath & strFile
    
    'Usuario pode escolher a Pasta e o nome do arquivo
    myFile = Application.GetSaveAsFilename _
        (InitialFileName:=strPathFile, _
            FileFilter:="PDF Files (*.pdf), *.pdf", _
            Title:="PDF dosyas|fffd|n|fffd| kaydet")
    
    If myFile <> False Then
    
        With ActiveSheet.PageSetup
            .Orientation = xlLandscape
            .PrintArea = "$B$2:$O$24"
            .FitToPagesWide = 1
        End With
        
        ActiveSheet.ExportAsFixedFormat _
            Type:=xlTypePDF, _
            Filename:=myFile, _
            Quality:=xlQualityStandard, _
            IncludeDocProperties:=False, _
            IgnorePrintAreas:=False, _
            OpenAfterPublish:=True

        MsgBox "PDF ba|fffd|ar|fffd|yla olu|fffd|turuldu: " _
          & vbCrLf _
          & myFile
      
    End If
    
    'ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF
End Sub



Attribute VB_Name = "modMcsPrincipal"
Sub btnAtualizarJogos_Clique()
    
    'Abre o navegador
    AbrirNavegador
    
    '========================================
    ' Now Goal
    '========================================
    'Exibe andamento
    fcExibeAcaoProgressbar 2, "Now Goal Site Eri|fffd|imi Yap|fffd|l|fffd|yor"
    
    'Endereco
    strEndereco = "http://www.nowgoal.vip/"
    
    'Navega at|fffd| p|fffd|gina
    fcIrPagina (strEndereco)
    If messagem <> "" Then GoTo Error_Exit
    
    'Localiza a tabela de jogos
    fcExibeAcaoProgressbar 3, "G|fffd|n|fffd|n Ma|fffd| Tablosu Sorgulan|fffd|yor..."
    If fcLocalizaTabelaNowGoal = False Then GoTo Error_Exit
    
    'Obtem a tabela
    fcExibeAcaoProgressbar 4, "G|fffd|n|fffd|n Ma|fffd| Listesi Se|fffd|iliyor..."
    getTabelaNowGoal
    
    'Copia os dados da tabela
    fcExibeAcaoProgressbar 5, "Kopyalama |fffd||fffd|lemi Tamamlan|fffd|yor..."
    fcObtemTabelaNowGoal
    
    'Atualiza combo de partidas
    PreencheComboPartidas
    
    'Exibe andamento
    fcExibeAcaoProgressbar 6, "|fffd||fffd|lem Tamamlan|fffd|yor..."
    
    'Fecha o navegador
    fcFecharBrowser

    'Exibe final do processamento
    MyProgressbar.Complete 1
    
Exit_Sub:
    Exit Sub

Error_Exit:
    MsgBox "A|fffd|a|fffd||fffd|daki hatalar olu|fffd|tu:" & vbNewLine & vbNewLine & messagem & vbNewLine & "Operasyon kesildi!", vbCritical
    MyProgressbar.Terminate
    fcFecharBrowser
    
    GoTo Exit_Sub
    
End Sub
Sub DesabilitaTeclaCtrl()

    
     
End Sub

Sub Sair()

    Dim answer As String
    Dim question As String
    
    question = "Ger|fffd|ekten |fffd||fffd|kmak |fffd|stiyormusunuz?"
    answer = MsgBox(question, vbYesNo)

    If answer = vbNo Then
        Cancel = True
        Exit Sub
    Else
        'Se existirem outros arquivos abertos, fecha apenas o arquivo ativo.
        'Caso contrario, fecha o Excel
        If Application.Workbooks.Count = 1 Then
            Application.Quit
        Else
            ActiveWorkbook.Close
        End If
    End If
    
End Sub





INQUEST-PP=macro
