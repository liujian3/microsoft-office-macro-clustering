Attribute VB_Name = "A_Grundlagen"
Sub Zahlschreiben()
Range("A1") = 100
Cells(1, 2) = 500
End Sub
Sub MitZellenRechnen()
Range("A1") = 100
Range("A2") = 200
Range("A3") = Range("A1") + Range("A2")
End Sub
Sub Zahleingeben()
Range("A4") = InputBox("Bitte geben Sie eine Zahl ein:")
End Sub
Sub VornameundNachnameAbfragenundAusgebenmitHilfszellen()
Range("B1") = InputBox("Wie Vorname?:")
Range("B2") = InputBox("Wie Nachname?:")
MsgBox "Danke," & " " & Range("B1") & " " & Range("B2") & "."
End Sub
Sub VornameundNachnameAbfragenundAusgebenohneHilfszeilen()
'Range("B1") = InputBox("Wie Vorname?:")
'Range("B2") = InputBox("Wie Nachname?:")
MsgBox "Danke," & " " & InputBox("Wie Vorname?:") _
    & " " & InputBox("Wie Nachname?:") & "."
End Sub

Sub Tabellansprechen_internername()

Tabelle3.Range("A1") = 100

End Sub

Sub Tabellansprechen_sichtbarername()
Worksheets("Michael").Range("A1") = 100

End Sub

Sub Tabellansprechen_Position()
Worksheets(3).Range("A3") = 100

End Sub

Sub summieren()
Range("A5") = Application.WorksheetFunction.Sum(Range("A1:A4"))
End Sub

Sub letzteZeile()
MsgBox Range("A1048576").End(xlUp).Row
Range("A1048576").End(xlUp).Select
End Sub

Sub kopieren()

Range("B4:D4").Copy Destination:=Tabelle1.Range("F1")
End Sub

Sub kopierendiezweite()

'Range("B4:D4").Copy Destination:=Tabelle1.Range("F1")

'nur die Werte in kopieren und einf|fffd|gen
Tabelle1.Range("A9").Copy
Tabelle5.Range("G1").PasteSpecial (xlPasteValues)
End Sub

Sub kopierenderAbteilungen()
Dim letzteZeile As Long
Dim zaehler As Long

letzteZeile = Range("A1048576").End(xlUp).Row

For zaehler = 1 To letzteZeile

If Range("E" & zaehler) = "Rechnungswesen" Then
Rows(zaehler).Copy
Worksheets("Rechnungswesen").Range("A1048576").End(xlUp).PasteSpecial (xlPasteValues)
    If Range("E" & zaehler) = "Lager" Then
        Rows(zaehler).Copy
        Worksheets("Lager").Range("A1048576").End(xlUp).PasteSpecial (xlPasteValues)
            If Range("E" & zaehler) = "IT" Then
                Rows(zaehler).Copy
                Worksheets("IT").RangeRange("A1048576").End(xlUp).PasteSpecial (xlPasteValues)
    
End If
End If
End If

Next zaehler
End Sub

Sub kopierenderAbteilungenLETZTERVERSUCH()
Dim letzteZeile As Long
Dim zaehler As Long
Dim letzteZeileAbteilung

letzteZeile = Range("A1048576").End(xlUp).Row

For zaehler = 2 To letzteZeile
If Range("E" & zaehler) = "Rechnungswesen" Then
Rows(zaehler).Copy
Worksheets("Rechnungswesen").Select
letzteZeileAbteilung = Range("A1048576").End(xlUp).Row
Range("A" & letzteZeileAbteilung + 1).PasteSpecial (xlPasteAll)
End If
Tabelle1.Select
Next zaehler

For zaehler = 1 To letzteZeile
If Range("E" & zaehler) = "Lager" Then
Rows(zaehler).Copy
Worksheets("Lager").Select
letzteZeileAbteilung = Range("A1048576").End(xlUp).Row
Range("A" & letzteZeileAbteilung + 1).PasteSpecial (xlPasteAll)
End If
Tabelle1.Select
Next zaehler

For zaehler = 1 To letzteZeile
If Range("E" & zaehler) = "IT" Then
Rows(zaehler).Copy
Worksheets("IT").Select
letzteZeileAbteilung = Range("A1048576").End(xlUp).Row
Range("A" & letzteZeileAbteilung + 1).PasteSpecial (xlPasteAll)
End If
Tabelle1.Select
Next zaehler

End Sub

Sub richtigeL|fffd|sung()
Dim letzteZeileGesamt As Long
Dim letzteZeileAbteilung As Long
Dim Zeile As Long

letzteZeileGesamt = Range("A1048576").End(xlUp).Row

'Bildschirmflackern abschalten
Application.ScreenUpdating = False

'Schleife
For Zeile = 2 To letzteZeileGesamt
Select Case Range("E" & Zeile)
    Case "IT"
    Rows(Zeile).Copy
    Worksheets("IT").Select
    letzteZeileAbteilung = Range("A1048576").End(xlUp).Row
    Range("A" & letzteZeileAbteilung + 1).PasteSpecial (xlPasteAll)
Case "Rechnungswesen"
    Rows(Zeile).Copy
    Worksheets("Rechnungswesen").Select
    letzteZeileAbteilung = Range("A1048576").End(xlUp).Row
    Range("A" & letzteZeileAbteilung + 1).PasteSpecial (xlPasteAll)
    Case "Lager"
    Rows(Zeile).Copy
    Worksheets("Lager").Select
    letzteZeileAbteilung = Range("A1048576").End(xlUp).Row
    Range("A" & letzteZeileAbteilung + 1).PasteSpecial (xlPasteAll)
End Select
Tabelle1.Select
Next Zeile
Tabelle1.Range("A1").Select
Application.CutCopyMode = False
End Sub


Sub Formatieren()
Range("A1").Font.Bold = True
Range("A1").Font.ColorIndex = 4
Range("A1").Font.Name = "Arialblack"
Range("A1").Font.Size = 20

Range("A:A").EntireColumn.AutoFit
Range("A1:C1").MergeCells = True
End Sub

Sub unterschied()

'Version 1
Tabelle1.Select
Range("A1").Font.Bold = True
'version 2
Tabelle1.Range("A1").Font.Bold = True

'Version 3
With Tabelle1
.Range("A1").Font.Bold = True       ' der Punkt ist wichtig, erst dann bezieht sich das auf das With Tabelle1
.Range("A1").Font.ColorIndex = 4
.Range("A1").Font.Name = "Arialblack"
.Range("A1").Font.Size = 20
End With
End Sub

Attribute VB_Name = "B_Variablen"
Option Explicit
Dim Vorname As String   'Textvariable

Sub VornameundNachnameAbfragenundAusgebenMitVariablen()

Dim Nachname As String  'Textvariable
Dim PLZ1 As Byte        'Ganzzahl zwischen 0 und 255
Dim PLZ2 As Integer     'Ganzzahl zwischen -33.000 und +33.000
Dim PLZ3 As Long        'Ganzzahl zwischen -2,15 Milliarden und +2,15 Milliarden

Dim PLZ4 As Single      'Kommazahl mit 7-stelliger Genauigkeit
Dim PLZ5 As Double      ' Kommazahl mit 15-stelliger Genauigkeit

Dim PLZ6 As Currency     ' Kommazahl mit 4-stelliger Genauigkeit

Vorname = InputBox("Wie Vorname?:")
Nachname = InputBox("Wie Nachname?:")
PLZ1 = InputBox("PLZ?")
MsgBox "Danke," & " " & Vorname & " " & Nachname & "."
End Sub

Attribute VB_Name = "C_Bedingungen"
Option Explicit
Dim zahl As Integer
'
'Sub ZahlenZwischen100und200()
'Dim zahl As Integer
'
'zahl = InputBox("Zahl eingeben zwischen 100 und 200:")
'If zahl >= 100 And zahl <= 200 Then
'    MsgBox "Guter Junge!"
'Else
'    MsgBox "Du Idiot, kannst du nicht lesen? ZAHL ZWISCHEN 100 und 200!!!!!"
'End If
'
'End Sub

Sub ZahlenZwischen100und200undZahlfalsch()
Dim zahl
zahl = InputBox("Zahl eingeben:")
If IsNumeric(zahl) Then
    MsgBox "Guter Junge."
Else
    MsgBox " falsch"
End If

End Sub

Sub neueArbeitsmappemit10Bl|fffd|ttern()
Dim zahl As Byte
zahl = InputBox("wie viele Arbeitsbl|fffd|tter sind gew|fffd|nscht? Bis zu 10 Arbeitsbl|fffd|tter sind erlaubt")

Application.SheetsInNewWorkbook = zahl
Workbooks.Add
Application.SheetsInNewWorkbook = 1
End Sub

Sub neueArbeitsmappemit10Bl|fffd|tternmitalterwert()
Dim zahl As Byte
Dim alterwert As Byte
zahl = InputBox("wie viele Arbeitsbl|fffd|tter sind gew|fffd|nscht? Bis zu 10 Arbeitsbl|fffd|tter sind erlaubt")

Application.SheetsInNewWorkbook = zahl
Workbooks.Add
Application.SheetsInNewWorkbook = alterwert
End Sub

'Application.sheetsinnewworkbook
'workbooks.add


Sub Kategoriezuweisen_Ausf|fffd|hrlich()
If Tabelle2.Range("A1") > 100 Then
    Range("B1") = "A"
Else
    If Tabelle2.Range("A1") > 50 Then
    Range("B1") = "B"
    Else
        If Tabelle2.Range("A1") > 10 Then
         Range("B1") = "C"
        Else
            Range("B1") = "D"
        End If
    End If
End If
End Sub

Sub Kategoriezuweisen_etwask|fffd|rzer()
If Tabelle2.Range("A1") > 100 Then
    Range("B1") = "A"
ElseIf Tabelle2.Range("A1") > 50 Then
    Range("B1") = "B"
    ElseIf Tabelle2.Range("A1") > 10 Then
         Range("B1") = "C"
        Else
            Range("B1") = "D"
End If
 
End Sub

Sub Kategoriezuweisen_Case()
Select Case Range("A1")
    Case Is > 100
        Range("B1") = "A"
     Case Is > 50
        Range("B1") = "B"
    Case Is > 10
        Range("B1") = "C"
    Case Else
        Range("B1") = "D"
End Select
End Sub
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
MsgBox "Moin Ulf, aufpassen!"
End Sub
Attribute VB_Name = "Praxis|fffd|bung"
Option Explicit
Dim Vorname As String   'Textvariable

Sub neuerMitarbeiter()
Dim Personalnummer As Long
Dim Nachname As String  'Textvariable
Dim Geburtstag As Date       'Geburtsdatum
Dim letzteZeile As Long

'letzte Zeile ermitteln)
letzteZeile = Range("A1048576").End(xlUp).Row

'Neuen Mitarbeiter erfassen

Vorname = InputBox("Wie Vorname?:")
Nachname = InputBox("Wie Nachname?:")
Geburtstag = InputBox("Wann Geburtstag in Format|fffd|`TT.MM`JJJJ`:")
'MsgBox "Mitarbeiter," & " " & Vorname & " " & Nachname & " wurde angelegt."

'Personalnummer ermitteln
Personalnummer = Application.WorksheetFunction.Max(Range("A:A")) + 1
MsgBox Personalnummer

'Blattschutz aufheben

Tabelle1.Unprotect Password:="salami"

'Neuen Mitarbeiter in Tabelle eintragen

Range("A" & letzteZeile + 1) = Personalnummer
Range("B" & letzteZeile + 1) = Vorname
Range("C" & letzteZeile + 1) = Nachname
Range("D" & letzteZeile + 1) = Geburtstag

'Tabelle sortieren
Tabelle1.Columns("A:D").Sort key1:=Range("c1"), key2:=Range("B1"), Header:=xlYes

'Blatt sch|fffd|tzen
Tabelle1.Protect Password:="salami"
End Sub

Sub Wochentage()

Dim zaehler As Byte
 For zaehler = 1 To 7
Range("A" & zaehler) = Format(zaehler, "dddd")
Next zaehler
End Sub

Sub WochentageNovember()
MsgBox Day(Application.WorksheetFunction.EoMonth(Date, 0))
Dim zaehler As Byte
'For zaehler = 1 To Day(Application.WorksheetFunction.EoMonth(Date, 0))
 For zaehler = 1 To Day(DateSerial(Year(Date), Month(Date) + 1, 1 - 1))
Range("C" & zaehler) = DateSerial(2019, 11, zaehler)
Cells(1, 1).Select
Next zaehler
End Sub

Sub |fffd|bungKalender()

Dim zaehler As Byte
Dim Tage As Byte

 For zaehler = 1 To 12
 Cells(1, zaehler) = Format(DateSerial(Year(Date), zaehler, 1), "mmmm")

    For Tage = 1 To Day(DateSerial(Year(Date), zaehler + 1, 1 - 1))
    Cells(Tage + 1, zaehler) = DateSerial(Year(Date), zaehler, Tage)
    Next Tage
Next zaehler

End Sub

Sub AufgabeZ|fffd|hlenwenn()
Dim zaehler As Byte
Range("A1").Select
Do Until IsEmpty(ActiveCell)
ActiveCell.Offset(1, 0).Select
 
'countif("activecell"):cells(isempty(activecell

If Application.worksheetsfunction.CountIf(("A:A"), "A1") Then
 '.Range("A1").Font.Bold = True
 
 End If
Loop
End Sub

Sub dupl()

Dim letzteZeile As Byte
Dim Zeile As Long

With Tabelle6

letzteZeile = Range("A1048576").End(xlUp).Row

For Zeile = 1 To letzteZeile

    If Application.WorksheetFunction.CountIf(Range("A:A"), Range("A" & Zeile)) > 1 Then
    .Range("A" & Zeile).Interior.ColorIndex = 4

    Else
    .Range("A" & Zeile).Interior.ColorIndex = xlColorIndexNone
    End If

Next Zeile

If MsgBox("sollen die Duplikate gel|fffd|scht werden?", vbYesNo) = vbYes Then
'.Rows(Zeile).Delete

For Zeile = letzteZeile To 1 Step -1
  If Application.WorksheetFunction.CountIf(Range("A:A"), Range("A" & Zeile)) > 1 Then Rows(Zeile).Delete
Next Zeile

End If

.Range("A:A").ClearFormats
.Range("A1").Select
End With

End Sub

Sub ProblemundL|fffd|sung1()
Dim Zeile As Byte
Dim letzteZeile As Byte
letzteZeile = Range("A1048576").End(xlUp).Row

For Zeile = 1 To letzteZeile
    If IsNumeric(Cells(Zeile, 1)) Then Cells(Zeile, 8) = Cells(Zeile, 1) * 1
Next Zeile

End Sub

Sub ProblemundL|fffd|sung2()
Dim Zeile As Byte
Dim letzteZeile As Byte
letzteZeile = Range("b1048576").End(xlUp).Row

For Zeile = 1 To letzteZeile
    Cells(Zeile, 9) = Trim(Cells(Zeile, 2))
Next Zeile

End Sub

Sub ProblemundL|fffd|sung3()
Dim Zeile As Byte
Dim letzteZeile As Byte
letzteZeile = Range("c1048576").End(xlUp).Row

For Zeile = 1 To letzteZeile
    Cells(Zeile, 10) = Replace(Cells(Zeile, 3), "-", "")
Next Zeile

End Sub

Sub ProblemundL|fffd|sung4()
Dim Zeile As Byte
Dim letzteZeile As Byte
letzteZeile = Range("d10").End(xlUp).Row

For Zeile = 1 To letzteZeile
    Cells(Zeile, 4).Copy Destination:=Cells(Zeile + 1, 11)
    Cells(Zeile, 11) = Replace(Cells(Zeile, 4), "-", "")
    Cells(Zeile, 11) = Replace(Cells(Zeile, 4), "/", "")
    Cells(Zeile, 11) = Replace(Cells(Zeile, 4), "*", "")
    Cells(Zeile, 11) = Replace(Cells(Zeile, 4), "+", "")
Next Zeile

End Sub

Sub ProblemundL|fffd|sung5()
Dim Zeile As Byte
Dim letzteZeile As Byte
letzteZeile = Range("e10").End(xlUp).Row

For Zeile = 2 To letzteZeile
'If Right(Cells(Zeile, 5), 1) = "-" Then
'Cells(Zeile, 12) = Replace(Cells(Zeile, 5), "-", "") * -1
'Else
'Cells(Zeile, 12) = Cells(Zeile, 5)
'End If

Cells(Zeile, 12) = Cells(Zeile, 5) * 1
Next Zeile
End Sub


Sub ProblemundL|fffd|sung6()
Dim Zeile As Byte
Dim letzteZeile As Byte

letzteZeile = Range("F1048576").End(xlUp).Row

For Zeile = 2 To letzteZeile
    Cells(Zeile, 13) = CDate(Cells(Zeile, 6))
Next Zeile

End Sub

Sub Steuermakro()

Call ProblemundL|fffd|sung1
Call ProblemundL|fffd|sung2
Call ProblemundL|fffd|sung3
End Sub

Sub Formulanzeigen()
UserForm1.Show

End Sub
Attribute VB_Name = "Schleifen"
Option Explicit

Sub KategoriezuweisenMehrereWerte()
Dim zaehler As Byte
Dim letzteZeile As Long

letzteZeile = Range("A1048576").End(xlUp).Row

For zaehler = 1 To letzteZeile
With Tabelle2                                   'Bezug auf Tabellenblatt

Select Case .Range("A" & zaehler)

    Case Is > 100
        .Range("B" & zaehler) = "A"
     Case Is > 50
        .Range("B" & zaehler) = "B"
    Case Is > 10
        .Range("B" & zaehler) = "C"
    Case Else
        .Range("B" & zaehler) = "D"
End Select
End With
Next zaehler
End Sub

Sub Zahlenundfarben()
Dim zaehler As Byte
For zaehler = 1 To 56
    Range("A" & zaehler) = zaehler
    Range("B" & zaehler).Interior.ColorIndex = zaehler

Next zaehler
End Sub

Sub H_ausblendenVersuch1()

Dim zaehler As Byte
Dim letzteZeile As Long
letzteZeile = Range("A1048576").End(xlUp).Row
For zaehler = 1 To letzteZeile
Select Case Range("A" & zaehler)
    Case Is > "h"
        Range("B1").Rows.Hidden = True
End Select
Next zaehler
End Sub

Sub H_ausblendenVersuch2()
Dim letzteZeile As Long
Dim zaehler As Long

letzteZeile = Range("A1048576").End(xlUp).Row

For zaehler = 1 To letzteZeile

'h ausblenden
If Range("A" & zaehler) = "h" Then Rows(zaehler).Hidden = True
       
Next zaehler

'l|fffd|schen
For zaehler = letzteZeile To 1 Step -1
    If Range("A" & zaehler) = "d" Then Rows(zaehler).Delete
Next zaehler

End Sub

Sub Wochentage()

Dim zaehler As Byte
 For zaehler = 1 To 7
Range("A" & zaehler) = Format(zaehler, "dddd")
Next zaehler
End Sub

Sub WochentageNovember()

Dim zaehler As Byte
 For zaehler = 1 To 30
Range("C" & zaehler) = DateSerial(2019, 11, zaehler)
Next zaehler
End Sub


Sub wiederholeBisLeereZelle()
Dim zaehler As Byte
Range("A1").Select
Do While Not IsEmpty(ActiveCell.Value) ' solange die aktive Zelle nicht leer ist
    zaehler = zaehler + 1
    ActiveCell.Offset(1, 0).Select
Loop

Range("A1").Select
Do Until IsEmpty(ActiveCell.Value)  ' bis die aktive Zelle leer ist
    zaehler = zaehler + 1
    ActiveCell.Offset(1, 0).Select
Loop
MsgBox zaehler
End Sub

Sub AufgabeBrutto()
Dim zaehler As Byte
Range("A1").Select
Do Until IsEmpty(ActiveCell)
ActiveCell.Offset(1, 0).Select
 
'Select Case Range("A1")
'    Case IsNumeric(ActiveCell)
'    Range("B1") = "A1" * 2
'
' End Select


If IsNumeric(ActiveCell) Then ActiveCell.Offset(0, 1) = ActiveCell * 1.19
     
Loop

End Sub



Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{03CDAAEB-E130-46F0-8F25-7C7BD4F63CEB}{08D6D118-2945-4935-82A9-16B43E167E95}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Private Sub CommandButton1_Click()
Range("B10") = ComboBox1

End Sub

Private Sub UserForm_Initialize()

ComboBox1.RowSource = Tabelle3.Range("A1:B5").Address


End Sub
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{9513EBE7-254F-4AB2-AE80-DEA14450F36C}{53F88FC5-DAF9-4896-90A7-5A8A727B836B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


' InQuest injected base64 decoded content
' ezvp
' !z}t
' ezvp
' !z}t

INQUEST-PP=macro
