Attribute VB_Name = "Module1"
Public Declare Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryA" (ByVal lpBuffer As String, ByVal nSize As Long) As Long

Global CurrSheet As Excel.Worksheet
Global CurrBook As Excel.Workbook

Global SheetName As String
Global BookName As String

Global Cancel As Boolean

Global catArrayB() As Variant
Global CatArrayC() As Variant
Global CatArrayD() As Variant




Attribute VB_Name = "RegMod"
Option Explicit
Global RepoTempPath As String
Dim Gemsdb As New ADODB.Connection
Dim ReportDB As New ADODB.Connection
Dim ReportMdbFile As String
Dim MDBFile As String
Dim RemoteHost As String
Dim RemotePort As Long
Dim FileNotFound As Boolean
Dim MultiUser As Boolean
Dim ThisApp As Excel.Application
Dim Thisbook As Excel.Workbook
Dim ThisSheet As Excel.Worksheet

'API Function and Constant Declarations

   Private Const REG_SZ As Long = 1
  Private Const REG_DWORD As Long = 4

    Private Const HKEY_CLASSES_ROOT = &H80000000
    Private Const HKEY_CURRENT_USER = &H80000001
    Private Const HKEY_LOCAL_MACHINE = &H80000002
    Private Const HKEY_USERS = &H80000003

    Private Const ERROR_NONE = 0
    Private Const ERROR_BADDB = 1
    Private Const ERROR_BADKEY = 2
    Private Const ERROR_CANTOPEN = 3
    Private Const ERROR_CANTREAD = 4
    Private Const ERROR_CANTWRITE = 5
    Private Const ERROR_OUTOFMEMORY = 6
    Private Const ERROR_INVALID_PARAMETER = 7
    Private Const ERROR_ACCESS_DENIED = 8
    Private Const ERROR_INVALID_PARAMETERS = 87
    Private Const ERROR_NO_MORE_ITEMS = 259

    Private Const KEY_ALL_ACCESS = &H3F

    Private Const REG_OPTION_NON_VOLATILE = 0

   Private Declare Function RegCloseKey Lib "advapi32.dll" _
   (ByVal hKey As Long) As Long

   Private Declare Function RegCreateKeyEx Lib "advapi32.dll" Alias _
   "RegCreateKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, _
   ByVal Reserved As Long, ByVal lpClass As String, ByVal dwOptions _
   As Long, ByVal samDesired As Long, ByVal lpSecurityAttributes _
   As Long, phkResult As Long, lpdwDisposition As Long) As Long

   Private Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias _
   "RegOpenKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, _
   ByVal ulOptions As Long, ByVal samDesired As Long, phkResult As _
   Long) As Long

   Private Declare Function RegQueryValueExString Lib "advapi32.dll" Alias _
   "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As _
   String, ByVal lpReserved As Long, lpType As Long, ByVal lpData _
   As String, lpcbData As Long) As Long

   Private Declare Function RegQueryValueExLong Lib "advapi32.dll" Alias _
   "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As _
   String, ByVal lpReserved As Long, lpType As Long, lpData As _
   Long, lpcbData As Long) As Long

   Private Declare Function RegQueryValueExNULL Lib "advapi32.dll" Alias _
   "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As _
   String, ByVal lpReserved As Long, lpType As Long, ByVal lpData _
   As Long, lpcbData As Long) As Long

   Private Declare Function RegSetValueExString Lib "advapi32.dll" Alias _
   "RegSetValueExA" (ByVal hKey As Long, ByVal lpValueName As String, _
   ByVal Reserved As Long, ByVal dwType As Long, ByVal lpValue As _
   String, ByVal cbData As Long) As Long

   Private Declare Function RegSetValueExLong Lib "advapi32.dll" Alias _
   "RegSetValueExA" (ByVal hKey As Long, ByVal lpValueName As String, _
   ByVal Reserved As Long, ByVal dwType As Long, lpValue As Long, _
   ByVal cbData As Long) As Long
Public Function GetPath(ByVal ExeName As String)
    Call QueryValue("software\Microsoft\Windows\CurrentVersion\App Paths\" & ExeName, "")
    RepoTempPath = Left(RepoTempPath, Len(RepoTempPath) - Len(ExeName))
End Function
Function QueryValueEx(ByVal lhKey As Long, ByVal szValueName As _
   String, vValue As Variant) As Long
       Dim cch As Long
       Dim lrc As Long
       Dim lType As Long
       Dim lValue As Long
       Dim sValue As String

       On Error GoTo QueryValueExError

       ' Determine the size and type of data to be read
       lrc = RegQueryValueExNULL(lhKey, szValueName, 0&, lType, 0&, cch)
       If lrc <> ERROR_NONE Then Error 5

       Select Case lType
           ' For strings
           Case REG_SZ:
               sValue = String(cch, 0)
   lrc = RegQueryValueExString(lhKey, szValueName, 0&, lType, _
   sValue, cch)
               If lrc = ERROR_NONE Then
                   vValue = Left$(sValue, cch - 1)
               Else
                   vValue = Empty
               End If
           ' For DWORDS
           Case REG_DWORD:
   lrc = RegQueryValueExLong(lhKey, szValueName, 0&, lType, _
   lValue, cch)
               If lrc = ERROR_NONE Then vValue = lValue
           Case Else
               'all other data types not supported
               lrc = -1
       End Select

QueryValueExExit:
       QueryValueEx = lrc
       Exit Function
QueryValueExError:
       Resume QueryValueExExit
   End Function
Private Sub QueryValue(sKeyName As String, sValueName As String)
       Dim lRetVal As Long         'result of the API functions
       Dim hKey As Long         'handle of opened key
       Dim vValue As Variant      'setting of queried value

       lRetVal = RegOpenKeyEx(HKEY_LOCAL_MACHINE, sKeyName, ByVal 0&, _
   KEY_ALL_ACCESS, hKey)
       lRetVal = QueryValueEx(hKey, sValueName, vValue)
       RepoTempPath = vValue
       RegCloseKey (hKey)
   End Sub




Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Option Explicit
Dim ReportDB As New ADODB.Connection
Dim ReportMdbFile As String
Dim MDBFile As String
Dim ThisApp As Excel.Application
Dim Thisbook As Excel.Workbook
Dim ThisSheet As Excel.Worksheet

Const gintMAX_SIZE% = 255                        'Maximum buffer size
Const gstrSEP_DIR$ = "\"                         ' Directory separator character
Const gstrSEP_URLDIR$ = "/"                      ' Separator for dividing directories in URL addresses.


Const cMarks = "A", ceono = "B", cPackage = "C", cstyleno = "C", cDesc = "D"
Const cQuotaCat = "F", cUnits = "H", cHsCode = "G", paymentterms = "F"
Const cPrice = "I", cAmt = "J"

Public Sub OpenGemsDb(Multi As Boolean)
'    On Error GoTo ErrorProc
    Dim mCurrName As String
    
    Dim VGSpecFile As String
    VGSpecFile = FreeFile
    Open GetWindowsDir & "VGSpec.inf" For Input As #VGSpecFile
    Line Input #VGSpecFile, ReportMdbFile
    Close #VGSpecFile
proceed:    ReportMdbFile = ReportMdbFile & "RepoTemp.mdb"
    'ReportMdbFile = "c:\Program files\VisualGEMS\RepoTemp.mdb"
    mCurrName = "Repotemp"
    If ReportDB.State = adStateOpen Then ReportDB.Close
    ReportDB.Provider = "Microsoft.Jet.OLEDB.3.51"
    ReportDB.Open ReportMdbFile
    
Exit Sub
ErrorProc:
Select Case Err
    Case Is = -2147467259
        End
        Exit Sub
    Case 53
        ReportMdbFile = "C:\Program Files\VisualGEMS\"
        GoTo proceed
    Case Else
        Resume Next
End Select

End Sub

Private Sub Workbook_Open()
    Call OpenGemsDb(True)
    
    BookName = Me.Name
    Set ThisSheet = Me.Worksheets(1)
    SheetName = ThisSheet.Name
    
    Set CurrBook = Workbooks(BookName)
    Set CurrSheet = CurrBook.Worksheets(SheetName)
    
    Set ThisSheet = Me.Worksheets(1)
    
    Call FillCells
End Sub

Private Sub FillCells()
On Error GoTo ErrorProc

Dim RstInv As ADODB.Recordset
Dim RstCmp As ADODB.Recordset
Dim RstMarks As ADODB.Recordset
Dim RstPackListHdr As ADODB.Recordset
Dim CurrRow As Integer
Dim summrow As Integer
Dim InvNoDate As String
Dim i As Integer
Dim TotQty As Double
TotQty = 0
Dim dozen As String
Dim TotalAmt As Double
Dim TotalAmtRs As Double
Dim ExchRate As Double
Dim shipterms As String
Dim AmtRsWords As String
Dim Amtwords As String
Dim rstexportlc As Recordset


Set RstInv = New ADODB.Recordset
If RstInv.State = adStateOpen Then RstInv.Close
RstInv.Open "Select * from UserInvDtl", ReportDB, adOpenKeyset, adLockReadOnly
If RstInv.RecordCount Then
    RstInv.MoveFirst
    
    Set RstCmp = New ADODB.Recordset
    RstCmp.Open "Select * from Company", ReportDB, adOpenKeyset, adLockReadOnly
    
    Set RstMarks = New ADODB.Recordset
    RstMarks.Open "Select * from UserShipMarks", ReportDB, adOpenKeyset, adLockReadOnly
    
    Set rstexportlc = New ADODB.Recordset
    rstexportlc.Open "select * from exportlc", ReportDB, adOpenKeyset, adLockReadOnly
    'Added on 30/07/2002 Ratan
    Dim ArrPONO() As String
    Dim strPONO As String
    Dim ArrStyleNo() As String
    Dim strStyleNo As String
    Dim ArrQuotaCat() As String
    Dim strQuotaCat As String
    Dim ArrDesc() As String

    ReDim ArrPONO(0)
    ArrPONO(0) = RstInv!eono & ""
    RstInv.MoveNext
    While Not RstInv.EOF
        For i = 0 To UBound(ArrPONO)
            If ArrPONO(i) = RstInv!eono & "" Then
                GoTo PNext
            End If
        Next i
        ReDim Preserve ArrPONO(UBound(ArrPONO) + 1)
        ArrPONO(UBound(ArrPONO)) = RstInv!eono & ""
PNext:   RstInv.MoveNext
    Wend
    strPONO = ArrPONO(0)
    For i = 1 To UBound(ArrPONO)
        strPONO = strPONO & ", " & ArrPONO(i)
    Next i
'
    RstInv.MoveFirst
    ReDim ArrStyleNo(0)
    ArrStyleNo(0) = RstInv!styleno & ""
    RstInv.MoveNext
    While Not RstInv.EOF
        For i = 0 To UBound(ArrStyleNo)
            If ArrStyleNo(i) = RstInv!styleno & "" Then
                GoTo SNext
            End If
        Next i
        ReDim Preserve ArrStyleNo(UBound(ArrStyleNo) + 1)
        ArrStyleNo(UBound(ArrStyleNo)) = RstInv!styleno & ""
SNext:  RstInv.MoveNext
    Wend
    strStyleNo = ArrStyleNo(0)
    For i = 1 To UBound(ArrStyleNo)
        strStyleNo = strStyleNo & ", " & ArrStyleNo(i)
    Next i
'
'    RstInv.MoveFirst
'    ReDim ArrQuotaCat(0)
'    ArrQuotaCat(0) = RstInv!Category & ""
'    RstInv.MoveNext
'    While Not RstInv.EOF
'        For i = 0 To UBound(ArrQuotaCat)
'            If ArrQuotaCat(i) = RstInv!Category & "" Then
'                GoTo CNext
'            End If
'        Next i
'        ReDim Preserve ArrQuotaCat(UBound(ArrQuotaCat) + 1)
'        ArrQuotaCat(UBound(ArrQuotaCat)) = RstInv!Category & ""
'CNext:  RstInv.MoveNext
'    Wend
'    strQuotaCat = ArrQuotaCat(0)
'    For i = 1 To UBound(ArrQuotaCat)
'        strQuotaCat = strQuotaCat & ", " & ArrQuotaCat(i)
'    Next i

   RstInv.MoveFirst
    
    With ThisSheet
    
            If rstexportlc.RecordCount > 0 Then
                rstexportlc.MoveFirst
                .Range("lcno").Value = rstexportlc!lcno & " Dated " & rstexportlc!lcdate
            End If
            .Range("poNo").Value = strPONO
            '.Range("podate").Value = "DATE : " & RstInv!buyerorderdate
        
        If RstCmp.RecordCount Then
' COMMENTED BY PURU DATED 13/07/2005
            .Range("fname").Value = UCase(RstCmp!c_name & "")
            .Range("FAddress1").Value = UCase(RstCmp!Address1 & "")
            .Range("FAddress2").Value = UCase(RstCmp!Address2 & "")
            .Range("FAddress3").Value = UCase(RstCmp!Address3 & "") + " " + "," + UCase(RstCmp!city & "    - " & RstCmp!pin)
            .Range("FAddress4").Value = UCase(RstCmp!country & "")
''            .Range("Ftrfname").Value = "For" + " " + UCase(RstCmp!c_name & "")
            .Range("iecno").Value = "IE Code -" & " " & RstCmp!jcci_no
           ' .Range("F10").Value = "TIN No:-" + " " + Trim(RstCmp!tinno) & ""
          '  .Range("rbicode").Value = "RBI Code -" & "  " & RstCmp!rbi_no & "  " & "AEPC Reg :- " & "  " & RstCmp!apec_no & "  " & " VLD.DT. " & "  " & RstCmp!apec_reg_date & "  " & "TC Reg  -" & "  " & RstCmp!tc_no & "  " & "IE Code  " & "  " & RstCmp!jcci_no
        End If
        RstCmp.Close
        Set RstCmp = Nothing
        
        
        .Range("CName").Value = UCase(RstInv!consigneename & "")
        .Range("CAddress1").Value = UCase(RstInv!Consigneeadd1 & "")
        .Range("CAddress2").Value = UCase(RstInv!consigneeadd2 & "")
        .Range("CAddress3").Value = UCase(RstInv!consigneeadd3 & "")
        .Range("CAddress4").Value = UCase(RstInv!consigneeadd4 & "")
        
        .Range("bName").Value = UCase(RstInv!byrotherthanconsignnm & "")
        .Range("bAdd1").Value = UCase(RstInv!byrotherthanconsignadd1 & " ")
        .Range("bAdd2").Value = UCase(RstInv!byrotherthanconsignadd2 & "")
        .Range("bAdd3").Value = UCase(RstInv!byrotherthanconsignadd3 & "")
        .Range("bAdd4").Value = UCase(RstInv!byrotherthanconsignadd4 & "")
        
        
        
        .Range("InvNoDate").Value = RstInv!prefix & "" + "/" + Trim(RstInv!InvoiceNo) & "" + "/" + RstInv!suffix & "" + "," + Format(RstInv!dated & "", "dd-mmm-yyyy")
'        .Range("InvNoDate").Value = RstInv!prefix & "" + "/" + Trim(RstInv!InvoiceNo) & "" + "/" + RstInv!suffix & ""
'        .Range("InvDate").Value = Format(RstInv!dated & "", "dd-mmm-yyyy")
       ' .Range("InvNoDate").Value = InvNoDate
        
        '.Range("PONO").Value = RstInv!EONO & ""
        If RstInv!Mode = "Land" Then
        .Range("Mode").Value = "BY Road"
        End If
        If RstInv!Mode = "Air" Then
        .Range("Mode").Value = "BY" + " " + RstInv!Mode & ""
        End If
        If RstInv!Mode = "Sea" Then
        .Range("Mode").Value = "BY" + " " + RstInv!Mode & ""
        End If
                
'        .Range("Mode").Value = "BY" + " " + RstInv!Mode & ""
        If RstInv!ContractTerm = "FOB" And (RstInv!Freight > 0 Or RstInv!insurence > 0) Then
        .Range("Amtwords").Value = RstInv!ContractTerm
        Else
        .Range("Amtwords").Value = RstInv!ContractTerm & " " & RstInv!Amtwords & ""
        End If
        
        If RstInv!othercharge > 0 Then
        .Range("Amtwords").Value = RstInv!ContractTerm
        Else
        .Range("Amtwords").Value = RstInv!ContractTerm & " " & RstInv!Amtwords & ""
        End If
        
        .Range("CountryOrigin").Value = RstInv!CountryOrigin & ""
        '.Range("lcNo").Value = RstInv!lcNo & ""
        .Range("Loading").Value = RstInv!Loading & ""
        .Range("FinalDestn").Value = RstInv!FinalDestn & " (" & RstInv!country & " )" '        .Range("VesFlightNo").Value = RstInv!VesFlightNo & ""
        .Range("DisCharge").Value = RstInv!DisCharge & ""
        .Range("Receipt").Value = RstInv!Receipt & ""
        .Range("ContractTerm").Value = RstInv!ContractTerm & "" + " - " + " " + UCase(RstInv!Currency & "")
        .Range("paymentterms").Value = RstInv!paymentTerm & ""
        .Range("UnitQty").Value = "(" & UCase(RstInv!UnitQty & "") & ")"
        .Range("CurrUnit").Value = UCase(RstInv!Currency & "")
        .Range("CurrUnit1").Value = UCase(RstInv!Currency & "") + "/ " + UCase(RstInv!ContractTerm & "")
        .Range("country").Value = RstInv!country & ""
'        .Range("styleno2").Value = strStyleNo
     '   .Range("styleno2").Value = RstInv!buyord
'        .Range("styleno2").Value = RstInv!eono
        ' .Range("J43").Value = RstInv!Freight
         If RstInv!ContractTerm = "FOB" And RstInv!Freight > 0 Then
            .Range("FreightAdd").Value = "Freight"
            '.Range("CommPerc").Value = RstInv!PercComm
            .Range("FreightAmt").Value = RstInv!Freight
            Else
            .Range("Freight").Value = "Freight"
            .Range("FreightAmt1").Value = RstInv!Freight
         End If
         
         If RstInv!Freight = 0 Then
         .Range("FreightAdd").Value = " "
         .Range("FreightAmt").Value = " "
         .Range("Freight").Value = " "
         .Range("FreightAmt1").Value = " "
         End If
         
       .Range("F27").Value = "Bank AD Code:-" + " " + RstInv!bankdealerno & ""
       
       
       If RstInv!bankdealerno = "0240028" Then
       .Range("I27") = "A/C No.- 0348201003010"
       End If
       
               
       If RstInv!bankdealerno = "0004079-3480006" Then
       .Range("I27") = "A/C No.- 30124043655"
       End If
       
        If RstInv!bankdealerno = "0240028" Then
       .Range("F24") = "BANK :- CANARA BANK, FRUIT & VEGETABLE MARKET"
       .Range("F25") = "               INDL. AREA, OKHLA, NEW DELHI-110020"
       .Range("F26") = "Swift Code- CNRBINBBDDO IBAN No.- DE41500700100953458710"
       End If
       
       If RstInv!bankdealerno = "0004079-3480006" Then
       .Range("F24") = "BANK :- STATE BANK OF INDIA, SME BRANCH, "
       .Range("F25") = "FIRST INDIA PLACE, VATIKA, MG ROAD, GURGAON"
       .Range("F26") = "Swift Code- SBININBB738 IBAN No.- "
       End If
             
      ' if RstInv!bankdealerno =240028
       ' .Range("exrate").Value = UCase(RstInv!Currency & "   1.00  =" & "  RS. " & RstInv!rs)
        '.Range("inr").Value = RstInv!fobvalue
''        .Range("OurRef").Value = RstInv!OurRef & ""
  '   .CurrRow = .Range("itemdesc").Rows
   '    .Activate
'        While Not RstInv.EOF
'            .Cells(CurrRow, cDesc) = RstInv!ItemDesc & ""
'            CurrRow = CurrRow + 1
'            RstInv.MoveNext
'        Wend
       ' .Range("itemdesc").Value = RstInv!itemdesc & ""
        CurrRow = .Range("styleno").Row
        .Activate
        While Not RstInv.EOF
        
            .Range("styleno").Select
            .Range("styleno").EntireRow.Insert
     .Cells(CurrRow, cstyleno) = RstInv!styleno & ""
        '    .Cells(CurrRow, cDesc) = RstInv!ItemDesc & ""
''  changed by puru dated 13/07/2005
     '       .Cells(CurrRow, "C") = RstInv!eono & ""
     '       .Range("B & currrow $").Left
            .Cells(CurrRow, cDesc) = RstInv!ItemDesc & ""
        '    .Cells(CurrRow, cstyleno) = RstInv!styleno & ""
            .Cells(CurrRow, "F") = RstInv!Category & ""
'            .Cells(CurrRow, cHsCode) = RstInv!HSCode & ""
            .Cells(CurrRow, cUnits) = RstInv!Quantity & ""
            TotQty = TotQty + Val(RstInv!Quantity & "")
            .Cells(CurrRow, cPrice) = RstInv!Rate & ""
            .Cells(CurrRow, cAmt) = RstInv!Amount & ""
            TotalAmt = TotalAmt + RstInv!Amount & ""
'            ExchRate = RstInv!rs & ""
            shipterms = RstInv!ContractTerm & ""
'            Amtwords = RstInv!Amtwords & ""
            CurrRow = CurrRow + 1
      '      .Range("totalamt").Value = RstInv!invval
            RstInv.MoveNext
        Wend
         RstInv.MoveFirst
        .Range("Discount").Value = ""
        .Range("DiscPercent").Value = ""
        .Range("DiscAmt").Value = ""
        .Range("Commission").Value = ""
        .Range("CommPerc").Value = ""
        .Range("CommAmt").Value = ""
        .Range("othcharges").Value = ""
        If RstInv!Discount < 0 Then
            .Range("discount").Value = "Less Discount"
            .Range("discpercent").Value = Str(RstInv!PercDisc) + "%"
            .Range("discamt").Value = RstInv!Discount
        End If
                    
        If RstInv!Discount = 0 Then
        .Range("discount").Value = " "
        .Range("discpercent").Value = " "
        .Range("discamt").Value = " "
        End If
        
        If RstInv!Commission > 0 Then
            .Range("commission").Value = "Commission"
            .Range("commperc").Value = Str(RstInv!PercComm) + "%"
            .Range("commamt").Value = RstInv!Commission * -1
        End If
        
        If RstInv!Commission = 0 Then
        .Range("commission").Value = " "
        .Range("commperc").Value = " "
        .Range("commamt").Value = " "
        End If
                                
        If RstInv!othercharge > 0 Then
            .Range("othcharges").Value = " Other Charges"
            .Range("othchargesamt").Value = RstInv!othercharge
        End If
        
        If RstInv!othercharge = 0 Then
        .Range("othcharges").Value = " "
        .Range("othchargesamt").Value = " "
        End If
        
        If RstInv!ContractTerm = "FOB" And RstInv!insurence > 0 Then
        .Range("InsuranceAdd").Value = "Insurance"
        .Range("InsAmt").Value = RstInv!insurence
        Else
        .Range("Insurance").Value = "Insurance"
        .Range("InsAmt1").Value = RstInv!insurence
        End If
       
        If RstInv!insurence = 0 Then
        .Range("InsuranceAdd").Value = " "
        .Range("InsAmt").Value = " "
        .Range("Insurance").Value = " "
        .Range("InsAmt1").Value = " "
        End If
        
''        .Cells(CurrRow + 1, cUnits) = TotQty
'''        .Cells(CurrRow + 1, cUnits) = TotQty
'''        dozen = "(" + Format(Val(TotQty / 12), "#0.00") + " " + "Dozens)"
'''        .Cells(CurrRow + 2, cUnits) = dozen
'''        .Cells(CurrRow, cAmt) = TotalAmt
''        .Cells(CurrRow + 1, cAmt) = TotalAmt
''        TotalAmtRs = TotalAmt * ExchRate
''        .Cells(CurrRow + 2, cAmt) = TotalAmtRs
''        .Cells(CurrRow + 2, cPrice) = UCase(shipterms) + " " + "INR"
''        .Range("TotalAmt").Value = TotalAmt
        AmtRsWords = ToWords(TotalAmtRs, "Rs. ", "Paise")
        CurrRow = .Range("InitMarks").Row
        .Range("TotalQty").Value = TotQty
                If RstMarks.RecordCount Then
            For i = 0 To 15
                If RstMarks.Fields("Marks" & CStr(i + 1)) & "" <> "" Then
                    .Cells(CurrRow, cMarks) = RstMarks.Fields("Marks" & CStr(i + 1)) & ""
'                    While Not RstInv.EOF
'                        .Range("itemdesc").Select
'                        .Cells(CurrRow, cDesc) = RstInv!ItemDesc & ""
                        CurrRow = CurrRow + 1
'                        RstInv.MoveNext
'                    Wend
                End If
            Next i
            summrow = .Range("itemdesc").Row
            .Activate
'            RstInv.Open
            RstInv.MoveFirst
''            While Not RstInv.EOF
              '  .Range("itemdesc").Select
             '   .Cells(summrow, cDesc) = RstInv!ItemDesc & ""
''                summrow = summrow + 1
''                RstInv.MoveNext
''            Wend
        End If
        RstMarks.Close
        ' For displaying Gross wt & net wt
        Set RstPackListHdr = Nothing
        Set RstPackListHdr = New ADODB.Recordset
        If RstPackListHdr.State = adStateOpen Then RstPackListHdr.Close
            RstPackListHdr.Open "Select * from Userpacklisthdr", ReportDB, adOpenKeyset, adLockReadOnly
            If RstPackListHdr.RecordCount Then
                RstPackListHdr.MoveFirst
                 .Range("grosswt").Value = RstPackListHdr!grosswt
                 .Range("netwt").Value = RstPackListHdr!netwt
                 .Range("pkg").Value = RstPackListHdr!totalcarton
            End If
        
'       .Range("AmtWordsRs").Value = AmtRsWords
'       .Range("TotalINR").Value = TotalAmtRs
'       .Range("TotalFC").Value = TotalAmt
'       .Range("amtwords").Value = Amtwords
    End With
    
End If

Exit Sub
ErrorProc:
    MsgBox Err.Number & vbCrLf & Err.Description
    Resume Next
End Sub

'Added on 05/08/2002 Avadhoot
Public Sub AddDirSep(strPathName As String)
    If Right(Trim(strPathName), Len(gstrSEP_URLDIR)) <> gstrSEP_URLDIR And _
       Right(Trim(strPathName), Len(gstrSEP_DIR)) <> gstrSEP_DIR Then
        strPathName = RTrim$(strPathName) & gstrSEP_DIR
    End If
End Sub

'Added on 05/08/2002 Avadhoot
Public Function StripTerminator(ByVal strString As String) As String
    Dim intZeroPos As Integer

    intZeroPos = InStr(strString, Chr$(0))
    If intZeroPos > 0 Then
        StripTerminator = Left$(strString, intZeroPos - 1)
    Else
        StripTerminator = strString
    End If
End Function

'Added on 05/08/2002 Avadhoot
Public Function GetWindowsDir() As String
    Dim strBuf As String

    strBuf = Space$(gintMAX_SIZE)

    '
    'Get the windows directory and then trim the buffer to the exact length
    'returned and add a dir sep (backslash) if the API didn't return one
    '
    If GetWindowsDirectory(strBuf, gintMAX_SIZE) > 0 Then
        strBuf = StripTerminator$(strBuf)
        AddDirSep strBuf

        GetWindowsDir = strBuf
    Else
        GetWindowsDir = vbNullString
    End If
End Function

Public Function ToWords(mrupees As Double, mcurrency As String, mfraction As String) As String
'On Error GoTo Err_Proc
Dim i As Double
Dim k As Double
Dim X As String, Y As String
Dim digitstr(1 To 20)
digitstr(1) = " One"
digitstr(2) = " Two"
digitstr(3) = " Three"
digitstr(4) = " Four"
digitstr(5) = " Five"
digitstr(6) = " Six"
digitstr(7) = " Seven"
digitstr(8) = " Eight"
digitstr(9) = " Nine"
digitstr(10) = " Ten"
digitstr(11) = " Eleven"
digitstr(12) = " Twelve"
digitstr(13) = " Thirteen"
digitstr(14) = " Fourteen"
digitstr(15) = " Fifteen"
digitstr(16) = " Sixteen"
digitstr(17) = " Seventeen"
digitstr(18) = " Eighteen"
digitstr(19) = " Nineteen"

i = mrupees
X = IIf(i >= 1, Trim(mcurrency), Trim(mfraction))

Do While i > 0
    If i < 1 Then
           X = X + IIf(X = Trim(mfraction), " ", " and " + Trim(mfraction))
           k = i * 100 + 0.5
           Y = " "
           i = 0
      ElseIf i = 1 Or i < 100 Then
            k = i
            Y = " "
            i = i - Int(i)
      ElseIf i >= 100 And i < 1000 Then
            k = i / 100
            Y = " Hundred"
            i = i - Int(i / 100) * 100
      ElseIf i >= 1000 And i < 100000 Then
            k = i / 1000
            Y = " Thousand"
            i = i - Int(i / 1000) * 1000
    ElseIf i >= 100000 And i < 10000000 Then
            k = i / 100000
            Y = " Lakh"
            i = i - Int(i / 100000) * 100000
    Else
            k = i / 10000000
            Y = " Crore"
            i = i - Int(i / 10000000) * 10000000
     End If
     k = Int(k)
     Do While k > 0
            If k < 20 Then
                X = X + digitstr(k)
            ElseIf k >= 20 And k < 30 Then
                X = X + " Twenty"
            ElseIf k >= 30 And k < 40 Then
                X = X + " Thirty"
            ElseIf k >= 40 And k < 50 Then
                X = X + " Forty"
            ElseIf k >= 50 And k < 60 Then
                X = X + " Fifty"
            ElseIf k >= 60 And k < 70 Then
                X = X + " Sixty"
            ElseIf k >= 70 And k < 80 Then
                 X = X + " Seventy"
            ElseIf k >= 80 And k < 90 Then
                 X = X + " Eighty"
            ElseIf k >= 90 Then
                 X = X + " Ninety"
         End If
                            
         k = IIf(k > 20, k - Int(k / 10) * 10, 0)
        Loop
         X = X + Y
       Loop
       ToWords = X + " Only"
                      
Exit Function
'Err_Proc:
'    ObjErrhandler.LogError "ToWords"
'    Resume Next
End Function



INQUEST-PP=macro
