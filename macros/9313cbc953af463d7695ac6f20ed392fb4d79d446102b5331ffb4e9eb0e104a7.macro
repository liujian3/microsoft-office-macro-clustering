Attribute VB_Name = "Mod1Extenso"
'"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
'" FUN|fffd||fffd|O:        fExtenso    (Spell number in Portuguese)
'"
'" AUTOR & DATA:  FCO ORLANDO MAGALH|fffd|ES FILHO  07 Nov 2002
'"                Microsoft MVP - Excel
'"                Santa Quit|fffd|ria-Ce - Brazil
'"
'" CONTATO:       orlando@cpap.com.br
'" WEB SITE:      http://cpap.com.br/orlando/
'"
'" DESCRI|fffd||fffd|O:     Escreve por extenso em portugu|fffd|s qualquer n|fffd|mero cardinal com
'"                ou sem fra|fffd||fffd|o com ou sem unidade masculina ou feminina. A par-
'"                te fracion|fffd|ria, se houver, pode ser descrita de tr|fffd|s maneiras.
'"
'" ARGUMENTOS:    Num - O n|fffd|mero cardinal com ou sem fra|fffd||fffd|o a descrever;
'"                  Maior n|fffd|mero permitido: 1 trilh|fffd|o menos 0.01 (999.999.999.999,99);
'"                  Menor fra|fffd||fffd|o sens|fffd|vel: 1 trilion|fffd|simo (0,000.000.000.001).
'"                Fra|fffd|Tipo - 1, 2, 3, 4 ou 5 para as maneiras de ler(descrever) a fra|fffd||fffd|o
'"                  (Opcional - 3 padr|fffd|o ou 1 se houver UndNomeSing)
'"                  1 - L|fffd| a fra|fffd||fffd|o em centavos. Ideal para Moeda;
'"                  2 - L|fffd| a v|fffd|rgula decimal, cada zero e o n|fffd|mero restante como
'"                    inteiro. Ideal para percentual;
'"                  3 - L|fffd| a fra|fffd||fffd|o em d|fffd|cimos at|fffd| bilion|fffd|simos. Ideal para n|fffd|mero puro;
'"                  4 - N|fffd|o l|fffd| a fra|fffd||fffd|o por extenso, mas a escreve como uma fra|fffd||fffd|o  com
'"                    denominador de 100, 1000, 1000000... Ideal para  moeda  quando em
'"                    fra|fffd||fffd|es menores do que um centavo;
'"                  5 - L|fffd| a fra|fffd||fffd|o em c|fffd|ntimos. Ideal para moeda Euro, mas centavos
'"                    tamb|fffd|m pode ser usado;
'"                UndNomeSing - Nome da unidade no singular (Opcional - A aus|fffd|ncia
'"                  indica n|fffd|mero puro);
'"                UndNomePlur - Nome da unidade no plural (Opcional - Na aus|fffd|ncia a
'"                  pluraliza|fffd||fffd|o ser|fffd| feita automaticamente a partir de UndNomeSing);
'"                UndMasc - Indica o g|fffd|nero da unidade: Verdadeiro (masculino) ou Falso
'"                  (feminino) (Opcional - Padr|fffd|o Verdadeiro (masculino));
'"                UmMil - Escreve 1.000 completo sem omitir 'um': Verdadeiro (Sim, 'um mil')
'"                  ou Falso (N|fffd|o, 'mil') (Opcional - Padr|fffd|o Verdadeiro (Completo));
'"                VirgEntrMilh - Indica intercala|fffd||fffd|o de v|fffd|rgula entre milhares: Verdadeiro (Sim)
'"                  ou Falso (N|fffd|o) (Opcional - Padr|fffd|o Falso (N|fffd|o intercala));
'"                CaixaAlta - Formata letras em mai|fffd|scalas/min|fffd|sculas (Opcional - Padr|fffd|o 1):
'"                  1 - todas min|fffd|scalas; 2 - Senten|fffd|a inteira (S|fffd| a 1|fffd| mai|fffd|scula);
'"                  3 - Mai|fffd|scala/min|fffd|sculas (1|fffd| Mai|fffd|scula em Cada Palavra); 4 - TODAS MAI|fffd|SCULAS.
'"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Option Explicit

Function fExtenso(Num As Double, Optional Fra|fffd|Tipo As Integer, Optional UndNomeSing As String, _
        Optional UndNomePlur As String, Optional UndMasc As Boolean = True, _
        Optional UmMil As Boolean = True, Optional VirgEntrMilh As Boolean = False, _
        Optional CaixaAlta As Long = 1) As String
    Dim ExtensInt As String
    Dim ExtensFrac As String
    Dim UndNome As String
    Dim FracNome As String
    Dim Signif As Long
    Dim NumText As String

    If Num > 999999999999.99 Or Num < 0 Then
        fExtenso = "Erro! (Valores v|fffd|lidos: >=0 e < 1 trilh|fffd|o)"
        Exit Function
    End If

    'Preparando nome da unidade, singular e plural
    If UndNomePlur = "" Then UndNomePlur = IIf(UndNomeSing = "", "", Pluralizar(UndNomeSing))
    'Se a fun|fffd||fffd|o Pluralizar falhar palavras estrangeiras ou em exce|fffd||fffd|es portuguesas, o argumento UndNomePlur pode ser usado.

    'Extenso parte inteira
    ExtensInt = fExtensoInt(Int(CDec(Num)), UndMasc, UmMil, VirgEntrMilh)

    'Extenso parte fracion|fffd|ria
    If Fra|fffd|Tipo = 0 And UndNomeSing = "" Then Fra|fffd|Tipo = 3
    If Fra|fffd|Tipo = 0 And UndNomeSing <> "" Then Fra|fffd|Tipo = 1
    Select Case Fra|fffd|Tipo
    Case 1, 5   'L|fffd| fra|fffd||fffd|o em centavos ou c|fffd|ntimos. Ideal para Moeda
        Num = Format(Num, "0.00") * 1   'Round(Num,2)
        ExtensFrac = fExtensoInt((Num - Int(CDec(Num))) * 100, True, UmMil, VirgEntrMilh)
        If ExtensInt = "" And ExtensFrac = "" Then ExtensInt = "zero"

        'Nome da unidade no singular ou plural
        UndNome = IIf(Num < 1, IIf(Num = 0, " " & UndNomePlur, ""), IIf(UndNomeSing = "" Or Right(ExtensInt, 1) = " ", "", " ") & IIf(Int(CDec(Num)) = 1, UndNomeSing, UndNomePlur) & IIf(Num = Int(CDec(Num)), "", " e "))
        'Nome da fra|fffd||fffd|o no singular ou plural
        FracNome = IIf(Num = Int(CDec(Num)), "", IIf(Int(CDec(Num * 100)) - Int(CDec(Num)) * 100 = 1, IIf(Fra|fffd|Tipo = 5, " c|fffd|ntimo", " centavo"), IIf(Fra|fffd|Tipo = 5, " c|fffd|ntimos", " centavos")))

        fExtenso = ExtensInt & UndNome & ExtensFrac & FracNome

    Case 2    'L|fffd| a v|fffd|rgula decimal, cada zero e o n|fffd|mero restante como inteiro. Ideal para percentual.
        ExtensFrac = Num - Int(CDec(Num))
        If ExtensFrac = 0 Then
            fExtenso = ExtensInt
        Else
            ExtensFrac = Format(ExtensFrac, "0.############")
            ExtensFrac = Mid(ExtensFrac, 3, 15)
            fExtenso = IIf(ExtensInt = "", "zero", ExtensInt) & " v|fffd|rgula"
            Do While Left(ExtensFrac, 1) = "0"
                fExtenso = fExtenso & " zero"
                ExtensFrac = Mid(ExtensFrac, 2, 15)
            Loop
            fExtenso = fExtenso & " " & fExtensoInt(ExtensFrac * 1, UndMasc, UmMil, VirgEntrMilh)
        End If

        If fExtenso = "" Then fExtenso = "zero"

        fExtenso = fExtenso & IIf(UndNomeSing <> "", " ", "") & IIf(Num = 1, UndNomeSing, UndNomePlur)

    Case 3    'L|fffd| a fra|fffd||fffd|o de d|fffd|cimo a bilion|fffd|simo. Ideal para n|fffd|mero puro.
        ExtensFrac = Num - Int(CDec(Num))
        If ExtensFrac = 0 Then
            ExtensFrac = ""
        Else
            ExtensFrac = Format(ExtensFrac, "0.############")
            Signif = Len(ExtensFrac) - 2
            If Signif > 3 And Signif <> 6 And Signif <> 9 And Signif <> 12 Then Signif = Int(CDec(Signif / 3)) * 3 + 3
            If Signif > 0 Then
                ExtensFrac = Format(ExtensFrac, "0.000000000000")
                ExtensFrac = fExtensoInt(Mid(ExtensFrac, 3, Signif) * 1, True, UmMil, VirgEntrMilh)
                FracNome = Choose(Signif, "d|fffd|cimo", "cent|fffd|simo", "mil|fffd|simo", , , "milion|fffd|simo", , , "bilion|fffd|simo", , , "trilion|fffd|simo")
                FracNome = " " & FracNome & IIf(ExtensFrac = "um", "", "s")
            Else
                ExtensFrac = ""
            End If
        End If

        If ExtensInt = "" And ExtensFrac = "" Then ExtensInt = "zero"

        If UndNomeSing = "" Then
            fExtenso = ExtensInt & IIf(ExtensInt <> "" And ExtensFrac <> "", ", e ", "") & ExtensFrac & FracNome
        Else
            'Nome da unidade no singular ou plural
            UndNome = IIf(Num < 1, IIf(Num = 0, " " & UndNomePlur, ""), IIf(UndNomeSing = "" Or Right(ExtensInt, 1) = " ", "", " ") & IIf(Int(CDec(Num)) = 1, UndNomeSing, UndNomePlur) & IIf(Num = Int(CDec(Num)), "", " e "))
            'Nome da fra|fffd||fffd|o no singular ou plural
            FracNome = IIf(Num = Int(CDec(Num)), "", FracNome & " de " & UndNomeSing)

            fExtenso = ExtensInt & UndNome & ExtensFrac & FracNome
        End If

    Case 4    'N|fffd|o l|fffd| a fra|fffd||fffd|o mas escreve como fra|fffd||fffd|o com um denominador de 100, 1000, 1000000... Ideal para moeda com fra|fffd||fffd|o de mil|fffd|simo
        ExtensFrac = Num - Int(CDec(Num))
        If ExtensFrac = 0 Then
            ExtensFrac = "nenhum/100"
        Else
            ExtensFrac = Format(ExtensFrac, "0.############")
            Signif = Len(ExtensFrac) - 2
            If Signif > 3 And Signif <> 6 And Signif <> 9 And Signif <> 12 Then Signif = Int(CDec(Signif / 3)) * 3 + 3
            If Signif > 1 Then
                ExtensFrac = (Num - Int(CDec(Num))) * 10 ^ Signif
                ExtensFrac = ExtensFrac & "/" & 10 ^ Signif
            Else
                ExtensFrac = (Num - Int(CDec(Num))) * 10 ^ 2
                ExtensFrac = ExtensFrac & "/100"
            End If
        End If

        If ExtensInt = "" Then ExtensInt = "zero"

        'Nome da unidade no singular ou plural
        UndNome = IIf(Int(CDec(Num)) = 1, UndNomeSing, UndNomePlur)

        fExtenso = ExtensInt & " " & UndNome & " e " & ExtensFrac
    End Select

    Select Case CaixaAlta
    Case 1
        fExtenso = LCase(fExtenso)
    Case 2
        fExtenso = UCase(Left(fExtenso, 1)) & Mid(fExtenso, 2)
    Case 3
        fExtenso = StrConv(fExtenso, vbProperCase)
        fExtenso = MyReplace(fExtenso, " E ", " e ")
    Case 4
        fExtenso = StrConv(fExtenso, vbUpperCase)
    End Select

    'Preservar caixa alta de letra antes de ponto em UndNome
    Dim lPos As Long
    Dim lPos1 As Long
    Do While InStr(lPos + 1, UndNome, ".") > 1
        lPos = InStr(lPos + 1, UndNome, ".")
        lPos1 = InStr(lPos1 + 1, fExtenso, ".")
        fExtenso = Left(fExtenso, lPos1 - 2) & Mid(UndNome, lPos - 1, 1) & Mid(fExtenso, lPos1)
    Loop
End Function

Private Function fExtensoInt(Num As Double, UndMasc As Boolean, UmMil As Boolean, VirgEntrMilh As Boolean) As String
'Gram|fffd|tica portuguesa:
'Regra Geral: N|fffd|o se intercala a conjun|fffd||fffd|o 'e' e nem v|fffd|rgula entre posi|fffd||fffd|es de milhar.
'Exce|fffd||fffd|o: Se a milhar posterior for menor que 100 ou for centena inteira (100,200,300...)
'Alguns gram|fffd|ticos n|fffd|o aceitam essa exce|fffd||fffd|o e outros j|fffd| aceitam a v|fffd|rgula.
'A vari|fffd|vel ConjExc ativa/desativa a exce|fffd||fffd|o
'A vari|fffd|vel VirgEntrMilh usa v|fffd|rgula entre milhares

   Dim NumText As String
   Dim Ce As String
   Dim Ma As String
   Dim M|fffd| As String
   Dim Bi As String
   Dim f As String
   Dim ConjExc As Boolean
   ConjExc = True
   If VirgEntrMilh Then ConjExc = False

   If Num = 0 Then
      fExtensoInt = ""
      Exit Function
   End If

   NumText = Format(Num, "000,000,000,000")

   '1|fffd| Posi|fffd||fffd|o de milhar, Centenas
   Ce = Mid(NumText, 13, 3)
   '2|fffd| Posi|fffd||fffd|o de milhar, Milhares
   Ma = Mid(NumText, 9, 3)
   '3|fffd| Posi|fffd||fffd|o de milhar, Milh|fffd|es
   M|fffd| = Mid(NumText, 5, 3)
   '4|fffd| Posi|fffd||fffd|o de milhar, Bilh|fffd|es
   Bi = Mid(NumText, 1, 3)

   f = fMilharText(Bi, UndMasc) & IIf(Bi > 0, IIf(Bi > 1, " bilh|fffd|es", " bilh|fffd|o"), "")

   f = f & IIf(VirgEntrMilh And Bi > 0 And M|fffd| > 0, ", ", IIf(Bi > 0 And M|fffd| > 0, " ", ""))
   f = f & IIf(ConjExc And Bi > 0 And M|fffd| > 0 And (M|fffd| < 100 Or Right(M|fffd|, 2) = "00"), "e ", "")

   f = f & fMilharText(M|fffd|, UndMasc) & IIf(M|fffd| > 0, IIf(M|fffd| > 1, " milh|fffd|es", " milh|fffd|o"), "")

   f = f & IIf(VirgEntrMilh And Bi + M|fffd| > 0 And Ma > 0, ", ", IIf(Bi + M|fffd| > 0 And Ma > 0, " ", ""))
   f = f & IIf(ConjExc And Bi + M|fffd| > 0 And Ma > 0 And (Ma < 100 Or Right(Ma, 2) = "00"), "e ", "")

   f = f & fMilharText(Ma, UndMasc) & IIf(Ma > 0, IIf(Ma > 1, " mil", " mil"), "")
   If Not UmMil Then If f = "um mil" Then f = "mil"  'Omitir 'um' em 'um mil'

   f = f & IIf(VirgEntrMilh And Bi + M|fffd| + Ma > 0 And Ce > 0, ", ", IIf(Bi + M|fffd| + Ma > 0 And Ce > 0, " ", ""))
   f = f & IIf(ConjExc And Bi + M|fffd| + Ma > 0 And Ce > 0 And (Ce < 100 Or Right(Ce, 2) = "00"), "e ", "")

   f = f & fMilharText(Ce, UndMasc) & IIf(Ce > 0, ",", "")

   f = IIf(Right(f, 1) = ",", Mid(f, 1, Len(f) - 1), f)
   f = IIf(Right(f, 2) = "|fffd|o", f & " de", f)
   f = IIf(Right(f, 3) = "|fffd|es", f & " de", f)
   fExtensoInt = f
End Function

Private Function fMilharText(NumText As String, UndMasc As Boolean)
'Gram|fffd|tica portuguesa:
'Regra Geral: Intercala-se a conjun|fffd||fffd|o 'e' entre centenas, dezenas e unidades

   Dim UndText As String
   Dim DezenaText As String
   Dim CentenaText As String
   Const ConjDez_Un = " e "   'Conjun|fffd||fffd|o entre Dezena e Unidade
   Const ConjCen_Dez = " e "   'Conjun|fffd||fffd|o entre Centena e Unidade

   '  Unidade texto
   If Mid(NumText, 2, 1) <> "1" Then
      UndText = Choose(Mid(NumText, 3, 1) + 1, "", IIf(UndMasc, "um", "uma"), _
            IIf(UndMasc, "dois", "duas"), "tr|fffd|s", "quatro", "cinco", "seis", _
            "sete", "oito", "nove")
   Else
      UndText = ""
   End If

   'Dezena texto
   If Mid(NumText, 2, 1) <> "1" Then
      DezenaText = Choose(Mid(NumText, 2, 1) + 1, "", "dez", "vinte", _
            "trinta", "quarenta", "cinquenta", "sessenta", "setenta", _
            "oitenta", "noventa")
   Else
      DezenaText = Choose(Mid(NumText, 3, 1) + 1, "dez", "onze", _
            "doze", "treze", "quatorze", "quinze", "dezesseis", _
            "dezessete", "dezoito", "dezenove")
   End If

   'Centena texto
   If UndMasc Then
      CentenaText = Choose(Mid(NumText, 1, 1) + 1, "", "cento", "duzentos", _
            "trezentos", "quatrocentos", "quinhentos", "seiscentos", _
            "setecentos", "oitocentos", "novecentos")
   Else
      CentenaText = Choose(Mid(NumText, 1, 1) + 1, "", "cento", "duzentas", _
            "trezentas", "quatrocentas", "quinhentas", "seiscentas", _
            "setecentas", "oitocentas", "novecentas")
   End If
   If Mid(NumText, 1, 1) = "1" And Mid(NumText, 2, 2) = "00" Then CentenaText = "cem"

   'Milhar texto
   fMilharText = CentenaText & IIf(Mid(NumText, 2, 2) * 1 > 0 And CentenaText <> "", ConjCen_Dez, "") _
         & DezenaText & IIf(Mid(NumText, 2, 2) * 1 <= 19 Or Right(NumText, 1) = "0", "", ConjDez_Un) _
         & UndText
End Function

Function Pluralizar(Sing As String) As String
   Dim e As String
   
   Dim IsLCase As Boolean
   
   IsLCase = Right(Sing, 1) = LCase(Right(Sing, 1))
   
   'Regra geral:
   Pluralizar = IIf(Sing = "", "", Sing & IIf(IsLCase, "s", "S"))

   'Exce|fffd||fffd|es: (Quase todas)
   ' Nomes terminados em al, el, ol, ul, il
   e = LCase(Right(Sing, 2))
   If e = "al" Or e = "el" Or e = "ol" Or e = "ul" Or e = "il" Then Pluralizar = Left(Sing, Len(Sing) - 1) & IIf(IsLCase, "is", "IS")
   'Nomes terminados em il
   If e = "il" Then Pluralizar = Left(Sing, Len(Sing) - 2) & IIf(IsLCase, "is", "IS")
   ' Nomes terminados em r, s, z
   e = LCase(Right(Sing, 1))
   If e = "r" Or e = "s" Or e = "z" Then Pluralizar = Sing & IIf(IsLCase, "es", "ES")
   ' Nomes terminados em m
   If e = "m" Then Pluralizar = Left(Sing, Len(Sing) - 1) & IIf(IsLCase, "ns", "NS")
   ' Nomes terminados em x
   If e = "x" Then Pluralizar = Sing
End Function

Private Function MyReplace(vText As String, vTxtFind As String, vTxtRep As String)
'Word 6.0 VBA doesn't have Replace function
    Dim lPos As Long
    lPos = 1 - Len(vTxtRep)
vStart:
    lPos = InStr(lPos + Len(vTxtRep), vText, vTxtFind)
    If lPos = 0 Or vTxtFind = "" Then
        MyReplace = vText
        Exit Function
    End If
    vText = Left(vText, lPos - 1) & vTxtRep & Right(vText, Len(vText) - lPos - Len(vTxtFind) + 1)
    GoTo vStart
End Function


Attribute VB_Name = "M|fffd|d1"
Public DadoIni As Range
Public NumEmExib As Integer
Public NumRng As Range

Public WordObj As Object, WordObjDc As Object
Public DocPasta As String
Public DocDataSource As String
Public DocRegI As Single
Public DocRegF As Single
Public DirP As String: Public DirBD As String

Public Declare Function FindWindowA Lib "user32" (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Public Declare Function SetForegroundWindow Lib "user32" (ByVal hWnd As Long) As Long
Public AppDataSourceObj As Object

Public Sub EditarDados()
    NomeArqHist = "Exp_plan.hst"
    Set DadoIni = Workbooks("cpap_exp.mac").Excel4MacroSheets(1).Range("DadoIni")
    Application.ScreenUpdating = False
    DocRegF = DadoIni(13).Value
    DocRegI = DadoIni(14).Value
    Set NumRng = ActiveWorkbook.Sheets(1).Range(Cells(2, 1), Cells(DocRegF + 1, 1))
    DirP = ThisWorkbook.Path: DirBD = Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirBD").Value)
    If MyOpenFile(DirBD & "\banco\" & NomeArqHist, True) Then
        ActiveWindow.Close False
    End If
    'Ajuda
    i = InStr(1, DadoIni(2).Value, "!"): bHtmlHelp = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("bHtmlHelp").Value
    'Com o proj. proteg. essa instru|fffd||fffd|o falha. A solu|fffd||fffd|o foi colocar ..\cpap.hlp nas propriedades e fazer o diret|fffd|rio do cpap ativo.
    'Application.VBE.VBProjects("VBAProjectCxIdent").HelpFile = Left(DadoIni(2).Value, I - 1)
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDrive ThisWorkbook.Path
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDir ThisWorkbook.Path Else Application.Run "CPAP_EX8.MAC!DirectoryVBA", ThisWorkbook.Path, False
    Application.Workbooks(DadoIni(12).Value).Activate
    UserFormEdDad.HelpContextID = Right(DadoIni(2).Value, Len(DadoIni(2).Value) - i)

    UserFormEdDad.Tipo_Cb.Value = DadoIni(3).Value
    UserFormEdDad.Seq_Cb.Value = DadoIni(4).Value
    UserFormEdDad.DataVenc_Cb.Value = DadoIni(5).Value
    UserFormEdDad.DiaVenc_Cb.Value = DadoIni(6).Value
    UserFormEdDad.M|fffd|sVenc_Cb.Value = DadoIni(7).Value
    UserFormEdDad.AnoVenc_Cb.Value = DadoIni(8).Value
    UserFormEdDad.Valor_Cb.Value = DadoIni(9).Value
    UserFormEdDad.Comuns_Cb.Value = DadoIni(10).Value
    UserFormEdDad.OcultarEntrada_ChB.Caption = IIf(DadoIni(11).Value <> "", DadoIni(11).Value, "Entrada")
    UserFormEdDad.OcultarEntrada_ChB.Enabled = DadoIni(11).Value <> ""
    vEnableEvents = True
    UserFormEdDad.OcultarValDoPlano_ChB.Value = True
    UserFormEdDad.OcultarEntrada_ChB.Value = DadoIni(11).Value <> "" And DocRegF > 2

    Application.GoTo Range("A1"), True
    Application.ActiveWorkbook.Sheets(1).Range(Cells(DocRegI + 1, 1 + 1), Cells(DocRegI + 1, 7 + 1)).Select
    '   Application.EnableEvents = True
    Application.ScreenUpdating = True
    Application.StatusBar = False
    UserFormEdDad.Salvar_Bt.SetFocus
    UserFormEdDad.Show
    DadoIni(1) = BotAcionado
    If FecharArq Then DadoIni(2) = "Fechar"
    If BotAcionado = 1 Or BotAcionado = 2 Then
        'Eliminar espa|fffd|os no final de textos
        Application.ScreenUpdating = False
        For Each Ctr In UserFormEdDad.Controls
            If Right(Ctr.Name, 2) = "Cb" Then Ctr.Value = RTrim(Ctr.Value)
        Next

        'Atualizar hist|fffd|rico
        If MyOpenFile(DirBD & "\banco\" & NomeArqHist, False) Then
            SalvarHist = False
            AtuHist "Tipo", UserFormEdDad.Tipo_Cb.Value, DadoIni(3).Value
            AtuHist "Seq", UserFormEdDad.Seq_Cb.Value, DadoIni(4).Value
            AtuHist "DataVenc", UserFormEdDad.DataVenc_Cb.Value, DadoIni(5).Value
            AtuHist "DiaVenc", UserFormEdDad.DiaVenc_Cb.Value, DadoIni(6).Value
            AtuHist "M|fffd|sVenc", UserFormEdDad.M|fffd|sVenc_Cb.Value, DadoIni(7).Value
            AtuHist "AnoVenc", UserFormEdDad.AnoVenc_Cb.Value, DadoIni(8).Value
            AtuHist "Valor", UserFormEdDad.Valor_Cb.Value, DadoIni(9).Value
            AtuHist "Comuns", UserFormEdDad.Comuns_Cb.Value, DadoIni(10).Value
            If SalvarHist Then SalvandoHist Else Workbooks(NomeArqHist).Close False
        End If

        'Transferindo dados
        DadoIni(13).Value = NumEmExib
        DadoIni(14).Value = DocRegI + 1 * UserFormEdDad.OcultarValDoPlano_ChB + 1 * UserFormEdDad.OcultarEntrada_ChB

        Application.ScreenUpdating = False
    End If
    Unload UserFormEdDad
    ThisWorkbook.Saved = True
End Sub

Sub SequenciarRegs()
    NumRng.ClearContents
    NumRng.Offset(0, 2).ClearContents
    NumEmExib = 0
    For Each C In NumRng
        'Numera e totaliza Regitros em exib
        If C.Height > 0 Then
            NumEmExib = NumEmExib + 1
            C.Value = NumEmExib
        End If
    Next

    For Each C In NumRng
        If UserFormEdDad.Seq|fffd|nica_ChB.Value Then
            'Seq|fffd||fffd|ncia |fffd|nica
            If C.Height > 0 Then
                q1 = q1 + 1
                C.Offset(0, 2).Value = "'" & q1 & "/" & NumEmExib
            End If
        Else
            'Sequenciar por tipo
            If C.Offset(0, 2) = "" And C.Height > 0 Then
                Tipo = C.Offset(0, 1).Value
                'Totaliza tipos
                q = 0
                For Each c1 In NumRng.Offset(0, 1)
                    If c1.Value = Tipo And c1.Height > 0 Then
                        q = q + 1
                    End If
                Next
                'Sequencia
                q1 = 0
                For Each c1 In NumRng.Offset(0, 1)
                    If c1.Value = Tipo And c1.Height > 0 Then
                        q1 = q1 + 1
                        c1.Offset(0, 1).Value = "'" & q1 & "/" & q
                        If q1 = q Then Exit For
                    End If
                Next
            End If
        End If
    Next
End Sub

Private Sub teste()
    AcionarDoc "Q:\Cpap\areceber", "gerar_bd.xls", 1, 19, "Q:\Cpap\cpap.hlp!50114115"
End Sub

Public Function AcionarDoc(DocPasta1 As String, DocDataSource1 As String, DocRegI1 As Single, DocRegF1 As Single, HelpCtxId As String)
    DocPasta = DocPasta1
    DocDataSource = DocDataSource1
    DocRegI = DocRegI1
    DocRegF = DocRegF1
    i = InStr(1, HelpCtxId, "!"): bHtmlHelp = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("bHtmlHelp").Value
    UserFormAbrDoc.HelpContextID = Right(HelpCtxId, Len(HelpCtxId) - i)
    If Not bHtmlHelp Then UserFormAbrDoc.Ajuda_Bt.HelpContextID = UserFormAbrDoc.HelpContextID
    BotAcionado = False
    UserFormAbrDoc.Show
    AcionarDoc = BotAcionado
    Unload UserFormAbrDoc
    On Error Resume Next
    Application.Workbooks("CpapDosf.mac").Close False
End Function

Sub OpenWordDoc(vDoc As String)
    DirP = ThisWorkbook.Path: DirBD = Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirBD").Value)
    'O controle de erro possibilita o uso de um objeto word j|fffd| criado e ainda aberto
    On Error GoTo ErrorHandler
    WordObj.Visible = False
    On Error GoTo ErrorHandlerFim
    With WordObj
        'Fecha um anterior para n|fffd|o dar conflito na abertura do banco de dados
        If .Documents.Count > 0 Then .ActiveDocument.Close False

        'Abrir primeiro o data source by code. Cpap em 2003 com o Word 2007 a conex|fffd|o com OpenDataSource falha na primeira tentativa em que o banco est|fffd| fechado, mas depois de aberto n|fffd|o. Talvez quest|fffd|o da compatibilidade. Reclama|fffd||fffd|o no FB
        MyWait 0.1
        If Not AppDataSourceObj Is Nothing Then QuitAppDataSourceObj    'Sempre um novo, se n|fffd|o falha
        If AppDataSourceObj Is Nothing Then
            GetAppDataSourceObj
            If Not AppDataSourceObj Is Nothing Then AppDataSourceObj.Workbooks.Open DocPasta & "\" & DocDataSource, 0, True    'ReadOnly tem vantagem porque se falhar neste aberto previamente pode ter sucesso no de abertura autom|fffd|tica principalmente em doc. Aproveitei fiz tudo ReadOnly
            AppDataSourceObj.Visible = True    'Se oculto ou mesmo minimizado, falha
            MyWait 0.1
        End If

        .Visible = True    'Aqui para ganhar foco, mas no 2007 com Vista e 7 ainda assim n|fffd|o pega foco, ent|fffd|o usar API. Reclama|fffd||fffd|o no FB
        If .Windows.Count > 0 Then
            App_hWnd = FindWindowA("OpusApp", .Windows(1).Caption & " - " & .Caption)
            If App_hWnd = 0 Then App_hWnd = FindWindowA("OpusApp", .Caption & " - " & .Windows(1).Caption)
        End If
        If App_hWnd = 0 Then App_hWnd = FindWindowA("OpusApp", .Caption)
        If App_hWnd = 0 Then App_hWnd = FindWindowA("OpusApp", vbNullString)
        If App_hWnd <> 0 Then SetForegroundWindow App_hWnd

        If LCase(Right(vDoc, 4)) = ".doc" Then
            .DisplayAlerts = -1
            Set WordObjDc = .Documents.Open(DocPasta & "\" & vDoc)
            If Val(.Version) > 12 Then If .ProtectedViewWindows.Count > 0 Then .ProtectedViewWindows(WordObjDc.Name).Edit    'No Excel 2010 em diante na configura|fffd||fffd|o de seguran|fffd|a padr|fffd|o doc aberto pela rede primeiro s|fffd|o exibidos ProtectedViewWindows.
            '.ActiveDocument.MailMerge.MainDocumentType = -1   'Remove a fonte de dados a|fffd| removeria o if abaixo
            If LCase(.ActiveDocument.MailMerge.DataSource.Name) <> LCase(DocPasta & "\" & DocDataSource) Then
                .ActiveDocument.MailMerge.OpenDataSource Name:=DocPasta & "\" & DocDataSource, ReadOnly:=True
            End If
        Else
            Set WordObjDc = .Documents.Add(Template:=DocPasta & "\" & vDoc)
            If Val(.Version) > 12 Then If .ProtectedViewWindows.Count > 0 Then .ProtectedViewWindows(WordObjDc.Name).Edit    'Idem
            .ChangeFileOpenDirectory DocPasta
            .ActiveDocument.MailMerge.MainDocumentType = 0   'wdFormLetters
            'If .WordBasic.MsgBox("Exibir op|fffd||fffd|es de tabelas?", "CPAP|fffd| - Tabela para Mesclar", 1) = -1 Then  'If Val(.Version) <= 9 Then 'Usei o alerta porque wdMergeSubTypeWord2000 |fffd|s vezes n|fffd|o link com banco aberto e abre outro Excel no Word 2007 em diante.
            If Val(.Version) <= 9 Or Val(.Version) >= 12 Then    'Na edi|fffd||fffd|o para Excel 2016 preferi eliminar o alerta e sempre exibir as op|fffd||fffd|es de tabelas, pois wdMergeSubTypeWord2000 s|fffd| funciona ok no 10 e 11.
                .ActiveDocument.MailMerge.OpenDataSource Name:=DocPasta & "\" & DocDataSource, Connection:="Database", ReadOnly:=True
            Else
                .ActiveDocument.MailMerge.OpenDataSource Name:=DocPasta & "\" & DocDataSource, Connection:="Database", ReadOnly:=True, SubType:=8   'wdMergeSubTypeWord2000
            End If
            Set objDocProps = .ActiveDocument.BuiltinDocumentProperties
            objDocProps("Title") = "Gerado a partir do Modelo: " & objDocProps("Title")
        End If
        AppDataSourceObj.WindowState = xlMinimized    'Se n|fffd|o minimizar, ao fechar o Word o AppDataSourceObj toma o foco do CPAP
        If App_hWnd <> 0 Then SetForegroundWindow App_hWnd

        .WindowState = 1
        .ActiveWindow.View.FullScreen = True
        .ActiveWindow.ActivePane.View.Zoom.Percentage = 55
        .ActiveDocument.MailMerge.ViewMailMergeFieldCodes = False    '9999998   'wdToggle
        .ActiveWindow.View.ShowFieldCodes = False
        .ActiveDocument.MailMerge.DataSource.ActiveRecord = DocRegI
        On Error Resume Next
        .ActiveDocument.Bookmarks("NomeEmpresa").Range.Text = Workbooks("cpap_pri.mac").Sheets(1).Range("NomeEmpr").Value
        CGC = Workbooks("cpap_pri.mac").Sheets(1).Range("CGCempr").Value
        CGC = IIf(CGC = "", " ", IIf(Len(CGC) < 15, "CPF N|fffd| ", "CNPJ N|fffd| ")) & CGC
        .ActiveDocument.Bookmarks("CGCEmpresa").Range.Text = CGC
        .ActiveDocument.Bookmarks("PracaCobranca").Range.Text = Workbooks("cpap_pri.mac").Sheets(1).Range("CidUF").Value
        .ActiveDocument.Bookmarks("EndEmpresa").Range.Text = Workbooks("cpap_pri.mac").Sheets(1).Range("EndEmpr").Value _
                                                           & " - CEP: " & Workbooks("cpap_pri.mac").Sheets(1).Range("CepEmpr").Value _
                                                           & " - " & Workbooks("cpap_pri.mac").Sheets(1).Range("CidUF").Value _
                                                           & " - Fone: " & Workbooks("cpap_pri.mac").Sheets(1).Range("FonEmpr").Value & "."

        .Options.MapPaperSize = False
        .Options.PrintBackground = False

        With .ActiveDocument.MailMerge
            .Destination = 1
            .MailAsAttachment = False
            .MailAddressFieldName = ""
            .MailSubject = ""
            .SuppressBlankLines = True
            .DataSource.FirstRecord = DocRegI
            .DataSource.LastRecord = DocRegF
            '           .Execute Pause:=True
        End With
        i = .Dialogs(676).Show
        .ActiveWindow.View.FullScreen = False
        .ActiveWindow.ActivePane.View.Zoom.Percentage = 65
        If .WordBasic.MsgBox("Fechar o Word?", 1) = -1 Then
            .Quit
            Set WordObj = Nothing
        Else
            If i = 0 Then
                .Selection.WholeStory
                .Selection.Fields.Update
                .Selection.HomeKey Unit:=6
            End If
        End If
        .ActiveDocument.Saved = True
    End With
    Exit Sub
ErrorHandler:
    Set WordObj = Nothing
    Set WordObj = CreateObject("Word.Application")
    Resume Next
ErrorHandlerFim:
    MsgBox Err.Description, vbCritical, "Conectando Banco de Dados - Erro " & Err.Number
End Sub

Sub GetAppDataSourceObj()
    Dim ExcelObj As Object                                  'As Excel.Application 'Melhor trabalhar com late biding, pois em alguma vers|fffd|es do Excel pode n|fffd|o ter todas propriedades
'Loop necess|fffd|rio para ter certeza de que o app |fffd| um novo, pois parece que, quando h|fffd|
'mais de um Excel instalado, isto n|fffd|o acontece na primeira tentativa. O Loop interno
'|fffd| para se assegurar de que objeto foi criado antes de chamar suas propriedades.
    Do
        Do
            i = i + 1
            If i > 10 Then
                If MsgBox(IIf(IsPortg, "N|fffd|o foi poss|fffd|vel criar um novo objeto Excel.Application! Tentar novamente?", "Wasn't possible to create a new Excel.Application object! Try again?"), 2, IIf(IsPortg, "Falha!", "Fail!"), vbModeless) = 2 Then
                    Set AppDataSourceObj = Nothing: Exit Sub
                Else
                    i = 0
                End If
            End If
            Err.Clear
            'Set ExcelObj = CreateObject("Excel.Application")
            Set ExcelObj = New Excel.Application
        Loop Until Err.Number = 0 And Not ExcelObj Is Nothing
        MyWait 0.2
    Loop Until ExcelObj.Workbooks.Count = 0

    Set AppDataSourceObj = ExcelObj
End Sub

Sub QuitAppDataSourceObj()
    If AppDataSourceObj.Workbooks.Count = 1 Then
        If LCase(AppDataSourceObj.Workbooks(1).Name) = LCase(DocDataSource) Then
            AppDataSourceObj.Workbooks(1).Close False
            AppDataSourceObj.Quit
        End If
    End If
    Set AppDataSourceObj = Nothing
End Sub


Sub MyWait(PauseSeg As Double)
    Dim Start
    Start = Timer
    Do
        DoEvents
        '        Sleep 1                                            'Com isso o CPU Usage cai de 100% para seus 0 ou 2% normal
        If Start > Timer Then Start = Start - 86400        'A fun|fffd||fffd|o Timer reset meia-noite. Essa falha ficou tempo sem ser percebido por s|fffd| acontecer a meia-noite e s|fffd| com o sleep cresceu a probabilidade
    Loop While Timer < Start + PauseSeg                    'While no final possibilita myWait 0 para DoEvents e sleep para reduzir o usage da CPU para ser usado em loops
End Sub

Attribute VB_Name = "M|fffd|d1APIs"
'Declara|fffd||fffd|es p|fffd|blicas para GetDocProperty
Public GetDocPropDLLInst As Boolean
Public DocPropTitle, DocPropComments As String

'Declara|fffd||fffd|es API
Const MAX_STRING As Long = 128
Public Const REG_BINARY = 3&
Public Const REG_DWORD = 4&
Declare Function RegOpenKeyA Lib "ADVAPI32.DLL" (ByVal hkey As Long, ByVal sKey As String, ByRef plKeyReturn As Long) As Long
Declare Function RegQueryValueExA Lib "ADVAPI32.DLL" (ByVal hkey As Long, ByVal sValueName As String, ByVal dwReserved As Long, ByRef lValueType As Long, ByVal sValue As String, ByRef lResultLen As Long) As Long
Declare Function RegCloseKey Lib "ADVAPI32.DLL" (ByVal hkey As Long) As Long
Public Const HKEY_CLASSES_ROOT = &H80000000
Public Const HKEY_CURRENT_USER = &H80000001
Public Const HKEY_LOCAL_MACHINE = &H80000002

'================================
'By Jim Rech (From Tom Ogilvy) for ShellDelete function
Private Const FO_DELETE = &H3&
Private Const FOF_ALLOWUNDO = &H40&
Private Const FOF_NOCONFIRMATION = &H10&
Private Type SHFILEOPSTRUCT
    hWnd As Long
    wFunc As Long
    pFrom As String
    pTo As String
    fFlags As Integer
    fAnyOperationsAborted As Long
    hNameMappings As Long
    lpszProgressTitle As String
End Type
Private Declare Function SHFileOperation Lib "Shell32.dll" Alias _
        "SHFileOperationA" (lpFileOp As Any) As Long
'================================

Sub GetDocProperty(DocPropFileName As String)
'Usar DosFile.dll.
'Mais r|fffd|pido e vi|fffd|vel para qualquer DOC ou DOT
Voltar:
    If GetDocPropDLLInst Then
        DocPropTitle = "ERRO!!!"
        DocPropComments = "Imposs|fffd|vel ler propriedades, o arquivo pode estar aberto em outro aplicativo"
        On Error Resume Next
        'O uso da fun|fffd||fffd|o GetDocumentProperties aqui requer que dosfile.dll seja referenciado
        'e portanto carregado automaticamente para n|fffd|o gerar erro de compila|fffd||fffd|o, por isso foi
        'necessario criar um arquivo de macro separado. N|fffd|o |fffd| racional carregar um DLL que ser|fffd|
        'usada muito raramente.
        Err.Clear
        Application.Workbooks("CpapDosf.mac").Activate
        If Err.Number <> 0 Then
            DirP = ThisWorkbook.Path: DirBD = Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirBD").Value)
            bEnableEvents = Application.EnableEvents
            Application.EnableEvents = False
            Application.Workbooks.Open DirP & "\CpapDosf.mac", 0, True
            Application.EnableEvents = bEnableEvents
        End If
        DocPropTitle = Application.Run("Cpapdosf.Mac!GetDocProperty", DocPropFileName, "Title")
        If DocPropTitle <> "ERRO!!!" Then
            DocPropComments = Application.Run("Cpapdosf.Mac!GetDocProperty", DocPropFileName, "Comments")
        End If
        On Error GoTo 0
    Else
        'Verifica e carrega a DLL
        i = GetRegistryValue(HKEY_CLASSES_ROOT, "DSOleFile.PropertyReader", "")
        GetDocPropDLLInst = Left(i, 3) = "OLE"
        If GetDocPropDLLInst Then GoTo Voltar
        'Tenta registrar a DLL que acompanha o CPAP a partir de DirP. Essa
        'DLL |fffd| livre para distribui|fffd||fffd|o.
        DirP = ThisWorkbook.Path: DirBD = Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirBD").Value)
        If Dir(DirP & "\dsofile.dll") = "" Then
            MsgBox "Imposs|fffd|vel obter propriedades, pois um ActiveX, o dsofile.dll, n|fffd|o est|fffd| instalado em sua m|fffd|quina.", vbCritical
        Else
            Shell "REGSVR32.EXE /s """ & DirP & "\dsofile.dll"""
        End If
    End If
End Sub

Sub GetDocProperty2(DocPropFileName As String)
'Usa WordObj.
'Essa op|fffd||fffd|o pelo Word fica desativada |fffd| lenta e invi|fffd|vel para DOCs com mala direta definida
    If LCase(Right(DocPropFileName, 3)) = "doc" Then Exit Sub
    'Testa se WordObj est|fffd| aberto
    On Error GoTo ErrorHandler
    i = WordObj.Documents.Count
    On Error GoTo 0
    WordObj.Documents.Open DocPropFileName
    Dim objDocProps As Object
    Set objDocProps = WordObj.ActiveDocument.BuiltinDocumentProperties
    DocPropTitle = objDocProps("Title")
    DocPropComments = objDocProps("Comments")
    WordObj.ActiveDocument.Close False
    Exit Sub
ErrorHandler:
    Set WordObj = Nothing
    Set WordObj = CreateObject("Word.Application")
    Resume Next
End Sub


'API VERIFICAR REGISTRO DO ACTIVEX
'Pass:
'|fffd||fffd| (1) the KEY (e.g., HKEY_CLASSES_ROOT),
'|fffd||fffd| (2) the SUBKEY (e.g., "Excel.Sheet.5"),
'|fffd||fffd| (3) the value's name (e.g., "" [for default] or "whatever")
Function GetRegistryValue(KEY As Long, SubKey As String, ValueName As String) As String
    Dim Buffer As String * MAX_STRING, ReturnCode As Long
    Dim KeyHdlAddr As Long, ValueType As Long, ValueLen As Long
    Dim TempBuffer As String, Counter As Integer
    ValueLen = MAX_STRING
    ReturnCode = RegOpenKeyA(KEY, SubKey, KeyHdlAddr)
    If ReturnCode = 0 Then
        ReturnCode = RegQueryValueExA(KeyHdlAddr, ValueName, _
                0&, ValueType, Buffer, ValueLen)
        RegCloseKey KeyHdlAddr
        'If successful ValueType contains data type
        'of value and ValueLen its length
        If ReturnCode = 0 Then
            Select Case ValueType
            Case REG_BINARY
                For Counter = 1 To ValueLen
                    TempBuffer = TempBuffer & _
                            Stretch(Hex(Asc(Mid(Buffer, Counter, 1)))) & " "
                Next
                GetRegistryValue = TempBuffer
            Case REG_DWORD
                TempBuffer = "0x"
                For Counter = 4 To 1 Step -1
                    TempBuffer = TempBuffer & _
                            Stretch(Hex(Asc(Mid(Buffer, Counter, 1))))
                Next
                GetRegistryValue = TempBuffer
            Case Else
                GetRegistryValue = Buffer
            End Select
            Exit Function
        End If
    End If
    GetRegistryValue = "Error"
End Function

Function Stretch(ByteStr As String) As String
    If Len(ByteStr) = 1 Then ByteStr = "0" & ByteStr
    Stretch = ByteStr
End Function

Sub TestAPI()
'Teste 1 Outlook Journal
    MsgBox GetRegistryValue(HKEY_CURRENT_USER, "Software\Microsoft\Shared Tools\Outlook\Journaling\Microsoft Excel", "Enabled")
    i = GetRegistryValue(HKEY_CLASSES_ROOT, "MSCAL.Calendar", "")
    MsgBox Left(i, 23) = "Controle calend|fffd|rio 8.0" Or Left(i, 20) = "Calendar Control 9.0"
    'Teste 2 Resolu|fffd||fffd|o do v|fffd|deo
    MsgBox Application.WorksheetFunction.Clean(GetRegistryValue(HKEY_LOCAL_MACHINE, "Config\0001\Display\Settings", "Resolution"))
    'Teste 3 Pastas padr|fffd|es
    MsgBox GetRegistryValue(HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders", "Desktop")
    MsgBox GetRegistryValue(HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders", "Programs")
End Sub

Function ShellDelete(SrcFile As String)
    Dim FileOp As SHFILEOPSTRUCT
    With FileOp
        .hWnd = 0
        .wFunc = FO_DELETE
        .pFrom = SrcFile
        .fFlags = FOF_NOCONFIRMATION + FOF_ALLOWUNDO   '< recycle bin
        .lpszProgressTitle = "yyyyyyy"
    End With
    ShellDelete = SHFileOperation(FileOp)
End Function

Attribute VB_Name = "M|fffd|d2Comum"
Public Const MarcHist = "|fffd|Hist|fffd|rico|fffd|"
Public NomeArqHist As String
Public vEnableEvents As Boolean
Public BotAcionado As Variant
Public SalvarHist As Boolean
Public FormatoHist As String
Public HistEditCampo As String
Public vCloseMode As Integer
Public FecharArq As Boolean
Public NmesIndMax As Long: Public bHtmlHelp As Boolean

Sub AtuHist(vCampo As String, ValorCb As String, ValorOrig As String)
    If ValorCb = "" Or ValorCb = ValorOrig Then Exit Sub
    'Verificando exist|fffd|ncia - Sug. Fixas
    Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(vCampo)
    j = 0
    For Each C In campo
        j = j + 1
        If j > 1 And IIf(IsError(C.Value), "", C.Value) = ValorCb Then Exit Sub
    Next

    'Verificando exist|fffd|ncia - Sug. Hist|fffd|ricas
    Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(vCampo & "Hist", ThisWorkbook.Sheets(NomeArqHist).Range(vCampo & "Hist").End(xlDown))
    If campo.Rows.Count > 10000 Then Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(vCampo & "Hist")
    j = 0
    For Each C In campo
        j = j + 1
        If j > 1 And IIf(IsError(C.Value), "", C.Value) = ValorCb Then Exit Sub
    Next
    'Adicionando |fffd| lista de hist|fffd|rico
    campo.Rows(2).Insert Shift:=xlDown
    campo.Rows(2).Value = "'" & ValorCb   'O ap|fffd|strofo arquivo tudo como texto, previnindo erro em caso de f|fffd|rmula e altera no formato de n|fffd|meros pela planilha
    NumM|fffd|x = ThisWorkbook.Sheets(NomeArqHist).Range(vCampo & "Hist").Offset(-1, 0).Value
    If campo.Rows.Count > NumM|fffd|x Then campo(NumM|fffd|x + 2).ClearContents
    SalvarHist = True
End Sub

Function MyOpenFile(vFileName As String, vReadOnly As Boolean)
    On Error Resume Next
Retry:
    Application.DisplayAlerts = False
    '                                                         bEnableEvents = Application.EnableEvents
    Application.Run "cpap_ex8.mac!EnableEventsVBA", False    'Application.EnableEvents = False
    Set i = Workbooks.Open(Filename:=vFileName, ReadOnly:=vReadOnly, Notify:=False)
    Application.Run "cpap_ex8.mac!EnableEventsVBA", True    'Application.EnableEvents = bEnableEvents

    'Testar integridade. Ver se abre como texto, se n|fffd|o existe o nome DadosHist, se A1&His<>Ahist
    t1 = i.FileFormat = xlCurrentPlatformText
    t2 = i.Sheets(1).Range("DadosHist").Value
    t2 = t2 = Empty
    If t2 = False Then t3 = i.Sheets(1).Range("DadosHist").Offset(1).Value <> i.Sheets(1).Range("A1").Value & "Hist" Else t3 = False
    If t1 Or t2 Or t3 Then i.Close False

    Application.DisplayAlerts = True
    If i.Name = "" Then
        Select Case MsgBox("O arquivo " & vFileName & " contendo o hist|fffd|rico das caixas de inclus|fffd|o n|fffd|o foi encontrado ou est|fffd| corrompido." & Chr(10) & Chr(10) & "Se acionar Ignorar, o arquivo ser|fffd| ignorado e um novo ser|fffd| gerado para iniciar outro hist|fffd|rico.", vbQuestion + vbAbortRetryIgnore + vbDefaultButton2, "CPAP|fffd| - Tentando Abrir Arquivo de Hist|fffd|rico")
        Case Is = vbRetry
            GoTo Retry
        Case Is = vbAbort
            MyOpenFile = False
            Exit Function
        Case Is = vbIgnore
            Application.Workbooks.Add xlWBATWorksheet
            ActiveWorkbook.Names.Add Name:="DadosHist", RefersToR1C1:=Cells(100, 1)
            If Dir(vFileName) <> "" Then Kill vFileName
            ActiveWorkbook.SaveAs vFileName, IIf(Val(Application.Version) >= 12, 56, xlWorkbookNormal)    'xlExcel8 56
            SalvandoHist
            GoTo Retry
        End Select
    End If
    On Error GoTo 0
    If vReadOnly = False And i.ReadOnly Then
        i.Close False
        j = j + 1
        If j < 4 Then
            Application.Wait Now + TimeValue("00:00:01")
            GoTo Retry
        Else
            If MsgBox("O arquivo " & vFileName & " contendo o hist|fffd|rico das caixas de inclus|fffd|o pode estar em uso por outra esta|fffd||fffd|o. Acione OK para continuar tentando ou Cancelar para desistir?", vbQuestion + vbOKCancel, "CPAP|fffd|") = vbOK Then
                GoTo Retry
            Else
                MyOpenFile = False
                Exit Function
            End If
        End If
    End If
    ActiveWorkbook.ActiveSheet.Unprotect "MP542"
    ThisWorkbook.Sheets(NomeArqHist).Range("DadosFixos").CurrentRegion.ClearContents
    Set CopyRng = Range("A1").CurrentRegion
    Set PasteRng = ThisWorkbook.Sheets(NomeArqHist).Range("DadosFixos")
    PasteRng.Resize(CopyRng.Rows.Count, CopyRng.Columns.Count).Value2 = CopyRng.Value2

    ThisWorkbook.Sheets(NomeArqHist).Range("DadosHist").CurrentRegion.ClearContents
    Set CopyRng = Range("DadosHist").CurrentRegion
    Set PasteRng = ThisWorkbook.Sheets(NomeArqHist).Range("DadosHist")
    PasteRng.Resize(CopyRng.Rows.Count, CopyRng.Columns.Count).Value2 = CopyRng.Value2
    MyOpenFile = True
End Function

Sub SalvandoHist()
    Workbooks(NomeArqHist).Sheets(1).Range("A1").CurrentRegion.ClearContents
    Set CopyRng = ThisWorkbook.Sheets(NomeArqHist).Range("DadosFixos").CurrentRegion
    Set PasteRng = Workbooks(NomeArqHist).Sheets(1).Range("A1")
    PasteRng.Resize(CopyRng.Rows.Count, CopyRng.Columns.Count).Value2 = CopyRng.Value2

    Workbooks(NomeArqHist).Sheets(1).Range("DadosHist").CurrentRegion.ClearContents
    i = ThisWorkbook.Sheets(NomeArqHist).Range("DadosHist").Row
    Workbooks(NomeArqHist).Names.Add Name:="DadosHist", RefersToR1C1:=Workbooks(NomeArqHist).Sheets(1).Cells(i, 1)
    Set CopyRng = ThisWorkbook.Sheets(NomeArqHist).Range("DadosHist").CurrentRegion
    Set PasteRng = Workbooks(NomeArqHist).Sheets(1).Range("DadosHist")
    PasteRng.Resize(CopyRng.Rows.Count, CopyRng.Columns.Count).Value2 = CopyRng.Value2

    Workbooks(NomeArqHist).Activate
    ActiveWorkbook.ActiveSheet.Protect "MP542"
    If Run("cpap_ex8.mac!SaveVBA") Then ActiveWorkbook.Close False
End Sub

Sub ConfHist(vComboBox As Object, vOriginal As String, Optional SemEditSring As Boolean = False, Optional Formato As String)
    i = InStr(1, vComboBox.Name, "_")
    HistEditCampo = Left(vComboBox.Name, i - 1)
    i = MsgBox("OK  -  Configurar sugest|fffd|es fixas e hist|fffd|ricas;" & Chr(10) & Chr(10) & "Cancelar - Restaurar inicial.", vbQuestion + vbOKCancel, "Hist|fffd|rico de Inclus|fffd|es no Campo " & HistEditCampo) = vbOK
    If i Then
        FormatoHist = Formato
        UserFormEditHist.Nova_Bt.Enabled = Not SemEditSring
        UserFormEditHist.SugFixas_Ct.Enabled = Not SemEditSring
        UserFormEditHist.SugHist_Ct.Enabled = Not SemEditSring
        UserFormEditHist.Show
        Unload UserFormEditHist
    End If
    vComboBox.Value = vOriginal
    If i Then ListandoComboBox vComboBox, Formato
    SendKeys "{RIGHT}"
End Sub

Sub ListandoComboBox(vComboBox As Object, Optional Formato As String)
    i = InStr(1, vComboBox.Name, "_")
    vCampo = Left(vComboBox.Name, i - 1)
    'Limpando comboboxes
    While vComboBox.ListCount >= 1
        vComboBox.RemoveItem (0)
    Wend
    'Listando comboboxes - Lista de sug. fixas
    Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(vCampo, ThisWorkbook.Sheets(NomeArqHist).Range(vCampo).End(xlDown))
    If campo.Rows.Count < 100 Then
        j = 0
        For Each C In campo
            cf = Format(IIf(IsError(C.Value), "", C.Value), Formato)
            j = j + 1
            If j > 1 Then
                vRep = False
                For i = 1 To vComboBox.ListCount
                    If vComboBox.List(i - 1) = cf Then vRep = True
                Next
                If vRep = False And cf <> "" Then vComboBox.AddItem (cf)
            End If
        Next
    End If
    'Listando comboboxes - Lista de sug. hist|fffd|ricas
    vComboBox.AddItem (MarcHist)
    Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(vCampo & "Hist", ThisWorkbook.Sheets(NomeArqHist).Range(vCampo & "Hist").End(xlDown))
    If campo.Rows.Count > 10000 Then Exit Sub
    j = 0
    For Each C In campo
        cf = Format(IIf(IsError(C.Value), "", C.Value), Formato)
        j = j + 1
        If j > 1 Then
            vRep = False
            For i = 1 To vComboBox.ListCount
                If vComboBox.List(i - 1) = cf Then vRep = True
            Next
            If vRep = False And cf <> "" Then vComboBox.AddItem (cf)
        End If
        Application.StatusBar = "Sugest|fffd|es Hist|fffd|ricas em " & vCampo & " " & j & "/" & campo.Rows.Count
    Next
    Application.StatusBar = False
End Sub


'EVENTOS DE CAIXA DE TEXTO PARA VALOR FINANCEIRO

Sub EvValor_Cb_MouseMove(Valor_Cb As Control, ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    Valor_Cb.Locked = False
    sd = Application.International(xlDecimalSeparator)
    If Valor_Cb.Text = "0" Or Valor_Cb.Text = "0" & sd & "00" Then
        Valor_Cb.SelStart = 0
        Valor_Cb.SelLength = Len(Valor_Cb.Text)
    End If
End Sub

Sub EvValor_Cb_KeyDown(Valor_Cb As Control, ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    sd = Application.International(xlDecimalSeparator)
    vKeyCode = IIf(sd = ",", 188, 190)
    Valor_Cb.Locked = False
    If KeyCode = 37 Or (Shift = 2 And KeyCode = 86) Or (Shift = 1 And KeyCode = 45) Or (Shift = 2 And KeyCode = 88) Then Exit Sub   'Seta Esquerda e teclas do clipboard
    If KeyCode = 110 Or KeyCode = 190 Then KeyCode = vKeyCode
    If KeyCode = 188 Then If InStr(1, Valor_Cb.Value, sd) > 0 Then Valor_Cb.Locked = True
    If (KeyCode >= 96 And KeyCode <= 105) _
            Or (KeyCode >= 48 And KeyCode <= 57 And Shift = 0) _
            Or KeyCode = 188 Or KeyCode = 8 Or KeyCode = 46 _
            Or KeyCode = 107 Or (KeyCode = 187 And Shift = 1) _
            Or KeyCode = 109 Or (KeyCode = 189 And Shift = 0) Then Else Valor_Cb.Locked = True
End Sub

Sub EvValor_Cb_Change(Valor_Cb As Control, Optional vAbs As Boolean = False)
    i = Valor_Cb.Value
    j = Valor_Cb.SelStart
    SinNeg = vAbs = False And InStr(1, i, "-") > 0 And InStr(1, i, "+") = 0
    i = Application.WorksheetFunction.Substitute(i, "-", "")
    i = Application.WorksheetFunction.Substitute(i, "+", "")
    PartInt = i
    sd = Application.International(xlDecimalSeparator)
    sm = Application.International(xlThousandsSeparator)
    k = InStr(1, i, sd)
    If k > 0 Then
        PartFrac = Mid(i, k + 1, 100)
        PartFrac = Application.WorksheetFunction.Substitute(PartFrac, sm, "")
        PartInt = Mid(i, 1, k - 1)
        If PartInt = "" Then PartInt = "0"
    End If
    TamPartInt = Len(PartInt)
    PartInt = Application.WorksheetFunction.Substitute(PartInt, sm, "")
    PartInt = Format(PartInt, "#,##0")
    RepCurs = Len(PartInt) - TamPartInt
    vEnableEvents = False
    Valor_Cb.Value = IIf(SinNeg, "-", "") & PartInt & IIf(PartInt = "" Or k = 0, "", sd) & PartFrac
    vEnableEvents = True
    j = -(j + RepCurs) * (j + RepCurs >= 0)
    If Left(Valor_Cb.Value, 2) = "0" & sd And j < 3 Then j = 2
    Valor_Cb.SelStart = j

    'Evita colar texto
    Static ValorOld
    If Valor_Cb.Value <> "" And Valor_Cb.Value <> "-" And Not (IsNumeric(Valor_Cb.Value)) Then
        MsgBox Valor_Cb.Value, vbCritical, "Valor Inv|fffd|lido!"
        Valor_Cb.Value = ValorOld
    Else
        ValorOld = Valor_Cb.Value
    End If
End Sub

Sub EvValor_Cb_Exit(Valor_Cb As Control, Cancel As MSForms.ReturnBoolean, Formato As String)
    If Valor_Cb.Value = "" Then Valor_Cb.Value = 0
    If IsNumeric(Valor_Cb.Value) Then
        If Valor_Cb.Value <> Format(Valor_Cb.Value, Formato) Then Valor_Cb.Value = Format(Valor_Cb.Value, Formato)
    Else
        MsgBox "Data inv|fffd|lida!", vbCritical, "CPAP|fffd|"
        Cancel = True
    End If
End Sub


Sub CalculadoraBtClick(vForm As Object, Valor_Cb As Control, Calculadora_Bt As Control, NumDecim As Integer)
    Calculadora_Bt.SpecialEffect = fmSpecialEffectSunken
    If IsNumeric(Valor_Cb.Value) Then CalculadoraValorIni = IIf(Valor_Cb.Value * 1 = 0, 0, Valor_Cb.Value) Else CalculadoraValorIni = 0
    Workbooks("cpap_pri.mac").Sheets(1).Range("CalcVal").Value = CalculadoraValorIni
    Workbooks("cpap_pri.mac").Sheets(1).Range("CalcDec").Value = NumDecim

    Application.ExecuteExcel4Macro ("cpap_pri.mac!CalcVBA()")

    Valor_Cb.Value = Workbooks("cpap_pri.mac").Sheets(1).Range("CalcVal").Value
    Valor_Cb.SetFocus
    Calculadora_Bt.SpecialEffect = fmSpecialEffectEtched
End Sub



'EVENTOS DE CAIXA DE TEXTO DO CALEND|fffd|RIO

Sub EvCalend_Cb_MouseMove(Data_Cb As Control, ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    Data_Cb.Locked = False
End Sub

Sub EvCalend_Cb_KeyDown(Data_Cb As Control, ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    j = Data_Cb.SelStart
    If KeyCode = 220 Or KeyCode = 191 Then KeyCode = 111   'Trocando \ por /
    If KeyCode = 8 Then KeyCode = 37    'Trocando Backspace por ser a esquerda

    'Setas, teclas do clipboard e /
    If KeyCode = 16 Or KeyCode = 17 _
            Or KeyCode = 37 Or KeyCode = 39 _
            Or (Shift = 2 And KeyCode = 67) _
            Or (Shift = 2 And KeyCode = 86) _
            Or (Shift = 1 And KeyCode = 45) _
            Or (Shift = 2 And KeyCode = 88) _
            Or (KeyCode = 111 And j > 0 And j < 8) Then
        Data_Cb.Locked = False
        Exit Sub
    End If
    If Data_Cb.SelLength > 1 Then Data_Cb.SelStart = j
    If j = 2 Or j = 5 Then Data_Cb.SelStart = j + 1
    Data_Cb.Locked = False
    If (KeyCode >= 96 And KeyCode <= 105) Or (KeyCode >= 48 And KeyCode <= 57 And Shift = 0) Then Else Data_Cb.Locked = True
    If j >= 8 Then Data_Cb.Locked = True
End Sub

Sub EvCalend_Cb_Change(Data_Cb As Control)
    If vEnableEvents = False Then Exit Sub
    i = Data_Cb.Value
    j = Data_Cb.SelStart
    'Eliminando barra dupla
    iSbd = Application.WorksheetFunction.Substitute(i, "//", "/")
    If i <> iSbd Then
        vEnableEvents = False
        Data_Cb.Value = iSbd
        vEnableEvents = True
        j = InStr(1, i, "//")
        Data_Cb.SelStart = j
        Exit Sub
    End If
    'Prevendo e para manter o formato dd/mm/yy, substituir
    If Len(i) > 8 And j > 0 Then
        vEnableEvents = False
        Data_Cb.Value = Left(i, j) & Mid(i, j + 2, 200)
        vEnableEvents = True
        If j = 2 Or j = 5 Then
            Data_Cb.SelStart = j + 1
        Else
            Data_Cb.SelStart = j
        End If
    End If
    'Tentando limitar a parte do dia
    i = Data_Cb.Value
    If Mid(i, 3, 1) = "/" And IsNumeric(Left(i, 2)) Then
        If Left(i, 2) > 31 And Left(i, 2) < 40 Then
            vEnableEvents = False
            Data_Cb.Value = "30" & Mid(i, 3, 200)
            vEnableEvents = True
            Data_Cb.SelStart = 1
        End If
        If Left(i, 2) > 39 Then
            vEnableEvents = False
            Data_Cb.Value = "0" & Left(i, 1) & Mid(i, 3, 200)
            vEnableEvents = True
            Data_Cb.SelStart = 3
        End If
    End If
    'Tentando limitar a parte do m|fffd|s
    If Mid(i, 3, 1) = "/" And Mid(i, 6, 1) = "/" And IsNumeric(Mid(i, 4, 2)) Then
        If Mid(i, 4, 2) > 12 And Mid(i, 4, 2) < 20 Then
            vEnableEvents = False
            Data_Cb.Value = Left(i, 3) & "12" & Mid(i, 6, 200)
            vEnableEvents = True
            Data_Cb.SelStart = 4
        End If
        If Mid(i, 4, 2) > 19 Then
            vEnableEvents = False
            Data_Cb.Value = Left(i, 3) & "0" & Mid(i, 4, 1) & Mid(i, 6, 200)
            vEnableEvents = True
            Data_Cb.SelStart = 6
        End If
    End If
End Sub

Sub EvCalend_Cb_Exit(Data_Cb As Control, ByVal Cancel As MSForms.ReturnBoolean, Optional DataIni As Date)
    If DataIni = 0 Then DataIni = Now
    i = Data_Cb.Value
    If IsDate(i) Then
        If NmesIndMax = 0 Then NmesIndMax = Workbooks("cpap_pri.mac").Excel4MacroSheets(1).Range("NmesIndMax").Value
        If DateValue(i) < DateSerial(1970, 5, 15) Or DateValue(Data_Cb.Value) > DateSerial(1970, 5 + NmesIndMax, 1) Then
            MsgBox "Data inv|fffd|lida. Digite uma data entre " & Format(DateSerial(1970, 5, 15), "dd/mm/yyyy") & " e " & Format(DateSerial(1970, 5 + NmesIndMax, 1), "dd/mm/yyyy") & ".", vbCritical, "CPAP|fffd|"
            Cancel = True
        End If
        If i <> Format(DateValue(i), "dd/mm/yy") Then Data_Cb.Value = Format(DateValue(i), "dd/mm/yy")
    Else
        'Tentando resolver final de m|fffd|s
        z = InStr(1, i, "/")
        If z > 1 Then
            I1 = Left(i, z - 1)
            i2 = Mid(i, z, 250)
            If IsNumeric(I1) Then
                If IsDate(I1 - 1 & i2) Then
                    Data_Cb.Value = Format(DateValue(I1 - 1 & i2), "dd/mm/yy")
                    Exit Sub
                End If
                If IsDate(I1 - 2 & i2) Then
                    Data_Cb.Value = Format(DateValue(I1 - 2 & i2), "dd/mm/yy")
                    Exit Sub
                End If
                If IsDate(I1 - 3 & i2) Then
                    Data_Cb.Value = Format(DateValue(I1 - 3 & i2), "dd/mm/yy")
                    Exit Sub
                End If
            End If
        End If
        If MsgBox("OK  -  Restaurar inicial, " & Format(DataIni, "dd/mm/yy") & ";" & Chr(10) & Chr(10) & "Cancelar - Voltar para alterar.", vbQuestion + vbOKCancel, "Data Inv|fffd|lida!  Campo: " & Left(Data_Cb.Name, InStr(1, Data_Cb.Name, "_") - 1)) = vbOK Then
            Data_Cb.Value = Format(DataIni, "dd/mm/yy")
        Else
            Cancel = True
        End If
    End If
End Sub


Sub CalendBtClick(vForm As Object, Data_Cb As Control, Calend_Bt As Control)
    Calend_Bt.SpecialEffect = fmSpecialEffectSunken
    CalendDataIni = IIf(IsDate(Data_Cb.Value), Data_Cb.Value, Date)
    Workbooks("cpap_pri.mac").Sheets(1).Range("CalendVal").Value = CalendDataIni

    Application.ExecuteExcel4Macro ("cpap_pri.mac!CalendVBA()")

    Data_Cb.Value = Format(Workbooks("cpap_pri.mac").Sheets(1).Range("CalendVal").Value, "dd/mm/yy")
    Data_Cb.SetFocus
    Calend_Bt.SpecialEffect = fmSpecialEffectEtched
End Sub



'EVENTOS DE CAIXA DE TEXTO PARA N|fffd|MERO DE TELEFONE

Sub EvFone_Cb_Change(Fone_Cb As Control)
    i = Fone_Cb.Value
    j = Fone_Cb.SelStart
    k = Len(i)
    i = Application.WorksheetFunction.Substitute(i, ".", "")
    i = Application.WorksheetFunction.Substitute(i, "-", "")
    vEnableEvents = False
    Fone_Cb.Value = IIf(Len(i) > 3, Left(i, 3) & "-" & Mid(i, 4, 20), i)
    If Len(i) > 7 Then Fone_Cb.Value = Left(i, Len(i) + 4 * (Len(i) > 4)) & "-" & Right(i, 4)
    vEnableEvents = True
    If j < k Then Fone_Cb.SelStart = j
End Sub

Sub EvFone_Cb_KeyDown(Fone_Cb As Control, ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    Fone_Cb.Locked = False
    If KeyCode = 37 Or (Shift = 2 And KeyCode = 86) Or (Shift = 1 And KeyCode = 45) Or (Shift = 2 And KeyCode = 88) Then Exit Sub   'Seta Esquerda e teclas do clipboard
    If KeyCode = 188 Then If InStr(1, Fone_Cb.Value, sd) > 0 Then Fone_Cb.Locked = True
    If (KeyCode >= 96 And KeyCode <= 105) Or (KeyCode >= 48 And KeyCode <= 57 And Shift = 0) Or KeyCode = 188 Or KeyCode = 8 Or KeyCode = 46 Then Else Fone_Cb.Locked = True
End Sub

Sub DesvanecerMesmoPa|fffd|s(Fone_Cb As Control)
    Pa|fffd|sEmpr = Workbooks("Cpap_pri.mac").Excel4MacroSheets(1).Range("Pa|fffd|sEmpr").Value & ""
    Fone_Cb.BackColor = IIf(Fone_Cb.Value = Pa|fffd|sEmpr, &H8000000F, &H80000005)
    Fone_Cb.ForeColor = IIf(Fone_Cb.Value = Pa|fffd|sEmpr, &H80000016, &H80000008)
End Sub

Sub DesvanecerMesmaCid(Fone_Cb As Control)
    CidEmpr = Workbooks("Cpap_pri.mac").Excel4MacroSheets(1).Range("CidEmpr").Value & ""
    Fone_Cb.BackColor = IIf(Fone_Cb.Value = CidEmpr, &H8000000F, &H80000005)
    Fone_Cb.ForeColor = IIf(Fone_Cb.Value = CidEmpr, &H80000016, &H80000008)
End Sub
Attribute VB_Name = "M|fffd|d4Editada"
Sub Editada()
    Dim WbEditada As Workbook
    Set WbEditada = ThisWorkbook
    Windows(WbEditada.Windows(1).Caption).Visible = True
    WbEditada.Activate

    For Each Sh In WbEditada.Sheets
        'Este loop |fffd| usado s|fffd| onde houver planilha de hist|fffd|rico
        If Right(Sh.Name, 4) = ".hst" Then
            Sh.Activate
            NumCampos = Range("A1").CurrentRegion.Columns.Count
            NumSugPadr = Range("A1").CurrentRegion.Rows.Count
            Set Campos = Range(Cells(1, 1), Cells(1, NumCampos))

            'Limpando
            Range("DadosFixos").CurrentRegion.Clear
            Range("DadosHist").CurrentRegion.Clear
            For Each Nome In ActiveWorkbook.ActiveSheet.Names
                Nome.Delete
            Next
            With ActiveWindow
                .SplitColumn = 0
                .SplitRow = 12
            End With

            'Redefinindo
            LFix = 4 + 100   'N|fffd|m de linhas reservadas para sug. fixas. Pode ser alterado o c|fffd|digo |fffd| flex|fffd|vel
            With ActiveWorkbook.ActiveSheet.Names
                Ref = "=" & ActiveWorkbook.ActiveSheet.Name & "!" & Cells(NumSugPadr + 4, 1).Address(ReferenceStyle:=xlR1C1)
                .Add Name:="DadosFixos", RefersToR1C1:=Ref
                Ref = "=" & ActiveWorkbook.ActiveSheet.Name & "!" & Cells(NumSugPadr + 4 + LFix + 1, 1).Address(ReferenceStyle:=xlR1C1)
                .Add Name:="DadosHist", RefersToR1C1:=Ref


                For Each C In Campos
                    .Add Name:=C.Value, RefersToR1C1:=Cells(NumSugPadr + 4, C.Column)
                    .Add Name:=C.Value & "Hist", RefersToR1C1:=Cells(NumSugPadr + 4 + LFix + 2, C.Column)
                    C.Offset(NumSugPadr + 4 + LFix, 0).Value = 15
                    C.Offset(NumSugPadr + 4 + LFix + 1, 0).Value = C.Value & "Hist"
                Next
            End With
            Range("A1").CurrentRegion.Copy
            Range("DadosFixos").PasteSpecial xlPasteValues
            Application.CutCopyMode = False

            ActiveWindow.Panes(1).Activate
            Application.GoTo Reference:="DadosFixos", Scroll:=True
            ActiveWindow.Panes(3).Activate
            Application.GoTo Reference:="DadosHist", Scroll:=True
        End If
    Next

    If WbEditada.ReadOnly Then WbEditada.ChangeFileAccess xlReadWrite
    If Val(Application.Version) < 9 Then If MsgBox(WbEditada.Name & ".  Indenter? (Distanciar margens)", vbOKCancel) = vbOK Then Run "Indenter97.xla!IndentProject"
    WbEditada.Sheets(1).Select
    If MsgBox(WbEditada.Name & ".  Limpar C|fffd|digo?", vbOKCancel) = vbOK Then
        Application.OnTime Now, "VBACodeCleaner.xla!CodeCleanerMain"
    Else
        WbEditada.Save
    End If
End Sub
Attribute VB_Name = "Plan1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



























Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True














Attribute VB_Name = "UserFormAbrDoc"
Attribute VB_Base = "0{092A6299-3AF1-4652-AA22-4C2EF3B531FD}{C8768567-E7C2-419B-B213-2BE831D52A75}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Ajuda_Bt_Click()
    If bHtmlHelp Then Application.Run "CPAP_EX8.MAC!HelpVBA", ThisWorkbook.Path & "\CPAP.chm", HelpContextID, 2 Else Application.Help ThisWorkbook.Path & "\cpap.hlp", HelpContextID
End Sub

Private Sub Fechar_Bt_Click()
    BotAcionado = False
    Hide
    On Error Resume Next
    If Not WordObj Is Nothing Then WordObj.Application.Quit False
    If Not AppDataSourceObj Is Nothing Then QuitAppDataSourceObj
End Sub

Private Sub Documentos_LstB_Click()
    If Documentos_LstB.ListIndex = -1 Then Exit Sub
    Modelos_LstB.Value = ""
    Abrir_Bt.Enabled = True
    Abrir_Bt.Default = True
    ExcluirDoc_Bt.Enabled = True
    Gerar_Bt.Enabled = False
    ExcluirMod_Bt.Enabled = False
    Frame3.Caption = "Propriedades do DOCUMENTO selecionado"
    If ExibProp_ChB.Value And Documentos_LstB.Value <> "" Then
        GetDocProperty (DocPasta & "\" & Documentos_LstB.Value)
        PropT|fffd|tulo_Ct.Value = DocPropTitle
        PropComent_Ct.Value = DocPropComments
        PropT|fffd|tulo_Ct.BackColor = &H80000005
        PropComent_Ct.BackColor = PropT|fffd|tulo_Ct.BackColor
    Else
        PropT|fffd|tulo_Ct.Value = ""
        PropComent_Ct.Value = ""
    End If

End Sub

Private Sub Documentos_LstB_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    OpenWordDoc (Documentos_LstB.Value)
    If Fechar_Chb.Value Then
        Hide
        If Not AppDataSourceObj Is Nothing Then QuitAppDataSourceObj
    End If
End Sub

Private Sub Abrir_Bt_Click()
    OpenWordDoc (Documentos_LstB.Value)
    If Fechar_Chb.Value Then
        Hide
        If Not AppDataSourceObj Is Nothing Then QuitAppDataSourceObj    'N|fffd|o tem problema se fechar com ele conectado, pois o Word conectada automaticamente e depois fecha quando for fechado
    End If
End Sub

Private Sub ExcluirDoc_Bt_Click()
    Dim vFullName As String
    vFullName = DocPasta & "\" & Documentos_LstB.Value
    If MsgBox("Excluir " & vFullName & "?", vbQuestion + vbOKCancel, "Exclur Documento") = vbOK Then
        On Error Resume Next
        'Kill vFullName
        If ShellDelete(vFullName) = 0 Then Documentos_LstB.RemoveItem (Documentos_LstB.ListIndex)
    End If
End Sub

Private Sub ExcluirMod_Bt_Click()
    Dim vFullName As String
    vFullName = DocPasta & "\" & Modelos_LstB.Value
    If MsgBox("Excluir " & vFullName & "?", vbQuestion + vbOKCancel, "Exclur Modelos") = vbOK Then
        On Error Resume Next
        'Kill vFullName
        If ShellDelete(vFullName) = 0 Then Modelos_LstB.RemoveItem (Modelos_LstB.ListIndex)
    End If
End Sub

Private Sub Modelos_LstB_Click()
    If Modelos_LstB.ListIndex = -1 Then Exit Sub
    Documentos_LstB.Value = ""
    Abrir_Bt.Enabled = False
    ExcluirDoc_Bt.Enabled = False
    Gerar_Bt.Enabled = True
    Gerar_Bt.Default = True
    ExcluirMod_Bt.Enabled = True
    Frame3.Caption = "Propriedades do MODELO selecionado"
    If ExibProp_ChB.Value And Modelos_LstB.Value <> "" Then
        GetDocProperty (DocPasta & "\" & Modelos_LstB.Value)
        PropT|fffd|tulo_Ct.Value = DocPropTitle
        PropComent_Ct.Value = DocPropComments
        PropT|fffd|tulo_Ct.BackColor = &HE0E0E0
        PropComent_Ct.BackColor = PropT|fffd|tulo_Ct.BackColor
    Else
        PropT|fffd|tulo_Ct.Value = ""
        PropComent_Ct.Value = ""
    End If
End Sub

Private Sub Modelos_LstB_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    OpenWordDoc (Modelos_LstB.Value)
    If Fechar_Chb.Value Then
        Hide
        If Not AppDataSourceObj Is Nothing Then QuitAppDataSourceObj
    End If
End Sub

Private Sub Gerar_Bt_Click()
    OpenWordDoc (Modelos_LstB.Value)
    If Fechar_Chb.Value Then
        Hide
        If Not AppDataSourceObj Is Nothing Then QuitAppDataSourceObj    'N|fffd|o tem problema se fechar com ele conectado, pois o Word conectada automaticamente e depois fecha quando for fechado
    End If
End Sub

Private Sub Explorar_Op_Click()
    BotAcionado = 1
    Winword_Op.Value = True
    Hide
    On Error Resume Next
    If WordObj Is Nothing Then Else WordObj.Application.Quit False
End Sub

Private Sub UserForm_Initialize()
    Winword_Op.Value = True
    DirP = ThisWorkbook.Path: DirBD = Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirBD").Value)

    'Populate Documentos_LstB com DOCs em DocPasta
    'Limpando ListBox
    While Documentos_LstB.ListCount >= 1
        Documentos_LstB.RemoveItem (0)
    Wend
    'Listando ListBox
    Documentos_LstB.ColumnCount = 2
    Documentos_LstB.ColumnWidths = "250;-1"
    'Obter com FileSerch a lista ordenada e com FileSystemObject obter
    'o nome sem o path
    If 7 = 7 Then    'FileSearch nao existe no 2007 vamos de Dir()
        vName = Dir(DocPasta & "\*.doc")
        j = 0
        Do While vName <> ""
            If Left(vName, 1) <> "~" Then
                Documentos_LstB.AddItem (vName)
                Documentos_LstB.Column(1, j) = Format(FileDateTime(DocPasta & "\" & vName), "dd/mm/yy hh:mm")
                j = j + 1
            End If
            vName = Dir()
        Loop
    Else
        With Application.FileSearch
            .NewSearch
            .LookIn = DocPasta
            .SearchSubFolders = False
            .FileType = msoFileTypeWordDocuments
            If Val(Application.Version) > 9 Then .Filename = "*.doc"    'Desabilitado devido a bug no Excel97 em WinMe, mas parece n|fffd|o ser |fffd|til

            If .Execute(msoSortByFileName, msoSortOrderAscending) > 0 Then
                j = 0
                For i = 1 To .FoundFiles.Count
                    vName = Dir(.FoundFiles(i))
                    If Left(vName, 1) <> "~" Then
                        Documentos_LstB.AddItem (vName)
                        Documentos_LstB.Column(1, j) = Format(FileDateTime(.FoundFiles(i)), "dd/mm/yy hh:mm")
                        j = j + 1
                    End If
                Next i
            End If
        End With
    End If
    'Populate Modelos_LstB com DOTs em DocPasta
    'Limpando ListBox
    While Modelos_LstB.ListCount >= 1
        Modelos_LstB.RemoveItem (0)
    Wend
    'Listando ListBox
    Modelos_LstB.ColumnCount = 2
    Modelos_LstB.ColumnWidths = "250;-1"
    'Obter com FileSerch a lista ordenada e com FileSystemObject obter
    'o nome sem o path

    If 7 = 7 Then    'FileSearch nao existe no 2007 vamos de Dir()
        vName = Dir(DocPasta & "\*.dot")
        j = 0
        Do While vName <> ""
            If Left(vName, 1) <> "~" Then
                Modelos_LstB.AddItem (vName)
                Modelos_LstB.Column(1, j) = Format(FileDateTime(DocPasta & "\" & vName), "dd/mm/yy hh:mm")
                j = j + 1
            End If
            vName = Dir()
        Loop
    Else
        With Application.FileSearch
            .NewSearch
            .LookIn = DocPasta
            .SearchSubFolders = False
            .FileType = msoFileTypeTemplates
            '        .FileName = "*.dot" 'Desabilitado devido a bug no Excel97 em WinMe, mas parece n|fffd|o ser |fffd|til

            If .Execute(msoSortByFileName, msoSortOrderAscending) > 0 Then
                j = 0
                For i = 1 To .FoundFiles.Count
                    vName = Dir(.FoundFiles(i))
                    If Left(vName, 1) <> "~" Then
                        Modelos_LstB.AddItem (vName)
                        Modelos_LstB.Column(1, j) = Format(FileDateTime(.FoundFiles(i)), "dd/mm/yy hh:mm")
                        j = j + 1
                    End If
                Next i
            End If
        End With
    End If
    OrdenModelos_LstB

    Abrir_Bt.Enabled = False
    ExcluirDoc_Bt.Enabled = False
    Gerar_Bt.Enabled = False
    ExcluirMod_Bt.Enabled = False
    Fechar_Chb.Value = False   'O melhor |fffd| n|fffd|o fechar assim fica mais f|fffd|cil escolher outro modelo e n|fffd|o voltar ao cpap com o Word aberto com o banco de dados
    Explorar_Op.Caption = "Explorar a pasta " & UCase(DocPasta)
    Frame1.Caption = "DOCUMENTO j|fffd| salvo na pasta " & UCase(DocPasta) & ": "
    Frame2.Caption = "NOVO DOCUMENTO de um modelo na pasta " & UCase(DocPasta) & ": "
    OcultarExibirControles
    If Modelos_LstB.ListCount > 0 And Documentos_LstB.ListCount = 0 Then Modelos_LstB.ListIndex = 0
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDrive ThisWorkbook.Path
    If Mid(ThisWorkbook.Path, 2, 1) = ":" Then ChDir ThisWorkbook.Path Else Application.Run "CPAP_EX8.MAC!DirectoryVBA", ThisWorkbook.Path, False    'Para ativar o cpap.hlp
End Sub

Private Sub Winword_Op_Click()
    Winword_Op.Value = True
End Sub

Private Sub ExibProp_ChB_Click()
    OcultarExibirControles
End Sub

Private Sub OcultarExibirControles()
    If ExibProp_ChB.Value Then
        Frame3.Visible = True
        UserFormAbrDoc.Height = 327
        Documentos_LstB_Click
        Modelos_LstB_Click
    Else
        Frame3.Visible = False
        UserFormAbrDoc.Height = 240
    End If
End Sub

Private Sub OrdenModelos_LstB()
'Organiza lista de modelo pela import|fffd|ncia
    Dim ModCpap(5) As String
    Dim ModOrd() As String
    i = Modelos_LstB.ListCount
    If i < 4 Then Exit Sub
    ModCpap(0) = "PromJatoTintaPapelA4-3pp.dot"
    ModCpap(1) = "PromJatoTintaPapelA4-3ppActiveX.dot"
    ModCpap(2) = "PromJatoTintaPapelA4-2pp.dot"
    ModCpap(3) = "PromJatoTintaPapelA9-3pp.dot"
    ModCpap(4) = "PromLazerPapelA9-3pp.dot"
    ModCpap(5) = "Prom-Form-PreImpresso.dot"

    ReDim ModOrd(i - 1, 1)
    k1 = 0
    'Listando modelos do cpap primeiro
    For j = 0 To 5
        For k = 0 To i - 1
            If ModCpap(j) = Modelos_LstB.List(k, 0) Then
                ModOrd(k1, 0) = Modelos_LstB.List(k, 0)
                ModOrd(k1, 1) = Modelos_LstB.List(k, 1)
                k1 = k1 + 1
            End If
        Next
    Next
    'Listando o restante
    j1 = k1 - 1
    For k = 0 To i - 1
        Exist = False
        For j = 0 To j1
            If Modelos_LstB.List(k, 0) = ModOrd(j, 0) Then Exist = True
        Next
        If Exist = False Then
            ModOrd(k1, 0) = Modelos_LstB.List(k, 0)
            ModOrd(k1, 1) = Modelos_LstB.List(k, 1)
            k1 = k1 + 1
        End If
    Next
    Modelos_LstB.List = ModOrd()
End Sub

Private Sub WhatsThis_Img_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    Static cHHelpWhatsThis1 As Object
    If cHHelpWhatsThis1 Is Nothing Then Set cHHelpWhatsThis1 = Application.Run("CPAP_EX8.MAC!New_cHHelpWhatsThis")
    cHHelpWhatsThis1.WhatsThis_Img_MouseDown Button, Shift, x, y, Me
    If WhatsThis_Img.BackStyle = fmBackStyleOpaque Then Set cHHelpWhatsThis1 = Nothing
End Sub


Attribute VB_Name = "UserFormEdDad"
Attribute VB_Base = "0{F679B2CB-9AA3-423A-9E11-BE6EE59A5210}{C4905B4F-7985-44D9-B1E4-DD79668EA668}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim IvScr As Integer
Dim IfScr As Integer
Dim OcultarRng As Range

Private CtrlOver, CtrlOver1 As String
'Necess|fffd|rio, devido bug Setfocus em textbox do Excel2k. Isto foi resolvido com SendKeys tamb|fffd|m
Public ControleAtivo As Control


Private Sub UserForm_Activate()
    Salvar_Bt.SetFocus
    ControleAtivo.SetFocus
    'Top = 0
    'Left = 15
End Sub
Private Sub UserForm_Deactivate()
    Set ControleAtivo = ActiveControl
End Sub

Private Sub Salvar_Bt_Click()
    If NumEmExib > 0 Then
        BotAcionado = 1
        Hide
        If ActiveWorkbook.Name <> ThisWorkbook.Name Then
            'Excluir registros ocultos
            If NumEmExib < DocRegF Then NumRng.SpecialCells(xlCellTypeBlanks).EntireRow.Delete
            'Excluir colunas tempor|fffd|rias para ordenar
            Range("AQ1").Resize(1, 2).EntireColumn.Delete
        End If
    Else
        MsgBox "N|fffd|o h|fffd| dados para salvar, pois voc|fffd| ocultou todos os registros do banco de dados gerado!", vbCritical, "CPAP|fffd|"
    End If
End Sub

Private Sub SalvarComo_Bt_Click()
    BotAcionado = 2
    Hide
End Sub

Private Sub Cancelar_Bt_Click()
    BotAcionado = False
    Hide
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    BotAcionado = False
End Sub

Private Sub UserForm_Initialize()
    vEnableEvents = False
    ListandoComboBox Tipo_Cb
    ListandoComboBox Seq_Cb
    ListandoComboBox DataVenc_Cb
    ListandoComboBox DiaVenc_Cb
    ListandoComboBox M|fffd|sVenc_Cb
    ListandoComboBox AnoVenc_Cb
    ListandoComboBox Valor_Cb
    ListandoComboBox Comuns_Cb
    Set ControleAtivo = Tipo_Cb

    With Vari|fffd|veis_Scr
        .Min = 0
        .Max = DocRegF - 1
        .SmallChange = 1
        .LargeChange = 20
        .Value = DocRegI - 1
        IvScr = .Value + 2
        NumEmExib = DocRegF
    End With

    With Fixos_Scr
        .SmallChange = 1
        .LargeChange = 5
        .Min = 8 + 1 + 1
        .Max = 40 + 1 + 1
        .Value = 19 + 1 + 1
        IfScr = .Value
    End With

    Tipo_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, 1 + 1).Comment.Text
    Seq_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, 2 + 1).Comment.Text
    DataVenc_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, 3 + 1).Comment.Text
    DiaVenc_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, 4 + 1).Comment.Text
    M|fffd|sVenc_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, 5 + 1).Comment.Text
    AnoVenc_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, 6 + 1).Comment.Text
    Valor_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, 7 + 1).Comment.Text
    Salvar_Bt.ControlTipText = "Salva no formato padr|fffd|o em Cpap_exp.xls"
    SalvarComo_Bt.ControlTipText = "Salva em outros formatos"
    If Vari|fffd|veis_OpB.Value Then OcultarExibirControles Else Vari|fffd|veis_OpB.Value = True
    Top = Application.Top: Left = Application.Left + 15
End Sub

Private Sub Vari|fffd|veis_Scr_Change()
    If vEnableEvents = False Then Exit Sub

    'Ocultos podem ser exibidos, mas esse trecho tenta saltar
    i = Vari|fffd|veis_Scr.Value + 2
    vEnableEvents = False
    While ActiveWorkbook.Sheets(1).Cells(i, 1).Value = ""
        i = i + IIf(IvScr < i, 1, -1)
        If i < 2 Then i = IvScr + 2
        If i > DocRegF + 1 Then
            Vari|fffd|veis_Scr.Value = IvScr - 2
            vEnableEvents = True
            Exit Sub
        End If
    Wend
    Vari|fffd|veis_Scr.Value = i - 2
    vEnableEvents = True
    '=======================

    Application.ScreenUpdating = False
    'Para atualizar hist|fffd|rico ao incrementar registros
    If MyOpenFile(DirBD & "\banco\" & NomeArqHist, False) Then
        SalvarHist = False
        AtuHist "Tipo", Tipo_Cb.Value, DadoIni(3).Value
        AtuHist "Seq", Seq_Cb.Value, DadoIni(4).Value
        AtuHist "DataVenc", DataVenc_Cb.Value, DadoIni(5).Value
        AtuHist "DiaVenc", DiaVenc_Cb.Value, DadoIni(6).Value
        AtuHist "M|fffd|sVenc", M|fffd|sVenc_Cb.Value, DadoIni(7).Value
        AtuHist "AnoVenc", AnoVenc_Cb.Value, DadoIni(8).Value
        AtuHist "Valor", Valor_Cb.Value, DadoIni(9).Value
        If SalvarHist Then
            SalvandoHist
            ListandoComboBox Tipo_Cb
            ListandoComboBox Seq_Cb
            ListandoComboBox DataVenc_Cb
            ListandoComboBox DiaVenc_Cb
            ListandoComboBox M|fffd|sVenc_Cb
            ListandoComboBox AnoVenc_Cb
            ListandoComboBox Valor_Cb
        Else
            Workbooks(NomeArqHist).Close False
        End If
    End If

    IvScr = Vari|fffd|veis_Scr.Value + 2
    vEnableEvents = False
    Tipo_Cb.Value = ActiveWorkbook.Sheets(1).Cells(IvScr, 1 + 1).Value
    Seq_Cb.Value = ActiveWorkbook.Sheets(1).Cells(IvScr, 2 + 1).Value
    DataVenc_Cb.Value = ActiveWorkbook.Sheets(1).Cells(IvScr, 3 + 1).Value
    DiaVenc_Cb.Value = ActiveWorkbook.Sheets(1).Cells(IvScr, 4 + 1).Value
    M|fffd|sVenc_Cb.Value = ActiveWorkbook.Sheets(1).Cells(IvScr, 5 + 1).Value
    AnoVenc_Cb.Value = ActiveWorkbook.Sheets(1).Cells(IvScr, 6 + 1).Value
    Valor_Cb.Value = ActiveWorkbook.Sheets(1).Cells(IvScr, 7 + 1).Value
    vEnableEvents = True

    DadoIni(3).Value = Tipo_Cb.Value
    DadoIni(4).Value = Seq_Cb.Value
    DadoIni(5).Value = DataVenc_Cb.Value
    DadoIni(6).Value = DiaVenc_Cb.Value
    DadoIni(7).Value = M|fffd|sVenc_Cb.Value
    DadoIni(8).Value = AnoVenc_Cb.Value
    DadoIni(9).Value = Valor_Cb.Value

    Application.ScreenUpdating = True
    ActiveWorkbook.Sheets(1).Select
    ActiveWorkbook.Sheets(1).Range(Cells(IvScr, 1 + 1), Cells(IvScr, 7 + 1)).Select

    OcultarExibirControles
    '    ActiveWindow.Zoom = 100

End Sub

Private Sub Tipo_Cb_Change()
    CbVariav_Change 1, Tipo_Cb
End Sub
Private Sub Seq_Cb_Change()
    CbVariav_Change 2, Seq_Cb
End Sub
Private Sub DataVenc_Cb_Change()
    CbVariav_Change 3, DataVenc_Cb
End Sub
Private Sub DiaVenc_Cb_Change()
    CbVariav_Change 4, DiaVenc_Cb
End Sub
Private Sub M|fffd|sVenc_Cb_Change()
    CbVariav_Change 5, M|fffd|sVenc_Cb
End Sub
Private Sub AnoVenc_Cb_Change()
    CbVariav_Change 6, AnoVenc_Cb
End Sub
Private Sub Valor_Cb_Change()
    CbVariav_Change 7, Valor_Cb
End Sub
Sub CbVariav_Change(vCol As Integer, vCtrl_Cb As Control)
    If vEnableEvents = False Then Exit Sub
    If vCtrl_Cb.Value = MarcHist Then ConfHist vCtrl_Cb, DadoIni(vCol + 2)
    Application.Workbooks(DadoIni(12).Value).Activate
    i = Vari|fffd|veis_Scr.Value + 2
    ActiveWorkbook.Sheets(1).Cells(i, vCol + 1).Value = vCtrl_Cb.Value
    CtrlOver = IIf(Rnd >= 0.5, "Salvar_Bt", "Cancelar_Bt")
    Selection.Cells(1, vCol).Activate
End Sub


Private Sub Tipo_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    CtrlOver = Tipo_Cb.Name
    If CbVariav_KeyDown(KeyCode * 1) = 0 Then KeyCode = 0
End Sub
Private Sub Seq_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    CtrlOver = Seq_Cb.Name
    If CbVariav_KeyDown(KeyCode * 1) = 0 Then KeyCode = 0
End Sub
Private Sub DataVenc_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    CtrlOver = DataVenc_Cb.Name
    If CbVariav_KeyDown(KeyCode * 1) = 0 Then KeyCode = 0
End Sub
Private Sub DiaVenc_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    CtrlOver = DiaVenc_Cb.Name
    If CbVariav_KeyDown(KeyCode * 1) = 0 Then KeyCode = 0
End Sub
Private Sub M|fffd|sVenc_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    CtrlOver = M|fffd|sVenc_Cb.Name
    If CbVariav_KeyDown(KeyCode * 1) = 0 Then KeyCode = 0
End Sub
Private Sub AnoVenc_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    CtrlOver = AnoVenc_Cb.Name
    If CbVariav_KeyDown(KeyCode * 1) = 0 Then KeyCode = 0
End Sub
Private Sub Valor_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    CtrlOver = Valor_Cb.Name
    If CbVariav_KeyDown(KeyCode * 1) = 0 Then KeyCode = 0
End Sub
Function CbVariav_KeyDown(vKeyCode As Integer) As Integer
    With Vari|fffd|veis_Scr
        If vKeyCode = 38 Then
            .Value = IIf(.Value - .SmallChange < .Min, .Min, .Value - .SmallChange)
            vKeyCode = 0
        End If
        If vKeyCode = 40 Then
            .Value = IIf(.Value + .SmallChange > .Max, .Max, .Value + .SmallChange)
            vKeyCode = 0
        End If
        If vKeyCode = 33 Then
            .Value = IIf(.Value - .LargeChange < .Min, .Min, .Value - .LargeChange)
            vKeyCode = 0
        End If
        If vKeyCode = 34 Then
            .Value = IIf(.Value + .LargeChange > .Max, .Max, .Value + .LargeChange)
            vKeyCode = 0
        End If
    End With
    CbVariav_KeyDown = vKeyCode
    CtrlOver1 = ""
    Vari|fffd|veis_OpB_MouseMove 0, 0, 0, 0
End Function



Private Sub Fixos_Scr_Change()
    If vEnableEvents = False Then Exit Sub
    Application.ScreenUpdating = False
    'Para atualizar hist|fffd|rico ao incrementar registros
    If MyOpenFile(DirBD & "\banco\" & NomeArqHist, False) Then
        SalvarHist = False
        AtuHist "Comuns", Comuns_Cb.Value, DadoIni(10).Value
        If SalvarHist Then
            SalvandoHist
            ListandoComboBox Comuns_Cb
        Else
            Workbooks(NomeArqHist).Close False
        End If
    End If

    IfScr = Fixos_Scr.Value
    vEnableEvents = False
    Comuns_Cb.Value = ActiveWorkbook.Sheets(1).Cells(2, IfScr).Value
    vEnableEvents = True

    DadoIni(10).Value = Comuns_Cb.Value

    Comuns_Cb.ControlTipText = ActiveWorkbook.Sheets(1).Cells(1, IfScr).Comment.Text
    Application.ScreenUpdating = True
    ActiveWorkbook.Sheets(1).Cells(1, IfScr).EntireColumn.Select   '.EntireColumn.Select
    Fixos_OpB.Caption = "Editar Campos Fixos: << " & ActiveWorkbook.Sheets(1).Cells(1, IfScr).Value & " >>"
    Fixos_OpB.Value = True
End Sub

Private Sub Comuns_Cb_Change()
    If Comuns_Cb.Value = MarcHist Then ConfHist Comuns_Cb, DadoIni(10)
    Application.Workbooks(DadoIni(12).Value).Activate
    i = Fixos_Scr.Value
    vMax = DocRegF + 1
    ActiveWorkbook.Sheets(1).Range(Cells(2, i), Cells(vMax, i)).FormulaArray = IIf(Left(Comuns_Cb.Value, 1) = "=", "'", "") & Comuns_Cb.Value   'iif s|fffd| para o caso de f|fffd|rmula
End Sub

Private Sub Comuns_Cb_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
    If KeyCode = 37 And Comuns_Cb.SelStart = 0 Then KeyCode = 38
    If KeyCode = 39 And Comuns_Cb.SelStart = Len(Comuns_Cb.Value) Then KeyCode = 40
    With Fixos_Scr
        If KeyCode = 38 Then
            .Value = IIf(.Value - .SmallChange < .Min, .Min, .Value - .SmallChange)
            KeyCode = 0
        End If
        If KeyCode = 40 Then
            .Value = IIf(.Value + .SmallChange > .Max, .Max, .Value + .SmallChange)
            KeyCode = 0
        End If
        If KeyCode = 33 Then
            .Value = IIf(.Value - .LargeChange < .Min, .Min, .Value - .LargeChange)
            KeyCode = 0
        End If
        If KeyCode = 34 Then
            .Value = IIf(.Value + .LargeChange > .Max, .Max, .Value + .LargeChange)
            KeyCode = 0
        End If
    End With
End Sub

Private Sub Fixos_OpB_Click()
    OcultarExibirControles
    ActiveWorkbook.Sheets(1).Cells(1, IfScr).EntireColumn.Select   '.EntireColumn.Select
    If Comuns_Cb.Visible Then Comuns_Cb.SetFocus
End Sub

Private Sub Fixos_OpB_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    If CtrlOver = CtrlOver1 Or Comuns_Cb.Visible = False Then Exit Sub
    CtrlOver1 = CtrlOver
    Fixos_OpB.Value = True
End Sub
Private Sub Comuns_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = Comuns_Cb.Name
    Fixos_OpB_MouseMove Button, Shift, x, y
End Sub

Private Sub Vari|fffd|veis_OpB_Click()
    OcultarExibirControles
    ActiveWorkbook.Sheets(1).Select
    ActiveWorkbook.Sheets(1).Range(Cells(IvScr, 1 + 1), Cells(IvScr, 7 + 1)).Select
    If Tipo_Cb.Visible Then Tipo_Cb.SetFocus
End Sub

Private Sub Vari|fffd|veis_OpB_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    If CtrlOver = CtrlOver1 Then Exit Sub
    CtrlOver1 = CtrlOver
    Vari|fffd|veis_OpB.Value = True
    Pos1 = Tipo_Cb.TabIndex
    Pos2 = Controls(CtrlOver).TabIndex
    If Pos2 >= Pos1 And Pos2 <= Pos1 + 6 Then
        Selection.Cells(1, Pos2 - Pos1 + 1).Activate
    End If
End Sub
Private Sub Tipo_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = Tipo_Cb.Name
    Vari|fffd|veis_OpB_MouseMove Button, Shift, x, y
End Sub
Private Sub Seq_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = Seq_Cb.Name
    Vari|fffd|veis_OpB_MouseMove Button, Shift, x, y
End Sub
Private Sub DataVenc_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = DataVenc_Cb.Name
    Vari|fffd|veis_OpB_MouseMove Button, Shift, x, y
End Sub
Private Sub DiaVenc_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = DiaVenc_Cb.Name
    Vari|fffd|veis_OpB_MouseMove Button, Shift, x, y
End Sub
Private Sub M|fffd|sVenc_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = M|fffd|sVenc_Cb.Name
    Vari|fffd|veis_OpB_MouseMove Button, Shift, x, y
End Sub
Private Sub AnoVenc_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = AnoVenc_Cb.Name
    Vari|fffd|veis_OpB_MouseMove Button, Shift, x, y
End Sub
Private Sub Valor_Cb_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    CtrlOver = Valor_Cb.Name
    Vari|fffd|veis_OpB_MouseMove Button, Shift, x, y
End Sub

Private Sub Zoom_Scr_Change()
    ActiveWindow.Zoom = Zoom_Scr.Value
    Zoom_Scr.ControlTipText = "Zoom " & ActiveWindow.Zoom & "%"
    Zoom_Lb.Caption = "Zoom " & ActiveWindow.Zoom & "%"
End Sub

Private Sub Seq|fffd|nica_ChB_Click()
    Application.ScreenUpdating = False
    If Range("AQ1").Value = "" Then
        Range("AQ1").Value = "OrdTipo"
        Range("AQ1").Offset(1, 0).Resize(DocRegF).Value = ThisWorkbook.Sheets(1).Range("A1").Offset(1, 0).Resize(DocRegF).Value
        Range("AR1").Value = "OrdData"
        Range("AR1").Offset(1, 0).Resize(DocRegF).Value = ThisWorkbook.Sheets(1).Range("D1").Offset(1, 0).Resize(DocRegF).Value
    End If
    Set |fffd|reaOrd = Range("A1").Offset(DocRegI, 0).Resize(DocRegF - 1, 44)
    If NumEmExib < DocRegF Then |fffd|reaOrd.Rows.Hidden = False
    If Seq|fffd|nica_ChB.Value Then
        |fffd|reaOrd.Sort Key1:=Range("AR1"), Order1:=xlAscending, Key2:=Range("AQ1"), OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    Else
        |fffd|reaOrd.Sort Key1:=Range("AQ1"), Order1:=xlAscending, MatchCase:=False, Orientation:=xlTopToBottom
    End If
    If NumEmExib < DocRegF Then NumRng.SpecialCells(xlCellTypeBlanks).Rows.Hidden = True
    SequenciarRegs
    Application.ScreenUpdating = True
End Sub

Private Sub OcultarValDoPlano_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    Application.ScreenUpdating = False
    Set OcultarRng = ActiveWorkbook.Sheets(1).Cells(2, 1)
    OcultarRng.Rows.Hidden = OcultarValDoPlano_ChB.Value
    SequenciarRegs
    PopCbReg
    OcultarRegF_Cb.Value = OcultarRegI_Cb.Value
    Application.ScreenUpdating = True
End Sub

Private Sub OcultarEntrada_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    Application.ScreenUpdating = False
    Set OcultarRng = ActiveWorkbook.Sheets(1).Cells(3, 1)
    OcultarRng.Rows.Hidden = OcultarEntrada_ChB.Value
    SequenciarRegs
    PopCbReg
    OcultarRegF_Cb.Value = OcultarRegI_Cb.Value
    Application.ScreenUpdating = True
End Sub

Private Sub OcultarReg_Chb_Click()
    If vEnableEvents = False Then Exit Sub
    Application.ScreenUpdating = False
    If OcultarRegI_Cb.Value <> "" Then
        If OcultarRegF_Cb.Value = "" Then OcultarRegF_Cb.Value = OcultarRegI_Cb.Value
        LinI = Application.WorksheetFunction.Match(OcultarRegI_Cb.Value * 1, NumRng)
        LinF = Application.WorksheetFunction.Match(OcultarRegF_Cb.Value * 1, NumRng)
        Set OcultarRng = ActiveWorkbook.Sheets(1).Range(Cells(LinI + 1, 1), Cells(LinF + 1, 1))
        If OcultarRng.Cells.Count > 1 Then Set OcultarRng = OcultarRng.SpecialCells(xlCellTypeVisible)
        OcultarRng.Rows.Hidden = True
        SequenciarRegs
        PopCbReg
    End If
    vEnableEvents = False
    OcultarValDoPlano_ChB.Value = ActiveWorkbook.Sheets(1).Cells(2, 1).Value = ""
    If OcultarEntrada_ChB.Enabled Then OcultarEntrada_ChB.Value = ActiveWorkbook.Sheets(1).Cells(3, 1).Value = ""
    OcultarReg_Chb.Value = False
    OcultarRegI_Cb.ListIndex = -1
    OcultarRegF_Cb.ListIndex = -1
    vEnableEvents = True
    Application.ScreenUpdating = True
End Sub
Private Sub OcultarRegI_Cb_Change()
    If vEnableEvents = False Then Exit Sub
    If OcultarRegF_Cb.ListIndex < OcultarRegI_Cb.ListIndex Then OcultarRegF_Cb.ListIndex = OcultarRegI_Cb.ListIndex
    If OcultarRegI_Cb.ListIndex > -1 Then
        LinI = Application.WorksheetFunction.Match(OcultarRegI_Cb.Value * 1, NumRng)
        Vari|fffd|veis_Scr.Value = LinI - 1
    End If
End Sub
Private Sub OcultarRegF_Cb_Change()
    If vEnableEvents = False Then Exit Sub
    If OcultarRegI_Cb.ListIndex > OcultarRegF_Cb.ListIndex Or OcultarRegI_Cb.ListIndex = -1 Then OcultarRegI_Cb.ListIndex = OcultarRegF_Cb.ListIndex
End Sub

Private Sub ExibirTodos_ChB_Click()
    If vEnableEvents = False Then Exit Sub
    Application.ScreenUpdating = False
    vEnableEvents = False
    ExibirTodos_ChB.Value = False
    OcultarValDoPlano_ChB.Value = False
    OcultarEntrada_ChB.Value = False
    vEnableEvents = True
    ActiveWorkbook.Sheets(1).Range(Cells(2, 1), Cells(DocRegF + 1, 1)).EntireRow.Hidden = False
    SequenciarRegs
    PopCbReg
    Vari|fffd|veis_OpB.Value = True
    Application.ScreenUpdating = True
End Sub

Private Sub Num_Lb_Click()
    If vEnableEvents = False Then Exit Sub
    If OcultarRng Is Nothing Then Exit Sub
    Application.ScreenUpdating = False
    OcultarRng.Rows.Hidden = False
    SequenciarRegs
    PopCbReg
    vEnableEvents = False
    OcultarValDoPlano_ChB.Value = ActiveWorkbook.Sheets(1).Cells(2, 1).Value = ""
    If OcultarEntrada_ChB.Enabled Then OcultarEntrada_ChB.Value = ActiveWorkbook.Sheets(1).Cells(3, 1).Value = ""
    vEnableEvents = True
    Application.ScreenUpdating = True
End Sub

Private Sub PopCbReg()
    If Vari|fffd|veis_Scr.Visible Then Vari|fffd|veis_Scr.SetFocus
    While OcultarRegI_Cb.ListCount > NumEmExib
        OcultarRegI_Cb.RemoveItem (OcultarRegI_Cb.ListCount - 1)
        OcultarRegF_Cb.RemoveItem (OcultarRegF_Cb.ListCount - 1)
    Wend
    While OcultarRegI_Cb.ListCount < NumEmExib
        OcultarRegI_Cb.AddItem (OcultarRegI_Cb.ListCount + 1)
        OcultarRegF_Cb.AddItem (OcultarRegF_Cb.ListCount + 1)
    Wend
    vEnableEvents = False
    If OcultarRegI_Cb.ListIndex = -1 Then OcultarRegI_Cb.Value = ""
    If OcultarRegF_Cb.ListIndex = -1 Then OcultarRegF_Cb.Value = ""

    If OcultarRegI_Cb.ListIndex > NumEmExib Then OcultarRegI_Cb.Value = IIf(NumEmExib > 0, 1, "")
    If OcultarRegF_Cb.ListIndex > NumEmExib Then OcultarRegF_Cb.Value = IIf(NumEmExib > 0, 1, "")
    vEnableEvents = True
    OcultarReg_Chb.Enabled = NumEmExib > 0
    OcultarRegI_Cb.Enabled = NumEmExib > 0
    OcultarRegF_Cb.Enabled = NumEmExib > 0
    ExibirTodos_ChB.Enabled = NumEmExib < DocRegF
    OcultarExibirControles
End Sub

Private Sub OcultarExibirControles()
    i = Vari|fffd|veis_OpB.Value And NumEmExib > 0
    Vari|fffd|veis_Scr.Visible = i
    Tipo_Cb.Visible = i
    Seq_Cb.Visible = i
    DataVenc_Cb.Visible = i
    DiaVenc_Cb.Visible = i
    M|fffd|sVenc_Cb.Visible = i
    AnoVenc_Cb.Visible = i
    Valor_Cb.Visible = i
    Num_Lb.Visible = i
    Seq|fffd|nica_ChB.Visible = i
    Seq|fffd|nica_Lb.Visible = i
    OcultarValDoPlano_ChB.Visible = i
    OcultarEntrada_ChB.Visible = i
    OcultarReg_Chb.Visible = i
    OcultarRegI_Cb.Visible = i
    OcultarReg_Lb.Visible = i
    OcultarRegF_Cb.Visible = i
    ExibirTodos_ChB.Visible = i Or NumEmExib = 0

    i = Fixos_OpB.Value And NumEmExib > 0
    Fixos_Scr.Visible = i
    Comuns_Cb.Visible = i
    Fixos_OpB.Caption = "Editar Campos Fixos:" & IIf(i, " << " & ActiveWorkbook.Sheets(1).Cells(1, IfScr).Value & " >>", "")

    i = ActiveWorkbook.Sheets(1).Cells(IvScr, 1).Value
    Num_Lb.Caption = IIf(i = "", "Reexibir", i & "/" & NumEmExib)
    Num_Lb.Font.Bold = i <> ""
    Num_Lb.Font.Underline = i = ""
    Num_Lb.ForeColor = IIf(i = "", &HFF0000, &H80000008)
    If i <> "" And IsNumeric(i) Then
        OcultarRegI_Cb.Value = i
        If OcultarRegF_Cb.Value = "" Then OcultarRegF_Cb.Value = i
    End If
    ExibirTodos_ChB.Caption = "Exibir ocultos (" & DocRegF - NumEmExib & ")"
End Sub

Private Sub WhatsThis_Img_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    Static cHHelpWhatsThis1 As Object
    If cHHelpWhatsThis1 Is Nothing Then Set cHHelpWhatsThis1 = Application.Run("CPAP_EX8.MAC!New_cHHelpWhatsThis")
    cHHelpWhatsThis1.WhatsThis_Img_MouseDown Button, Shift, x, y, Me
    If WhatsThis_Img.BackStyle = fmBackStyleOpaque Then Set cHHelpWhatsThis1 = Nothing
End Sub



Attribute VB_Name = "UserFormEditHist"
Attribute VB_Base = "0{75022157-0BFC-4A18-BB1D-D7E05B11A500}{98E92B21-D9C9-4491-9A83-449E0C190DC6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private vListBox As Control
Private vTextBox As Control
Private SemAltera|fffd||fffd|es As Boolean


Private Sub Ajuda_Bt_Click()
    If bHtmlHelp Then Application.Run "CPAP_EX8.MAC!HelpVBA", ThisWorkbook.Path & "\CPAP.chm", HelpContextID, 2 Else Application.Help ThisWorkbook.Path & "\cpap.hlp", HelpContextID
End Sub

Private Sub UserForm_Initialize()
    vEnableEvents = True
    Caption = "Editando Sugest|fffd|es do Campo " & HistEditCampo
    'Listando listboxes - Lista de sug fixas
    Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo, ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo).End(xlDown))
    If campo.Rows.Count < 100 Then
        j = 0
        For Each C In campo
            cf = Format(IIf(IsError(C.Value), "", C.Value), FormatoHist)
            j = j + 1
            If j > 1 Then
                vRep = False
                For i = 1 To SugFixas_Lb.ListCount
                    If SugFixas_Lb.List(i - 1) = cf Then vRep = True
                Next
                If vRep = False Then SugFixas_Lb.AddItem (cf)
            End If
        Next
    End If

    'Listando ListBox - Sugest Hist|fffd|ricas
    Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist", ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist").End(xlDown))
    If campo.Rows.Count < 10000 Then
        j = 0
        For Each C In campo
            cf = Format(IIf(IsError(C.Value), "", C.Value), FormatoHist)
            j = j + 1
            If j > 1 Then
                vRep = False
                For i = 1 To SugHist_Lb.ListCount
                    If SugHist_Lb.List(i - 1) = cf Then vRep = True
                Next
                If vRep = False And cf <> "" Then SugHist_Lb.AddItem (cf)
            End If
        Next
    End If
    NumMax_Ct.Value = ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist").Offset(-1, 0)
    MultiPage1.Value = 0
    MultiPage1_Change
    SemAltera|fffd||fffd|es = True
    OcultarExibControlesHist
End Sub

Private Sub NumMax_Ct_Change()
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub NumMax_Ct_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    If IsNumeric(NumMax_Ct.Value) Then
        If NumMax_Ct.Value < 0 Then NumMax_Ct.Value = 0
        If NumMax_Ct.Value > 100 Then NumMax_Ct.Value = 100
    Else
        NumMax_Ct.Value = 15
    End If
End Sub

Private Sub Fechar_Bt_Click()
    Hide
    If SemAltera|fffd||fffd|es = True Then Exit Sub
    If MsgBox("Salvar altera|fffd||fffd|es nas sugest|fffd|es para o campo " & HistEditCampo & "?", vbQuestion + vbOKCancel, "CPAP|fffd|") = vbCancel Then Exit Sub
    DirBD = Application.Evaluate(Workbooks("cpap_pri.mac").Names("DirBD").Value) 'DirP = ThisWorkbook.Path
    Application.ScreenUpdating = False
    If MyOpenFile(DirBD & "\banco\" & NomeArqHist, False) Then
        'Limpando c|fffd|lulas
        Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo, ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo).End(xlDown))
        If campo.Rows.Count < 100 Then
            i = campo(1)
            campo.ClearContents
            campo(1) = i
        End If
        Set campo = ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist", ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist").End(xlDown))
        If campo.Rows.Count > 10000 Then
        Else
            i = campo(1)
            campo.ClearContents
            campo(1) = i
        End If

        'Descaregando comboboxes - Sug. Fixas
        k = 0
        NumM|fffd|x = ThisWorkbook.Sheets(NomeArqHist).Range("DadosHist").Row - ThisWorkbook.Sheets(NomeArqHist).Range("DadosFixos").Row - 3
        For j = 1 To SugFixas_Lb.ListCount
            If j > NumM|fffd|x Then Exit For
            vRep = False
            If j > 1 Then
                For i = 1 To j
                    If ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo).Offset(i, 0) = SugFixas_Lb.List(j - 1) Then vRep = True
                Next
            End If
            If vRep = False Then
                k = k + 1
                ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo).Offset(k, 0) = SugFixas_Lb.List(j - 1)
            End If
        Next

        'Descarregando comboboxes - Sug. Hist|fffd|ricas
        k = 0
        For j = 1 To SugHist_Lb.ListCount
            If j > NumMax_Ct.Value * 1 Then Exit For
            vRep = False
            If j > 1 Then
                For i = 1 To j
                    If ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist").Offset(i, 0) = SugHist_Lb.List(j - 1) Then vRep = True
                Next
            End If
            If vRep = False Then
                k = k + 1
                ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist").Offset(k, 0) = SugHist_Lb.List(j - 1)
            End If
        Next
    End If
    ThisWorkbook.Sheets(NomeArqHist).Range(HistEditCampo & "Hist").Offset(-1, 0) = NumMax_Ct.Value
    SalvandoHist
    Application.ScreenUpdating = True
End Sub

Private Sub Mover_Sb_SpinUp()
    i = vListBox.ListIndex
    If i < 1 Then Exit Sub
    vListBox.AddItem vListBox.List(i), i - 1
    vListBox.RemoveItem i + 1
    vListBox.Selected(i - 1) = True
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub Mover_Sb_SpinDown()
    i = vListBox.ListIndex
    If i < 0 Or i + 1 >= vListBox.ListCount Then Exit Sub
    vListBox.AddItem vListBox.List(i), i + 2
    vListBox.RemoveItem i
    vListBox.Selected(i + 1) = True
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub Transf_Bt_Click()
    i = vListBox.ListIndex
    If i < 0 Then Exit Sub
    If vListBox.Selected(i) Then
        I1 = vListBox.Value
        vListBox.RemoveItem i
        vEnableEvents = False
        If vListBox.ListIndex = -1 Then vTextBox.Value = ""
        vEnableEvents = True
    End If
    If MultiPage1.Value = 0 Then MultiPage1.Value = 1 Else MultiPage1.Value = 0
    vListBox.AddItem I1
    vListBox.Selected(vListBox.ListCount - 1) = True
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub Excluir_Bt_Click()
    i = vListBox.ListIndex
    If i < 0 Then Exit Sub
    If vListBox.Selected(i) Then vListBox.RemoveItem i
    vEnableEvents = False
    If vListBox.ListIndex = -1 Then vTextBox.Value = ""
    vEnableEvents = True
    OcultarExibControlesHist
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub Nova_Bt_Click()
    vListBox.AddItem "Nova Sugest|fffd|o" & vListBox.ListCount + 1
    vListBox.Selected(vListBox.ListCount - 1) = True
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub MultiPage1_Change()
    If MultiPage1.Value = 0 Then
        Set vListBox = SugHist_Lb
        Set vTextBox = SugHist_Ct
    Else
        Set vListBox = SugFixas_Lb
        Set vTextBox = SugFixas_Ct
    End If
    OcultarExibControlesHist
End Sub

Private Sub SugFixas_Ct_Change()
    If vEnableEvents = False Then Exit Sub
    i = SugFixas_Lb.ListIndex
    I1 = SugFixas_Ct.SelStart
    If i < 0 Then
        j = SugFixas_Ct.Value
        Nova_Bt_Click
        SugFixas_Ct.Value = j
        i = SugFixas_Lb.ListCount - 1
    End If
    SugFixas_Lb.AddItem SugFixas_Ct.Value, i
    SugFixas_Lb.RemoveItem i + 1
    SugFixas_Lb.Selected(i) = True
    SugFixas_Ct.SelStart = I1
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub SugFixas_Ct_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    i = SugFixas_Lb.ListIndex
    If SugFixas_Ct.Value <> "" Or i < 0 Then Exit Sub
    SugFixas_Lb.RemoveItem i
End Sub

Private Sub SugFixas_LB_Click()
    vEnableEvents = False
    SugFixas_Ct.Value = SugFixas_Lb.Value
    If SugFixas_Ct.Enabled Then SugFixas_Ct.SetFocus
    vEnableEvents = True
    OcultarExibControlesHist
End Sub

Private Sub SugHist_Ct_Change()
    If vEnableEvents = False Then Exit Sub
    i = SugHist_Lb.ListIndex
    I1 = SugHist_Ct.SelStart
    If i < 0 Then
        j = SugHist_Ct.Value
        Nova_Bt_Click
        SugHist_Ct.Value = j
        i = SugHist_Lb.ListCount - 1
    End If
    SugHist_Lb.AddItem SugHist_Ct.Value, i
    SugHist_Lb.RemoveItem i + 1
    SugHist_Lb.Selected(i) = True
    SugHist_Ct.SelStart = I1
    SemAltera|fffd||fffd|es = False
End Sub

Private Sub SugHist_Ct_Exit(ByVal Cancel As MSForms.ReturnBoolean)
    i = SugHist_Lb.ListIndex
    If SugHist_Ct.Value <> "" Or i < 0 Then Exit Sub
    SugHist_Lb.RemoveItem i
End Sub

Private Sub SugHist_Lb_Click()
    vEnableEvents = False
    SugHist_Ct.Value = SugHist_Lb.Value
    If SugHist_Ct.Enabled Then SugHist_Ct.SetFocus
    vEnableEvents = True
    OcultarExibControlesHist
End Sub

Sub OcultarExibControlesHist()
    i = vListBox.ListIndex > -1
    Excluir_Bt.Enabled = i
    Mover_Sb.Enabled = i
    Mover_Lb.Enabled = i
    Transf_Bt.Enabled = i
    Transf_Bt.ControlTipText = "Transfere para " & IIf(MultiPage1.Value = 0, "Fixas", "Hist|fffd|ricas")
    WhatsThis_Img.Top = -50: If bHtmlHelp Then WhatsThis_Img.Top = -1: WhatsThis_Img.Left = Width - 10
End Sub

Private Sub WhatsThis_Img_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)
    Static cHHelpWhatsThis1 As Object
    If cHHelpWhatsThis1 Is Nothing Then Set cHHelpWhatsThis1 = Application.Run("CPAP_EX8.MAC!New_cHHelpWhatsThis")
    cHHelpWhatsThis1.WhatsThis_Img_MouseDown Button, Shift, x, y, Me
    If WhatsThis_Img.BackStyle = fmBackStyleOpaque Then Set cHHelpWhatsThis1 = Nothing
End Sub



INQUEST-PP=macro
