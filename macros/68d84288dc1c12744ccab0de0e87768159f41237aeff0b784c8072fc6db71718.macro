Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_AddinUninstall()
  Dim Commands As New JetAddInCommands
  Application.EnableCancelKey = xlDisabled
  Fly2 Commands.AddinUninstall
End Sub

' When this XLA closes, Excel is closing. We call the "Close"
' command to perform shut down tasks
Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Dim Commands As New JetAddInCommands
  Application.EnableCancelKey = xlDisabled
  Fly2 Commands.Close
End Sub

' When this XLA opens, we load all the Jet Reports code
Private Sub Workbook_Open()
  Application.EnableCancelKey = xlDisabled
  Fly2 ""
End Sub
Attribute VB_Name = "XlaJetFunctions"
Option Explicit

' CloseCancelled determines whether the user has cancelled a Close
' operation of the Excel application.  This is important for the
' Dispatcher to know whether the Add-In (Toolbar, Menu) must be installed.
Private CloseCancelled As Boolean
Private Commands As JetAddInCommands

Public Sub JetMenu(Optional ByVal Menu As String)
  If Commands Is Nothing Then
    Set Commands = New JetAddInCommands
  End If
  Application.EnableCancelKey = xlDisabled
  Fly Commands.Menu, Menu
End Sub

Public Sub CloseDataSources()
  If Commands Is Nothing Then
    Set Commands = New JetAddInCommands
  End If
  Application.EnableCancelKey = xlDisabled
  Fly Commands.CloseDataSources
End Sub

' The Navision Link function, returns fields, keys, and records
Public Function NL(Optional ByVal What As Variant, _
                   Optional ByVal Table As Variant, Optional ByVal Field As Variant, _
                   Optional ByVal FilterField1 As Variant, Optional ByVal Filter1 As Variant, _
                   Optional ByVal FilterField2 As Variant, Optional ByVal Filter2 As Variant, _
                   Optional ByVal FilterField3 As Variant, Optional ByVal Filter3 As Variant, _
                   Optional ByVal FilterField4 As Variant, Optional ByVal Filter4 As Variant, _
                   Optional ByVal FilterField5 As Variant, Optional ByVal Filter5 As Variant, _
                   Optional ByVal FilterField6 As Variant, Optional ByVal Filter6 As Variant, _
                   Optional ByVal FilterField7 As Variant, Optional ByVal Filter7 As Variant, _
                   Optional ByVal FilterField8 As Variant, Optional ByVal Filter8 As Variant, _
                   Optional ByVal FilterField9 As Variant, Optional ByVal Filter9 As Variant, _
                   Optional ByVal FilterField10 As Variant, Optional ByVal Filter10 As Variant) As Variant
  If Commands Is Nothing Then
    Set Commands = New JetAddInCommands
  End If
  Application.EnableCancelKey = xlDisabled
  NL = Fly(Commands.NL, What, Table, Field, _
    FilterField1, Filter1, FilterField2, Filter2, FilterField3, Filter3, _
    FilterField4, Filter4, FilterField5, Filter5, FilterField6, Filter6, _
    FilterField7, Filter7, FilterField8, Filter8, FilterField9, Filter9, _
    FilterField10, Filter10)
End Function

Public Function NF(Optional ByVal Key As Variant, Optional ByVal Field As Variant, _
                   Optional ByVal FlowFilterField1 As Variant, Optional ByVal Filter1 As Variant, _
                   Optional ByVal FlowFilterField2 As Variant, Optional ByVal Filter2 As Variant, _
                   Optional ByVal FlowFilterField3 As Variant, Optional ByVal Filter3 As Variant, _
                   Optional ByVal FlowFilterField4 As Variant, Optional ByVal Filter4 As Variant, _
                   Optional ByVal FlowFilterField5 As Variant, Optional ByVal Filter5 As Variant, _
                   Optional ByVal FlowFilterField6 As Variant, Optional ByVal Filter6 As Variant, _
                   Optional ByVal FlowFilterField7 As Variant, Optional ByVal Filter7 As Variant, _
                   Optional ByVal FlowFilterField8 As Variant, Optional ByVal Filter8 As Variant, _
                   Optional ByVal FlowFilterField9 As Variant, Optional ByVal Filter9 As Variant) As Variant
  If Commands Is Nothing Then
    Set Commands = New JetAddInCommands
  End If
  Application.EnableCancelKey = xlDisabled
  NF = Fly(Commands.NF, Key, Field, _
    FlowFilterField1, Filter1, FlowFilterField2, Filter2, _
    FlowFilterField3, Filter3, FlowFilterField4, Filter4, _
    FlowFilterField5, Filter5, FlowFilterField6, Filter6, _
    FlowFilterField7, Filter7, FlowFilterField8, Filter8, _
    FlowFilterField9, Filter9)
End Function

Public Function NP(Optional ByVal What As Variant, _
                   Optional ByVal Arg1 As Variant, Optional ByVal Arg2 As Variant, _
                   Optional ByVal Arg3 As Variant, Optional ByVal Arg4 As Variant, _
                   Optional ByVal Arg5 As Variant, Optional ByVal Arg6 As Variant, _
                   Optional ByVal Arg7 As Variant, Optional ByVal Arg8 As Variant, _
                   Optional ByVal Arg9 As Variant, Optional ByVal Arg10 As Variant, _
                   Optional ByVal Arg11 As Variant, Optional ByVal Arg12 As Variant, _
                   Optional ByVal Arg13 As Variant, Optional ByVal Arg14 As Variant, _
                   Optional ByVal Arg15 As Variant, Optional ByVal Arg16 As Variant, _
                   Optional ByVal Arg17 As Variant, Optional ByVal Arg18 As Variant, _
                   Optional ByVal Arg19 As Variant, Optional ByVal Arg20 As Variant, _
                   Optional ByVal Arg21 As Variant, Optional ByVal Arg22 As Variant) As Variant
  If Commands Is Nothing Then
    Set Commands = New JetAddInCommands
  End If
  Application.EnableCancelKey = xlDisabled
  NP = Fly(Commands.NP, What, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, _
                       Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, _
                       Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, _
                       Arg20, Arg21, Arg22)
End Function

Public Function GL(Optional ByVal Arg1 As Variant, _
                   Optional ByVal Arg2 As Variant, Optional ByVal Arg3 As Variant, _
                   Optional ByVal Arg4 As Variant, Optional ByVal Arg5 As Variant, _
                   Optional ByVal Arg6 As Variant, Optional ByVal Arg7 As Variant, _
                   Optional ByVal Arg8 As Variant, Optional ByVal Arg9 As Variant, _
                   Optional ByVal Arg10 As Variant, Optional ByVal Arg11 As Variant, _
                   Optional ByVal Arg12 As Variant, Optional ByVal Arg13 As Variant, _
                   Optional ByVal Arg14 As Variant, Optional ByVal Arg15 As Variant, _
                   Optional ByVal Arg16 As Variant, Optional ByVal Arg17 As Variant, _
                   Optional ByVal Arg18 As Variant, Optional ByVal Arg19 As Variant, _
                   Optional ByVal Arg20 As Variant, Optional ByVal Arg21 As Variant, _
                   Optional ByVal Arg22 As Variant, Optional ByVal DataSource As Variant) As Variant
  If Commands Is Nothing Then
    Set Commands = New JetAddInCommands
  End If
  Application.EnableCancelKey = xlDisabled
  GL = Fly(Commands.GL, _
    Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, _
    Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, _
    Arg20, Arg21, Arg22, DataSource)
End Function

Public Sub Fly2(ParamArray Params() As Variant)
  ' This is needed so that the routines in ThisWorkbook can accesss the Fly
  ' function below without making the Fly function Public. If Fly is public
  ' it shows up as a worksheet function.
  Fly Params(LBound(Params))
End Sub

Public Sub Drilldown(ParamArray Params() As Variant)
  If Commands Is Nothing Then
    Set Commands = New JetAddInCommands
  End If
  Fly Commands.Menu, Commands.Drilldown
End Sub

Private Function Fly(ParamArray Params() As Variant) As Variant
  ' Jet Reports DLL Dispatch Function
  On Error Resume Next
  Dim ParamCount As Integer
  Static JetDispatch As JetDispatcher
  Application.EnableCancelKey = xlDisabled
  If JetDispatch Is Nothing Then
    Set Commands = New JetAddInCommands
    Set JetDispatch = New JetDispatcher
    ReDim ObjArray(2) As Variant
    ObjArray = CVar(Array(Commands.Open, Application, ThisWorkbook, CloseCancelled))
    JetDispatch.Dispatch ObjArray
  End If
  ParamCount = UBound(Params) - LBound(Params)
  ReDim ObjArray(ParamCount) As Variant
  ObjArray = CVar(Params)
  Fly = JetDispatch.Dispatch(ObjArray)
  If Params(LBound(Params)) = Commands.Close Then
    CloseCancelled = True
    Set JetDispatch = Nothing
    Set Commands = Nothing
  End If
End Function


INQUEST-PP=macro
