Attribute VB_Name = "Module1"
Sub execReport()
    Dim conn As ADODB.Connection
    Dim rs As ADODB.Recordset
    Dim sConnString As String

    ' Create the connection string.
    sConnString = "Provider=SQLOLEDB;Data Source=SISQL02.snt-is.com;" & _
                  "Initial Catalog=SnTAssist;" & _
                  "Integrated Security=SSPI;"

    ' Create the Connection and Recordset objects.
    Set conn = New ADODB.Connection
    Set rs = New ADODB.Recordset

    ' Open the connection and execute.
    conn.Open sConnString
    
    Set ADODBCmd = New ADODB.Command
    ADODBCmd.ActiveConnection = conn
    ADODBCmd.CommandText = "[dbo].[_1019_rpt_TedenskaDezurstva]"
    ADODBCmd.CommandType = adCmdStoredProc
    ADODBCmd.CommandTimeout = 0
    
    Dim cdt As Date
    cdt = Now()
    If Not ThisWorkbook.Sheets(1).Range("G1") Is Nothing And Not ThisWorkbook.Sheets(1).Range("G1") = "" Then
        cdt = ThisWorkbook.Sheets(1).Range("G1")
    End If
    Set range1 = ADODBCmd.CreateParameter(SP_Param1, adDBDate, adParamInput, , Format(cdt, "YYYY-MM-DD"))
    ADODBCmd.Parameters.Append range1
    Set rs = ADODBCmd.Execute()
    
    'Set rs = conn.Execute("exec [dbo].[_1019_rpt_TedenskaDezurstva];")

    ' Check we have data.
    If Not rs.EOF Then
        ' Transfer result.
        Sheets(1).Range("A2").CopyFromRecordset rs
        
        Set rs = rs.NextRecordset
        Sheets(1).Range("A5").CopyFromRecordset rs
    ' Close the recordset
        rs.Close
    Else
        MsgBox "Error: No records returned.", vbCritical
    End If

    ' Clean up
    If CBool(conn.State And adStateOpen) Then conn.Close
    Set conn = Nothing
    Set rs = Nothing
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Worksheet_Change(ByVal Target As Range)
    Dim KeyCells As Range
    
    ' The variable KeyCells contains the cells that will
        ' cause an alert when they are changed.
        Set KeyCells = Range("G1:G1")
    
    If Not Application.Intersect(KeyCells, Range(Target.Address)) _
               Is Nothing Then
    
    ' Display a message when one of the designated cells has been
            ' changed.
            ' Place your code here.
            'MsgBox "Cell " & Target.Address & " has changed."
        execReport
    End If
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
    ThisWorkbook.Sheets(1).Range("G1") = Now()
End Sub


INQUEST-PP=macro
