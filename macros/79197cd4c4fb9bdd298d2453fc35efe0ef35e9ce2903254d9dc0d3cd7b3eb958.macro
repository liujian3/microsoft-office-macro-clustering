Attribute VB_Name = "CNN"
Sub MetBordure()
    Worksheets("Global Filter").Select
        Range("IsRunning").Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
        Selection.Borders(xlInsideVertical).LineStyle = xlNone
        Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Sub EnleveBordure()
    Worksheets("Global Filter").Select
        Range("IsRunning").Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        Selection.Borders(xlEdgeLeft).LineStyle = xlNone
        Selection.Borders(xlEdgeTop).LineStyle = xlNone
        Selection.Borders(xlEdgeBottom).LineStyle = xlNone
        Selection.Borders(xlEdgeRight).LineStyle = xlNone
        Selection.Borders(xlInsideVertical).LineStyle = xlNone
        Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Attribute VB_Name = "ColorTheWord"
Sub ColorTheWord(ByVal targeX As Range)

    targeX.Select
    With Selection.Font
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.249977111117893
    End With
    Selection.Font.Italic = True
End Sub


Attribute VB_Name = "CopieNettoyage"
'*************************************************************************************************************'
'*Copie & nettoyage des donn|fffd|es n|fffd|cessaires |fffd| la cr|fffd|ation des listes automatiques / Pierre & Ugo _ 29.09.2014*'
'*************************************************************************************************************'

Sub LeTotal()
 test Range("'A-ScanRange'!C9"), Range("'List_A'!A3")
 test Range("'B-Product Family'!C9"), Range("'List_B'!A3")
 test Range("'C-InterMonthSpreadLevels'!C9"), Range("'List_C'!A3")
 test Range("'D-InterMonthSpreadRate'!C9"), Range("'List_D'!A3")
 test Range("'E-SpotMonthRate'!C9"), Range("'List_E'!A3")
 test Range("'F-InterCCSpreadRate'!C9"), Range("'List_F'!A3")
End Sub

Sub test(r As Range, OutputRange As Range)
    Dim Data
    Data = Range(r, r.End(xlDown).Offset(, 2)).Value
    OutputRange.Parent.UsedRange.Offset(3).Delete xlUp
    Dim i&
    'For i = 1 To UBound(data) - 1
        'If data(i + 1, 1) < data(i, 1) Then MsgBox "Liste non tri|fffd|e"
    'Next i
    For i = 1 To UBound(Data) - 1
        If (Replace(Data(i, 1), " ", "") = "NA" And Not Replace(Data(i, 2), " ", "") = "NOVARTIS") Or (Replace(Data(i, 2), " ", "") = "NA") Then
            Data(i, 1) = ""
            Data(i, 2) = ""
        ElseIf Data(i + 1, 1) = Data(i, 1) Or Data(i + 1, 2) = Data(i, 2) Then
            If Data(i + 1, 1) = Data(i, 1) And Data(i + 1, 2) = Data(i, 2) Then
                Data(i, 1) = ""
                Data(i, 2) = ""
            ElseIf Data(i + 1, 1) = Data(i, 1) Then
                MsgBox "Half equal"
            End If
        End If
    Next i
    RemoveByValue Data, ""
    Range(OutputRange, OutputRange.Offset(UBound(Data) - 1, 2)).Value = Data
End Sub

Public Sub RemoveByValue(Mat, Val, Optional LineOrCol& = 1, Optional IsLine As Boolean = True)
    Dim n&, i&, j&
    If IsLine Then
        For i = 1 To UBound(Mat, 1)
            If Mat(i, LineOrCol) = Val Then n = n + 1
        Next i
    Else
        For i = 1 To UBound(Mat, 2)
            If Mat(LineOrCol, i) = Val Then n = n + 1
        Next i
    End If
    If n = 0 Then Exit Sub
    If n = UBound(Mat, IIf(IsLine, 1, 2)) Then
        Erase Mat
        Exit Sub
    End If
    Dim Mat2: Mat2 = Mat
    
    If IsLine Then
        ReDim Mat(1 To UBound(Mat2, 1) - n, 1 To UBound(Mat2, 2))
        n = 0
        For i = 1 To UBound(Mat2, 1)
            If Mat2(i, LineOrCol) = Val Then
                n = n + 1
            Else
                For j = 1 To UBound(Mat2, 2)
                    Mat(i - n, j) = Mat2(i, j)
                Next j
            End If
        Next i
    Else
        ReDim Mat(1 To UBound(Mat2, 1), 1 To UBound(Mat2, 2) - n)
        n = 0
        For i = 1 To UBound(Mat2, 2)
            If Mat2(LineOrCol, i) = Val Then
                n = n + 1
            Else
                For j = 1 To UBound(Mat2, 1)
                    Mat(j, i - n) = Mat2(j, i)
                Next j
            End If
        Next i
    End If
End Sub



Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Address = "$A$4" Or Target.Address = "$B$4" Or Target.Address = "$C$4" Or Target.Address = "$D$4" Then REFRESH_F
End Sub


Attribute VB_Name = "Feuil18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'*************************************************************'
'*Automatisation des filtres "A-ScanRange" / Ugo _ 29.09.2014*'
'*************************************************************'
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Address = "$A$4" Or Target.Address = "$B$4" Or Target.Address = "$C$4" Or Target.Address = "$D$4" Or Target.Address = "$K$4" Then REFRESH_A
End Sub



Attribute VB_Name = "Feuil4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'*****************************************************************'
'*Automatisation des filtres "B-ProductFamily" / Ugo _ 29.09.2014*'
'*****************************************************************'
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Address = "$A$4" Or Target.Address = "$B$4" Or Target.Address = "$C$4" Or Target.Address = "$D$4" Or Target.Address = "$O$4" Then REFRESH_B
End Sub


Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'**************************************************************************'
'*Automatisation des filtres "C-InterMonthSpreadLevels" / Ugo _ 29.09.2014*'
'**************************************************************************'
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Address = "$A$4" Or Target.Address = "$B$4" Or Target.Address = "$C$4" Or Target.Address = "$D$4" Then REFRESH_C
End Sub



Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'*******************************************************************'
'*Automatisation des filtres "D-IntraSpreadRule" / Ugo _ 29.09.2014*'
'*******************************************************************'
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Address = "$A$4" Or Target.Address = "$B$4" Or Target.Address = "$C$4" Or Target.Address = "$D$4" Then REFRESH_D
End Sub

Attribute VB_Name = "Feuil7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'********************************************************************'
'*Automatisation des filtres "E-SpotRateRuleList" / Ugo _ 29.09.2014*'
'********************************************************************'
Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Address = "$A$4" Or Target.Address = "$B$4" Or Target.Address = "$C$4" Or Target.Address = "$D$4" Or Target.Address = "$H$4" Then REFRESH_E
End Sub

Attribute VB_Name = "Feuil8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Attribute VB_Name = "Feuil9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ImportData"
Sub ColorTheWord(ByVal targeX As Range)
Sheets("Global Filter").Activate
    targeX.Select
    With Selection.Font
        .Name = "Times New Roman"
        .size = 10
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = 0
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .Color = 12299264
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Font.Italic = True
    Selection.Font.Bold = True
End Sub
Sub ImportData()

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

UNFORMAT

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

MetBordure

Range("IsRunning").Value = "Task in progress|fffd| / En cours d'ex|fffd|cution|fffd| :)"

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual


Dim Mat() As String
ReDim Mat(1 To 6)
Dim i%, j%, col%, col1%
Dim gap#, incr#
Dim CO, C1, C2, C3, C4, C5, C6, C7 As String
Dim D1, D2, D3, D4, D5, D6, D7 As String

Dim Data
C0 = Range("Margin").Value
C1 = Range("Clearing_Org").Value
C2 = Range("CC_Group_Code").Value
C3 = Range("CC_Code").Value
C4 = Range("CC_Name").Value
C5 = Range("PF_Code").Value
C6 = Range("PF_Name").Value
C7 = Range("ISIN_Code").Value



'Empty Sheets

If C0 = "" Then
    MsgBox ("Please add a Margin before trying to import Portfolio")
   Exit Sub
End If
                       
Range(Range("Clearing_Org").Offset(6, 0), Range("Clearing_Org").Offset(40000, 12)).Delete
                        
                        
'*************************************************************'
'*Import des donn|fffd|es pour chaque Marge / CNN _ 30.03.2016*'
'*************************************************************'
                        
If C0 <> "" And C0 <> "G-PF List" And C0 <> "0-All" Then

    If C0 = "A-ScanRange" Or C0 = "C-InterMonthSpreadLevels" Or C0 = "F-InterCCSpreadRate" Then
    Data = Sheets(C0).Range("A8").CurrentRegion
    Nb_Ligne = UBound(Data, 1)
    Nb_Col = 10
    
    ElseIf C0 = "E-SpotMonthRate" Then
    Data = Sheets(C0).Range("A8").CurrentRegion
    Nb_Ligne = UBound(Data, 1)
    Nb_Col = 11
    
    ElseIf C0 = "B-Product Family" Or C0 = "D-InterMonthSpreadRate" Then
        Data = Sheets(C0).Range("A8").CurrentRegion
        Nb_Ligne = UBound(Data, 1)
        Nb_Col = 12
                  
    End If
                           
        '1-Taitement du Titre
        
        Range(Range("Clearing_Org").Offset(6, 0), Range("Clearing_Org").Offset(6, Nb_Col - 1)) = Data
        ColorTheWord Range(Range("Clearing_Org").Offset(6, 0), Range("Clearing_Org").Offset(6, Nb_Col - 1))
        Selection.RowHeight = 30
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
                
        '2-Boucle sur les lignes de Data
                         
        gap = 0
        For incr = 2 To Nb_Ligne
        
                If C1 = "" Then
                    D1 = Data(incr, 1)
                Else
                    D1 = C1
                End If
                
                If C2 = "" Then
                    D2 = Data(incr, 2)
                Else
                    D2 = C2
                End If
                
                If C3 = "" Then
                    D3 = Data(incr, 3)
                Else
                    D3 = C3
                End If
                
                If C4 = "" Then
                    D4 = Data(incr, 4)
                Else
                    D4 = C4
                End If
                
                If C5 = "" Then
                    D5 = Data(incr, 5)
                Else
                    D5 = C5
                End If
                 
                If C6 = "" Then
                    If C0 = "B-Product Family" Then
                        col = 7
                        D6 = Data(incr, col)
                    Else
                        col = 6
                        D6 = Data(incr, col)
                    End If
                Else
                    col = 6
                    D6 = C6
                End If
                
                If C7 = "" Then
                    If C0 = "A-ScanRange" Or C0 = "C-InterMonthSpreadLevels" Or C0 = "D-InterMonthSpreadRate" Or C0 = "F-InterCCSpreadRate" Then
                        col1 = 5
                        D7 = Data(incr, col1)
                    ElseIf C0 = "B-Product Family" Or C0 = "E-SpotMonthRate" Then
                        col1 = 6
                        D7 = Data(incr, col1)
                    End If
                Else
                    If C0 = "A-ScanRange" Or C0 = "C-InterMonthSpreadLevels" Or C0 = "D-InterMonthSpreadRate" Or C0 = "F-InterCCSpreadRate" Then
                        col1 = 5
                        D7 = C7
                    ElseIf C0 = "B-Product Family" Or C0 = "E-SpotMonthRate" Then
                        col1 = 6
                        D7 = C7
                    End If
                End If
    
            If D1 = Data(incr, 1) And D2 = Data(incr, 2) And D3 = Data(incr, 3) And D4 = Data(incr, 4) And D5 = Data(incr, 5) And D6 = Data(incr, col) And D7 = Data(incr, col1) Then
                gap = gap + 1
                For j = 1 To Nb_Col
                    Range("Clearing_Org").Offset(6 + gap, j - 1) = Data(incr, j)
                Next j
            End If
            
        Next
        Sheets("Global Filter").Activate
        Cells.Select
        Cells.EntireColumn.AutoFit
        Cells.EntireRow.AutoFit
                      

'****************************************************************'
'*Import des Listes de PF associ|fffd|es |fffd| un CC / CNN _ 30.03.2016*'
'****************************************************************'
    
ElseIf C0 = "G-PF List" And C0 <> "0-All" Then

    Data = Sheets("B-Product Family").Range("A8").CurrentRegion
    Nb_Ligne = UBound(Data, 1)
    Nb_Col = 7
        
        '1-Taitement du Titre
        
        Range(Range("Clearing_Org").Offset(6, 0), Range("Clearing_Org").Offset(6, Nb_Col - 1)) = Data
        ColorTheWord Range(Range("Clearing_Org").Offset(6, 0), Range("Clearing_Org").Offset(6, Nb_Col - 1))
        Selection.RowHeight = 30
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With Selection.Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = 0
            .Weight = xlThin
        End With
        
        '2-Boucle sur les lignes de Data
        
        gap = 0
        For incr = 2 To Nb_Ligne
            
                If C1 = "" Then
                    D1 = Data(incr, 1)
                Else
                    D1 = C1
                End If
                
                If C2 = "" Then
                    D2 = Data(incr, 2)
                Else
                    D2 = C2
                End If
                
                If C3 = "" Then
                    D3 = Data(incr, 3)
                Else
                    D3 = C3
                End If
                
                If C4 = "" Then
                    D4 = Data(incr, 4)
                Else
                    D4 = C4
                End If
                
                If C5 = "" Then
                    D5 = Data(incr, 5)
                Else
                    D5 = C5
                End If
                 
                If C6 = "" Then
                    If C0 = "B-Product Family" Then
                        col = 7
                        D6 = Data(incr, col)
                    Else
                        col = 6
                        D6 = Data(incr, col)
                    End If
                Else
                    col = 6
                    D6 = C6
                End If
                
                If C7 = "" Then
                    If C0 = "A-ScanRange" Or C0 = "C-InterMonthSpreadLevels" Or C0 = "D-InterMonthSpreadRate" Or C0 = "F-InterCCSpreadRate" Then
                        col1 = 5
                        D7 = Data(incr, col1)
                    ElseIf C0 = "B-Product Family" Or C0 = "E-SpotMonthRate" Then
                        col1 = 6
                        D7 = Data(incr, col1)
                    End If
                Else
                    D7 = C7
                End If
    
            If D1 = Data(incr, 1) And D2 = Data(incr, 2) And D3 = Data(incr, 3) Then
                gap = gap + 1
                For j = 1 To Nb_Col
                    Range("Clearing_Org").Offset(6 + gap, j - 1) = Data(incr, j)
                Next j
            End If
        Next
        Sheets("Global Filter").Activate
        Cells.Select
        Cells.EntireColumn.AutoFit
        Cells.EntireRow.AutoFit
        

'****************************************************'
'*Import de Toutes les Marges / CNN _ 30.03.2016*'
'****************************************************'

ElseIf C0 = "0-All" Then

If Not IsEmpty(Data) Then Erase Data

    Dim MatData() As String, lag#
    Mat(1) = "A-ScanRange"
    Mat(2) = "B-Product Family"
    Mat(3) = "C-InterMonthSpreadLevels"
    Mat(4) = "D-InterMonthSpreadRate"
    Mat(5) = "E-SpotMonthRate"
    Mat(6) = "F-InterCCSpreadRate"
    
    lag = 0
    
        For i = 1 To 6
        
            If i = 1 Or i = 3 Or i = 6 Then
                Data = Sheets(Mat(i)).Range("A8").CurrentRegion
                Nb_Ligne = UBound(Data, 1)
                Nb_Col = 10
        
            ElseIf i = 5 Then
                Data = Sheets(Mat(i)).Range("A8").CurrentRegion
                Nb_Ligne = UBound(Data, 1)
                Nb_Col = 11
        
            ElseIf i = 2 Or i = 4 Then
                Data = Sheets(Mat(i)).Range("A8").CurrentRegion
                Nb_Ligne = UBound(Data, 1)
                Nb_Col = 12
                      
            End If
  
            '1-Taitement du Titre
        
            Range(Range("Clearing_Org").Offset(6 + lag, 0), Range("Clearing_Org").Offset(6 + lag, Nb_Col - 1)) = Data
            ColorTheWord Range(Range("Clearing_Org").Offset(6 + lag, 0), Range("Clearing_Org").Offset(6 + lag, Nb_Col - 1))
            Selection.RowHeight = 30
            Selection.Borders(xlDiagonalDown).LineStyle = xlNone
            Selection.Borders(xlDiagonalUp).LineStyle = xlNone
            With Selection.Borders(xlEdgeLeft)
                .LineStyle = xlContinuous
                .ThemeColor = 1
                .TintAndShade = 0
                .Weight = xlThin
            End With
            With Selection.Borders(xlEdgeTop)
                .LineStyle = xlContinuous
                .ThemeColor = 1
                .TintAndShade = 0
                .Weight = xlThin
            End With
            With Selection.Borders(xlEdgeBottom)
                .LineStyle = xlContinuous
                .ThemeColor = 1
                .TintAndShade = 0
                .Weight = xlThin
            End With
            With Selection.Borders(xlEdgeRight)
                .LineStyle = xlContinuous
                .ThemeColor = 1
                .TintAndShade = 0
                .Weight = xlThin
            End With
            With Selection.Borders(xlInsideVertical)
                .LineStyle = xlContinuous
                .ThemeColor = 1
                .TintAndShade = 0
                .Weight = xlThin
            End With
            With Selection.Borders(xlInsideHorizontal)
                .LineStyle = xlContinuous
                .ThemeColor = 1
                .TintAndShade = 0
                .Weight = xlThin
            End With
        
            '2-Boucle sur les lignes de Data
            
            gap = 0
            For incr = 2 To Nb_Ligne
                
                    If C1 = "" Then
                        D1 = Data(incr, 1)
                    Else
                        D1 = C1
                    End If
                    
                    If C2 = "" Then
                        D2 = Data(incr, 2)
                    Else
                        D2 = C2
                    End If
                    
                    If C3 = "" Then
                        D3 = Data(incr, 3)
                    Else
                        D3 = C3
                    End If
                    
                    If C4 = "" Then
                        D4 = Data(incr, 4)
                    Else
                        D4 = C4
                    End If
                    
                    If C5 = "" Then
                        D5 = Data(incr, 5)
                    Else
                        D5 = C5
                    End If
                     
                    If C6 = "" Then
                        If Mat(i) = "B-Product Family" Then
                            col = 7
                            D6 = Data(incr, col)
                        Else
                            col = 6
                            D6 = Data(incr, col)
                        End If
                    Else
                        col = 6
                        D6 = C6
                    End If
                    
                    If C7 = "" Then
                        If Mat(i) = "A-ScanRange" Or Mat(i) = "C-InterMonthSpreadLevels" Or Mat(i) = "D-InterMonthSpreadRate" Or Mat(i) = "F-InterCCSpreadRate" Then
                            col1 = 5
                            D7 = Data(incr, col1)
                        ElseIf Mat(i) = "B-Product Family" Or Mat(i) = "E-SpotMonthRate" Then
                            col1 = 6
                            D7 = Data(incr, col1)
                        End If
                    Else
                        If Mat(i) = "A-ScanRange" Or Mat(i) = "C-InterMonthSpreadLevels" Or Mat(i) = "D-InterMonthSpreadRate" Or Mat(i) = "F-InterCCSpreadRate" Then
                            col1 = 5
                            D7 = C7
                        ElseIf Mat(i) = "B-Product Family" Or Mat(i) = "E-SpotMonthRate" Then
                            col1 = 6
                            D7 = C7
                        End If
                    End If
        
                If D1 = Data(incr, 1) And D2 = Data(incr, 2) And D3 = Data(incr, 3) And D4 = Data(incr, 4) And D5 = Data(incr, 5) And D6 = Data(incr, col) And D7 = Data(incr, col1) Then
                    gap = gap + 1
                    For j = 1 To Nb_Col
                        Range("Clearing_Org").Offset(6 + gap + lag, j - 1) = Data(incr, j)
                    Next j
                End If
            Next
            Sheets("Global Filter").Activate
            Cells.Select
            Cells.EntireColumn.AutoFit
            Cells.EntireRow.AutoFit
                        
        lag = gap + lag + 6
    
    Next

End If

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

Range("IsRunning").Value = ""
EnleveBordure

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

FORMAT
Sheets("Global Filter").Activate
Range("A1").Select

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub


Attribute VB_Name = "ImportListG"
'*************************************************************************************************************'
'*Copie des donn|fffd|es n|fffd|cessaires |fffd| la cr|fffd|ation de la liste G / CNN _ 23.03.2016*'
'*************************************************************************************************************'

Sub LeTotal1()
 test1 Range("'B-Product Family'!C9"), Range("'List_G'!A3")
End Sub

Sub test1(r As Range, OutputRange As Range)
    Dim Data
    Data = Range(r, r.End(xlDown).Offset(, 4)).Value
    OutputRange.Parent.UsedRange.Offset(2).ClearContents
    Range(OutputRange, OutputRange.Offset(UBound(Data) - 1, 4)).Value = Data
End Sub




Attribute VB_Name = "Jointure"
Sub jointi(w As Integer)
    Range(Sheets("Global Filter").Cells(w - 1, 1), Sheets("Global Filter").Cells(w, 1)).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub

Sub linefin(w As Integer)
    Range(Sheets("Global Filter").Cells(w, 1), Sheets("Global Filter").Cells(w, 1)).Select
    Range(Selection, Selection.End(xlUp)).Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
End Sub


Attribute VB_Name = "MAJ"
'************************************************************************************************************'
'*Mise |fffd| jour automatique des tableaux en fonction de la s|fffd|lection faite dans les filtres / Ugo _ 29.09.2014*'
'************************************************************************************************************'

Sub REFRESH_A()
'
' REFRESH_A Macro
'

'
    Range("A8:L7500").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("A3:L4"), Unique:=False
End Sub
Sub REFRESH_B()
'
' REFRESH_B Macro
'

'
    Range("A8:O4000").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("A3:O4"), Unique:=False
End Sub
Sub REFRESH_C()
'
' REFRESH_C Macro
'

'
    Range("A8:J3000").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("A3:J4"), Unique:=False
End Sub
Sub REFRESH_D()
'
' REFRESH_D Macro
'

'
    Range("A8:K1000").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("A3:K4"), Unique:=False
End Sub
Sub REFRESH_E()
'
' REFRESH_E Macro
'

'
    Range("A8:L200").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("A3:L4"), Unique:=False
End Sub

Sub REFRESH_F()
'
' REFRESH_F Macro
'

'
    Range("A8:K1000").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= _
        Range("A3:K4"), Unique:=False
End Sub


Attribute VB_Name = "MEForme"
'**************************************************************'
'*Option de mise en forme: Sommaire "Daily" / Ugo _ 29.09.2014*'
'**************************************************************'
Sub SUMMARY_DAILY()
    Sheets("Summary (EN)").Visible = True
    Sheets("Sommaire (FR)").Visible = True
    Sheets("A-ScanRange").Select
    Range("K4").Select
    ActiveCell.FormulaR1C1 = "RTH"
    Sheets("B-Product Family").Select
    Range("O4").Select
    ActiveCell.FormulaR1C1 = "RTH"
    Sheets("Dashboard").Select
    Sheets("F-InterCCSpreadRate").Visible = True
End Sub
'**************************************************************************************'
'*Mise en forme du document/ Trie par ordre alphab|fffd|tique des listes / Ugo _ 16.04.2015*'
'**************************************************************************************'
Sub FORMAT()

    ActiveWorkbook.Worksheets("List_A").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("List_A").AutoFilter.Sort.SortFields.Add Key:=Range _
        ("B2"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("List_A").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    With ActiveWorkbook.Worksheets("List_B").Select
    ActiveWorkbook.Worksheets("List_B").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("List_B").AutoFilter.Sort.SortFields.Add Key:=Range _
        ("B2"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("List_B").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Sheets("List_C").Select
    ActiveWorkbook.Worksheets("List_C").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("List_C").AutoFilter.Sort.SortFields.Add Key:=Range _
        ("B2"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("List_C").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Sheets("List_D").Select
    ActiveWorkbook.Worksheets("List_D").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("List_D").AutoFilter.Sort.SortFields.Add Key:=Range _
        ("B2"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("List_D").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Sheets("List_E").Select
    ActiveWorkbook.Worksheets("List_E").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("List_E").AutoFilter.Sort.SortFields.Add Key:=Range _
        ("B2"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("List_E").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Sheets("List_F").Select
    ActiveWorkbook.Worksheets("List_F").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("List_F").AutoFilter.Sort.SortFields.Add Key:=Range _
        ("B2"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("List_F").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
End With
    
    
    
    
'****************************************************************'
'*Mise en forme du document / Trie des tables / Ugo _ 29.09.2014*'
'****************************************************************'
    
    
    Sheets("Dashboard").Visible = False
    Sheets(Array("Common Lists", "List_A", "List_B", "List_C", "List_D", "List_E", "List_F", "List_G")).Visible = False

Worksheets("C-InterMonthSpreadLevels").Select
    Range("A8:K8").Select
    Range(Selection, Selection.End(xlDown)).Select
    Worksheets("C-InterMonthSpreadLevels").Sort.SortFields.Clear
    Worksheets("C-InterMonthSpreadLevels").Sort.SortFields.Add Key _
    :=Range("C9:C601"), SortOn:=xlSortOnValues, Order:=xlAscending, _
    DataOption:=xlSortNormal
    Worksheets("C-InterMonthSpreadLevels").Sort.SortFields.Add Key _
    :=Range("F9:F601"), SortOn:=xlSortOnValues, Order:=xlAscending, _
    DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("C-InterMonthSpreadLevels").Sort
    .SetRange Range("A8:J601")
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
    End With

Worksheets("D-InterMonthSpreadRate").Select
    Range("A8:M8").Select
    Range(Selection, Selection.End(xlDown)).Select
    ActiveWorkbook.Worksheets("D-InterMonthSpreadRate").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("D-InterMonthSpreadRate").Sort.SortFields.Add Key:=Range _
    ("C9:C398"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
    xlSortNormal
    ActiveWorkbook.Worksheets("D-InterMonthSpreadRate").Sort.SortFields.Add Key:=Range _
    ("F9:F398"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
    xlSortNormal
    ActiveWorkbook.Worksheets("D-InterMonthSpreadRate").Sort.SortFields.Add Key:=Range _
    ("K9:K398"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
    xlSortNormal
    ActiveWorkbook.Worksheets("D-InterMonthSpreadRate").Sort.SortFields.Add Key:=Range _
    ("H9:H398"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
    xlSortNormal
    With ActiveWorkbook.Worksheets("D-InterMonthSpreadRate").Sort
    .SetRange Range("A8:M398")
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
    End With
    
On Error Resume Next
Worksheets("F-InterCCSpreadRate").Select
    Range("A8:J8").Select
    Range(Selection, Selection.End(xlDown)).Select
    ActiveWorkbook.Worksheets("F-InterCCSpreadRate").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("F-InterCCSpreadRate").Sort.SortFields.Add Key:=Range _
        ("F9:F150"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:= _
        xlSortNormal
    With ActiveWorkbook.Worksheets("F-InterCCSpreadRate").Sort
        .SetRange Range("A8:J150")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
'*******************************************************************'
'* Verrouille tous les onglets + Choix password / Ugo _ 16.04.2015 *'
'*******************************************************************'

 Dim wSheet          As Worksheet
    Dim Pwd             As String
     
    'Pwd = InputBox("Enter your password to protect all worksheets", "LCHSA")
    Pwd = "LCHSA"
    For Each wSheet In Worksheets
        wSheet.Protect Password:=Pwd
    Next wSheet
        Worksheets("Global Filter").Unprotect Password:=Pwd
        
End With
End Sub

'*****************************************************************************************'
'*Deverouille tous les onglets & supprime la mise en forme du document / Ugo _ 29.09.2014*'
'*****************************************************************************************'
Sub UNFORMAT()
    
      Dim wSheet          As Worksheet
    Dim Pwd             As String
     
    'Pwd = InputBox("Enter your password to protect all worksheets", "LCHSA")
    Pwd = "LCHSA"
    On Error Resume Next
    For Each wSheet In Worksheets
        wSheet.Unprotect Password:=Pwd
    Next wSheet
    If Err <> 0 Then
        MsgBox "You have entered an incorect password. All worksheets could not " & _
        "be unprotected.", vbCritical, "Incorect Password"
    End If
    On Error GoTo 0
    
'*****************************************************************************************'
'*Deverouille tous les onglets & supprime la mise en forme du document / Ugo _ 29.09.2014*'
'*****************************************************************************************'
    
    Sheets("Dashboard").Visible = True
    Sheets("Common Lists").Visible = True
    Sheets("List_A").Visible = True
    Sheets("List_B").Visible = True
    Sheets("List_C").Visible = True
    Sheets("List_D").Visible = True
    Sheets("List_E").Visible = True
    Sheets("List_F").Visible = True
    Sheets("List_G").Visible = True
    
End Sub







Attribute VB_Name = "NominationListe"
'*******************************************************************************************'
'*Nomination des listes, |fffd|tape n|fffd|cessaire |fffd| l'automatisation des filtres / Ugo _ 29.09.2014*'
'*******************************************************************************************'


Sub MylistAux(r As Range, nam$)
    Range(r, r.End(xlDown).Offset(1)).Name = nam
    With r.End(xlDown).Offset(1)
        .Value = "vide"
        .Value = ""
     End With
End Sub

Sub MYLIST()
    MylistAux Range("List_A!A3"), "MYLISTA1"
    MylistAux Range("List_A!B3"), "MYLISTA2"
    MylistAux Range("List_A!C3"), "MYLISTA3"
    MylistAux Range("List_B!A3"), "MYLISTB1"
    MylistAux Range("List_B!B3"), "MYLISTB2"
    MylistAux Range("List_B!C3"), "MYLISTB3"
    MylistAux Range("List_C!A3"), "MYLISTC1"
    MylistAux Range("List_C!B3"), "MYLISTC2"
    MylistAux Range("List_D!A3"), "MYLISTD1"
    MylistAux Range("List_D!B3"), "MYLISTD2"
    MylistAux Range("List_E!A3"), "MYLISTE1"
    MylistAux Range("List_E!B3"), "MYLISTE2"
    MylistAux Range("List_E!C3"), "MYLISTE3"
    MylistAux Range("List_F!A3"), "MYLISTF1"
    MylistAux Range("List_F!B3"), "MYLISTF2"
    MylistAux Range("List_G!A3"), "MYLISTG1"
    MylistAux Range("List_G!C3"), "MYLISTG2"
    MylistAux Range("List_G!E3"), "MYLISTG3"
End Sub




Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
MsgBox _
"Thank you for open this file, new update on 22/04/2016 : it is possible now to visualize directly the perimeter wished in the tab Global Filter " & Chr(10) & "     1) Define one or several cells to be imported by means of the selection " & Chr(10) & "     2) Load the data by means of the button ImportData " & Chr(10) & " " & Chr(10) & "Best Regards," & Chr(10) & "LCH SA" & Chr(10) & " " & Chr(10) & " " & Chr(10) & "Merci d'avoir ouvert ce fichier, nouvelle mise |fffd| jour en date du 22/04/2016: il est d|fffd|sormais possible de visualiser directement le p|fffd|rim|fffd|tre souhait|fffd| dans l'onglet Global Filter " & Chr(10) & "     1) D|fffd|finir la ou les cellules |fffd| importer |fffd| l'aide de la s|fffd|lection " & Chr(10) & "     2) Charger les donn|fffd|es |fffd| l'aide du bouton ImportData" & Chr(10) & " " & Chr(10) & "Cordialement," & Chr(10) & "LCH SA"
 End Sub








INQUEST-PP=macro
