Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub Workbook_Open()

'If Target = Range("kk1") Then
'If IsEmpty([kk1]) Then MSGBOX "Bitte sofort nach |fffd|ffnen der Tabelle den Button -->Antriebe - Daten |fffd|bernehmen<-- dr|fffd|cken" Else: MSGBOX "Daten wurden bereits |fffd|bernommen"
'End If

'Call Msg_Box
'End Sub




Attribute VB_Name = "Funktionen"
Option Explicit

Public Sub fill_list()
   'F|fffd|llt alle ausgeblendeten Spalten in die Listbox
   
   Dim i As Variant
   Tabelle1.ListBox1.Clear
   
   For Each i In Columns
        'Gehe alle Spalten durch und pr|fffd|fe, ob sie ausgeblendet sind
        If i.EntireColumn.Hidden = True Then
            Tabelle1.ListBox1.AddItem (Cells(15, i.Column).Value)
        End If
    Next
    
End Sub

Public Sub textbox_create()
'
' Makro1 Makro
  ' Makro am 25.03.2009 von Wildt, Volker aufgezeichnet
  '
  '
  Dim tb As Shape
  Dim tmp As String
  Dim lngStart As Long
  Dim rng As Range
  Dim rcell As Range
  tmp = ""
Sheets(3).Range("C6").CurrentRegion.SpecialCells(xlVisible).Select
For Each rcell In Selection
    If UCase(rcell) <> "X" And rcell <> "" Then
      Debug.Print rcell
        '
        ' 20120709 Zeilenvorschub
        '
         tmp = tmp & rcell & vbCrLf
        'tmp = tmp & rcell & Chr(10) & Chr(9) & Chr(9)
      End If
  Next rcell
  
' tmp = (Cells(7, 3).Value) & Chr(10) & (Cells(10, 3).Value) & "xx"
Set tb = Sheets(1).Shapes.AddTextbox(msoTextOrientationHorizontal, 20, 20, _
        1000, 354.6)
  '
  ' 20120709 Daten komplett in Textbox |fffd|bernehmen
  '
  tb.TextFrame.Characters.TEXT = tmp
  'lngStart = 1
  '   While Len(tmp) > 255
  '    tb.TextFrame.Characters.Text = tb.TextFrame.Characters.Text & Left(tmp, 255)
  '      tmp = Mid(tmp, 256)
  '      lngStart = lngStart + 255
  '   Wend
End Sub

Attribute VB_Name = "Modul1"
Public Function zuletztgespeichert(dnow As Date) As Date
Dim hnow As Date
Application.Volatile
hnow = dnow
zuletztgespeichert = ActiveWorkbook.BuiltinDocumentProperties(12)
End Function

Sub SpaltenOhneWertAusblenden()
Dim Count As Long
Dim intCounter As Integer
Dim x As Long
Dim y As Long
Dim i As Integer
Dim vonSpalte As Integer, bisSpalte As Integer
Dim abZeile As Integer

On Error Resume Next
 
Rem   Von - bis Spalte vorbelegen
vonSpalte = 16
bisSpalte = 296

Rem   AbZeile vorbelegen
abZeile = 17

Rem Bereich feststellen
x = ActiveSheet.UsedRange.Rows.Count
y = ActiveSheet.UsedRange.Columns.Count
Rem MsgBox x & " * " & y
 
For i = vonSpalte To bisSpalte
  If Columns(i).Hidden = False Then
    Count = Application.WorksheetFunction.CountA(Range(Cells(abZeile, i), Cells(x, i)))
    'MsgBox Str(Count)
    If Count = 0 Then
      Columns(i).Hidden = True
    End If
  End If
Next i

End Sub

Sub SpaltenMitWertEinblenden()
Dim Count As Long
Dim intCounter As Integer
Dim x As Long
Dim y As Long
Dim i As Integer
Dim vonSpalte As Integer, bisSpalte As Integer
Dim abZeile As Integer

On Error Resume Next
 
Rem   Von - bis Spalte vorbelegen
vonSpalte = 16
bisSpalte = 296

Rem   AbZeile vorbelegen
abZeile = 17

Rem Bereich feststellen
x = ActiveSheet.UsedRange.Rows.Count
y = ActiveSheet.UsedRange.Columns.Count
Rem MsgBox x & " * " & y
 
For i = vonSpalte To bisSpalte
  If Columns(i).Hidden = True Then
    Count = Application.WorksheetFunction.CountA(Range(Cells(abZeile, i), Cells(x, i)))
    'MsgBox Str(Count)
    If Count <> 0 Then
      Columns(i).Hidden = False
    End If
  End If
Next i

Rem Spezielle Spalten einblenden in Abh|fffd|ngigkeit von anderen
Rem Spalte Sockelh|fffd|he (199) soll immer eingeblendet werden
Rem wenn 194 ein Wert hat
If Columns(199).Hidden = True Then
   Count = Application.WorksheetFunction.CountA(Range(Cells(abZeile, 194), Cells(x, 194)))
   If Count <> 0 Then
     Columns(199).Hidden = False
   End If
End If

Rem Spezielle Spalten einblenden in Abh|fffd|ngigkeit von anderen
Rem Spalte Freisbreite (200) soll immer eingeblendet werden
Rem wenn 194 ein Wert hat
If Columns(200).Hidden = True Then
   Count = Application.WorksheetFunction.CountA(Range(Cells(abZeile, 194), Cells(x, 194)))
   If Count <> 0 Then
     Columns(200).Hidden = False
   End If
End If

Rem Spezielle Spalten einblenden in Abh|fffd|ngigkeit von anderen
Rem Spalte Kabelverlegung (286) soll immer eingeblendet werden
Rem wenn Spalte 279 ein Wert hat
If Columns(286).Hidden = True Then
   Count = Application.WorksheetFunction.CountA(Range(Cells(abZeile, 279), Cells(x, 279)))
   If Count <> 0 Then
     Columns(286).Hidden = False
   End If
End If

End Sub
Sub SpaltenAlleEinblenden()
Dim Count As Long
Dim intCounter As Integer
Dim x As Long
Dim y As Long
Dim i As Integer
Dim vonSpalte As Integer, bisSpalte As Integer
Dim abZeile As Integer

On Error Resume Next
 
Rem   Von - bis Spalte vorbelegen
vonSpalte = 16
bisSpalte = 296

Rem   AbZeile vorbelegen
abZeile = 17

Rem Bereich feststellen
x = ActiveSheet.UsedRange.Rows.Count
y = ActiveSheet.UsedRange.Columns.Count
Rem MsgBox x & " * " & y
 
For i = vonSpalte To bisSpalte
   If Columns(i).Hidden = True Then
      Columns(i).Hidden = False
   End If
Next i

End Sub
Sub SpaltenAlleAusblenden()
Dim Count As Long
Dim intCounter As Integer
Dim x As Long
Dim y As Long
Dim i As Integer
Dim vonSpalte As Integer, bisSpalte As Integer
Dim abZeile As Integer

On Error Resume Next
 
Rem   Von - bis Spalte vorbelegen
vonSpalte = 16
bisSpalte = 296

Rem   AbZeile vorbelegen
abZeile = 17

Rem Bereich feststellen
x = ActiveSheet.UsedRange.Rows.Count
y = ActiveSheet.UsedRange.Columns.Count
Rem MsgBox x & " * " & y
 
For i = vonSpalte To bisSpalte
  'Count = Application.WorksheetFunction.CountA(Range(Cells(abZeile, i), Cells(x, i)))
  'MsgBox Str(Count)
   If Columns(i).Hidden = False Then
      Columns(i).Hidden = True
   End If
  
Next i

End Sub

Attribute VB_Name = "Modul2"
Sub Punkte_einblenden()
Attribute Punkte_einblenden.VB_Description = "Makro am 24.03.2009 von B|fffd|ckle, Jochen aufgezeichnet"
Attribute Punkte_einblenden.VB_ProcData.VB_Invoke_Func = "e\n14"
'
' Punkte_einblenden Makro
' Makro am 24.03.2009 von B|fffd|ckle, Jochen aufgezeichnet
'
' Tastenkombination: Strg+e
'
    Selection.AutoFilter Field:=1, Criteria1:="X"
End Sub
Sub Punkte_anzeigen()
Attribute Punkte_anzeigen.VB_Description = "Makro am 24.03.2009 von B|fffd|ckle, Jochen aufgezeichnet"
Attribute Punkte_anzeigen.VB_ProcData.VB_Invoke_Func = "a\n14"
'
' Punkte_anzeigen Makro
' Makro am 24.03.2009 von B|fffd|ckle, Jochen aufgezeichnet
'
' Tastenkombination: Strg+a
'
    Selection.AutoFilter Field:=1
    Range("B6:B158").Select
    Selection.ClearContents
    Range("A6").Select
End Sub
Attribute VB_Name = "Modul3"
Sub Makro1()
Attribute Makro1.VB_Description = "Makro am 25.03.2009 von Wildt, Volker aufgezeichnet"
Attribute Makro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro1 Makro
' Makro am 25.03.2009 von Wildt, Volker aufgezeichnet
'
'
Dim tb As Shape
Dim tmp As String
Dim lngStart As Long
Dim rng As Range
tmp = ""
ActiveSheet.Range("C6").CurrentRegion.SpecialCells(xlVisible).Select
For Each rcell In Selection
    If UCase(rcell) <> "X" Then
       tmp = tmp & rcell & Chr(10) & Chr(10)
    End If
Next rcell

' tmp = (Cells(7, 3).Value) & Chr(10) & (Cells(10, 3).Value) & "xx"
Set tb = ActiveSheet.Shapes.AddTextbox(msoTextOrientationHorizontal, 20, 20, _
        513.6, 354.6)
lngStart = 1
   While Len(tmp) > 255
      tb.TextFrame.Characters(lngStart, 255).TEXT = Left(tmp, 255)
      tmp = Mid(tmp, 256)
      lngStart = lngStart + 255
   Wend
   tb.TextFrame.Characters(lngStart, Len(tmp)).TEXT = tmp
End Sub

Sub cellmerge()
     
    Set Box = ActiveSheet.TextBoxes.Add(ActiveCell.Offset(1, 1).Left, _
    ActiveCell.Offset(1, 1).Top, ActiveCell.Offset(1, 3).Left, _
    ActiveCell.Offset(6, 1).Top)
     
    Dim rcell As Range, strJoin As String
     
    With Box
        .TEXT = vbNullString
        .MultiLine = True
        .WordWrap = True
         
        For Each rcell In Selection
            strJoin = rcell
            TextFrame.Characters.TEXT = Box & strJoin & Chr(10)
        Next rcell
         
    End With
     
End Sub

Attribute VB_Name = "Modul4"
Sub DTA()
'
' DTA Makro
'

'
    'Application.Wait (Now + TimeValue("00:00:6"))
'
' Maulweite Makro - doppelte Maulweite (Wandst|fffd|rke) l|fffd|schen
'

    Range("E18").Select
    ActiveCell.FormulaR1C1 = "=RIGHT(RC[26],3)"
    Range("E18").Select
    Selection.Copy
    Range("E19:E1000").Select
    Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Range("E18").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    Range("AE18").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("E18").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.ClearContents
    Range("A18").Select
    
'Druckbereich und Rahmen festlegen
    a = Cells(13, 9).Value
    
    Range("A18:KJ" & a).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("A1:KJ" & a).Select
    ActiveSheet.PageSetup.PrintArea = ("$A$1:$KJ$" & a)
    Range("A1:E5").Select
'Anfrage ob mit oder ohne DTA
         Dim b As String
  v = MSGBOX("Soll die T|fffd|rliste mit Register #DTA# erstellt werden ja/nein." & vbNewLine & vbNewLine & "Bei Ja -> T|fffd|rliste wird mit Register #DTA# erstellt." & vbNewLine & "Bei Nein -> T|fffd|rliste wird ohne Register DTA erstellt", vbYesNo, "T|fffd|rliste?")
    If v = vbNo Then
       MSGBOX "Register #DTA# wird gel|fffd|scht"
    Sheets("T|fffd|ren mit DTA").Select
    'ActiveWindow.SelectedSheets.Delete
    'Sheets("T|fffd|renliste").Select
    'Range("F18").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("T|fffd|renliste").Select
    ActiveSheet.Shapes.Range(Array("Button 98")).Select
    Selection.Delete
    Range("F18").Select
    Else
'DTA Texte Speichern als feste Werte
    Sheets("T|fffd|ren mit DTA").Select
    b = Cells(13, 5).Value
    Range("A18:DH1000").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    Sheets("T|fffd|ren mit DTA").Select
    ActiveSheet.Range("$A$17:$DH$1000").AutoFilter Field:=111, Criteria1:="="
    Rows("18:1000").Select
    Selection.Delete Shift:=xlUp
    ActiveSheet.Range("$A$17:$DH$1000").AutoFilter Field:=111
'ab hier test - rahmen und druckbereich
    'b = Cells(13, 5).Value

   Range("A18:DH" & b).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Range("A1:DG" & b).Select
    ActiveSheet.PageSetup.PrintArea = ("$A$1:$DH$" & b)
'ende Test
    Range("A1").Select
    End If
    Sheets("T|fffd|renliste").Select
    Range("A1:E5").Select
    'Das hier war L|fffd|schen des Button "DTA erstellen"
    'ActiveSheet.Shapes.Range(Array("Button 96")).Select
    'Selection.Delete
    Range("KK1").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("F18").Select
    Rows("18:1000").EntireRow.AutoFit
    Range("F18").Select

End Sub
Attribute VB_Name = "Modul5"
Attribute VB_Name = "Modul6"
Sub Msg_Box()
Attribute Msg_Box.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Msg_Box Makro
' Makro am 24.03.2009 von B|fffd|ckle, Jochen aufgezeichnet

'Application.Wait (Now + TimeValue("00:00:1"))
'MSGBOX "Bitte sofort nach |fffd|ffnen der Tabelle den Button -->Antriebe - Daten |fffd|bernehmen<-- dr|fffd|cken"


End Sub
Attribute VB_Name = "Modul7"
Sub Maulweite()
Attribute Maulweite.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Maulweite Makro
'
    Range("E18").Select
    ActiveCell.FormulaR1C1 = "=RIGHT(RC[26],3)"
    Range("E18").Select
    Selection.Copy
    Range("E19:E1000").Select
    Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
        SkipBlanks:=False, Transpose:=False
    Range("E18").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    Range("AE18").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Range("E18").Select
    Range(Selection, Selection.End(xlDown)).Select
    Application.CutCopyMode = False
    Selection.ClearContents
    Range("A18").Select

'
End Sub
Attribute VB_Name = "Modul8"
Sub T|fffd|ren_mit_DTA_l|fffd|schen()
Attribute T|fffd|ren_mit_DTA_l|fffd|schen.VB_ProcData.VB_Invoke_Func = " \n14"
'
' T|fffd|ren_mit_DTA_l|fffd|schen Makro
'
    Sheets("T|fffd|ren mit DTA").Select
    ActiveWindow.SelectedSheets.Visible = False
    Sheets("T|fffd|renliste").Select
    ActiveSheet.Shapes.Range(Array("Button 98")).Select
    Selection.Delete
    Range("F18").Select

'
End Sub
Attribute VB_Name = "Modul9"
Sub TEXT()
Attribute TEXT.VB_ProcData.VB_Invoke_Func = " \n14"
'
' TEXT Makro
'

'
    Range("B252").Select
    ActiveWorkbook.Names.Add Name:="Text237", RefersToR1C1:="=Language!R252C2"
    Range("B253").Select
    ActiveWorkbook.Names.Add Name:="Text238", RefersToR1C1:="=Language!R253C2"
    Range("B254").Select
    ActiveWorkbook.Names.Add Name:="Text239", RefersToR1C1:="=Language!R252C2"
    Range("B255").Select
    ActiveWorkbook.Names.Add Name:="Text240", RefersToR1C1:="=Language!R252C2"
    Range("B256").Select
    ActiveWorkbook.Names.Add Name:="Text241", RefersToR1C1:="=Language!R252C2"
    Range("B257").Select
    ActiveWorkbook.Names.Add Name:="Text242", RefersToR1C1:="=Language!R253C2"
    Range("B258").Select
    ActiveWorkbook.Names.Add Name:="Text243", RefersToR1C1:="=Language!R252C2"
    Range("B259").Select
    ActiveWorkbook.Names.Add Name:="Text244", RefersToR1C1:="=Language!R252C2"
    Range("B260").Select
    ActiveWorkbook.Names.Add Name:="Text245", RefersToR1C1:="=Language!R252C2"
    Range("B261").Select
    ActiveWorkbook.Names.Add Name:="Text246", RefersToR1C1:="=Language!R253C2"
    Range("B262").Select
    ActiveWorkbook.Names.Add Name:="Text247", RefersToR1C1:="=Language!R252C2"
    Range("B263").Select
    ActiveWorkbook.Names.Add Name:="Text248", RefersToR1C1:="=Language!R252C2"
    Range("B264").Select
    ActiveWorkbook.Names.Add Name:="Text249", RefersToR1C1:="=Language!R252C2"
    Range("B265").Select
    ActiveWorkbook.Names.Add Name:="Text250", RefersToR1C1:="=Language!R253C2"
    Range("B266").Select
    ActiveWorkbook.Names.Add Name:="Text251", RefersToR1C1:="=Language!R252C2"
    Range("B267").Select
    ActiveWorkbook.Names.Add Name:="Text252", RefersToR1C1:="=Language!R252C2"
    Range("B268").Select
    ActiveWorkbook.Names.Add Name:="Text253", RefersToR1C1:="=Language!R252C2"
    Range("B269").Select
    ActiveWorkbook.Names.Add Name:="Text254", RefersToR1C1:="=Language!R253C2"
    Range("B270").Select
    ActiveWorkbook.Names.Add Name:="Text255", RefersToR1C1:="=Language!R252C2"
    Range("B271").Select
    ActiveWorkbook.Names.Add Name:="Text256", RefersToR1C1:="=Language!R252C2"
    Range("B272").Select
    ActiveWorkbook.Names.Add Name:="Text257", RefersToR1C1:="=Language!R252C2"
    Range("B273").Select
    ActiveWorkbook.Names.Add Name:="Text258", RefersToR1C1:="=Language!R253C2"
    Range("B274").Select
    ActiveWorkbook.Names.Add Name:="Text259", RefersToR1C1:="=Language!R252C2"
    Range("B275").Select
    ActiveWorkbook.Names.Add Name:="Text260", RefersToR1C1:="=Language!R252C2"
    Range("B276").Select
    ActiveWorkbook.Names.Add Name:="Text261", RefersToR1C1:="=Language!R252C2"
    Range("B277").Select
    ActiveWorkbook.Names.Add Name:="Text262", RefersToR1C1:="=Language!R253C2"
    Range("B278").Select
    ActiveWorkbook.Names.Add Name:="Text263", RefersToR1C1:="=Language!R252C2"
    Range("B279").Select
    ActiveWorkbook.Names.Add Name:="Text264", RefersToR1C1:="=Language!R252C2"
    Range("B280").Select
    ActiveWorkbook.Names.Add Name:="Text265", RefersToR1C1:="=Language!R252C2"
    Range("B281").Select
    ActiveWorkbook.Names.Add Name:="Text266", RefersToR1C1:="=Language!R253C2"
    Range("B282").Select
    ActiveWorkbook.Names.Add Name:="Text267", RefersToR1C1:="=Language!R252C2"
    Range("B283").Select
    ActiveWorkbook.Names.Add Name:="Text268", RefersToR1C1:="=Language!R252C2"
    Range("B284").Select
    ActiveWorkbook.Names.Add Name:="Text269", RefersToR1C1:="=Language!R252C2"
    Range("B285").Select
    ActiveWorkbook.Names.Add Name:="Text270", RefersToR1C1:="=Language!R253C2"
    Range("B286").Select
    ActiveWorkbook.Names.Add Name:="Text271", RefersToR1C1:="=Language!R252C2"
    Range("B287").Select
    ActiveWorkbook.Names.Add Name:="Text272", RefersToR1C1:="=Language!R252C2"
    Range("B288").Select
    ActiveWorkbook.Names.Add Name:="Text273", RefersToR1C1:="=Language!R252C2"
    Range("B289").Select
    ActiveWorkbook.Names.Add Name:="Text274", RefersToR1C1:="=Language!R253C2"
    Range("B290").Select
    ActiveWorkbook.Names.Add Name:="Text275", RefersToR1C1:="=Language!R252C2"
    Range("B291").Select
    ActiveWorkbook.Names.Add Name:="Text276", RefersToR1C1:="=Language!R252C2"
    Range("B292").Select
    ActiveWorkbook.Names.Add Name:="Text277", RefersToR1C1:="=Language!R252C2"
    Range("B293").Select
    ActiveWorkbook.Names.Add Name:="Text278", RefersToR1C1:="=Language!R253C2"
    Range("B294").Select
    ActiveWorkbook.Names.Add Name:="Text279", RefersToR1C1:="=Language!R252C2"
    Range("B295").Select
    ActiveWorkbook.Names.Add Name:="Text280", RefersToR1C1:="=Language!R252C2"
    Range("B296").Select
    ActiveWorkbook.Names.Add Name:="Text281", RefersToR1C1:="=Language!R252C2"
    Range("B297").Select
    ActiveWorkbook.Names.Add Name:="Text282", RefersToR1C1:="=Language!R253C2"
    Range("B298").Select
    ActiveWorkbook.Names.Add Name:="Text283", RefersToR1C1:="=Language!R252C2"
    Range("B299").Select
    ActiveWorkbook.Names.Add Name:="Text284", RefersToR1C1:="=Language!R252C2"
    Range("B300").Select
    ActiveWorkbook.Names.Add Name:="Text285", RefersToR1C1:="=Language!R252C2"
    Range("B301").Select
    ActiveWorkbook.Names.Add Name:="Text286", RefersToR1C1:="=Language!R253C2"
    Range("B302").Select
    ActiveWorkbook.Names.Add Name:="Text287", RefersToR1C1:="=Language!R252C2"
    Range("B303").Select
    ActiveWorkbook.Names.Add Name:="Text288", RefersToR1C1:="=Language!R252C2"
    Range("B304").Select
    ActiveWorkbook.Names.Add Name:="Text289", RefersToR1C1:="=Language!R252C2"
    Range("B305").Select
    ActiveWorkbook.Names.Add Name:="Text290", RefersToR1C1:="=Language!R253C2"
    Range("B306").Select
    ActiveWorkbook.Names.Add Name:="Text291", RefersToR1C1:="=Language!R252C2"
    Range("B307").Select
    ActiveWorkbook.Names.Add Name:="Text292", RefersToR1C1:="=Language!R252C2"
    Range("B308").Select
    ActiveWorkbook.Names.Add Name:="Text293", RefersToR1C1:="=Language!R252C2"
    Range("B309").Select
    ActiveWorkbook.Names.Add Name:="Text294", RefersToR1C1:="=Language!R253C2"
    Range("B310").Select
    ActiveWorkbook.Names.Add Name:="Text295", RefersToR1C1:="=Language!R252C2"
    Range("B311").Select
    ActiveWorkbook.Names.Add Name:="Text296", RefersToR1C1:="=Language!R252C2"
    Range("B312").Select
    ActiveWorkbook.Names.Add Name:="Text297", RefersToR1C1:="=Language!R252C2"
    Range("B313").Select
    ActiveWorkbook.Names.Add Name:="Text298", RefersToR1C1:="=Language!R253C2"
    Range("B314").Select
    ActiveWorkbook.Names.Add Name:="Text299", RefersToR1C1:="=Language!R252C2"
    Range("B315").Select
    ActiveWorkbook.Names.Add Name:="Text300", RefersToR1C1:="=Language!R252C2"
    Range("B316").Select
    ActiveWorkbook.Names.Add Name:="Text301", RefersToR1C1:="=Language!R252C2"
    
End Sub

    
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btn_refresh, 94, 3, MSForms, CommandButton"
Attribute VB_Control = "ListBox1, 91, 4, MSForms, ListBox"
Attribute VB_Control = "Label1, 90, 5, MSForms, Label"
Attribute VB_Control = "btn_einblenden, 89, 6, MSForms, CommandButton"

Private Sub btn_refresh_Click()
   fill_list
End Sub

Private Sub btn_einblenden_Click()
    Dim Txt As String
    
    If Me.ListBox1.ListCount = 0 Then
        MSGBOX "Es sind keine ausgeblendeten Spalten in der Liste"
        Exit Sub
    End If
    
    For ListZeile = 0 To Me.ListBox1.ListCount - 1
        If Me.ListBox1.Selected(ListZeile) = True Then
            Debug.Print Me.ListBox1.List(ListZeile, 0)
            Txt = Me.ListBox1.List(ListZeile, 0)
            If Txt <> "" Then
                Dim i As Variant
            
                For Each i In Columns
                    If Cells(15, i.Column).Value = Txt Then
                        i.EntireColumn.Hidden = False
                    End If
                Next
            End If
        End If
    Next
    
    fill_list

End Sub

Private Sub CommandButton1_Click()

End Sub
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Textbox, 34, 0, MSForms, CommandButton"
Attribute VB_Control = "Filtern, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "Einblenden, 1, 2, MSForms, CommandButton"
Private Sub Einblenden_Click()
    Selection.AutoFilter Field:=1
    Range("B7:B158").Select
    Selection.ClearContents
    Range("A6").Select
End Sub

Private Sub Filtern_Click()
    Selection.AutoFilter Field:=1, Criteria1:="X"
End Sub

Private Sub Textbox_Click()
 textbox_create
End Sub
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub btn_refresh_Click()
   fill_list
End Sub

Private Sub btn_einblenden_Click()
    Dim Txt As String
    
    If Me.ListBox1.ListCount = 0 Then
        MSGBOX "Es sind keine ausgeblendeten Spalten in der Liste"
        Exit Sub
    End If
    
    For ListZeile = 0 To Me.ListBox1.ListCount - 1
        If Me.ListBox1.Selected(ListZeile) = True Then
            Debug.Print Me.ListBox1.List(ListZeile, 0)
            Txt = Me.ListBox1.List(ListZeile, 0)
            If Txt <> "" Then
                Dim i As Variant
            
                For Each i In Columns
                    If Cells(15, i.Column).Value = Txt Then
                        i.EntireColumn.Hidden = False
                    End If
                Next
            End If
        End If
    Next
    
    fill_list

End Sub

Private Sub CommandButton1_Click()
Anzeigen_DTA
End Sub
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
