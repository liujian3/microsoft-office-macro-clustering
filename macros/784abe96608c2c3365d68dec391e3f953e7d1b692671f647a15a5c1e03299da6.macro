Attribute VB_Name = "CRM_Export"

Public Sub cmdExportToCRMButton_Click()
Dim currentPath As String
Dim filePath As String
Dim strArgument2 As String
'Dim ws As Worksheet: Set ws = Worksheets(1)
Dim strProgramName As String
 
Dim itm As Variant
Dim dealerNo As String
Dim contactName As String
Dim visitDate As String
Dim importantNotes As String
Dim keyPointsDiscussed As String
Dim objectiveForVisit As String
Dim actionsForNextVisit As String
Dim dateOfNextVisit As String
Dim accountOutlook As String


dateOfNextVisit = concat(Range("CRM_DateOfNextVisit").Value, "")
dealerNo = concat(Range("CRM_DealerNo").Value, "")
contactName = concat(Range("CRM_ContactName").Value, "")
visitDate = concat(Range("CRM_VisitDate").Value, "")
actionsForNextVisit = concat(Range("CRM_ActionsForNextReview").Value, ";" & vbCrLf)
importantNotes = concat(Range("CRM_ImportantNotes").Value, ";" & vbCrLf)
objectiveForVisit = concat(Range("CRM_ObjectiveForVisit").Value, ";" & vbCrLf)
keyPointsDiscussed = concat(Range("CRM_KeyPointsDiscussed").Value, ";" & vbCrLf)
accountOutlook = "-1"
 


currentPath = Application.ActiveWorkbook.FullName
Dim fileName As String
fileName = ThisWorkbook.Name

   
 strProgramName = "C:\OneAdvanced\Advanced.Micheldever.ContactReportExport\Advanced.Micheldever.ContactReport.exe"
    Call Shell("""" & strProgramName & """ """ & currentPath & """ """ & dealerNo & """ """ & contactName & """ """ & visitDate & """ """ & importantNotes & """ """ & objectiveForVisit & """ """ & keyPointsDiscussed & """ """ & actionsForNextVisit & """ """ & accountOutlook & """ """ & dateOfNextVisit & """ """ & fileName & """ ", vbNormalFocus)
End Sub


Function concat(vArr As Variant, newLineChar As String)

Dim itm As Variant
Dim returnValue As String

If VarType(vArr) >= 8192 Then
For Each itm In vArr
 If IsEmpty(itm) = False Then
 If Len(returnValue) > 1 Then
  returnValue = returnValue & newLineChar & itm
  Else
  returnValue = itm
   End If
  End If
Next itm

 concat = returnValue
 Else
 concat = vArr
 End If
 
End Function


Sub CopyModule(SourceWB As Workbook, strModuleName As String, _
    TargetWB As Workbook)
' copies a module from one workbook to another
' example:
' CopyModule Workbooks("Book1.xls"), "Module1", _
    Workbooks("Book2.xls")
Dim strFolder As String, strTempFile As String
    strFolder = SourceWB.Path
    If Len(strFolder) = 0 Then strFolder = CurDir
    strFolder = strFolder & "\"
    strTempFile = strFolder & "~tmpexport.bas"
    On Error Resume Next
    SourceWB.VBProject.VBComponents(strModuleName).Export strTempFile
    TargetWB.VBProject.VBComponents.Import strTempFile
    Kill strTempFile
    On Error GoTo 0
End Sub






Attribute VB_Name = "Sheet20"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
