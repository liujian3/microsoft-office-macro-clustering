Attribute VB_Name = "NewMacros"
Sub CorrectLangUS()
' CorrectLang US
' Copypasted from web by me
'
Application.ScreenUpdating = False
With Selection
    .WholeStory
    .LanguageID = wdRussian
    .NoProofing = False
    .HomeKey Unit:=wdStory
    n1 = 0
    w1 = "a"
    se1 = .End
    se2 = -1
    Do While se1 <> se2
        w1 = Left(Trim(.Words(1)), 1)
        If w1 <> "" Then
            n1 = Asc(w1)
            If (n1 >= 65 And n1 <= 90) Or (n1 >= 97 And n1 <= 122) Or (w1 = ".") Then
                .Words(1).LanguageID = wdEnglishUS
                .Words(1).NoProofing = False
            End If
        End If
        .MoveRight Unit:=wdWord
        se2 = se1
        se1 = .End
     Loop
End With
Application.CheckLanguage = True
Application.ScreenUpdating = True
If se1 = se2 Then MsgBox "Fixing Eng/Rus language finished.", vbInformation, ""
End Sub

Sub CorrectLangUK()
' CorrectLang UK
' Copypasted from web by me
'
Application.ScreenUpdating = False
With Selection
    .WholeStory
    .LanguageID = wdRussian
    .NoProofing = False
    .HomeKey Unit:=wdStory
    n1 = 0
    w1 = "a"
    se1 = .End
    se2 = -1
    Do While se1 <> se2
        w1 = Left(Trim(.Words(1)), 1)
        If w1 <> "" Then
            n1 = Asc(w1)
            If (n1 >= 65 And n1 <= 90) Or (n1 >= 97 And n1 <= 122) Or (w1 = ".") Then
                .Words(1).LanguageID = wdEnglishUK
                .Words(1).NoProofing = False
            End If
        End If
        .MoveRight Unit:=wdWord
        se2 = se1
        se1 = .End
     Loop
End With
Application.CheckLanguage = True
Application.ScreenUpdating = True
If se1 = se2 Then MsgBox "Fixing Eng/Rus language finished.", vbInformation, ""
End Sub


Sub CountAllCharsWithSpaces()
'
'
' CountAll Macro
' Counts whole doc including text boxes and headers/footer
'
    Dim TotalCount, MainStoryCount, StoryCount, TBCount, TBCountWords, StoryCountWords As Long
'    Dim MainStoryCount As Long
'    Dim StoryCount As Long
'    Dim TBCount As Long
        TotalCount = 0
        MainStoryCount = 0
        StoryCount = 0
        TBCount = 0
'        TBCountWords = 0
'        StoryCountWords = 0
 PagesByWords = Round((ActiveDocument.ComputeStatistics(Statistic:=wdStatisticWords, _
 IncludeFootnotesAndEndnotes:=True) / 250), 2)
        MainStoryCount = ActiveDocument.ComputeStatistics(wdStatisticCharactersWithSpaces)
' Count text in main doc and headers and footers
        For Each aStory In ActiveDocument.StoryRanges
            StoryCount = StoryCount + aStory.ComputeStatistics(wdStatisticCharactersWithSpaces)
'            StoryCountWords = StoryCountWords + aStory.ComputeStatistics(wdStatisticWords)
        Next aStory
' Count text in text boxes
        For Each aShape In ActiveDocument.Shapes
            If aShape.Type = msoGroup Then
                For Each bShape In aShape.GroupItems
                    With bShape.TextFrame
                        If .HasText Then
                            TBCount = TBCount + .TextRange.ComputeStatistics(wdStatisticCharactersWithSpaces)
'                            TBCountWords = TBCountWords + .TextRange.ComputeStatistics(wdStatisticWords)
                        End If
                    End With
                Next bShape
            Else
                With aShape.TextFrame
                    If .HasText Then
                        TBCount = TBCount + .TextRange.ComputeStatistics(wdStatisticCharactersWithSpaces)
 '                       TBCountWords = TBCountWords + .TextRange.ComputeStatistics(wdStatisticWords)
                    End If
                End With
            End If
        Next aShape
        TotalCount = StoryCount + TBCount
        HFCount = StoryCount - MainStoryCount
        PagesCount = Round((TotalCount / 1800), 2)
        'PagesCountInWords = Round((
        MsgBox ("Total pages:                         " + Str(PagesCount) + Chr(13) + Chr(13) + "Main document characters:  " + Str(MainStoryCount) + Chr(13))
End Sub



Sub |fffd||fffd||fffd||fffd||fffd|()
'
' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
    Selection.Font.Name = "Times New Roman"
End Sub

Sub NormTxt()
'
' NormTxt |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
    With Selection.Font
        .Spacing = 0
        .Scaling = 100
        .Position = 0
    End With
End Sub




Sub ListAcronyms()
'
' ListAcronyms |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| 03.06.2010 kushnirov
'
    Dim strAcronym As String
    Dim strDefine As String
    Dim strOutput As String
    Dim newDoc As Document

    Application.ScreenUpdating = False
    Selection.HomeKey Unit:=wdStory
    ActiveWindow.View.ShowHiddenText = False
  
Selection.HomeKey Unit:=wdStory
'Loop to find all acronyms
    Do
        'Search for acronyms using wildcards
        Selection.Find.ClearFormatting
        With Selection.Find
            .ClearFormatting
            .Text = "<[A-Z]@[A-Z]>"
            .Replacement.Text = ""
            .Forward = True
            .Wrap = wdFindStop
            .Format = False
            .MatchCase = True
            .MatchWildcards = True
            .MatchWholeWord = True
            .Execute
        End With

        'Only process if something found
        If Selection.Find.Found Then
            'Make a string from the selection, add it to the
            'output string
            strAcronym = Selection.Text

            'Look for definition
            'Selection.MoveRight Unit:=wdWord
            'Selection.MoveRight Unit:=wdCharacter, _
            '  Extend:=wdExtend
            strDefine = ""
            'If Selection.Text = "(" Then
            '    While Selection <> ")"
                    strDefine = strDefine & Selection.Text
            '        Selection.Collapse Direction:=wdCollapseEnd
            '        Selection.MoveRight Unit:=wdCharacter, _
            '          Extend:=wdExtend
            '    Wend
            'End If
            Selection.Collapse Direction:=wdCollapseEnd
            'If Left(strDefine, 1) = "(" Then
            '    strDefine = Mid(strDefine, 2, Len(strDefine))
            'End If
            If strDefine > "" Then
                'Check if the search result is in the Output string
                'if it is, ignore the search result
                If InStr(strOutput, strAcronym) = 0 Then
                    strOutput = strOutput & strAcronym _
                      & vbCr
                      '& vbTab & strDefine & vbCr
                      
                End If
            End If
        End If
    Loop Until Not Selection.Find.Found
    
    Selection.HomeKey Unit:=wdStory
    
     Do
        'Search for Russian acronyms using wildcards
        Selection.Find.ClearFormatting
        With Selection.Find
            .ClearFormatting
            .Text = "<[|fffd|-|fffd|]@[|fffd|-|fffd|]>"
            .Replacement.Text = ""
            .Forward = True
            .Wrap = wdFindStop
            .Format = False
            .MatchCase = True
            .MatchWildcards = True
            .MatchWholeWord = True
            .Execute
        End With

        'Only process if something found
        If Selection.Find.Found Then
            'Make a string from the selection, add it to the
            'output string
            strAcronym = Selection.Text

            'Look for definition
            'Selection.MoveRight Unit:=wdWord
            'Selection.MoveRight Unit:=wdCharacter, _
            '  Extend:=wdExtend
            strDefine = ""
            'If Selection.Text = "(" Then
            '    While Selection <> ")"
                    strDefine = strDefine & Selection.Text
            '        Selection.Collapse Direction:=wdCollapseEnd
            '        Selection.MoveRight Unit:=wdCharacter, _
            '          Extend:=wdExtend
            '    Wend
            'End If
            Selection.Collapse Direction:=wdCollapseEnd
            'If Left(strDefine, 1) = "(" Then
            '    strDefine = Mid(strDefine, 2, Len(strDefine))
            'End If
            If strDefine > "" Then
                'Check if the search result is in the Output string
                'if it is, ignore the search result
                If InStr(strOutput, strAcronym) = 0 Then
                    strOutput = strOutput & strAcronym _
                      & vbCr
                      '& vbTab & strDefine & vbCr
                      
                End If
            End If
        End If
    Loop Until Not Selection.Find.Found
    
  
    'Create new document and change active document
    Set newDoc = Documents.Add

    'Insert the text
    Selection.TypeText Text:=strOutput

    'Sort it
    newDoc.Content.Sort SortOrder:=wdSortOrderAscending
    Application.ScreenUpdating = True
    Selection.HomeKey Unit:=wdStory
End Sub

Sub selecttables()
Dim mytable As Table
Application.ScreenUpdating = False

For Each mytable In ActiveDocument.Tables
mytable.Range.Editors.Add wdEditorEveryone
Next
ActiveDocument.SelectAllEditableRanges (wdEditorEveryone)
ActiveDocument.DeleteAllEditableRanges (wdEditorEveryone)
Application.ScreenUpdating = True
End Sub
Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
Attribute |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
    Selection.Find.ClearFormatting
    Selection.Find.Font.Hidden = True
    Selection.Find.Replacement.ClearFormatting
    Selection.Find.Replacement.Font.Hidden = False
    With Selection.Find
        .Text = ""
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
End Sub
Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
Attribute |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
    Selection.Rows.HeightRule = wdRowHeightAtLeast
    Selection.Rows.Height = CentimetersToPoints(0.1)
End Sub
Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
Attribute |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
'
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
    Application.DefaultTableSeparator = "@"
    Selection.Rows.ConvertToText Separator:=wdSeparateByDefaultListSeparator, _
        NestedTables:=True
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
    With Selection.Find
        .Text = "@"
        .Replacement.Text = " - "
        .Forward = True
        .Wrap = wdFindStop
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute Replace:=wdReplaceAll
End Sub


Sub CountPagesByWords()
'
' CountPagesByWords |fffd||fffd||fffd||fffd||fffd||fffd|
'
'
'Dim PagesByWords As Long
 PagesByWords = Round((ActiveDocument.ComputeStatistics(Statistic:=wdStatisticWords, _
 IncludeFootnotesAndEndnotes:=True) / 250), 2)
 PagesByChars = Round((ActiveDocument.ComputeStatistics(Statistic:=wdStatisticCharactersWithSpaces, _
 IncludeFootnotesAndEndnotes:=True) / 1800), 2)
 MsgBox _
    " " & ActiveDocument.ComputeStatistics(Statistic:=wdStatisticCharactersWithSpaces, _
    IncludeFootnotesAndEndnotes:=True) & " chars w/spaces" & Chr(13) & Chr(13) & _
    " " & ActiveDocument.ComputeStatistics(Statistic:=wdStatisticWords, _
    IncludeFootnotesAndEndnotes:=True) & " words" & Chr(13) & Chr(13) & Str(PagesByWords) & " pages (250 words/page)" & _
    Chr(13) & Chr(13) & " " & PagesByChars & " pages (1800 chars/page)"
    

End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
