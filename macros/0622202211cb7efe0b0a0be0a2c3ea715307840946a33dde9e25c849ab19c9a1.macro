Attribute VB_Name = "Module1"
Sub Button1_Click()

    '-- Define seek values
    Dim R As Integer
    
    Dim vRID As String
    Dim vTYP As String
    Dim vBU As String
    Dim vGDR As String
    Dim vLN As String
    Dim vFN As String
    Dim vADR As String
    Dim vCIT As String
    Dim vCTR As String
    Dim vDOB As String
    Dim vPOB As String
    Dim vPAS As String
    Dim vCMT As String
    Dim vNAT As String
    
    Dim Errors As String
    Dim CountRows As Integer
    Dim IsRow As Boolean
    
    '-- Parse sheet to valid data
    
    'Init seek values
    R = 5
    IsRow = (Trim(Sheets("CustomerFile").Cells(R, 1).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 3).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 5).Value) <> "")
            
    While (IsRow = True)
        'Get current values
        CountRows = CountRows + 1
        
        vRID = Trim(Sheets("CustomerFile").Cells(R, 1).Value)
        vTYP = Trim(Sheets("CustomerFile").Cells(R, 2).Value)
        vBU = Trim(Sheets("CustomerFile").Cells(R, 3).Value)
        vGDR = Trim(Sheets("CustomerFile").Cells(R, 4).Value)
        vLN = Trim(Sheets("CustomerFile").Cells(R, 5).Value)
       
        'Check
        If vBU = "" Then
           Errors = Errors & vbCrLf & "Line " & CStr(R) & " : BusinessUnit is empty"
        End If
        
        If Len(vBU) > 200 Then
           Errors = Errors & vbCrLf & "Line " & CStr(R) & " : BusinessUnit is exceeding 9 chars."
        End If
        
        If vRID = "" Then
           Errors = Errors & vbCrLf & "Line " & CStr(R) & " : EntityID is empty"
        End If
        
        If Len(vRID) > 40 Then
           Errors = Errors & vbCrLf & "Line " & CStr(R) & " : RecordID is exceeding 40 chars."
        End If
    
        If vLN = "" Then
           Errors = Errors & vbCrLf & "Line " & CStr(R) & " : LastName is empty"
        End If
        
        If Len(vLN) > 200 Then
           Errors = Errors & vbCrLf & "Line " & CStr(R) & " : LastName is exceeding 200 chars."
        End If
    
        R = R + 1
        IsRow = (Trim(Sheets("CustomerFile").Cells(R, 1).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 3).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 5).Value) <> "")
    Wend

    'Errors ?
    If (Errors <> "") Then
        MsgBox ("Please fix the following errors and try the 'Check & Export' process again :" & vbCrLf & Errors)
    Else
        '-- Export records to CSV file
        '*****************************************************************************************
        
        '-- Prompt user for destination path
        Dim Folder As String
        Dim UserOK As Boolean
        UserOK = Application.FileDialog(msoFileDialogFolderPicker).Show
        Folder = ""
        'Folder = Application.FileDialog(msoFileDialogFolderPicker).InitialFileName
        Folder = Application.FileDialog(msoFileDialogFolderPicker).SelectedItems(1)
        
        If UserOK = True Then
               
            '-- Open new text file
            Dim FileName As String
            FileName = Folder & "\" & Format(DateTime.Now(), "yyyymmdd") & "_Entities.csv"
            Dim fs As Object
            Set fs = CreateObject("Scripting.FileSystemObject")
            Dim a As Object
            'Set a = CreateObject("Scripting.TextStream")
            Set a = fs.createtextfile(FileName, True, True)
            'MsgBox TypeName(a) ' confirms a is a textstream
            
            '-- Parse data
            'Init seek values
            R = 5
            CountRows = 0
            IsRow = (Trim(Sheets("CustomerFile").Cells(R, 1).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 3).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 5).Value) <> "")
                    
            While (IsRow = True)
                'Get current values
                CountRows = CountRows + 1
                
                vRID = Trim(Sheets("CustomerFile").Cells(R, 1).Value)
                vTYP = Trim(Sheets("CustomerFile").Cells(R, 2).Value)
                vBU = Trim(Sheets("CustomerFile").Cells(R, 3).Value)
                vGDR = Trim(Sheets("CustomerFile").Cells(R, 4).Value)
                vLN = Trim(Sheets("CustomerFile").Cells(R, 5).Value)
        
                vFN = Trim(Sheets("CustomerFile").Cells(R, 6).Value)
                vADR = Trim(Sheets("CustomerFile").Cells(R, 7).Value)
                vCIT = Trim(Sheets("CustomerFile").Cells(R, 8).Value)
                vCTR = Trim(Sheets("CustomerFile").Cells(R, 9).Value)
                vDOB = Trim(Sheets("CustomerFile").Cells(R, 10).Value)
                vPOB = Trim(Sheets("CustomerFile").Cells(R, 11).Value)
                vPAS = Trim(Sheets("CustomerFile").Cells(R, 12).Value)
                vCMT = Trim(Sheets("CustomerFile").Cells(R, 13).Value)
                vNAT = Trim(Sheets("CustomerFile").Cells(R, 14).Value)
                
                'Write
                a.WriteLine (vRID & vbTab & vTYP & vbTab & vBU & vbTab & vGDR & vbTab & vLN & vbTab & vFN & vbTab & vADR & vbTab & vCIT & vbTab & vCTR & vbTab & vDOB & vbTab & vPOB & vbTab & vPAS & vbTab & vCMT & vbTab & vNAT)
            
                'Next?
                R = R + 1
                IsRow = (Trim(Sheets("CustomerFile").Cells(R, 1).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 3).Value) <> "") Or (Trim(Sheets("CustomerFile").Cells(R, 5).Value) <> "")
            Wend
                                                
            '-- Close
            a.Close
            
            '-- User confirmation
            MsgBox ("The uComply Customer File (" & CStr(CountRows) & " records) has been exported here :" & vbCrLf & FileName)
        
        End If
        
        '*****************************************************************************************
    End If
     
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
