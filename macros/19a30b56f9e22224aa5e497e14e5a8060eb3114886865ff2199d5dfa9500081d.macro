Attribute VB_Name = "Accueil"
Option Explicit

Public Const LDlig As Byte = 12
Public Const Largeur_utile = 750
Public Const Left0 = 174

Public dt0 As Date
Public OldDdj As Date   ' date avant changement de ddj
Public Page As Byte     ' page 1jour/2semaine/3mois
Public nbj_trim As Byte ' nb de jours du trimestre

Public LDcol As Byte
Public CollLD As Object

Public T_ident As Variant   ' tableau des identit|fffd|s
Public TAct As Variant      ' tableau liste des activit|fffd|s
Public TInd As Variant      ' tableau liste des indisponibilit|fffd|s
Public TG As Variant        ' Tableau des |fffd|v|fffd|nements pour graphique

Public Mte As Boolean
Public HistoColl As New Collection


Sub Ouvre_Accueil()
    dt0 = Date
    Page = 1
    UsfListOpen = False
    TAct = Sql.Get_ComboXL("Activit|fffd|s", "Config")
    TInd = Sql.Get_ComboXL("Indisponibilit|fffd|s", "Config")
    Usf_Accueil.Show
End Sub


 ' ***** MENU *************************************************************************************
Sub menu_select(Menu As String)
    Select Case Menu
        Case "Menu1a": Usf_Accueil.Hide
        Case "Menu1b": ActiveWorkbook.Save
        Case "Menu1c": Unload Usf_Accueil
        Case "Menu2a": List_Rsc (True)
        Case "Menu2b": New_Fiche_Rsc (True)
        Case "Menu2c": Usf_Bilan.Show
        Case "Menu3a": List_Rsc (False)
        Case "Menu3b": New_Fiche_Rsc (False)
        Case "Menu4a": Usf_EvnmtList.Show
        Case "Menu4b": New_Fiche_Evenmt
    End Select
End Sub


' ***** GRILLE ************************************************************************************
Sub Raz_grille(Optional x As Byte)
Dim ctrl As Control

    With Usf_Accueil
        For Each ctrl In .Controls
            If Left(ctrl.Name, 3) = "lbl" Or Left(ctrl.Name, 3) = "Ent" Then
                .Controls.Remove ctrl.Name
            End If
        Next ctrl
        .ScrollBar2.Visible = False
    End With
End Sub


Sub Dessine_grille(idx As Byte)
Dim i As Integer, j As Integer, Top0 As Integer
Dim Lbl As Control
Dim dt_lundi As Long, j0 As Integer, JS As Variant
Dim troismois(3) As Date, nbj_mois(3) As Byte, W(2) As Integer
Dim cell As Object, Coll As New Collection

    JS = Array("L", "M", "M", "J", "V", "S", "D")
    Raz_grille
    With Usf_Accueil
        Select Case idx
            Case 21
                LDcol = 24
                '.ScrollBar2.Visible = True
            Case 22
                LDcol = 7
                dt_lundi = LundiDu(CDate(.ddj.Caption))
            Case 23
                LDcol = Nb_Jours_Mois(CDate(.ddj.Caption))
                j0 = Weekday(DateSerial(Year(CDate(.ddj.Caption)), Month(CDate(.ddj.Caption)), 1), vbMonday)
            Case 90
                LDcol = 3
                For i = 0 To 3
                    troismois(i) = DateSerial(Year(CDate(.ddj.Caption)), i + Month(CDate(.ddj.Caption)), 1)
                    If i > 0 Then
                        nbj_mois(i - 1) = DateDiff("d", troismois(i - 1), troismois(i))
                        'Debug.Print Format(troismois(i - 1), "mmmm") & nbj_mois(i - 1)
                    End If
                Next i
                nbj_trim = nbj_mois(0) + nbj_mois(1) + nbj_mois(2)
        End Select
        
        Top0 = .Label18.Top + 18
        
        Set CollLD = New Collection
        For i = 0 To LDcol - 1
            Set Lbl = .Controls.Add("Forms.label.1")
            With Lbl
                .SpecialEffect = 0
                .BorderStyle = 1
                .BorderColor = &H8000000A
                .BackColor = &HFFFFFF
                .Top = Top0
                .Height = 22
                If idx = 90 Then    ' trimestre
                    W(i) = Int(nbj_mois(i) / nbj_trim * Largeur_utile) + 0.1
                    .Width = W(i)
                    .Left = 174
                    If i = 1 Then .Left = .Left + W(0)
                    If i = 2 Then .Left = .Left + W(0) + W(1)
                Else
                    .Width = Int(Largeur_utile / LDcol) + 0.1
                    .Left = 174 + (i * .Width)
                End If
                .Name = "Ent" & i
                Select Case idx
                    Case 21
                        .Caption = Format(i / 24, "hh:mm")
                        .Font.Size = 7
                    Case 22
                        .Caption = Format(dt_lundi + i, "ddd dd/mm/yy")
                        .TextAlign = 2
                    Case 23
                        .Caption = JS((j0 + i) - ((Int(((j0 + i) - 1) / 7)) * 7) - 1) & vbCrLf & i + 1
                        .TextAlign = 2
                    Case 90
                        .Caption = Format(troismois(i), "mmmm")
                        .TextAlign = 2
                End Select
            End With
        
            For j = 0 To LDlig - 1
                Set Lbl = .Controls.Add("Forms.label.1")
                With Lbl
                    .SpecialEffect = 0
                    .BorderStyle = 1
                    .BorderColor = &H8000000A
                    .BackColor = &HFFFFFF
                    .Top = Top0 + 22 + (j * 24)
                    .Height = 24
                    If idx = 90 Then    ' trimestre
                        .Width = W(i)
                        .Left = 174
                        If i = 1 Then .Left = .Left + W(0)
                        If i = 2 Then .Left = .Left + W(0) + W(1)
                    Else
                        .Width = Int(Largeur_utile / LDcol) + 0.1
                        .Left = 174 + (i * .Width)
                    End If
                    .Name = "lbl" & i + (j * LDcol)
                End With
                Set cell = New Class_ListData
                Set cell.LDcell = Lbl
                CollLD.Add cell
            Next j
        Next i
        
        .ScrollBar1.Left = Lbl.Left + Lbl.Width
        .Label18.Width = Lbl.Left + Lbl.Width - .Label18.Left
        .ScrollBar2.Width = Lbl.Width * LDcol
    End With
    
    Jour_encours
    
End Sub


Sub Jour_encours(Optional x As Byte)
Dim i As Byte, dt1 As Date, dt2 As Date, nbjtrim As Byte

    With Usf_Accueil
        For i = 0 To LDcol - 1
            .Controls("Ent" & i).BackColor = &HFFFFFF
        Next i
        
        Select Case LDcol
            Case 24         ' jour
            
            Case 7          ' semaine
                For i = 0 To 6
                    If CDate(Right(.Controls("Ent" & i).Caption, 8)) = Date Then
                        .Controls("Ent" & i).BackColor = &HC0FFC0
                    End If
                Next i
            
            Case 28 To 31   ' mois
                .Controls("Ent" & Day(Date) - 1).BackColor = &HC0FFC0
                
            Case 3          ' trimestre
                dt1 = DateSerial(Year(CDate(.ddj.Caption)), Month(CDate(.ddj.Caption)), 1)
                dt2 = DateAdd("m", 3, dt1)
                If Date >= dt1 And Date < dt2 Then
                    nbjtrim = DateDiff("d", dt1, dt2)
                    With .Label37
                        .Visible = True
                        .ZOrder msoBringToFront
                        .Width = Largeur_utile / nbjtrim
                        .Left = 174 + (.Width * (DateDiff("d", dt1, Date)))
                        .Caption = Day(Date)
                    End With
                Else
                    .Label37.Visible = False
                End If
            
        End Select

    End With
End Sub


Sub Dessine_Event(Optional x As Byte)
Dim date1 As Date, date2 As Date, TY As String, Act As String
Dim Histolbl As Object, ctrl As Variant, Lbl As Object
Dim i As Integer, j As Byte, lig As Byte, lg As Byte
Dim Dtdeb As Long, Dtfin As Long, hrdeb As Single, hrfin As Single, W As Single, W0 As Single
Dim bc As Long, Rouge As Integer, Vert As Integer, Bleu As Integer

    With Usf_Accueil
        For Each ctrl In .Controls
            If Left(ctrl.Name, 5) = "Histo" Then .Controls.Remove ctrl.Name
        Next
        Select Case Page
            Case 1
                date1 = CDate(.ddj.Caption)
                date2 = date1
            Case 2
                date1 = LundiDu(CDate(.ddj.Caption))
                date2 = DateAdd("d", 6, date1)
            Case 3
                date1 = DateSerial(Year(CDate(.ddj.Caption)), Month(CDate(.ddj.Caption)), 1)
                date2 = DateAdd("d", LDcol - 1, date1)
            Case 16
                date1 = DateSerial(Year(CDate(.ddj.Caption)), Month(CDate(.ddj.Caption)), 1)
                date2 = DateAdd("d", nbj_trim, date1)
        End Select
        
        Select Case .ComboBox5.ListIndex
            Case 0: TY = ""
            Case 1: TY = "A"
            Case 2: TY = "I"
        End Select
        
        Act = IIf(.ComboBox6.ListIndex = 0, "", .ComboBox6.Value)
        
        TG = Sql.Get_Graphique(date1, date2, TY, Act)
        If UBound(TG, 1) > 0 Then
            For i = 2 To UBound(TG, 1)
                lig = 0
                For j = 1 To LDlig
                    If CStr(TG(i, 7)) = .Controls("Txt" & j + 36).Caption Then lig = j
                Next j
                If lig > 0 Then
'"SELECT E.Id, E.Deb, E.Fin, E.Hdeb, E.Hfin, E.Titre, R.Id, E.Genre, E.Categ, E.Img
                    If CDate(TG(i, 2)) < date1 Then
                        Dtdeb = date1
                        hrdeb = 0
                    Else
                        Dtdeb = CLng(CDate(TG(i, 2)))
                        hrdeb = CSng(CDate(TG(i, 4)))
                    End If
                    
                    If CDate(TG(i, 3)) > date2 Then
                        Dtfin = date2
                        hrfin = 0
                    Else
                        Dtfin = CLng(CDate(TG(i, 3)))
                        hrfin = CSng(CDate(TG(i, 5)))
                    End If

                    Set Lbl = .Controls.Add("Forms.Label.1", "Histo" & TG(i, 1))
                    Lbl.Top = .Controls("Txt" & lig).Top + 1
                    Lbl.Height = .Controls("Txt" & lig).Height - 2
                    If Page = 16 Then
                        W = Int(Largeur_utile / nbj_trim) + 0.1
                    Else
                        W = Int(Largeur_utile / LDcol) + 0.1
                    End If
                    
                    If Exist_Fichier(CStr(TG(i, 10))) Then
                        Lbl.Picture = LoadPicture(CStr(TG(i, 10)))
                        Lbl.PicturePosition = 1
                    End If

                    Select Case Page
                        Case 1
                            Lbl.Left = Left0 + 2 + IIf(CLng(date1) <= Dtdeb, (W * hrdeb * 24), 0)
                            W0 = Largeur_utile - Lbl.Left + Left0 - 5
                            If CLng(date2) < Dtfin Then
                                Lbl.Width = W0
                            Else
                                If Dtdeb = Dtfin Then
                                    If hrfin = 0 Then
                                        Lbl.Width = IIf(hrdeb = 0, Largeur_utile - 7, W0)
                                    Else
                                        If hrfin > hrdeb Then Lbl.Width = (W * hrfin * 24) - (W * hrdeb * 24)
                                    End If
                                Else
                                    Lbl.Width = IIf(hrfin = 0, W0, W * hrfin * 24)
                                End If
                            End If
                            
                        Case 2
                            Lbl.Left = Left0 + 2 + (W * (Dtdeb - CLng(date1))) + (W * hrdeb)
                            Lbl.Width = (W * (1 + Dtfin - Dtdeb)) - 2
                            If (hrfin <> hrdeb) And Not (hrfin = 0 And hrdeb = 0) Then
                                Lbl.Width = Lbl.Width - (W * (1 - Abs(hrfin - hrdeb)))
                            End If
                            
                        Case 3, 16
                            Lbl.Left = Left0 + 2 + (W * (Dtdeb - CLng(date1)))
                            Lbl.Width = (W * (1 + Dtfin - Dtdeb)) - 2
                            
                    End Select
                    
                    If Not TG(i, 9) = "" Then
                        On Error Resume Next
                        With Sheets("Config")
                            If Left(TG(i, 8), 1) = "A" Then
                                bc = .Cells(2, "H").Interior.Color
                                lg = Application.Match(TG(i, 9), .Columns("I"), 0)
                                bc = .Cells(lg, "H").Interior.Color
                            Else
                                bc = .Cells(2, "J").Interior.Color
                                lg = Application.Match(TG(i, 9), .Columns("K"), 0)
                                bc = .Cells(lg, "J").Interior.Color
                            End If
                        End With
                        On Error GoTo 0
                    End If
                    
                    If Right(TG(i, 8), 1) = "P" Then
                        Lbl.Top = Lbl.Top - 12
                        Lbl.Left = Lbl.Left - 5
                        Lbl.Width = 30
                        Lbl.Height = 30
                        Lbl.Picture = Usf_Accueil.Flag.Picture
                        
                        Lbl.BorderStyle = 0
                        Lbl.BackStyle = 0
                        Lbl.SpecialEffect = 0
                    Else
                        Rouge = Int(bc Mod 256)
                        Vert = Int((bc Mod 65536) / 256)
                        Bleu = Int(bc / 65536)
                        Lbl.BackColor = RGB(Rouge, Vert, Bleu)
                        
                        Lbl.TextAlign = 2
                        Lbl.SpecialEffect = 1
                        Lbl.Caption = TG(i, 9) & vbCrLf & TG(i, 6)
                    End If
                    
                    Set Histolbl = New Class_ListData
                    Set Histolbl.Histo = Lbl
                    HistoColl.Add Histolbl
                    
                End If
            Next i
        End If
    End With
End Sub

Attribute VB_Name = "Calendrier"
Option Explicit

Public Date_initiale As String
Public ChoixDate As Date
Public Txt_dt As Integer
Public Usf As Object
' Liste des jours f|fffd|ri|fffd|s d'une ann|fffd|e d|fffd|finie + jour de l'an de l'ann|fffd|e suivante
Public Jr_Feries As Variant
Public Dt_Feries(25) As Date
Public idx_ferie As Byte



' ** http://excel.developpez.com/faq/index.php?page=Form#UFnoTitle ********************************
Public Type RECT
        Left As Long
        Top As Long
        Right As Long
        Bottom As Long
End Type
 
Const GWL_STYLE = (-16)
Const WS_CAPTION = &HC00000
Const SWP_FRAMECHANGED = &H20
 
#If VBA7 Then
    Public Declare PtrSafe Function FindWindowA Lib "user32" _
        (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
 
    Public Declare PtrSafe Function GetWindowRect Lib "user32" _
        (ByVal hwnd As Long, lpRect As RECT) As Long
 
    Public Declare PtrSafe Function GetWindowLong Lib "user32" Alias _
        "GetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long) As Long
 
    Public Declare PtrSafe Function SetWindowLong Lib "user32" Alias _
        "SetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long, _
        ByVal dwNewLong As Long) As Long
 
    Public Declare PtrSafe Function SetWindowPos Lib "user32" _
        (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, ByVal x As Long, _
        ByVal Y As Long, ByVal cx As Long, ByVal cy As Long, _
        ByVal wFlags As Long) As Long
#Else
    Public Declare Function FindWindowA Lib "user32" _
        (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
 
    Public Declare Function GetWindowRect Lib "user32" _
        (ByVal hwnd As Long, lpRect As RECT) As Long
 
    Public Declare Function GetWindowLong Lib "user32" Alias _
        "GetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long) As Long
 
    Public Declare Function SetWindowLong Lib "user32" Alias _
        "SetWindowLongA" (ByVal hwnd As Long, ByVal nIndex As Long, _
        ByVal dwNewLong As Long) As Long
 
    Public Declare Function SetWindowPos Lib "user32" _
        (ByVal hwnd As Long, ByVal hWndInsertAfter As Long, ByVal x As Long, _
        ByVal Y As Long, ByVal cx As Long, ByVal cy As Long, _
        ByVal wFlags As Long) As Long
#End If


Sub AfficheTitleBarre(stCaption As String, pbVisible As Boolean)
Dim vrWin As RECT
Dim style As Long
Dim lHwnd As Long
'- Recherche du handle de la fen|fffd|tre par son Caption
    lHwnd = FindWindowA(vbNullString, stCaption)
    If lHwnd = 0 Then
        MsgBox "Handle de " & stCaption & " Introuvable", vbCritical
        Exit Sub
    End If
 
    GetWindowRect lHwnd, vrWin
    style = GetWindowLong(lHwnd, GWL_STYLE)
    If pbVisible Then
        SetWindowLong lHwnd, GWL_STYLE, style Or WS_CAPTION
    Else
        SetWindowLong lHwnd, GWL_STYLE, style And Not WS_CAPTION
    End If
    SetWindowPos lHwnd, 0, vrWin.Left, vrWin.Top, vrWin.Right - vrWin.Left, _
            vrWin.Bottom - vrWin.Top, SWP_FRAMECHANGED
End Sub
' ** fin de http://excel.developpez.com/faq/index.php?page=Form#UFnoTitle *************************


Sub Affiche(oUSF As Object, oControl As String, Optional oFrame As String)
Dim T As Single, L As Single

    If Not oFrame = "" Then
        T = oUSF.Controls(oFrame).Top + 17
        L = oUSF.Controls(oFrame).Left
    End If
    
    Set Usf = oUSF
    Date_initiale = oUSF.Controls(oControl).Value
    Txt_dt = Replace(oUSF.Controls(oControl).Name, "TextBox", "")
    
    With Usf_Calendrier
        .Top = oUSF.Top + T + oUSF.Controls(oControl).Top _
               + oUSF.Controls(oControl).Height * 2 + 3
        .Left = oUSF.Left + L + oUSF.Controls(oControl).Left
        .Show
    End With
End Sub


Sub init_Feries(Annee As Integer)
Dim d0 As Date, i As Integer

    Jr_Feries = Array("Premier de l'An", "P|fffd|ques", "Lundi de P|fffd|ques", "F|fffd|te du Travail", _
         "Victoire 1945", "Ascension", "Pentec|fffd|te", "Lundi de Pentec|fffd|te", "F|fffd|te Nationale", _
         "Assomption", "Toussaint", "Armistice", "No|fffd|l", "Premier de l'An", "P|fffd|ques", _
         "Lundi de P|fffd|ques", "F|fffd|te du Travail", "Victoire 1945", "Ascension", "Pentec|fffd|te", _
         "Lundi de Pentec|fffd|te", "F|fffd|te Nationale", "Assomption", "Toussaint", "Armistice", "No|fffd|l")
        
    Dt_Feries(0) = DateSerial(Annee, 1, 1)
    d0 = DateSerial(Annee, 4, ((234 - 11 * (Annee Mod 19)) Mod 30))
    i = (d0 - DateSerial(1899, 12, 31)) / 7
    Dt_Feries(1) = CDate(Math.Round(i) * 7 - 6)
    Dt_Feries(2) = DateAdd("d", 1, Dt_Feries(1))
    Dt_Feries(3) = DateSerial(Annee, 5, 1)
    Dt_Feries(4) = DateSerial(Annee, 5, 8)
    Dt_Feries(5) = DateAdd("d", 39, Dt_Feries(1))
    Dt_Feries(6) = DateAdd("d", 49, Dt_Feries(1))
    Dt_Feries(7) = DateAdd("d", 1, Dt_Feries(6))
    Dt_Feries(8) = DateSerial(Annee, 7, 14)
    Dt_Feries(9) = DateSerial(Annee, 8, 15)
    Dt_Feries(10) = DateSerial(Annee, 11, 1)
    Dt_Feries(11) = DateSerial(Annee, 11, 11)
    Dt_Feries(12) = DateSerial(Annee, 12, 25)
    
    Dt_Feries(13) = DateSerial(Annee + 1, 1, 1)
    d0 = DateSerial(Annee + 1, 4, ((234 - 11 * ((Annee + 1) Mod 19)) Mod 30))
    i = (d0 - DateSerial(1899, 12, 31)) / 7
    Dt_Feries(14) = CDate(Math.Round(i) * 7 - 6)
    Dt_Feries(15) = DateAdd("d", 1, Dt_Feries(14))
    Dt_Feries(16) = DateSerial(Annee, 5, 1)
    Dt_Feries(17) = DateSerial(Annee, 5, 8)
    Dt_Feries(18) = DateAdd("d", 39, Dt_Feries(14))
    Dt_Feries(19) = DateAdd("d", 49, Dt_Feries(14))
    Dt_Feries(20) = DateAdd("d", 1, Dt_Feries(19))
    Dt_Feries(21) = DateSerial(Annee + 1, 7, 14)
    Dt_Feries(22) = DateSerial(Annee + 1, 8, 15)
    Dt_Feries(23) = DateSerial(Annee + 1, 11, 1)
    Dt_Feries(24) = DateSerial(Annee + 1, 11, 11)
    Dt_Feries(25) = DateSerial(Annee + 1, 12, 25)
End Sub


Function Est_Ferie(dt As Date)
Dim i As Byte
    Est_Ferie = False
    For i = 0 To UBound(Dt_Feries)
        If dt = Dt_Feries(i) Then
            Est_Ferie = True
            idx_ferie = i
        End If
    Next i
End Function
Attribute VB_Name = "Cfg"
Option Explicit


' ***********************************************************************
' *****                                                             *****
' *****        CODE PierreP56 : http://tatiak.canalblog.com/        *****
' *****                                                             *****
' ***********************************************************************


Sub Sauve_cfg(Optional x As Byte)
Dim lgmax As Integer, lg As Integer, T As Variant

    lgmax = codes_couleur(3)
    lg = codes_couleur(8)
    If lg > lgmax Then lgmax = lg
    lg = codes_couleur(10)
    If lg > lgmax Then lgmax = lg
    T = Sheets("Config").Range("A1:K" & lgmax).Value
    lg = T_Export(T, ActiveWorkbook.Path & "\Cfg.txt")
End Sub


Sub Lire_cfg(Optional x As Byte)
Dim T As Variant

    If Exist_Fichier(ActiveWorkbook.Path & "\Cfg.txt") Then
        T = T_Import(ActiveWorkbook.Path & "\Cfg.txt")
        Sheets("Config").Range("A1:K1000").ClearContents
        Sheets("Config").Range("A1").Resize(UBound(T, 1), UBound(T, 2)) = T
        decode_couleur (3)
        decode_couleur (8)
        decode_couleur (10)
    End If
End Sub


Function codes_couleur(col As Integer) As Integer
Dim lg As Integer, i As Integer, couleur As Long

    With Sheets("Config")
        lg = .Cells(Rows.Count, col + 1).End(xlUp).Row
        For i = 2 To lg
            couleur = .Cells(i, col).Interior.Color
            .Cells(i, col).Value = couleur
            .Cells(i, col).Font.Color = couleur
        Next i
    End With
    codes_couleur = lg
End Function


Sub decode_couleur(col As Integer)
Dim lg As Integer, i As Integer, couleur As Long

    With Sheets("Config")
        lg = .Cells(Rows.Count, col + 1).End(xlUp).Row
        For i = 2 To lg
            couleur = .Cells(i, col).Value
            .Cells(i, col).Interior.Color = couleur
            .Cells(i, col).Font.Color = couleur
        Next i
    End With
End Sub
Attribute VB_Name = "Class_Accueil"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Public WithEvents GFond As UserForm
Attribute GFond.VB_VarHelpID = -1
Public WithEvents Lbl As MSForms.Label      ' jour calendrier
Attribute Lbl.VB_VarHelpID = -1
Public WithEvents Fond As MSForms.Label
Attribute Fond.VB_VarHelpID = -1
Public WithEvents lbPage As MSForms.Label   ' label "pages"
Attribute lbPage.VB_VarHelpID = -1
Public WithEvents lbFich As MSForms.Label   ' icone fiche
Attribute lbFich.VB_VarHelpID = -1
Public WithEvents lbNoPr As MSForms.Label   ' case nom+prenom
Attribute lbNoPr.VB_VarHelpID = -1


Private Coll As New Collection

Private Type Coord
    lg As Integer
    cl As Integer
End Type


Private Function repere(num As Integer) As Coord
    repere.lg = Int(num / LDcol) + 1
    repere.cl = num + 1 - ((repere.lg - 1) * LDcol)
End Function


Function Init_Acc()
Dim Id(85) As New Class_Accueil, i As Byte

    Set Id(i).Fond = Usf_Accueil.Controls("Label20")
    Coll.Add Id(0)
    
    For i = 1 To 42
        Set Id(i).Lbl = Usf_Accueil.Controls("J" & i)
        Coll.Add Id(i)
    Next i
    
    Set Id(43).GFond = Usf_Accueil
    Coll.Add Id(43)
    
    For i = 0 To 2
        Set Id(44 + i).lbPage = Usf_Accueil.Controls("Label" & 21 + i)
        Coll.Add Id(44 + i)
    Next i
    Set Id(85).lbPage = Usf_Accueil.Label36
    Coll.Add Id(85)
    
    For i = 13 To 24
        Set Id(i + 34).Fond = Usf_Accueil.Controls("Txt" & i)
        Coll.Add Id(i + 34)
    Next i
    
    For i = 25 To 36
        Set Id(i + 34).lbNoPr = Usf_Accueil.Controls("Txt" & i)
        Coll.Add Id(i + 34)
    Next i
    
    For i = 37 To 48
        Set Id(i + 34).lbFich = Usf_Accueil.Controls("Txt" & i)
        Coll.Add Id(i + 34)
    Next i
    
    Set Id(83).Fond = Usf_Accueil.Label29
    Coll.Add Id(83)
    
End Function


Private Sub Lbl_Click()
Dim Annee As Integer, mois As Byte, j As Byte, num As Byte

    With Usf_Accueil
        mois = Month(CDate(.ddj.Caption))
        Annee = Year(CDate(.ddj.Caption))
        
        num = CByte(Mid(Lbl.Name, 2))
        
        If num < 7 And Lbl.Caption > 20 Then
            mois = Month(CDate(.ddj.Caption)) - 1
            If mois = 0 Then
                mois = 12
                Annee = Annee - 1
            End If
        End If
        
        If num > 28 And Lbl.Caption < 15 Then
            mois = Month(CDate(.ddj.Caption)) + 1
            If mois = 13 Then
                mois = 1
                Annee = Annee + 1
            End If
        End If
        
        OldDdj = CDate(.ddj.Caption)
        .ddj.Caption = DateSerial(Annee, mois, Lbl.Caption)
        fixe_date
        
       ' Redessine
       Dessine_Event
   End With
End Sub


Sub fixe_date()
Dim Annee As Integer, mois As Byte
Dim index As Byte, i As Integer, d As Date

    With Usf_Accueil
        Annee = Year(CDate(.ddj.Caption))
        mois = Month(CDate(.ddj.Caption))
    
        .Label4.Caption = Format(.ddj.Caption, "mmm yyyy")
        .Label5.Caption = Format(.ddj.Caption, "dd")
        .Label6.Caption = Format(.ddj.Caption, "ddd")
        .Label7.Caption = "Sem. " & numero_de_semaine(CDate(.ddj.Caption))
        .Label9.Caption = Format(.ddj.Caption, "mmmm yyyy")
        Fixe_Label24
    
        index = Weekday(DateSerial(Annee, mois, 1)) - 1
        If index = 0 Then index = 7
        init_Feries (Annee)

        For i = 1 To 42
            d = DateAdd("d", i - index, DateSerial(Annee, mois, 1))
            .Controls("J" & i).Caption = Day(d)
            .Controls("J" & i).ForeColor = IIf(Month(d) = mois, &H80000012, &H8000000C)
            .Controls("J" & i).BackColor = &HFFFFFF
            .Controls("J" & i).ControlTipText = ""
            If d = Date Then
                .Controls("J" & i).BackColor = &HC0FFC0 'vert p|fffd|le
                .Controls("J" & i).ControlTipText = "Aujourd'hui"
            End If
            If Est_Ferie(d) Then
                .Controls("J" & i).BackColor = &HC0C0C0 ' gris
                .Controls("J" & i).ControlTipText = Jr_Feries(idx_ferie)
            End If
        Next i
        
        Jour_encours
        
    End With
End Sub


Private Sub Lbl_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Lbl.BorderStyle = fmBorderStyleSingle
    Lbl.Font.Bold = True
End Sub


Private Sub Fond_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    raz
End Sub


Private Sub GFond_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    raz
End Sub


' ***** Gestion des "Pages" ***********************************************************************
Private Sub lbPage_Click()
    LabelPages (CByte(Mid(lbPage.Name, 6)))
    Usf_Accueil.CommandButton1.Visible = (lbPage.Name = "Label22")
    Dessine_Event
End Sub


Sub LabelPages(num As Byte, Optional init As Boolean = False)
Dim i As Byte
    With Usf_Accueil
        For i = 1 To 3
            .Controls("Label" & 20 + i).BackColor = &HFFFFFF
            .Controls("Label" & 20 + i).ForeColor = &H80000012
        Next i
        .Controls("Label" & 36).BackColor = &HFFFFFF
        .Controls("Label" & 36).ForeColor = &H80000012
        
        .Controls("Label" & num).BackColor = &HED9564    ' bleu &H80000006 ' gris fonc|fffd|
        .Controls("Label" & num).ForeColor = &HFFFFFF
    End With
    Page = num - 20
    If Not init Then Fixe_Label24
End Sub


Private Sub Fixe_Label24()
Dim dt As Date, i As Byte

    With Usf_Accueil
        Select Case Page
            Case 1
                .Label24.Caption = "Journ|fffd|e du " & .ddj.Caption
                Dessine_grille (21)
            Case 2
                dt = LundiDu(CDate(.ddj.Caption))
                'If Not dt = LundiDu(OldDdj) Then
                    .Label24.Caption = "semaine du " & dt & " au " & dt + 7
                    Dessine_grille (22)
                    For i = 0 To 6
                        .Controls("Ent" & i).Caption = Format(dt + i, "ddd dd/mm/yy")
                    Next i
                'End If
            Case 3
                .Label24.Caption = Format(CDate(.ddj.Caption), "mmmm yyyy")
                'If Not Month(CDate(.ddj.Caption)) = Month(OldDdj) Then
                Dessine_grille (23)
                'End If
            Case 16
                .Label24.Caption = Format(CDate(.ddj.Caption), "mmmm yyyy")
                Dessine_grille (90)
        End Select
    End With
    Dessine_Event
End Sub


' Affiche n|fffd| t|fffd|l + Email
Private Sub lbNoPr_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
Dim num As Integer

    num = Mid(lbNoPr.Name, 4) - 24 + 1
    If UBound(T_ident, 1) = 0 Or num > UBound(T_ident, 1) Then Exit Sub
    If T_ident(num, 1) = "RH" Then
        With Usf_Accueil.Label33
            .Visible = True
            .BackColor = &HFFFFF0
            .BorderColor = &H8000000A
            .ForeColor = &HED9564
            .Top = Y + lbNoPr.Top + 13
            .Left = x + 59.5
            .Width = 150
            .Height = 50
            .ZOrder 0
            .Caption = vbCrLf & "Fonction : " & T_ident(num, 9) & vbCrLf & _
                       "T|fffd|l Fixe : " & T_ident(num, 6) & vbCrLf & _
                       "T|fffd|l Port : " & T_ident(num, 7) & vbCrLf & "Email : " & T_ident(num, 8)
        End With
        With Usf_Accueil.Label34
            .Visible = True
            .BackColor = &HFFBF00
            .Top = Usf_Accueil.Label33.Top + 0.5
            .Left = Usf_Accueil.Label33.Left + 0.5
            .Width = 149
            .ZOrder 0
            .Caption = lbNoPr.Caption
        End With
    Else
        Usf_Accueil.Label33.Visible = False
        Usf_Accueil.Label34.Visible = False
        Usf_Accueil.Label35.Visible = False
    End If
End Sub


' Ouvre fiche d'une ressource
Private Sub lbFich_Click()
    Ouvre_Fiche_Rsc lbFich.Caption, True
End Sub


Private Sub lbFich_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Usf_Accueil.Label33.Visible = False
    Usf_Accueil.Label34.Visible = False
    Usf_Accueil.Label35.Visible = False
End Sub



' ***** RAZ ***************************************************************************************
Private Sub raz()
Dim i As Byte
    With Usf_Accueil
        For i = 1 To 42
            .Controls("J" & i).BorderStyle = fmBorderStyleNone
            .Controls("J" & i).Font.Bold = False
        Next i
        .Label33.Visible = False
        .Label33.Caption = ""
        .Label34.Visible = False
        .Label35.Visible = False
    End With
End Sub
Attribute VB_Name = "Class_Calendrier"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public WithEvents Fond As MSForms.UserForm
Attribute Fond.VB_VarHelpID = -1
Public WithEvents Lbl As MSForms.Label
Attribute Lbl.VB_VarHelpID = -1

Private Coll As New Collection


Function Init_Calendrier()
Dim Id(42) As New Class_Calendrier, i As Byte

    Set Id(i).Fond = Usf_Calendrier
    Coll.Add Id(0)
    
    For i = 1 To 42
        Set Id(i).Lbl = Usf_Calendrier.Controls("J" & i)
        Coll.Add Id(i)
    Next i

End Function


Private Sub raz()
Dim i As Byte

    For i = 1 To 42
        Usf_Calendrier.Controls("J" & i).BorderStyle = fmBorderStyleNone
        Usf_Calendrier.Controls("J" & i).Font.Bold = False
    Next i
End Sub


Private Sub Lbl_Click()
Dim num As Byte, mois As Byte, Annee As Integer

    mois = Month(CDate(Usf_Calendrier.ddj_cal.Caption))
    Annee = Year(CDate(Usf_Calendrier.ddj_cal.Caption))
    
    num = CByte(Mid(Lbl.Name, 2))
    If num < 7 And Lbl.Caption > 20 Then
        mois = Month(CDate(Usf_Calendrier.ddj_cal.Caption)) - 1
        If mois = 0 Then
            mois = 12
            Annee = Annee - 1
        End If
    End If
    
    If num > 28 And Lbl.Caption < 15 Then
        mois = Month(CDate(Usf_Calendrier.ddj_cal.Caption)) + 1
        If mois = 13 Then
            mois = 1
            Annee = Annee + 1
        End If
    End If

    ChoixDate = DateSerial(Annee, mois, Lbl.Caption)
    Unload Usf_Calendrier
End Sub


Private Sub Lbl_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Lbl.BorderStyle = fmBorderStyleSingle
    Lbl.Font.Bold = True
End Sub


Private Sub Fond_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    raz
End Sub
Attribute VB_Name = "Class_Evnmt"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public WithEvents UFond As UserForm
Attribute UFond.VB_VarHelpID = -1
Public WithEvents lbRsc As MSForms.Label   ' label ressource
Attribute lbRsc.VB_VarHelpID = -1
Public WithEvents lbCli As MSForms.Label   ' label client
Attribute lbCli.VB_VarHelpID = -1
Public WithEvents lbFic As MSForms.Label   ' label fiche dans Usf_EvnmtList
Attribute lbFic.VB_VarHelpID = -1


Private Coll As New Collection


Function Init_Evnmt()
Dim Id(84) As New Class_Evnmt, i As Byte

    Set Id(0).UFond = Usf_Evnmt
    Coll.Add Id(0)
    
    With Usf_Evnmt
        For i = 1 To 4
            Set Id(i).lbRsc = .Controls("Rsc" & i)
            Coll.Add Id(i)
            Set Id(i + 4).lbRsc = .Controls("Rsc_S" & i)
            Coll.Add Id(i + 4)
            Set Id(i + 8).lbCli = .Controls("Cli" & i)
            Coll.Add Id(i + 8)
            Set Id(i + 12).lbCli = .Controls("Cli_S" & i)
            Coll.Add Id(i + 12)
        Next i
    End With
End Function


Private Sub raz()
Dim i As Byte
    With Usf_Evnmt
        For i = 1 To 4
            .Controls("Rsc" & i).Visible = True
            .Controls("Cli" & i).Visible = True
        Next i
    End With
End Sub


Private Sub LbRsc_Click()

    With Usf_Evnmt
        raz
        If Len(lbRsc.Name) = 4 Then
            raz
            numlist = Mid(lbRsc.Name, 4)
            If Not .Controls("Rsc" & numlist - 1).Caption = "" Then
                lbRsc.Visible = False
                .ComboBox4.Top = lbRsc.Top
                .ComboBox4.Visible = True
                .ComboBox4.DropDown
            End If
        Else
            numlist = Mid(lbRsc.Name, 6)
            If Not .Controls("Rsc" & numlist).Caption = "" Then
                Ote_elem ListRsc, numlist + .ScrollBar1.Value
                If .ScrollBar1.Max > 0 Then .ScrollBar1.Max = .ScrollBar1.Max - 1
                remplir_ListRsc
            End If
        End If
    End With
End Sub


Private Sub LbCli_Click()

    With Usf_Evnmt
        raz
        If Len(lbCli.Name) = 4 Then
            raz
            numlist = Mid(lbCli.Name, 4)
            If Not .Controls("Cli" & numlist - 1).Caption = "" Then
                lbCli.Visible = False
                .ComboBox5.Top = lbCli.Top
                .ComboBox5.Visible = True
                .ComboBox5.DropDown
            End If
        Else
            numlist = Mid(lbCli.Name, 6)
            If Not .Controls("Cli" & numlist).Caption = "" Then
                Ote_elem ListCli, numlist + .ScrollBar2.Value
                If .ScrollBar2.Max > 0 Then .ScrollBar2.Max = .ScrollBar2.Max - 1
                remplir_ListCli
            End If
        End If
    End With
End Sub


Private Sub UFond_Click()
    raz
End Sub


Private Sub UFond_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    'raz
    'Dim i As Byte
    'With Usf_Evnmt
    '    '.ComboBox4.ListIndex = -1
    '    .ComboBox4.Visible = False
    '    .ComboBox5.Visible = False
    '    For i = 1 To 4
    '        .Controls("Rsc" & i).Visible = True
    '        .Controls("Cli" & i).Visible = True
    '    Next i
    'End With
End Sub


Private Sub lbFic_Click()
    If Not lbFic.Caption = "" Then
        Ouvre_Fiche_Evenmt (lbFic.Caption)
    End If
End Sub
Attribute VB_Name = "Class_ListData"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public WithEvents LDcell As MSForms.Label
Attribute LDcell.VB_VarHelpID = -1
Public WithEvents Histo As MSForms.Label      ' Ev|fffd|nement
Attribute Histo.VB_VarHelpID = -1

Dim oldX As Integer, oldY As Integer, oldW As Single
Dim oldHistoX As Integer, oldHistoY As Integer, oldColor As Long
Dim mvt As Boolean
Dim allonge As Boolean

Private Type Coord
    lg As Integer
    cl As Integer
End Type

Private Lft_trim As Single


Private Function repere(num As Integer) As Coord
    repere.lg = Int(num / LDcol) + 1
    repere.cl = num - ((repere.lg - 1) * LDcol)
End Function


'Private Sub Histo_Click()
'    'Ouvre_Fiche_Evenmt (Mid(Histo.Name, 6))
'End Sub

' ***** HISTO *************************************************************************************
Private Sub Histo_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
Dim Indic As Control

    allonge = False
    Select Case Button
        Case 1
            oldX = x
            oldY = Y
            oldHistoX = Histo.Left
            oldHistoY = Histo.Top
            oldW = Histo.Width
            oldColor = Histo.BackColor
            Set Indic = Usf_Accueil.Controls.Add("forms.Label.1")
            With Indic
                .Name = "Indic"
                .Font.Size = 7
                .Width = 35
                .Height = 18
                .Top = Histo.Top + 2
                .TextAlign = fmTextAlignCenter
                .BorderStyle = 1
                .ZOrder msoBringToFront
                .Visible = False
            End With
            If Abs(Histo.Width - x) < 5 Then
                Application.Cursor = xlIBeam
                allonge = True
            End If
        Case 2
            Usf_Accueil.Label33.Visible = False
            Usf_Accueil.Label34.Visible = False
            Usf_Accueil.Label35.Visible = False
            Ouvre_Fiche_Evenmt (Mid(Histo.Name, 6))
    End Select
End Sub


Private Function idx(Id As Long) As Long
Dim i As Integer
    idx = 0
    For i = 1 To UBound(TG, 1)
        If Id = TG(i, 1) Then
            idx = i
            Exit Function
        End If
    Next i
End Function


Private Sub Histo_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
Dim W As Single, dt As Date, dt1 As Long, Id As Long

    With Usf_Accueil.Label33
        .Visible = True
        .BackColor = &HE6F5FD '&HB5E4FF '&HFFFFF0
        .BorderColor = &H8000000A
        .ForeColor = &HFF901E '&HED9564 '&HED9564
        .Top = Histo.Top + Y + 13
        .Left = Histo.Left + x + 6
        .Width = 100
        .Height = 50
        .ZOrder 0
        Id = idx(Mid(Histo.Name, 6))
           ' Debug.Print Histo.SpecialEffect & " " & TG(Id, 4) & " " & TG(Id, 5)
        If TG(Id, 3) = "01/01/2100" Then TG(Id, 3) = "??"
        If TG(Id, 4) = "00:00:00" Then TG(Id, 4) = ""
        If TG(Id, 5) = "00:00:00" Then TG(Id, 5) = ""
        
        .Caption = vbCrLf & TG(Id, 6) & vbCrLf & _
                  "du " & TG(Id, 2) & " " & TG(Id, 4)
        If Histo.SpecialEffect = 1 Then
            .Caption = .Caption & vbCrLf & _
                  "au " & TG(Id, 3) & " " & TG(Id, 5)
        End If
    End With
    With Usf_Accueil.Label34
        .Visible = True
        .BackColor = &HC0E0FF
        .Top = Usf_Accueil.Label33.Top + 0.5
        .Left = Usf_Accueil.Label33.Left + 1
        .Width = 98
        .ZOrder 0
        .Caption = TG(Id, 9)
    End With
    With Usf_Accueil.Label35
        .Visible = True
        .Top = Usf_Accueil.Label33.Top + 39
        .Left = Usf_Accueil.Label33.Left + 1
        .Width = 98
        .ZOrder 0
    End With
    If Button = 1 Then
        Usf_Accueil.Label33.Visible = False
        Usf_Accueil.Label34.Visible = False
        Usf_Accueil.Label35.Visible = False
        Histo.BackColor = &HD3D3D3
        Histo.ForeColor = &H696969
        W = Int(Largeur_utile / LDcol) * 24
        On Error Resume Next
        If allonge Then
            If oldW + x - oldX > 10 And oldW + x - oldX < Largeur_utile + Left0 - Histo.Left - 5 Then
                Histo.Width = oldW + x - oldX
                With Usf_Accueil.Controls("Indic")
                    .Visible = True
                    .Left = Histo.Left + Histo.Width - .Width / 2
                    Select Case Page
                        Case 1
                            If Histo.SpecialEffect = 0 Then
                                .Caption = Format((Histo.Left + 5 - Left0 - 2.5) / W, "hh:mm")
                            Else
                                .Caption = Format((Histo.Left - Left0 - 2.5) / W, "hh:mm") & vbCrLf & _
                                       Format((Histo.Width + Histo.Left - Left0 - 2.5) / W, "hh:mm")
                            End If
                        Case 2
                            dt = CDate(Usf_Accueil.ddj.Caption)
                            dt1 = LundiDu(dt)
                            If Histo.SpecialEffect = 0 Then
                                .Caption = Format(dt1 + Int((Histo.Left + 5 - Left0) / W * 24), "dd/mm/yy")
                            Else
                                .Caption = Format(dt1 + Int((Histo.Left - Left0) / W * 24), "dd/mm/yy") & _
                                       vbCrLf & _
                                       Format(dt1 + Int((Histo.Width + Histo.Left - Left0 - 5) / W * 24), "dd/mm/yy")
                            End If
                        Case 3
                            dt = CDate(Usf_Accueil.ddj.Caption)
                            dt1 = CLng(DateSerial(Year(dt), Month(dt), 1))
                            If Histo.SpecialEffect = 0 Then
                                .Caption = Format(dt1 + Int((Histo.Left + 5 - Left0) / W * 24), "dd/mm/yy")
                            Else
                                .Caption = Format(dt1 + Int((Histo.Left - Left0) / W * 24), "dd/mm/yy") & _
                                       vbCrLf & _
                                       Format(dt1 + Int((Histo.Width + Histo.Left - Left0 - 5) / W * 24), "dd/mm/yy")
                            End If
                        Case 16
                            dt = CDate(TG(Id, 2))
                            dt1 = DateAdd("d", x / Largeur_utile * nbj_trim, dt)
                            If Histo.SpecialEffect = 0 Then
                                .Caption = Format(CDate(TG(Id, 2)), "dd/mm/yy")
                            Else
                                .Caption = Format(CDate(TG(Id, 2)), "dd/mm/yy") & _
                                        vbCrLf & _
                                        Format(dt1, "dd/mm/yy")
                            End If
                    End Select
                End With
            End If
        Else
            If Histo.Left + x - oldX > Left0 And Histo.Left + x - oldX + Histo.Width < Largeur_utile + Left0 - 5 Then
                Histo.Move Histo.Left + x - oldX, Histo.Top
            End If
            With Usf_Accueil.Controls("Indic")
                .Visible = True
                .Left = Histo.Left - .Width / 2
                Select Case Page
                    Case 1
                        If Histo.SpecialEffect = 0 Then
                            .Caption = Format((Histo.Left + 5 - Left0 - 2.5) / W, "hh:mm")
                        Else
                            .Caption = Format((Histo.Left - Left0 - 2.5) / W, "hh:mm") & vbCrLf & _
                                   Format((Histo.Width + Histo.Left - Left0 - 2.5) / W, "hh:mm")
                        End If
                    Case 2
                        dt1 = LundiDu(CDate(Usf_Accueil.ddj.Caption))
                        If Histo.SpecialEffect = 0 Then
                            .Caption = Format(dt1 + Int((Histo.Left - Left0 + 5) / W * 24), "dd/mm/yy")
                        Else
                            .Caption = Format(dt1 + Int((Histo.Left - Left0) / W * 24), "dd/mm/yy") & _
                                   vbCrLf & _
                                   Format(dt1 + Int((Histo.Width + Histo.Left - Left0 - 5) / W * 24), "dd/mm/yy")
                        End If
                    Case 3
                        dt = CDate(Usf_Accueil.ddj.Caption)
                        dt1 = CLng(DateSerial(Year(dt), Month(dt), 1))
                        If Histo.SpecialEffect = 0 Then
                            .Caption = Format(dt1 + Int((Histo.Left + 5 - Left0) / W * 24), "dd/mm/yy")
                        Else
                            .Caption = Format(dt1 + Int((Histo.Left - Left0) / W * 24), "dd/mm/yy") & _
                                   vbCrLf & _
                                   Format(dt1 + Int((Histo.Width + Histo.Left - Left0 - 5) / W * 24), "dd/mm/yy")
                        End If
                    Case 16
                        dt = CDate(Usf_Accueil.ddj.Caption)
                        dt = CLng(DateSerial(Year(dt), Month(dt), 1))
                        dt1 = DateAdd("d", (Histo.Left - Left0) / Largeur_utile * nbj_trim, dt)
                        If Histo.SpecialEffect = 0 Then
                            .Caption = Format(dt1, "dd/mm/yy")
                        Else
                            .Caption = Format(dt1, "dd/mm/yy") & _
                                   vbCrLf & _
                                   Format(dt1 + CDate(TG(Id, 3)) - CDate(TG(Id, 2)), "dd/mm/yy")
                        End If
                End Select
            End With
        End If
    End If
End Sub


Private Sub Histo_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
Dim S As String, H1 As String, H2 As String

    S = Usf_Accueil.Controls("Indic").Caption
    Select Case Page
        Case 1
            H1 = Left(S, 5)
            H2 = Right(S, 5)
            S = "Hdeb=" & Esc_Hr(H1) & ", Hfin=" & Esc_Hr(H2)
        Case 2, 3, 16
            H1 = Left(S, 8)
            H2 = Right(S, 8)
            S = "Deb=" & Esc_Dt(H1) & ", Fin=" & Esc_Dt(H2)
    End Select
    If Not (H1 = "" And H2 = "") Then Sql.Update_DB "Evnmnts", S, "Id=" & Mid(Histo.Name, 6)
    Histo.BackColor = oldColor
    Histo.ForeColor = &H80000012
    Application.Cursor = xlNormal
    On Error Resume Next
    Usf_Accueil.Controls.Remove "Indic"
    Dessine_Event
End Sub



' ***** LDcell *************************************************************************************
Private Sub LDcell_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    If Page = 16 Then Lft_trim = x
End Sub


Private Sub LDcell_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
Dim lig As Integer, col As Integer, W As Single
Dim Tp As Integer, lft As Integer, S As String
Dim tps As Single, ddjj As Date

    Usf_Accueil.Label33.Visible = False
    Usf_Accueil.Label34.Visible = False
    Usf_Accueil.Label35.Visible = False
    If Button = 1 Then
        lig = repere(Mid(LDcell.Name, 4)).lg
        col = repere(Mid(LDcell.Name, 4)).cl
        W = Int(Largeur_utile / LDcol)
    
        With Usf_Accueil
            Tp = .Controls("Txt" & lig + 36).Top
            lft = .Controls("Ent" & col).Left
            S = .Controls("Ent" & col).Caption
            Select Case Page
                Case 1
                    tps = CDate(S) + (x / W / 24)
                    S = S & " |fffd| " & Format(tps, "hh:mm")
                    
                Case 2
                    tps = CDate(Right(S, 8))
                    S = "du " & Right(S, 8) & " au " & Format(tps + Int(x / W), "dd/mm/yy")
                    
                Case 3
                    ddjj = CDate(.ddj.Caption)
                    tps = DateSerial(Year(ddjj), Month(ddjj), Right(S, 2))
                    S = "du " & Format(tps, "dd/mm/yy") & " au " & Format(tps + Int(x / W), "dd/mm/yy")
                Case 16
                    lft = lft + Lft_trim
                    ddjj = CDate("1 " & S & " " & Year(CDate(.ddj.Caption)))
                    S = "du " & Format(DateAdd("d", Lft_trim / Largeur_utile * nbj_trim, ddjj), "dd/mm/yy") & " au " & _
                                Format(DateAdd("d", x / Largeur_utile * nbj_trim, ddjj), "dd/mm/yy")
      
            End Select
            
            With .Label33
                .Caption = S
                .BackColor = &H80000000
                .BorderColor = &H80000002
                .ForeColor = &HFFFFFF   ' blanc
                .Height = 18
                .Visible = True
                .ZOrder 0
                .Top = Tp + 3
                .Left = lft
                If x > 0 Then .Width = IIf(Page = 16, x - Lft_trim, x)
            End With
        End With
    End If
End Sub


Private Sub LDcell_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    With Usf_Accueil.Label33
        .Visible = False
        If .Caption = "" Then
            Exit Sub
        Else
            If Asc(Left(.Caption, 1)) = 13 Then Exit Sub
        End If
        New_Fiche_Evenmt repere(Mid(LDcell.Name, 4)).lg, .Caption
        .Caption = ""
    End With
    Usf_Accueil.Label34.Visible = False
    Usf_Accueil.Label35.Visible = False
End Sub


'Private Sub LDcell_Click()
'Dim lig As Integer, col As Integer'
'
'    lig = repere(Mid(LDcell.Name, 4)).Lg
'    col = repere(Mid(LDcell.Name, 4)).cl
'
'    With Usf_Accueil
'        New_Fiche_Evenmt .Controls("Txt" & lig + 36).Caption, _
'                         .Controls("Txt" & lig + 24).Caption, _
'                         .Controls("Ent" & col).Caption
'    End With
'
'End Sub


Attribute VB_Name = "Class_Menu"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public WithEvents Fond As MSForms.UserForm
Attribute Fond.VB_VarHelpID = -1
Public WithEvents Menu As MSForms.Label
Attribute Menu.VB_VarHelpID = -1
Public WithEvents Image As MSForms.Image
Attribute Image.VB_VarHelpID = -1

Private Const color1 = &H80000003 '&H8000000B
Private Const color2 = &H8000000D '&H80000003


Sub init(Form As MSForms.UserForm)
    Set Fond = Form
End Sub


Private Sub RazMenu()
Dim ctrl As Control
    For Each ctrl In Fond.Controls
        If Left(ctrl.Name, 3) = "Img" Then ctrl.Visible = False
        If Left(ctrl.Name, 4) = "Menu" Then
            ctrl.BackColor = color1
            If Len(ctrl.Name) > 5 Then ctrl.Visible = False
        End If
    Next
End Sub


Private Sub menu_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
Dim ctrl As Control, Id As Byte

    RazMenu
    Id = Mid(Menu.Name, 5, 1)
    For Each ctrl In Fond.Controls
        If ctrl.Name = "Menu" & Id Then ctrl.BackColor = color2 ' menu
        If Mid(ctrl.Name, 4, 1) = Id Then ctrl.Visible = True   ' Img
        If Mid(ctrl.Name, 5, 1) = Id Then ctrl.Visible = True   ' sous menu
    Next
    Menu.BackColor = color2   ' sous menu
End Sub


Private Sub Menu_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    RazMenu
    menu_select Menu.Name
End Sub


Private Sub Fond_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    RazMenu
End Sub


Attribute VB_Name = "Class_RscList"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit


Public WithEvents GFond As UserForm
Attribute GFond.VB_VarHelpID = -1
Public WithEvents lbType As MSForms.Label   ' label filtre/page Type de ressource
Attribute lbType.VB_VarHelpID = -1
Public WithEvents lbFich As MSForms.Label   ' label fiche
Attribute lbFich.VB_VarHelpID = -1
Public WithEvents lbPoub As MSForms.Label   ' label poubelle
Attribute lbPoub.VB_VarHelpID = -1

Private Coll As New Collection


Function Init_List()
Dim Id(84) As New Class_RscList, i As Byte

    Set Id(0).GFond = UsF_RSClist
    Coll.Add Id(0)
    
    For i = 1 To 5
        Set Id(i).lbType = UsF_RSClist.Controls("Label" & i)
        Coll.Add Id(i)
    Next i
    
    For i = 1 To 10
        Set Id(i + 5).lbFich = UsF_RSClist.Controls("Txt" & i)
        Coll.Add Id(i + 5)
        Set Id(i + 15).lbPoub = UsF_RSClist.Controls("Txt" & i + 60)
        Coll.Add Id(i + 15)
    Next i
    
End Function


' ***** Gestion des "Pages" ***********************************************************************
Private Sub lbType_Click()
    PageRsc = CByte(Mid(lbType.Name, 6))
    With UsF_RSClist
        .Label20.Visible = (PageRsc = 1)
        .ComboBox2.Visible = (PageRsc = 1)
        .ComboBox2.ListIndex = 0
    End With
    LabelType (PageRsc)
End Sub


Sub LabelType(num As Byte)
Dim i As Byte, T_caption As Variant, T_bouton As Variant

    With UsF_RSClist
        T_caption = Array("DES RESSOURCES", "DES CLIENTS", "DES FOURNISSEURS", "DES PROSPECTS", "AUTRES")
        T_bouton = Array("Nouvelle Ressource", "Nouveau Client", "Nouveau Fournisseur", "Nouveau Prospect", "Nouvelle Fiche")
        For i = 1 To 5
            .Controls("Label" & i).BackColor = &HFFFFFF
            .Controls("Label" & i).ForeColor = &H80000012
        Next i
        .Controls("Label" & num).BackColor = &HED9564    ' bleu '&H80000006 ' gris fonc|fffd|
        .Controls("Label" & num).ForeColor = &HFFFFFF
        .Caption = "LISTE " & T_caption(num - 1)
        .CommandButton2.Caption = T_bouton(num - 1)
        .TextBox0.Value = num
        .TextBox1.ForeColor = &H80000010
        initFindRsc = True
        .TextBox1.Value = "Rechercher"
        initFindRsc = False
        Filtre_Ctct (tri)
    End With
End Sub


' ***** Ouverture de la fiche *********************************************************************
Private Sub lbFich_Click()

    Select Case PageRsc
        Case 1: Ouvre_Fiche_Rsc lbFich.Caption, True
        Case Else: Ouvre_Fiche_Rsc lbFich.Caption, False
    End Select

End Sub


' ***** Suppression de la fiche *******************************************************************
Private Sub lbpoub_Click()
Dim Repons As Variant, Id As Integer

    Repons = MsgBox("Etes-vous certain de vouloir supprimer cette fiche? ", vbOKCancel, "Suppression")
    If Repons = 1 Then
        Id = UsF_RSClist.Controls("Txt" & (Mid(lbPoub.Name, 4) - 60)).Caption
        Call Sql.Delete_DB("Ressources", "Id=" & Id)
               
        'Call Sql.Delete_DB("Comment", "Id_A=" & Me.TextBox1.Value)
        'Call Sql.Delete_DB("Liens", "Id_A=" & Me.TextBox1.Value)
        
        Filtre_Ctct (tri)
    End If
End Sub

Attribute VB_Name = "Evnmt"
Option Explicit

Public numlist As Byte
Public ListRsc() As Variant
Public IdR() As Variant
Public ListCli() As Variant
Public IdC() As Variant
Public NewEvt As Boolean


Sub New_Fiche_Evenmt(Optional lg As Integer = 0, Optional DtHr As String)
Dim S As String, Mn As String, z As Integer

    If Sql.Get_Max_Id("Ressources", "Id") = 0 Then
        MsgBox "Cr|fffd|ez d'abord au moins une ressource avant de cr|fffd|er un |fffd|v|fffd|nement", vbExclamation, "PAS DE RESSOURCE"
        Exit Sub
    End If
    
    If Not lg = 0 And Usf_Accueil.Controls("Txt" & lg + 24).Caption = "" Then Exit Sub
    
    NewEvt = True
    With Usf_Evnmt
        .TextBox1.Value = Sql.Get_Max_Id("Evnmnts", "Id") + 1
        ReDim ListRsc(0)
        ReDim IdR(0)
        ReDim ListCli(0)
        ReDim IdC(0)
        .ScrollBar1.Max = 0
        .ScrollBar2.Max = 0
        
        If Not lg = 0 Then
            ReDim IdR(1)
            ReDim ListRsc(1)
            IdR(0) = Usf_Accueil.Controls("Txt" & lg + 36).Caption
            ListRsc(0) = Usf_Accueil.Controls("Txt" & lg + 24).Caption
            remplir_ListRsc
            
            Select Case Page
                Case 1
                    .TextBox2.Value = Right(Usf_Accueil.Label24.Caption, 10)
                    .TextBox3.Value = .TextBox2.Value
                    .ComboBox2.Value = Left(DtHr, 5)
                    S = Right(DtHr, 5)
                    Select Case CInt(Right(DtHr, 2))
                        Case 0 To 14: Mn = "00"
                        Case 15 To 29: Mn = "15"
                        Case 30 To 44: Mn = "30"
                        Case Else: Mn = "45"
                    End Select
                    .ComboBox3.Value = Mid(S, 1, 3) & Mn
                Case 2, 3, 16
                    .TextBox2.Value = Format(CDate(Mid(DtHr, 4, 8)), "dd/mm/yyyy")
                    .TextBox3.Value = Format(CDate(Right(DtHr, 8)), "dd/mm/yyyy")
            End Select
        End If

        .Show
    End With
End Sub


Sub Ouvre_Fiche_Evenmt(Id As Long)
Dim T As Variant, i As Byte

    NewEvt = False
    With Usf_Evnmt
        ReDim ListRsc(0)
        ReDim IdR(0)
        ReDim ListCli(0)
        ReDim IdC(0)
        .ScrollBar1.Max = 0
        .ScrollBar2.Max = 0
        
        T = Get_Fiche_Evn(Id)
        If UBound(T, 1) > 0 Then
            For i = 1 To 12
                .Controls("Textbox" & i) = T(2, i)
            Next i
            If Not T(2, 11) = "" Then
                .Label11.Caption = T(2, 11)
                .Image1.Visible = True
            End If
            If Not T(2, 12) = "" Then
                .Label17.Caption = T(2, 12)
                If Exist_Fichier(CStr(T(2, 12))) Then
                    .Image3.Visible = True
                    .Image3.Picture = LoadPicture(T(2, 12))
                    .ImgPoub2.Visible = True
                End If
            End If
            If T(2, 3) = "01/01/2100" Then .TextBox3.Value = ""
            If Left(T(2, 6), 1) = "A" Then .OptionButton1.Value = 1 Else .OptionButton2.Value = 1
            If Right(T(2, 6), 1) = "P" Then
                .CheckBox1.Value = True
                .Label4.Visible = Not .CheckBox1.Value
                .Label14.Visible = Not .CheckBox1.Value
                .TextBox3.Visible = Not .CheckBox1.Value
                .ComboBox3.Visible = Not .CheckBox1.Value
            End If
            
            .ComboBox1.Value = T(2, 7)
            If Not T(2, 4) = "00:00:00" Then .ComboBox2.Value = T(2, 4)
            If Not T(2, 5) = "00:00:00" Then .ComboBox3.Value = T(2, 5)
            For i = 2 To UBound(T, 1)
                'Debug.Print T(i, 12)
                If T(i, 13) = "RH" Or T(i, 13) = "RM" Then
                    ReDim Preserve IdR(UBound(IdR) + 1)
                    ReDim Preserve ListRsc(UBound(ListRsc) + 1)
                    IdR(UBound(IdR) - 1) = T(i, 14)
                    ListRsc(UBound(ListRsc) - 1) = T(i, 15)
                Else
                    ReDim Preserve IdC(UBound(IdC) + 1)
                    ReDim Preserve ListCli(UBound(ListCli) + 1)
                    IdC(UBound(IdC) - 1) = T(i, 14)
                    ListCli(UBound(ListCli) - 1) = T(i, 15)
                End If
            Next i
            remplir_ListRsc
            remplir_ListCli
        End If
        
        .Show
    End With
End Sub


Sub remplir_ListRsc(Optional x As Byte)
Dim i As Byte, idx As Integer

    With Usf_Evnmt
        For i = 1 To 4
            idx = i + .ScrollBar1.Value
            If UBound(ListRsc) >= idx Then
                .Controls("R" & i).Caption = idx
                .Controls("Rsc" & i).Caption = ListRsc(idx - 1)
                .Controls("Rsc_S" & i).Picture = .ImgPoub.Picture
            Else
                .Controls("R" & i).Caption = ""
                .Controls("Rsc" & i).Caption = ""
                .Controls("Rsc_S" & i).Picture = .ImgVide.Picture
            End If
        Next i
    End With
End Sub


Sub remplir_ListCli(Optional x As Byte)
Dim i As Byte, idx As Integer

    With Usf_Evnmt
        For i = 1 To 4
            idx = i + .ScrollBar2.Value
            If UBound(ListCli) >= idx Then
                .Controls("C" & i).Caption = idx
                .Controls("Cli" & i).Caption = ListCli(idx - 1)
                .Controls("Cli_S" & i).Picture = .ImgPoub.Picture
            Else
                .Controls("C" & i).Caption = ""
                .Controls("Cli" & i).Caption = ""
                .Controls("Cli_S" & i).Picture = .ImgVide.Picture
            End If
        Next i
    End With
End Sub
Attribute VB_Name = "Fct"
Option Explicit


' ***** Fonctions *********************************************************************************
Function Saisie_Phone(S As String)
    If Left(S, 1) = "+" Then
        Select Case Len(S)
            Case 3, 5, 8, 11, 14: S = S & " "
        End Select
    Else
        Select Case Len(S)
            Case 2, 5, 8, 11: S = S & " "
        End Select
    End If
    Saisie_Phone = S
End Function


Function EnteteTablo(S As String, T2 As Variant) As Variant
Dim lig As Integer
    'If Not T2 = Empty Then
        lig = UBound(T2)
        With Sheets("Config")
            .Range("IV1") = S
            .Range("IV2").Resize(lig) = T2
            EnteteTablo = .Range("IV1:IV" & lig + 1)
            .Range("IV1:IV" & lig + 2).Clear
        End With
    'End If
End Function


Function FusionTablo(T1 As Variant, T2 As Variant) As Variant
Dim lig1 As Integer, lig2 As Integer

    'If Not T1 = Empty And Not T2 = Empty Then
        With Sheets("Config")
            lig1 = UBound(T1)
            .Range("IW1").Resize(lig1) = T1
            lig2 = UBound(T2)
            .Range("IW" & lig1 + 1).Resize(lig2) = T2
            FusionTablo = .Range("IW1:IW" & lig1 + lig2)
            .Range("IW1:IW" & lig1 + lig2).Clear
        End With
    'End If
End Function


Sub Ote_elem(Tablo, num As Byte)
Dim i As Integer
    For i = num To UBound(Tablo) - 1
        Tablo(i) = Tablo(i + 1)
    Next i
    ReDim Preserve Tablo(i - 1)
End Sub


' nb de dimension(s) du tableau Tablo
Function NbDim(Tablo As Variant) As Byte
Dim d As Byte, Er As Byte
    On Error GoTo Fin
    For d = 1 To 10
        Er = LBound(Tablo, d)
    Next
Fin:
    NbDim = d - 1
End Function


Function TriTablo(Tablo As Variant) As Variant
Dim Prems As Integer, Dern As Integer
Dim i As Integer, j As Integer, Temp  As Variant

    Prems = LBound(Tablo)
    Dern = UBound(Tablo)
    For i = Prems To Dern - 1
        For j = i + 1 To Dern
            If Tablo(i) > Tablo(j) Then
                Temp = Tablo(j)
                Tablo(j) = Tablo(i)
                Tablo(i) = Temp
            End If
        Next j
    Next i
    TriTablo = Tablo
End Function


Function Fichier_IsOpen(ByRef Ndf As String) As Boolean
    On Error Resume Next
    Open Ndf For Input Lock Read As #1
    Close #1
    Fichier_IsOpen = (Err.Number <> 0)
End Function


Function LundiDu(dt As Date) As Date
    LundiDu = dt - Weekday(dt, vbMonday) + 1
End Function


Function cpt_J(d1 As Date, d2 As Date, brn1 As Date, brn2 As Date) As Integer()
Dim T() As Integer, nb As Integer, i As Integer, dt As Date
   init_Feries (Year(d1))
    ReDim T(8)
    If d1 < brn1 Then d1 = brn1
    If d2 > brn2 Then d2 = brn2
    nb = d2 - d1
    For i = 0 To nb
        dt = DateAdd("d", i, d1)
        If Est_Ferie(dt) Then T(0) = T(0) + 1 Else T(Weekday(dt, vbMonday)) = T(Weekday(dt, vbMonday)) + 1
    Next i
    cpt_J = T
End Function


' ****** Echappement ******************************************************************************
Function Esc(S As String) As String
    Esc = Replace(S, "'", "''")
End Function '


Function Esc_Dt(S As String) As String
Dim d() As String
    If S = "" Then
        Esc_Dt = "Null"
    Else
        d = Split(S, "/")
        Esc_Dt = "#" & d(1) & "/" & d(0) & "/" & d(2) & "#"
    End If
End Function


Function Esc_Hr(S As String) As String
    If S = "" Then
        Esc_Hr = "0"
    Else
        If Len(S) < 3 Then S = S & ":00"
        If Len(S) = 3 And Right(S, 1) = ":" Then S = S & "00"
        If Len(S) = 4 Then S = S & "0"
        Esc_Hr = "#" & CDate(S) & "#"
    End If
End Function
' *************************************************************************************************'


' ***** http://www.excel-pratique.com/fr/astuces_vba/nb_jours_dans_mois.php ***********************
Function Nb_Jours_Mois(dt As Date) As Byte
    Nb_Jours_Mois = Day(DateSerial(Year(dt), Month(dt) + 1, 1) - 1)
End Function
' *************************************************************************************************


' ***** https://vbaetexcel.wordpress.com/2012/01/04/fonction-vba-calcul-du-numero-de-semaine/ *****
Function numero_de_semaine(dt As Date) As Byte ' Calcul du n|fffd| de semaine selon la norme ISO
Dim date_jeudi As Date, date_4_janvier As Date, date_lundi_semaine_1 As Date
Dim Nb_Jours, numero As Integer
 
    date_jeudi = DateAdd("d", 4 - Weekday(dt, vbMonday), dt)
    date_4_janvier = DateSerial(Year(date_jeudi), 1, 4)
    date_lundi_semaine_1 = DateAdd("d", 1 - Weekday(date_4_janvier, vbMonday), date_4_janvier)
    Nb_Jours = Abs(DateDiff("d", date_lundi_semaine_1, date_jeudi, vbMonday))
    numero_de_semaine = Int(Nb_Jours / 7) + 1
End Function
' *************************************************************************************************














Function Saisie_heure(S As String) As String
    Select Case Len(S)
        Case 1: If S = ":" Then S = ""
        Case 2: If Mid(S, 2, 1) = ":" Then S = "0" & S Else S = S & ":"
        Case 4: If Mid(S, 4, 1) = ":" Then S = Left(S, 3)
        Case 5: If Mid(S, 5, 1) = ":" Then S = Left(S, 4)
    End Select
    Saisie_heure = S
End Function
  

' Isole le nom du fichier sans son "chemin" pour les liens vers doc ou images
Public Function Ndf(S As String)
Dim i As Long, Pos As Long
    For i = 1 To Len(S)
        If Mid(S, i, 1) = "\" Then Pos = i
    Next i
    Ndf = Mid(S, Pos + 1)
End Function '

Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Imprime"
Option Explicit


' ***********************************************************************
' *****                                                             *****
' *****        CODE PierreP56 : http://tatiak.canalblog.com/        *****
' *****                                                             *****
' ***********************************************************************


Private WRsc As Workbook



Sub Imprimer_Semaine(Optional x As Byte)
Dim XlApp As Object, Wkb As Workbook
Dim Dtdeb As Date, Dtfin As Date, Dtd As Date, Dtf As Date
Dim Ndf As String, Rep As String
Dim i As Long, j As Integer, lg As Integer
Dim L As Single, T As Single, W As Single, H As Single, L0 As Single
Dim Sh As Shape

    Set WRsc = ActiveWorkbook
    Dtdeb = LundiDu(CDate(Usf_Accueil.ddj.Caption))
    Dtfin = DateAdd("d", 6, Dtdeb)
    Ndf = ActiveWorkbook.Path & "\Hebdo.xlsx"
    If Not Exist_Fichier(Ndf) Then
        MsgBox "Fichier Hebdo.xlsx manquant"
        Exit Sub
    End If
    Rep = ActiveWorkbook.Path & "\Hebdo\"
    If Not Exist_Rep(Rep) Then MkDir Rep

    Set XlApp = CreateObject("Excel.Application")
    Set Wkb = XlApp.Workbooks.Open(Ndf)
    On Error GoTo errhdlr
    With Wkb.Sheets(1)
        L0 = .Cells(3, 3).Width
        
        For j = 1 To 7
            .Cells(2, j + 2).Value = Format(DateAdd("d", j - 1, Dtdeb), "dd mmm YYYY")
        Next j
        
'"SELECT R.Type, R.Nom, R.Prenom, R.TriFct, R.Id, R.Tel, R.Port, R.Mail,R.Fonction "
        For i = 2 To UBound(T_ident)
            .Cells(i + 1, 1) = T_ident(i, 4)
            .Cells(i + 1, 2) = T_ident(i, 2)
        Next i
        
'"SELECT E.Id, E.Deb, E.Fin, E.Hdeb, E.Hfin, E.Titre, R.Id, E.Genre, E.Categ, E.Img"
        For i = 2 To UBound(TG, 1)
            lg = Idx_T2D(T_ident, TG(i, 7), 5) + 1
            Dtd = IIf(CDate(TG(i, 2)) < Dtdeb, Dtdeb, CDate(TG(i, 2)))
            Dtf = IIf(CDate(TG(i, 3)) > Dtfin, Dtfin, CDate(TG(i, 3)))

            L = .Cells(lg, CInt(Dtd - CDate(Dtdeb)) + 3).Left + 2
            T = .Cells(lg, 1).Top + 2
            W = ((CInt(Dtf - Dtd) + 1) * L0) - 4
            H = .Cells(lg, 1).Height - 4
            
            If CDate(TG(i, 4)) > 0 Then
                L = L + (L0 * CDate(TG(i, 4)))
                W = W - (L0 * CDate(TG(i, 4)))
            End If
            If CDate(TG(i, 5)) > 0 Then
                W = W - (L0 * (1 - CDate(TG(i, 5))))
            End If
            
            Set Sh = .Shapes.AddShape(msoShapeRoundedRectangle, L, T, W, H)
            With Sh
                .Fill.ForeColor.RGB = couleur(i)
                .Line.ForeColor.RGB = RGB(160, 160, 160)
                .Fill.Transparency = 0.3
                .Name = "_" & i
                .TextFrame2.HorizontalAnchor = msoAnchorCenter
                With .TextFrame2.TextRange.Characters
                    .Text = TG(i, 9) & " " & TG(i, 6)
                    .Font.Size = 10
                    .Font.Fill.ForeColor.RGB = &H353535
                End With
            End With
        Next i
    End With
    
    Application.DisplayAlerts = False
    Ndf = Rep & "Hebdo_" & Format(Dtdeb, "ddMMyyyy")
    If Exist_Fichier(Ndf & ".xlsx") Then Kill Ndf & ".xlsx"
    Wkb.SaveAs Ndf & ".xlsx"
    
    If Exist_Fichier(Ndf & ".pdf") Then Kill Ndf & ".pdf"
    Wkb.ActiveSheet.ExportAsFixedFormat Filename:=Ndf, Type:=xlTypePDF, OpenAfterPublish:=True
    
    Wkb.Close
    Set Wkb = Nothing
    Set XlApp = Nothing
    Set WRsc = Nothing
    Application.DisplayAlerts = True
    MsgBox "Planning g|fffd|n|fffd|r|fffd|!"
    Exit Sub
    
errhdlr:
    Wkb.Close
    Set Wkb = Nothing
    Set XlApp = Nothing
    Set WRsc = Nothing
    MsgBox "Bad bug"
End Sub


Function couleur(idx As Long) As Long
Dim lg As Long

    With WRsc.Sheets("Config")
        If Not TG(idx, 9) = "" Then
            If Left(TG(idx, 8), 1) = "A" Then
                lg = Application.Match(TG(idx, 9), .Columns("I"), 0)
                couleur = .Cells(lg, "H").Interior.Color
            Else
                lg = Application.Match(TG(idx, 9), .Columns("K"), 0)
                couleur = .Cells(lg, "J").Interior.Color
            End If
        End If
    End With
End Function


Function Idx_T2D(Ttk As Variant, V As Variant, col As Long) As Long
Dim i As Long, lg As Long

    Idx_T2D = LBound(Ttk, 1) - 1
    lg = UBound(Ttk, 1)
    For i = LBound(Ttk, 1) To lg
        If CStr(V) = CStr(Ttk(i, col)) Then
            Idx_T2D = i
            Exit For
        End If
    Next i
End Function


Attribute VB_Name = "Rsc"
Option Explicit

Public NewRsc As Boolean
Public RscInterne As Boolean
Public initFindRsc As Boolean
Public UsfListOpen As Boolean
Public T_lstRsc As Variant
Public tri As String
Public PageRsc As Byte

Private Const nbLig = 10


Sub New_Fiche_Rsc(interne As Boolean, Optional Page As Byte)

    RscInterne = interne
    NewRsc = True
    With Usf_Rsc
        .TextBox1.Value = Sql.Get_Max_Id("Ressources", "Id") + 1
        If Not Page = 0 Then .ComboBox1.ListIndex = Page - 2
        .Show
    End With
End Sub


Sub Ouvre_Fiche_Rsc(Id As Long, interne As Boolean)
Dim T As Variant, Tidx As Variant, i As Byte, S As String

    RscInterne = interne
    NewRsc = False
    T = Get_Fiche_Rsc(Id)
    With Usf_Rsc
        For i = 1 To 18
            .Controls("Textbox" & i).Value = T(2, i)
        Next i
        On Error Resume Next
        If CLng(CDate(T(2, 2))) = 0 Then .TextBox2.Value = ""
        If CLng(CDate(T(2, 3))) = 0 Then .TextBox3.Value = ""
        On Error GoTo 0
        .ComboBox1.Value = T(2, 4)  '.TextBox4.Value
        .ComboBox2.Value = T(2, 13) '.TextBox13.Value
        .ComboBox3.Value = T(2, 14) '.TextBox14.Value
        .ComboBox4.Value = T(2, 15) '.TextBox15.Value
        
        Tidx = Array(0, 0, 1, 0, 2, 0, 3, 0, 0, 0, 0, 0, 4)
        .ComboBox5.ListIndex = Tidx(Val(T(2, 19)))
        
        For i = 2 To UBound(T, 1)
            S = S & Trim(T(i, 20)) & ", "
        Next i
        .TextBox19.Value = Left(S, Len(S) - 2)
        
        .Show
    End With
End Sub


Sub List_Rsc(interne As Boolean)
    RscInterne = interne
    UsfListOpen = True
    PageRsc = IIf(RscInterne, 1, 2)
    UsF_RSClist.Show
End Sub


Sub Ouvre_Bilan(Optional x As Byte)
    Usf_Bilan.Show
End Sub


' ***** FILTRE ************************************************************************************
Sub Filtre_Ctct(tri As String)
Dim TY As String

    With UsF_RSClist
        Select Case .TextBox0.Value
            Case 1: TY = "(Type='RH' OR Type='RM')"
            Case 2: TY = "Type='Client'"
            Case 3: TY = "Type='Fournisseur'"
            Case 4: TY = "Type='Prospect'"
            Case 5: TY = "Type='Autre'"
        End Select
        T_lstRsc = Get_ListContacts(TY, .TextBox1.Value, .ComboBox2.Value, tri)
        .ScrollBar1.Max = IIf(UBound(T_lstRsc, 1) < nbLig + 1, 0, UBound(T_lstRsc, 1) - nbLig - 1)

        Remplissage_Ctct
    End With
End Sub


Sub Remplissage_Ctct(Optional x As Byte)
Dim i As Byte, idx As Long, lig As Integer, bc As Long, bkclr As Long, j As Byte

    Application.EnableEvents = False
    With UsF_RSClist
        For i = 1 To nbLig
            idx = i + 1 + .ScrollBar1.Value
            bkclr = IIf(idx Mod 2 = 0, &HEFEFEF, &HFFFFFF) 'gris/blanc
            For j = 0 To 6
                .Controls("Txt" & i + j * nbLig).BackColor = bkclr
            Next j
        
            If idx <= UBound(T_lstRsc, 1) Then
                .Controls("Txt" & i).Picture = .ImgFiche.Picture
                .Controls("Txt" & i).Caption = T_lstRsc(idx, 1)
                .Controls("Txt" & i).ControlTipText = "Cliquez pour ouvrir la fiche " & T_lstRsc(idx, 2)
                If PageRsc = 1 Then
                    lig = Application.Match(T_lstRsc(idx, 8), Sheets("Config").Columns("G"), 0)
                    bc = Sheets("Config").Cells(lig, "C").Interior.Color
                    .Controls("C" & i).BackColor = bc
                Else
                    .Controls("C" & i).BackColor = bkclr
                End If
                .Controls("Txt" & i + 10).Caption = T_lstRsc(idx, 2) & " " & T_lstRsc(idx, 3)
                .Controls("Txt" & i + 20).Caption = T_lstRsc(idx, 4)
                .Controls("Txt" & i + 30).Caption = T_lstRsc(idx, 5)
                .Controls("Txt" & i + 40).Caption = T_lstRsc(idx, 6)
                .Controls("Txt" & i + 50).Caption = T_lstRsc(idx, 7)
                .Controls("Txt" & i + 60).Picture = .ImgPoub.Picture
                .Controls("Txt" & i + 60).ControlTipText = "Supprimer la fiche"
            Else
                .Controls("Txt" & i).Picture = .ImgVide.Picture
                .Controls("Txt" & i).Caption = ""
                .Controls("Txt" & i).ControlTipText = ""
                .Controls("C" & i).BackColor = bkclr
                .Controls("Txt" & i + 10).Caption = ""
                .Controls("Txt" & i + 20).Caption = ""
                .Controls("Txt" & i + 30).Caption = ""
                .Controls("Txt" & i + 40).Caption = ""
                .Controls("Txt" & i + 50).Caption = ""
                .Controls("Txt" & i + 60).Picture = .ImgVide.Picture
                .Controls("Txt" & i + 60).ControlTipText = ""
            End If
        Next i
    End With
    Application.EnableEvents = True
End Sub

Attribute VB_Name = "Sql"
Option Explicit


Private Rcd() As Variant
Private req As String
Private lig As Long


 
' ***** REQUETES **********************************************************************************
Function Get_Historic(Id As Integer)

    req = "SELECT E.Genre, E.Categ, E.Titre, E.Deb, E.Hdeb, E.Fin, E.Hfin " & _
            " FROM [Evnmnts] AS E" & _
            " INNER JOIN [Assoc] AS A ON A.Id_Ev=E.Id" & _
            " WHERE A.Id_Re=" & Id & _
            " ORDER BY E.Deb DESC"
            
    If Sql.Query(req, 0) > 0 Then Get_Historic = Application.Transpose(Rcd) _
    Else Get_Historic = Array("")

End Function


Function Get_EvnParRsc(Id As Long, dt1 As Date, dt2 As Date, Gen As String, Cat As String) As Variant()
                        
    req = "SELECT E.Genre, E.Categ, E.Deb, E.Fin, E.Hfin-E.Hdeb, R.Nom " & _
            " FROM ([Evnmnts] AS E" & _
            " INNER JOIN [Assoc] AS A ON A.Id_Ev=E.Id)" & _
            " INNER JOIN [Ressources] AS R ON R.Id=A.Id_Re" & _
            " WHERE R.Id=" & Id & _
            " AND ((clng(E.Deb) BETWEEN " & CLng(dt1) & " AND " & CLng(dt2) & " )" & _
            " OR (clng(E.Fin)  BETWEEN " & CLng(dt1) & " AND " & CLng(dt2) & ")" & _
            " OR (clng(E.Deb)<" & CLng(dt1) & " AND clng(E.Fin)>" & CLng(dt2) & "))"

    If Not Gen = "" Then req = req & " AND E.Genre='" & Gen & "'"

    If Not Cat = "" Then req = req & " AND E.Categ='" & Cat & "'"
    
    req = req & " ORDER BY E.Genre ASC, E.Categ ASC"

    If Sql.Query(req) > 0 Then Get_EvnParRsc = Application.Transpose(Rcd) _
    Else Get_EvnParRsc = Array("")
    
End Function


Function Get_Enfant_CN(Id As Long) As Variant()

    req = "SELECT R.Nom, R.Prenom" & _
            " FROM ([Assoc] AS A" & _
            " LEFT JOIN [Ressources] AS R ON A.Id_Re=R.Id)" & _
            " LEFT JOIN [Evnmnts] AS E ON E.Id=A.Id_Ev" & _
            " WHERE R.Type='Client' AND A.Id_Ev=" & Id
            
    If Sql.Query(req) > 0 Then Get_Enfant_CN = Application.Transpose(Rcd) _
    Else Get_Enfant_CN = Array("")
    
End Function


Function Get_List_Evn(Gen As Byte, Cat As String, dt As String, Fin As String, Rsc As String, tri As String) As Variant()
Dim R1 As String
    
    R1 = "SELECT Id_Ev , min(Id_re) as Idr" & _
            " FROM [Assoc] GROUP BY Id_ev"
            
    req = "SELECT A.Id_ev,E.Genre,E.Categ, R.Nom, E.Deb, E.Fin, E.Hdeb, E.Hfin, E.Titre, E.Rq, R.Prenom " & _
            " FROM ((" & R1 & ") AS A" & _
            " LEFT JOIN [Ressources] AS R ON R.Id=A.Idr)" & _
            " LEFT JOIN [Evnmnts] AS E ON E.Id=A.Id_Ev" & _
            " WHERE (Clng(E.deb)>=" & CLng(CDate(dt)) & _
            " OR Clng(E.fin)>=" & CLng(CDate(dt)) & ")"
                     
    If Not Fin = "" Then req = req & " AND Clng(E.deb)<=" & CLng(CDate(Fin))
    
    If Gen > 0 Then req = req & " AND E.Genre=" & IIf(Gen = 1, "'A'", "'I'")
    
    If Not Cat = "Tous les |fffd|v|fffd|nements" Then req = req & " AND E.Categ='" & Cat & "'"
    
    If Not Rsc = "Toutes les ressources" Then req = req & " AND R.Nom='" & Rsc & "'"

    If tri = "" Then
        req = req & " ORDER BY E.Genre ASC, E.Categ ASC"
    Else
        req = req & " ORDER BY " & tri
    End If

    If Sql.Query(req) > 0 Then Get_List_Evn = Application.Transpose(Rcd) _
    Else Get_List_Evn = Array("")

End Function


Function Get_Fiche_Evn(Id As Long) As Variant()
                        
    req = "SELECT E.*, R.Type, R.Id, R.Nom+' '+R.Prenom" & _
            " FROM ([Evnmnts] AS E" & _
            " INNER JOIN [Assoc] AS A ON A.Id_Ev=E.Id)" & _
            " INNER JOIN [Ressources] AS R ON R.Id=A.Id_Re" & _
            " WHERE E.Id=" & Id

    If Sql.Query(req) > 0 Then Get_Fiche_Evn = Application.Transpose(Rcd) _
    Else Get_Fiche_Evn = Array("")
    
End Function


Function Get_Graphique(deb As Date, Fin As Date, Typ As String, Act As String) As Variant()
Dim Id_P As Long

    req = "SELECT E.Id, E.Deb, E.Fin, E.Hdeb, E.Hfin, E.Titre, R.Id, E.Genre, E.Categ, E.Img" & _
            " FROM ([Evnmnts] AS E" & _
            " INNER JOIN [Assoc] AS A ON A.Id_Ev=E.Id)" & _
            " INNER JOIN [Ressources] AS R ON R.Id=A.Id_Re" & _
            " WHERE (R.Type='RH' OR R.Type='RM')" & _
            " AND ((clng(E.Deb) BETWEEN " & CLng(deb) & " AND " & CLng(Fin) & " )" & _
            " OR (clng(E.Fin)  BETWEEN " & CLng(deb) & " AND " & CLng(Fin) & ")" & _
            " OR (clng(E.Deb)<" & CLng(deb) & " AND clng(E.Fin)>" & CLng(Fin) & "))"
            
    If Not Typ = "" Then req = req & " AND E.Genre LIKE'" & Typ & "%'"
    If Not Act = "" Then req = req & " AND E.Categ='" & Act & "'"

    If Sql.Query(req) > 0 Then Get_Graphique = Application.Transpose(Rcd) _
    Else Get_Graphique = Array("")

End Function


Function Get_Fiche_Rsc(num As Long) As Variant()
                        
    req = "SELECT R.*,C.Comp " & _
            " FROM [Ressources] AS R " & _
            " LEFT JOIN [Compet] AS C ON C.Id_R=R.Id " & _
            " WHERE R.Id=" & num & _
            " ORDER BY C.Comp ASC"

    If Sql.Query(req) > 0 Then Get_Fiche_Rsc = Application.Transpose(Rcd) _
    Else Get_Fiche_Rsc = Array("")
    
End Function


Function Get_ListContacts(TYCD As String, NP As String, Eq As String, tri As String) As Variant()
'H = "Id,Deb,Fin,Type,Nom,Prenom,Adr,CP,Ville,Tel,Port,Mail,Site,Equipe,Fonction,TriFct,Rq,Fax"

    req = "SELECT Id, Nom, Prenom, Tel, Port, Fax, Mail, TriFct " & _
            " FROM [Ressources] " & _
            " WHERE " & TYCD
 
    If Not NP = "Rechercher" And Not NP = "" Then
        req = req & " AND (Nom LIKE '%" & NP & "%' OR Prenom LIKE '%" & NP & "%')"
    End If
    
    If Not Eq = "Toutes les |fffd|quipes" Then req = req & " AND Equipe='" & Eq & "'"
     
    If PageRsc = 1 Then
        req = req & " ORDER BY Type ASC, Equipe ASC, Trifct ASC"    ' , Nom " & tri
    Else
        req = req & " ORDER BY Nom " & tri
    End If

    If Sql.Query(req) > 0 Then Get_ListContacts = Application.Transpose(Rcd) _
    Else Get_ListContacts = Array("")
End Function


Function Get_Rsc_Accueil(ST As String, Eq As String, Rc As String, Co As String, _
                         NP As String, Ev As String) As Variant()

    If Co = "Toutes les comp|fffd|tences" Then Co = ""
    
    req = "SELECT R.Type, R.Nom, R.Prenom, R.TriFct, R.Id, R.Tel, R.Port, R.Mail,R.Fonction " & _
            IIf(Co = "", "", ",C.Comp") & _
            " FROM [Ressources] AS R " '
            
    If Not Co = "" Then req = req & " RIGHT JOIN [Compet] AS C ON C.Id_R= R.Id"
    
    req = req & " WHERE (R.Type='RH' OR R.Type='RM')"
    
    If Not ST = "Tous les sites" Then req = req & " AND R.Site='" & ST & "'"
    If Not Eq = "Toutes les |fffd|quipes" Then req = req & " AND R.Equipe='" & Eq & "'"
    If Not Rc = "Toutes les ressources" Then req = req & " AND R.Fonction='" & Rc & "'"
    If Not Co = "" Then req = req & " AND C.Comp='" & Co & "'"
    
    If Not NP = "Rechercher" Then
        req = req & " AND (R.Nom LIKE '%" & NP & "%' OR R.Prenom LIKE '%" & NP & "%')"
    End If
    
    req = req & " ORDER BY R.Type ASC, R.Equipe ASC, R.Trifct ASC, R.Nom ASC"

    If Sql.Query(req) > 0 Then Get_Rsc_Accueil = Application.Transpose(Rcd) _
    Else Get_Rsc_Accueil = Array("")
End Function


' ***** COMBO *************************************************************************************
Function Get_List_Res() As Variant()
'+' '+Prenom
    req = "SELECT Nom FROM [Ressources] " & _
            "WHERE (Type='RH' OR Type='RM')" & _
            " ORDER BY Type ASC, Nom ASC"
            
    If Sql.Query(req, 0) > 0 Then Get_List_Res = Application.Transpose(Rcd) _
    Else Get_List_Res = Array("")
    
End Function


Function Get_List_ResCli(r As Byte) As Variant()

    req = "SELECT Id, Nom+' '+Prenom FROM [Ressources] WHERE "
    
    If r = 0 Then req = req & " NOT"

    req = req & " (Type='RH' OR Type='RM')" & _
                " ORDER BY Type ASC, Nom ASC"
            
    If Sql.Query(req, 0) > 0 Then Get_List_ResCli = Application.Transpose(Rcd) _
    Else Get_List_ResCli = Array("")
    
End Function


Function Get_Combo(Chps As String, Tbl As String, Optional Cnd As String) As Variant()

    req = "SELECT DISTINCT " & Chps & " FROM [" & Tbl & "]" & _
            " WHERE NOT ISNULL(" & Chps & ")"
    
    If Not Cnd = "" Then req = req & " AND " & Cnd
    
    req = req & " ORDER BY " & Chps

    If Sql.Query(req, 0) > 0 Then Get_Combo = Application.Transpose(Rcd) _
    Else Get_Combo = Array("")
    
End Function


Function Get_ComboOrderbyId(Chps As String, Tbl As String, Optional Cnd As String) As Variant()

    req = "SELECT DISTINCT " & Chps & ", Id FROM [" & Tbl & "]"
    
    If Not Cnd = "" Then req = req & " WHERE " & Cnd
    
    req = req & " ORDER BY Id ASC"
    
    lig = Sql.Query(req, 0)
    Select Case lig
        Case 0: Get_ComboOrderbyId = Array("")
        Case 1: Get_ComboOrderbyId = Array(Rcd(0, 0))
        Case Else: Get_ComboOrderbyId = Application.Transpose(Rcd)
    End Select
    
End Function


Function Get_ComboXL(Chps As String, Tbl As String, Optional Cnd As String) As Variant()

    req = "SELECT DISTINCT " & Chps & " FROM [" & Tbl & "$]" & _
            " WHERE NOT ISNULL(" & Chps & ")"
    
    If Not Cnd = "" Then req = req & " AND " & Cnd
    
    req = req & " ORDER BY " & Chps

    If Sql.Query(req, 0, True) > 0 Then Get_ComboXL = Application.Transpose(Rcd) _
    Else Get_ComboXL = Array("")
    
End Function


Function Get_ComboXL_simple(Chps As String, Tbl As String, Optional Cnd As String) As Variant()

    req = "SELECT " & Chps & " FROM [" & Tbl & "$]" & _
            " WHERE NOT ISNULL(" & Chps & ")"
    
    If Not Cnd = "" Then req = req & " AND " & Cnd

    If Sql.Query(req, 0, True) > 0 Then Get_ComboXL_simple = Application.Transpose(Rcd) _
    Else Get_ComboXL_simple = Array("")
    
End Function


' *************************************************************************************************
Sub Insert_DB(Tbl As String, Head As String, Data As String)

    req = "INSERT INTO [" & Tbl & "]"
    If Not Head = "" Then req = req & " (" & Head & ")"
    req = req & " VALUES (" & Data & ")"
    lig = Sql.Query(req)
    
End Sub


Sub Update_DB(Tbl As String, UPD As String, Cond As String)

    req = "UPDATE [" & Tbl & "] SET " & UPD & " WHERE " & Cond
    lig = Sql.Query(req)
    
End Sub


Sub Delete_DB(Tbl As String, Cond As String)

    req = "DELETE FROM [" & Tbl & "]  WHERE " & Cond
    lig = Sql.Query(req)

End Sub


' *************************************************************************************************
Function Get_Min_Id(Tbl As String, Head As String, Optional Cond As String) As Long

    req = "SELECT MIN(" & Head & ") FROM [" & Tbl & "]"
    If Not Cond = "" Then req = req & " WHERE " & Cond
    Get_Min_Id = Sql.Query(req)
    If Rcd(0, 1) = "" Then Get_Min_Id = 0 Else Get_Min_Id = CLng(Rcd(0, 1))
End Function


Function Get_Max_Id(Tbl As String, Head As String, Optional Cond As String) As Long

    req = "SELECT MAX(" & Head & ") FROM [" & Tbl & "]"
    If Not Cond = "" Then req = req & " WHERE " & Cond
    Get_Max_Id = Sql.Query(req)
    If Get_Max_Id = -1 Then
        Get_Max_Id = 0
    Else
        If Rcd(0, 1) = "" Then Get_Max_Id = 0 Else Get_Max_Id = CLng(Rcd(0, 1))
    End If
End Function


' ***** REQUETEUR *********************************************************************************
Function Query(req As String, Optional Head As Byte = 1, Optional Xl As Boolean = False) As Long
Dim Ndf As String, Cnx As Object, Rst As Object
Dim T As Variant, Col_SQL As Integer, i As Long, j As Long

    On Error GoTo errhdlr
    Set Cnx = CreateObject("ADODB.Connection")
    Cnx.Provider = "MSDASQL"
    
    If Not Xl Then
        Ndf = ActiveWorkbook.Path & "\" & BDD
        Cnx.Open "DRIVER={Microsoft Access Driver (*.mdb, *.accdb)}; DBQ=" & Ndf
    Else
        Ndf = ActiveWorkbook.Path & "\" & ActiveWorkbook.Name
        Cnx.Open "DRIVER={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)}; DBQ=" & Ndf
    End If
    
    If Left(req, 6) = "SELECT" Then
        Set Rst = CreateObject("ADODB.Recordset")
        Rst.Open req, Cnx, 3

        Col_SQL = Rst.Fields.Count - 1
        If Head = 1 Then
            ReDim Rcd(Col_SQL, 0)
            For i = 0 To Col_SQL
                Rcd(i, 0) = Rst.Fields(i).Name
            Next i
        End If
        
        Query = Rst.RecordCount
        If Not Query = 0 Then
            If Head = 1 Then ReDim Preserve Rcd(Col_SQL, Query) _
            Else ReDim Rcd(Col_SQL, Query - 1)
            ReDim T(Col_SQL, Query - 1)
            Rst.MoveFirst
            T = Rst.GetRows
            For i = 0 To UBound(T, 1)
                For j = 0 To UBound(T, 2)
                    Rcd(i, j + Head) = IIf(IsNull(T(i, j)), "", T(i, j))
                Next j
            Next i
        End If
    Else
        Cnx.Execute req
        Query = 0
    End If
    
    Cnx.Close
    Set Rst = Nothing
    Set Cnx = Nothing
    Exit Function
   
errhdlr:
    If Not Rst Is Nothing Then If Rst.State = 1 Then Rst.Close
    If Not Cnx Is Nothing Then If Cnx.State = 1 Then Cnx.Close
    Set Rst = Nothing
    Set Cnx = Nothing
    Query = -1
    MsgBox (Err.Description & vbCrLf & vbCrLf & "V|fffd|rifier la requ|fffd|te : " & vbCrLf & req)
End Function
' *************************************************************************************************
Attribute VB_Name = "Tables"
Option Explicit

Public Const BDD = "TtkRSC.accdb"

Public Const RSOC = "CREATE TABLE Ressources (" & _
                    "Id integer not null, " & _
                    "Deb Date null, " & _
                    "Fin Date null, " & _
                    "Type varchar(15) not null, " & _
                    "Nom varchar(30) null, " & _
                    "Prenom varchar(30) null, " & _
                    "Adr varchar(50) null, " & _
                    "CP varchar(5) null, " & _
                    "Ville varchar(30) null, " & _
                    "Tel varchar(17) null, " & _
                    "Port varchar(17) null, " & _
                    "Mail varchar(50) null, " & _
                    "Site varchar(50) null, " & _
                    "Equipe varchar(50) null, " & _
                    "Fonction varchar(50) null, " & _
                    "TriFct varchar(3) null, " & _
                    "Rq memo null," & _
                    "Fax varchar(17) null, " & _
                    "Frq integer null)"
                    
 
Public Const CMPT = "CREATE TABLE Compet (" & _
                    "Id integer not null, " & _
                    "Id_R integer not null," & _
                    "Comp varchar(40) null)"
                    
 
Public Const EVNT = "CREATE TABLE Evnmnts (" & _
                    "Id integer not null, " & _
                    "Deb Date null, " & _
                    "Fin Date null, " & _
                    "Hdeb Date null, " & _
                    "Hfin Date null, " & _
                    "Genre varchar(2) null, " & _
                    "Categ varchar(40) null, " & _
                    "Titre varchar(40) null, " & _
                    "Lieu varchar(50) null, " & _
                    "Rq memo null, " & _
                    "PJ varchar(100) null, " & _
                    "Img Varchar(100))"
                                       
                    
Public Const ASSO = "CREATE TABLE Assoc (" & _
                    "Id integer not null, " & _
                    "Id_Ev integer not null, " & _
                    "Id_Re integer  not null)"
                    
                    
Public Const VERF = "CREATE TABLE Verif (" & _
                    "Id integer not null, " & _
                    "Id_Re integer not null, " & _
                    "DtJ Date null, " & _
                    "CR memo null, " & _
                    "RQ memo null)"



' *************************************************************************************************
Sub Creer_Base(Optional x As Byte)
Dim Ndf As String, lig As Long, Cat As Object
    
    Ndf = ActiveWorkbook.Path & "\" & BDD
    If Not Exist_Fichier(Ndf) Then
        Set Cat = CreateObject("ADOX.Catalog")
        Cat.Create "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & Ndf
        Set Cat = Nothing
        
        lig = Sql.Query(RSOC)
        lig = Sql.Query(CMPT)
        lig = Sql.Query(EVNT)
        lig = Sql.Query(ASSO)
    End If
End Sub


Sub Maintenance_Table(Optional x As Byte)
Dim lig As Long

    Verif_Champs "Img", "Varchar(100)", "Evnmnts"
    Verif_Champs "Frq", "integer", "Ressources"
    If Not Exist_Tbl("Verif") Then lig = Sql.Query(VERF)
End Sub


Sub Verif_Champs(Chp As String, Typ As String, Tbl As String)
Dim req As String, lig As Long

    req = "SELECT " & Chp & " FROM [" & Tbl & "]"
    lig = Sql.Query(req)
    If lig = -1 Then
        req = "ALTER TABLE [" & Tbl & "] ADD COLUMN " & Chp & " " & Typ
        lig = Sql.Query(req)
        MsgBox "Maintenance Table " & Tbl & " = Ok!"
    End If
End Sub


Function Exist_Tbl(Tbl_Nom As String) As Boolean
Dim Cnx As Object, Cat As Object, Tbl As Object
Dim Rep As String

    Rep = ActiveWorkbook.Path & "\"
    Exist_Tbl = False
    
    Set Cnx = CreateObject("ADODB.Connection")
    Cnx.Open "DRIVER={Microsoft Access Driver (*.mdb, *.accdb)}; DBQ=" & Rep & BDD
    
    Set Cat = CreateObject("ADOX.Catalog")
    Set Cat.ActiveConnection = Cnx
    For Each Tbl In Cat.Tables
        If Tbl.Name = Tbl_Nom Then Exist_Tbl = True
    Next

    Set Tbl = Nothing
    Set Cat = Nothing
    Set Cnx = Nothing
End Function


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


' ***********************************************************************
' *****                                                             *****
' *****        CODE PierreP56 : http://tatiak.canalblog.com/        *****
' *****                                                             *****
' ***********************************************************************


Private Sub Workbook_Open()
Dim FSO As Object, Msg As String
 
    Set FSO = CreateObject("Scripting.FileSystemObject")
    
    If Right(FSO.GetFolder(ActiveWorkbook.Path).Name, 3) = "zip" Then
        Msg = " Fichier d'une archive compress|fffd|, lancement impossible!" & vbCrLf & vbCrLf & _
              " L'application va se fermer." & vbCrLf & vbCrLf & _
              " Copier et coller les fichiers dans un nouveau dossier."
        MsgBox Msg, vbCritical, "FERMETURE"
        ActiveWorkbook.Close
    Else
        Application.Caption = "|fffd| 2016-2017-2018 - Tatiak"
        Creer_Base
        Lire_cfg
        Maintenance_Table
        ActiveWindow.DisplayWorkbookTabs = False 'True '
        Ouvre_Accueil
    End If
 
    Set FSO = Nothing
End Sub


Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Sauve_cfg
    Application.Caption = ""
End Sub
Attribute VB_Name = "Txt"
Option Explicit


' ***********************************************************************
' *****                                                             *****
' *****        CODE PierreP56 : http://tatiak.canalblog.com/        *****
' *****                                                             *****
' ***********************************************************************


Function T_Import(Ndf As String) As Variant
Dim S As String

    S = Lire_Txt(Ndf)
    T_Import = TXT2T(S, ";")
End Function


Function T_Export(Ttk As Variant, Ndf As String) As String
Dim S As String

    S = T2TXT(Ttk, ";")
    T_Export = IIf(Ecrire_Txt(Ndf, S), "1", "0")
End Function


' *************************************************************************************************
Function Lire_Txt(Ndf As String) As String
Dim i As Integer
    
    On Error GoTo errhdlr:
    i = FreeFile()
    Open Ndf For Binary Access Read As #i
    Lire_Txt = Space$(LOF(i))
    Get #i, , Lire_Txt
    Close #i
    Exit Function
    
errhdlr:
    Close #i
    Lire_Txt = ""
End Function


Function TXT2T(Txt As String, Delim As String) As Variant
Dim Ttk As Variant, T1 As Variant, T2 As Variant
Dim lg As Long, cl As Long, i As Long, j As Long

    T1 = Split(Txt, vbCrLf)
    lg = UBound(T1)
    T2 = Split(T1(0), Delim)
    cl = UBound(T2) + 1
    
    ReDim Ttk(1 To lg, 1 To cl)
    For i = 0 To lg - 1
        T2 = Split(T1(i), Delim)
        For j = 0 To cl - 1
            Ttk(i + 1, j + 1) = T2(j)
        Next j
    Next i
    TXT2T = Ttk
End Function


Function Ecrire_Txt(Ndf As String, Txt As String, Optional Ajout As Boolean = False) As Boolean
Dim f As Integer

    On Error GoTo errhdlr:
    Ecrire_Txt = True
    f = FreeFile()
    If Not Ajout Then
        Open Ndf For Output As #f
    Else
        Open Ndf For Append As #f
    End If
    Print #f, Txt
    Close #f
    Exit Function

errhdlr:
    Close #f
    Ecrire_Txt = False
End Function


Function T2TXT(Ttk As Variant, Delimiteur As String) As String
Dim lg As Long, cl As Long
Dim i As Long, j As Long

    lg = UBound(Ttk, 1)
    cl = UBound(Ttk, 2)
    T2TXT = ""
    For i = LBound(Ttk, 1) To lg
        'If Len(Ttk(i, LBound(Ttk, 2))) > 0 Then
            For j = LBound(Ttk, 2) To cl
                T2TXT = T2TXT & Ttk(i, j) & IIf(j < cl, Delimiteur, "")
            Next j
            T2TXT = T2TXT & vbCrLf
        'End If
    Next i
    T2TXT = Left(T2TXT, Len(T2TXT) - 2)
End Function


Function Exist_Rep(Ndf As String) As Boolean
    On Error Resume Next
    Exist_Rep = GetAttr(Ndf) And vbDirectory
End Function


Function Exist_Fichier(S As String) As Boolean
Dim tatiak As Object

    Set tatiak = CreateObject("Scripting.FileSystemObject")
    Exist_Fichier = tatiak.FileExists(S)
    Set tatiak = Nothing
End Function
Attribute VB_Name = "UsF_RSClist"
Attribute VB_Base = "0{87905B13-4512-4353-8854-55B533822C7E}{862FC42A-159C-473D-89FA-5C603D20A7AF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim RList As New Class_RscList


Private Sub UserForm_Initialize()

    initFindRsc = False
    RList.Init_List
    If RscInterne Then RList.LabelType (1) Else RList.LabelType (2)
    tri = "ASC"
    Label20.Visible = (PageRsc = 1)
    ComboBox2.Visible = (PageRsc = 1)
    ComboBox2.List = EnteteTablo("Toutes les |fffd|quipes", Sql.Get_ComboXL("Equipes", "Config"))
    ComboBox2.ListIndex = 0
End Sub


Private Sub ScrollBar1_Change()
    Remplissage_Ctct
End Sub


Private Sub Label11_Click() ' tri par nom
    tri = IIf(tri = "ASC", "DESC", "ASC")
    Filtre_Ctct (tri)
End Sub


Private Sub TextBox1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    TextBox1.Value = ""
    TextBox1.ForeColor = &H80000008 'noir
End Sub


Private Sub TextBox1_Change()   ' Case recherche sur nom et pr|fffd|nom
    If Not initFindRsc Then TextBox1.Value = UCase(TextBox1.Value)
    Filtre_Ctct (tri)
End Sub


Private Sub ComboBox2_Change()
    If Not ComboBox2.Value = "" Then Filtre_Ctct (tri)
End Sub


' ***** BOUTONS ***********************************************************************************
Private Sub CommandButton1_Click()  ' OK
    Unload Me
End Sub


Private Sub CommandButton2_Click()   ' Nouveau
    Select Case PageRsc
        Case 1: New_Fiche_Rsc True
        Case Else: New_Fiche_Rsc False, PageRsc
    End Select
End Sub


Private Sub UserForm_Terminate()
    UsfListOpen = False
End Sub
Attribute VB_Name = "Usf_Accueil"
Attribute VB_Base = "0{E538EAC4-BF4F-4691-BCBA-8941BBB5952D}{A7B954AA-2AA7-4428-8DE8-D7EA716BC460}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim Acc As New Class_Accueil
Dim CaseMenu() As Class_Menu


Private initUSF As Boolean
Private initFind As Boolean


Private Sub UserForm_Initialize()
Dim ctrl As Control, i As Byte
Dim T As Variant

    initUSF = True
    Mte = True
    initFind = False
    
    i = 1
    For Each ctrl In Me.Controls
        If Left(ctrl.Name, 4) = "Menu" Then
            ReDim Preserve CaseMenu(i)
            Set CaseMenu(i) = New Class_Menu
            Set CaseMenu(i).Menu = ctrl
            CaseMenu(i).init Me
            i = i + 1
        End If
    Next ctrl
    
    Acc.Init_Acc
    Label1.Caption = "Aujourd'hui : " & Format(dt0, "dddd dd mmm yyyy") & _
                     " - Sem. " & numero_de_semaine(dt0)
    ddj.Caption = Format(dt0, "dd/mm/yyyy")
    Acc.fixe_date
    Acc.LabelPages 21, True
    
    ComboBox1.List = EnteteTablo("Tous les sites", Sql.Get_ComboXL("Sites", "Config"))
    ComboBox1.ListIndex = 0
    
    ComboBox2.List = EnteteTablo("Toutes les |fffd|quipes", Sql.Get_ComboXL("Equipes", "Config"))
    ComboBox2.ListIndex = 0
    
    ComboBox3.List = EnteteTablo("Toutes les ressources", Sql.Get_ComboXL("Ressources", "Config"))
    ComboBox3.ListIndex = 0
    
    T = Sql.Get_Combo("Comp", "Compet")
    If UBound(T) = 0 Then
        ComboBox4.AddItem "Toutes les comp|fffd|tences"
    Else
        ComboBox4.List = EnteteTablo("Toutes les comp|fffd|tences", Sql.Get_Combo("Comp", "Compet"))
    End If
    ComboBox4.ListIndex = 0
    
    ComboBox5.List = Array("Activit|fffd|s & Indisponibilit|fffd|s", "Activit|fffd|s", "Indisponibilit|fffd|s")
    ComboBox5.ListIndex = 0
    
    initUSF = False
End Sub


Private Sub UserForm_Activate()
    If Not initUSF Then Filtre_Accueil
End Sub


' ***** Navigation calendrier *********************************************************************
Private Sub Label1_Click()
    OldDdj = CDate(Me.ddj.Caption)
    Me.ddj.Caption = Format(dt0, "dd/mm/yyyy")
    Acc.fixe_date
End Sub


Private Sub SpinButton1_SpinDown()
    OldDdj = CDate(Me.ddj.Caption)
    Me.ddj.Caption = DateAdd("d", -1, CDate(Me.ddj.Caption))
    Acc.fixe_date
End Sub


Private Sub SpinButton2_Spinup()
    OldDdj = CDate(Me.ddj.Caption)
    Me.ddj.Caption = DateAdd("d", 1, CDate(Me.ddj.Caption))
    Acc.fixe_date
End Sub


Private Sub SpinButton3_Spindown()
    OldDdj = CDate(Me.ddj.Caption)
    Me.ddj.Caption = DateAdd("m", -1, CDate(Me.ddj.Caption))
    Acc.fixe_date
End Sub


Private Sub SpinButton4_Spinup()
    OldDdj = CDate(Me.ddj.Caption)
    Me.ddj.Caption = DateAdd("m", 1, CDate(Me.ddj.Caption))
    Acc.fixe_date
End Sub


' ***** Scrollbar *********************************************************************************
Private Sub ScrollBar1_Change()
    remplissage_col
End Sub


' ***** Recherche *********************************************************************************
Private Sub Image17_Click()
    initFind = True
    TextBox1.Value = "Rechercher"
    TextBox1.ForeColor = &H8000000A  ' gris
    ComboBox1.SetFocus
End Sub


Private Sub TextBox1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    TextBox1.Value = ""
    TextBox1.ForeColor = &H80000008 'noir
End Sub


Private Sub TextBox1_Change()   ' Case recherche sur nom et pr|fffd|nom
    If Not initFind Then TextBox1.Value = UCase(TextBox1.Value)
    If Not initUSF Then Filtre_Accueil
    initFind = False
End Sub
Private Sub TextBox2_Change()   ' texte en clair
    If Not initUSF Then Filtre_Accueil
End Sub
Private Sub ComboBox1_Change()  ' Site
    If Not initUSF Then Filtre_Accueil
End Sub
Private Sub ComboBox2_Change()  ' Equipe
    If Not initUSF Then Filtre_Accueil
End Sub
Private Sub ComboBox3_Change()  ' Ressource
    If Not initUSF Then Filtre_Accueil
End Sub
Private Sub ComboBox4_Change()  ' Comp|fffd|tence
    If Not initUSF Then Filtre_Accueil
End Sub
Private Sub ComboBox5_Change()  ' Filtre Activit|fffd|/Indisponibilit|fffd|
    Select Case ComboBox5.ListIndex
        Case 0: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", FusionTablo(TAct, TInd))
        Case 1: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", TAct)
        Case 2: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", TInd)
    End Select
    ComboBox6.ListIndex = 0
    If Not initUSF Then Dessine_Event
End Sub
Private Sub ComboBox6_Change()  ' Filtre Activit|fffd|/Indisponibilit|fffd|
    If Not initUSF Then Dessine_Event
End Sub


Private Sub Filtre_Accueil()
    T_ident = Get_Rsc_Accueil(ComboBox1.Value, ComboBox2.Value, ComboBox3.Value, ComboBox4.Value, _
                        TextBox1.Value, ComboBox5.Value)
    remplissage_col
End Sub


Private Sub remplissage_col()
Dim i As Byte, idx As Long, lig As Variant, bc As Long, Vrt As Variant

    Application.EnableEvents = False
    ScrollBar1.Max = IIf(UBound(T_ident, 1) < LDlig + 1, 0, UBound(T_ident, 1) - 1 - LDlig)
    
    For i = 1 To LDlig
        idx = i + ScrollBar1.Value + 1
        If UBound(T_ident, 1) >= idx Then
            Controls("Image" & i).Picture = IIf(T_ident(idx, 1) = "RH", ImgRH.Picture, ImgRM.Picture)
            Controls("Txt" & i).Caption = T_ident(idx, 4)
        
            bc = &HFFFFFF
            lig = Application.Match(T_ident(idx, 4), Sheets("Config").Columns("G"), 0)
            If Not IsError(lig) Then bc = Sheets("Config").Cells(lig, "C").Interior.Color
            
            Controls("Txt" & i + (1 * LDlig)).BackColor = bc
            Controls("Txt" & i + (2 * LDlig)).Caption = T_ident(idx, 2) & " " & T_ident(idx, 3)
            Controls("Txt" & i + (3 * LDlig)).Caption = T_ident(idx, 5)
            Controls("Txt" & i + (3 * LDlig)).Picture = ImgFiche.Picture
            Controls("Txt" & i + (3 * LDlig)).ControlTipText = "Cliquez pour ouvrir la fiche " & T_ident(idx, 2)
        Else
            Controls("Image" & i).Picture = ImgVide.Picture
            Controls("Txt" & i).Caption = ""
            Controls("Txt" & i + (1 * LDlig)).BackColor = &HFFFFFF
            Controls("Txt" & i + (2 * LDlig)).Caption = ""
            Controls("Txt" & i + (3 * LDlig)).Caption = ""
            Controls("Txt" & i + (3 * LDlig)).Picture = ImgVide.Picture
            Controls("Txt" & i + (3 * LDlig)).ControlTipText = ""
        End If
    Next i
    
    Application.EnableEvents = True
    Dessine_Event
End Sub


' *************************************************************************************************
Private Sub Label17_Click()
    Mte = False
    Unload Me
End Sub


Private Sub CommandButton1_Click()  ' Imprimer semaine
    Imprimer_Semaine
End Sub


Private Sub UserForm_Terminate()
    ActiveWorkbook.Save
    ActiveWorkbook.Saved = True
    If Mte Then
        If Workbooks.Count = 1 Then Application.Quit Else ActiveWorkbook.Close
    End If
End Sub
Attribute VB_Name = "Usf_Bilan"
Attribute VB_Base = "0{592D6A84-7609-4C53-899C-7ABCC73B2577}{A08D636D-0104-47B8-B9F1-AD45071CAE4D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Const lig = 10

Private T_Bilan() As Variant
Private Total() As Integer
Private initUSF As Boolean


Private Sub UserForm_Initialize()
Dim i As Byte, dt0 As Date

    initUSF = True
    ComboBox1.List = Sql.Get_List_ResCli(1)
    
    dt0 = CDate(Usf_Accueil.ddj)
    
    Lab1.Caption = DateSerial(Year(dt0), Month(dt0), 1)
    Lab2.Caption = DateAdd("d", -1, DateSerial(Year(dt0), Month(dt0) + 1, 1))
    
    TextBox1.Value = DateSerial(Year(dt0), Month(dt0), 1)
    TextBox2.Value = DateAdd("d", -1, DateSerial(Year(dt0), Month(dt0) + 1, 1))
    
    For i = 2 To 6
        Controls("Checkbox" & i).Value = 1
    Next i
    
    ComboBox5.List = Array("Activit|fffd|s & Indisponibilit|fffd|s", "Activit|fffd|s", "Indisponibilit|fffd|s")
    ComboBox5.ListIndex = 0
    
    T_Bilan = Array("")
    Remplissage
    initUSF = False
End Sub


Private Sub ComboBox1_Change()      ' Filtre Nom
    Filtre
End Sub


Private Sub SpinButton1_Spinup()    ' Filtre Date d|fffd|but
    TextBox1.Value = DateAdd("m", -1, CDate(TextBox1.Value))
    Filtre
End Sub


Private Sub SpinButton1_SpinDown()
    TextBox1.Value = DateAdd("m", 1, CDate(TextBox1.Value))
    Filtre
End Sub


Private Sub SpinButton2_Spinup()    ' Filtre Date fin
Dim dt As Date
    dt = DateAdd("d", 1, CDate(TextBox2.Value))
    dt = DateAdd("m", -1, dt)
    TextBox2.Value = DateAdd("d", -1, dt)
    Filtre
End Sub


Private Sub SpinButton2_SpinDown()
Dim dt As Date
    dt = DateAdd("d", 1, CDate(TextBox2.Value))
    dt = DateAdd("m", 1, dt)
    TextBox2.Value = DateAdd("d", -1, dt)
    Filtre
End Sub


Private Sub TextBox1_enter()
    Calendrier.Affiche Me, Me.TextBox1.Name
End Sub


Private Sub TextBox2_enter()
    Calendrier.Affiche Me, Me.TextBox2.Name
End Sub


Private Sub ComboBox5_Change()  ' Filtre Activit|fffd|/Indisponibilit|fffd|
    Select Case ComboBox5.ListIndex
        Case 0: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", FusionTablo(TAct, TInd))
        Case 1: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", TAct)
        Case 2: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", TInd)
    End Select
    ComboBox6.ListIndex = 0
    If Not initUSF Then Filtre
End Sub


Private Sub ComboBox6_Change()  ' Filtre Cat|fffd|gorie
    Filtre
End Sub


Private Sub CheckBox1_Change()
    chck_change
End Sub
Private Sub CheckBox2_Change()
    chck_change
End Sub
Private Sub CheckBox3_Change()
    chck_change
End Sub
Private Sub CheckBox4_Change()
    chck_change
End Sub
Private Sub CheckBox5_Change()
    chck_change
End Sub
Private Sub CheckBox6_Change()
    chck_change
End Sub
Private Sub CheckBox7_Change()
    chck_change
End Sub
Private Sub CheckBox8_Change()
    chck_change
End Sub
Private Sub chck_change()
    If Not initUSF Then
        Totalise
        Remplissage
    End If
End Sub


Private Sub Filtre()
Dim Id As Long, T As Variant, TJ() As Integer, TT As Variant
Dim idx As Integer, i As Integer, j As Byte
Dim dt1 As Date, dt2 As Date, Gen As String, Cat As String

    If Not ComboBox1.Value = "" Then
        Id = CInt(ComboBox1.List(ComboBox1.ListIndex)) ' id du nom de la ressource
        dt1 = CDate(CDate(TextBox1.Value))
        dt2 = CDate(CDate(TextBox2.Value))
        
        Gen = IIf(ComboBox5.Value = "Activit|fffd|s & Indisponibilit|fffd|s", "", Left(ComboBox5.Value, 1))
        Cat = IIf(ComboBox6.Value = "Tous les |fffd|v|fffd|nements", "", ComboBox6.Value)
        
        T = Sql.Get_EvnParRsc(Id, dt1, dt2, Gen, Cat)
        T_Bilan = Array("")
        If UBound(T, 1) > 0 Then
            i = 2
            idx = 1
            ReDim TT(11, idx)
            TT(1, idx - 1) = T(i, 2)
            Do
                If Not T(i, 2) = TT(1, idx - 1) Then
                    idx = idx + 1
                    ReDim Preserve TT(11, idx)
                    TT(1, idx - 1) = T(i, 2)
                End If
            
                TT(0, idx - 1) = T(i, 1)
                TJ = cpt_J(CDate(T(i, 3)), CDate(T(i, 4)), dt1, dt2)
                For j = 0 To 7
                    TT(j + 2, idx - 1) = TT(j + 2, idx - 1) + TJ(j)
                Next j
                If T(i, 5) > 0 Then TT(10, idx - 1) = TT(10, idx - 1) + T(i, 5)
                
                i = i + 1
            Loop Until i = UBound(T, 1) + 1
    
            T_Bilan = Application.Transpose(TT)
            ScrollBar1.Max = IIf(UBound(T_Bilan, 1) < lig + 1, 0, UBound(T_Bilan, 1) - lig - 1)
            Totalise
        End If
        Remplissage
    End If
End Sub


Private Sub Totalise()
Dim i As Byte, j As Byte

    ReDim Total(UBound(T_Bilan, 1) - 1)
    For i = 1 To UBound(T_Bilan, 1) - 1
        For j = 1 To 8
            If Controls("Checkbox" & j).Value Then Total(i) = Total(i) + T_Bilan(i, j + 2)
        Next j
    Next i
End Sub


Private Sub Remplissage()
Dim i As Integer, idx As Integer, bkclr As Long, j As Byte
Dim T1 As Integer, T2 As Single

    T1 = 0
    T2 = 0
    For i = 1 To lig
        idx = i + ScrollBar1.Value
        bkclr = IIf(idx Mod 2 = 0, &HEFEFEF, &HFFFFFF) 'gris/blanc
        If idx < UBound(T_Bilan, 1) Then
            Controls("Label" & i).Caption = IIf(T_Bilan(idx, 1) = "A", " Activit|fffd|", " Indisponibilit|fffd|")
            Controls("Label" & i + 1 * lig).Caption = T_Bilan(idx, 2)
            Controls("Label" & i + 2 * lig).Caption = Total(idx)
            T1 = T1 + Total(idx)
            Controls("Label" & i + 3 * lig).Caption = Format(T_Bilan(idx, 11), "hh:mm")
            If Not IsNull(T_Bilan(idx, 11)) Then T2 = T2 + T_Bilan(idx, 11)
        Else
            Controls("Label" & i).Caption = ""
            Controls("Label" & i + 1 * lig).Caption = ""
            Controls("Label" & i + 2 * lig).Caption = ""
            Controls("Label" & i + 3 * lig).Caption = ""
        End If
        For j = 0 To 3
            Controls("Label" & i + j * lig).BackColor = bkclr
        Next j
        Total1.Caption = IIf(T1 > 0, T1, "")
        Total2.Caption = IIf(T2 > 0, Format(T2, "hh:mm"), "")
    Next i
End Sub


' ***** BOUTONS ***********************************************************************************
Private Sub CommandButton1_Click()  ' OK
    Unload Me
End Sub


Private Sub CommandButton2_Click()  ' Imprimer
Dim Ndf As String, NDF2 As String, Rep As String
Dim WordApp As Object, WordDoc As Object
Dim i As Byte, j As Byte, S As String, nb As Byte

    Me.Label100.Visible = True
    Ndf = ActiveWorkbook.Path & "\Fiche_Bilan.docx"
    Rep = ActiveWorkbook.Path & "\Bilans\"
    
    If Not Exist_Fichier(Ndf) Then
        MsgBox "Document 'Fiche_Bilan.docx' manquant", vbExclamation, "RSC-PLANNER"
    Else
        If Not ComboBox1.Value = "" Then
            If Not Exist_Rep(Rep) Then MkDir Rep
            NDF2 = Rep & ComboBox1.Value & "_" & Format(Now(), "yyyymmdd_hhmm") & ".docx"
            
            On Error Resume Next
            If Fichier_IsOpen(Ndf) Then
               Set WordApp = GetObject(, "Word.Application")
               Set WordDoc = WordApp.Documents(Ndf)
            Else
                Set WordApp = CreateObject("Word.Application")
                Set WordDoc = WordApp.Documents.Open(Ndf, ReadOnly:=False)
            End If
    
            With WordApp
                .Visible = False
        
                With WordDoc.Tables(1)
                    .cell(1, 1).Range.InsertAfter ComboBox1.Value
                    S = "du " & Me.TextBox1.Value & " au " & Me.TextBox2.Value
                    .cell(2, 2).Range.InsertAfter S
                    .cell(3, 2).Range.InsertAfter ComboBox5.Value
                    .cell(4, 2).Range.InsertAfter ComboBox6.Value
                    
                    If CheckBox1.Value Then .cell(6, 9).Range.InsertAfter "Feri|fffd|s"
                    For j = 2 To 8
                        If Controls("Checkbox" & j).Value Then
                            .cell(6, j).Range.InsertAfter Controls("Checkbox" & j).Caption
                        End If
                    Next j
                    
                    For i = 1 To UBound(T_Bilan, 1) - 1
                        If i > 1 Then .Rows.Add
                        S = IIf(T_Bilan(i, 1) = "A", " Activit|fffd|", " Indisponibilit|fffd|")
                        .cell(10 + i - 1, 1).Range.InsertAfter S
                        .cell(10 + i - 1, 2).Range.InsertAfter T_Bilan(i, 2)
                        .cell(10 + i - 1, 3).Range.InsertAfter Total(i)
                        .cell(10 + i - 1, 4).Range.InsertAfter Format(T_Bilan(i, 11), "hh ""h"" mm")
                    Next i
                    
                    .cell(10 + i, 2).Range.InsertAfter "TOTAL =>"
                    .cell(10 + i, 3).Range.InsertAfter Total1.Caption
                    .cell(10 + i, 4).Range.InsertAfter Format(CDate(Total2.Caption), "hh ""h"" mm")
                    
                    For j = 1 To 4
                        .cell(10 + i, j).Range.Shading.BackgroundPatternColor = &HEFEFEF
                        .cell(10 + i, j).Range.Font.Bold = True
                        .cell(10 + i, j).Range.ParagraphFormat.Alignment = 1
                    Next j
                    
                End With
                
                nb = WordDoc.Paragraphs.Count
                WordDoc.Paragraphs(nb).Range.Select
                .Selection.EndKey Unit:=5
                .Selection.InsertParagraph
                WordDoc.Paragraphs(nb + 1).Range.Select
                WordDoc.Hyperlinks.Add Anchor:=.Selection.Range, _
                                       Address:="http://tatiak.canalblog.com/"
                
            End With
    
            WordDoc.Application.ActiveDocument.SaveAs NDF2
            WordApp.Visible = True ' WordApp.Application.Quit
            Set WordDoc = Nothing
            Set WordApp = Nothing
            MsgBox "Document word pr|fffd|t"
        Else
            MsgBox "S|fffd|lectionnez une ressource", vbExclamation, "RSC-PLANNER"
        End If
    End If
    Me.Label100.Visible = False
End Sub
Attribute VB_Name = "Usf_Calendrier"
Attribute VB_Base = "0{9ED92312-1B27-4CC9-8AE8-6AD7A06319A4}{22C760AC-5983-48B6-A13E-F971F4EDB587}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Cal As New Class_Calendrier


Private Sub UserForm_Initialize()
    Cal.Init_Calendrier
    AfficheTitleBarre Me.Caption, False
    Me.Height = Me.Height - 23
    Me.Width = Me.Width - 8
    Me.ddj_cal.Caption = IIf(Date_initiale = "", Date, Date_initiale)
    re_init
End Sub


Private Sub re_init()
Dim Annee As Integer, mois As Byte
Dim index As Byte, i As Integer, d As Date

    Annee = Year(CDate(Me.ddj_cal.Caption))
    mois = Month(CDate(Me.ddj_cal.Caption))
    Me.Label1.Caption = Format(Me.ddj_cal.Caption, "mmmm yyyy")
    index = Weekday(DateSerial(Annee, mois, 1)) - 1
    If index = 0 Then index = 7
    init_Feries (Annee)

    For i = 1 To 42
        d = DateAdd("d", i - index, DateSerial(Annee, mois, 1))
        Me.Controls("J" & i).Caption = Day(d)
        Me.Controls("J" & i).ForeColor = IIf(Month(d) = mois, &H80000012, &H8000000C)
        Me.Controls("J" & i).BackColor = &HFFFFFF
        Me.Controls("J" & i).ControlTipText = ""
        If CStr(d) = Date_initiale Then
            Me.Controls("J" & i).BackColor = &HFFB666  ' bleu p|fffd|le '&HC0C0C0
            Me.Controls("J" & i).ControlTipText = "Date |fffd| modifier"
        End If
        If d = Date Then
            Me.Controls("J" & i).BackColor = &HC0FFC0   ' vert p|fffd|le
            Me.Controls("J" & i).ControlTipText = "Aujourd'hui"
        End If
        If Est_Ferie(d) Then
            Me.Controls("J" & i).BackColor = &HC0C0C0  ' gris
            Me.Controls("J" & i).ControlTipText = Jr_Feries(idx_ferie)
        End If
    Next i
End Sub


Private Sub SpinButton1_SpinDown()
    Me.ddj_cal.Caption = DateAdd("m", -1, CDate(Me.ddj_cal.Caption))
    re_init
End Sub


Private Sub SpinButton2_Spinup()
    Me.ddj_cal.Caption = DateAdd("m", 1, CDate(Me.ddj_cal.Caption))
    re_init
End Sub


Private Sub UserForm_Terminate()
    If Not ChoixDate = 0 Then
        Usf.Controls("Textbox" & Txt_dt) = ChoixDate
        ChoixDate = 0
        Date_initiale = ""
    End If
    Set Cal = Nothing
End Sub
Attribute VB_Name = "Usf_Evnmt"
Attribute VB_Base = "0{DA72D80D-6F19-498B-AAB0-CEE513CB37DF}{97339249-771D-4121-8FE3-16311C0BF732}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim Evn As New Class_Evnmt



Private Sub UserForm_Initialize()
Dim i As Byte

    Evn.Init_Evnmt
    
    ComboBox1.List = Sql.Get_ComboXL_simple("Activit|fffd|s", "Config")
    For i = 0 To 95
        ComboBox2.AddItem Format((1 / 24 / 4) * i, "hh:mm")
    Next i
    ComboBox3.List = ComboBox2.List
    ComboBox4.List = Get_List_ResCli(1)
    ComboBox5.List = Get_List_ResCli(0)
    Me.CheckBox1.Value = False
  
End Sub


' ***** Contr|fffd|le de saisie ************************************************************************
Private Sub ComboBox4_Change()
    If Not ComboBox4.Value = "" Then
        ReDim Preserve ListRsc(UBound(ListRsc) + 1)
        ReDim Preserve IdR(UBound(ListRsc) + 1)

        ListRsc(UBound(ListRsc) - 1) = ComboBox4.Value
        IdR(UBound(ListRsc) - 1) = ComboBox4.List(ComboBox4.ListIndex)
        
        Controls("R" & numlist).Caption = numlist + ScrollBar1.Value
        Controls("Rsc" & numlist).Caption = ListRsc(UBound(ListRsc) - 1)
        Controls("Rsc_S" & numlist).Picture = ImgPoub.Picture
        If numlist = 4 Then ScrollBar1.Max = ScrollBar1.Max + 1
    End If
    Controls("Rsc" & numlist).Visible = True
    ComboBox4.Visible = False
    ComboBox4.ListIndex = -1
End Sub


Private Sub ScrollBar1_Change()
    remplir_ListRsc
End Sub


Private Sub ComboBox5_Change()
    If Not ComboBox5.Value = "" Then
        ReDim Preserve ListCli(UBound(ListCli) + 1)
        ReDim Preserve IdC(UBound(ListCli) + 1)
        
        ListCli(UBound(ListCli) - 1) = ComboBox5.Value
        IdC(UBound(ListCli) - 1) = ComboBox5.List(ComboBox5.ListIndex)
                
        Controls("C" & numlist).Caption = numlist + ScrollBar1.Value
        Controls("Cli" & numlist).Caption = ListCli(UBound(ListCli) - 1)
        Controls("Cli_S" & numlist).Picture = ImgPoub.Picture
        If numlist = 4 Then ScrollBar2.Max = ScrollBar2.Max + 1
    End If
    Controls("Cli" & numlist).Visible = True
    ComboBox5.Visible = False
    ComboBox5.ListIndex = -1
End Sub


Private Sub ScrollBar2_Change()
    remplir_ListCli
End Sub


Private Sub OptionButton1_Click()    ' Genre de cat|fffd|gorie
    ComboBox1.Value = ""
    ComboBox1.List = Sql.Get_ComboXL_simple("Activit|fffd|s", "Config")
    Me.TextBox6.Value = IIf(Me.CheckBox1.Value, "AP", "A")
End Sub


Private Sub OptionButton2_Click()    ' Genre de cat|fffd|gorie
    ComboBox1.Value = ""
    ComboBox1.List = Sql.Get_ComboXL_simple("Indisponibilit|fffd|s", "Config")
    Me.TextBox6.Value = IIf(Me.CheckBox1.Value, "IP", "I")
End Sub


Private Sub CheckBox1_Click()   ' Evenement "Drapeaux" ponctuel
    Me.Label4.Visible = Not Me.CheckBox1.Value
    Me.Label14.Visible = Not Me.CheckBox1.Value
    Me.TextBox3.Visible = Not Me.CheckBox1.Value
    Me.ComboBox3.Visible = Not Me.CheckBox1.Value
    Me.TextBox6.Value = Left(Me.TextBox6.Value, 1)
        
    If Me.CheckBox1.Value Then
        Me.TextBox3.Value = Me.TextBox2.Value
        Me.ComboBox3.Value = Me.ComboBox2.Value
        Me.TextBox6.Value = Me.TextBox6.Value & "P"
    End If
End Sub


Private Sub ComboBox1_Change()      ' Cat|fffd|gorie
    TextBox7.Value = ComboBox1.Value
End Sub


Private Sub TextBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean) ' Date d|fffd|but
    Calendrier.Affiche Me, Me.TextBox2.Name ', ActiveControl.Name
    Cancel = True
End Sub
Private Sub TextBox2_enter()        ' Date d|fffd|but
    Calendrier.Affiche Me, Me.TextBox2.Name ', ActiveControl.Name
End Sub
Private Sub TextBox2_AfterUpdate()  ' Date d|fffd|but
Dim Msg As String

    If TextBox2.Value = "" Then
        Label15.Visible = True
    Else
        Label15.Visible = False
        If CDate(TextBox2.Value) < Date Then
            Msg = "Date ant|fffd|rieure |fffd| aujourd'hui" & vbCrLf & "Vous confirmez?"
            If MsgBox(Msg, vbYesNo + vbExclamation, "DATE DE DEBUT") = vbNo Then
                TextBox2.Value = ""
                Label15.Visible = True
            End If
        End If
        If Me.CheckBox1.Value Then Me.TextBox3.Value = TextBox2.Value
    End If
End Sub


Private Sub ComboBox2_Change()      ' Heure d|fffd|but
    TextBox4.Value = ComboBox2.Value
    If Me.CheckBox1.Value Then Me.ComboBox3.Value = ComboBox2.Value
End Sub


Private Sub TextBox3_DblClick(ByVal Cancel As MSForms.ReturnBoolean) ' Date fin
    Calendrier.Affiche Me, Me.TextBox3.Name ', ActiveControl.Name
    Cancel = True
End Sub
Private Sub TextBox3_Enter()        ' Date fin
    Calendrier.Affiche Me, Me.TextBox3.Name ', ActiveControl.Name
End Sub
Private Sub TextBox3_AfterUpdate()  ' Date fin
Dim Msg As String
    If Not Me.TextBox2.Value = "" And Not Me.TextBox3.Value = "" Then
        If CDate(Me.TextBox3.Value) < CDate(Me.TextBox2.Value) Then
            MsgBox "Date de fin ant|fffd|rieure |fffd| la date de d|fffd|but du", , "DATE DE FIN"
            Me.TextBox3.Value = ""
        End If
    End If
    If Not Me.TextBox3.Value = "" Then
        If CDate(Me.TextBox3.Value) < Date Then
            Msg = "Date de fin ant|fffd|rieure |fffd| aujourd'hui" & vbCrLf & "Vous confirmez?"
            If MsgBox(Msg, vbYesNo + vbExclamation, "DATE DE FIN") = vbNo Then
                Me.TextBox3.Value = ""
            End If
        End If
    End If
End Sub


Private Sub ComboBox3_Change()      ' Heure fin
    TextBox5.Value = ComboBox3.Value
End Sub


Private Sub Label11_Click() ' Ajout Pi|fffd|ce jointe
Dim Fichier As Variant

    ChDrive Left(ActiveWorkbook.Path, 1)
    ChDir ActiveWorkbook.Path
    Fichier = Application.GetOpenFilename
    If Not Fichier = "Faux" Then
        Label11.Caption = Fichier
        TextBox11.Value = Fichier
        ImgPoub.Visible = True
        Image1.Visible = True
    End If
End Sub


Private Sub Image1_Click() ' Ouvre Pi|fffd|ce jointe
    If Exist_Fichier(TextBox11.Value) Then
        ThisWorkbook.FollowHyperlink Me.TextBox11.Value
    Else
        MsgBox "Fichier absent de ce PC", vbExclamation, "FICHIER ABSENT"
    End If
End Sub


Private Sub ImgPoub_Click() ' Efface Pi|fffd|ce jointe
    Label11.Caption = "Cliquez pour joindre un document"
    TextBox11.Value = ""
    ImgPoub.Visible = False
    Image1.Visible = False
End Sub


Private Sub Label17_Click() ' Ajout Image
Dim Fichier As Variant

    ChDrive Left(ActiveWorkbook.Path, 1)
    ChDir ActiveWorkbook.Path
    Fichier = Application.GetOpenFilename
    If Not Fichier = "Faux" Then
        If Right(Fichier, 3) = "gif" Then
            Label17.Caption = Fichier
            TextBox12.Value = Fichier
            ImgPoub2.Visible = True
            Image3.Visible = True
            Image3.Picture = LoadPicture(Fichier)
        End If
    End If
End Sub


Private Sub ImgPoub2_Click() ' Efface Image
    Label17.Caption = "Cliquez pour joindre un document"
    TextBox12.Value = ""
    ImgPoub2.Visible = False
    Image3.Picture = Nothing
    Image3.Visible = False
End Sub


' ***** BOUTONS ***********************************************************************************
Private Sub CommandButton1_Click()  'Enregistrer
Dim H As String, T() As String, S As String, i As Byte, Id As Long

    If TextBox2.Value = "" Then
        Label15.Visible = True
    Else
        H = "Id,Deb,Fin,Hdeb,Hfin,Genre,Categ,Titre,Lieu,Rq,PJ,Img"
        If TextBox3.Value = "" Then TextBox3.Value = "01/01/2100"
        If NewEvt Then
            S = TextBox1.Value
            S = S & "," & Esc_Dt(TextBox2.Value)
            S = S & "," & Esc_Dt(TextBox3.Value)
            S = S & "," & Esc_Hr(TextBox4.Value)
            S = S & "," & Esc_Hr(TextBox5.Value)
            For i = 6 To 12
                S = S & ",'" & Esc(Controls("TextBox" & i).Value) & "'"
            Next i
            Sql.Insert_DB "Evnmnts", H, S
        Else
            T = Split(H, ",")
            S = T(1) & "=" & Esc_Dt(TextBox2.Value)
            S = S & "," & T(2) & "=" & Esc_Dt(TextBox3.Value)
            S = S & "," & T(3) & "=" & Esc_Hr(TextBox4.Value)
            S = S & "," & T(4) & "=" & Esc_Hr(TextBox5.Value)
            For i = 6 To 12
                S = S & "," & T(i - 1) & "='" & Esc(Controls("TextBox" & i).Value) & "'"
            Next i
            Sql.Update_DB "Evnmnts", S, "Id=" & TextBox1.Value
        End If
    
        ' Ressources associ|fffd|es  => ListRsc() et ListCli()
        Sql.Delete_DB "Assoc", "Id_Ev=" & TextBox1.Value
        H = "Id,Id_Ev,Id_Re"
        Id = Sql.Get_Max_Id("Assoc", "Id") + 1
        
        ' Ressource(s)
        'For i = 0 To UBound(IdR) - 1
        If UBound(IdR) > 0 Then
            For i = 0 To UBound(IdR) - 1
                If Not IdR(i) = "" Then
                    S = Id & "," & TextBox1.Value & "," & IdR(i)
                    Sql.Insert_DB "Assoc", H, S
                    Id = Id + 1
                End If
            Next i
        End If

        ' Client(s)
        If UBound(IdC) > 0 Then
            For i = 0 To UBound(IdC) - 1
                If Not IdC(i) = "" Then
                    S = Id & "," & TextBox1.Value & "," & IdC(i)
                    Sql.Insert_DB "Assoc", H, S
                    Id = Id + 1
                End If
            Next i
        End If
        Dessine_Event
        Unload Me
    End If
End Sub


Private Sub CommandButton2_Click()  ' Supprimer
Dim Repons As Variant

    Repons = MsgBox("Suppression de cette fiche!" & vbCrLf & vbCrLf & _
            "Etes-vous s|fffd|r de vouloir continuer?", vbOKCancel, "Suppression")
    If Repons = 1 Then
        Sql.Delete_DB "Evnmnts", "Id=" & TextBox1.Value
        Sql.Delete_DB "Assoc", "Id_Ev=" & TextBox1.Value
        Unload Me
    End If
End Sub


Private Sub CommandButton3_Click()  'Sortie
    Unload Me
End Sub


Private Sub UserForm_Terminate()
    Usf_EvnmtList.TextBox0.Value = Usf_EvnmtList.TextBox0.Value & "a"
End Sub
Attribute VB_Name = "Usf_EvnmtList"
Attribute VB_Base = "0{276F6422-6355-4E35-9690-0C38A193E9D5}{F4208593-9D1F-4742-8BE3-FDA2BD7E0211}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Const lig = 15

Private T_Ev As Variant
Private initUSF As Boolean
Private Coll As New Collection
Private tri(5) As String


Private Sub UserForm_Initialize()
Dim Id(lig) As New Class_Evnmt, i As Byte, dt0 As Date
Dim T As Variant

    initUSF = True
    
    For i = 0 To lig - 1
        Set Id(i).lbFic = Controls("Label" & i + 1)
        Coll.Add Id(i)
    Next i
    
    dt0 = CDate(Usf_Accueil.ddj)
    TextBox1.Value = DateSerial(Year(dt0), Month(dt0), 1)
    
    ComboBox5.List = Array("Activit|fffd|s & Indisponibilit|fffd|s", "Activit|fffd|s", "Indisponibilit|fffd|s")
    ComboBox5.ListIndex = 0
    
    T = Sql.Get_List_Res
    If UBound(T) > 0 Then
        ComboBox7.List = EnteteTablo("Toutes les ressources", T)
    Else
        ComboBox7.List = Array("Toutes les ressources")
    End If
    ComboBox7.ListIndex = 0

    tri(0) = ""
    For i = 1 To 5
        tri(i) = "DESC"
    Next i
    
    initUSF = False
    Filtre
End Sub


Private Sub ComboBox5_Change()  ' Filtre Activit|fffd|/Indisponibilit|fffd|

    Select Case ComboBox5.ListIndex
        Case 0: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", FusionTablo(TAct, TInd))
        Case 1: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", TAct)
        Case 2: ComboBox6.List = EnteteTablo("Tous les |fffd|v|fffd|nements", TInd)
    End Select
    ComboBox6.ListIndex = 0
    If Not initUSF Then Filtre
End Sub


Private Sub ComboBox6_Change()  ' Filtre Activit|fffd|/Indisponibilit|fffd|
    If Not initUSF Then Filtre
End Sub


Private Sub ComboBox7_Change()  ' Filtre Ressource
    If Not initUSF Then Filtre
End Sub


Private Sub SpinButton1_Spinup()    ' Filtre Date d|fffd|but
    TextBox1.Value = DateAdd("m", -1, CDate(TextBox1.Value))
    Filtre
End Sub


Private Sub SpinButton1_SpinDown()
    TextBox1.Value = DateAdd("m", 1, CDate(TextBox1.Value))
    Filtre
End Sub


Private Sub SpinButton2_Spinup()    ' Filtre Date fin
Dim dt As Date
    If Not TextBox2.Value = "" Then
        dt = DateAdd("d", 1, CDate(TextBox2.Value))
        dt = DateAdd("m", -1, dt)
        TextBox2.Value = DateAdd("d", -1, dt)
        If Not initUSF Then Filtre
    End If
End Sub


Private Sub SpinButton2_SpinDown()
Dim dt As Date
    If Not TextBox2.Value = "" Then
        dt = DateAdd("d", 1, CDate(TextBox2.Value))
        dt = DateAdd("m", 1, dt)
        TextBox2.Value = DateAdd("d", -1, dt)
        If Not initUSF Then Filtre
    End If
End Sub


Private Sub TextBox0_Change()   ' apr|fffd|s modif d'une fiche
    Filtre
End Sub


Private Sub TextBox1_enter()
    Calendrier.Affiche Me, Me.TextBox1.Name
End Sub


Private Sub TextBox1_Change()
    If Not initUSF Then Filtre
End Sub


Private Sub TextBox2_enter()
    Calendrier.Affiche Me, Me.TextBox2.Name
End Sub


Private Sub TextBox2_Change()
    If Not initUSF Then Filtre
End Sub


Private Sub ScrollBar1_Change()
    Remplissage
End Sub


Private Sub Lab1_Click()   ' tri type"
    tri(1) = IIf(tri(1) = "ASC", "DESC", "ASC")
    tri(0) = "E.Genre " & tri(1)
    Filtre
End Sub

Private Sub Lab2_Click()   ' tri cat|fffd|gorie
    tri(2) = IIf(tri(2) = "ASC", "DESC", "ASC")
    tri(0) = "E.Categ " & tri(2)
    Filtre
End Sub

Private Sub Lab3_Click()   ' tri ressource
    tri(3) = IIf(tri(3) = "ASC", "DESC", "ASC")
    tri(0) = "R.Nom " & tri(3)
    Filtre
End Sub

Private Sub Lab4_Click()   ' tri d|fffd|but
    tri(4) = IIf(tri(4) = "ASC", "DESC", "ASC")
    tri(0) = "E.Deb " & tri(4)
    Filtre
End Sub

Private Sub Lab5_Click()   ' tri fin
    tri(5) = IIf(tri(5) = "ASC", "DESC", "ASC")
    tri(0) = "E.Fin " & tri(5)
    Filtre
End Sub


Private Sub Filtre()
    T_Ev = Sql.Get_List_Evn(ComboBox5.ListIndex, ComboBox6.Value, TextBox1.Value, TextBox2.Value, ComboBox7.Value, tri(0))
    ScrollBar1.Max = IIf(UBound(T_Ev, 1) < lig + 1, 0, UBound(T_Ev, 1) - lig - 1)
    Remplissage
End Sub


Private Sub Remplissage()
Dim i As Integer, idx As Integer, bkclr As Long, j As Byte

'"SELECT A.Id_ev,E.Genre,E.Categ, R.Nom, E.Deb, E.Fin, E.Hdeb, E.Hfin, E.Titre, E.Rq, R.Prenom "

    For i = 1 To lig
        idx = i + 1 + ScrollBar1.Value
        bkclr = IIf(idx Mod 2 = 0, &HEFEFEF, &HFFFFFF) 'gris/blanc
        If idx <= UBound(T_Ev, 1) Then
            Controls("Label" & i).Caption = " " & T_Ev(idx, 1)
            Controls("Label" & i).Picture = ImgFiche.Picture
            Controls("Label" & i).ControlTipText = "Clic pour ouvrir la fiche"
            Controls("Label" & i + 1 * lig).Caption = IIf(T_Ev(idx, 2) = "A", " Activit|fffd|", " Indisponibilit|fffd|")
            Controls("Label" & i + 2 * lig).Caption = " " & T_Ev(idx, 3)
            Controls("Label" & i + 3 * lig).Caption = " " & T_Ev(idx, 4)
            Controls("Label" & i + 4 * lig).Caption = " " & T_Ev(idx, 5)
            If T_Ev(idx, 6) = "01/01/2100" Then T_Ev(idx, 6) = ""
            Controls("Label" & i + 5 * lig).Caption = " " & T_Ev(idx, 6)
        Else
            Controls("Label" & i).Caption = ""
            Controls("Label" & i).Picture = ImgVide.Picture
            Controls("Label" & i).ControlTipText = ""
            Controls("Label" & i + 1 * lig).Caption = ""
            Controls("Label" & i + 2 * lig).Caption = ""
            Controls("Label" & i + 3 * lig).Caption = ""
            Controls("Label" & i + 4 * lig).Caption = ""
            Controls("Label" & i + 5 * lig).Caption = ""
        End If
        For j = 0 To 5
            Controls("Label" & i + j * lig).BackColor = bkclr
        Next j
    Next i
End Sub


Private Sub CommandButton1_Click() ' Ok
    Unload Me
End Sub


Private Sub CommandButton2_Click() ' Imprimer
Dim Ndf As String, NDF2 As String, Rep As String
Dim WordApp As Object, WordDoc As Object
Dim i As Byte, j As Byte, S As String, nb As Byte, T As Variant

    Me.Label100.Visible = True
    Ndf = ActiveWorkbook.Path & "\Liste.docx"
    Rep = ActiveWorkbook.Path & "\Listes\"
    
    If Not Exist_Fichier(Ndf) Then
        MsgBox "Document 'Liste.docx' manquant", vbExclamation, "RSC-PLANNER"
    Else
        If Not Exist_Rep(Rep) Then MkDir Rep
        NDF2 = Rep & ComboBox7.Value & "_" & Format(Now(), "yyyymmdd_hhmm") & ".docx"
            
        On Error Resume Next
        If Fichier_IsOpen(Ndf) Then
           Set WordApp = GetObject(, "Word.Application")
           Set WordDoc = WordApp.Documents(Ndf)
        Else
            Set WordApp = CreateObject("Word.Application")
            Set WordDoc = WordApp.Documents.Open(Ndf, ReadOnly:=False)
        End If

        With WordApp
            .Visible = False
            
            With WordDoc.Tables(1)
                .cell(1, 1).Range.InsertAfter ComboBox7.Value
                .cell(2, 2).Range.InsertAfter " A partir du " & Me.TextBox1.Value 'Lab93.Caption
                .cell(3, 2).Range.InsertAfter ComboBox5.Value
                .cell(4, 2).Range.InsertAfter ComboBox6.Value
                    
    'Req = "SELECT A.Id_ev,E.Genre,E.Categ, R.Nom, E.Deb, E.Fin, E.Hdeb, E.Hfin  "
                For i = 2 To UBound(T_Ev, 1)
                    If i > 3 Then .Rows.Add
                    S = IIf(T_Ev(i, 2) = "A", " Activit|fffd|", " Indisponibilit|fffd|")
                    .cell(8 + i - 2, 1).Range.InsertAfter S
                    .cell(8 + i - 2, 2).Range.InsertAfter T_Ev(i, 3)
                    .cell(8 + i - 2, 3).Range.InsertAfter T_Ev(i, 5)
                    If Not T_Ev(i, 7) = "00:00:00" Then
                        .cell(8 + i - 2, 4).Range.InsertAfter Format(T_Ev(i, 7), "hh ""h"" mm")
                    End If
                    .cell(8 + i - 2, 5).Range.InsertAfter T_Ev(i, 6)
                    If Not T_Ev(i, 8) = "00:00:00" Then
                        .cell(8 + i - 2, 6).Range.InsertAfter Format(T_Ev(i, 8), "hh ""h"" mm")
                    End If
                Next i
                
            End With
                
            nb = WordDoc.Paragraphs.Count
            WordDoc.Paragraphs(nb).Range.Select
            .Selection.EndKey Unit:=5
            .Selection.InsertParagraph
            WordDoc.Paragraphs(nb + 1).Range.Select
            WordDoc.Hyperlinks.Add Anchor:=.Selection.Range, _
                                   Address:="http://tatiak.canalblog.com/"
            
        End With
    
        WordDoc.Application.ActiveDocument.SaveAs NDF2
        WordApp.Visible = True ' WordApp.Application.Quit
        Set WordDoc = Nothing
        Set WordApp = Nothing
        MsgBox "Document word pr|fffd|t"

    End If
    Me.Label100.Visible = False
End Sub
Attribute VB_Name = "Usf_Rsc"
Attribute VB_Base = "0{FD222817-CA1D-45A3-BE66-8742B53790B1}{DAB5F571-1627-474A-8ACB-254D130E65FC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Const lig = 13

Private Intit As Variant
Private T_Historic() As Variant


Private Sub UserForm_Initialize()

    If RscInterne Then
        Intit = Array(",D|fffd|but de contrat,Fin de contrat,Type,Nom,Pr|fffd|nom,Adresse,CP,Ville,T|fffd|l|fffd|phone fixe,T|fffd|l Portable,Email,Site,Equipe,Fonction,S|fffd|parer chaque comp|fffd|tence par une virgule,A noter,Fax,Comp|fffd|tences,", _
                    ",Mise en service,R|fffd|forme,Type,D|fffd|signation,R|fffd|f|fffd|rence,Emplacement,,,,,,Site,Groupe,Fonction,S|fffd|parer chaque usage par une virgule,A noter,,Usages,Fr|fffd|quence v|fffd|rification")
                      
        ComboBox1.List = Array("RH", "RM")
        ComboBox2.List = Sql.Get_ComboXL("Sites", "Config")
        ComboBox5.List = Array("1 par an", "1 par semestre", "1 par trimestre", "tous les 2 mois", "tous les mois")
        ComboBox5.ListIndex = 0
    Else
        Me.Caption = "FICHE CONTACT"
        Intit = Array(",1er contact,Dernier contact,Type,Nom,Pr|fffd|nom,Adresse,CP,Ville,T|fffd|l|fffd|phone fixe,T|fffd|l Portable,Email,,Soci|fffd|t|fffd|,Fonction,,A noter,Fax,", _
                    ",1er contact,Dernier contact,Type,Nom,Pr|fffd|nom,Adresse,CP,Ville,T|fffd|l|fffd|phone fixe,T|fffd|l Portable,Email,,Soci|fffd|t|fffd|,Fonction,,A noter,Fax,", _
                    ",1er contact,Dernier contact,Type,Nom,Pr|fffd|nom,Adresse,CP,Ville,T|fffd|l|fffd|phone fixe,T|fffd|l Portable,Email,,Soci|fffd|t|fffd|,Fonction,,A noter,Fax,", _
                    ",1er contact,Dernier contact,Type,Nom,Pr|fffd|nom,Adresse,CP,Ville,T|fffd|l|fffd|phone fixe,T|fffd|l Portable,Email,,Soci|fffd|t|fffd|,Fonction,,A noter,Fax,")
      
        ComboBox1.List = Array("Client", "Fournisseur", "Prospect", "Autre")
        ComboBox2.Visible = False
        ComboBox3.Visible = False
        ComboBox4.Visible = False
        ComboBox5.Visible = False
    End If
    ComboBox1.ListIndex = 0
    Me.TextBox20.Value = "1"
    MultiPage1.Value = 0
    MultiPage1.Page2.Enabled = False
End Sub


Private Sub UserForm_Activate()
    If Not NewRsc Then
        MultiPage1.Page2.Enabled = True
        T_Historic = Sql.Get_Historic(TextBox1.Value)
        ScrollBar1.Max = IIf(UBound(T_Historic, 1) < lig + 1, 0, UBound(T_Historic, 1) - lig - 1)
        Remplissage
    End If
End Sub


Private Sub ComboBox1_Change()
Dim Slbl() As String, Cnd As String, i As Integer
    If Not ComboBox1.Value = "" Then
        Slbl = Split(Intit(ComboBox1.ListIndex), ",")
        For i = 1 To UBound(Slbl)
            Controls("Textbox" & i + 1).Visible = Not (Slbl(i) = "")
            Controls("Label" & i).Caption = Slbl(i)
        Next i
        If RscInterne Then
            Cnd = "Type='" & ComboBox1.Value & "'"
            ComboBox3.List = Sql.Get_ComboXL("Equipes", "Config", Cnd)
            ComboBox3.ListIndex = -1
            ComboBox4.ListIndex = -1
            TextBox14 = ""
            TextBox15 = ""
            TextBox16 = ""
            ComboBox5.Visible = Not (Slbl(19) = "")
            If ComboBox1.Value = "RM" Then
                Me.MultiPage1.Pages(2).Visible = True
                Me.Label19.Visible = True
            End If
        End If
        TextBox4 = ComboBox1.Value
    End If
End Sub


Private Sub ComboBox2_Change()
    If Not ComboBox2.Value = "" Then TextBox13 = ComboBox2.Value
End Sub


Private Sub ComboBox3_Change()
Dim Cnd As String, i As Integer
    If Not ComboBox3.Value = "" Then
        Cnd = "Type='" & ComboBox1.Value & "' AND Equipes='" & ComboBox3.Value & "'"
        ComboBox4.List = Sql.Get_ComboXL("Ressources", "Config", Cnd)
        ComboBox4.ListIndex = -1
        TextBox14 = ComboBox3.Value
        TextBox15 = ""
        TextBox16 = ""
    End If
End Sub


Private Sub ComboBox4_Change()
Dim lig As Variant
    If RscInterne Then
        If Not ComboBox4.Value = "" Then
            lig = Application.Match(ComboBox4.Value, Sheets("Config").Columns("F"), 0)
            TextBox15 = ComboBox4.Value
            If Not IsError(lig) Then TextBox16 = Sheets("Config").Cells(lig, "G") Else TextBox16 = ""
        End If
    End If
End Sub


' ***** Gestion des saisies ***********************************************************************
Private Sub TextBox2_DblClick(ByVal Cancel As MSForms.ReturnBoolean) '("Date de d|fffd|but")
    Calendrier.Affiche Me, "TextBox2", ActiveControl.Name
    Cancel = True
End Sub
Private Sub TextBox2_enter() '("Date de d|fffd|but")
    Calendrier.Affiche Me, "TextBox2", ActiveControl.Name
End Sub


Private Sub TextBox3_DblClick(ByVal Cancel As MSForms.ReturnBoolean) '("Date de fin")
    Calendrier.Affiche Me, "TextBox3", ActiveControl.Name
    Cancel = True
End Sub
Private Sub TextBox3_Enter() '("Date de fin")
    Calendrier.Affiche Me, "TextBox3", ActiveControl.Name
End Sub


Private Sub TextBox5_Change()   ' Nom
    TextBox5.Value = UCase(TextBox5.Value)
End Sub


Private Sub Textbox6_Change() 'Pr|fffd|nom
Dim S As String
    S = TextBox6.Text
    TextBox6.Text = UCase(Mid(S, 1, 1)) & Mid$(S, 2, Len(S))
    TextBox6.SelStart = Len(S)
End Sub



Private Sub Textbox8_keyPress(ByVal KeyAscii As MSForms.ReturnInteger)  ' CP
    If InStr("1234567890", Chr(KeyAscii)) = 0 Then KeyAscii = 0
End Sub


Private Sub Textbox9_Change()   ' Ville
    Me.TextBox9.Value = UCase(Me.TextBox9.Text)
End Sub


Private Sub Textbox10_keyPress(ByVal KeyAscii As MSForms.ReturnInteger)  ' T|fffd|l
    If InStr("+1234567890", Chr(KeyAscii)) = 0 Then KeyAscii = 0
End Sub
Private Sub Textbox10_Change()  ' T|fffd|l
    Me.TextBox10.Value = Saisie_Phone(Me.TextBox10.Value)
    If Left(Me.TextBox10.Value, 1) = "+" Then Me.TextBox10.MaxLength = 17
End Sub
 

Private Sub Textbox11_keyPress(ByVal KeyAscii As MSForms.ReturnInteger)  ' T|fffd|l Portable
    If InStr("+1234567890", Chr(KeyAscii)) = 0 Then KeyAscii = 0
End Sub
Private Sub TextBox11_Change()  ' T|fffd|l Portable
    Me.TextBox11.Value = Saisie_Phone(Me.TextBox11.Value)
    If Left(Me.TextBox11.Value, 1) = "+" Then Me.TextBox11.MaxLength = 17
End Sub
 

Private Sub Textbox18_keyPress(ByVal KeyAscii As MSForms.ReturnInteger)  ' Fax
    If InStr("+1234567890", Chr(KeyAscii)) = 0 Then KeyAscii = 0
End Sub
Private Sub Textbox18_Change()  ' Fax
    Me.TextBox18.Value = Saisie_Phone(Me.TextBox18.Value)
    If Left(Me.TextBox18.Value, 1) = "+" Then Me.TextBox18.MaxLength = 17
End Sub

   
Private Sub Textbox12_Change()   ' mail
Dim S As String
    S = Me.TextBox12.Value
    If InStr(1, S, "@") > 0 And InStr(1, S, ".") Then
        Me.TextBox12.ForeColor = RGB(0, 0, 255)
        Me.TextBox12.Font.Underline = True
    Else
        Me.TextBox12.ForeColor = &H80000008
        Me.TextBox12.Font.Underline = False
    End If
End Sub
Private Sub TextBox9_DblClick(ByVal Cancel As MSForms.ReturnBoolean)   ' mail
Dim S As String
    S = Me.TextBox9.Value
    If InStr(1, S, "@") > 0 And InStr(1, S, ".") > 0 Then
        ThisWorkbook.FollowHyperlink "mailto: " & Me.TextBox9.Value
    End If
End Sub

   
Private Sub TextBox11_DblClick(ByVal Cancel As MSForms.ReturnBoolean) ' Date
    Calendrier.Affiche Me, Me.TextBox11.Name, ActiveControl.Name
    Cancel = True
End Sub


Private Sub ComboBox5_Change()
Dim T As Variant

'("1 par an", "1 par semestre", "1 par trimestre", "tous les 2 mois", "tous les mois")
    T = Array(1, 2, 4, 6, 12)
    Me.TextBox20.Value = T(ComboBox5.ListIndex)
End Sub


Private Sub Remplissage()
Dim i As Integer, idx As Integer, bkclr As Long, j As Byte, S As String

    For i = 1 To lig
        idx = i + ScrollBar1.Value
        bkclr = IIf(idx Mod 2 = 0, &HEFEFEF, &HFFFFFF) 'gris/blanc
        
        If NbDim(T_Historic) > 1 And idx < UBound(T_Historic, 1) Then
            S = IIf(T_Historic(idx, 1) = "A", " Activit|fffd|", " Indisponibilit|fffd|")
            Controls("Label" & i + 100).Caption = S
            Controls("Label" & i + 100 + 1 * lig).Caption = T_Historic(idx, 2)
            Controls("Label" & i + 100 + 2 * lig).Caption = T_Historic(idx, 3)
            S = T_Historic(idx, 4) & vbCrLf & _
                IIf(T_Historic(idx, 5) = "00:00:00", "", Format(T_Historic(idx, 5), "hh:mm"))
            Controls("Label" & i + 100 + 3 * lig).Caption = S
            S = T_Historic(idx, 6) & vbCrLf & _
                IIf(T_Historic(idx, 7) = "00:00:00", "", Format(T_Historic(idx, 7), "hh:mm"))
            Controls("Label" & i + 100 + 4 * lig).Caption = S
        Else
            Controls("Label" & i + 100).Caption = ""
            Controls("Label" & i + 100 + 1 * lig).Caption = ""
            Controls("Label" & i + 100 + 2 * lig).Caption = ""
            Controls("Label" & i + 100 + 3 * lig).Caption = ""
            Controls("Label" & i + 100 + 4 * lig).Caption = ""
        End If
        
        For j = 0 To 4
            Controls("Label" & i + 100 + j * lig).BackColor = bkclr
        Next j
    Next i
End Sub


' ***** BOUTONS ***********************************************************************************
Private Sub CommandButton1_Click()  'Enregistrer
Dim H As String, T() As String, S As String, i As Byte, Id As Long

    If Me.TextBox4.Value = "" Or Me.TextBox5.Value = "" _
    Or Me.TextBox14.Value = "" Or Me.TextBox15.Value = "" Then GoTo incomplet
    
    H = "Id,Deb,Fin,Type,Nom,Prenom,Adr,CP,Ville,Tel,Port,Mail,Site,Equipe,Fonction,TriFct,Rq,Fax,Frq"
    If NewRsc Then
        S = TextBox1.Value
        S = S & "," & Esc_Dt(TextBox2.Value)
        S = S & "," & Esc_Dt(TextBox3.Value)
        For i = 4 To 18
            S = S & ",'" & Esc(Controls("TextBox" & i).Value) & "'"
        Next i
        S = S & ",'" & Esc(Controls("TextBox" & 20).Value) & "'"
        Sql.Insert_DB "Ressources", H, S
    Else
        T = Split(H, ",")
        S = T(1) & "=" & Esc_Dt(TextBox2.Value)
        S = S & "," & T(2) & "=" & Esc_Dt(TextBox3.Value)
        For i = 4 To 18
            S = S & "," & T(i - 1) & "='" & Esc(Controls("TextBox" & i).Value) & "'"
        Next i
        S = S & "," & T(18) & "='" & Esc(Controls("TextBox" & 20).Value) & "'"
        Sql.Update_DB "Ressources", S, "Id=" & TextBox1.Value
    End If
    
    ' Comp|fffd|tences
    Sql.Delete_DB "Compet", "Id_R=" & TextBox1.Value
    If Not TextBox19.Value = "" Then
        H = "Id,Id_R,Comp"
        T = Split(TextBox19.Value, ",")
        Id = Sql.Get_Max_Id("Compet", "Id") + 1
        For i = 0 To UBound(T)
            S = Id & "," & TextBox1.Value & ",'" & Trim(T(i)) & "'"
            Sql.Insert_DB "Compet", H, S
            Id = Id + 1
        Next i
    End If
    If RscInterne And Not UsfListOpen Then Usf_Accueil.TextBox2.Value = Usf_Accueil.TextBox2.Value & "a"
    If UsfListOpen Then Filtre_Ctct (tri)

    Unload Me
    Exit Sub
    
incomplet:
    MsgBox "V|fffd|rifier les saisies obligatoires!", , "RSC-Planner"
End Sub


Private Sub CommandButton2_Click()  ' Supprimer
Dim Repons As Variant

    Repons = MsgBox("Suppression de cette fiche!" & vbCrLf & vbCrLf & _
            "Etes-vous s|fffd|r de vouloir continuer?", vbOKCancel, "Suppression")
    If Repons = 1 Then
        Sql.Delete_DB "Ressources", "Id=" & TextBox1.Value
        Sql.Delete_DB "Compet", "Id_R=" & TextBox1.Value
        Sql.Delete_DB "Assoc", "Id_Re=" & TextBox1.Value
        Unload Me
    End If
End Sub


Private Sub CommandButton3_Click()  ' Sortie
    Unload Me
End Sub


Private Sub CommandButton4_Click()  ' Imprimer historique
Dim Ndf As String, NDF2 As String, Rep As String
Dim WordApp As Object, WordDoc As Object
Dim i As Byte, j As Byte, S As String, nb As Byte

    Me.Label100.Visible = True
    Ndf = ActiveWorkbook.Path & "\Historic.docx"
    Rep = ActiveWorkbook.Path & "\Listes\"
    
    If Not Exist_Fichier(Ndf) Then
        MsgBox "Document 'Historic.docx' manquant", vbExclamation, "RSC-PLANNER"
    Else
        If Not NewRsc Then
            If Not Exist_Rep(Rep) Then MkDir Rep
            NDF2 = Rep & TextBox5.Value & "_" & Format(Now(), "yyyymmdd_hhmm") & ".docx"
            
            On Error Resume Next
            If Fichier_IsOpen(Ndf) Then
               Set WordApp = GetObject(, "Word.Application")
               Set WordDoc = WordApp.Documents(Ndf)
            Else
                Set WordApp = CreateObject("Word.Application")
                Set WordDoc = WordApp.Documents.Open(Ndf, ReadOnly:=False)
            End If
    
            With WordApp
                .Visible = False
        
                With WordDoc.Tables(1)
                    .cell(2, 1).Range.InsertAfter TextBox5.Value & " " & TextBox6.Value
                                       
                    For i = 1 To UBound(T_Historic, 1) - 1
                        If i > 1 Then .Rows.Add
                        S = IIf(T_Historic(i, 1) = "A", " Activit|fffd|", " Indisponibilit|fffd|")
                        .cell(6 + i - 1, 1).Range.InsertAfter S
                        .cell(6 + i - 1, 2).Range.InsertAfter T_Historic(i, 2)
                        .cell(6 + i - 1, 3).Range.InsertAfter T_Historic(i, 3)
                        .cell(6 + i - 1, 4).Range.InsertAfter T_Historic(i, 4)
                        S = IIf(T_Historic(i, 5) = "00:00:00", "", Format(T_Historic(i, 5), "hh:mm"))
                        .cell(6 + i - 1, 5).Range.InsertAfter S
                        .cell(6 + i - 1, 6).Range.InsertAfter T_Historic(i, 6)
                        S = IIf(T_Historic(i, 7) = "00:00:00", "", Format(T_Historic(i, 7), "hh:mm"))
                        .cell(6 + i - 1, 7).Range.InsertAfter S
                    Next i
            
                End With
                
                nb = WordDoc.Paragraphs.Count
                WordDoc.Paragraphs(nb).Range.Select
                .Selection.EndKey Unit:=5
                .Selection.InsertParagraph
                WordDoc.Paragraphs(nb + 1).Range.Select
                WordDoc.Hyperlinks.Add Anchor:=.Selection.Range, _
                                       Address:="http://tatiak.canalblog.com/"
                
            End With
    
            WordDoc.Application.ActiveDocument.SaveAs NDF2
            WordApp.Visible = True ' WordApp.Application.Quit
            Set WordDoc = Nothing
            Set WordApp = Nothing
            MsgBox "Document word pr|fffd|t"
        Else
            MsgBox "Pas d'historique |fffd| imprimer", vbExclamation, "RSC-PLANNER"
        End If
    End If
    Me.Label100.Visible = False
End Sub


INQUEST-PP=macro
