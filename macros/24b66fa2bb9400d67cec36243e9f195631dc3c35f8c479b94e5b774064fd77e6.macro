Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnOpen, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnSave, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub btnOpen_Click()

    Dim sFile As String

    Dim i As Long

    Dim dic
    Dim s As String

    sFile = Application.GetOpenFilename("RAW |fffd||13c||fffd|(*.raw), *.raw", , , , False)

    If sFile <> "False" Then

        Me.Cells(FILE_ROW, FILE_COL) = sFile

        Clearsh Me
        LoadRAW_WC2 Me, sFile

    End If

End Sub

Private Sub btnSave_Click()

    Dim sFile As String

    sFile = Me.Cells(FILE_ROW, FILE_COL)
    sFile = Application.GetSaveAsFilename(sFile, "RAW |fffd||13c||fffd|(*.raw), *.raw")

    If sFile <> "False" Then

        SaveRAW_WC2 Me, sFile

        Me.Cells(FILE_ROW, FILE_COL) = sFile
        MsgBox "|fffd||fffd||fffd|"

    End If

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    If Target.Column >= NAME_COL And Target.Column <= NAME_MAX _
        And Target.Row >= DATA_ROW And Target.Row <= DATA_MAX Then
    If IsNumeric(Target.Text) Then
        Target.Interior.ColorIndex = Val(Target.Text) Mod 8 + 34
    Else
        Target.Interior.ColorIndex = xlNone
    End If
    End If

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnOpen, 8, 0, MSForms, CommandButton"
Attribute VB_Control = "btnSave, 9, 1, MSForms, CommandButton"
Option Explicit

Private Sub btnOpen_Click()

    Dim sFile As String

    sFile = Application.GetOpenFilename("BIN |fffd||13c||fffd|(*.bin), area*.bin", , , , False)

    If sFile <> "False" Then

        Me.Cells(FILE_ROW, FILE_COL) = sFile

        Clearsh Me
        LoadBIN_WC2 Me, sFile

    End If

End Sub

Private Sub btnSave_Click()

    Dim sFile As String

    sFile = Me.Cells(FILE_ROW, FILE_COL)
    sFile = Application.GetSaveAsFilename(sFile, "BIN |fffd||13c||fffd|(*.bin), area*.bin")

    If sFile <> "False" Then

        SaveBIN_WC2 Me, sFile

        Me.Cells(FILE_ROW, FILE_COL) = sFile
        MsgBox "|fffd||fffd||fffd|"

    End If

End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnOpen, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnSave, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub btnOpen_Click()

    Dim sFile As String

    sFile = Application.GetOpenFilename("BIN |fffd||13c||fffd|(*.bin), adjoin*.bin", , , , False)

    If sFile <> "False" Then

        Me.Cells(FILE_ROW, FILE_COL) = sFile

        Clearsh Me
        LoadADJ_WC2 Me, sFile

    End If

End Sub

Private Sub btnSave_Click()

    Dim sFile As String

    sFile = Me.Cells(FILE_ROW, FILE_COL)
    sFile = Application.GetSaveAsFilename(sFile, "BIN |fffd||13c||fffd|(*.bin), adjoin*.bin")

    If sFile <> "False" Then

        SaveADJ_WC2 Me, sFile

        Me.Cells(FILE_ROW, FILE_COL) = sFile
        MsgBox "|fffd||fffd||fffd|"

    End If

End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "btnOpen, 1, 0, MSForms, CommandButton"
Attribute VB_Control = "btnSave, 2, 1, MSForms, CommandButton"
Option Explicit

Private Sub btnOpen_Click()

    Dim sFile As String

    sFile = Application.GetOpenFilename("BIN |fffd||13c||fffd|(*.bin), battle*.bin", , , , False)

    If sFile <> "False" Then

        Me.Cells(FILE_ROW, FILE_COL) = sFile

        Clearsh Me
        LoadBTL_WC2 Me, sFile

    End If

End Sub

Private Sub btnSave_Click()

    Dim sFile As String

    sFile = Me.Cells(FILE_ROW, FILE_COL)
    sFile = Application.GetSaveAsFilename(sFile, "BIN |fffd||13c||fffd|(*.bin), battle*.bin")

    If sFile <> "False" Then

        SaveBTL_WC2 Me, sFile

        Me.Cells(FILE_ROW, FILE_COL) = sFile
        MsgBox "|fffd||fffd||fffd|"

    End If

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "mFunction"
Option Explicit
Public Const FILE_TMP = "\tmp.xml"

Public Const FILE_ROW = 1
Public Const FILE_COL = 3
Public Const NAME_ROW = 2
Public Const NAME_COL = 3
Public Const DATA_ROW = 3

Public Const NAME_MAX = 127
Public Const DATA_MAX = 32767
Public Const PROP_ROW = 3
Public Const PROP_COL = 1

Public Const ITEM_COL = 2

Public Const ri_Width = 1
Public Const ri_Height = 2

Public Const ri_Current = 4

Public Const ri_Data = 1
Public Const ri_DataSize = 125
Public Const ri_DataRate = 2

Public Const rd_Index = 1

Public Const bi_Number = 1

Public Const bd_Index = 1
Public Const bd_Unknown01 = 2
Public Const bd_Unknown02 = 3
Public Const bd_Unknown03 = 4
Public Const bd_Unknown04 = 5
Public Const bd_Unknown05 = 6
Public Const bd_Unknown06 = 7
Public Const bd_Unknown07 = 8
Public Const bd_Unknown08 = 9
Public Const bd_Unknown09 = 10
Public Const bd_Unknown10 = 11
Public Const bd_Unknown11 = 12

Public Const ai_Number = 1

Public Const ad_Index = 1
Public Const ad_Number = 2
Public Const ad_Indexs = 3

Public Const bd_Enabled = 2

Public Sub Clearsh(ByRef sh As Worksheet)

    sh.Range(sh.Cells(DATA_ROW, NAME_COL), sh.Cells(DATA_MAX, NAME_MAX)).ClearContents
    sh.Range(sh.Cells(PROP_ROW, ITEM_COL), sh.Cells(DATA_MAX, ITEM_COL)).ClearContents

End Sub

Public Sub LoadRAW_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim ri As RAWINFO
    Dim rd() As RAWDATA

    Dim i As Long
    Dim j As Long

    Dim lCount As Long

    Dim bUpdate As Boolean
    Dim p As Long
    Dim q As Long
    Dim c As Long
    Dim x As Long
    Dim y As Long
    Dim n As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

    Get #nFile, , ri

'ri.riWidth = 988
'ri.riWidth = 430

        sh.Cells(PROP_ROW - 0 + ri_Width, ITEM_COL) = ri.riWidth
        sh.Cells(PROP_ROW - 0 + ri_Height, ITEM_COL) = ri.riHeight

        lCount = ri.riWidth * ri.riHeight
    If lCount > 0 Then

        ReDim rd(lCount - 1)
        Get #nFile, , rd

        p = (ri.riWidth) \ ri_DataSize
        If ((ri.riWidth) Mod ri_DataSize) > 0 Then
            p = p + 1
        End If
        q = (ri.riHeight) \ ri_DataSize
        If ((ri.riHeight) Mod ri_DataSize) > 0 Then
            q = q + 1
        End If
        c = p * q - 1

        c = Application.InputBox("|fffd||fffd||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||763||fffd|" & vbCrLf _
            & "0 |fffd||fffd| " & c, , "0", , , , , 1)
        sh.Cells(PROP_ROW - 0 + ri_Current, ITEM_COL) = c

    bUpdate = Application.ScreenUpdating
    Application.ScreenUpdating = False

    For i = LBound(rd) To UBound(rd)

        x = (i Mod ri.riWidth) \ ri_DataSize
        y = (i / ri.riWidth) \ ri_DataSize
        n = x + y * p

        If n = c Then

        x = (i Mod ri.riWidth) Mod ri_DataSize
        y = (i \ ri.riWidth) Mod ri_DataSize
        sh.Cells(DATA_ROW - 0 + y, NAME_COL - 0 + x) = rd(i).rdIndex

        End If

    Next

'    Application.ScreenUpdating = True
    Application.ScreenUpdating = bUpdate

'    For i = LBound(rd) To UBound(rd) Step 38 * 20
'
'        For j = 0 To 11
'            rd(i + j) = i \ (38 * 20 * 2) + 0
'        Next
'        For j = 12 To 25
'            rd(i + j) = i \ (38 * 20 * 2) + 1
'        Next
'        For j = 25 To 37
'            rd(i + j) = i \ (38 * 20 * 2) + 2
'        Next
'
'    Next

    End If

    Close #nFile

End Sub

Public Sub SaveRAW_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim bi As BININFO
    Dim bd() As BINDATA

    Dim i As Long
    Dim j As Long

    Dim lCount As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

        bi.biNumber = Val(sh.Cells(PROP_ROW - 0 + bi_Number, ITEM_COL).Text)

        lCount = 0
        ReDim bd(lCount - 0)

    For i = DATA_ROW To DATA_MAX

        If sh.Cells(i, NAME_COL + bd_Unknown01).Text = "" Then Exit For

        lCount = lCount + 1
        ReDim Preserve bd(lCount - 1)

        bd(lCount - 1).bdUnknown01 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown01).Text)
        bd(lCount - 1).bdUnknown02 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown02).Text)
        bd(lCount - 1).bdUnknown03 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown03).Text)
        bd(lCount - 1).bdUnknown04 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown04).Text)
        bd(lCount - 1).bdUnknown05 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown05).Text)
        bd(lCount - 1).bdUnknown06 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown06).Text)
        bd(lCount - 1).bdUnknown07 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown07).Text)
        bd(lCount - 1).bdUnknown08 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown08).Text)
        bd(lCount - 1).bdUnknown09 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown09).Text)
        bd(lCount - 1).bdUnknown10 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown10).Text)
        bd(lCount - 1).bdUnknown11 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown11).Text)
    
    Next

        bi.biNumber = lCount

        Put #nFile, , bi

        lCount = bi.biNumber
    If lCount > 0 Then
        Put #nFile, , bd
    End If

    Close #nFile

End Sub

Public Sub LoadBIN_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim bi As BININFO
    Dim bd() As BINDATA

    Dim i As Long
    Dim j As Long

    Dim lCount As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

    Get #nFile, , bi

        sh.Cells(PROP_ROW - 0 + bi_Number, ITEM_COL) = bi.biNumber

        lCount = bi.biNumber
    If lCount > 0 Then

        ReDim bd(lCount - 1)
        Get #nFile, , bd

    For i = LBound(bd) To UBound(bd)
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Index) = i
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown01) = bd(i).bdUnknown01
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown02) = bd(i).bdUnknown02
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown03) = bd(i).bdUnknown03
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown04) = bd(i).bdUnknown04
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown05) = bd(i).bdUnknown05
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown06) = bd(i).bdUnknown06
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown07) = bd(i).bdUnknown07
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown08) = bd(i).bdUnknown08
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown09) = bd(i).bdUnknown09
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown10) = bd(i).bdUnknown10
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Unknown11) = bd(i).bdUnknown11
    Next

    End If

    Close #nFile

End Sub

Public Sub SaveBIN_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim bi As BININFO
    Dim bd() As BINDATA

    Dim i As Long
    Dim j As Long

    Dim lCount As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

        bi.biNumber = Val(sh.Cells(PROP_ROW - 0 + bi_Number, ITEM_COL).Text)

        lCount = 0
        ReDim bd(lCount - 0)

    For i = DATA_ROW To DATA_MAX

        If sh.Cells(i, NAME_COL - 1 + bd_Unknown01).Text = "" Then Exit For

        lCount = lCount + 1
        ReDim Preserve bd(lCount - 1)

        bd(lCount - 1).bdUnknown01 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown01).Text)
        bd(lCount - 1).bdUnknown02 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown02).Text)
        bd(lCount - 1).bdUnknown03 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown03).Text)
        bd(lCount - 1).bdUnknown04 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown04).Text)
        bd(lCount - 1).bdUnknown05 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown05).Text)
        bd(lCount - 1).bdUnknown06 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown06).Text)
        bd(lCount - 1).bdUnknown07 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown07).Text)
        bd(lCount - 1).bdUnknown08 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown08).Text)
        bd(lCount - 1).bdUnknown09 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown09).Text)
        bd(lCount - 1).bdUnknown10 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown10).Text)
        bd(lCount - 1).bdUnknown11 = Val(sh.Cells(i, NAME_COL - 1 + bd_Unknown11).Text)
    
    Next

        bi.biNumber = lCount

        Put #nFile, , bi

        lCount = bi.biNumber
    If lCount > 0 Then
        Put #nFile, , bd
    End If

    Close #nFile

End Sub

Public Sub LoadADJ_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim ai As ADJINFO
    Dim ad() As ADJDATA

    Dim i As Long
    Dim j As Long
    Dim n As Long

    Dim lCount As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

    Get #nFile, , ai

        sh.Cells(PROP_ROW - 0 + bi_Number, ITEM_COL) = ai.aiNumber

        lCount = ai.aiNumber
    If lCount > 0 Then

        ReDim ad(lCount - 1)
        Get #nFile, , ad

    For i = LBound(ad) To UBound(ad)
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + ad_Index) = i
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + ad_Number) = ad(i).adNumber

        n = UBound(ad(i).adIndex)
        If n > ad(i).adNumber - 1 Then
            n = ad(i).adNumber - 1
        End If

    For j = LBound(ad(i).adIndex) To n
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + ad_Indexs + j) = ad(i).adIndex(j)
    Next

    Next

    End If

    Close #nFile

End Sub

Public Sub SaveADJ_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim ai As ADJINFO
    Dim ad() As ADJDATA

    Dim i As Long
    Dim j As Long
    Dim n As Long

    Dim lCount As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

        ai.aiNumber = Val(sh.Cells(PROP_ROW - 0 + ai_Number, ITEM_COL).Text)

        lCount = 0
        ReDim ad(lCount - 0)

    For i = DATA_ROW To DATA_MAX

        If sh.Cells(i, NAME_COL - 1 + ad_Indexs).Text = "" Then Exit For

        lCount = lCount + 1
        ReDim Preserve ad(lCount - 1)

        n = 0

    For j = LBound(ad(lCount - 1).adIndex) To UBound(ad(lCount - 1).adIndex)

        If sh.Cells(i, NAME_COL - 1 + ad_Indexs + j).Text = "" Then Exit For

        ad(lCount - 1).adIndex(j) = Val(sh.Cells(i, NAME_COL - 1 + ad_Indexs + j).Text)

    Next

        ad(lCount - 1).adNumber = j

    Next

        ai.aiNumber = lCount

        Put #nFile, , ai

        lCount = ai.aiNumber
    If lCount > 0 Then
        Put #nFile, , ad
    End If

    Close #nFile

End Sub

Public Sub LoadBTL_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim bi As BTLINFO
    Dim bd() As BTLDATA

    Dim i As Long
    Dim j As Long

    Dim lCount As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

    Get #nFile, , bi

        sh.Cells(PROP_ROW - 0 + bi_Number, ITEM_COL) = bi.biNumber

        lCount = bi.biNumber
    If lCount > 0 Then

        ReDim bd(lCount - 1)
        Get #nFile, , bd

    For i = LBound(bd) To UBound(bd)
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Index) = i
        sh.Cells(DATA_ROW - 0 + i, NAME_COL - 1 + bd_Enabled) = bd(i).bdEnabled
    Next

    End If

    Close #nFile

End Sub

Public Sub SaveBTL_WC2(ByRef sh As Worksheet, ByVal sFile As String)

    Dim nFile As Integer

    Dim bi As BTLINFO
    Dim bd() As BTLDATA

    Dim i As Long
    Dim j As Long

    Dim lCount As Long

    nFile = FreeFile
    Open sFile For Binary As #nFile

        bi.biNumber = Val(sh.Cells(PROP_ROW - 0 + bi_Number, ITEM_COL).Text)

        lCount = 0
        ReDim bd(lCount - 0)

    For i = DATA_ROW To DATA_MAX

        If sh.Cells(i, NAME_COL - 1 + bd_Enabled).Text = "" Then Exit For

        lCount = lCount + 1
        ReDim Preserve bd(lCount - 1)

        bd(lCount - 1).bdEnabled = Val(sh.Cells(i, NAME_COL - 1 + bd_Enabled).Text)
    
    Next

        bi.biNumber = lCount

        Put #nFile, , bi

        lCount = bi.biNumber
    If lCount > 0 Then
        Put #nFile, , bd
    End If

    Close #nFile

End Sub
Attribute VB_Name = "mTypeBIN"
Option Explicit

Public Type BININFO
    biNumber As Long
End Type

Public Type BINDATA
    bdUnknown01 As Long
    bdUnknown02 As Long
    bdUnknown03 As Long
    bdUnknown04 As Long
    bdUnknown05 As Long
    bdUnknown06 As Long
    bdUnknown07 As Long
    bdUnknown08 As Long
    bdUnknown09 As Long
    bdUnknown10 As Long
    bdUnknown11 As Long
End Type

Public Type ADJINFO
    aiNumber As Long
End Type

Public Type ADJDATA
    adNumber As Long
    adIndex(15) As Long
End Type

Public Type BTLINFO
    biNumber As Long
End Type

Public Type BTLDATA
    bdEnabled As Byte
End Type

Attribute VB_Name = "mTypeRAW"
Option Explicit

Public Type RAWINFO
    riWidth As Long
    riHeight As Long
End Type

Public Type RAWDATA
    rdIndex As Integer
End Type


INQUEST-PP=macro
