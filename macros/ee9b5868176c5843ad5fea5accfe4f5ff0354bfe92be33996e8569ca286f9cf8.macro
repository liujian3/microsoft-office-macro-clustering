Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OptionButton1, 132, 0, MSForms, OptionButton"
Attribute VB_Control = "CommandButton2, 112, 1, MSForms, CommandButton"
Attribute VB_Control = "OptionButton2, 133, 2, MSForms, OptionButton"
Attribute VB_Control = "CommandButton1, 274, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 275, 4, MSForms, CommandButton"
Private Sub CommandButton1_Click()
Walid
MsgBox "Nie stwierdzono braku obowi|fffd|zkowych danych w podanym zakresie.", vbInformation, ""
End Sub

Private Sub CommandButton2_Click()
If Val(Application.Version) < 11 Then
MsgBox "Wysy|fffd|ka do systemu e-Deklaracje mo|fffd|liwa jest dla wersji Excel 2003 i nowszych.", 64, "Uwaga"
End
End If
If [Korekta] = 2 And Sheets("Podatnicy").Range("C4") > Sheets("Podatnicy").Range("C3") Then
MsgBox "Korekt|fffd| informacji PIT-11 mo|fffd|na wysy|fffd|a|fffd| do e-Deklaracje wy|fffd||fffd|cznie pojedynczo.", 64, "Wysy|fffd|ka do e-Deklaracje przerwana"
End
End If
Walid
Application.ScreenUpdating = False
eDeklaracjaUBDZ.Show
End Sub

Private Sub CommandButton3_Click()
Kolumny.Show
End Sub

Private Sub OptionButton1_Click()
Application.EnableEvents = False
Sheets("P|fffd|atnik").Range("C7") = 1
[C3].Select
Application.EnableEvents = True
End Sub

Private Sub OptionButton2_Click()
Application.EnableEvents = False
Sheets("P|fffd|atnik").Range("C7") = 2
[C3].Select
Application.EnableEvents = True
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If Target.Address = Cells(ActiveCell.Row, 2).Address And ActiveCell = "" Then Fraza.Show
If ActiveWorkbook.Colors(19) = RGB(255, 255, 255) Then
ActiveWorkbook.Colors(19) = RGB(255, 255, 150)
End If
End Sub

Attribute VB_Name = "Arkusz4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OptionButton3, 5, 2, MSForms, OptionButton"
Attribute VB_Control = "OptionButton4, 6, 3, MSForms, OptionButton"
Private Sub OptionButton3_Click()
[C8] = 1
End Sub

Private Sub OptionButton4_Click()
[C8] = 2
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
Application.ScreenUpdating = False
Application.EnableEvents = False
If Not Target.HasFormula And Not IsNumeric(Target.Value) Then Target.Value = UCase(Target.Value)
ActiveSheet.Unprotect
If Target.Row = 8 Then
If Range("C8") = 1 Then
Range("C9").Select
    Selection.Interior.ColorIndex = xlNone
    Selection.Locked = False
    Selection.FormulaHidden = False
Range("C10:C12").Select
Selection.ClearContents
     With Selection.Interior
        .ColorIndex = 48
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    Selection.Locked = True
    Selection.FormulaHidden = False
Range("C9").Select
Else
Range("C10:C12").Select
    Selection.Interior.ColorIndex = xlNone
    Selection.Locked = False
    Selection.FormulaHidden = False
Range("C9").Select
Selection.ClearContents
     With Selection.Interior
        .ColorIndex = 48
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
    End With
    Selection.Locked = True
    Selection.FormulaHidden = False
Range("C10").Select
End If
End If
ActiveSheet.Protect
Application.EnableEvents = True
End Sub

Attribute VB_Name = "Arkusz6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 2, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 3, 1, MSForms, CommandButton"
Private Sub CommandButton1_Click()
ActiveWindow.SelectedSheets.PrintOut
End Sub

Private Sub CommandButton2_Click()
Dim Nplik As String
If Range("D6") <> "Ministerstwo Finans|fffd|w" Then
MsgBox "Testowe UPO jest bezu|fffd|yteczne i nie jest zapisywane do pliku pdf.", vbInformation, "e-Deklaracje"
End
End If
If Val(Application.Version) < 12 Then
MsgBox "Zapisywanie UPO do pliku pdf mo|fffd|liwe jest tylko od wersji 2007 Excela.", vbCritical, "Uwaga - potrzebny Excel 2007 lub nowszy"
End
End If
Nplik = "UPO_" & [E20] & "_" & [F26] & ".pdf"
Nplik = Replace(Nplik, ":", ".")
Nplik = ThisWorkbook.path & "\" & Nplik
ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:=Nplik _
        , Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False
MsgBox "UPO zapisano do pliku " & Chr(13) & Chr(13) & Nplik, vbInformation, "UPO w pdf"
End Sub


Attribute VB_Name = "Arkusz8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ixx6, 1, 0, MSForms, Image"
Attribute VB_Control = "ikk3, 2, 1, MSForms, Image"
Attribute VB_Control = "ikk1, 4, 3, MSForms, Image"
Attribute VB_Control = "ixx1, 5, 4, MSForms, Image"
Attribute VB_Control = "ixx2, 6, 5, MSForms, Image"
Attribute VB_Control = "ixx4, 7, 6, MSForms, Image"
Attribute VB_Control = "ixx7, 8, 7, MSForms, Image"
Attribute VB_Control = "ixx8, 9, 8, MSForms, Image"
Attribute VB_Control = "ixx9, 10, 9, MSForms, Image"
Attribute VB_Control = "ixx10, 11, 10, MSForms, Image"
Attribute VB_Control = "Image2, 186, 11, MSForms, Image"
Attribute VB_Control = "ikk2, 15, 13, MSForms, Image"
Attribute VB_Control = "ikk4, 16, 14, MSForms, Image"
Attribute VB_Control = "ikk7, 17, 15, MSForms, Image"
Attribute VB_Control = "ikk8, 18, 16, MSForms, Image"
Attribute VB_Control = "ikk9, 19, 17, MSForms, Image"
Attribute VB_Control = "ikk10, 20, 18, MSForms, Image"
Attribute VB_Control = "Image1, 185, 20, MSForms, Image"
Attribute VB_Control = "CommandButton2, 23, 21, MSForms, CommandButton"
Attribute VB_Control = "ixx3, 26, 22, MSForms, Image"
Attribute VB_Control = "ikk5, 27, 23, MSForms, Image"
Attribute VB_Control = "ixx5, 28, 24, MSForms, Image"
Attribute VB_Control = "ikk6, 29, 25, MSForms, Image"
Private Sub CommandButton2_Click()
If ActiveWorkbook.Colors(15) = RGB(234, 234, 234) Then
    ActiveWorkbook.Colors(15) = RGB(255, 255, 255)
    ActiveWorkbook.Colors(16) = RGB(255, 255, 255)
    CommandButton2.Caption = "W|fffd||fffd|cz t|fffd|o"
Else
    ActiveWorkbook.Colors(15) = RGB(234, 234, 234)
    ActiveWorkbook.Colors(16) = RGB(191, 191, 191)
    CommandButton2.Caption = "Wy|fffd||fffd|cz t|fffd|o"
End If
End Sub
Attribute VB_Name = "Fraza"
Attribute VB_Base = "0{74E0A3B3-E040-470A-A23B-A0C1B0AD2A22}{3A95BF2C-BFA8-4F47-992C-DA05C1194691}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim Fraz() As Variant

Private Sub Anuluj_Click()
Unload Me
End Sub

Private Sub ComboBox1_Change()
With Me
.ComboBox1.DropDown
.ComboBox1.List = Filter(Fraz, .ComboBox1.Value, True, vbTextCompare)
End With
End Sub

Private Sub ComboBox1_Click()
ActiveCell = Me.ComboBox1.List
Unload Me
End Sub

Private Sub UserForm_Initialize()
With ActiveSheet
Fraz = Application.Transpose(Sheets("Instrukcja").Range("US").Value)
Me.ComboBox1.List = Fraz
End With
End Sub




Attribute VB_Name = "Funkcje"

Option Private Module
#If Win64 Then
Declare PtrSafe Function apiShowWindow Lib "user32" Alias "ShowWindow" (ByVal hwnd As Long, ByVal nCmdSHow As Long) As Long
#Else
Declare Function apiShowWindow Lib "user32" Alias "ShowWindow" (ByVal hwnd As Long, ByVal nCmdSHow As Long) As Long
#End If
Const SW_SHOWMAXIMIZED = 3

Sub ShowWindow()
Dim IE As Object
    Set IE = CreateObject("InternetExplorer.Application")
    IE.Navigate Nplik
    apiShowWindow IE.hwnd, 3
End Sub

Function XSDValid(strXML As String) As Boolean
    Dim xmlDoc As Object
    Dim objSchema As Object
    Dim objErr As Object
    Dim Que As Integer
    Dim Wzor
    On Error GoTo handleCancel
    Application.EnableCancelKey = xlErrorHandler

    Set objSchema = CreateObject("MSXML2.XMLSchemaCache.6.0")
    objSchema.Add "http://crd.gov.pl/wzor/2018/12/06/6319/", _
    "http://crd.gov.pl/wzor/2018/12/06/6319/schemat.xsd"
   
handleCancel:
    If Abs(Err) > 18 Then
    MsgBox "Wyst|fffd|pi|fffd| problem z pobraniem schematu XSD." & vbCrLf & _
            "" & vbCrLf & vbCrLf & _
            "Mo|fffd|liwy brak dost|fffd|pu do strony Ministerstwa Finans|fffd|w", 64, ""
    Application.StatusBar = False
    Exit Function
    End If
    If Err = 18 Then
    MsgBox "Sprawdzanie zgodno|fffd|ci ze schematem XSD zosta|fffd|o przerwane.", 64, ""
    Application.StatusBar = False
    Exit Function
    End If
    
    Set xmlDoc = CreateObject("Msxml2.DOMDocument.6.0")
    With xmlDoc
        .setProperty "ProhibitDTD", False
        .async = False
        .validateOnParse = True
        .resolveExternals = False
        .Load strXML
        Set .Schemas = objSchema
    End With
               
    Set objErr = xmlDoc.validate()
    If objErr.errorCode <> 0 Then
    Wzor = objErr.reason
    Que = MsgBox("B|fffd||fffd|d: " & Wzor & Chr(13) & Chr(13) & "Czy usun|fffd||fffd| b|fffd||fffd|dny plik:" & vbCrLf & Nplik, 36, "B|fffd||fffd|d")
    If Que = 6 Then Kill Nplik
    Application.StatusBar = False
    End
    End If

End Function

Function XSDValidUBD(strXML As String) As Boolean
    Dim xmlDoc As Object
    Dim objSchema As Object
    Dim objErr As Object
    Dim Que As Integer
    Dim Wzor
    On Error GoTo handleCancel
    Application.EnableCancelKey = xlErrorHandler
    Set objSchema = CreateObject("MSXML2.XMLSchemaCache.6.0")
    objSchema.Add "http://crd.gov.pl/wzor/2018/12/10/6357/", _
    "http://crd.gov.pl/wzor/2018/12/10/6357/schemat.xsd"
   
handleCancel:
    If Abs(Err) > 18 Then
    MsgBox "Wyst|fffd|pi|fffd| problem z pobraniem schematu XSD." & vbCrLf & _
            "" & vbCrLf & vbCrLf & _
            "Mo|fffd|liwy brak dost|fffd|pu do strony Ministerstwa Finans|fffd|w", 64, ""
    Application.StatusBar = False
    Exit Function
    End If
    If Err = 18 Then
    MsgBox "Sprawdzanie zgodno|fffd|ci ze schematem XSD zosta|fffd|o przerwane.", 64, ""
    Application.StatusBar = False
    Exit Function
    End If
    
    Set xmlDoc = CreateObject("Msxml2.DOMDocument.6.0")
    With xmlDoc
        .setProperty "ProhibitDTD", False
        .async = False
        .validateOnParse = True
        .resolveExternals = False
        .Load strXML
        Set .Schemas = objSchema
    End With
               
    Set objErr = xmlDoc.validate()
    If objErr.errorCode <> 0 Then
    Wzor = objErr.reason
    Que = MsgBox("B|fffd||fffd|d: " & Wzor & Chr(13) & Chr(13) & "Czy usun|fffd||fffd| b|fffd||fffd|dny plik:" & vbCrLf & Nplik, 36, "B|fffd||fffd|d")
    If Que = 6 Then Kill Nplik
    Application.StatusBar = False
    End
    End If

End Function


Public Function UT(ByVal sStr As String)
If IsNumeric(sStr) Then sStr = Replace(Format(sStr, "0.00"), ",", ".")
If sStr = "" Then sStr = "0.00"
UT = sStr
End Function

Public Function UL(ByVal Nmr As Double)
If Nmr = 0 Then
UL = "0"
Else
UL = Round(Nmr, 0)
End If
End Function

Public Function CzyPESEL(sPES As Variant) As Boolean
Dim iWagi As Variant, i As Integer, iSumaKon As Integer
Application.Volatile
If Len(sPES) = 10 Then sPES = "0" & sPES
iWagi = Array(1, 3, 7, 9, 1, 3, 7, 9, 1, 3)
sPES = Replace(sPES, "-", "")
sPES = Replace(sPES, " ", "")
If Len(sPES) = 11 Then
For i = LBound(iWagi) To UBound(iWagi)
    iSumaKon = iSumaKon + (iWagi(i) * CInt(Mid(sPES, i + 1, 1)))
Next i
iSumaKon = 10 - iSumaKon Mod 10
If iSumaKon = 10 Then iSumaKon = 0
If iSumaKon = Right(sPES, 1) Then
CzyPESEL = True
Else
CzyPESEL = False
End If
End If
End Function

Public Function CzyNIP(sNIP As String) As Boolean
Dim iWagi As Variant, i As Integer, iSumaKon As Integer
Application.Volatile
iWagi = Array(6, 5, 7, 2, 3, 4, 5, 6, 7)
sNIP = Replace(sNIP, "-", "")
sNIP = Replace(sNIP, " ", "")
If Len(sNIP) = 10 Then
For i = LBound(iWagi) To UBound(iWagi)
    iSumaKon = iSumaKon + (iWagi(i) * CInt(Mid(sNIP, i + 1, 1)))
Next i
iSumaKon = iSumaKon Mod 11
If iSumaKon = Right(sNIP, 1) Then
CzyNIP = True
Else
CzyNIP = False
End If
End If
If sNIP = Empty Then CzyNIP = True
End Function

Public Function CzyREGON(sREG As String) As Boolean
Dim iWag As Variant, iWagi As Variant, i As Integer, iSumaKon As Integer
Application.Volatile
iWag = Array(2, 3, 4, 5, 6, 7)
iWagi = Array(8, 9, 2, 3, 4, 5, 6, 7)
sREG = Replace(sREG, " ", "")
If Len(sREG) > 9 Then
i = InStr(1, sREG, "-")
If i > 9 Then
sREG = Mid(sREG, 1, i - 1)
Else
Exit Function
End If
End If
If Len(sREG) = 7 Then
For i = LBound(iWag) To UBound(iWag)
    iSumaKon = iSumaKon + (iWag(i) * CInt(Mid(sREG, i + 1, 1)))
Next i
End If
If Len(sREG) = 9 Then
For i = LBound(iWagi) To UBound(iWagi)
    iSumaKon = iSumaKon + (iWagi(i) * CInt(Mid(sREG, i + 1, 1)))
Next i
End If
iSumaKon = iSumaKon Mod 11
If iSumaKon = Right(sREG, 1) Then
CzyREGON = True
Else
CzyREGON = False
End If
End Function

Public Function DATAA(ByVal Dat As String)
Dim Rok, Mc, Dz
  Rok = Right(Dat, 4)
  If Len(Dat) < 8 Then
  Mc = Mid(Dat, 2, 2)
  Dz = "0" & Left(Dat, 1)
  Else
  Mc = Mid(Dat, 3, 2)
  Dz = Left(Dat, 2)
  End If
DATAA = Rok & "-" & Mc & "-" & Dz
End Function

Public Function DATAB(ByVal Dat As String)
Dim Rok, Mc, Dz
  Rok = Right(Dat, 4)
  If Len(Dat) < 8 Then
  Mc = Mid(Dat, 2, 2)
  Dz = "0" & Left(Dat, 1)
  Else
  Mc = Mid(Dat, 3, 2)
  Dz = Left(Dat, 2)
  End If
DATAB = Dz & "-" & Mc & "-" & Rok
End Function

Function ZN(str)
Dim Za As String, Zb As String
Za = Replace(str, "&", "&amp;")
Zb = Replace(Za, "<", "&lt;")
ZN = Replace(Zb, ">", "&gt;")
End Function

Public Function Base64_Encode(text As String) As String
Dim arrData() As Byte
arrData = StrConv(text, vbFromUnicode)
Dim objXML As MSXML2.DOMDocument
Dim objNode As MSXML2.IXMLDOMElement
    Set objXML = New MSXML2.DOMDocument
    Set objNode = objXML.createElement("b64")
    objNode.DataType = "bin.base64"
    objNode.nodeTypedValue = arrData
    Base64_Encode = objNode.text
Set objNode = Nothing
Set objXML = Nothing
End Function

Public Function Polz(Tekst As String) As String
Dim Encje As Variant, Plit As Variant
Dim a As Integer
Encje = Array("&#x105;", "&#x107;", "&#x119;", "&#x142;", "&#x144;", "&#xF3;", "&#x15b;", "&#x17a;", "&#x17c;", "&#x104;", "&#x106;", "&#x118;", "&#x141;", "&#x143;", "&#xf2;", "&#x15a;", "&#x179;", "&#x17b;", "&#x2013;")
Plit = Array("|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", " ")
    For a = 1 To 19
         Tekst = Replace(Tekst, Encje(a - 1), Plit(a - 1))
     Next
Polz = Tekst
End Function

Public Function FileToSHA256(sFileName As String, Optional bBase64 As Boolean = False) As String
Dim enc, bytes, outstr As String, pos As Integer
    Set enc = CreateObject("System.Security.Cryptography.SHA256Managed")
    bytes = GetFileBytes(sFileName)
    bytes = enc.ComputeHash_2((bytes))
    outstr = ConvToHexString(bytes)
    FileToSHA256 = outstr
    Set enc = Nothing
End Function

Private Function GetFileBytes(ByVal path As String) As Byte()
    Dim lngFileNum As Long, bytRtnVal() As Byte, bTest
    lngFileNum = FreeFile
    If LenB(Dir(path)) Then
        Open path For Binary Access Read As lngFileNum
        ReDim bytRtnVal(LOF(lngFileNum) - 1&) As Byte
        Get lngFileNum, , bytRtnVal
        Close lngFileNum
    Else
        Err.Raise 53
    End If
    GetFileBytes = bytRtnVal
    Erase bytRtnVal
End Function

Function ConvToHexString(vIn As Variant) As Variant
Dim oD As Object
Set oD = CreateObject("MSXML2.DOMDocument")
  With oD
    .loadXML "<root />"
    .documentElement.DataType = "bin.Hex"
    .documentElement.nodeTypedValue = vIn
  End With
ConvToHexString = Replace(oD.documentElement.text, vbLf, "")
Set oD = Nothing
End Function



Attribute VB_Name = "Kolumny"
Attribute VB_Base = "0{FFB33E9C-2C2B-4612-9110-1FD26886961D}{EB0FDEB7-2AA5-41BF-AEF4-CF68E6C165A4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CommandButton1_Click()
CheckBox1.Value = False
CheckBox2.Value = False
CheckBox3.Value = False
CheckBox4.Value = False
CheckBox5.Value = False
CheckBox6.Value = False
CheckBox7.Value = False
CheckBox8.Value = False
CheckBox9.Value = False
End Sub

Private Sub CommandButton3_Click()
Box1.Value = False
Box2.Value = False
Box3.Value = False
Box4.Value = False
Box5.Value = False
Box6.Value = False
Box7.Value = False
Box8.Value = False
Box9.Value = False
Box10.Value = False
Box11.Value = False
Box12.Value = False
Box13.Value = False
Box14.Value = False
Box15.Value = False
Box16.Value = False
Box17.Value = False
Box18.Value = False
End Sub

Private Sub CommandButton4_Click()
Application.ScreenUpdating = False
ActiveSheet.Unprotect

If Box1.Value = True Then
Columns(19).EntireColumn.Hidden = True
Else
Columns(19).EntireColumn.Hidden = False
End If
If Box2.Value = True Then
Columns(20).EntireColumn.Hidden = True
Else
Columns(20).EntireColumn.Hidden = False
End If
If Box3.Value = True Then
Columns("U:AA").EntireColumn.Hidden = True
Else
Columns("U:AA").EntireColumn.Hidden = False
End If
If Box4.Value = True Then
Columns("AB:AH").EntireColumn.Hidden = True
Else
Columns("AB:AH").EntireColumn.Hidden = False
End If
If Box5.Value = True Then
Columns("AI:AL").EntireColumn.Hidden = True
Else
Columns("AI:AL").EntireColumn.Hidden = False
End If
If Box6.Value = True Then
Columns("AM:AP").EntireColumn.Hidden = True
Else
Columns("AM:AP").EntireColumn.Hidden = False
End If
If Box7.Value = True Then
Columns("AQ:AT").EntireColumn.Hidden = True
Else
Columns("AQ:AT").EntireColumn.Hidden = False
End If
If Box8.Value = True Then
Columns("AU:AX").EntireColumn.Hidden = True
Else
Columns("AU:AX").EntireColumn.Hidden = False
End If
If Box9.Value = True Then
Columns("AY:BC").EntireColumn.Hidden = True
Else
Columns("AY:BC").EntireColumn.Hidden = False
End If
If Box10.Value = True Then
Columns("BD:BH").EntireColumn.Hidden = True
Else
Columns("BD:BH").EntireColumn.Hidden = False
End If
If Box11.Value = True Then
Columns("BI:BK").EntireColumn.Hidden = True
Else
Columns("BI:BK").EntireColumn.Hidden = False
End If
If Box12.Value = True Then
Columns("BL:BN").EntireColumn.Hidden = True
Else
Columns("BL:BN").EntireColumn.Hidden = False
End If
If Box13.Value = True Then
Columns("BO:BV").EntireColumn.Hidden = True
Else
Columns("BO:BV").EntireColumn.Hidden = False
End If
If Box14.Value = True Then
Columns(75).EntireColumn.Hidden = True
Else
Columns(75).EntireColumn.Hidden = False
End If
If Box15.Value = True Then
Columns(76).EntireColumn.Hidden = True
Else
Columns(76).EntireColumn.Hidden = False
End If
If Box16.Value = True Then
Columns(77).EntireColumn.Hidden = True
Else
Columns(77).EntireColumn.Hidden = False
End If
If Box17.Value = True Then
Columns("BZ:CB").EntireColumn.Hidden = True
Else
Columns("BZ:CB").EntireColumn.Hidden = False
End If
If Box18.Value = True Then
Columns(81).EntireColumn.Hidden = True
Else
Columns(81).EntireColumn.Hidden = False
End If

'xxxxxxxxxxxx
If CheckBox1.Value = True Then
Columns(11).EntireColumn.Hidden = True
Else
Columns(11).EntireColumn.Hidden = False
End If

If CheckBox2.Value = True Then
Columns(12).EntireColumn.Hidden = True
Else
Columns(12).EntireColumn.Hidden = False
End If

If CheckBox3.Value = True Then
Columns(13).EntireColumn.Hidden = True
Else
Columns(13).EntireColumn.Hidden = False
End If

If CheckBox4.Value = True Then
Columns(14).EntireColumn.Hidden = True
Else
Columns(14).EntireColumn.Hidden = False
End If

If CheckBox5.Value = True Then
Columns(15).EntireColumn.Hidden = True
Else
Columns(15).EntireColumn.Hidden = False
End If

If CheckBox6.Value = True Then
Columns(16).EntireColumn.Hidden = True
Else
Columns(16).EntireColumn.Hidden = False
End If

If CheckBox7.Value = True Then
Columns(17).EntireColumn.Hidden = True
Else
Columns(17).EntireColumn.Hidden = False
End If

If CheckBox8.Value = True Then
Columns(18).EntireColumn.Hidden = True
Else
Columns(18).EntireColumn.Hidden = False
End If

If CheckBox9.Value = True Then
Columns("G:J").EntireColumn.Hidden = True
Else
Columns("G:J").EntireColumn.Hidden = False
End If

ActiveSheet.Protect
Unload Me
End Sub

Private Sub CommandButton5_Click()
Unload Me
End Sub


Private Sub UserForm_Initialize()
Dim Box(81) As Boolean
For a = 1 To 81
If Columns(a).EntireColumn.Hidden = True Then
    Box(a) = True
Else
    Box(a) = False
End If
Next

Box1.Value = Box(19)
Box2.Value = Box(20)
Box3.Value = Box(21)
Box4.Value = Box(28)
Box5.Value = Box(35)
Box6.Value = Box(39)
Box7.Value = Box(43)
Box8.Value = Box(47)
Box9.Value = Box(51)
Box10.Value = Box(56)
Box11.Value = Box(61)
Box12.Value = Box(64)
Box13.Value = Box(67)
Box14.Value = Box(75)
Box15.Value = Box(76)
Box16.Value = Box(77)
Box17.Value = Box(78)
Box18.Value = Box(81)

CheckBox1.Value = Box(11)
CheckBox2.Value = Box(12)
CheckBox3.Value = Box(13)
CheckBox4.Value = Box(14)
CheckBox5.Value = Box(15)
CheckBox6.Value = Box(16)
CheckBox7.Value = Box(17)
CheckBox8.Value = Box(18)
CheckBox9.Value = Box(7)
End Sub


Attribute VB_Name = "Koperty"
Sub Koperty()
Attribute Koperty.VB_ProcData.VB_Invoke_Func = "A\n14"
a = InputBox("Login", "")
If a = [A!A1] Then
Sheets("A").Cells(9, 9) = InputBox("NIP", "")
Sheets("P|fffd|atnik").Cells(5, 3) = Sheets("A").Cells(9, 9)
Else
MsgBox "B|fffd||fffd|d!", 16, ""
End If
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Wydruk"
Option Private Module

Sub Drukuj()
Dim Dane(1000, 85), Plat(91)
Dim OdNr, DoNr, Kopia, a, b, Dpl, Den As String

Sheets("Podatnicy").Select
OdNr = Range("C3") + 7
DoNr = Range("C4") + 7
Kopia = Range("C5")

'Walid xlOn
Application.ScreenUpdating = False
Plat(1) = Sheets("P|fffd|atnik").Range("C5")
Plat(4) = Sheets("P|fffd|atnik").Range("C6")
Plat(5) = Sheets("P|fffd|atnik").Range("C7")
Plat(8) = Sheets("P|fffd|atnik").Range("C8")
Plat(9) = Sheets("P|fffd|atnik").Range("C9")
Plat(10) = Sheets("P|fffd|atnik").Range("C10") & " " & Sheets("P|fffd|atnik").Range("C11") & " " & DATAB(Sheets("P|fffd|atnik").Range("C12"))
Plat(90) = Sheets("P|fffd|atnik").Range("C13")
Plat(91) = Sheets("P|fffd|atnik").Range("C14")

Sheets("Podatnicy").Select
For a = OdNr To DoNr
    For b = 1 To 18
    Dane(a, b) = UCase(Cells(a, b + 1))
    Next
    For b = 19 To 81
    Dane(a, b) = Cells(a, b + 1)
    Next
Next

Dpl = MsgBox("Czy drukowa|fffd| formularz dwustronnie?" & Chr(13) & _
Chr(13) & "TAK - potrzebna jest drukarka z modu|fffd|em duplexu" & Chr(13) & _
Chr(13) & "NIE - drukuje strony pojedynczo", vbYesNo, "Wybierz spos|fffd|b wydruku")

Worksheets("PIT-11").Activate
ActiveSheet.Unprotect
UsunDanePIT

[L8] = Plat(1)
b = ""
For c = 1 To Len([L8])
b = b & Mid([L8], c, 1) & "   "
Next
[L8] = Trim(b)
[X13] = Plat(4)

If Plat(5) = 1 Then
ActiveSheet.Shapes("ikk1").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx1").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx2").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk2").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk2").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx2").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx1").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk1").Select
Selection.ShapeRange.ZOrder msoBringToFront
End If

If Plat(8) = 1 Then
[F42] = Plat(9)
[F44] = ""
ActiveSheet.Shapes("ikk3").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx3").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx4").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk4").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
[F44] = Plat(10)
[F42] = ""
ActiveSheet.Shapes("ikk4").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx4").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx3").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk3").Select
Selection.ShapeRange.ZOrder msoBringToFront
End If

For a = OdNr To DoNr
Range("F33") = Dane(a, 1)
Range("T50") = Replace(Dane(a, 2), " ", "")
Range("T50").Select
b = ""
For c = 1 To Len([T50])
b = b & Mid([T50], c, 1) & "   "
Next
[T50] = Trim(b)
If Dane(a, 6) <> "" Then
    Range("F52") = Dane(a, 7)
    Range("F54") = Dane(a, 8)
    Range("F56") = Dane(a, 9)
Else
    Range("F52") = ""
    Range("F54") = ""
    Range("F56") = ""
End If
Range("F58") = Dane(a, 4)
Range("V58") = Dane(a, 5)
If Len(Dane(a, 2)) = 10 Then
    Range("AM58") = Dane(a, 3)
Else
Dz = Mid(Dane(a, 2), 5, 2)
Mc = Mid(Dane(a, 2), 3, 2)
Rk = "19" & Left(Dane(a, 2), 2)
If Left(Mc, 1) > 1 Then
Mc = Left(Mc, 1) - 2 & Right(Mc, 1)
Rk = "20" & Left(Dane(a, 2), 2)
End If
Range("AM58") = Dz & Mc & Rk
End If
If Dane(a, 6) = "T" Then
Range("F60") = Dane(a, 9)
End If
If Dane(a, 16) <> "" Then
Range("F60") = "POLSKA"
Range("O60") = Dane(a, 10)
Range("AJ60") = Dane(a, 11)
Range("F62") = Dane(a, 12)
Range("R62") = Dane(a, 13)
Range("AP62") = Dane(a, 14)
Range("AS62") = Dane(a, 15)
Range("F64") = Dane(a, 16)
Range("AI64") = Dane(a, 17)
End If

Range("AQ13") = Dane(a, 18)

If Dane(a, 6) = "" Then
ActiveSheet.Shapes("ikk5").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx5").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx6").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk6").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk6").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx6").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx5").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk5").Select
Selection.ShapeRange.ZOrder msoBringToFront
End If

If Dane(a, 19) = 1 Then
ActiveSheet.Shapes("ikk7").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx7").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk7").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx7").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If
If Dane(a, 19) = 2 Then
ActiveSheet.Shapes("ikk8").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx8").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk8").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx8").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If
If Dane(a, 19) = 3 Then
ActiveSheet.Shapes("ikk9").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx9").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk9").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx9").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If
If Dane(a, 19) = 4 Then
ActiveSheet.Shapes("ikk10").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx10").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk10").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx10").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If
Range("L8").Select
Range("S89") = Dane(a, 20)
Range("AA89") = Dane(a, 21)

Range("AG89") = Dane(a, 22)

Range("AN89") = Dane(a, 23)
Range("AR89") = Dane(a, 24)
Range("S95") = Dane(a, 25)
Range("AA95") = Dane(a, 26)
Range("S98") = Dane(a, 27)
Range("AA98") = Dane(a, 28)
Range("AG98") = Dane(a, 29)
Range("AN98") = Dane(a, 30)
Range("AR98") = Dane(a, 31)
Range("S102") = Dane(a, 32)
Range("AA102") = Dane(a, 33)
Range("S106") = Dane(a, 34)
Range("AG106") = Dane(a, 35)
Range("AN106") = Dane(a, 36)
Range("AR106") = Dane(a, 37)
Range("S108") = Dane(a, 38)
Range("AA108") = Dane(a, 39)
Range("AG108") = Dane(a, 40)
Range("AR108") = Dane(a, 41)
Range("S114") = Dane(a, 42)
Range("AA114") = Dane(a, 43)
Range("AG114") = Dane(a, 44)
Range("AR114") = Dane(a, 45)
Range("S118") = Dane(a, 46)
Range("AA118") = Dane(a, 47)
Range("AG118") = Dane(a, 48)
Range("AR118") = Dane(a, 49)
Range("S121") = Dane(a, 50)
Range("AG121") = Dane(a, 51)
Range("AR121") = Dane(a, 52)
Range("S124") = Dane(a, 53)
Range("AA124") = Dane(a, 54)
Range("S127") = Dane(a, 55)
Range("AA127") = Dane(a, 56)
Range("AG127") = Dane(a, 57)
Range("AN127") = Dane(a, 58)
Range("AR127") = Dane(a, 59)
Range("AK129") = Dane(a, 60)
Range("AK132") = Dane(a, 61)
Range("AK135") = Dane(a, 62)
Range("AK137") = Dane(a, 63)
Range("AK140") = Dane(a, 64)
Range("AK143") = Dane(a, 65)
Range("AK150") = Dane(a, 66)

If Dane(a, 68) <> "" Then
    Range("G152") = Dane(a, 67)
    Range("AK152") = Dane(a, 68)
End If
If Dane(a, 70) <> "" Then
    Range("G154") = Dane(a, 69)
    Range("AK154") = Dane(a, 70)
End If
If Dane(a, 72) <> "" Then
    Range("G156") = Dane(a, 71)
    Range("AK156") = Dane(a, 72)
End If
Range("AK158") = Dane(a, 73)

Range("AJ170") = Dane(a, 74)
Range("AJ172") = Dane(a, 75)
Range("AJ174") = Dane(a, 76)
Range("AJ176") = Dane(a, 77)
Range("AJ179") = Dane(a, 78)
Range("AJ181") = Dane(a, 79)

Range("G188") = Plat(90)
Range("G192") = Plat(91)
End
ActiveWorkbook.Colors(19) = RGB(255, 255, 255)

If Dpl = 7 Then
ActiveWindow.SelectedSheets.PrintOut From:=1, To:=1, Copies:=Kopia
ActiveWindow.SelectedSheets.PrintOut From:=3, To:=3, Copies:=Kopia
MsgBox "Prze|fffd|u|fffd| kartki i drukuj strony parzyste.", 64, "Drukuj formularz dwustronnie"
ActiveWindow.SelectedSheets.PrintOut From:=4, To:=4, Copies:=Kopia
ActiveWindow.SelectedSheets.PrintOut From:=2, To:=2, Copies:=Kopia
End If
If Dpl = 6 Then ActiveWindow.SelectedSheets.PrintOut From:=1, To:=4, Copies:=Kopia
Next
ActiveSheet.Protect
Worksheets("Podatnicy").Select
End Sub

Sub Dopdf()
Dim Dane(1000, 85), Plat(91)
Dim OdNr, DoNr, Kopia, a, b, Dpl

Sheets("Podatnicy").Select
OdNr = Range("C3") + 7
DoNr = Range("C4") + 7
Kopia = Range("C5")

'Walid xlOn
Application.ScreenUpdating = False
Plat(1) = Sheets("P|fffd|atnik").Range("C5")
Plat(4) = Sheets("P|fffd|atnik").Range("C6")
Plat(5) = Sheets("P|fffd|atnik").Range("C7")
Plat(8) = Sheets("P|fffd|atnik").Range("C8")
Plat(9) = Sheets("P|fffd|atnik").Range("C9")
Plat(10) = Sheets("P|fffd|atnik").Range("C10") & " " & Sheets("P|fffd|atnik").Range("C11") & " " & Sheets("P|fffd|atnik").Range("C12")
Plat(90) = Sheets("P|fffd|atnik").Range("C13")
Plat(91) = Sheets("P|fffd|atnik").Range("C14")

Sheets("Podatnicy").Select
For a = OdNr To DoNr
    For b = 1 To 18
    Dane(a, b) = UCase(Cells(a, b + 1))
    Next
    For b = 19 To 81
    Dane(a, b) = Cells(a, b + 1)
    Next
Next

Worksheets("PIT-11").Activate
ActiveSheet.Unprotect
UsunDanePIT

[L8] = Plat(1)
b = ""
For c = 1 To Len([L8])
b = b & Mid([L8], c, 1) & "   "
Next
[L8] = Trim(b)
[X13] = Plat(4)

If Plat(5) = 1 Then
ActiveSheet.Shapes("ikk1").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx1").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx2").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk2").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk2").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx2").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx1").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk1").Select
Selection.ShapeRange.ZOrder msoBringToFront
End If

If Plat(8) = 1 Then
[F42] = Plat(9)
[F44] = ""
ActiveSheet.Shapes("ikk3").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx3").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx4").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk4").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
[F44] = Plat(10)
[F42] = ""
ActiveSheet.Shapes("ikk4").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx4").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx3").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk3").Select
Selection.ShapeRange.ZOrder msoBringToFront
End If

For a = OdNr To DoNr
Range("F33") = Dane(a, 1)
Range("T50") = Replace(Dane(a, 2), " ", "")
Range("T50").Select
b = ""
For c = 1 To Len([T50])
b = b & Mid([T50], c, 1) & "   "
Next
[T50] = Trim(b)
If Dane(a, 6) <> "" Then
    Range("F52") = Dane(a, 7)
    Range("F54") = Dane(a, 8)
    Range("F56") = Dane(a, 9)
Else
    Range("F52") = ""
    Range("F54") = ""
    Range("F56") = ""
End If
Range("F58") = Dane(a, 4)
Range("V58") = Dane(a, 5)
If Len(Dane(a, 2)) = 10 Then
    Range("AM58") = Dane(a, 3)
Else
Dz = Mid(Dane(a, 2), 5, 2)
Mc = Mid(Dane(a, 2), 3, 2)
Rk = "19" & Left(Dane(a, 2), 2)
If Left(Mc, 1) > 1 Then
Mc = Left(Mc, 1) - 2 & Right(Mc, 1)
Rk = "20" & Left(Dane(a, 2), 2)
End If
Range("AM58") = Dz & Mc & Rk
End If
If Dane(a, 6) = "T" Then
Range("F60") = Dane(a, 9)
End If
If Dane(a, 16) <> "" Then
Range("F60") = "POLSKA"
Range("O60") = Dane(a, 10)
Range("AJ60") = Dane(a, 11)
Range("F62") = Dane(a, 12)
Range("R62") = Dane(a, 13)
Range("AP62") = Dane(a, 14)
Range("AS62") = Dane(a, 15)
Range("F64") = Dane(a, 16)
Range("AI64") = Dane(a, 17)
End If

Range("AQ13") = Dane(a, 18)

If Dane(a, 6) = "" Then
ActiveSheet.Shapes("ikk5").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx5").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx6").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk6").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk6").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx6").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx5").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ikk5").Select
Selection.ShapeRange.ZOrder msoBringToFront
End If

If Dane(a, 19) = 1 Then
ActiveSheet.Shapes("ikk7").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx7").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk7").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx7").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If
If Dane(a, 19) = 2 Then
ActiveSheet.Shapes("ikk8").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx8").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk8").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx8").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If
If Dane(a, 19) = 3 Then
ActiveSheet.Shapes("ikk9").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx9").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk9").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx9").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If
If Dane(a, 19) = 4 Then
ActiveSheet.Shapes("ikk10").Select
Selection.ShapeRange.ZOrder msoSendToBack
ActiveSheet.Shapes("ixx10").Select
Selection.ShapeRange.ZOrder msoBringToFront
Else
ActiveSheet.Shapes("ikk10").Select
Selection.ShapeRange.ZOrder msoBringToFront
ActiveSheet.Shapes("ixx10").Select
Selection.ShapeRange.ZOrder msoSendToBack
End If

Range("S89") = Dane(a, 20)
Range("AA89") = Dane(a, 21)
Range("AG89") = Dane(a, 22)
Range("AN89") = Dane(a, 23)
Range("AR89") = Dane(a, 24)
Range("S95") = Dane(a, 25)
Range("AA95") = Dane(a, 26)
Range("S98") = Dane(a, 27)
Range("AA98") = Dane(a, 28)
Range("AG98") = Dane(a, 29)
Range("AN98") = Dane(a, 30)
Range("AR98") = Dane(a, 31)
Range("S102") = Dane(a, 32)
Range("AA102") = Dane(a, 33)
Range("S106") = Dane(a, 34)
Range("AG106") = Dane(a, 35)
Range("AN106") = Dane(a, 36)
Range("AR106") = Dane(a, 37)
Range("S108") = Dane(a, 38)
Range("AA108") = Dane(a, 39)
Range("AG108") = Dane(a, 40)
Range("AR108") = Dane(a, 41)
Range("S114") = Dane(a, 42)
Range("AA114") = Dane(a, 43)
Range("AG114") = Dane(a, 44)
Range("AR114") = Dane(a, 45)
Range("S118") = Dane(a, 46)
Range("AA118") = Dane(a, 47)
Range("AG118") = Dane(a, 48)
Range("AR118") = Dane(a, 49)
Range("S121") = Dane(a, 50)
Range("AG121") = Dane(a, 51)
Range("AR121") = Dane(a, 52)
Range("S124") = Dane(a, 53)
Range("AA124") = Dane(a, 54)
Range("S127") = Dane(a, 55)
Range("AA127") = Dane(a, 56)
Range("AG127") = Dane(a, 57)
Range("AN127") = Dane(a, 58)
Range("AR127") = Dane(a, 59)
Range("AK129") = Dane(a, 60)
Range("AK132") = Dane(a, 61)
Range("AK135") = Dane(a, 62)
Range("AK137") = Dane(a, 63)
Range("AK140") = Dane(a, 64)
Range("AK143") = Dane(a, 65)
Range("AK150") = Dane(a, 66)

If Dane(a, 68) <> "" Then
    Range("G152") = Dane(a, 67)
    Range("AK152") = Dane(a, 68)
End If
If Dane(a, 70) <> "" Then
    Range("G154") = Dane(a, 69)
    Range("AK154") = Dane(a, 70)
End If
If Dane(a, 72) <> "" Then
    Range("G156") = Dane(a, 71)
    Range("AK156") = Dane(a, 72)
End If
Range("AK158") = Dane(a, 73)

Range("AJ170") = Dane(a, 74)
Range("AJ172") = Dane(a, 75)
Range("AJ174") = Dane(a, 76)
Range("AJ176") = Dane(a, 77)
Range("AJ179") = Dane(a, 78)
Range("AJ181") = Dane(a, 79)

Range("G188") = Plat(90)
Range("G192") = Plat(91)

ActiveWorkbook.Colors(19) = RGB(255, 255, 255)

Wer2 = Empty
NRPL:
Nplik = ThisWorkbook.path & "\" & Sheets("PIT-11").Range("AX58") & Wer2 & Dpl
If Dir(Nplik) = "" Then
    ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:=Nplik _
        , Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False
Else
Wer = Wer + 1
Wer2 = "(" & Wer & ")"
GoTo NRPL
End If
Next
ActiveSheet.Protect
Worksheets("Podatnicy").Select
End Sub

Sub Koperta_podatnik()
Dim Nazw, Imie
Dim Ulica, Nrd, Nrl, Miejsc, Kod, Poczta
Dim Dane(1000, 14)
Dim a
Application.ScreenUpdating = False
If ActiveCell.Row < 8 Then
MsgBox "Zaznacz wiersz z danymi adresowymi do wydruku", 32, "Adresowanie koperty"
End
End If
a = ActiveCell.Row
    Nazw = StrConv(Cells(a, 5), vbProperCase)
    Imie = StrConv(Cells(a, 6), vbProperCase)
    Ulica = StrConv(Cells(a, 14), vbProperCase)
    Nrd = StrConv(Cells(a, 15), vbProperCase)
    Nrl = StrConv(Cells(a, 16), vbProperCase)
    Miejsc = StrConv(Cells(a, 17), vbProperCase)
    Kod = StrConv(Cells(a, 18), vbProperCase)
    Poczta = UCase(Cells(a, 19))
    
    If Nazw = "" Then
        MsgBox "Uzupe|fffd|nij nazwisko", 16, "Brak nazwiska": Cells(a, 4).Select: End
    End If
    If Imie = "" Then
        MsgBox "Uzupe|fffd|nij imi|fffd|", 16, "Brak imienia": Cells(a, 5).Select: End
    End If
    If Nrd = "" Then
        MsgBox "Uzupe|fffd|nij numer domu", 16, "Brak numeru domu": Cells(a, 11).Select: End
    End If
    If Miejsc = "" Then
        MsgBox "Uzupe|fffd|nij miejscowo|fffd||fffd|", 16, "Brak miejscowo|fffd|ci": Cells(a, 13).Select: End
    End If
    If Kod = "" Then
        MsgBox "Uzupe|fffd|nij kod pocztowy", 16, "Brak kodu": Cells(a, 14).Select: End
    End If
    If Poczta = "" Then
        MsgBox "Uzupe|fffd|nij poczt|fffd|", 16, "Brak poczty": Cells(a, 15).Select: End
    End If

'wydruk
Sheets("Koperta").Select
Range("D8:E11").ClearContents


Range("E8") = Nazw & " " & Imie ' nazw
If Ulica <> "" Then ' ulica
Range("E9") = "ul. " & Ulica & " " & Nrd
If Nrl <> "" Then
Range("E9") = "ul. " & Ulica & " " & Nrd & "/" & Nrl
End If
End If
Range("E10") = Miejsc ' miejscow
If Ulica = "" Then
Range("E10") = Miejsc & " " & Nrd
If Nrl <> "" Then
Range("E10") = Miejsc & " " & Nrd & "/" & Nrl
End If
End If
Range("E11") = Kod & "  " & UCase(Poczta) 'poczta
ActiveWindow.SelectedSheets.PrintOut

Sheets("Podatnicy").Select
End Sub


Sub UsunDanePIT()
ActiveSheet.Unprotect
Range("L8:AD8").ClearContents
Range("X13:AD13").ClearContents
Range("AQ13:AU13").ClearContents
Range("F33:AU33").ClearContents
Range("F42:AU42").ClearContents
Range("F44:AU44").ClearContents
Range("T50:AU50").ClearContents
Range("F52:AU52").ClearContents
Range("F54:AU54").ClearContents
Range("F56:AU56").ClearContents
Range("F58:AU58").ClearContents
Range("F60:AU60").ClearContents
Range("F62:AU62").ClearContents
Range("F64:AU64").ClearContents

Range("S89:AF93").ClearContents
Range("S95:AF96").ClearContents
Range("AG89:AU96").ClearContents

Range("S98:AF99").ClearContents
Range("S102:AF104").ClearContents
Range("AG98:AU104").ClearContents

Range("S106:AU106").ClearContents
Range("S108:AU112").ClearContents
Range("S114:AU116").ClearContents
Range("S118:AU119").ClearContents

Range("S121:Z122").ClearContents
Range("S124:AF125").ClearContents
Range("AG121:AU125").ClearContents
Range("S127:AU127").ClearContents

Range("AK129:AU130").ClearContents
Range("AK132:AU133").ClearContents
Range("AK135:AU135").ClearContents
Range("AK137:AU138").ClearContents
Range("AK140:AU141").ClearContents
Range("AK143:AU143").ClearContents
Range("AK150:AU150").ClearContents

Range("G152:AU152").ClearContents
Range("G154:AU154").ClearContents
Range("G156:AU156").ClearContents
Range("AK158:AU158").ClearContents

Range("AJ170:AU170").ClearContents
Range("AJ172:AU172").ClearContents
Range("AJ174:AU174").ClearContents
Range("AJ176:AU177").ClearContents
Range("AJ179:AU179").ClearContents
Range("AJ181:AU181").ClearContents

Range("G188:AU188").ClearContents
Range("G192:AU192").ClearContents

End Sub




Attribute VB_Name = "XML"
Option Private Module
Public LStr As Integer
Public eDek As Integer, ePod As Integer
Public Nplik As String
Public test As String, Nrdok As String, Status As Integer
Public OdNr As Integer, DoNr As Integer
Public AA As Integer

Sub Doplikuxml()
Sheets("Podatnicy").Select
OdNr = Range("C3") + 7
DoNr = Range("C4") + 7
ePod = 1
For AA = OdNr To DoNr
    Doxml
Next
MsgBox "Pliki XML zapisane w folderze " & ThisWorkbook.path, vbInformation, "Zapis do XML"
End Sub

Sub Doxml()
Dim P(1000, 85)
Dim a, b, Dpl, Wer, Wer2
Dim Filename, Dz, Mc, Rok
Dim PK(11)
Dim zapis As String
Dim PR As Object

Sheets("Podatnicy").Select
a = AA

PK(1) = Sheets("P|fffd|atnik").Range("C5") 'nip
PK(2) = Sheets("P|fffd|atnik").Range("C11") 'imie
PK(3) = Sheets("P|fffd|atnik").Range("C10") 'nazw
PK(4) = Sheets("P|fffd|atnik").Range("C6") 'rok
PK(5) = Sheets("P|fffd|atnik").Range("C7") 'cel
PK(6) = Sheets("P|fffd|atnik").Range("C8") 'rodz sk|fffd|ad
PK(7) = Sheets("P|fffd|atnik").Range("C9") 'nazwa
PK(8) = Sheets("P|fffd|atnik").Range("C11") 'nazwisko
PK(9) = Sheets("P|fffd|atnik").Range("C12") 'imie
PK(10) = Sheets("P|fffd|atnik").Range("C13") 'dataur

P(a, 5) = Application.WorksheetFunction.VLookup(Cells(a, 2), [USY], 2, False) 'us
If Cells(a, 7) = "" Then
    P(a, 10) = 1
Else
    P(a, 10) = 2
End If
P(a, 11) = Replace(Cells(a, 3), " ", "")
P(a, 12) = Cells(a, 8)
P(a, 13) = Cells(a, 9)
P(a, 15) = Cells(a, 5)
P(a, 16) = Cells(a, 6)
P(a, 17) = Cells(a, 4)
If P(a, 17) = "" Then
Dz = Mid(P(a, 11), 5, 2)
Mc = Mid(P(a, 11), 3, 2)
Rk = "19" & Left(P(a, 11), 2)
If Left(Mc, 1) > 1 Then
Mc = Left(Mc, 1) - 2 & Right(Mc, 1)
Rk = "20" & Left(P(a, 11), 2)
End If
P(a, 17) = Rk & "-" & Mc & "-" & Dz
Else
P(a, 17) = DATAA(P(a, 17))
End If

If P(a, 10) = 1 Then
P(a, 18) = "PL"
Else
P(a, 18) = Application.WorksheetFunction.VLookup(Cells(a, 10), [KRAJE], 2, False)
P(a, 14) = P(a, 18)
End If
P(a, 19) = Cells(a, 11)
P(a, 20) = Cells(a, 12)
P(a, 21) = Cells(a, 13)
P(a, 22) = Cells(a, 14)
P(a, 23) = Cells(a, 15)
P(a, 24) = Cells(a, 16)
P(a, 25) = Cells(a, 17)
P(a, 26) = Cells(a, 18)
P(a, 27) = Cells(a, 19)

For b = 28 To 85
P(a, b) = Cells(a, b - 8)
Next
P(a, 31) = P(a, 29) + P(a, 34) - P(a, 30) - P(a, 35)
P(a, 37) = P(a, 36)
P(a, 40) = P(a, 39)
P(a, 44) = P(a, 43)
P(a, 47) = P(a, 46)
P(a, 51) = P(a, 49) - P(a, 50)
P(a, 55) = P(a, 53) - P(a, 54)
P(a, 58) = P(a, 57) + P(a, 60) - P(a, 61)
P(a, 64) = P(a, 62) - P(a, 63)
P(a, 67) = P(a, 66)
P(a, 81) = P(a, 74) + P(a, 76) + P(a, 78) + P(a, 80)
Dpl = " PIT-11_" & Sheets("P|fffd|atnik").Range("C6") & ".xml"
Wer2 = Empty
NRPL:
Nplik = ThisWorkbook.path & "\" & Right("00" & a - 7, 3) & Application.WorksheetFunction.Proper(P(a, 15) & " " & P(a, 16)) & Wer2 & Dpl
If Dir(Nplik) <> "" Then
    Wer = Wer + 1
    Wer2 = "(" & Wer & ")"
    GoTo NRPL
End If

Set PR = CreateObject("ADODB.Stream")
PR.Type = 2
PR.Charset = "utf-8"
PR.Open

'  Zapisanie znacznika <xml>
PR.WriteText "<?xml version=""1.0"" encoding=""UTF-8""?>" & vbNewLine
PR.WriteText "<Deklaracja xmlns:etd=""http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2018/08/24/eD/DefinicjeTypy/"" xmlns=""http://crd.gov.pl/wzor/2018/12/06/6319/"">" & vbNewLine
PR.WriteText "<Naglowek>" & vbNewLine
PR.WriteText "<KodFormularza kodPodatku=""PIT"" kodSystemowy=""PIT-11 (24)"" rodzajZobowiazania=""Z"" wersjaSchemy=""1-0E"">PIT-11</KodFormularza>" & vbNewLine
PR.WriteText "<WariantFormularza>24</WariantFormularza>" & vbNewLine
PR.WriteText "<CelZlozenia poz=""P_6"">" & PK(6) & "</CelZlozenia>" & vbNewLine
PR.WriteText "<Rok>" & PK(4) & "</Rok>" & vbNewLine
PR.WriteText "<KodUrzedu>" & P(a, 5) & "</KodUrzedu>" & vbNewLine
PR.WriteText "</Naglowek>" & vbNewLine
PR.WriteText "<Podmiot1 rola=""P|fffd|atnik/Sk|fffd|adaj|fffd|cy"">" & vbNewLine
If PK(7) = 1 Then
PR.WriteText "<etd:OsobaNiefizyczna>" & vbNewLine
PR.WriteText "<etd:NIP>" & PK(1) & "</etd:NIP>" & vbNewLine
PR.WriteText "<etd:PelnaNazwa>" & ZN(PK(8)) & "</etd:PelnaNazwa>" & vbNewLine
If PK(5) <> "" Then PR.WriteText "<etd:REGON>" & PK(5) & "</etd:REGON>" & vbNewLine
PR.WriteText "</etd:OsobaNiefizyczna>" & vbNewLine
Else
PR.WriteText "<etd:OsobaFizyczna>" & vbNewLine
If Len(PK(1)) = 10 Then
    PR.WriteText "<etd:NIP>" & PK(1) & "</etd:NIP>" & vbNewLine
Else
    PR.WriteText "<etd:PESEL>" & PK(1) & "</etd:PESEL>" & vbNewLine
End If
PR.WriteText "<etd:ImiePierwsze>" & ZN(PK(10)) & "</etd:ImiePierwsze>" & vbNewLine
PR.WriteText "<etd:Nazwisko>" & ZN(PK(9)) & "</etd:Nazwisko>" & vbNewLine
PR.WriteText "<etd:DataUrodzenia>" & DATAA(PK(11)) & "</etd:DataUrodzenia>" & vbNewLine
PR.WriteText "</etd:OsobaFizyczna>" & vbNewLine
End If
PR.WriteText "</Podmiot1>" & vbNewLine
'PODATNIK
PR.WriteText "<Podmiot2 rola=""Podatnik"">" & vbNewLine
PR.WriteText "<OsobaFizyczna>" & vbNewLine
If Len(P(a, 11)) = 11 Then
    PR.WriteText "<etd:PESEL>" & P(a, 11) & "</etd:PESEL>" & vbNewLine
Else
    PR.WriteText "<etd:NIP>" & P(a, 11) & "</etd:NIP>" & vbNewLine
End If
PR.WriteText "<etd:ImiePierwsze>" & UCase(P(a, 16)) & "</etd:ImiePierwsze>" & vbNewLine
PR.WriteText "<etd:Nazwisko>" & UCase(P(a, 15)) & "</etd:Nazwisko>" & vbNewLine
PR.WriteText "<etd:DataUrodzenia>" & P(a, 17) & "</etd:DataUrodzenia>" & vbNewLine
If P(a, 10) = 2 Then
PR.WriteText "<NrId poz=""P_12"">" & UCase(P(a, 12)) & "</NrId>" & vbNewLine
PR.WriteText "<RodzajNrId poz=""P_13"">" & P(a, 13) & "</RodzajNrId>" & vbNewLine
PR.WriteText "<KodKrajuWydania poz=""P_14A"">" & P(a, 14) & "</KodKrajuWydania>" & vbNewLine
End If
PR.WriteText "</OsobaFizyczna>" & vbNewLine
PR.WriteText "<AdresZamieszkania rodzajAdresu=""RAD"">" & vbNewLine
PR.WriteText "<KodKraju poz=""P_18A"">" & P(a, 18) & "</KodKraju>" & vbNewLine
If P(a, 18) = "PL" Then
PR.WriteText "<Wojewodztwo>" & UCase(P(a, 19)) & "</Wojewodztwo>" & vbNewLine
PR.WriteText RTrim("<Powiat>" & UCase(P(a, 20)) & "</Powiat>") & vbNewLine
PR.WriteText "<Gmina>" & UCase(P(a, 21)) & "</Gmina>" & vbNewLine
End If
If P(a, 22) <> "" Then PR.WriteText "<Ulica poz=""P_22"">" & UCase(P(a, 22)) & "</Ulica>" & vbNewLine
If P(a, 23) <> "" Then PR.WriteText "<NrDomu poz=""P_23"">" & UCase(P(a, 23)) & "</NrDomu>" & vbNewLine
If P(a, 24) <> "" Then PR.WriteText "<NrLokalu poz=""P_24"">" & UCase(P(a, 24)) & "</NrLokalu>" & vbNewLine
PR.WriteText "<Miejscowosc poz=""P_25"">" & UCase(P(a, 25)) & "</Miejscowosc>" & vbNewLine
If P(a, 26) <> "" Then PR.WriteText "<KodPocztowy poz=""P_26"">" & P(a, 26) & "</KodPocztowy>" & vbNewLine
If P(a, 27) <> "" Then PR.WriteText "<Poczta>" & UCase(P(a, 27)) & "</Poczta>" & vbNewLine
PR.WriteText "</AdresZamieszkania>" & vbNewLine
PR.WriteText "</Podmiot2>" & vbNewLine
PR.WriteText "<PozycjeSzczegolowe>" & vbNewLine
PR.WriteText "<P_10>" & P(a, 10) & "</P_10>" & vbNewLine

For b = 28 To 84
Select Case b
'Pola warunkowe 0,00-
Case 29
    If P(a, b) <> "" Or P(a, b + 3) <> "" Or P(a, b + 5) <> "" Then
    PR.WriteText "<P_" & b - 1 & ">" & UL(P(a, b - 1)) & "</P_" & b - 1 & ">" & vbNewLine '28
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine '29
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine '30
    PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine '31
    If P(a, b + 3) > 0 Then PR.WriteText "<P_" & b + 3 & ">" & UT(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine '32
    PR.WriteText "<P_" & b + 4 & ">" & UL(P(a, b + 4)) & "</P_" & b + 4 & ">" & vbNewLine '33
    If P(a, b + 5) <> "" Then
    PR.WriteText "<P_" & b + 5 & ">" & UT(P(a, b + 5)) & "</P_" & b + 5 & ">" & vbNewLine '34
    PR.WriteText "<P_" & b + 6 & ">" & UT(P(a, b + 6)) & "</P_" & b + 6 & ">" & vbNewLine '35
    End If
    End If
Case 36, 43, 46
    If P(a, b) <> "" Then
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 2 & ">" & UL(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine
    End If
Case 39, 66
    If P(a, b) <> "" Or P(a, b + 2) <> "" Then
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    If P(a, b + 2) > 0 Then PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 3 & ">" & UL(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine
    End If
Case 49, 53, 62
    If P(a, b) <> "" Then
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 3 & ">" & UL(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine
    End If
Case 58
    If P(a, b) <> "" Then
    PR.WriteText "<P_" & b - 1 & ">" & UT(P(a, b - 1)) & "</P_" & b - 1 & ">" & vbNewLine '57
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine '58
    PR.WriteText "<P_" & b + 1 & ">" & UL(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine '59
        If P(a, b + 2) <> "" Then
        PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine '60
        PR.WriteText "<P_" & b + 3 & ">" & UT(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine '61
        End If
    End If
'Pola nieobowi|fffd|zkowe 0,00
Case 70 To 74, 81 To 84
    If P(a, b) <> "" Then PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine

Case 75, 77, 79
    If P(a, b + 1) <> "" Then
    PR.WriteText "<P_" & b & ">" & ZN(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    End If
End Select
Next
PR.WriteText "<P_85>2</P_85>" & vbNewLine

PR.WriteText "</PozycjeSzczegolowe>" & vbNewLine
PR.WriteText "<Pouczenie>1</Pouczenie>" & vbNewLine
'--------------podpis---------------
If ePod = 2 Then
PR.WriteText "<podp:DaneAutoryzujace xmlns:podp=""http://e-deklaracje.mf.gov.pl/Repozytorium/Definicje/Podpis/"">" & vbNewLine
PR.WriteText "<podp:NIP>" & PK(1) & "</podp:NIP>" & vbNewLine
PR.WriteText "<podp:ImiePierwsze>" & ZN(Sheets("P|fffd|atnik").Range("C12")) & "</podp:ImiePierwsze>" & vbNewLine
PR.WriteText "<podp:Nazwisko>" & ZN(Sheets("P|fffd|atnik").Range("C11")) & "</podp:Nazwisko>" & vbNewLine
PR.WriteText "<podp:DataUrodzenia>" & DATAA(Sheets("P|fffd|atnik").Range("C13")) & "</podp:DataUrodzenia>" & vbNewLine
PR.WriteText "<podp:Kwota>" & UT(Range("Przychod")) & "</podp:Kwota>" & vbNewLine
PR.WriteText "</podp:DaneAutoryzujace>" & vbNewLine
End If
'--------------podpis---------------

PR.WriteText "</Deklaracja>"

PR.SaveToFile Nplik, 2
Set PR = Nothing
If eDek = 8 Then XSDValid (Nplik)

End Sub

Sub Walid()
Dim OdNr, DoNr, a, b, c, D, npi As String
Application.ScreenUpdating = False
OdNr = Range("C3") + 7
DoNr = Range("C4") + 7
D = Sheets("A").Cells(9, 9)
'Walidacja p|fffd|atnika

Sheets("P|fffd|atnik").Select
If Trim([C6]) = "" Then MsgBox "Brak wpisanego roku, za kt|fffd|ry sk|fffd|adany jest PIT-11", vbCritical: [C6].Select: End
If Trim([C8]) = "" Then MsgBox "Brak wpisanego rodzaju sk|fffd|adaj|fffd|cego PIT-11", vbCritical: [C8].Select: End
If Trim([C5]) = "" Then MsgBox "Brak wpisanego NIP/PESEL p|fffd|atnika", vbCritical: [C5].Select: End
If Len([C5]) = 10 Then
  If CzyNIP([C5]) = False Then MsgBox "B|fffd||fffd|dny NIP p|fffd|atnika", 16, "": GoTo POZYC
Else
  If CzyPESEL([C5]) = False Then MsgBox "B|fffd||fffd|dny PESEL p|fffd|atnika", 16, "": GoTo POZYC
End If

If [C8] = 1 Then
If Trim([C9]) = "" Then MsgBox "Brak wpisanej pe|fffd|nej nazwy p|fffd|atnika", vbCritical: [C9].Select: End
Else
If Trim([C10]) = "" Then MsgBox "Brak wpisanego nazwiska p|fffd|atnika", vbCritical: [C10].Select: End
If Trim([C11]) = "" Then MsgBox "Brak wpisanego imienia p|fffd|atnika", vbCritical: [C11].Select: End
If [C12] = "" Then MsgBox "Brak wpisanej daty urodzenia p|fffd|atnika", vbCritical: [C12].Select: End
End If
'/Walidacja p|fffd|atnika

'Walidacja podatnika
Sheets("Podatnicy").Select
If OdNr > DoNr Then
MsgBox "Pozycja 'Od numeru Lp' nie mo|fffd|e by|fffd| wi|fffd|ksza od 'Do numeru Lp'.", 16, "B|fffd||fffd|d!"
[C3].Select
End
End If

For a = OdNr To DoNr
On Error Resume Next
If Cells(a, 2) = "" Then MsgBox "Nie wpisano nazwy urz|fffd|du skarbowego podatnika", vbCritical: Cells(a, 2).Select: GoTo POZYC
If IsError(Application.WorksheetFunction.VLookup(Cells(a, 2), [US], 1, False)) Then
    MsgBox "Do wysy|fffd|ki elektronicznej nazwa urz|fffd|du skarbowego" & Chr(13) & _
    "MUSI BY|fffd| ZGODNA z list|fffd| wyszukiwania po frazie." & Chr(13) & Chr(13) & _
    "Wykasuj zaznaczon|fffd| kom|fffd|rk|fffd| klawiszem DELETE" & Chr(13) & _
    "zaznacz ponownie i wybierz urz|fffd|d z listy." & Chr(13) _
    , vbCritical, "Niepoprawna nazwa urz|fffd|du skarbowego"
    Cells(a, 2).Select
    End
End If
npi = Replace(Cells(a, 3), " ", "")

If npi = "" Then
    MsgBox "Brak PESEL/NIP podatnika", vbCritical: Cells(a, 3).Select: GoTo POZYC
Else
    If Len(npi) = 10 Then
        If CzyNIP(npi) = False Then MsgBox "B|fffd||fffd|dny NIP w wierszu nr " & a - 7, 16: GoTo POZYC
    Else
        If CzyPESEL(npi) = False Then MsgBox "B|fffd||fffd|dny PESEL w wierszu nr " & a - 7, 16: GoTo POZYC
    End If
End If
If Len(npi) = 10 Or npi = "99999999999" Then
    If Cells(a, 4) = "" Then MsgBox "Brak daty urodzenia", vbCritical: Cells(a, 4).Select: GoTo POZYC
    If IsDate(DATAA(Cells(a, 4))) = False Then MsgBox "B|fffd||fffd|dna data urodzenia", vbCritical: Cells(a, 4).Select: GoTo POZYC
End If
If Trim(Cells(a, 5)) = "" Then MsgBox "Brak nazwiska podatnika", vbCritical: Cells(a, 5).Select: GoTo POZYC
If Trim(Cells(a, 6)) = "" Then MsgBox "Brak imienia podatnika", vbCritical: Cells(a, 6).Select: GoTo POZYC
If Cells(a, 7) = "t" Then
    If Trim(Cells(a, 8)) = "" Then MsgBox "Brak zagranicznego numeru identyfikacyjnego.", vbCritical: Cells(a, 8).Select: GoTo POZYC
    If Trim(Cells(a, 9)) = "" Then MsgBox "Brak rodzaju zagranicznego numeru identyfikacyjnego.", vbCritical: Cells(a, 9).Select: GoTo POZYC
    If Trim(Cells(a, 10)) = "" Then MsgBox "Brak kraju wydania zagranicznego numeru identyfikacyjnego.", vbCritical: Cells(a, 10).Select: GoTo POZYC
    If IsError(Application.WorksheetFunction.VLookup(Cells(a, 10), [KRAJE], 1, False)) Then
        MsgBox "Do wysy|fffd|ki elektronicznej nazwa kraju " & Chr(13) & _
        "MUSI by|fffd| zgodna z rozwijan|fffd| list|fffd| wyboru." & Chr(13) & Chr(13) & _
        "Wykasuj zaznaczon|fffd| kom|fffd|rk|fffd| klawiszem DELETE" & Chr(13) & _
        "zaznacz ponownie i wybierz kraj z listy." & Chr(13) _
        , vbCritical, "Niepoprawna nazwa kraju"
        Cells(a, 10).Select
        End
    End If
End If


'walidacja szczegolowa
If Cells(a, 21) + Cells(a, 26) + Cells(a, 24) > 0 And Cells(a, 20) = 0 Then
    MsgBox "Uzupe|fffd|nij rodzaj kosztu (1,2,3 lub 4) w poz. 28 - Lp. " & a - 7, 16
    Cells(a, 20).Select
    GoTo POZYC
End If

If Cells(a, 20) > 0 Then
    If Cells(a, 21) + Cells(a, 24) + Cells(a, 26) = 0 Then
    MsgBox "Poz. 28 wype|fffd|niona wi|fffd|c uzupe|fffd|nij przych|fffd|d lub doch|fffd|d zwolniony ze stosunku pracy - Lp. " & a - 7, 16:
    Cells(a, 21).Select
    GoTo POZYC
    End If
End If

Cells(a, 23) = Cells(a, 21) + Cells(a, 26) - Cells(a, 22) - Cells(a, 27)
If Cells(a, 23) < 0 Then Cells(a, 23) = 0

Cells(a, 30) = Cells(a, 28) + Cells(a, 33) - Cells(a, 29) - Cells(a, 34)
If Cells(a, 30) < 0 Then Cells(a, 30) = 0
If Cells(a, 30) = 0 Then Cells(a, 30) = ""

Cells(a, 36) = Cells(a, 35)
If Cells(a, 36) < 0 Then Cells(a, 36) = 0
If Cells(a, 36) = 0 Then Cells(a, 36) = ""

Cells(a, 41) = Cells(a, 39) - Cells(a, 40)
If Cells(a, 41) < 0 Then Cells(a, 41) = 0
If Cells(a, 41) = 0 Then Cells(a, 41) = ""

Cells(a, 45) = Cells(a, 43) - Cells(a, 44)
If Cells(a, 45) < 0 Then Cells(a, 45) = 0
If Cells(a, 45) = 0 Then Cells(a, 45) = ""

Cells(a, 49) = Cells(a, 47) - Cells(a, 48)
If Cells(a, 49) < 0 Then Cells(a, 49) = 0
If Cells(a, 49) = 0 Then Cells(a, 49) = ""

Cells(a, 52) = Cells(a, 51) + Cells(a, 54) - Cells(a, 55)
If Cells(a, 52) < 0 Then Cells(a, 52) = 0
If Cells(a, 52) = 0 Then Cells(a, 52) = ""

Cells(a, 58) = Cells(a, 56) - Cells(a, 57)
If Cells(a, 58) < 0 Then Cells(a, 58) = 0
If Cells(a, 58) = 0 Then Cells(a, 58) = ""

Cells(a, 74) = Cells(a, 67) + Cells(a, 69) + Cells(a, 71) + Cells(a, 73)
If Cells(a, 74) < 0 Then Cells(a, 74) = 0
If Cells(a, 74) = 0 Then Cells(a, 74) = ""


For b = 21 To 67
If Cells(a, b) < 0 Then MsgBox "Wpisana kwota nie mo|fffd|e by|fffd| liczb|fffd| ujemn|fffd|.", 16: Cells(a, b).Select: GoTo POZYC
If IsNumeric(Cells(a, b)) = False Then MsgBox "Wpisany tekst  nie jest liczb|fffd|.", 16: Cells(a, b).Select: GoTo POZYC
Next
For b = 75 To 80
If Cells(a, b) < 0 Then MsgBox "Wpisana kwota nie mo|fffd|e by|fffd| liczb|fffd| ujemn|fffd|.", 16: Cells(a, b).Select: GoTo POZYC
If IsNumeric(Cells(a, b)) = False Then MsgBox "Wpisany tekst  nie jest liczb|fffd|.", 16: Cells(a, b).Select: GoTo POZYC
Next

If Cells(a, 69) < 0 Then MsgBox "Wpisana kwota nie mo|fffd|e by|fffd| liczb|fffd| ujemn|fffd|.", 16: Cells(a, 69).Select: GoTo POZYC
If Cells(a, 71) < 0 Then MsgBox "Wpisana kwota nie mo|fffd|e by|fffd| liczb|fffd| ujemn|fffd|.", 16: Cells(a, 71).Select: GoTo POZYC
If Cells(a, 73) < 0 Then MsgBox "Wpisana kwota nie mo|fffd|e by|fffd| liczb|fffd| ujemn|fffd|.", 16: Cells(a, 73).Select: GoTo POZYC
 
If Cells(a, 69) > 0 And Cells(a, 67) = "" Then MsgBox "Brak rodzaju przychodu w poz. 77", 16: Cells(a, 68).Select: GoTo POZYC
If Cells(a, 71) > 0 And Cells(a, 69) = "" Then MsgBox "Brak rodzaju przychodu w poz. 79", 16: Cells(a, 70).Select: GoTo POZYC
If Cells(a, 73) > 0 And Cells(a, 72) = "" Then MsgBox "Brak rodzaju przychodu w poz. 81", 16: Cells(a, 72).Select: GoTo POZYC

Next
Exit Sub

POZYC:
W = Selection.Row
c = Selection.Column
Application.GoTo Cells(W - 15, 1)
Cells(W, c).Select
End
'/Walidacja podatnika
End Sub





Attribute VB_Name = "ZIP7"

Public Sub ShellAndWait(ByVal PathName As String, Optional WindowState)
    Dim hProg As Long
    Dim hProcess As Long, ExitCode As Long
    If IsMissing(WindowState) Then WindowState = 1
    hProg = Shell(PathName, WindowState)
    hProcess = OpenProcess(PROCESS_QUERY_INFORMATION, False, hProg)
    Do
        GetExitCodeProcess hProcess, ExitCode
        DoEvents
    Loop While ExitCode = STILL_ACTIVE
End Sub

Sub zipfile(strFilePath As String, strZIPName As String)
    Dim PathZipProgram As String, ShellStr As String
    PathZipProgram = "C:\program files\7-Zip\"
    If Right(PathZipProgram, 1) <> "\" Then
        PathZipProgram = PathZipProgram & "\"
    End If
    If Dir(PathZipProgram & "7z.exe") = "" Then
        MsgBox "Zainstaluj paker 7z.exe do folderu ''C:\Program Files\7-Zip\'' ze strony www.7-zip.org i spr|fffd|buj ponownie."
        Exit Sub
    End If
    ShellStr = PathZipProgram & "7z.exe a" _
             & " " & Chr(34) & strZIPName & Chr(34) _
             & " " & Chr(34) & strFilePath & Chr(34)
    ShellAndWait ShellStr, vbHide
End Sub


Attribute VB_Name = "eDeklaracjaUBDZ"
Attribute VB_Base = "0{6DBC6325-CF2E-4393-8DD6-48B3FFC4CAF5}{4C39ADCF-E49C-456E-900E-FBC9EE396618}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub Anuluj_Click()
Unload Me
End
End Sub


Private Sub Opt1_Click()
eDek = 1
If Range("Osoba").Value = 2 Then Opt6.Enabled = True
End Sub

Private Sub Opt2_Click()
eDek = 2
If Range("Osoba").Value = 2 Then Opt6.Enabled = True
End Sub

Private Sub Opt3_Click()
eDek = 3
Opt5.Value = True
If Range("Osoba").Value = 1 Then
    Opt6.Enabled = False
    ePod = 1
Else
    Opt6.Enabled = True
    Opt6.Value = True
    ePod = 2
End If
End Sub

Private Sub Opt4_Click()
eDek = 4
Opt5.Value = True
If Range("Osoba").Value = 1 Then
    Opt6.Enabled = False
    ePod = 1
Else
    Opt6.Enabled = True
    Opt6.Value = True
    ePod = 2
End If
End Sub

Private Sub Opt5_Click()
ePod = 1
End Sub

Private Sub Opt6_Click()
ePod = 2
End Sub

Private Sub Opt7_Click()
eDek = 7
If Range("Osoba").Value = 2 Then Opt6.Enabled = True
End Sub

Private Sub Opt8_Click()
eDek = 8
If Range("Osoba").Value = 2 Then Opt6.Enabled = True
End Sub

Private Sub Opt9_Click()
eDek = 9
If Range("Osoba").Value = 2 Then Opt6.Enabled = True
End Sub


Private Sub UserForm_Initialize()
Nplik = Empty
OdNr = Range("C3") + 7
DoNr = Range("C4") + 7

Nrdok = Cells(OdNr, 83)
Status = Cells(OdNr, 84)
test = Cells(OdNr, 85)

If Range("Osoba").Value = 1 Then
    Opt5.Value = True
    Opt6.Enabled = False
    ePod = 1
Else
    Opt6.Enabled = True
    Opt6.Value = True
    ePod = 2
End If


If Status > 399 Or Nrdok = "" Then
Opt2.Value = True
eDek = 2
End If

If Range("Korekta").Value = 1 And Status = 200 Then
If test = "" Then Opt1.Enabled = False
If test = "" Then Opt3.Enabled = False
Opt9.Value = True
eDek = 9
End If

If Range("Korekta").Value = 2 Then
Label1.Caption = "Wy|fffd|lij korekt|fffd| informacji PIT-11 do:"
Label3.Caption = "Zapisz korekt|fffd| informacji PIT-11 do:"
Opt3.Enabled = False
Opt4.Enabled = False
Opt7.Enabled = False
End If

If OdNr = DoNr Then
    Opt2.Value = True
    Opt3.Enabled = False
    Opt4.Enabled = False
    Opt7.Enabled = False
Else
    Opt1.Enabled = False
    Opt2.Enabled = False
    Opt4.Value = True
End If

If Status > 300 And Status < 400 Then
    Opt1.Enabled = False
    Opt2.Enabled = False
    Opt3.Enabled = False
    Opt4.Enabled = False
    Opt6.Enabled = False
    Opt9.Value = True
    eDek = 9
End If

End Sub

Private Sub OK_Click()
Dim oWinHttp As Object
Dim answ As String
Dim UPOr(14) As String
Dim strDoWysylki As String
Dim a As Integer, b As Integer, c As Integer
Dim nrRef As String
Dim Przych As String
Dim pyt(2) As String
Dim nr As Integer: nr = VBA.FreeFile
Dim strBinFile As String
Dim sSoapAction As String
Dim sWebServiceURL As String
Dim bramka_prod_Soap_UBD As String
Dim bramka_prod_Web_UBD As String
Dim bramka_test_Soap_UBD As String
Dim bramka_test_Web_UBD As String
Dim Npliks As String
Dim Nplikzip As String
Dim text As Object
Dim SHA256 As Object
Dim SkrotDok As String
Dim DoUBD As Integer
Dim Status As Variant
Dim test As String
Dim Nrdok As String
Dim StatusOpis As String
Dim nip As String
Dim Imie As String
Dim nazwisko As String
Dim dataur As String


Unload Me


DoUBD = DoNr - OdNr
'------------------------------------------------------
'WYSY|fffd|KA DO e-Deklaracje
If eDek < 3 Then
For AA = OdNr To DoNr
test = Cells(AA, 85)
Status = Cells(AA, 84)
Nrdok = Cells(AA, 83)

If eDek = 1 Then
    If test = "" And Status = 200 Then
        MsgBox "PIT-11 o Numerze dokumentu z systemu e-Deklaracje" & vbCrLf & _
        "                  " & Nrdok & vbCrLf & _
        "ma status 200 i nie mo|fffd|e by|fffd| ponownie wys|fffd|ana do systemu e-Deklaracje.", 16, "e-Deklaracje"
    End
    End If
Else
    If test = "" And Status = 200 Then
    c = MsgBox("Bie|fffd||fffd|cy Numer dokumentu PIT-11 przyj|fffd|tego przez system e-Deklaracje" & vbCrLf & _
    "                  " & Nrdok & vbCrLf & _
    "zostanie bezpowrotnie skasowany." & vbCrLf & _
    "Czy zosta|fffd| on zachowany w wydrukowanym lub zapisanym w pdf UPO?", vbYesNo + vbQuestion, "e-Deklaracje")
    End
    End If
End If
If c = 7 Then End

If ePod = 2 Then
Przych = Range("Przychod").Value
Przych = InputBox("Wpisz przych|fffd|d z zeznania PIT za " & Year(Now) - 2 & " rok, np.:" & vbCrLf & _
"PIT-28 - poz. 42 lub" & vbCrLf & _
"PIT-36 - poz. 86 lub" & vbCrLf & _
"PIT-36 - poz. 133 je|fffd|eli podatnik wyst|fffd|powa|fffd| jako ma|fffd||fffd|onek lub" & vbCrLf & _
"PIT-36L - poz. 13 lub 18 lub" & vbCrLf & _
"PIT-37 - poz. 64 lub" & vbCrLf & _
"PIT-37 - poz. 95 je|fffd|eli podatnik wyst|fffd|powa|fffd| jako ma|fffd||fffd|onek lub" & vbCrLf & _
"PIT-38 - poz. 24 lub" & vbCrLf & _
"PIT-39 - poz. 20 lub" & vbCrLf & _
"PIT-40 - poz. 53 lub" & vbCrLf & _
"PIT-40A - poz. 53." & vbCrLf & _
"Je|fffd|eli podatnik nie sk|fffd|ada|fffd| zeznania nale|fffd|y wpisa|fffd| 0", "e-Deklaracje", Przych)
If IsNumeric(Przych) Then
    Application.EnableEvents = False
    Range("Przychod").Value = Przych
    Application.EnableEvents = True
Else
    MsgBox "Nie wpisano kwoty przychodu!", vbCritical, "Przerwanie wysy|fffd|ki"
End
End If
End If
'-----------------------------------------------------
Doxml
Application.ScreenUpdating = True

On Error GoTo PNXML
    Npliks = ThisWorkbook.path & "\.PLIK XML DO PODPISU CYFROWEGO.xml"
    If Dir(Npliks) <> "" Then Kill Npliks
On Error GoTo 0
    Name Nplik As Npliks
    Nplik = Npliks
If ePod = 1 Then
MsgBox "Plik o nazwie ''.PLIK XML DO PODPISU CYFROWEGO.xml'' jest w folderze " & ThisWorkbook.path & vbCrLf & vbCrLf & _
"Otw|fffd|rz TERAZ program do podpisu cyfrowego (np. Szafir, Sigillum, ProCertum lub inny)" & vbCrLf & vbCrLf & _
"i podpisz ''.PLIK XML DO PODPISU CYFROWEGO.xml'' podpisem cyfrowym." & vbCrLf & vbCrLf & _
"(Program do podpisu winien by|fffd| wcze|fffd|niej otwarty i zminimalizowany do paska zada|fffd| w dole ekranu." & vbCrLf & _
" Aby wykona|fffd| podpis KLIKNIJ TERAZ w pasku zada|fffd| ikon|fffd| tego programu i podpisz ten plik." & vbCrLf & _
" Po podpisaniu pliku KLIKNIJ EXCEL w pasku zada|fffd| i kontynuuj wysy|fffd|k|fffd|.)", vbInformation, "e-Deklaracje"
End If
'-----------------------------------------------------

b = MsgBox("Czy pokaza|fffd| dane XML przygotowane do wysy|fffd|ki?", vbYesNo + vbQuestion, "Podgl|fffd|d")
If ePod = 1 Then
    Npliks = Npliks & ".XAdES"
    If Dir(Npliks) = "" Then
        MsgBox "Plik nie zosta|fffd| podpisany podpisem cyfrowym." & Chr(13) & _
        "Brak pliku o nazwie: " & Chr(13) & Npliks & Chr(13) & _
        "Wysy|fffd|ka przerwana.", 16, "e-Deklaracje"
        If Dir(Nplik) <> "" Then Kill Nplik
        End
    End If
    Kill Nplik
    If Dir(Npliks) <> "" Then Name Npliks As Nplik
End If

If b = 6 Then Call ShowWindow
On Error GoTo 0
'-----------------------------------------------------
If eDek = 1 Then
pyt(1) = "Teraz nast|fffd|pi WYSY|fffd|KA DO SYSTEMU e-DEKLARACJE."
If ePod = 1 Then
pyt(2) = "przy podpisie cyfrowym mo|fffd|na pobra|fffd| w ci|fffd|gu 2 godzin."
Else
pyt(2) = "przy danych autoryzuj|fffd|cych mo|fffd|na pobra|fffd| do 2 minut."
End If
Else
pyt(1) = "Teraz nast|fffd|pi WYSY|fffd|KA DO BRAMKI TESTOWEJ."
pyt(2) = "z bramki testowej nie potwierdza przyj|fffd|cia dokumentu."
End If
a = MsgBox(pyt(1) & vbCrLf & vbCrLf & _
"KONTYNUOWA|fffd|?" & vbCrLf & vbCrLf & _
"Uwaga - Urz|fffd|dowe Po|fffd|wiadczenie Odbioru (UPO)" & vbCrLf & _
pyt(2) & vbCrLf, vbExclamation + vbYesNo, "e-Deklaracje")
If a = 7 Then
If Dir(Nplik) <> "" Then Kill Nplik
End
End If
If eDek = 1 Then
    sSoapAction = "https://bramka.e-deklaracje.mf.gov.pl/uslugi/dokumenty?wsdl"
    sWebServiceURL = "https://bramka.e-deklaracje.mf.gov.pl/uslugi/dokumenty"
End If
If eDek = 2 Then
    sSoapAction = "https://test-bramka.edeklaracje.gov.pl/uslugi/dokumenty?wsdl"
    sWebServiceURL = "https://test-bramka.edeklaracje.gov.pl/uslugi/dokumenty/"
End If
    Open Nplik For Binary Access Read As nr
        strBinFile = String(LOF(nr), " ")
        Get nr, , strBinFile
    Close nr
strBinFile = Mid(strBinFile, InStr(1, strBinFile, "<", 0))
strBinFile = Base64_Encode(strBinFile)

    Set oWinHttp = CreateObject("WinHttp.WinHttpRequest.5.1")
    oWinHttp.Open "POST", sWebServiceURL, False
    oWinHttp.setRequestHeader "SOAPAction", sSoapAction
    On Error GoTo CONNECT
If ePod = 1 Then
    oWinHttp.Send "<?xml version=""1.0"" encoding=""UTF-8""?>" & _
              "<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" " & _
                                "xmlns:xsd=""https://bramka.e-deklaracje.mf.gov.pl/xsd"">" & _
              "<soapenv:Header/>" & _
              "<soapenv:Body>" & _
                "<xsd:sendDocument>" & _
                  "<xsd:document>" & strBinFile & "</xsd:document>" & _
                "</xsd:sendDocument>" & _
              "</soapenv:Body>" & _
              "</soapenv:Envelope>"
Else
    oWinHttp.Send "<?xml version=""1.0"" encoding=""UTF-8""?>" & _
              "<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" " & _
                                "xmlns:xsd=""https://bramka.e-deklaracje.mf.gov.pl/xsd"">" & _
              "<soapenv:Header/>" & _
              "<soapenv:Body>" & _
                "<xsd:sendUnsignDocument>" & _
                  "<xsd:document>" & strBinFile & "</xsd:document>" & _
                "</xsd:sendUnsignDocument>" & _
              "</soapenv:Body>" & _
              "</soapenv:Envelope>"
End If
    On Error GoTo 0
    answ = oWinHttp.ResponseText
    Set oWinHttp = Nothing

Application.EnableEvents = False
Nrdok = Mid(answ, InStr(1, answ, "<ns:refId>", 1) + 10, InStr(1, answ, "</ns:refId>", 1) - InStr(1, answ, "<ns:refId>", 1) - 10)
Status = Mid(answ, InStr(1, answ, "<ns:status>", 1) + 11, InStr(1, answ, "</ns:status>", 1) - InStr(1, answ, "<ns:status>", 1) - 11)
If eDek = 1 Then test = ""
If eDek = 2 Then test = "t"

Cells(AA, 83) = Nrdok
Cells(AA, 84) = Status
Cells(AA, 85) = test

Application.EnableEvents = True
MsgBox "Kod statusu wysy|fffd|ki - " & Status & vbCrLf & vbCrLf & Mid(answ, InStr(1, answ, "<ns:statusOpis>", 1) + 15, InStr(1, answ, "</ns:statusOpis>", 1) - InStr(1, answ, "<ns:statusOpis>", 1) - 15), vbInformation, "Status/UPO"
On Error GoTo 0

If Dir(Nplik) <> "" Then Kill Nplik
Next

ThisWorkbook.Save
End If
'/WYSY|fffd|KA DO e-Deklaracje

'------------------------------------------------------
'WYSY|fffd|KA DO UBD
If eDek = 3 Or eDek = 4 Then

For AA = OdNr To DoNr
test = Cells(AA, 85)
Status = Cells(AA, 84)
Nrdok = Cells(AA, 83)
If eDek = 3 Then
    If test = "" And Status = 200 Then
        MsgBox "PIT-11 o Numerze dokumentu z systemu e-Deklaracje" & vbCrLf & _
        "                  " & Nrdok & vbCrLf & _
        "ma status 200 i nie mo|fffd|e by|fffd| ponownie wys|fffd|ana do systemu e-Deklaracje.", 16, "e-Deklaracje"
    End
    End If
Else
    If test = "" And Status = 200 Then
    c = MsgBox("Bie|fffd||fffd|cy Numer dokumentu PIT-11 przyj|fffd|tego przez system e-Deklaracje" & vbCrLf & _
    "                  " & Nrdok & vbCrLf & _
    "zostanie bezpowrotnie skasowany." & vbCrLf & _
    "Czy zosta|fffd| on zachowany w wydrukowanym lub zapisanym w pdf UPO?", vbYesNo + vbQuestion, "e-Deklaracje")
    End
    End If
End If
Next

DoxmlUBD

Application.ScreenUpdating = True
   
Npliks = ThisWorkbook.path & "\.PLIK XML DO PODPISU CYFROWEGO.zip"
On Error GoTo PNZIP
If Dir(Npliks) <> "" Then Kill Npliks
On Error GoTo 0

zipfile Nplik, Npliks
SkrotDok = FileToSHA256(Npliks)

If ePod = 1 Then
MsgBox "Plik o nazwie ''.PLIK XML DO PODPISU CYFROWEGO.zip'' jest w folderze " & ThisWorkbook.path & vbCrLf & vbCrLf & _
"Otw|fffd|rz TERAZ program do podpisu cyfrowego (np. Szafir, Sigillum, ProCertum lub inny)" & vbCrLf & vbCrLf & _
"i podpisz ''.PLIK XML DO PODPISU CYFROWEGO.zip'' podpisem cyfrowym." & vbCrLf & vbCrLf & _
"(Program do podpisu winien by|fffd| wcze|fffd|niej otwarty i zminimalizowany do paska zada|fffd| w dole ekranu." & vbCrLf & _
" Aby wykona|fffd| podpis KLIKNIJ TERAZ w pasku zada|fffd| ikon|fffd| tego programu i podpisz ten plik." & vbCrLf & _
" Po podpisaniu pliku KLIKNIJ EXCEL w pasku zada|fffd| i kontynuuj wysy|fffd|k|fffd|.)", vbInformation, "e-Deklaracje"
End If

If ePod = 2 Then
Przych = Range("Przychod").Value
Przych = InputBox("Wpisz przych|fffd|d z zeznania PIT za " & Year(Now) - 2 & " rok, np.:" & vbCrLf & _
"PIT-28 - poz. 42 lub" & vbCrLf & _
"PIT-36 - poz. 86 lub" & vbCrLf & _
"PIT-36 - poz. 133 je|fffd|eli podatnik wyst|fffd|powa|fffd| jako ma|fffd||fffd|onek lub" & vbCrLf & _
"PIT-36L - poz. 13 lub 18 lub" & vbCrLf & _
"PIT-37 - poz. 64 lub" & vbCrLf & _
"PIT-37 - poz. 95 je|fffd|eli podatnik wyst|fffd|powa|fffd| jako ma|fffd||fffd|onek lub" & vbCrLf & _
"PIT-38 - poz. 24 lub" & vbCrLf & _
"PIT-39 - poz. 20 lub" & vbCrLf & _
"PIT-40 - poz. 53 lub" & vbCrLf & _
"PIT-40A - poz. 53." & vbCrLf & _
"Je|fffd|eli podatnik nie sk|fffd|ada|fffd| zeznania nale|fffd|y wpisa|fffd| 0", "e-Deklaracje", Przych)
If IsNumeric(Przych) Then
    Application.EnableEvents = False
    Range("Przychod").Value = Przych
    Application.EnableEvents = True
Else
    MsgBox "Nie wpisano kwoty przychodu!", vbCritical, "Przerwanie wysy|fffd|ki"
End
End If
End If
'-----------------------------------------------------
On Error Resume Next
b = MsgBox("Czy pokaza|fffd| dane XML przygotowane do wysy|fffd|ki?", vbYesNo + vbQuestion, "Podgl|fffd|d")
If ePod = 1 Then
    Nplikzip = Npliks
    Npliks = Npliks & ".XAdES"
    If Dir(Npliks) = "" Then
        MsgBox "Plik nie zosta|fffd| podpisany podpisem cyfrowym." & Chr(13) & _
        "Brak pliku o nazwie: " & Chr(13) & Npliks & Chr(13) & _
        "Wysy|fffd|ka przerwana.", 16, "e-Deklaracje"
        If Dir(Nplik) <> "" Then Kill Nplik
        If Dir(Nplikzip) <> "" Then Kill Nplikzip
        End
    End If
    If Dir(Npliks) <> "" Then Name Npliks As Nplik
    If Dir(Nplikzip) <> "" Then Kill Nplikzip
End If
If b = 6 Then Call ShowWindow
On Error GoTo 0
'-----------------------------------------------------
    If eDek = 3 Then
       pyt(1) = "Teraz nast|fffd|pi WYSY|fffd|KA DO BRAMKI UBD systemu e-Deklaracje."
       If ePod = 1 Then
       pyt(2) = "przy podpisie cyfrowym mo|fffd|na pobra|fffd| po 2 godzinach."
       Else
       pyt(2) = "przy danych autoryzuj|fffd|cych mo|fffd|na pobra|fffd| do 2 minut."
       End If
    End If
    If eDek = 4 Then
        pyt(1) = "Teraz nast|fffd|pi WYSY|fffd|KA DO BRAMKI TESTOWEJ UBD."
        pyt(2) = "z bramki testowej nie potwierdza przyj|fffd|cia dokumentu."
    End If

a = MsgBox(pyt(1) & vbCrLf & vbCrLf & _
"KONTYNUOWA|fffd|?" & vbCrLf & vbCrLf & _
"Uwaga - Urz|fffd|dowe Po|fffd|wiadczenie Odbioru (UPO)" & vbCrLf & _
pyt(2) & vbCrLf, vbExclamation + vbYesNo, "e-Deklaracje")
    If a = 7 Then
        If Dir(Nplik) <> "" Then Kill Nplik
        If Dir(Npliks) <> "" Then Kill Npliks
        End
    End If
   
    If eDek = 3 Then
        sSoapAction = "https://ubd.mf.gov.pl/uslugi/dokumenty?wsdl"
        sWebServiceURL = "https://ubd.mf.gov.pl/uslugi/dokumenty"
    End If
    If eDek = 4 Then
        sSoapAction = "https://test-ubd.mf.gov.pl/uslugi/dokumenty?wsdl"
        sWebServiceURL = "https://test-ubd.mf.gov.pl/uslugi/dokumenty/"
    End If

    Open Npliks For Binary Access Read As nr
        strBinFile = String(LOF(nr), " ")
        Get nr, , strBinFile
    Close nr

strBinFile = Base64_Encode(strBinFile)
'-----------------------
If ePod = 2 Then
If Len(Sheets("P|fffd|atnik").Range("C5")) = 10 Then
nip = "<NIP>" & Sheets("P|fffd|atnik").Range("C5") & "</NIP>"
Else
nip = "<PESEL>" & Sheets("P|fffd|atnik").Range("C5") & "</PESEL>"
End If
Imie = ZN(Sheets("P|fffd|atnik").Range("C12"))
nazwisko = ZN(Sheets("P|fffd|atnik").Range("C11"))
dataur = DATAA(Sheets("P|fffd|atnik").Range("C13"))
Przych = UT(Przychod)

strDoWysylki = "<?xml version=""1.0"" encoding=""UTF-8""?>" & _
"<PodpisDaneAutoryzujace xmlns=""http://e-deklaracje.mf.gov.pl/Repozytorium/Definicje/Podpis/"" " & _
"xmlns:etd=""http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2011/06/21/eD/DefinicjeTypy/"" xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"">" & _
nip & vbNewLine & _
"<Nazwisko>" & nazwisko & "</Nazwisko>" & _
"<ImiePierwsze>" & Imie & "</ImiePierwsze>" & _
"<DataUrodzenia>" & dataur & "</DataUrodzenia>" & _
"<Kwota>" & Przych & "</Kwota>" & _
"<FunkcjaSkrotu>SHA-2</FunkcjaSkrotu>" & _
"<SkrotDokumentu>" & SkrotDok & "</SkrotDokumentu>" & _
"<Dokument>" & strBinFile & "</Dokument>" & _
"</PodpisDaneAutoryzujace>"
End If
If ePod = 2 Then
strBinFile = Base64_Encode(strDoWysylki)
End If
'---------------------------
    Set oWinHttp = CreateObject("WinHttp.WinHttpRequest.5.1")
    oWinHttp.Open "POST", sWebServiceURL, False
    oWinHttp.setRequestHeader "SOAPAction", sSoapAction

    If ePod = 1 Then
        oWinHttp.Send "<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"" " & _
        "xmlns:ns=""http://www.mf.gov.pl/schematy/DI/UslugiUBD/2013/11/05"">" & _
        "<soap:Header/>" & _
        "<soap:Body>" & _
        "<ns:WyslijDokumentZbiorczyPytanie>" & _
        "<ns:Dokument>" & strBinFile & "</ns:Dokument>" & _
        "</ns:WyslijDokumentZbiorczyPytanie>" & _
        "</soap:Body>" & _
        "</soap:Envelope>"
    End If
    If ePod = 2 Then
        oWinHttp.Send "<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"" " & _
        "xmlns:ns=""http://www.mf.gov.pl/schematy/DI/UslugiUBD/2013/11/05"">" & _
        "<soap:Header/>" & _
        "<soap:Body>" & _
        "<ns:WyslijNiepodpisanyDokumentZbiorczyPytanie>" & _
        "<ns:Dokument>" & strBinFile & "</ns:Dokument>" & _
        "</ns:WyslijNiepodpisanyDokumentZbiorczyPytanie>" & _
        "</soap:Body>" & _
        "</soap:Envelope>"
    End If
    
    On Error GoTo 0
    answ = oWinHttp.ResponseText
    Set oWinHttp = Nothing
answ = Polz(answ)
On Error Resume Next

Application.EnableEvents = False
Nrdok = Mid(answ, InStr(1, answ, "<refId>", 1) + 7, InStr(1, answ, "</refId>", 1) - InStr(1, answ, "<refId>", 1) - 7)
Status = Mid(answ, InStr(1, answ, "<status>", 1) + 8, InStr(1, answ, "</status>", 1) - InStr(1, answ, "<status>", 1) - 8)
If eDek = 3 Then test = ""
If eDek = 4 Then test = "t"

For AA = OdNr To DoNr
Cells(AA, 83) = Nrdok
Cells(AA, 84) = Status
Cells(AA, 81) = test
Next
Application.EnableEvents = True
MsgBox "Kod statusu wysy|fffd|ki - " & Status & vbCrLf & vbCrLf & Mid(answ, InStr(1, answ, "<statusOpis>", 1) + 12, InStr(1, answ, "</statusOpis>", 1) - InStr(1, answ, "<statusOpis>", 1) - 12), vbInformation, "Status/UPO"


If Dir(Nplik) <> "" Then Kill Nplik
If Dir(Npliks) <> "" Then Kill Npliks
On Error GoTo 0

ThisWorkbook.Save

End If

'/WYSY|fffd|KA DO UBD
'------------------------------------------------------
If eDek = 7 Then DoplikuxmlUBD
If eDek = 8 Then Doplikuxml
'------------------------------------------------------

If eDek = 9 Then
For a = OdNr To DoNr
    nrRef = Cells(a, 83)
    test = Cells(a, 85)
   
    If test = "" Then
        sSoapAction = "https://ubd.mf.gov.pl/uslugi/dokumenty?wsdl"
        sWebServiceURL = "https://ubd.mf.gov.pl/uslugi/dokumenty"
    Else
        sSoapAction = "https://test-ubd.mf.gov.pl/uslugi/dokumenty?wsdl"
        sWebServiceURL = "https://test-ubd.mf.gov.pl/uslugi/dokumenty/"
    End If
        Set oWinHttp = CreateObject("WinHttp.WinHttpRequest.5.1")
        oWinHttp.Open "POST", sWebServiceURL, False
        oWinHttp.setRequestHeader "SOAPAction", sSoapAction
        On Error GoTo CONNECT
        oWinHttp.Send "<soap:Envelope xmlns:soap=""http://www.w3.org/2003/05/soap-envelope"" " & _
                      "xmlns:ns=""http://www.mf.gov.pl/schematy/DI/UslugiUBD/2013/11/05"">" & _
                      "<soap:Header/>" & _
                      "<soap:Body>" & _
                        "<ns:PobierzUpoPytanie>" & _
                          "<ns:NumerReferencyjny>" & nrRef & "</ns:NumerReferencyjny>" & _
                        "</ns:PobierzUpoPytanie>" & _
                      "</soap:Body>" & _
                      "</soap:Envelope>"

        On Error GoTo 0
        answ = oWinHttp.ResponseText
        Set oWinHttp = Nothing
    answ = Replace(answ, "&lt;", "<")
    answ = Polz(answ)

    Status = Mid(answ, InStr(1, answ, "<status>", 1) + 8, InStr(1, answ, "</status>", 1) - InStr(1, answ, "<status>", 1) - 8)
    StatusOpis = Mid(answ, InStr(1, answ, "<statusOpis>", 1) + 12, InStr(1, answ, "</statusOpis>", 1) - InStr(1, answ, "<statusOpis>", 1) - 12)
    On Error Resume Next
    
    Application.EnableEvents = False
    Cells(a, 84) = Status
    Application.EnableEvents = True
    If Status <> 200 Then GoTo STATGO1
    UPOr(1) = Mid(answ, InStr(1, answ, "<NazwaPodmiotuPrzyjmujacego>", 1) + 28, InStr(1, answ, "</NazwaPodmiotuPrzyjmujacego>", 1) - InStr(1, answ, "<NazwaPodmiotuPrzyjmujacego>", 1) - 28)
    UPOr(2) = Mid(answ, InStr(1, answ, "<NumerReferencyjny>", 1) + 19, InStr(1, answ, "</NumerReferencyjny>", 1) - InStr(1, answ, "<NumerReferencyjny>", 1) - 19)
    UPOr(3) = Mid(answ, InStr(1, answ, "<DataWplyniecia>", 1) + 16, InStr(1, answ, "</DataWplyniecia>", 1) - InStr(1, answ, "<DataWplyniecia>", 1) - 16)
    UPOr(4) = Mid(answ, InStr(1, answ, "<SkrotDokumentu>", 1) + 16, InStr(1, answ, "</SkrotDokumentu>", 1) - InStr(1, answ, "<SkrotDokumentu>", 1) - 16)
    UPOr(5) = Mid(answ, InStr(1, answ, "<SkrotZlozonejStruktury>", 1) + 24, InStr(1, answ, "</SkrotZlozonejStruktury>", 1) - InStr(1, answ, "<SkrotZlozonejStruktury>", 1) - 24)
    UPOr(6) = Mid(answ, InStr(1, answ, "<NazwaStrukturyLogicznej>", 1) + 25, InStr(1, answ, "</NazwaStrukturyLogicznej>", 1) - InStr(1, answ, "<NazwaStrukturyLogicznej>", 1) - 25)
    UPOr(7) = Mid(answ, InStr(1, answ, "1>", 1) + 2, InStr(InStr(1, answ, "1>", 1) + 5, answ, "</", 1) - InStr(1, answ, "1>", 1) - 2)
    If Len(UPOr(7)) = 11 Then UPOr(8) = " numer PESEL"
    If Len(UPOr(7)) = 10 Then UPOr(8) = " NIP"
    UPOr(9) = Mid(answ, InStr(1, answ, "2>", 1) + 2, InStr(InStr(1, answ, "2>", 1) + 5, answ, "</", 1) - InStr(1, answ, "2>", 1) - 2)
    If Len(UPOr(9)) = 11 Then UPOr(10) = " numer PESEL"
    If Len(UPOr(9)) = 10 Then UPOr(10) = " NIP"
    If Len(UPOr(9)) > 11 Then UPOr(9) = ""
    UPOr(11) = Mid(answ, InStr(1, answ, "<KodUrzedu>", 1) + 11, InStr(1, answ, "</KodUrzedu>", 1) - InStr(1, answ, "<KodUrzedu>", 1) - 11)
    tabl = Range("USY")
    For c = 1 To UBound(tabl, 1)
     If tabl(c, 2) = UPOr(11) Then
        UPOr(11) = tabl(c, 1)
        Exit For
     End If
    Next
    UPOr(12) = Mid(answ, InStr(1, answ, "<StempelCzasu>", 1) + 14, InStr(1, answ, "</StempelCzasu>", 1) - InStr(1, answ, "<StempelCzasu>", 1) - 14)
    UPOr(13) = Mid(answ, InStr(1, answ, "SigningTime>", 1) + 12, InStr(InStr(1, answ, "SigningTime>", 1) + 20, answ, "</", 1) - InStr(1, answ, "SigningTime", 1) - 12)
'-----------------------------------------
STATGO1:
If Status = 300 Then
    If test = "" Then
        sSoapAction = "https://bramka.e-deklaracje.mf.gov.pl/uslugi/dokumenty?wsdl"
        sWebServiceURL = "https://bramka.e-deklaracje.mf.gov.pl/uslugi/dokumenty"
    Else
        sSoapAction = "https://test-bramka.edeklaracje.gov.pl/uslugi/dokumenty?wsdl"
        sWebServiceURL = "https://test-bramka.edeklaracje.gov.pl/uslugi/dokumenty/"
    End If
     
        Set oWinHttp = CreateObject("WinHttp.WinHttpRequest.5.1")
        oWinHttp.Open "POST", sWebServiceURL, False
        oWinHttp.setRequestHeader "SOAPAction", sSoapAction
        On Error GoTo CONNECT
        oWinHttp.Send "<?xml version=""1.0"" encoding=""UTF-8""?>" & _
                      "<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" " & _
                                        "xmlns:xsd=""https://bramka.e-deklaracje.mf.gov.pl/xsd"">" & _
                      "<soapenv:Header/>" & _
                      "<soapenv:Body>" & _
                        "<xsd:requestUPO>" & _
                          "<xsd:refId>" & nrRef & "</xsd:refId>" & _
                        "</xsd:requestUPO>" & _
                      "</soapenv:Body>" & _
                      "</soapenv:Envelope>"
        On Error GoTo 0
        answ = oWinHttp.ResponseText
        
        Set oWinHttp = Nothing
        
    answ = Replace(answ, "&lt;", "<")
    On Error Resume Next

    Status = Mid(answ, InStr(1, answ, "<ns:status>", 1) + 11, InStr(1, answ, "</ns:status>", 1) - InStr(1, answ, "<ns:status>", 1) - 11)
    StatusOpis = Mid(answ, InStr(1, answ, "<ns:statusOpis>", 1) + 15, InStr(1, answ, "</ns:statusOpis>", 1) - InStr(1, answ, "<ns:statusOpis>", 1) - 15)
    
    Application.EnableEvents = False
    Cells(a, 84) = Status
    Application.EnableEvents = True
        
    If Status <> 200 Then GoTo STATGO2
    UPOr(1) = Mid(answ, InStr(1, answ, "<NazwaPodmiotuPrzyjmujacego>", 1) + 28, InStr(1, answ, "</NazwaPodmiotuPrzyjmujacego>", 1) - InStr(1, answ, "<NazwaPodmiotuPrzyjmujacego>", 1) - 28)
    UPOr(2) = Mid(answ, InStr(1, answ, "<NumerReferencyjny>", 1) + 19, InStr(1, answ, "</NumerReferencyjny>", 1) - InStr(1, answ, "<NumerReferencyjny>", 1) - 19)
    UPOr(3) = Mid(answ, InStr(1, answ, "<DataWplyniecia>", 1) + 16, InStr(1, answ, "</DataWplyniecia>", 1) - InStr(1, answ, "<DataWplyniecia>", 1) - 16)
    UPOr(4) = Mid(answ, InStr(1, answ, "<SkrotDokumentu>", 1) + 16, InStr(1, answ, "</SkrotDokumentu>", 1) - InStr(1, answ, "<SkrotDokumentu>", 1) - 16)
    UPOr(5) = Mid(answ, InStr(1, answ, "<SkrotZlozonejStruktury>", 1) + 24, InStr(1, answ, "</SkrotZlozonejStruktury>", 1) - InStr(1, answ, "<SkrotZlozonejStruktury>", 1) - 24)
    UPOr(6) = Mid(answ, InStr(1, answ, "<NazwaStrukturyLogicznej>", 1) + 25, InStr(1, answ, "</NazwaStrukturyLogicznej>", 1) - InStr(1, answ, "<NazwaStrukturyLogicznej>", 1) - 25)
    UPOr(7) = Mid(answ, InStr(1, answ, "1>", 1) + 2, InStr(InStr(1, answ, "1>", 1) + 5, answ, "</", 1) - InStr(1, answ, "1>", 1) - 2)
    If Len(UPOr(7)) = 11 Then UPOr(8) = " numer PESEL"
    If Len(UPOr(7)) = 10 Then UPOr(8) = " NIP"
    UPOr(9) = Mid(answ, InStr(1, answ, "2>", 1) + 2, InStr(InStr(1, answ, "2>", 1) + 5, answ, "</", 1) - InStr(1, answ, "2>", 1) - 2)
    If Len(UPOr(9)) = 11 Then UPOr(10) = " numer PESEL"
    If Len(UPOr(9)) = 10 Then UPOr(10) = " NIP"
    If Len(UPOr(9)) > 11 Then UPOr(9) = ""
    UPOr(11) = Mid(answ, InStr(1, answ, "<KodUrzedu>", 1) + 11, InStr(1, answ, "</KodUrzedu>", 1) - InStr(1, answ, "<KodUrzedu>", 1) - 11)
    tabl = Range("USY")
    For c = 1 To UBound(tabl, 1)
        If tabl(c, 2) = UPOr(11) Then
        UPOr(11) = tabl(c, 1)
        Exit For
        End If
    Next
    UPOr(12) = Mid(answ, InStr(1, answ, "<StempelCzasu>", 1) + 14, InStr(1, answ, "</StempelCzasu>", 1) - InStr(1, answ, "<StempelCzasu>", 1) - 14)
    UPOr(13) = Mid(answ, InStr(1, answ, "SigningTime>", 1) + 12, InStr(InStr(1, answ, "SigningTime>", 1) + 20, answ, "</", 1) - InStr(1, answ, "SigningTime", 1) - 12)
 End If
 
STATGO2:
'-----------------------------------------
If a = DoNr Then
MsgBox "Kod statusu wysy|fffd|ki - " & Status & vbCrLf & vbCrLf & StatusOpis, vbInformation, "Status/UPO"
    
If Status = 200 Then
    Sheets("UPO").Visible = True
    Application.EnableEvents = False
    With Sheets("UPO")
    .[D6] = UPOr(1)
    .[D11] = UPOr(2)
    .[G11] = UPOr(3)
    .[D13] = UPOr(4)
    .[D15] = UPOr(5)
    .[D17] = UPOr(6)
    .[E20] = UPOr(7)
    .[D20] = UPOr(8)
    .[H20] = UPOr(9)
    .[G20] = UPOr(10)
    .[D22] = UPOr(11)
    .[D24] = UPOr(12)
    .[F26] = UPOr(13)
    End With
    Application.EnableEvents = True
    Sheets("UPO").Select
    Exit Sub
End If
End If
Next
End If
Exit Sub

PNXML:
MsgBox "W folderze '" & ThisWorkbook.path & "' znajduje si|fffd| ju|fffd| plik '.PLIK XML DO PODPISU CYFROWEGO.xml'," & _
"kt|fffd|ry jest otwarty w innym programie. USU|fffd| TEN PLIK!", 16, "Wysy|fffd|ka do e-Deklaracje przerwana"
Exit Sub

PNZIP:
On Error Resume Next
MsgBox "W folderze '" & ThisWorkbook.path & "' znajduje si|fffd| ju|fffd| plik '.PLIK XML DO PODPISU CYFROWEGO.zip'," & _
"kt|fffd|ry jest otwarty w programie do podpisu cyfrowego. USU|fffd| TEN PLIK!", 16, "Wysy|fffd|ka do e-Deklaracje przerwana"
If Dir(Nplik) <> "" Then Kill Nplik
Exit Sub

CONNECT:
If eDek < 5 Then Kill Nplik
If eDek = 1 And test = "" Then
kon = MsgBox("Brak protoko|fffd|u TLS 1.2 potrzebnego do komunikacji z systemem e-Deklaracje." & vbCrLf & vbCrLf & _
"Czy przej|fffd||fffd| do strony internetowej z informacj|fffd| o wymaganiach komunikacji?", 16 + vbYesNo, "Uwaga")
Else
kon = MsgBox("Brak protoko|fffd|u TLS 1.2 potrzebnego do komunikacji z systemem e-Deklaracje." & vbCrLf & vbCrLf & _
"Czy przej|fffd||fffd| do strony internetowej z informacj|fffd| o wymaganiach komunikacji?", 16 + vbYesNo, "Uwaga")
End If
If kon = 6 Then ActiveWorkbook.FollowHyperlink Address:="http://pit.waw.pl/e-pity.htm#certyfikat"
End Sub
Attribute VB_Name = "xmlUBD"
Option Private Module

Sub DoxmlUBD()
Dim P(1000, 85)
Dim PK(11)
Dim a, b, Dpl, Wer, Wer2
Dim Filename, Dz, Mc, Rok, ROKK
Dim zapis As String
Dim PR As Object

PK(1) = Sheets("P|fffd|atnik").Range("C5") 'nip
PK(2) = Sheets("P|fffd|atnik").Range("C14") 'imie
PK(3) = Sheets("P|fffd|atnik").Range("C15") 'nazw
PK(4) = Sheets("P|fffd|atnik").Range("C6") 'rok
PK(5) = Sheets("P|fffd|atnik").Range("C10") 'regon
PK(6) = Sheets("P|fffd|atnik").Range("C7") 'cel
PK(7) = Sheets("P|fffd|atnik").Range("C8") 'rodz sk|fffd|ad
PK(8) = Sheets("P|fffd|atnik").Range("C9") 'nazwa
PK(9) = Sheets("P|fffd|atnik").Range("C11") 'nazwisko
PK(10) = Sheets("P|fffd|atnik").Range("C12") 'imie
PK(11) = Sheets("P|fffd|atnik").Range("C13") 'dataur


Wer2 = Empty
NRPL:
Nplik = ThisWorkbook.path & "\" & "PIT-11 " & PK(4) & Wer2 & ".xml"
If Dir(Nplik) <> "" Then
    Wer = Wer + 1
    Wer2 = "(" & Wer & ")"
    GoTo NRPL
End If

Sheets("Podatnicy").Select

OdNr = Range("C3") + 7
DoNr = Range("C4") + 7

For a = OdNr To DoNr
P(a, 5) = Application.WorksheetFunction.VLookup(Cells(a, 2), [USY], 2, False) 'us
If Cells(a, 7) = "" Then
    P(a, 10) = 1
Else
    P(a, 10) = 2
End If
P(a, 11) = Replace(Cells(a, 3), " ", "")
P(a, 12) = Cells(a, 8)
P(a, 13) = Cells(a, 9)
P(a, 15) = Cells(a, 5)
P(a, 16) = Cells(a, 6)
P(a, 17) = Cells(a, 4)
If P(a, 17) = "" Then
Dz = Mid(P(a, 11), 5, 2)
Mc = Mid(P(a, 11), 3, 2)
Rk = "19" & Left(P(a, 11), 2)
If Left(Mc, 1) > 1 Then
Mc = Left(Mc, 1) - 2 & Right(Mc, 1)
Rk = "20" & Left(P(a, 11), 2)
End If
P(a, 17) = Rk & "-" & Mc & "-" & Dz
Else
P(a, 17) = DATAA(P(a, 17))
End If

If P(a, 10) = 1 Then
P(a, 18) = "PL"
Else
P(a, 18) = Application.WorksheetFunction.VLookup(Cells(a, 10), [KRAJE], 2, False)
P(a, 14) = P(a, 18)
End If
P(a, 19) = Cells(a, 11)
P(a, 20) = Cells(a, 12)
P(a, 21) = Cells(a, 13)
P(a, 22) = Cells(a, 14)
P(a, 23) = Cells(a, 15)
P(a, 24) = Cells(a, 16)
P(a, 25) = Cells(a, 17)
P(a, 26) = Cells(a, 18)
P(a, 27) = Cells(a, 19)

    For b = 28 To 85
    P(a, b) = Cells(a, b - 8)
    Next
    P(a, 31) = P(a, 29) + P(a, 34) - P(a, 30) - P(a, 35)
    P(a, 37) = P(a, 36)
    P(a, 40) = P(a, 39)
    P(a, 44) = P(a, 43)
    P(a, 47) = P(a, 46)
    P(a, 51) = P(a, 49) - P(a, 50)
    P(a, 55) = P(a, 53) - P(a, 54)
    P(a, 58) = P(a, 57) + P(a, 60) - P(a, 61)
    P(a, 64) = P(a, 62) - P(a, 63)
    P(a, 67) = P(a, 66)
    P(a, 81) = P(a, 74) + P(a, 76) + P(a, 78) + P(a, 80)
Next

Set PR = CreateObject("ADODB.Stream")
PR.Type = 2
PR.Charset = "utf-8"
PR.Open

'   Zapisanie znacznika <xml>
PR.WriteText "<?xml version=""1.0"" encoding=""UTF-8""?>" & vbNewLine
PR.WriteText "<Deklaracja xmlns:etd=""http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2018/08/24/eD/DefinicjeTypy/"" xmlns=""http://crd.gov.pl/wzor/2018/12/10/6357/"">" & vbNewLine
PR.WriteText "<Naglowek>" & vbNewLine
PR.WriteText "<KodFormularza kodPodatku=""PIT"" kodSystemowy=""PIT-11 (24)"" rodzajZobowiazania=""Z"" wersjaSchemy=""2-0E"">PIT-11Z</KodFormularza>" & vbNewLine
PR.WriteText "<WariantFormularza>24</WariantFormularza>" & vbNewLine
PR.WriteText "<CelZlozenia poz=""P_6"">" & PK(6) & "</CelZlozenia>" & vbNewLine
PR.WriteText "<Rok>" & PK(4) & "</Rok>" & vbNewLine
PR.WriteText "<KodUrzedu>0000</KodUrzedu>" & vbNewLine
PR.WriteText "</Naglowek>" & vbNewLine
PR.WriteText "<Podmiot1 rola=""P|fffd|atnik/Sk|fffd|adaj|fffd|cy"">" & vbNewLine
If PK(7) = 1 Then
PR.WriteText "<etd:OsobaNiefizyczna>" & vbNewLine
PR.WriteText "<etd:NIP>" & PK(1) & "</etd:NIP>" & vbNewLine
PR.WriteText "<etd:PelnaNazwa>" & ZN(PK(8)) & "</etd:PelnaNazwa>" & vbNewLine
If PK(5) <> "" Then PR.WriteText "<etd:REGON>" & PK(5) & "</etd:REGON>" & vbNewLine
PR.WriteText "</etd:OsobaNiefizyczna>" & vbNewLine
Else
PR.WriteText "<etd:OsobaFizyczna>" & vbNewLine
If Len(PK(1)) = 10 Then
    PR.WriteText "<etd:NIP>" & PK(1) & "</etd:NIP>" & vbNewLine
Else
    PR.WriteText "<etd:PESEL>" & PK(1) & "</etd:PESEL>" & vbNewLine
End If
PR.WriteText "<etd:ImiePierwsze>" & ZN(PK(10)) & "</etd:ImiePierwsze>" & vbNewLine
PR.WriteText "<etd:Nazwisko>" & ZN(PK(9)) & "</etd:Nazwisko>" & vbNewLine
PR.WriteText "<etd:DataUrodzenia>" & DATAA(PK(11)) & "</etd:DataUrodzenia>" & vbNewLine
PR.WriteText "</etd:OsobaFizyczna>" & vbNewLine
End If
PR.WriteText "</Podmiot1>" & vbNewLine

For a = OdNr To DoNr
'PODATNIK
PR.WriteText "<Pozycja typ=""G"">" & vbNewLine
PR.WriteText "<KodUrzeduP>" & P(a, 5) & "</KodUrzeduP>" & vbNewLine
PR.WriteText "<Podmiot2 rola=""Podatnik"">" & vbNewLine
PR.WriteText "<OsobaFizyczna>" & vbNewLine
If Len(P(a, 11)) = 11 Then
    PR.WriteText "<etd:PESEL>" & P(a, 11) & "</etd:PESEL>" & vbNewLine
Else
    PR.WriteText "<etd:NIP>" & P(a, 11) & "</etd:NIP>" & vbNewLine
End If
PR.WriteText "<etd:ImiePierwsze>" & UCase(P(a, 16)) & "</etd:ImiePierwsze>" & vbNewLine
PR.WriteText "<etd:Nazwisko>" & UCase(P(a, 15)) & "</etd:Nazwisko>" & vbNewLine
PR.WriteText "<etd:DataUrodzenia>" & P(a, 17) & "</etd:DataUrodzenia>" & vbNewLine
If P(a, 10) = 2 Then
PR.WriteText "<NrId poz=""P_12"">" & UCase(P(a, 12)) & "</NrId>" & vbNewLine
PR.WriteText "<RodzajNrId poz=""P_13"">" & P(a, 13) & "</RodzajNrId>" & vbNewLine
PR.WriteText "<KodKrajuWydania poz=""P_14A"">" & P(a, 14) & "</KodKrajuWydania>" & vbNewLine
End If
PR.WriteText "</OsobaFizyczna>" & vbNewLine
PR.WriteText "<AdresZamieszkania rodzajAdresu=""RAD"">" & vbNewLine
PR.WriteText "<KodKraju poz=""P_18A"">" & P(a, 18) & "</KodKraju>" & vbNewLine
If P(a, 18) = "PL" Then
PR.WriteText "<Wojewodztwo>" & UCase(P(a, 19)) & "</Wojewodztwo>" & vbNewLine
PR.WriteText RTrim("<Powiat>" & UCase(P(a, 20)) & "</Powiat>") & vbNewLine
PR.WriteText "<Gmina>" & UCase(P(a, 21)) & "</Gmina>" & vbNewLine
End If
If P(a, 22) <> "" Then PR.WriteText "<Ulica poz=""P_22"">" & UCase(P(a, 22)) & "</Ulica>" & vbNewLine
If P(a, 23) <> "" Then PR.WriteText "<NrDomu poz=""P_23"">" & UCase(P(a, 23)) & "</NrDomu>" & vbNewLine
If P(a, 24) <> "" Then PR.WriteText "<NrLokalu poz=""P_24"">" & UCase(P(a, 24)) & "</NrLokalu>" & vbNewLine
PR.WriteText "<Miejscowosc poz=""P_25"">" & UCase(P(a, 25)) & "</Miejscowosc>" & vbNewLine
If P(a, 26) <> "" Then PR.WriteText "<KodPocztowy poz=""P_26"">" & P(a, 26) & "</KodPocztowy>" & vbNewLine
If P(a, 27) <> "" Then PR.WriteText "<Poczta>" & UCase(P(a, 27)) & "</Poczta>" & vbNewLine
PR.WriteText "</AdresZamieszkania>" & vbNewLine
PR.WriteText "</Podmiot2>" & vbNewLine
PR.WriteText "<PozycjeSzczegolowe>" & vbNewLine
PR.WriteText "<P_10>" & P(a, 10) & "</P_10>" & vbNewLine

For b = 28 To 85
Select Case b
'Pola warunkowe 0,00-
Case 29
    If P(a, b) <> "" Or P(a, b + 3) <> "" Or P(a, b + 5) <> "" Then
    PR.WriteText "<P_" & b - 1 & ">" & UL(P(a, b - 1)) & "</P_" & b - 1 & ">" & vbNewLine '28
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine '29
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine '30
    PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine '31
    If P(a, b + 3) > 0 Then PR.WriteText "<P_" & b + 3 & ">" & UT(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine '32
    PR.WriteText "<P_" & b + 4 & ">" & UL(P(a, b + 4)) & "</P_" & b + 4 & ">" & vbNewLine '33
    If P(a, b + 5) <> "" Then
    PR.WriteText "<P_" & b + 5 & ">" & UT(P(a, b + 5)) & "</P_" & b + 5 & ">" & vbNewLine '34
    PR.WriteText "<P_" & b + 6 & ">" & UT(P(a, b + 6)) & "</P_" & b + 6 & ">" & vbNewLine '35
    End If
    End If
Case 36, 43, 46
    If P(a, b) <> "" Then
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 2 & ">" & UL(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine
    End If
Case 39, 66
    If P(a, b) <> "" Or P(a, b + 2) <> "" Then
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    If P(a, b + 2) > 0 Then PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 3 & ">" & UL(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine
    End If
Case 49, 53, 62
    If P(a, b) <> "" Then
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine
    PR.WriteText "<P_" & b + 3 & ">" & UL(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine
    End If
Case 58
    If P(a, b) <> "" Then
    PR.WriteText "<P_" & b - 1 & ">" & UT(P(a, b - 1)) & "</P_" & b - 1 & ">" & vbNewLine '57
    PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine '58
    PR.WriteText "<P_" & b + 1 & ">" & UL(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine '59
        If P(a, b + 2) > 0 Then
        PR.WriteText "<P_" & b + 2 & ">" & UT(P(a, b + 2)) & "</P_" & b + 2 & ">" & vbNewLine '60
        PR.WriteText "<P_" & b + 3 & ">" & UT(P(a, b + 3)) & "</P_" & b + 3 & ">" & vbNewLine '61
        End If
    End If
'Pola nieobowi|fffd|zkowe 0,00
Case 70 To 74, 81 To 84
    If P(a, b) <> "" Then PR.WriteText "<P_" & b & ">" & UT(P(a, b)) & "</P_" & b & ">" & vbNewLine

Case 75, 77, 79
    If P(a, b + 1) <> "" Then
    PR.WriteText "<P_" & b & ">" & ZN(P(a, b)) & "</P_" & b & ">" & vbNewLine
    PR.WriteText "<P_" & b + 1 & ">" & UT(P(a, b + 1)) & "</P_" & b + 1 & ">" & vbNewLine
    End If
    
Case 85
PR.WriteText "<P_85>2</P_85>" & vbNewLine

End Select
Next


PR.WriteText "</PozycjeSzczegolowe>" & vbNewLine
PR.WriteText "</Pozycja>" & vbNewLine

Next
PR.WriteText "<Pouczenie>1</Pouczenie>" & vbNewLine
PR.WriteText "</Deklaracja>"

PR.SaveToFile Nplik, 2
Set PR = Nothing
If eDek = 7 Then XSDValidUBD (Nplik)

End Sub

Sub DoplikuxmlUBD()
DoxmlUBD
MsgBox "Plik zbiorczy " & Dir(Nplik) & " zapisany w folderze " & ThisWorkbook.path, vbInformation, "Zapis do XML"
End Sub



' InQuest injected base64 decoded content
' :'z4

INQUEST-PP=macro
