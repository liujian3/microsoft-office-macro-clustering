Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Option Explicit

Sub Vergleich_Ranking_SchlagworteGDV()

Dim MappeAktuell As Workbook
Dim MappeVergleich As Workbook
Dim varDatei_vergl As Variant

Dim lngletzteZeileAktuell As Long
Dim lngletzteZeileVergleich As Long
Dim strSparteAktuell(20) As String
Dim strSparteVergleich(20) As String
Dim intSpartenbeginn(20) As Integer

Dim strvergl As String
Dim rngEinfuegezeile As Range
Dim lngEinfuegezeile As Long

Dim i As Integer
Dim intspartenzaehler As Integer
Dim k As Integer
Dim l As Integer
Dim m As Integer
Dim p As Integer

Set MappeAktuell = ActiveWorkbook
 

'MsgBox "VORSICHT ! Das Tabellenlayout wurde am 17.3.15 ge|fffd|ndert (Summenzeilen am Ende jeder Sparte), die Makroprogrammierung muss vor Ausf|fffd|hrung gepr|fffd|ft werde, da vmtl. falsche Bez|fffd|ge.": Exit Sub
MsgBox "VORSICHT ! Das Tabellenlayout wurde am 17.3.15 ge|fffd|ndert und eine Druckversion erg|fffd|nzt(Summenzeilen am Ende jeder Sparte). Bitte pr|fffd|fen, ob Richtiges Blatt f|fffd|r das makro gew|fffd|hlt ist."

'ChDrive "J:"
'ChDir "J:\Verein\Gesch|fffd|ftsleitung\PR|fffd|SIDIUM-GDV"

varDatei_vergl = Application.GetOpenFilename(FileFilter:="Microsoft Excel-Dateien (*.xlsm), *.xlsx")
If varDatei_vergl = False Then
MsgBox "Sie haben den Vorgang abgebrochen. der Vorgang wird beendet", vbInformation
Exit Sub
Else
MsgBox "Folgende Datei wurde ausgew|fffd|hlt:" & vbCrLf & varDatei_vergl
End If

Set MappeVergleich = Workbooks.Open(varDatei_vergl)

  
    lngletzteZeileAktuell = MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(Cells.Rows.Count, 2).End(xlUp).Row ' letzte Zeile
    MappeAktuell.Worksheets("Sparte PSW TOP20-10").Activate
    Columns("J:J").Select
    Selection.ClearContents
    
    lngletzteZeileVergleich = MappeVergleich.Worksheets("Sparte PSW TOP20-10").Cells(Cells.Rows.Count, 2).End(xlUp).Row ' letzte Zeile
    
    intspartenzaehler = 0
    For i = 5 To lngletzteZeileAktuell ' 5 da 1-4 |fffd|berschriften
             
            strSparteAktuell(intspartenzaehler) = MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(i, 1).Value
            If strSparteAktuell(intspartenzaehler) <> "" Then
                intSpartenbeginn(intspartenzaehler) = MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(i, 1).Row
                intspartenzaehler = intspartenzaehler + 1
            End If
    Next i
    intSpartenbeginn(intspartenzaehler) = MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(i, 1).Row 'Wert f|fffd|r letztes intspartenzaehler / i (letzte Zeile)
    
    k = 0 ' z|fffd|hlt ebenfalls Sparten im Vergleichsblatt
    For i = 5 To lngletzteZeileVergleich ' 5 da 1-4 |fffd|berschriften
        'MappeNeu.Worksheets("Sparte PSW TOP20-10").Activate
        strSparteVergleich(k) = MappeVergleich.Worksheets("Sparte PSW TOP20-10").Cells(i, 1).Value
        If strSparteVergleich(k) <> "" Then k = k + 1 ' z|fffd|hlt ebenfalls Sparten
    Next i

    For l = 0 To intspartenzaehler - 1
    For m = 0 To k - 1
        
        If IsError(Application.Match(strSparteAktuell(l), strSparteVergleich(), 0)) Then ' pr|fffd|fen ob nicht vergleich(m) hei|fffd|en muss
            ' pr|fffd|ft, ob Element(l) von  Sparte Ausgangsdatei Bestandteil von Vergleichsdatei ist
            ' MsgBox strSparteAusg(l) & " nicht gefunden."
            Set rngEinfuegezeile = MappeAktuell.Worksheets("Sparte PSW TOP20-10").Range("A:A").Find(what:=strSparteAktuell(l), _
            LookIn:=xlValues, lookat:=xlWhole)
                If rngEinfuegezeile Is Nothing Then 'gesuchter strvergleich ist nicht in Vergleichdatei
                    For p = intSpartenbeginn(l) To intSpartenbeginn(l + 1) - 1
                    MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(p, 10).Value = "neu"
                    Next p
                    m = k - 1
                End If
        
        Else
        'MsgBox strSparteAusg(l) & "gefunden."
            If strSparteAktuell(l) = strSparteVergleich(m) Then ' Ausgangssparte und Vergleichssparte sind gleich
                If l = m Then ' Pr|fffd|ft ob Spartenz|fffd|hler von Ausgangsdatei (l) und  Vergleichsdatei (m) |fffd|bereinstimmt
                    For p = intSpartenbeginn(l) To intSpartenbeginn(l + 1) - 1
                        strvergl = MappeVergleich.Worksheets("Sparte PSW TOP20-10").Cells(p, 4).Value
                        Set rngEinfuegezeile = MappeAktuell.Worksheets("Sparte PSW TOP20-10").Range("D" & intSpartenbeginn(l) _
                        & ":D" & intSpartenbeginn(l + 1) - 1).Find(what:=strvergl, LookIn:=xlValues, lookat:=xlWhole)
                            If Not rngEinfuegezeile Is Nothing Then 'gesuchter strvergleich ist in Ausgangsdatei
                                lngEinfuegezeile = rngEinfuegezeile.Row
                                MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(lngEinfuegezeile, 10).Value = _
                                MappeVergleich.Worksheets("Sparte PSW TOP20-10").Cells(p, 2).Value
                            End If
                    Next p
                    m = k - 1
                Else ' Z|fffd|hler von l und m stimmen nicht |fffd|berein
                    For p = intSpartenbeginn(m) To intSpartenbeginn(m + 1) - 1
                        strvergl = MappeVergleich.Worksheets("Sparte PSW TOP20-10").Cells(p, 4).Value
                        Set rngEinfuegezeile = MappeAktuell.Worksheets("Sparte PSW TOP20-10").Range("D" & intSpartenbeginn(l) _
                        & ":D" & intSpartenbeginn(l + 1) - 1).Find(what:=strvergl, LookIn:=xlValues, lookat:=xlWhole)
                            If Not rngEinfuegezeile Is Nothing Then 'gesuchter strvergleich ist in Ausgangsdatei
                                lngEinfuegezeile = rngEinfuegezeile.Row
                                MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(lngEinfuegezeile, 10).Value = _
                                MappeVergleich.Worksheets("Sparte PSW TOP20-10").Cells(p, 2).Value
                            End If
                    Next p
                    m = k - 1
                End If
            End If
        End If
    Next m
    Next l

For i = 5 To lngletzteZeileAktuell
If MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(i, 10).Value = "" _
Then MappeAktuell.Worksheets("Sparte PSW TOP20-10").Cells(i, 10).Value = "-"
Next i

MsgBox ("fertig")

'MappeVergleich.Workbooks.Close SaveChanges:=False


End Sub

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdAktualisieren, 2, 0, MSForms, CommandButton"
Option Explicit

Private Sub cmdAktualisieren_Click()
    Dim Obersparte As String
    Dim Untersparte As String
    Dim Jahr As String
    Dim Blattname As String
    
    Blattname = ThisWorkbook.ActiveSheet.Name
    
    Obersparte = Sheets(Blattname).Range("B3").Value
    Untersparte = Sheets(Blattname).Range("B4").Value
    Jahr = Sheets(Blattname).Range("B5").Value
    
    'Pass the Parameters values to the Stored Procedure used in the Data Connection
    With ActiveWorkbook.Connections("ombsrv06 Ombudat20DW").OLEDBConnection
    .CommandText = "EXEC pswvu.proc_AuswertungWeicheKritUeberPswTop10 '" & Obersparte & "','" & Untersparte & "','" & Jahr & "'"
    ActiveWorkbook.Connections("ombsrv06 Ombudat20DW").Refresh
    
    Sheets(Blattname).Range("A8").Select
    ActiveWorkbook.RefreshAll
    
    End With
End Sub
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Refresh, 1, 0, MSForms, CommandButton"
Private Sub Refresh_Click()
    Dim Obersparte As String
    Dim Jahr As String
    Dim Blattname As String
    
    Blattname = ThisWorkbook.ActiveSheet.Name
    
    Obersparte = Sheets(Blattname).Range("B3").Value
    Jahr = Sheets(Blattname).Range("B4").Value
    
    If Obersparte = "" Then
        Obersparte = "NULL"
    Else
        Obersparte = "'" & Obersparte & "'"
    End If
    
    If Jahr = "" Then
        Jahr = "NULL"
    Else
        Jahr = "'" & Jahr & "'"
    End If
    
    'Pass the Parameters values to the Stored Procedure used in the Data Connection
    With ActiveWorkbook.Connections("ombsrv06 Ombudat20DW PSW").OLEDBConnection
    .CommandText = "EXEC pswvu.proc_AuswertungPswTop1020 " & Obersparte & ", " & Jahr
    Debug.Print .CommandText
    ActiveWorkbook.Connections("ombsrv06 Ombudat20DW PSW").Refresh
    
    Sheets(Blattname).Range("A8").Select
    ActiveWorkbook.RefreshAll
    
    End With

    
End Sub
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit



INQUEST-PP=macro
