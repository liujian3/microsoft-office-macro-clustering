Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Public DatenbankCount
Public Fertigung

Public Sub Auswertung()
    Dim Suche
    Dim Pos
    Dim Zeile
    Dim Blattcount
    Dim lngZeile As Long
    
    Worksheets("Datenbank").Columns("A:G").ClearContents
    
    Worksheets("Datenbank").Cells(1, 1).Value = "Materialnummer"
    Worksheets("Datenbank").Cells(1, 2).Value = "Materialg|fffd|te"
    Worksheets("Datenbank").Cells(1, 3).Value = "L|fffd|nge von"
    Worksheets("Datenbank").Cells(1, 4).Value = "L|fffd|nge bis"
    Worksheets("Datenbank").Cells(1, 5).Value = "Euro/100lfm"
    Worksheets("Datenbank").Cells(1, 6).Value = "Zusatz"
    Worksheets("Datenbank").Cells(1, 7).Value = "Fertigung"
    
    
    Blattcount = Application.Worksheets.Count
    For Count = 1 To Blattcount Step 1
        If (Worksheets(Count).Name <> "Datenbank" And Worksheets(Count).Name <> "Materialpreise" _
        And Worksheets(Count).Name <> "ZKMI" And Worksheets(Count).Name <> "LBX Ziel" And Worksheets(Count).Visible = True) Then
            lngZeile = 0
            lngZeile = Worksheets(Count).Cells(Rows.Count, 2).End(xlUp).Row
            
            Call Materialnummer(Worksheets(Count).Name, "P0")
        End If
    Next
    
    'Ergebnis Sortieren
    lngZeile = Worksheets("Datenbank").Cells(Rows.Count, 1).End(xlUp).Row
    Worksheets("Datenbank").Select
    Worksheets("Datenbank").Columns("A:G").Select
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Add Key:=Range("A2:A" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Add Key:=Range("B2:B" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Add Key:=Range("C2:C" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("Datenbank").Sort.SortFields.Add Key:=Range("E2:E" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("Datenbank").Sort
        .SetRange Range("A1:G" & lngZeile)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    Worksheets("Datenbank").Range("H1").Select
    Worksheets("ZKMI").Select
    
    lngZeile = Worksheets("ZKMI").Cells(Rows.Count, 1).End(xlUp).Row
    Range("A2:J" & lngZeile).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Range("J1").Select
    For i = 29 To lngZeile Step 28
        With Range("A" & i & ":J" & i).Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = xlAutomatic
            .TintAndShade = 0
            .Weight = xlMedium
        End With
    Next
End Sub

Function Materialnummer(blattname, suchtext)
    Dim Preis As Double
    Dim Zeile As Long
    Zeile = Worksheets("Datenbank").Cells(Rows.Count, 1).End(xlUp).Row + 1
    
    For Spalte = 1 To 10 Step 1
        On Error Resume Next
        Pos = 0
        Pos = Application.WorksheetFunction.Match("*" & suchtext & "*", Worksheets(blattname).Columns(Spalte), 0)
        If (Pos = 0) Then
            Pos = Application.WorksheetFunction.Match("*PG0*", Worksheets(blattname).Columns(Spalte), 0)
        ElseIf (Pos = 0) Then
            Pos = Application.WorksheetFunction.Match("*PS0*", Worksheets(blattname).Columns(Spalte), 0)
        End If
        If Not (Pos = 0) Then Exit For
    Next
    
    If (Pos > 0) Then
        SpaltePreis = Suchspalte(blattname, "Euro/100lfm")
        Dim lngZeile As Long
        lngZeile = Worksheets(blattname).Cells(Rows.Count, Spalte).End(xlUp).Row
        'LaengeGefundenInSpalte = Suchspalte(blattname, "L=")
        GueteGefundenInSpalte = Suchspalte(blattname, "G|fffd|te")
        FertigungGefundenInSpalte = Suchspalte(blattname, "Fertigung")
        For i = Pos To lngZeile Step 1
            Materialnummer = Worksheets(blattname).Cells(i, Spalte).Value
            For Count = 1 To 50 Step 1
                On Error Resume Next
                TempPos = 0
                TempPos = InStr(Worksheets(blattname).Cells(i, Count), "L=")
                If Not (TempPos = 0) Then
                    LaengeGefundenInSpalte = Count
                    Exit For
                End If
            Next
            'If Not (Guete = "") Then TempGuete = Guete 'letzte gefuellte Guete merken
            Guete = Worksheets(blattname).Cells(i, GueteGefundenInSpalte).Value
            'If (Guete = "") Then Guete = TempGuete 'wenn Guete leer dann letzte gefuellte verwenden
            Preis = Worksheets(blattname).Cells(i, SpaltePreis).Value
            Fertigung = Worksheets(blattname).Cells(i, FertigungGefundenInSpalte).Value
            Aktiv = False
            If (Worksheets(blattname).Rows(i).Height > 5) Then Aktiv = True 'Nur nicht ausgeblendete Zeilen
            If ((InStr(Materialnummer, "PP0") > 0 Or InStr(Materialnummer, "PG0") > 0 Or InStr(Materialnummer, "PS0") > 0 Or Preis > 0) And Aktiv = True) Then
                If ((InStr(Materialnummer, "PP0") > 0 Or InStr(Materialnummer, "PG0") > 0 Or InStr(Materialnummer, "PS0")) And Preis > 0) Then
                    Worksheets("Datenbank").Cells(Zeile, 1).Value = Materialnummer
                    Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete
                    Worksheets("Datenbank").Cells(Zeile, 5).Value = Preis
                    If (InStr(Worksheets(blattname).Cells(i, 1).Value, "ungelocht") > 0 _
                    Or InStr(Worksheets(blattname).Cells(i, 2).Value, "ungelocht") > 0 _
                    Or InStr(Worksheets(blattname).Cells(i, 3).Value, "ungelocht") > 0) Then
                        Worksheets("Datenbank").Cells(Zeile, 6).Value = "ungelocht"
                    ElseIf (InStr(Worksheets(blattname).Cells(i, 1).Value, "gelocht") > 0 _
                    Or InStr(Worksheets(blattname).Cells(i, 2).Value, "gelocht") > 0 _
                    Or InStr(Worksheets(blattname).Cells(i, 3).Value, "gelocht") > 0) Then
                        Worksheets("Datenbank").Cells(Zeile, 6).Value = "gelocht"
                    End If
                    Worksheets("Datenbank").Cells(Zeile, 7).Value = Fertigung
                    Laenge = Worksheets(blattname).Cells(i, LaengeGefundenInSpalte).Value
                    If (InStr(Laenge, "L=") > 0) Then
                        TempPos = InStr(Laenge, "mm")
                        Laenge = Left(Laenge, TempPos - 1)
                        TempPos = InStr(Laenge, "=")
                        Laenge = Mid(Laenge, TempPos + 1, 20)
                        If (InStr(Laenge, "-") > 0) Then
                            TempLaenge = Split(Laenge, "-")
                            Worksheets("Datenbank").Cells(Zeile, 3).Value = CDbl(TempLaenge(0))
                            Worksheets("Datenbank").Cells(Zeile, 4).Value = CDbl(TempLaenge(1))
                        ElseIf (InStr(Laenge, "ab ") > 0) Then
                            TempLaenge = Split(Laenge, "ab ")
                            Worksheets("Datenbank").Cells(Zeile, 3).Value = CDbl(TempLaenge(1))
                            Worksheets("Datenbank").Cells(Zeile, 4).Value = 99999
                        Else
                            Worksheets("Datenbank").Cells(Zeile, 3).Value = CDbl(Laenge)
                            Worksheets("Datenbank").Cells(Zeile, 4).Value = CDbl(Laenge)
                        End If
                    Else
                        Worksheets("Datenbank").Cells(Zeile, 3).Value = 1
                        Worksheets("Datenbank").Cells(Zeile, 4).Value = 99999
                    End If
                    Zeile = Zeile + 1
                ElseIf ((InStr(Materialnummer, "PP0") = 0 Or InStr(Materialnummer, "PG0") = 0 Or InStr(Materialnummer, "PS0") = 0) And Preis > 0) Then
                    Worksheets("Datenbank").Cells(Zeile, 1).Value = Worksheets("Datenbank").Cells(Zeile - 1, 1).Value
                    Worksheets("Datenbank").Cells(Zeile, 2).Value = Worksheets("Datenbank").Cells(Zeile - 1, 2).Value
                    Worksheets("Datenbank").Cells(Zeile, 5).Value = Preis
                    If (Worksheets(blattname).Cells(i, 1).Value <> "") Then
                        If (InStr(Worksheets(blattname).Cells(i, 1).Value, "ungelocht") > 0 _
                        Or InStr(Worksheets(blattname).Cells(i, 2).Value, "ungelocht") > 0 _
                        Or InStr(Worksheets(blattname).Cells(i, 3).Value, "ungelocht") > 0) Then
                            Worksheets("Datenbank").Cells(Zeile, 6).Value = "ungelocht"
                        ElseIf (InStr(Worksheets(blattname).Cells(i, 1).Value, "gelocht") > 0 _
                        Or InStr(Worksheets(blattname).Cells(i, 2).Value, "gelocht") > 0 _
                        Or InStr(Worksheets(blattname).Cells(i, 3).Value, "gelocht") > 0) Then
                            Worksheets("Datenbank").Cells(Zeile, 6).Value = "gelocht"
                        End If
                    Else
                        Worksheets("Datenbank").Cells(Zeile, 6).Value = Worksheets("Datenbank").Cells(Zeile - 1, 6).Value
                    End If
                    Worksheets("Datenbank").Cells(Zeile, 7).Value = Worksheets("Datenbank").Cells(Zeile - 1, 7).Value
                    Laenge = Worksheets(blattname).Cells(i, LaengeGefundenInSpalte).Value
                    If (InStr(Laenge, "L=") > 0) Then
                        TempPos = InStr(Laenge, "mm")
                        Laenge = Left(Laenge, TempPos - 1)
                        TempPos = InStr(Laenge, "=")
                        Laenge = Mid(Laenge, TempPos + 1, 20)
                        If (InStr(Laenge, "-") > 0) Then
                            TempLaenge = Split(Laenge, "-")
                            Worksheets("Datenbank").Cells(Zeile, 3).Value = CDbl(TempLaenge(0))
                            Worksheets("Datenbank").Cells(Zeile, 4).Value = CDbl(TempLaenge(1))
                        ElseIf (InStr(Laenge, "ab ") > 0) Then
                            TempLaenge = Split(Laenge, "ab ")
                            Worksheets("Datenbank").Cells(Zeile, 3).Value = CDbl(TempLaenge(1))
                            Worksheets("Datenbank").Cells(Zeile, 4).Value = 99999
                        Else
                            Worksheets("Datenbank").Cells(Zeile, 3).Value = CDbl(Laenge)
                            Worksheets("Datenbank").Cells(Zeile, 4).Value = CDbl(Laenge)
                        End If
                    Else
                        Worksheets("Datenbank").Cells(Zeile, 3).Value = 1
                        Worksheets("Datenbank").Cells(Zeile, 4).Value = 99999
                    End If
                    Zeile = Zeile + 1
                End If
            End If
        Next
    End If
    
    DatenbankCount = Zeile - 2
    
    On Error Resume Next
    Pos = 0
    Pos = Application.WorksheetFunction.Match("*" & suchtext & "*", Worksheets(blattname).Columns(Spalte), 0)
End Function

Function Suchspalte(blattname, suchtext)
    For Spalte = 50 To 1 Step -1
        On Error Resume Next
        TempPos = 0
        TempPos = Application.WorksheetFunction.Match("*" & suchtext & "*", Worksheets(blattname).Columns(Spalte), 0)
        If Not (TempPos = 0) Then Exit For
    Next
    Suchspalte = Spalte
End Function

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    Dim PreiseCount
    
    Application.Cursor = xlWait
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Call Auswertung 'Komprimiert die Preisliste in Tabelle Datenbank
    
    Worksheets("ZKMI").Range("H2:K9999").ClearContents
    
    Dim Laenge As Double
    Dim lngZeile As Long
    lngZeile = Worksheets("ZKMI").Cells(Rows.Count, 1).End(xlUp).Row
    Dim lngZeile1 As Long
    lngZeile1 = Worksheets("Datenbank").Cells(Rows.Count, 1).End(xlUp).Row
    For i = 2 To lngZeile Step 1
        Application.StatusBar = "pr|fffd|fe Zeile " & i & " von " & lngZeile
        MatNr = Worksheets("ZKMI").Cells(i, 1).Value
        GefundenCount = 0
        Guete = Worksheets("ZKMI").Cells(i, 3).Value
        If (InStr(Guete, "FV") > 0) Then
            Guete = "FV"
            Guete1 = "FVZ"
        ElseIf (InStr(Guete, "WB") > 0) Then
            Guete = "WB"
            Guete1 = "Stahl"
        ElseIf (InStr(Guete, "KB") > 0) Then
            Guete = "KB"
            Guete1 = "Stahl"
        ElseIf (InStr(Guete, "AL") > 0) Then
            Guete = "AL"
            Guete1 = "AL"
        ElseIf (InStr(Guete, "CN") > 0) Then
            Guete = "CN"
            Guete1 = "CN"
        ElseIf (InStr(Guete, "CR") > 0) Then
            Guete = "CR"
            Guete1 = "CR"
        End If
        Laenge = Worksheets("ZKMI").Cells(i, 4).Value
        Ausf = Worksheets("ZKMI").Cells(i, 5).Value
        'Worksheets("ZKMI").Cells(i, 8).Value = ""
        'Worksheets("ZKMI").Cells(i, 9).Value = ""
        
        ZeileMerk = 0
        gefunden = 0
        Do 'Suche nach Zusatz gelocht oder ungelocht
            Zeile = 0
            On Error Resume Next
            Zeile = Application.WorksheetFunction.Match(MatNr, Sheets("Datenbank").Range("A" & ZeileMerk + 1 & ":A" & lngZeile1), 0)
            If Zeile = 0 Then Exit Do
            Zeile = Zeile + ZeileMerk
            If Zeile > lngZeile1 Then Exit Do
            If (Ausf = "OHNE") Then
                If (Worksheets("Datenbank").Cells(Zeile, 1).Value = MatNr _
                And (Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete Or Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete1) _
                And Laenge >= Worksheets("Datenbank").Cells(Zeile, 3).Value And Laenge <= Worksheets("Datenbank").Cells(Zeile, 4).Value _
                And Worksheets("Datenbank").Cells(Zeile, 6).Value = "ungelocht") Then
                    Worksheets("ZKMI").Cells(i, 8).Value = Worksheets("Datenbank").Cells(Zeile, 5).Value
                    Worksheets("ZKMI").Cells(i, 9).Value = (Round(Worksheets("Datenbank").Cells(Zeile, 5).Value, 2) / 100) * (Laenge / 1000) * 1000
                    Worksheets("ZKMI").Cells(i, 11).Value = Worksheets("Datenbank").Cells(Zeile, 7).Value
                    PreiseCount = PreiseCount + 1
                    gefunden = 1
                    GefundenCount = GefundenCount + 1
                End If
            ElseIf (Ausf <> "OHNE" And Ausf <> "") Then
                If (Worksheets("Datenbank").Cells(Zeile, 1).Value = MatNr _
                And (Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete Or Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete1) _
                And Laenge >= Worksheets("Datenbank").Cells(Zeile, 3).Value And Laenge <= Worksheets("Datenbank").Cells(Zeile, 4).Value _
                And Worksheets("Datenbank").Cells(Zeile, 6).Value = "gelocht") Then
                    Worksheets("ZKMI").Cells(i, 8).Value = Worksheets("Datenbank").Cells(Zeile, 5).Value
                    Worksheets("ZKMI").Cells(i, 9).Value = (Round(Worksheets("Datenbank").Cells(Zeile, 5).Value, 2) / 100) * (Laenge / 1000) * 1000
                    Worksheets("ZKMI").Cells(i, 11).Value = Worksheets("Datenbank").Cells(Zeile, 7).Value
                    PreiseCount = PreiseCount + 1
                    gefunden = 1
                    GefundenCount = GefundenCount + 1
                End If
            End If
            ZeileMerk = Zeile
        Loop
        If (gefunden = 0) Then 'Wenn Suche nach gelocht oder ungelocht kein Ergebnis brachte dann Suche ohne Einschraenkung
            ZeileMerk = 0
            Do
                Zeile = 0
                On Error Resume Next
                Zeile = Application.WorksheetFunction.Match(MatNr, Sheets("Datenbank").Range("A" & ZeileMerk + 1 & ":A" & lngZeile1), 0)
                If Zeile = 0 Then Exit Do
                Zeile = Zeile + ZeileMerk
                If Zeile > lngZeile1 Then Exit Do
                If (Ausf = "OHNE") Then
                    If (Worksheets("Datenbank").Cells(Zeile, 1).Value = MatNr _
                    And (Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete Or Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete1) _
                    And Laenge >= Worksheets("Datenbank").Cells(Zeile, 3).Value And Laenge <= Worksheets("Datenbank").Cells(Zeile, 4).Value) Then
                        If (Worksheets("ZKMI").Cells(i, 8).Value = "") Then PreiseCount = PreiseCount + 1
                        Worksheets("ZKMI").Cells(i, 8).Value = Worksheets("Datenbank").Cells(Zeile, 5).Value
                        Worksheets("ZKMI").Cells(i, 9).Value = (Round(Worksheets("Datenbank").Cells(Zeile, 5).Value, 2) / 100) * (Laenge / 1000) * 1000
                        Worksheets("ZKMI").Cells(i, 11).Value = Worksheets("Datenbank").Cells(Zeile, 7).Value
                        'PreiseCount = PreiseCount + 1
                        GefundenCount = GefundenCount + 1
                    End If
                ElseIf (Ausf <> "OHNE" And Ausf <> "") Then
                    If (Worksheets("Datenbank").Cells(Zeile, 1).Value = MatNr _
                    And (Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete Or Worksheets("Datenbank").Cells(Zeile, 2).Value = Guete1) _
                    And Laenge >= Worksheets("Datenbank").Cells(Zeile, 3).Value And Laenge <= Worksheets("Datenbank").Cells(Zeile, 4).Value) Then
                        If (Worksheets("ZKMI").Cells(i, 8).Value = "") Then PreiseCount = PreiseCount + 1
                        Worksheets("ZKMI").Cells(i, 8).Value = Worksheets("Datenbank").Cells(Zeile, 5).Value
                        Worksheets("ZKMI").Cells(i, 9).Value = (Round(Worksheets("Datenbank").Cells(Zeile, 5).Value, 2) / 100) * (Laenge / 1000) * 1000
                        Worksheets("ZKMI").Cells(i, 11).Value = Worksheets("Datenbank").Cells(Zeile, 7).Value
                        'PreiseCount = PreiseCount + 1
                        GefundenCount = GefundenCount + 1
                    End If
                End If
                ZeileMerk = Zeile
            Loop
        End If
        If GefundenCount > 1 Then
            GefundenCount = 0
            'Worksheets("ZKMI").Cells(i, 11).Value = "mehrf.Preise"
            Worksheets("ZKMI").Cells(i, 11).Value = Worksheets("ZKMI").Cells(i, 11).Value & " -- versch.Fertigungen/Preise"
        Else
            Worksheets("ZKMI").Cells(i, 11).Value = ""
        End If
    Next i
    
    'Ergebnis Sortieren
    lngZeile = Worksheets("ZKMI").Cells(Rows.Count, 1).End(xlUp).Row
    Columns("A:K").Select
    ActiveWorkbook.Worksheets("ZKMI").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("ZKMI").Sort.SortFields.Add Key:=Range("A2:A" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("ZKMI").Sort.SortFields.Add Key:=Range("B2:B" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("ZKMI").Sort.SortFields.Add Key:=Range("C2:C" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("ZKMI").Sort.SortFields.Add Key:=Range("D2:D" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets("ZKMI").Sort.SortFields.Add Key:=Range("E2:E" & lngZeile) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets("ZKMI").Sort
        .SetRange Range("A1:K" & lngZeile)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    Range("J1").Select
    
    Application.StatusBar = ""
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    
    MsgBox "Datenbank erstellt und Preise zugeordnet" & vbCr & vbCr & _
    "Datenbank: " & DatenbankCount & " g|fffd|ltige Preise aus den Listen |fffd|bernommen" & vbCr & _
    "ZKMI: " & PreiseCount & " Preise wurden ermittelt", vbInformation
End Sub
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' zr'J

INQUEST-PP=macro
