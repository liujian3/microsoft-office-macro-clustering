Attribute VB_Name = "BMWConversion"
Option Private Module
Sub ImportBailBMW()
'Copyright 2001 AIMS P/L
'All rights reserved

If DealershipName = "Bayford Group Pty Ltd" Or DealershipName = "Trivett Classic - Parramatta" Or DealershipName = "SMG European Cars" Or DealershipName = "SMG Prestige Cars" Then
    
    Workbooks.Open Filename:=FnameFinancier
    
    ActiveFile = ActiveWorkbook.Name
    
    'renames the first worksheet
    Worksheets.Item(1).Name = "BAIL"
    
    'copies the data sheet from the BAIL.csv file, then closes BAIL.csv
    Sheets("Bail").Copy Before:=Workbooks(FileNameVar).Sheets(1)
    Windows(ActiveFile).Activate
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
    
    'file compatibility checks for the concatenated BMW file
    If Trim(Range("B1").Value) <> "Bailment #" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("C1").Value) <> "Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("D1").Value) <> "Chassis/VIN#" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("E1").Value) <> "Stock#" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("K1").Value) <> "CURRENT BALANCE" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    GoTo BayfordEnd
End If

    Workbooks.Open Filename:=FnameFinancier
    
    ActiveFile = ActiveWorkbook.Name
    
    'renames the first worksheet
    Worksheets.Item(1).Name = "BAIL"
    
    'copies the data sheet from the BAIL.csv file, then closes BAIL.csv
    Sheets("Bail").Copy Before:=Workbooks(FileNameVar).Sheets(1)
    Windows(ActiveFile).Activate
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
    
    'deletes the first 3 rows
    Rows("1:3").Select
    Selection.Delete Shift:=xlUp
    Range("A1").Select
    
    'removes the "Make" column if it exists
    If Trim(Range("G1").Value) = "Make" Then
        Columns("G:G").Select
        Selection.Delete Shift:=xlToLeft
    End If
    
    'file compatibility checks for BMW
    If Trim(Range("B1").Value) <> "Floorplan" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("C1").Value) <> "UnitNo" Then
       Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("D1").Value) <> "ChassisNo" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("E1").Value) <> "EngineNo" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("F1").Value) <> "RegoNo" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("I1").Value) <> "Year" Then
       Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("J1").Value) <> "Start Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("N1").Value) <> "GST" Then
       Call ErrorAlertCompatibilityFinancier
    End If
        
    '----------------------------------------
   
    'removes the unneeded columns
    Range("A:B,E:I,K:L,O:O").Select
    Selection.Delete Shift:=xlToLeft
    
    On Error GoTo NoUnitNo
        'deletes the blank rows where there is no 'UnitNo'
        Columns("A:A").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoUnitNo:

    'using paste special, subtracts the 'GST from the 'Balance inc GST'
    Columns("E:E").Select
    Selection.Copy
    Columns("D:D").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlSubtract, _
    SkipBlanks:=False, Transpose:=False
    Columns("E:E").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
    
    'moves the columns around to suit
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("C:C").Select
    Selection.Cut
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Range("A:B,D:H").Select
    Selection.Insert Shift:=xlToRight
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'rounds the amounts to 2 decimal places
    Range("K1").Select
    Do Until ActiveCell.Offset(1, 0).Value = ""
        ActiveCell.Offset(1, 0).Select
        ActiveCell.Value = Round(ActiveCell.Value, 2)
    Loop

    Range("A1").Select

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"
    
    On Error GoTo NoBlankRows2
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows2:

BayfordEnd:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
        
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub



Attribute VB_Name = "BayfordConcatenation"
Option Private Module
Sub ConcatenationBayford()

    Application.DisplayAlerts = False
    Application.ScreenUpdating = False

    'ensures all data files exist, or not renamed
    If Dir(FolderPathVar & "BMW1.xls") = "" Then
        Call ErrorAlertFileNames
    End If
        
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW2.xls") = "" Then
        Call ErrorAlertFileNames
    End If

    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW3.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW4.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW5.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW6.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW7.xls") = "" Then
        Call ErrorAlertFileNames
    End If

'-----------------------------------------------------
    
    'opens the 7 data files
    Workbooks.Open Filename:=FolderPathVar & "BMW1.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW2.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW3.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW4.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW5.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW6.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW7.xls"
        Call GeneralTidy
    
    'copies all data from the files to create one concatenated file
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy
    
    Windows("BMW6.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste
    
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy
    
    Windows("BMW5.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste
    
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy

    Windows("BMW4.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste

    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy

    Windows("BMW3.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste
    
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy

    Windows("BMW2.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste
    
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy

    Windows("BMW1.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste
    
    'close all other data files
    Windows("BMW2.xls").Activate
    ActiveWorkbook.Close
    Windows("BMW3.xls").Activate
    ActiveWorkbook.Close
    Windows("BMW4.xls").Activate
    ActiveWorkbook.Close
    Windows("BMW5.xls").Activate
    ActiveWorkbook.Close
    Windows("BMW6.xls").Activate
    ActiveWorkbook.Close
    Windows("BMW7.xls").Activate
    ActiveWorkbook.Close

    Rows("1:1").Select
    Selection.Insert Shift:=xlDown
    
    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"
    
    Range("A1").Select
    
    'saves the concatenated new file and closes it
    ActiveWorkbook.SaveAs Filename:=FolderPathVar & "MasterBMW", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWorkbook.Close
    
    'deletes all the original BMW files
    Kill FolderPathVar & "BMW?.xls"

End Sub
Sub GeneralTidy()

    'deletes the first 3 rows
    Rows("1:3").Select
    Selection.Delete Shift:=xlUp
    Range("A1").Select
    
    'removes the "Make" column if it exists
    If Trim(Range("G1").Value) = "Make" Then
        Columns("G:G").Select
        Selection.Delete Shift:=xlToLeft
    End If

    'file compatibility checks for BMW
    If Trim(Range("B1").Value) <> "Floorplan" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("C1").Value) <> "UnitNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("D1").Value) <> "ChassisNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("E1").Value) <> "EngineNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("F1").Value) <> "RegoNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("I1").Value) <> "Year" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("J1").Value) <> "Start Date" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("N1").Value) <> "GST" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If

    '----------------------------------------
   
    'removes the unneeded top row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
   
    'removes the unneeded columns
    Range("A:B,E:I,K:L,O:O").Select
    Selection.Delete Shift:=xlToLeft
    
    On Error GoTo NoUnitNo
        'deletes the blank rows where there is no 'UnitNo'
        Columns("A:A").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoUnitNo:

    'using paste special, subtracts the 'GST from the 'Balance inc GST'
    Columns("E:E").Select
    Selection.Copy
    Columns("D:D").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlSubtract, _
    SkipBlanks:=False, Transpose:=False
    Columns("E:E").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
    
    'moves the columns around to suit
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("C:C").Select
    Selection.Cut
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Range("A:B,D:H").Select
    Selection.Insert Shift:=xlToRight
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'rounds the amounts to 2 decimal places
    Range("K1").Select
    Do Until ActiveCell.Offset(1, 0).Value = ""
        ActiveCell.Offset(1, 0).Select
        ActiveCell.Value = Round(ActiveCell.Value, 2)
    Loop

    Range("A1").Select

End Sub




Attribute VB_Name = "BillBuckleRoutines"
Option Private Module
Sub BillBuckleFinancierSeparation()

    'ensures that there are entries in the stock and amount columns
    If Range("A1").Value = "" Or Range("D1").Value = "" Then
        Call ErrorAlertCompatibilityDealer
    End If

    'types the field names
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown
    Range("A1").Value = "Stock #"
    Range("B1").Value = "VIN"
    Range("C1").Value = "Engine #"
    Range("D1").Value = "Amount"
    
    'creates a separate sheet for each of the financiers
    Sheets("Inhouse").Copy Before:=Sheets(1)
    Sheets("Inhouse (2)").Select
    Sheets("Inhouse (2)").Name = "GMAC"
    Sheets("GMAC").Copy Before:=Sheets(1)
    Sheets("GMAC (2)").Select
    Sheets("GMAC (2)").Name = "Toyota"
    Sheets("Toyota").Copy Before:=Sheets(1)
    Sheets("Toyota (2)").Select
    Sheets("Toyota (2)").Name = "Volkswagen"
    
    Range("A2").Select
    Do Until ActiveCell.Value = ""
        If ActiveCell.Value >= 600000 And ActiveCell.Value <= 699999 Or ActiveCell.Value = "Stock #" Then 'done for Volkswagen
            ActiveCell.Offset(1, 0).Select
        Else
            Selection.EntireRow.Delete
            ActiveCell.Offset(-1, 0).Range("A1").Select
        End If
    Loop
    'deletes the Engine # column
    Columns("C:C").Select
    Selection.Delete Shift:=xlToLeft
    Range("A1").Select
    
    Sheets("Toyota").Select
    Range("A2").Select
    Do Until ActiveCell.Value = ""
        If ActiveCell.Value >= 50000 And ActiveCell.Value <= 199999 Or ActiveCell.Value = "Stock #" Then 'done for Toyota
            ActiveCell.Offset(1, 0).Select
        Else
            Selection.EntireRow.Delete
            ActiveCell.Offset(-1, 0).Range("A1").Select
        End If
    Loop
    'deletes the VIN column
    Columns("B:B").Select
    Selection.Delete Shift:=xlToLeft
    Range("A1").Select

    Sheets("GMAC").Select
    Range("A2").Select
    Do Until ActiveCell.Value = ""
        If ActiveCell.Value >= 25000 And ActiveCell.Value <= 30000 Or ActiveCell.Value = "Stock #" Then 'done for GMAC
            ActiveCell.Offset(1, 0).Select
        Else
            Selection.EntireRow.Delete
            ActiveCell.Offset(-1, 0).Range("A1").Select
        End If
    Loop
    'deletes the Engine # column
    Columns("C:C").Select
    Selection.Delete Shift:=xlToLeft
    Range("A1").Select
            
    '-------------------------------------------
    'REMOVES ALL THE SHEETS THAT ARE NOT NEEDED
    
    If ListSelection = "GMAC Finance" Then
    'deletes all but the GMAC sheet
        Sheets(Array("Volkswagen", "Toyota", "Inhouse")).Select
        Sheets("Volkswagen").Activate
        ActiveWindow.SelectedSheets.Delete
    End If
    
    If ListSelection = "Toyota Finance" Then
    'deletes all but the Toyota sheet
        Sheets(Array("Volkswagen", "GMAC", "Inhouse")).Select
        Sheets("GMAC").Activate
        ActiveWindow.SelectedSheets.Delete
    End If

    'deletes the financier sheets that it doesn't require
    If ListSelection = "VW Financial Services" Then
    'deletes all but the Volkswagen sheet
        Sheets(Array("Toyota", "GMAC", "Inhouse")).Select
        Sheets("GMAC").Activate
        ActiveWindow.SelectedSheets.Delete
    End If

End Sub
Attribute VB_Name = "CapitalConversion"
Option Private Module
Sub ImportBailCapital()
'Copyright 2004 AIMS P/L
'All rights reserved

    Dim GetData As Variant

    'creates a new worksheet and calls it 'Bail'
    With ThisWorkbook
        .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "Bail"
    End With

    Workbooks.Open Filename:=FnameFinancier

    'gets the name of the external file
    ActiveFile = ActiveWorkbook.Name

    'goes to the amount column and counts the rows
    Range("I1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row

    'copies and pastes the data into the program
    Range("A1:AA" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("Bail").Select
    Range("A1").Select
    ActiveSheet.Paste
    
    'closes the external file
    Windows(ActiveFile).Activate
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
        
    '----------------------------------------
    
    'file compatibility checks for Capital
    If Trim(Range("A1").Value) <> "Unit" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("B1").Value) <> "Start Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("D1").Value) <> "Vin" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("I1").Value) <> "Payout" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("S1").Value) <> "Payout GST component ($)" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
   '-----------------------------------------
    
    'subtracts column S from the values in column I
    'i.e Payout minus Payout GST component ($)
    Columns("S:S").Select
    Selection.Copy
    Columns("I:I").Select
    Selection.PasteSpecial Paste:=xlPasteAll, Operation:=xlSubtract, _
        SkipBlanks:=False, Transpose:=False
    
    'maniplulates the columns to suit
    Range("C:C,E:H,J:AB").Select
    Selection.Delete Shift:=xlToLeft
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
        
    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
     On Error GoTo NoBlankRowsValue
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRowsValue:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'counts the number of Amount entries - only used if downloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Sub ImportBailCapitalSept2011()
'Copyright 2004 AIMS P/L
'All rights reserved

    Workbooks.Open Filename:=FnameFinancier

    ActiveFile = ActiveWorkbook.Name

    'renames the first worksheet
    Worksheets.Item(1).Name = "BAIL"

    'copies the data sheet from the BAIL.csv file, then closes BAIL.csv
    Sheets("Bail").Copy Before:=Workbooks(FileNameVar).Sheets(1)
    Windows(ActiveFile).Activate

    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
        
    '----------------------------------------
    
'    'checks to see if there is an extra column added... if so delete column J
'    If Range("L1").Value <> "" Then
'        Columns("J:J").Select
'        Selection.Delete Shift:=xlToLeft
'    End If
'
'    'checks to see if there are field names included... if not, include them
'    If Trim(Range("A1").Value) <> "Code" Or Trim(Range("A1").Value) <> "code" Then
'        Rows("1:1").Select
'        Selection.Insert Shift:=xlDown
'        Range("A1").Value = "Code"
'        Range("D1").Value = "Bailment #"
'        Range("I1").Value = "VIN #"
'        Range("K1").Value = "Bailment Inc GST"
'    End If
    
    'file compatibility checks for Capital
    If Trim(Range("A9").Value) <> "Category" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("D9").Value) <> "Unit No" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("E9").Value) <> "Year" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("G9").Value) <> "Description" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("P9").Value) <> "Value" Then
        Call ErrorAlertCompatibilityFinancier
    End If

    'removes all formats, which includes those that are centred across columns
    Cells.Select
    Selection.ClearFormats
    'removes unwanted rows and columns
    Rows("1:8").Select
    Selection.Delete Shift:=xlUp
    Range("A:B,E:J,L:O,Q:S").Select
    Selection.Delete Shift:=xlToLeft
    Range("A1").Select
        
'    'file compatibility checks for Capital
'    If Trim(Range("A1").Value) <> "Code" Then
'        Call ErrorAlertCompatibilityFinancier
'    End If
'    If Trim(Range("D1").Value) <> "Bailment #" Then
'        Call ErrorAlertCompatibilityFinancier
'    End If
'    If Trim(Range("I1").Value) <> "VIN #" Then
'        Call ErrorAlertCompatibilityFinancier
'    End If
'    If Trim(Range("K1").Value) <> "Bailment Inc GST" Then
'        Call ErrorAlertCompatibilityFinancier
'    End If
    
   '-----------------------------------------
       
    On Error GoTo NoBlankRowsBailment
        'deletes the rows where there is no Unit number
        Columns("B:B").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRowsBailment:
    
    'maniplulates the columns to suit
    Columns("C:C").Select
    Selection.Cut
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
    
'    'maniplulates the columns to suit
'    Range("A:C,F:G,K:K").Select
'    Selection.Delete Shift:=xlToLeft
'    Columns("A:A").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("E:E").Select
'    Selection.Cut
'    Columns("D:D").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("F:J").Select
'    Selection.Insert Shift:=xlToRight

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
'
'    'adds a ''' to the dates so they don't get formatted
'    Range("C2").Select
'    Do Until ActiveCell.Offset(0, 8).Value = ""
'        ActiveCell.Value = "''" & ActiveCell.Value
'        ActiveCell.Offset(1, 0).Select
'    Loop

'    On Error GoTo NoBlankRows
'        'inserts a row at the top of the column
'        'this is because Capital have errors on 'On Error' won't work
'        Rows("1:1").Select
'        Selection.Insert Shift:=xlDown
'        'deletes rows where amount is left blank
'        Columns("K:K").Select
'        Selection.SpecialCells(xlCellTypeBlanks).Select
'        Selection.EntireRow.Delete
'    On Error GoTo 0
'NoBlankRows:
    
     On Error GoTo NoBlankRowsValue
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRowsValue:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'counts the number of Amount entries - only used if downloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub





Attribute VB_Name = "ConcatenationRoutines"
Option Private Module
Sub ConcatenationCityFord()

Application.DisplayAlerts = False
Application.ScreenUpdating = False

'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "2801.slk") = "" Then
        Call ErrorAlertFileNames
    End If
        
'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "2818.slk") = "" Then
        Call ErrorAlertFileNames
    End If

'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "2828.slk") = "" Then
        Call ErrorAlertFileNames
    End If

'-----------------------------------------------------

Workbooks.Open Filename:=FolderPathVar & "2801.slk"
Workbooks.Open Filename:=FolderPathVar & "2818.slk"
Workbooks.Open Filename:=FolderPathVar & "2828.slk"
    
'deletes the unneeded row headings

    Windows("2818.slk").Activate
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp

    Windows("2801.slk").Activate
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp

'copies all data from rows to create one concatenated file

    Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "O" & Rowcounter).Select
    Selection.Copy

    Windows("2818.slk").Activate
    Range("A1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste

    Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "O" & Rowcounter).Select
    Selection.Copy

    Windows("2828.slk").Activate
    Range("A1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    
    'close all other text files

    Windows("2801.slk").Activate
    ActiveWorkbook.Close
    Windows("2818.slk").Activate
    ActiveWorkbook.Close

    ''deletes all the original text files
    'Kill FolderPathVar & "58??.txt"
       
    'copies the sheet
    Sheets("2828").Copy Before:=Sheets(1)
    
    'sorts records in New/Used etc order
    Range("A1").Select
        Selection.Sort Key1:=Range("N1"), Order1:=xlAscending, Header:=xlYes, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
    'removes rows that are not to be included in the New vehicles sheet
    Range("N2").Select
    'will stay in loop until the active cell, and some cells to the left are also blank
        Do Until ActiveCell.Offset(0, 1).Value = ""
            If Trim(ActiveCell.Value) = "USED" Or Trim(ActiveCell.Value) = "EXCAP" Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(-1, 0).Range("A1").Select
            Else
                ActiveCell.Offset(1, 0).Range("A1").Select
            End If
        Loop
        
    'removes rows that are not to be included in the Used vehicles sheet
    Sheets("2828").Select
 
     Range("N2").Select
    'will stay in loop until the active cell, and some cells to the left are also blank
        Do Until ActiveCell.Offset(0, 1).Value = ""
            If Trim(ActiveCell.Value) = "NEW" Or Trim(ActiveCell.Value) = "DEMO" Or Trim(ActiveCell.Value) = "DPP" Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(-1, 0).Range("A1").Select
            Else
                ActiveCell.Offset(1, 0).Range("A1").Select
            End If
        Loop

    'sorts records in New/Used etc order
    Range("A1").Select
        Selection.Sort Key1:=Range("N1"), Order1:=xlAscending, Header:=xlYes, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
 
    'moves the Used Vehicles records into a new file and names it
    Sheets("2828").Select
    Sheets("2828").Move
    
    'sorts data in dealer code order lowest to highest
    Range("A1").Select
    Application.CutCopyMode = False
    Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
    'saves the concatenated used file and closes it
    ActiveWorkbook.SaveAs Filename:=FolderPathVar & "FCA(Used Vehicles).slk", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWorkbook.Close

    'sorts data in dealer code order lowest to highest
    Range("A1").Select
    Application.CutCopyMode = False
    Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
     'saves the concatenated new file and closes it
    ActiveWorkbook.SaveAs Filename:=FolderPathVar & "FCA(New Vehicles).slk", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWorkbook.Close

End Sub

Sub ConcatenationSolitaireKerridge()

Application.DisplayAlerts = False
Application.ScreenUpdating = False

'ensures all Excel data files exist, or not renamed
    If Dir(FolderPathVar & "Demo.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
'ensures all Excel data files exist, or not renamed
    If Dir(FolderPathVar & "New.xls") = "" Then
        Call ErrorAlertFileNames
    End If

'-----------------------------------------------------

Workbooks.Open Filename:=FolderPathVar & "Demo.xls"
Workbooks.Open Filename:=FolderPathVar & "New.xls"

'copies all data from rows to create one concatenated file

    Range("C1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "C" & Rowcounter).Select
    Selection.Copy
    Windows("Demo.xls").Activate
    Range("C1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -2).Select
    ActiveSheet.Paste
    
'sorts data in dealer code order lowest to highest
    
    Range("A1").Select
    Application.CutCopyMode = False
    Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
'saves the concatenated file as Kerridge.xls and closes it
    
    ActiveWorkbook.SaveAs Filename:=FolderPathVar & "Kerridge.xls", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWorkbook.Close
    
'close the other Excel file
    
    Windows("New.xls").Activate
    ActiveWorkbook.Close
    
'deletes all the original Excel files
    
    Kill FolderPathVar & "Demo.xls"
    Kill FolderPathVar & "New.xls"

End Sub

Sub ConcatenationAustral()

Application.DisplayAlerts = False
Application.ScreenUpdating = False

'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "7126.txt") = "" Then
        Call ErrorAlertFileNames
    End If

'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "88707.txt") = "" Then
        Call ErrorAlertFileNames
    End If
    
'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "90704.txt") = "" Then
        Call ErrorAlertFileNames
    End If
    
'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "92702.txt") = "" Then
        Call ErrorAlertFileNames
    End If

'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "92710.txt") = "" Then
        Call ErrorAlertFileNames
    End If

'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "93709.txt") = "" Then
        Call ErrorAlertFileNames
    End If

'-----------------------------------------------------

    Workbooks.OpenText Filename:=FolderPathVar & "7126.txt", Origin _
        :=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
        xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False _
        , Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
        Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1))
    Workbooks.OpenText Filename:=FolderPathVar & "88707.txt", Origin _
        :=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
        xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False _
        , Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
        Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1))
    Workbooks.OpenText Filename:=FolderPathVar & "90704.txt", Origin _
        :=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
        xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False _
        , Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
        Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1))
    Workbooks.OpenText Filename:=FolderPathVar & "92702.txt", Origin _
        :=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
        xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False _
        , Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
        Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1))
    Workbooks.OpenText Filename:=FolderPathVar & "92710.txt", Origin _
        :=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
        xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False _
        , Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
        Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1))
    Workbooks.OpenText Filename:=FolderPathVar & "93709.txt", Origin _
        :=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
        xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False _
        , Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
        Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1))
    
'deletes the unneeded row headings
    
    Windows("7126.txt").Activate
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
    Windows("88707.txt").Activate
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
    Windows("90704.txt").Activate
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
    Windows("92702.txt").Activate
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
    Windows("92710.txt").Activate
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
'copies all data from rows to create one concatenated file
    
    Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "L" & Rowcounter).Select
    Selection.Copy
    Windows("92702.txt").Activate
    Range("A1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    
    Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "L" & Rowcounter).Select
    Selection.Copy
    Windows("90704.txt").Activate
    Range("A1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    
    Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "L" & Rowcounter).Select
    Selection.Copy
    Windows("88707.txt").Activate
    Range("A1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    
    Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "L" & Rowcounter).Select
    Selection.Copy
    Windows("7126.txt").Activate
    Range("A1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    
    Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "L" & Rowcounter).Select
    Selection.Copy
    Windows("93709.txt").Activate
    Range("A1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    
'sorts data in dealer code order lowest to highest
    
    Range("A1").Select
    Application.CutCopyMode = False
    Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
'saves the concatenated file as FCA.xls and closes it
    
    ActiveWorkbook.SaveAs Filename:=FolderPathVar & "FCA.xls", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWorkbook.Close
    
'close all other text files
    
    Windows("7126.txt").Activate
    ActiveWorkbook.Close
    Windows("88707.txt").Activate
    ActiveWorkbook.Close
    Windows("90704.txt").Activate
    ActiveWorkbook.Close
    Windows("92702.txt").Activate
    ActiveWorkbook.Close
    Windows("92710.txt").Activate
    ActiveWorkbook.Close
    
'deletes all the original text files
    
    Kill FolderPathVar & "*.txt"
    
End Sub

Sub ConcatenationRevolution()

Application.DisplayAlerts = False
Application.ScreenUpdating = False

'ensures all data files exist, or not renamed
    If Dir(FolderPathVar & "used.csv") = "" Then
        Call ErrorAlertFileNames
    End If

    If Dir(FolderPathVar & "new.csv") = "" Then
        Call ErrorAlertFileNames
    End If

'-----------------------------------------------------

Workbooks.Open Filename:=FolderPathVar & "used.csv"

'Range("L2").Select
'Do While ActiveCell.Value <> ""
'    ActiveCell.Value = ActiveCell.Value / 0.85
'    ActiveCell.Offset(1, 0).Select
'Loop
'Range("A1").Select

Workbooks.Open Filename:=FolderPathVar & "new.csv"

'copies all data from rows to create one concatenated file
Range("L1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "P" & Rowcounter).Select
Selection.Copy
Windows("used.csv").Activate
Range("L1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -11).Select
ActiveSheet.Paste
Range("A1").Select
       
'saves the concatenated file as Revolution.csv and closes it'
ActiveWorkbook.SaveAs Filename:=FolderPathVar & "Revolution.csv", _
    FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
    ReadOnlyRecommended:=False, CreateBackup:=False
ActiveWorkbook.Close

'closes the New.csv file
Windows("New.csv").Activate
ActiveWorkbook.Close
'
'deletes all the original csv files
Kill FolderPathVar & "Used.csv"
Kill FolderPathVar & "New.csv"

End Sub

Sub ConcatenationToyotaFinance()

Application.DisplayAlerts = False
Application.ScreenUpdating = False

'ensures all data files exist, or not renamed
    If Dir(FolderPathVar & "TFS1.xls") = "" Then
        Call ErrorAlertFileNames
    End If

    If Dir(FolderPathVar & "TFS2.xls") = "" Then
        Call ErrorAlertFileNames
    End If

'-----------------------------------------------------

Workbooks.Open Filename:=FolderPathVar & "TFS1.xls"

Workbooks.Open Filename:=FolderPathVar & "TFS2.xls"

If Range("E1").Value = "CurBal3" Then
    'copies all data from rows to create one concatenated file
    Range("E1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A2:" & "Q" & Rowcounter).Select
    Selection.Copy
    Windows("TFS1.xls").Activate
    Range("E1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -4).Select
    ActiveSheet.Paste
    
    'switches the StockNum and the DistStockNum (i.e. so it works with the DistStockNum column)
    Columns("H:H").Select
    Selection.Cut
    Columns("G:G").Select
    Selection.Insert Shift:=xlToRight
    Range("A1").Select
    
    'replaces the spaces in the VIN column with underscores
    On Error GoTo NoSpaces
    Columns("F:F").Select
        Selection.Replace What:=" ", Replacement:="_", LookAt:=xlPart, _
            SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
            ReplaceFormat:=False
    On Error GoTo 0
NoSpaces:
    GoTo UsingMonthlyDealerStatements
End If

'copies all data from rows to create one concatenated file
Range("H1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "Q" & Rowcounter).Select
Selection.Copy
Windows("TFS1.xls").Activate
Range("H1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -7).Select
ActiveSheet.Paste
Range("A1").Select

'replaces the spaces in the VIN column with underscores
On Error GoTo NoSpaces2
Columns("E:E").Select
    Selection.Replace What:=" ", Replacement:="_", LookAt:=xlPart, _
        SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
On Error GoTo 0
NoSpaces2:

UsingMonthlyDealerStatements:
       
'saves the concatenated file as Revolution.csv and closes it'
ActiveWorkbook.SaveAs Filename:=FolderPathVar & "ToyotaConcatenation.xls", _
    FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
    ReadOnlyRecommended:=False, CreateBackup:=False
ActiveWorkbook.Close

'closes the TFS2.xls file
Windows("TFS2.xls").Activate
ActiveWorkbook.Close
'
'deletes all the original xls files
Kill FolderPathVar & "TFS1.xls"
Kill FolderPathVar & "TFS2.xls"

End Sub

Attribute VB_Name = "ConsolidatedReportCode"
Option Private Module
Sub ConsolidatedReport()
   
    Dim RowCounterFinancierResults, RowCounterInhouseResults, NumberOfRowsToCopy As Integer
    
    'GETS THE DATA FROM THE FINANCIER RESULTS SHEET
    Sheets("FinancierResults").Select
    
    'ensures there is data to copy from the Financier Results sheet
    If Range("F7").Value = "" Then GoTo NoDataInFinancierSheet
    
    'determines the number of rows to copy from the Financier Results sheet
    Sheets("FinancierResults").Select
    Range("F5").Select
    Selection.End(xlDown).Select
    RowCounterFinancierResults = ActiveCell.Row
    NumberOfRowsToCopy = RowCounterFinancierResults - 6
    
    'goes to the starting location for the financier insertion and inserts the required number of rows
    Application.GoTo Reference:="FinancierResultsData"
    ActiveCell.Offset(1, 0).Range("A1:A" & NumberOfRowsToCopy).Select
    Selection.EntireRow.Insert
    
    'gets that data to copy from the Financier Results sheet
    Sheets("FinancierResults").Select
    Range("A7:D" & RowCounterFinancierResults).Select
    Selection.Copy
    
    'pastes the financier data
    Application.GoTo Reference:="FinancierResultsData"
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    
NoDataInFinancierSheet:

    Range("A1").Select
    
    'GETS THE DATA FROM THE INHOUSE RESULTS SHEET
    Sheets("InhouseResults").Select

    'ensures there is data to copy from the Inhouse Results sheet
    If Range("E7").Value = "" Then GoTo NoDataInInhouseSheet

    'determines the number of rows to copy from the Inhouse Results sheet
    Sheets("InhouseResults").Select
    Range("E5").Select
    Selection.End(xlDown).Select
    RowCounterInhouseResults = ActiveCell.Row
    NumberOfRowsToCopy = RowCounterInhouseResults - 6
    
    'goes to the starting location for the inhouse insertion and inserts the required number of rows
    Application.GoTo Reference:="InhouseResultsData"
    ActiveCell.Offset(1, 0).Range("A1:A" & NumberOfRowsToCopy).Select
    Selection.EntireRow.Insert
    
    'gets that data to copy from the Inhouse Results sheet
    Sheets("InhouseResults").Select
    Range("A7:D" & RowCounterInhouseResults).Select
    Selection.Copy
    
    'pastes the financier data
    Application.GoTo Reference:="InhouseResultsData"
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone

NoDataInInhouseSheet:
    
    Range("A1").Select
    
    '*** does the differing results section ***
    'GETS THE DATA FROM THE INHOUSE RESULTS SHEET - AS SAME INHOUSE SECTION ONLY MORE COLUMNS ARE ADDED
    Sheets("InhouseResults").Select

    'ensures there is data to copy from the Inhouse Results sheet
    If Range("E7").Value = "" Then GoTo NoDataInInhouseSheetDiffering

    'determines the number of rows to copy from the Inhouse Results sheet
    Sheets("InhouseResults").Select
    Range("E5").Select
    Selection.End(xlDown).Select
    RowCounterInhouseResults = ActiveCell.Row
    NumberOfRowsToCopy = RowCounterInhouseResults - 6
    
    'goes to the starting location for the differing insertion and inserts the required number of rows
    Application.GoTo Reference:="DifferingResults"
    ActiveCell.Offset(1, 0).Range("A1:A" & NumberOfRowsToCopy).Select
    Selection.EntireRow.Insert
    
    'gets that data to copy from the Inhouse Results sheet
    Sheets("InhouseResults").Select
    Range("A7:E" & RowCounterInhouseResults).Select
    Selection.Copy
    
    'pastes the financier data
    Application.GoTo Reference:="DifferingResults"
    ActiveCell.Offset(1, 0).Select
    ActiveSheet.Paste
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone

NoDataInInhouseSheetDiffering:

Range("A1").Select

'----------------------

'removes all rows where the amount is not zero in the inhouse amounts section
Application.GoTo Reference:="InhouseResultsFinancierCheck"
    ActiveCell.Offset(1, 0).Range("A1").Select
    Do Until ActiveCell.Value = ""
        If ActiveCell.Value <> 0 Then
            Selection.EntireRow.Delete
            ActiveCell.Offset(-1, 0).Range("A1").Select
        End If
        ActiveCell.Offset(1, 0).Range("A1").Select
    Loop

'removes all rows where the amount is zero in the differing amounts section
Application.GoTo Reference:="DifferingResultsFinancierCheck"
    ActiveCell.Offset(1, 0).Range("A1").Select
    Do Until ActiveCell.Value = ""
        If ActiveCell.Value = 0 Then
            Selection.EntireRow.Delete
            ActiveCell.Offset(-1, 0).Range("A1").Select
        End If
        ActiveCell.Offset(1, 0).Range("A1").Select
    Loop
    
'removes the Financier Label from the middle section
Application.GoTo Reference:="FinancierLabel"
Selection.Clear

Range("A1").Select
   
End Sub
Attribute VB_Name = "Demonstration_Code"
Option Private Module
Sub ImportBailDemonstration()
'Copyright 2008 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

Workbooks.OpenText Filename:=FnameFinancier, _
    Origin:=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
    xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False _
    , Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
    Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
    Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1))

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'goes to the amount column and counts the rows
Range("L1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:L" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
    
    'file compatibility check (Demo)
    If Trim(Range("A1").Value) <> "DLR CDE" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("L1").Value) <> "AMOUNT" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("H7").Value) <> "AU FALCON FORTE WAGON" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("E21").Value) <> "MNABSFD70YW100020" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("E36").Value) <> "6FPAAAJGSWY100035" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("H110").Value) <> "AU FAIRLANE GHIA SEDAN" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("B110").Value) <> "20020909" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("B160").Value) <> "20020711" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("H137").Value) <> "KN LASER GLXI" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("H143").Value) <> "PE COURIER CREWCAB PICKUP XLT" Then
        Call ErrorAlertCompatibilityFinancier
    End If
        
    'file compatibility check (Demo)
    If Trim(Range("D160").Value) <> "800162" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("D206").Value) <> "800209" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("E221").Value) <> "6FPAAAJGSWY100224" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("D236").Value) <> "800239" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (Demo)
    If Trim(Range("H245").Value) <> "MONDEO GHIA HATCH" Then
        Call ErrorAlertCompatibilityFinancier
    End If
            
    '-----------------------------------------
                      
    'deletes unnecessery columns
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:F").Select
    Selection.Cut
    Columns("D:D").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    Columns("F:G").Select
    Selection.Delete Shift:=xlToLeft
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    
    'subtract tax column from amount if GSTinclusive option is selected
    If frmMainScreen.optGST1.Value = True Then
        Range("K2").Select
        Do Until ActiveCell.Value = ""
            ActiveCell.Value = ActiveCell.Value - ActiveCell.Offset(0, -2).Value
            ActiveCell.Offset(1, 0).Range("A1").Select
        Loop
    End If
    
    Columns("H:J").Select
    Selection.Delete Shift:=xlToLeft
    Selection.Insert Shift:=xlToRight
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
 
    'inserts row for new column headings
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
    'formats the entire date column to general
    Columns("C:C").Select
    Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:
  
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
     
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Attribute VB_Name = "ErrorTrapping"
Option Private Module
Sub ErrorAlertCompatibilityFinancierConcatenationVersion()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if Financier data files are incompatible - closes program
    'without saving
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    'will close the financier data file
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    'closes the concatenated file
    Windows("BMWConcatenated.xls").Activate
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    Windows(FileNameVar).Activate
    
    Application.GoTo Reference:="ASSERTEC"
   
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Your financier data file is incompatible for this program.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub
Sub ErrorAlertVersion2007()
'Copyright 2008 AIMS P/L
'All rights reserved

    'called if a user executes this XP version when using Office 2007
        
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
   
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Please execute 'AIMS P/L: Floorplan Reconciler Version 7.0'", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close


End Sub
Sub ErrorAlertMissingFiles()
'Copyright 2006 AIMS P/L
'All rights reserved

    'called if the program can't find the data files it needs
    'done initially for Bib Stillwell
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
   
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "You have required files missing!!!", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub
Sub ErrorAlertCompatibilityWrongDealer()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if Financier data files are not meant for the dealership - closes program
    'without saving
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
   
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Error 3621 - please contact AIMS P/L!!!", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub
Sub ErrorAlertCompatibilityFinancier()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if Financier data files are incompatible - closes program
    'without saving
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
   
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Your [" & ListSelection & "]" & " data file is incompatible for this program.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub
Sub ErrorAlertCompatibilityFinancierNissan()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if Financier data files are incompatible - closes program
    'without saving
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Windows(FileNameVar).Activate
    
    Application.GoTo Reference:="ASSERTEC"
   
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Your [ Nissan Finance ]" & " data file is incompatible for this program.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub

Sub ErrorAlertCompatibilityFinancierBayFord()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if Financier data files are incompatible - closes program
    'without saving
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Windows(FileNameVar).Activate
    
    Application.GoTo Reference:="ASSERTEC"
   
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Your [ BMW Finance ]" & " data file is incompatible for this program.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub
Sub ErrorAlertCompatibilityDealer()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if Dealer data files are incompatible - closes program
    'without saving
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
    
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Your [In-house] data file is incompatible for this program.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
      
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub
Sub ErrorAlertProgramName()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if the program has been renamed - closes program
    'without saving
    'prevents screen from flickering
    Application.ScreenUpdating = False
  
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "The program has been renamed.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
        
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub

Sub ErrorAlertReadOnly()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if the program is not read only - closes program
    'without saving
    'prevents screen from flickering
    Application.ScreenUpdating = False
  
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Read-Only alert.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
        
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub
Sub ErrorAlertFileProtected()
'Copyright 2003 AIMS P/L
'All rights reserved

    'called if the data file is protected - closes program
    'without saving
    'prevents screen from flickering
    Application.ScreenUpdating = False
       
    Application.GoTo Reference:="ASSERTEC"
    
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Data file is protected.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub

Sub KillBeforeClose()
'Copyright 2003 AIMS P/L
'All rights reserved

 'deletes itself before closing
 
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"

'    MsgBox "This demonstration version will now be deleted from your PC." _
'    & Chr(13) & Chr(13) & "Please contact an AIMS P/L representative to purchase your licensed copy.", vbInformation, "AIMS P/L: Floorplan Reconciler"
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
     
    With ThisWorkbook
        .Saved = True
        .ChangeFileAccess xlReadOnly
        Kill .FullName
        .Close False
    End With
 
End Sub

Sub KillBeforeCloseReconcilerVersions()
'Copyright 2003 AIMS P/L
'All rights reserved

 'deletes itself before closing
 
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
    
    MsgBox "You are trying to reconcile too many records for your registration." _
    & Chr(13) & Chr(13) & "Please contact an AIMS P/L representative to upgrade your registration.", vbCritical, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
     
    With ThisWorkbook
        .Saved = True
        .ChangeFileAccess xlReadOnly
        Kill .FullName
        .Close False
    End With
 
End Sub

Sub ErrorAlertFileNames()
'Copyright 2004 AIMS P/L
'All rights reserved

'deletes itself before closing
 
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"

    'called if there is a City Ford (and others) text file missing
    
    MsgBox "System error - cannot continue !" & Chr(13) & Chr(13) & _
    "Please ensure that all your data files exist" & Chr(13) & _
    "and reside in folder - " & "' " & FolderPathVar & " '.", vbCritical, "Automotive Industry Management Systems"
    
    KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
     
    With ThisWorkbook
        .Saved = True
        .ChangeFileAccess xlReadOnly
        Kill .FullName
        .Close False
    End With

End Sub

Sub Subwarning()
    MsgBox "WARNING !!!" & Chr(13) & _
        "Please contact an authorised AIMS P/L representative or visit our web-site:" & Chr(13) _
        & "www.aimspl.com" _
        , vbOKOnly + vbExclamation, "AIMS P/L: Floorplan Reconciler"
        KillBeforeClose
End Sub
Attribute VB_Name = "EsandaConversion"
Option Private Module
Sub ImportBailEsanda()
'Copyright 2008 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

'opens the external file
Workbooks.Open Filename:=FnameFinancier

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

If Trim(Range("M1").Value) = "OUTSTANDING BALANCE" And Trim(Range("A1").Value) = "SOB" Then
    'checks to see if there's a VIN in column K
    'if so take it across to column D
    'if not use the entry that's already in column D
    Range("K2").Select
    Do Until ActiveCell.Offset(0, 1) = ""
        If ActiveCell.Value <> "" Then
            ActiveCell.Offset(0, -7).Value = ActiveCell.Value
            ActiveCell.Offset(1, 0).Select
        Else
            ActiveCell.Value = ActiveCell.Offset(0, -7).Value
            ActiveCell.Offset(1, 0).Select
        End If
    Loop
    'rearranges the columns so it's in same order as old Esanda files
    Columns("K:K").Select
    Selection.Cut
    Columns("D:D").Select
    ActiveSheet.Paste
    Columns("J:K").Select
    Selection.Delete Shift:=xlToLeft
    'removes the column labels row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
End If

'goes to the amount column and counts the rows
Range("K1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:K" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
       
    'file compatibility checks for Esanda
    If Trim(Range("A1").Value) = "" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("K1").Value) = "" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    '----------------------------------------
    
    'inserts a space to the left of each entry in the date range (i.e. to allow for data formatting issue)
    Range("C1").Select
    Range(Selection, Selection.End(xlDown)).Select
'
'    For Each cell In Selection
'    'If Not cell.HasFormula Then
'        'cell.Value = Chr(149) & " " & cell.Value
'        cell.Value = "(" & cell.Value & ")"
'    'End If
'    Next cell
    
    'inserts blank row
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
   'formats the entire date column to general
   'Columns("C:C").Select
   'Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Sub MonthDateSeparatorEsanda()
'note - must format the range as text

For Each cell In Selection
    sval = cell.Value
    
        strYear = Right$(sval, 2)                         ' Year is always 2 characters
        strMonth = Mid$(sval, Len(sval) - 3, 2) ' Month is the two characters before the Year
        strDay = Left$(sval, Len(sval) - 4)            ' either 1 or 2 characters
    
    cell.Value = strDay & "/" & strMonth & "/" & strYear
    
Next

End Sub
Sub ImportBailEsandaNew()
'Copyright 2009 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

'opens the external file
Workbooks.Open Filename:=FnameFinancier

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'rearranges the columns so it's in same order as old Esanda files
Columns("K:K").Select
Selection.Cut
Columns("D:D").Select
ActiveSheet.Paste
Columns("J:K").Select
Selection.Delete Shift:=xlToLeft

'goes to the amount column and counts the rows
Range("K1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:K" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
       
    'file compatibility checks for Esanda
    If Trim(Range("C1").Value) <> "BAIL DATE" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("K1").Value) <> "OUTSTANDING BALANCE" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    '----------------------------------------
    
    'inserts a space to the left of each entry in the date range (i.e. to allow for data formatting issue)
    Range("C1").Select
    Range(Selection, Selection.End(xlDown)).Select
    
    For Each cell In Selection
    'If Not cell.HasFormula Then
        cell.Value = Chr(149) & " " & cell.Value
        'cell.Value = " " & cell.Value
    'End If
    Next cell

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
   'formats the entire date column to general
   'Columns("C:C").Select
   'Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Attribute VB_Name = "FCAConversion"
Option Private Module
Sub ImportBailFCA()
'Copyright 2008 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

'opens the external file
Workbooks.Open Filename:=FnameFinancier

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'goes to the amount column and counts the rows
Range("O1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:O" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------

'file compatibility check (FCA)
If Trim(Range("A1").Value) <> "dealer_cde" Then
    Call ErrorAlertCompatibilityFinancier
End If

'file compatibility check (FCA)
If Trim(Range("E1").Value) <> "vin" Then
    Call ErrorAlertCompatibilityFinancier
End If

'file compatibility check (FCA)
If Trim(Range("L1").Value) <> "taxamnt" Then
    Call ErrorAlertCompatibilityFinancier
End If

'file compatibility check (FCA)
If Trim(Range("O1").Value) <> "gst_excl_amt" Then
    Call ErrorAlertCompatibilityFinancier
End If

'----------------------------------------

''done below to check if Southside Ford are being naughty
'If DealershipName = "Southside Toyota" Then
'        Call ErrorAlertCompatibilityWrongDealer
'End If

'----------------------------------------

''removes the spaces which are inserted to the left of the Date, VIN, Stock numbers and whl_prod columns
' Columns("C:C").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("B:B").Select
'    Selection.TextToColumns Destination:=Range("B1"), DataType:=xlDelimited, _
'        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'        :=Array(1, 1)
'    Selection.Delete Shift:=xlToLeft
'Columns("E:E").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("D:D").Select
'    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
'        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'        :=Array(1, 1)
'    Selection.Delete Shift:=xlToLeft
'Columns("F:F").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("E:E").Select
'    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
'        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'        :=Array(1, 1)
'    Selection.Delete Shift:=xlToLeft
'Columns("O:O").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("N:N").Select
'    Selection.TextToColumns Destination:=Range("N1"), DataType:=xlDelimited, _
'        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'        :=Array(1, 1)
'    Selection.Delete Shift:=xlToLeft

'----------------------------------------

'adds the GST amount to the GST exclusive amount if the user selects the Inclusive option
If frmMainScreen.optGST1.Value = True Then
    Range("O2").Select
    Do Until ActiveCell.Value = ""
        ActiveCell.Value = (ActiveCell.Value + ActiveCell.Offset(0, -4).Value)
        ActiveCell.Offset(1, 0).Select
    Loop
End If

'if the entry in column N is 'DPP' then use the (out_balance) column
'instead of the (gst_excl_amount) column
Range("O2").Select
Do Until ActiveCell.Value = ""
    If Trim(ActiveCell.Offset(0, -1).Value = "DPP") Then
        ActiveCell.Value = ActiveCell.Offset(0, -2).Value
    End If
    ActiveCell.Offset(1, 0).Select
Loop

'removes the unnecessary columns
Range("A:A,C:C,F:N").Select
    Selection.Delete Shift:=xlToLeft

'moves the columns around to suit
Columns("A:B").Select
Selection.Insert Shift:=xlToRight
Columns("D:D").Select
Selection.Cut
Columns("F:F").Select
Selection.Insert Shift:=xlToRight
Columns("F:J").Select
Selection.Insert Shift:=xlToRight
Range("A1").Select

'types the column headings
Range("A1").Value = "Location #"
Range("B1").Value = "Bailment #"
Range("C1").Value = "Date"
Range("D1").Value = "Chassis/VIN#"
Range("E1").Value = "Stock#"
Range("F1").Value = "Make"
Range("G1").Value = "Model"
Range("H1").Value = "Type"
Range("I1").Value = "Rego #"
Range("J1").Value = "Orig Bail #"
Range("K1").Value = "CURRENT BALANCE"

'formats the entire date column to general
Columns("C:C").Select
Selection.NumberFormat = "General"
    
On Error GoTo NoBlankRows
    'deletes rows where amount is left blank
    Columns("K:K").Select
    Selection.SpecialCells(xlCellTypeBlanks).Select
    Selection.EntireRow.Delete
On Error GoTo 0
NoBlankRows:
   
 Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero

 'takes the initial VIN # column and stores in column V
 Columns("D:D").Select
 Selection.Copy
 Columns("V:V").Select
 ActiveSheet.Paste
 
' 'strips off 17 characters from the left because when a car is bailed for over a year
' 'the financier places a '/1' etc after the chassis number
' Range("E2").Select
' Do While ActiveCell.Offset(0, 7).Value <> ""
'         ActiveCell.Value = Left(ActiveCell.Value, 17)
'         ActiveCell.Offset(1, 0).Range("A1").Select
' Loop
 
 'below is done again for the exact matching process, since the stripping above will
 'create a 17 char chassis - with a space if the chassis only has 16 chars initially.
 
' 'removes any spaces that sometimes are inserted at the right hand side of the chassis entry
' Columns("E:E").Select
' Selection.Insert Shift:=xlToRight
' Columns("D:D").Select
' Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
'     TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'     Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'     :=Array(1, 1)
' Columns("E:E").Select
' Selection.Delete Shift:=xlToLeft
 
 'counts the number of bailment entries for the ending label
 Range("K2").Select
 Selection.End(xlDown).Select
 BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
 Range("Z1").Value = BailmentEntriesVar
 ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
     "=Bail!R1C26" 'cell Z1 Bail sheet
 
 'removes gunk from the stock entries
 Columns("F:F").Select
 Selection.Insert Shift:=xlToRight
 Columns("E:E").Select
 Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
     TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
     :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
     Array(1, 1), Array(2, 1))
 Columns("F:F").Select
 Selection.Delete Shift:=xlToLeft
  
 'counts the number of Amount entries - only used if downsloads come without Bailment entries
 Range("K2").Select
 Selection.End(xlDown).Select
 Rowcounter = ActiveCell.Row

 'types in psuedo bailment numbers
 Range("B2").Select
 ActiveCell.FormulaR1C1 = "1"
 Range("B2:B" & Rowcounter).Select
 Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
     Step:=1, Trend:=False
    
 'copies the original sheet and names it "Original Bail Data"
 Sheets("BAIL").Copy Before:=Sheets(1)
 Sheets("BAIL (2)").Select
 Sheets("BAIL (2)").Name = "Original Bail Data"

End Sub
Sub MonthDateSeparatorFCA()
'note - must format the range as text

On Error Resume Next
For Each cell In Selection
    sval = cell.Value
    
        strDay = Right$(sval, 2)                         ' Day is always 2 characters
        strMonth = Mid$(sval, Len(sval) - 3, 2) ' Month is the two characters before the Year
        strYear = Left$(sval, Len(sval) - 4)            ' 4 characters
    
    'cell.Value = strYear & "/" & strMonth & "/" & strDay
    cell.Value = strDay & "/" & strMonth & "/" & strYear
Next
On Error GoTo 0

End Sub
Attribute VB_Name = "GEConversion"
Option Private Module
Sub ImportBailGE()
'Copyright 2008 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

'opens the external file
Workbooks.Open Filename:=FnameFinancier

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'goes to the amount column and counts the rows
Range("U1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:U" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
   
    'file compatibility check (GE)
    If Trim(Range("A1").Value) <> "Dealer Name" Then
        Call ErrorAlertCompatibilityFinancier
    End If

    If Trim(Range("U1").Value) <> "Payout" Then
        Call ErrorAlertCompatibilityFinancier
    End If
        
    On Error GoTo NoNA
    'replace any '#N/A" that sometimes appear in the Stock column
    Columns("F:F").Select
           Selection.Replace What:="#N/A", Replacement:=" ", LookAt:=xlPart, _
               SearchOrder:=xlByRows, MatchCase:=False
    On Error GoTo 0
NoNA:
    '----------------------------------------
    
    'done only for Sinclair Ford - because they use the "Manfct Serial Num"
    'column instead of the "Stock Num" column
    If DealershipName = "Sinclair Ford" Then
        'Switches the two above mentioned columns
        Columns("F:F").Select
        Selection.Cut
        Columns("H:H").Select
        Selection.Insert Shift:=xlToRight
        Range("A1").Select
    End If

    'deletes unnecessery columns
    Columns("A:A").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
    Columns("B:B").Select
    Selection.Delete Shift:=xlToLeft
    Columns("E:H").Select
    Selection.Delete Shift:=xlToLeft
    Columns("G:L").Select
    Selection.Delete Shift:=xlToLeft
    Columns("H:J").Select
    Selection.Delete Shift:=xlToLeft
    
    'moves the Date column
    Columns("E:E").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    
    'moves the Stock column
    Columns("E:E").Select
    Selection.Cut
    Columns("C:C").Select
    Selection.Insert Shift:=xlToRight
    
    'inserts a blank column for Type
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    
    'inserts a blank column for Orig Bail
    Columns("H:H").Select
    Selection.Insert Shift:=xlToRight
    
    'inserts columns for Location and Bailment
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
     
    'removes GE Capitals top row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
    'inserts row for new column headings
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown
    
    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
    'formats the entire date column to general
    Columns("C:C").Select
    Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
     
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Sub MonthDateSeparatorGE()
'note - must format the range as text

For Each cell In Selection
    sval = cell.Value
    
        strYear = Right$(sval, 4)                         ' Year is always 4 characters
        strMonth = Mid$(sval, Len(sval) - 5, 2) ' Month is the two characters before the Year
        strDay = Left$(sval, Len(sval) - 6)            ' either 1 or 2 characters
    
    cell.Value = strDay & "/" & strMonth & "/" & strYear
    
Next

End Sub


Attribute VB_Name = "GMACConversion"
Option Private Module
Sub ImportBailGMAC()
'Copyright 2008 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

'opens the external file
Workbooks.Open Filename:=FnameFinancier

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'goes to the amount column and counts the rows
Range("L1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:Q" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
       
    'file compatibility checks for GMAC
    If Trim(Range("F1").Value) <> "VIN" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("G1").Value) <> "Interest Start Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("M1").Value) <> "PayOut Retained GST" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("O1").Value) <> "Reference Number" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("Q1").Value) <> "Stock No" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    '-----------------------------------------
        
    Columns("H:I").Select
    Selection.Insert Shift:=xlToRight
    Columns("G:G").Select
    Selection.TextToColumns Destination:=Range("G1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(Array(1, 1), Array(2, 1), Array(3, 1))
    Columns("H:I").Select
    Selection.Delete Shift:=xlToLeft
  
'    'formats the entire date column
'    Columns("C:C").Select
'    Selection.NumberFormat = "General"
      
'    inserts a space to the left of each entry in the date range (i.e. to allow for data formatting issue)
'    Range("Q1").Select
'    Range(Selection, Selection.End(xlDown)).Select
    
'    For Each cell In Selection
'    If Not cell.HasFormula Then
'        'cell.Value = Chr(149) & " " & cell.Value
'        cell.Value = " " & cell.Value
'    End If
'    Next cell
    
    'moves columns around to suit
    Range("A:E,H:K,M:P").Select
    Selection.Delete Shift:=xlToLeft
    Columns("B:B").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.Cut
    Columns("C:C").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
 
    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    
    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub
Attribute VB_Name = "Inhouse_Conversions"
Option Private Module
Sub ImportDealer()
'Copyright 2008 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'DEALER'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "DEALER"
End With

    If InhouseSystem = "Infomedia" Then
      Workbooks.OpenText Filename:=FnameInhouse, _
        Origin:=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
        xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, Semicolon:=False, _
        Comma:=True, Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), _
        Array(2, 1), Array(3, 1))
    GoTo InfomediaOpen
    End If
    
Workbooks.Open Filename:=FnameInhouse
    
InfomediaOpen:

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'has more than 3 columns
If InhouseSystem = "RevolutionWithToyotaAndFord" Then
    'goes to the amount column and counts the rows
    Range("L1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row
    
    'copies and pastes the data into the program
    Range("A1:L" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("DEALER").Select
    Range("A1").Select
    ActiveSheet.Paste
    GoTo RevolutionImport
End If

'has more than 3 columns
If InhouseSystem = "Revolution" Then
    'goes to the amount column and counts the rows
    Range("S1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row
    
    'copies and pastes the data into the program
    Range("A1:S" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("DEALER").Select
    Range("A1").Select
    ActiveSheet.Paste
    GoTo RevolutionImport
End If

'has more than 3 columns
If InhouseSystem = "PMDS version of Auto-IT" Then
    'goes to the amount column and counts the rows
    Range("E1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row
    
    'copies and pastes the data into the program
    Range("A1:F" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("DEALER").Select
    Range("A1").Select
    ActiveSheet.Paste
    GoTo RevolutionImport
End If

'has more than 3 columns
If InhouseSystem = "CFS" Then
    'goes to the amount column and counts the rows
    Range("F1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row
    
    'copies and pastes the data into the program
    Range("A1:F" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("DEALER").Select
    Range("A1").Select
    ActiveSheet.Paste
    GoTo RevolutionImport
End If

'has more than 3 columns
If InhouseSystem = "UnitsNew" Then
    'removes all formats
    Cells.Select
    Selection.ClearFormats
    'removes unwanted rows
    Rows("1:15").Select
    Selection.Delete Shift:=xlUp
    'removes gunk from the Engine number entries
    Columns("I:I").Select
    Selection.TextToColumns Destination:=Range("I1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array(1, 1 _
        )
    'removes unwanted columns
    Range("B:H,J:AI,AK:AM").Select
    Selection.Delete Shift:=xlToLeft
End If

'goes to the amount column and counts the rows
Range("C1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:D" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("DEALER").Select
Range("A1").Select
ActiveSheet.Paste

RevolutionImport:
    
'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
    
    Select Case InhouseSystem
    
    'file compatibility check (REYNOLDS AND REYNOLDS)
    Case "Reynolds"
    
      'this routine is only done for Westpoint Autos Group - as they use CFSq
        If DealershipName = "Westpoint Autos Group" Then
    
            'sorts the data in descending order to place blank VINs at the bottom of the list
            Range("B1").Select
            Selection.Sort Key1:=Range("B1"), Order1:=xlDescending, Header:=xlNo, _
                OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
       
            If Trim(Range("B1").Value) = "" Then
                Call ErrorAlertCompatibilityDealer
            End If
       
            If Trim(Range("C1").Value) = "" Then
                Call ErrorAlertCompatibilityDealer
            End If
        
            'inserts a row at the top and types field names
            Rows("1:1").Select
            Selection.Insert Shift:=xlDown
    
            'types the column headings
            Range("A1").Value = "Stock #"
            Range("B1").Value = "Chassis #"
            Range("C1").Value = "Amount"
            
            'places a "'" on each stock number to it's not used in double checking routines
            Range("A2").Select
            Do Until ActiveCell.Offset(0, 2) = ""
                ActiveCell.Value = "''" & ActiveCell.Value
                ActiveCell.Offset(1, 0).Select
            Loop
            GoTo CFSq
        End If
       
        If Trim(Range("A1").Value) <> "CTL#17CHAR" And Trim(Range("A1").Value) <> "CTL#17CHR" And Trim(Range("A1").Value) <> "CTLCHR17" And Trim(Range("A1").Value) <> "Stock#" Then
            Call ErrorAlertCompatibilityDealer
        End If
       
        If Trim(Range("C1").Value) <> "AMOUNT" And Trim(Range("C1").Value) <> "Amount" And Trim(Range("C1").Value) <> "FLOOR AMT" Then
            Call ErrorAlertCompatibilityDealer
        End If
CFSq:
        '-----------------------------------------
'        'this routine is only done for Adtrans dealers
'        If DealershipName = "Stillwell Hyundai & Kia" Then
'                Call StillwellHyundai_Kia
'        ElseIf DealershipName = "Rebel Ford" Then
'                Call RebelFord
'        ElseIf DealershipName = "Stillwell Ford" Then
'                Call StillwellFord
'        ElseIf DealershipName = "Cornes Toyota" Then
'                Call CornesToyota
'        ElseIf DealershipName = "Adrian Brien Automotive" Then
'                Call AdrianBrienAutomotive
'        ElseIf DealershipName = "Regency Park Trucks" Then
'                Call RegencyParkTrucks
'        ElseIf DealershipName = "Adtrans Trucks Centre" Then
'                Call AdtransTrucksCentre
'        ElseIf DealershipName = "Stillwell Trucks" Then
'                Call StillwellTrucks
'        ElseIf DealershipName = "Melbourne Int' Truck Centre" Then
'                Call MelbourneIntTruckCentre
'        End If
                 
        '-----------------------------------------
        
        'this routine is only done for 'Bryan Byrt Automotive'
        If DealershipName = "Bryan Byrt Automotive - (new vehicles)" Then
                Call BryanByrtAutomotiveNew
        ElseIf DealershipName = "Bryan Byrt Automotive - (used vehicles)" Then
                Call BryanByrtAutomotiveUsed
        End If
        
        'this routine is only done for Westpoint Autos Group
        If DealershipName = "Westpoint Autos Group" Then
                Call Westpoint_Autos_Group
        End If
        
        'deletes the column that include the account numbers
        Columns("D:D").Select
        Selection.Delete Shift:=xlToLeft
             
        'checks here to see if the file has a subtotal or not,
        'because the Universe system does not have one
        
        'moves to the last cell in column C
        Range("C2").Select
        Selection.End(xlDown).Select
        
        'below was put in place 13th December 2005, to allow for any dealerships that have a 'TOTAL' label
        'in column A that should be a blank
        'done for Bayford Group initially
        If Trim(ActiveCell.Offset(0, -2).Range("A1").Value = "TOTAL") Or Trim(ActiveCell.Offset(0, -2).Range("A1").Value = "Total") Or Trim(ActiveCell.Offset(0, -2).Range("A1").Value = "total") Then
            ActiveCell.Offset(0, -2).Range("A1").Select
            Selection.ClearContents
            GoTo HasTotalLabel
        End If
        
        If ActiveCell.Offset(0, -2).Range("A1").Value <> "" Then
        
            'removes any that are sometimes within the stock number column
            'done mainly for Wanneroo Chrysler 1st Feb 2006
            Columns("A:A").Select
            Selection.Replace What:=" ", Replacement:="", LookAt:=xlPart, _
                SearchOrder:=xlByRows, MatchCase:=False
        
            'sorts the data in ascending order to get any duplicates together
            Range("A1").Select
            Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
                OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
            
            'creates the subtotals
            Range("A1").Select
            Selection.Subtotal GroupBy:=1, Function:=xlSum, TotalList:=Array(3), _
                Replace:=True, PageBreaks:=False, SummaryBelowData:=True
            Columns("C:C").Select
            Selection.Copy
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                :=False, Transpose:=False
            Application.CutCopyMode = False
            Selection.ClearOutline
            
            'clears the 'Grand Total' label
            Range("A1").Select
            Selection.End(xlDown).Select
            Selection.ClearContents
            Range("A1").Select
            
            'pushes the engines numbers down a row so they align with the total rows
            'by initially selecting cell B1
            Range("B1").Select
            Selection.Insert Shift:=xlDown
            
            'moves the 'ENGINE NUMBER' label back to B1
            Range("B2").Select
            Selection.Cut
            Range("B1").Select
            ActiveSheet.Paste
        
            'clears each cell in column A if the text is not bold
            '(i.e. leaving only the total labels)
            Range("A1").Select
            Range(Selection, Selection.End(xlDown)).Select
        
            For Each cell In Selection
                If cell.Font.Bold = False Then cell.Value = ""
            Next
        
            'types the control number again - as it got removed earlier
            Range("A1").Select
            ActiveCell.FormulaR1C1 = "CTL#17CHAR"
            
            Do Until ActiveCell.Offset(0, 2).Value = ""
                'deletes all the rows that are now blank in column A
                If ActiveCell.Value = "" Then
                    Selection.EntireRow.Delete
                    ActiveCell.Offset(-1, 0).Range("A1").Select
                Else
                    ActiveCell.Offset(1, 0).Range("A1").Select
                End If
            Loop
            
            'formats column A to General because the subtotaling does strange fromatting things
            Columns("A:A").Select
            Selection.NumberFormat = "General"
  
            'parses column A to remove the total label created by the subtotalling
            Columns("B:B").Select
            Selection.Insert Shift:=xlToRight
            Columns("A:A").Select
            Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
                TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
                Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
                :=Array(Array(1, 1), Array(2, 1))
            Columns("B:B").Select
            Selection.Delete Shift:=xlToLeft
            
            'removes all the bolding from column A that is crested by the subtotalling
            Columns("A:A").Select
            Selection.Font.Bold = False
            
            'only done for Maughan Thiem because they reconcile with a new car inventory file instead of the general ledger file (29th Jan 3013)
            If DealershipName = "Maughan Thiem" Then
                'switches the sign
                Range("C2").Select
                Range(Selection, Selection.End(xlDown)).Select
                'The following code converts all positives to negatives and all negatives to positives within the selection
                '(Note the "-" sign after the "=")
                For Each CurrentCell In Selection
                    CurrentCell.Value = -CurrentCell
                Next
            End If
            
            'adds a dummy total label, as this comes without an actual total in the download
            Range("C2").Select
            Selection.End(xlDown).Select
            ActiveCell.Offset(1, 0).Range("A1").Select
            ActiveCell.Value = "Total Label"
            
            'this is only done because of the subtotalling involved
            'number formats column C
            Columns("C:C").Select
            Selection.NumberFormat = "0.00"
            'removes the records where the vlaues are actually displayed as zero
            Call RemoveRowsDealerUniversal
            Range("A1").Select
            
        End If
        
HasTotalLabel:
       
Range("A1").Select
            
    '------------------------------------------
        
    'file compatibility check (Kerridge Midas)
    Case "Kerridge Midas"
    
        'this was put in place 9th Jan 2008 - in case dealers using GE and Systime
        'do not open the files in the wrong order
        'both files have a 17 character VIN in column B
        If Trim(Range("B1").Value) = "Vin" Then
            Call ErrorAlertCompatibilityDealer
        End If
       
        If Trim(Len(Range("B1").Value)) <> 17 And Trim(Left(Range("B1").Value, 1)) <> "*" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'inserts a row at the top and types field names
        'this is because Systime do not have field names when extracted
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Stock #"
        Range("B1").Value = "Chassis #"
        Range("C1").Value = "Amount"
        
        If DealershipName = "Southern Classic Cars" Then
            'adds a dummy total label, as this Dealership file comes without an actual total in the download
            Range("C2").Select
            Selection.End(xlDown).Select
            ActiveCell.Offset(1, 0).Range("A1").Select
            ActiveCell.Value = "Total Label"
        End If
        
    'file compatibility check (Preston Motors System)
    Case "Preston"
    
        'inserts a row at the top and types field names
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Stock #"
        Range("B1").Value = "Chassis #"
        Range("C1").Value = "Amount"
        
        '------------------------------
        
        'removes any blanks that are sometimes within the stock number column
        Columns("A:A").Select
        Selection.Replace What:=" ", Replacement:="", LookAt:=xlPart, _
            SearchOrder:=xlByRows, MatchCase:=False
    
        'sorts the data in ascending order to get any duplicates together
        Range("A1").Select
        Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
        'creates the subtotals
        Range("A1").Select
        Selection.Subtotal GroupBy:=1, Function:=xlSum, TotalList:=Array(3), _
            Replace:=True, PageBreaks:=False, SummaryBelowData:=True
        Columns("C:C").Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        Application.CutCopyMode = False
        Selection.ClearOutline
        
        'clears the 'Grand Total' label
        Range("A1").Select
        Selection.End(xlDown).Select
        Selection.ClearContents
        Range("A1").Select
        
        'pushes the chassis numbers down a row so they align with the total rows
        'by initially selecting cell B1
        Range("B1").Select
        Selection.Insert Shift:=xlDown
        
        'moves the 'Chassis #' label back to B1
        Range("B2").Select
        Selection.Cut
        Range("B1").Select
        ActiveSheet.Paste
    
        'clears each cell in column A if the text is not bold
        '(i.e. leaving only the total labels)
        Range("A1").Select
        Range(Selection, Selection.End(xlDown)).Select
    
        For Each cell In Selection
            If cell.Font.Bold = False Then cell.Value = ""
        Next
    
        'types the stock number again - as it got removed earlier
        Range("A1").Select
        ActiveCell.FormulaR1C1 = "Stock #"
        
        Do Until ActiveCell.Offset(0, 2).Value = ""
            'deletes all the rows that are now blank in column A
            If ActiveCell.Value = "" Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(-1, 0).Range("A1").Select
            Else
                ActiveCell.Offset(1, 0).Range("A1").Select
            End If
        Loop
        
        'formats column A to General because the subtotaling does strange fromatting things
        Columns("A:A").Select
        Selection.NumberFormat = "General"

        'parses column A to remove the total label created by the subtotalling
        Columns("B:B").Select
        Selection.Insert Shift:=xlToRight
        Columns("A:A").Select
        Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
            TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
            Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
            :=Array(Array(1, 1), Array(2, 1))
        Columns("B:B").Select
        Selection.Delete Shift:=xlToLeft
        
        'removes all the bolding from column A that is crested by the subtotalling
        Columns("A:A").Select
        Selection.Font.Bold = False
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
        'this is only done because of the subtotalling involved
        'number formats column C
        Columns("C:C").Select
        Selection.NumberFormat = "0.00"
        'removes the records where the vlaues are actually displayed as zero
        Call RemoveRowsDealerUniversal
        Range("A1").Select
       
Range("A1").Select
        
    'file compatibility check (Autoline)
    Case "Autoline"
    
        'sorts the data in descending order to place blank VINs at the bottom of the list
        Range("B1").Select
        Selection.Sort Key1:=Range("B1"), Order1:=xlDescending, Header:=xlNo, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
'        If Trim(Len(Range("B1").Value)) <> 17 Then
'            Call ErrorAlertCompatibilityDealer
'        End If
        
        'inserts a row at the top and types field names
        'this is because the system do not include field names when extracted
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Stock #"
        Range("B1").Value = "Chassis #"
        Range("C1").Value = "Amount"
        
'        Range("C2").Select
'        Range(Selection, Selection.End(xlDown)).Select
        'The following code converts all positives to negatives and all negatives to positives within the selection
        '(Note the "-" sign after the "=")
'        For Each CurrentCell In Selection
'            CurrentCell.Value = -CurrentCell
'        Next
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    'file compatibility check (INFOMEDIA OR Autoledgers (previously Online OLGA Infomedia))
    Case "Infomedia"
      
        If Trim(Range("A1").Value) <> "Stock No" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("C1").Value) <> "Amount" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If DealershipName = "Canberra Toyota" Then
            'removes all the white spaces to the right of each Engine No
            Columns("C:C").Select
            Selection.Insert Shift:=xlToRight
            Columns("B:B").Select
            Selection.TextToColumns Destination:=Range("B1"), DataType:=xlDelimited, _
                TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
                Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
                :=Array(Array(1, 1), Array(2, 1))
            Columns("C:C").Select
            Selection.Delete Shift:=xlToLeft
            Range("A1").Select
            
            'switches the sign
            Range("C2").Select
            Range(Selection, Selection.End(xlDown)).Select
            'The following code converts all positives to negatives and all negatives to positives within the selection
            '(Note the "-" sign after the "=")
            For Each CurrentCell In Selection
                CurrentCell.Value = -CurrentCell
            Next
        End If
        
    'file compatibility check (CFS)
    Case "CFS"
      
        If Trim(Range("A1").Value) <> "stock_no" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("B1").Value) <> "vin" Then
            Call ErrorAlertCompatibilityDealer
        End If
                
        If Trim(Range("C1").Value) <> "VALUE" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'deletes the unwanted columns
        Columns("A:C").Select
        Selection.Delete Shift:=xlToLeft
        
        'inserts a row at the top and types field names
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Stock #"
        Range("B1").Value = "Chassis #"
        Range("C1").Value = "Amount"
               
        Range("C2").Select
        Range(Selection, Selection.End(xlDown)).Select
        'The following code converts all positives to negatives and all negatives to positives within the selection
        '(Note the "-" sign after the "=")
        For Each CurrentCell In Selection
            CurrentCell.Value = -CurrentCell
        Next
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    'file compatibility check (CFSq) 'done for Westpoint Autos
    Case "CFSq"
    
        'sorts the data in descending order to place blank VINs at the bottom of the list
        Range("B1").Select
        Selection.Sort Key1:=Range("B1"), Order1:=xlDescending, Header:=xlNo, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
       
        If Trim(Range("B1").Value) = "" Then
            Call ErrorAlertCompatibilityDealer
        End If
       
        If Trim(Range("C1").Value) = "" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'inserts a row at the top and types field names
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Stock #"
        Range("B1").Value = "Chassis #"
        Range("C1").Value = "Amount"
        
        'this routine is only done for Westpoint Autos Group
        If DealershipName = "Westpoint Autos Group" Then
                Call Westpoint_Autos_Group
        End If
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    'file compatibility check (UnitsNew)
    Case "UnitsNew"
        If Trim(Range("A1").Value) <> "Unit No." Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("C1").Value) <> "Value" Then
            Call ErrorAlertCompatibilityDealer
        End If
               
        Range("C2").Select
        Range(Selection, Selection.End(xlDown)).Select
        'The following code converts all positives to negatives and all negatives to positives within the selection
        '(Note the "-" sign after the "=")
        For Each CurrentCell In Selection
            CurrentCell.Value = -CurrentCell
        Next
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    Range("A1").Select
    
    'file compatibility check (Units)
    Case "Units"
      
        If Trim(Range("A1").Value) <> "NO" And Trim(Range("A1").Value) <> "No" And Trim(Range("A1").Value) <> "no" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
'        If Trim(Range("B1").Value) <> "VIN_NO" And Trim(Range("B1").Value) <> "vin_no" And Trim(Range("B1").Value) <> "ENGNO" Then
'            Call ErrorAlertCompatibilityDealer
'        End If
        
        If Trim(Range("C1").Value) <> "FLOORVAL" And Trim(Range("C1").Value) <> "Floorval" And Trim(Range("C1").Value) <> "floorval" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'deletes the unwanted column
        Columns("D:D").Select
        Selection.Delete Shift:=xlToLeft
               
        Range("C2").Select
        Range(Selection, Selection.End(xlDown)).Select
        'The following code converts all positives to negatives and all negatives to positives within the selection
        '(Note the "-" sign after the "=")
        For Each CurrentCell In Selection
            CurrentCell.Value = -CurrentCell
        Next
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    'file compatibility check (RevolutionWithToyota)
    Case "RevolutionWithToyotaAndFord"
      
        If Trim(Range("G1").Value) <> "Invoice No." Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("H1").Value) <> "X-Ref" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("L1").Value) <> "Amount Due" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'deletes the unwanted column
        'doing below leaves me with Invoice No., X-Ref, and Amount Due
        Range("A:F,I:K,M:P").Select
        Selection.Delete Shift:=xlToLeft
        Columns("A:A").Select
        Selection.Cut
        Columns("C:C").Select
        Selection.Insert Shift:=xlToRight
        
        If DealershipName = "Fremantle Toyota" Then
            GoTo Fremantle
        End If
        
        'subtracts the GST from the Amount Due
        Range("C2").Select
        Do Until ActiveCell.Value = ""
            ActiveCell.Value = ActiveCell.Value - Round((ActiveCell.Value / 11), 2)
            ActiveCell.Offset(1, 0).Select
        Loop
        
Fremantle:
                       
        Range("C2").Select
        Range(Selection, Selection.End(xlDown)).Select
        'The following code converts all positives to negatives and all negatives to positives within the selection
        '(Note the "-" sign after the "=")
        For Each CurrentCell In Selection
            CurrentCell.Value = -CurrentCell
        Next
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    'file compatibility check (Revolution Other Files)
    Case "Revolution"
      
        If Trim(Range("G1").Value) <> "Stock #" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("K1").Value) <> "Floor Id" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("S1").Value) <> "Open Amount" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'deletes the unwanted column
        'doing below leaves me with Stock #, Chassis, and Open Amount
        Range("A:F,H:K,M:R").Select
        Selection.Delete Shift:=xlToLeft
        
        'subtracts the GST from the Open Amount
        Range("C2").Select
        Do Until ActiveCell.Value = ""
            ActiveCell.Value = ActiveCell.Value - Round((ActiveCell.Value / 11), 2)
            ActiveCell.Offset(1, 0).Select
        Loop
               
        Range("C2").Select
        Range(Selection, Selection.End(xlDown)).Select
        'The following code converts all positives to negatives and all negatives to positives within the selection
        '(Note the "-" sign after the "=")
        For Each CurrentCell In Selection
            CurrentCell.Value = -CurrentCell
        Next
        
        '--------------------------------------------
        
        'sorts the data in ascending order to get any duplicates together
        Range("A1").Select
        Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
        'creates the subtotals
        Range("A1").Select
        Selection.Subtotal GroupBy:=1, Function:=xlSum, TotalList:=Array(3), _
            Replace:=True, PageBreaks:=False, SummaryBelowData:=True
        Columns("C:C").Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
            :=False, Transpose:=False
        Application.CutCopyMode = False
        Selection.ClearOutline
        
        'clears the 'Grand Total' label
        Range("A1").Select
        Selection.End(xlDown).Select
        Selection.ClearContents
        Range("A1").Select
        
        'pushes the engines numbers down a row so they align with the total rows
        'by initially selecting cell B1
        Range("B1").Select
        Selection.Insert Shift:=xlDown
        
        'moves the 'ENGINE NUMBER' label back to B1
        Range("B2").Select
        Selection.Cut
        Range("B1").Select
        ActiveSheet.Paste
    
        'clears each cell in column A if the text is not bold
        '(i.e. leaving only the total labels)
        Range("A1").Select
        Range(Selection, Selection.End(xlDown)).Select
    
        For Each cell In Selection
            If cell.Font.Bold = False Then cell.Value = ""
        Next
    
        'types the control number again - as it got removed earlier
        Range("A1").Select
        ActiveCell.FormulaR1C1 = "CTL#17CHAR"
        
        Do Until ActiveCell.Offset(0, 2).Value = ""
            'deletes all the rows that are now blank in column A
            If ActiveCell.Value = "" Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(-1, 0).Range("A1").Select
            Else
                ActiveCell.Offset(1, 0).Range("A1").Select
            End If
        Loop
        
        'formats column A to General because the subtotaling does strange fromatting things
        Columns("A:A").Select
        Selection.NumberFormat = "General"

        'parses column A to remove the total label created by the subtotalling
        Columns("B:B").Select
        Selection.Insert Shift:=xlToRight
        Columns("A:A").Select
        Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
            TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
            Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
            :=Array(Array(1, 1), Array(2, 1))
        Columns("B:B").Select
        Selection.Delete Shift:=xlToLeft
        
        'removes all the bolding from column A that is crested by the subtotalling
        Columns("A:A").Select
        Selection.Font.Bold = False
        
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
        'this is only done because of the subtotalling involved
        'number formats column C
        Columns("C:C").Select
        Selection.NumberFormat = "0.00"
        'removes the records where the vlaues are actually displayed as zero
        Call RemoveRowsDealerUniversal
        Range("A1").Select
          
       '--------------------------------------------
        
    Case "PMDS version of Auto-IT"
      
        If Trim(Range("D1").Value) <> "Ref No" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("E1").Value) <> "Balance" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("F1").Value) <> "VIN" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'deletes the columns and switches them around to suit
        Columns("A:C").Select
        Selection.Delete Shift:=xlToLeft
        Columns("C:C").Select
        Selection.Cut
        Columns("B:B").Select
        Selection.Insert Shift:=xlToRight
        
        Call RemoveDuplicateRows 'equivalent to Reynolds Universe code
                       
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
    
    Case "Dealer2"
       
        'sorts the data to ensure any blank chassis are at the bottom of the list
        Selection.Sort Key1:=Range("B1"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
        If Trim(Len(Range("B1").Value)) <> 17 Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'inserts a row at the top and types field names
        'this is because Systime do not have field names when extracted
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Stock #"
        Range("B1").Value = "Chassis #"
        Range("C1").Value = "Amount"
        
        Range("C2").Select
        Range(Selection, Selection.End(xlDown)).Select
        'The following code converts all positives to negatives and all negatives to positives within the selection
        '(Note the "-" sign after the "=")
        For Each CurrentCell In Selection
            CurrentCell.Value = -CurrentCell
        Next
        
         'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    Case "DoneForBibStillwell"
      
        'sorts the data to ensure any blank chassis are at the bottom of the list
        Selection.Sort Key1:=Range("B1"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
        If Trim(Len(Range("B1").Value)) <> 17 Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        'inserts a row at the top and types field names
        'this is because they don't have field names when extracted
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Stock #"
        Range("B1").Value = "Chassis #"
        Range("C1").Value = "Amount"
                
        'adds a dummy total label, as this comes without an actual total in the download
        Range("C2").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, 0).Range("A1").Select
        ActiveCell.Value = "Total Label"
        
    Case "DemoCopy"
       
        If Trim(Range("A1").Value) <> "STOCK #" Then
            Call ErrorAlertCompatibilityDealer
        End If
       
        If Trim(Range("C1").Value) <> "AMOUNT" Then
            Call ErrorAlertCompatibilityDealer
        End If
        
        If Trim(Range("B1").Value) <> "VIN/CHASSIS/ENGINE #" Then
                Call ErrorAlertCompatibilityDealer
        End If
        
         '-----------------------------------------
        'checks here to see if the file has a subtotal or not,
        'because the Universe system does not have one
        
        'moves to the last cell in column C
        Range("C2").Select
        Selection.End(xlDown).Select
        
        If ActiveCell.Offset(0, -2).Range("A1").Value <> "" Then
        
            'sorts the data in ascending order to get any duplicates together
            Range("A1").Select
            Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
                OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
            
            'creates the subtotals
            Range("A1").Select
            Selection.Subtotal GroupBy:=1, Function:=xlSum, TotalList:=Array(3), _
                Replace:=True, PageBreaks:=False, SummaryBelowData:=True
            Columns("C:C").Select
            Selection.Copy
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                :=False, Transpose:=False
            Application.CutCopyMode = False
            Selection.ClearOutline
            
            'clears the 'Grand Total' label
            Range("A1").Select
            Selection.End(xlDown).Select
            Selection.ClearContents
            Range("A1").Select
            
            'pushes the engines numbers down a row so they align with the total rows
            'by initially selecting cell B1
            Range("B1").Select
            Selection.Insert Shift:=xlDown
            
            'moves the 'ENGINE NUMBER' label back to B1
            Range("B2").Select
            Selection.Cut
            Range("B1").Select
            ActiveSheet.Paste
        
            'clears each cell in column A if the text is not bold
            '(i.e. leaving only the total labels)
            Range("A1").Select
            Range(Selection, Selection.End(xlDown)).Select
        
            For Each cell In Selection
                If cell.Font.Bold = False Then cell.Value = ""
            Next
        
            'types the control number again - as it got removed earlier
            Range("A1").Select
            ActiveCell.FormulaR1C1 = "CTL#17CHAR"
            
            Do Until ActiveCell.Offset(0, 2).Value = ""
                'deletes all the rows that are now blank in column A
                If ActiveCell.Value = "" Then
                    Selection.EntireRow.Delete
                    ActiveCell.Offset(-1, 0).Range("A1").Select
                Else
                    ActiveCell.Offset(1, 0).Range("A1").Select
                End If
            Loop
            
            'parses column A to remove the total label created by the subtotalling
            Columns("B:B").Select
            Selection.Insert Shift:=xlToRight
            Columns("A:A").Select
            Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
                TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
                Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
                :=Array(Array(1, 1), Array(2, 1))
            Columns("B:B").Select
            Selection.Delete Shift:=xlToLeft
    
            'removes all the bolding from column A that is crested by the subtotalling
            Columns("A:A").Select
            Selection.Font.Bold = False
            
            'adds a dummy total label, as this comes without an actual total in the download
            Range("C2").Select
            Selection.End(xlDown).Select
            ActiveCell.Offset(1, 0).Range("A1").Select
            ActiveCell.Value = "Total Label"
            
            'this is only done because of the subtotalling involved
            'number formats column C
            Columns("C:C").Select
            Selection.NumberFormat = "0.00"
            'removes the records where the vlaues are actually displayed as zero
            Call RemoveRowsDealerUniversal
            Range("A1").Select
            
        End If
        
        Range("A1").Select
        
        '----------------------------
        
    Case Else
    
'        'not really needed and constant is set in mainproc - keep for future reference
        Call ErrorAlertCompatibilityDealer
        
    End Select
    
    '----------------------------

    If DealershipName = "John Hughes - New Vehicles" Or DealershipName = "John Hughes - Used Vehicles" Then
        'takes the initial VIN # column and stores in column V (it moves it in the case of John Hughes
        'as we don't want it to do a match in VINs
        Columns("B:B").Select
        Selection.Cut
        Columns("V:V").Select
        ActiveSheet.Paste
        Range("B1") = "Vin Number"
        GoTo NoVINmove
    End If
    
    'takes the initial VIN # column and stores in column V
    Columns("B:B").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
NoVINmove:
    
    Call RemoveRowsDealer 'calls a routine which deletes rows where amounts are zero
       
    'counts the number of dealer entries for the ending label
    Range("C2").Select
    Selection.End(xlDown).Select
    DealerEntriesVar = ActiveCell.Row - 2 'allows for the column names and the total cell
    Range("Z1").Value = DealerEntriesVar
    ActiveWorkbook.Names.Add Name:="DealerEntriesVar", RefersToR1C1:= _
        "=Dealer!R1C26" 'cell Z1 Dealer sheet
    
    'removes gunk from the stock entries
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:A").Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array(1, 1 _
        )
    Columns("B:B").Select
    Selection.Delete Shift:=xlToLeft
    
    'copies the original sheet and names it "Original Dealer Data"
    Sheets("DEALER").Copy Before:=Sheets(1)
    Sheets("DEALER (2)").Select
    Sheets("DEALER (2)").Name = "Original Dealer Data"
    
End Sub

Sub RemoveDuplicateRows()
'Copyright 2006 AIMS P/L
'All rights reserved

'this routine works like the code within Reynolds that use Universe
    
    'sorts the data in ascending order to get any duplicates together
    Range("A1").Select
    Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
    'creates the subtotals
    Range("A1").Select
    Selection.Subtotal GroupBy:=1, Function:=xlSum, TotalList:=Array(3), _
        Replace:=True, PageBreaks:=False, SummaryBelowData:=True
    Columns("C:C").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    Application.CutCopyMode = False
    Selection.ClearOutline
    
    'clears the 'Grand Total' label
    Range("A1").Select
    Selection.End(xlDown).Select
    Selection.ClearContents
    Range("A1").Select
    
    'pushes the engines numbers down a row so they align with the total rows
    'by initially selecting cell B1
    Range("B1").Select
    Selection.Insert Shift:=xlDown
    
    'moves the 'ENGINE NUMBER' label back to B1
    Range("B2").Select
    Selection.Cut
    Range("B1").Select
    ActiveSheet.Paste

    'clears each cell in column A if the text is not bold
    '(i.e. leaving only the total labels)
    Range("A1").Select
    Range(Selection, Selection.End(xlDown)).Select

    For Each cell In Selection
        If cell.Font.Bold = False Then cell.Value = ""
    Next

    'types the control number again - as it got removed earlier
    Range("A1").Select
    ActiveCell.FormulaR1C1 = "CTL#17CHAR"
    
    Do Until ActiveCell.Offset(0, 2).Value = ""
        'deletes all the rows that are now blank in column A
        If ActiveCell.Value = "" Then
            Selection.EntireRow.Delete
            ActiveCell.Offset(-1, 0).Range("A1").Select
        Else
            ActiveCell.Offset(1, 0).Range("A1").Select
        End If
    Loop
    
    'formats column A to General because the subtotaling does strange fromatting things
    Columns("A:A").Select
    Selection.NumberFormat = "General"

    'parses column A to remove the total label created by the subtotalling
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:A").Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(Array(1, 1), Array(2, 1))
    Columns("B:B").Select
    Selection.Delete Shift:=xlToLeft
    
    'removes all the bolding from column A that is crested by the subtotalling
    Columns("A:A").Select
    Selection.Font.Bold = False
    
    'this is only done because of the subtotalling involved
    'number formats column C
    Columns("C:C").Select
    Selection.NumberFormat = "0.00"
    'removes the records where the vlaues are actually displayed as zero
    Call RemoveRowsDealerUniversal
    
    Range("A1").Select
    
End Sub

Sub RemoveRowsDealerUniversal()
'Copyright 2004 AIMS P/L
'All rights reserved

'note this routine is only done for the Reynolds Universal DMS
    
    'removes rows where the amount value is displayed as zero
    Range("C2").Select
    'will stay in loop until the active cell, and the cell 2 to the left are both blank
        Do Until ActiveCell.Value = "" And ActiveCell.Offset(0, -2).Value = ""
            If ActiveCell.Text = "0.00" Or ActiveCell.Value = "" Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(-1, 0).Range("A1").Select
            Else
                ActiveCell.Offset(1, 0).Range("A1").Select
            End If
        Loop
        
End Sub

Sub StillwellHyundai_Kia()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(0, 1).Select
    If ActiveCell.Offset(0, 1).Value = "K200A" Or ActiveCell.Offset(0, 1).Value = "Y200A" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub RebelFord()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "E200A" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub StillwellFord()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "M200A" Or ActiveCell.Offset(0, 1).Value = "M200F" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub CornesToyota()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "210" Or ActiveCell.Offset(0, 1).Value = "210A" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub AdrianBrienAutomotive()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "A208C" Or ActiveCell.Offset(0, 1).Value = "R208C" Or ActiveCell.Offset(0, 1).Value = "A200D" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

'Sub WhitehorseTrucks()
''subtracts 10% from their amounts based on account numbers
'
'Range("C1").Select
'Do Until ActiveCell.Value = ""
'    ActiveCell.Offset(1, 0).Select
'    If ActiveCell.Offset(0, 1).Value = "200A" Or ActiveCell.Offset(0, 1).Value = "200E" Then
'        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
'    End If
'Loop
'
''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft
'
'End Sub

Sub RegencyParkTrucks()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "R200A" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub AdtransTrucksCentre()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "L200A" Or ActiveCell.Offset(0, 1).Value = "L200D" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub StillwellTrucks()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "200A" Or ActiveCell.Offset(0, 1).Value = "200C" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub MelbourneIntTruckCentre()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "H200A" Or ActiveCell.Offset(0, 1).Value = "H200E" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub BryanByrtAutomotiveNew()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "200A" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub BryanByrtAutomotiveUsed()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "201A" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value * 0.091743), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub

Sub Westpoint_Autos_Group()
'subtracts 10% from their amounts based on account numbers

Range("C1").Select
Do Until ActiveCell.Value = ""
    ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(0, 1).Value = "310" Or ActiveCell.Offset(0, 1).Value = "998" Then
        ActiveCell.Value = Round(ActiveCell.Value - (ActiveCell.Value / 11), 2)
    End If
Loop

''deletes the column that include the account numbers
'Columns("D:D").Select
'Selection.Delete Shift:=xlToLeft

End Sub
Attribute VB_Name = "JohnHughesConcatenation"
Sub ConcatenationJohnHughes()

Application.DisplayAlerts = False
Application.ScreenUpdating = False

'ensures all Excel data files exist, or not renamed
If Dir(FolderPathVar & "ADHOC_689085779.CSV") = "" Then
    Call ErrorAlertFileNames
End If

If Dir(FolderPathVar & "ADHOC_689099003.CSV") = "" Then
    Call ErrorAlertFileNames
End If

If Dir(FolderPathVar & "ADHOC_689107499.CSV") = "" Then
    Call ErrorAlertFileNames
End If

If Dir(FolderPathVar & "ADHOC_689111332.CSV") = "" Then
    Call ErrorAlertFileNames
End If

If Dir(FolderPathVar & "ADHOC_689111519.CSV") = "" Then
    Call ErrorAlertFileNames
End If

If Dir(FolderPathVar & "ADHOC_689112888.CSV") = "" Then
    Call ErrorAlertFileNames
End If

If Dir(FolderPathVar & "ADHOC_689113207.CSV") = "" Then
    Call ErrorAlertFileNames
End If

'-----------------------------------------------------

Workbooks.Open Filename:=FolderPathVar & "ADHOC_689085779.CSV"
Workbooks.Open Filename:=FolderPathVar & "ADHOC_689099003.CSV"
Workbooks.Open Filename:=FolderPathVar & "ADHOC_689107499.CSV"
Workbooks.Open Filename:=FolderPathVar & "ADHOC_689111332.CSV"
Workbooks.Open Filename:=FolderPathVar & "ADHOC_689111519.CSV"
Workbooks.Open Filename:=FolderPathVar & "ADHOC_689112888.CSV"
Workbooks.Open Filename:=FolderPathVar & "ADHOC_689113207.CSV"

'copies all data from rows to create one concatenated file
Range("M1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "M" & Rowcounter).Select 'does not include the field names
Selection.Copy
Windows("ADHOC_689112888.CSV").Activate
Range("M1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -12).Select
ActiveSheet.Paste
Range("M1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "M" & Rowcounter).Select 'does not include the field names
Selection.Copy
Windows("ADHOC_689111519.CSV").Activate
Range("M1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -12).Select
ActiveSheet.Paste
Range("M1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "M" & Rowcounter).Select 'does not include the field names
Selection.Copy
Windows("ADHOC_689111332.CSV").Activate
Range("M1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -12).Select
ActiveSheet.Paste
Range("M1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "M" & Rowcounter).Select 'does not include the field names
Selection.Copy
Windows("ADHOC_689107499.CSV").Activate
Range("M1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -12).Select
ActiveSheet.Paste
Range("M1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "M" & Rowcounter).Select 'does not include the field names
Selection.Copy
Windows("ADHOC_689099003.CSV").Activate
Range("M1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -12).Select
ActiveSheet.Paste
Range("M1").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row
Range("A2:" & "M" & Rowcounter).Select 'does not include the field names
Selection.Copy
Windows("ADHOC_689085779.CSV").Activate 'this becomes the master file, and gets renamed 'JohnHughesConcatented.csv'
Range("M1").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -12).Select
ActiveSheet.Paste
Range("A1").Select
    
'sorts data in dealer code order lowest to highest
Range("A1").Select
Application.CutCopyMode = False
Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
'saves the concatenated file as 'JohnHughesConcatented.csv' and closes it
ActiveWorkbook.SaveAs Filename:=FolderPathVar & "JohnHughesConcatented.csv", _
    FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
    ReadOnlyRecommended:=False, CreateBackup:=False
ActiveWorkbook.Close
    
'closes all other files
Windows("ADHOC_689099003.CSV").Activate
ActiveWorkbook.Close
Windows("ADHOC_689107499.CSV").Activate
ActiveWorkbook.Close
Windows("ADHOC_689111332.CSV").Activate
ActiveWorkbook.Close
Windows("ADHOC_689111519.CSV").Activate
ActiveWorkbook.Close
Windows("ADHOC_689112888.CSV").Activate
ActiveWorkbook.Close
Windows("ADHOC_689113207.CSV").Activate
ActiveWorkbook.Close
    
''deletes all the original Excel files
'
'    Kill FolderPathVar & "Demo.xls"
'    Kill FolderPathVar & "New.xls"

End Sub

Attribute VB_Name = "MainProcedures"
Option Private Module
Option Explicit 'ensures all variables are declared

'**************************************************
'**************************************************
''' Floorplan Reconciler 7.0
''' Copyright 2000-2012 AIMS P/L
''' All rights reserved
''' Written by Sean Gallagher
''' Date: 2-September-2010
'**************************************************
'**************************************************

Public Rowcounter, RowCounter2, CountStockVar, CountChassisVar, CountStockVar2, CountChassisVar2 As Integer
Public CountFinancierVar, CountFinancierOSVar, CountDealerOSVar, Count, RowCounterDealer, RowCounterFinancier As Integer
Public BailmentFinancier, OriginalEngineFinancier, ConcatenatedUsernamePassword As Variant
Public StockDealer, OriginalEngineDealer, BailVar, DealerVar As Variant
Public BailmentEntriesVar, DealerEntriesVar As Integer
Public TestValue As String
Public IncNumber As Integer
Public XlsFileName As String
Public Response As Variant
'variables for range names delete
Public shtHolder As Worksheet
Public nmeHolder As Name
'variable for importing the external data sheets from the Financier & Inhouse files
Public ActiveFile As Variant
'variables for Financier and Inhouse file names
Public FnameFinancier, FnameInhouse As Variant
'used for removing gunk in Chassis column
Public NewChassisVal As String
Public SelectedCell As Variant
Public GSTSelection As Variant
Public ReportType As Variant
Public ListSelection As Variant
Public VersionSelection As Variant
Public DealershipName As Variant
Public InhouseSystem As Variant
Public RecordCount As Integer
Public NewEsanda As Variant 'used where Esanda records needs stripping or not
'used for the file count in Bib Stilwell routines
Public I As Integer

'done for Qld St George dealers
Public QldStGeorge As Variant

'sets extract filename
Public Const XlsFileNameConst = "Reconciliation Report-"
'sets the file name
Public Const FileNameVar = "Floorplan_Reconciler.xls"

'this folder is where City Ford (and others) place all their text files
Public Const FolderPathVar = "C:\Aimspl\"
'Public Const FolderPathVar = "C:\Aims\" ' done for testing

Public Const ProductID = "Unregistered"

Sub PrelimRecon()
'Copyright 2003 AIMS P/L
'All rights reserved

'creates the DownloadDealer sheet with basic formulae
Call CreateSheetsDealer

'creates the DownloadFinancier sheet with basic formulae
Call CreateSheetsFinancier

'creates the CreateSheetReconciliationWorkings sheet with basic formulae
Call CreateSheetReconciliationWorkings

'---------------------------------

'ensures data file isn't protected
On Error GoTo FileProtectedError

    Call ImportDealer

On Error GoTo 0
    
    'removes all hidden characters from Stock and Chassis columns
    Call ForeignCharRemoveDealer
        
    Application.StatusBar = "Please wait - 10% complete !"
    
    'does all of the remaining stripping for the dealer file
    Call DealerStrip
    
    'creates all of the formulas for the dealer file
    Call MainFormulaSetupRoutineDealer
    
    Call DuplicationCheckDealer
             
    Application.StatusBar = "Please wait - 20% complete !"
    
    '--------------------------------------------------
    'checks to see if running the demo
    If VersionSelection = "DemoCopy" Then
        ListSelection = "Financier Name"
    End If
    
    'works with the selected financier
    Select Case ListSelection    'Evaluate financier selection from lstFinancier on main screen
        
        Case "Financier Name"    'do if a demo copy
            On Error GoTo FileProtectedError
            Call ImportBailDemonstration
            On Error GoTo 0
            GoTo CarryOnWithCode
        
        Case "Ford Credit"    'do if 'Ford Credit' is selected
            On Error GoTo FileProtectedError
            Call ImportBailFCA
            On Error GoTo 0
            GoTo CarryOnWithCode

        Case "Primus Finance"    'do if 'Primus' is selected
            On Error GoTo FileProtectedError
            Call ImportBailFCA
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "Macquarie Finance"    'do if 'Macquarie Finance' is selected
            On Error GoTo FileProtectedError
            Call ImportBailFCA
            On Error GoTo 0
            GoTo CarryOnWithCode
    
        Case "Toyota Finance"    'do if 'Toyota' is selected
            If frmMainScreen.optMonthlyStatements.Value = True Then
                'ensures data file isn't protected
                On Error GoTo FileProtectedError
                Call ImportBailTFA_MonthlyDealerStatements
                On Error GoTo 0
                GoTo CarryOnWithCode
            Else
                On Error GoTo FileProtectedError
                If DealershipName = "Fremantle Toyota" Or DealershipName = "Northpoint Toyota" Then
                    Call ImportBailTFA_Dealer_Stock_List_GST
                Else
                    Call ImportBailTFA
                End If
                On Error GoTo 0
                GoTo CarryOnWithCode
            End If
            
         Case "St George Finance"    'do if 'ST George' is selected
            On Error GoTo FileProtectedError
            Call ImportBailStGeorge
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "GMAC Finance"    'do if 'GMAC' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            Call ImportBailGMAC
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "Nissan Finance"    'do if 'Nissan Finance' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            Call ImportBailNissan
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "GE Auto. Financial Serv."    'do if 'GE' is selected
            On Error GoTo FileProtectedError
            Call ImportBailGE
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "Esanda Finance"    'do if 'Esanda' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            Call ImportBailEsanda
            On Error GoTo 0
            GoTo CarryOnWithCode
       
        Case "BMW Finance"    'do if 'BMW' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            Call ImportBailBMW
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "Capital Finance"    'do if 'Capital' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            Call ImportBailCapital
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "UDC Finance"    'do if 'UDC' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            Call ImportBailUDC
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "VW Financial Services"    'do if 'Volkswagen' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            Call ImportBailVolkswagen
            On Error GoTo 0
            GoTo CarryOnWithCode
            
        Case "Mercedes Benz"    'do if 'Mercedes Benz Financial Services' is selected
            'ensures data file isn't protected
            On Error GoTo FileProtectedError
            If DealershipName = "Grand Motors Group" Then
                Call ImportBailMercedesOLD
                GoTo GMG
            End If
            Call ImportBailMercedes
GMG:
            On Error GoTo 0
            GoTo CarryOnWithCode
            
    'Case Else    ' Other values.
        'this is not needed as a financier has to be chosen to get to this far
    End Select
    '--------------------------------------------------

'code that is same for all financiers
CarryOnWithCode:

    Application.DisplayAlerts = False
    Application.StatusBar = "Please wait - 30% complete !"
    
    If ListSelection = "St George Finance" Then
        GoTo SkipForStGeorge
    End If
    
    'removes all hidden characters from Stock and Chassis columns
    Call ForeignCharRemoveFinancier
    
SkipForStGeorge:
    
    'does all of the stripping for the financier file
    Call FinancierStrip
    
    'creates all of the formulas for the financier file
    Call MainFormulaSetupRoutineFinancier
    
    Call DuplicationCheckFinancier
  
    Application.StatusBar = "Please wait - 45% complete !"
    
    'creates range name for the Dealer Data
    Application.GoTo Reference:="DealerDownload1"
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    
    'error checks to ensure that if only one record - then it won't count to row 65536
    If Rowcounter = 65536 Then
       Rowcounter = 2
    End If
    
    ActiveWorkbook.Names.Add Name:="DealerData", RefersToR1C1:= _
        "=DownloadDealer!R2C1:R" & Rowcounter & "C3"
          
    'copies and pastes the downloaded Dealer data
    'into the "DealerImport" sheet
    Application.GoTo Reference:="DealerData"
    Selection.Copy
    Application.GoTo Reference:="DealerNoDups"
    ActiveSheet.Paste
    
    Application.StatusBar = "Please wait - 50% complete !"
          
    'creates all of the formulas for the financier file
    Call MainFormulaSetupRoutineFinancier
      
    'creates range name for the Financier Data
    Application.GoTo Reference:="FinancierDownload1"
    ActiveCell.Offset(0, 1).Range("A1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    ActiveWorkbook.Names.Add Name:="FinancierData", RefersToR1C1:= _
        "=DownloadFinancier!R2C1:R" & Rowcounter & "C11"
   
    'copies and pastes the downloaded Financier data
    'into the "FinancierImport" sheet
    Application.GoTo Reference:="FinancierData"
    Selection.Copy
    Application.GoTo Reference:="FinancierNoDups"
    ActiveSheet.Paste
    
    'Financier reconciliation process - part 1
   
    'goes to the area that has the formulas in the FinancierImport sheet
    Application.GoTo Reference:="StartCell"
    'selects all the surrounding active cells
    Selection.CurrentRegion.Select
    Selection.Copy
    Range("T14").Select
    'pastes the Financier values only
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
        
    Application.StatusBar = "Please wait - 60% complete !"
        
    'sorts the data based on the Financier column
    Selection.Sort Key1:=Range("Y14"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
            
    'determines the number of rows to copy
    Range("Y14").Select
    Selection.End(xlDown).Select
    CountFinancierVar = ActiveCell.Row
    
    'selects the rows to copy
    Range("T15:Y" & CountFinancierVar).Select
    Selection.Copy
    
    'pastes the Financier data in the Reconciliationworkings sheet
    Sheets("ReconciliationWorkings").Select
    Range("A14").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
  
    'Dealer reconciliation process - part 1
    
    'goes to the area that has the formulas in the DealerImport sheet
    Application.GoTo Reference:="StartCell2"
    Selection.CurrentRegion.Select
    Selection.Copy
    Range("L14").Select
    'pastes the Dealer values only
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    
    'sorts the data based on the Dealer column
    Selection.Sort Key1:=Range("N14"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
     Application.StatusBar = "Please wait - 75% complete !"
    
    'determines the number of rows to copy
    Range("N14").Select
    Selection.End(xlDown).Select
    CountFinancierVar = ActiveCell.Row
    
    'selects the range to copy
    Range("L15:N" & CountFinancierVar).Select
    Selection.Copy
    
    'pastes the Dealer data in the Reconciliationworkings sheet
    Sheets("ReconciliationWorkings").Select
    Range("Q14").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
   
    'Financier reconciliation process - part 2
       
    'counts the values in column O - in the ReconciliationWorkings sheet
    CountFinancierOSVar = Range("CountFinancierOS").Value
    
    If CountFinancierOSVar > 0 Then
        'inserts the required number of rows for pasted data
        Application.GoTo Reference:="DateFinancier"
        ActiveCell.Offset(2, 0).Range("A1:A" & CountFinancierOSVar).Select
        Selection.EntireRow.Insert
   
        Application.StatusBar = "Please wait - 85% complete !"
        
        'returns to the ReconciliationWorkings sheet
        Sheets("ReconciliationWorkings").Select
        Range("A14").Select
                
        'sorts the data based on the Variances $ column in the Financier section
        Selection.Sort Key1:=Range("O14"), Order1:=xlAscending, Header:=xlYes, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
                
        'copies and pastes the Date, Bailment and Stock columns of the Financier data
        'into the FinancierResults sheet
        Range("A14:C" & CountFinancierOSVar + 13).Select
        Selection.Copy
        Application.GoTo Reference:="DateFinancier"
        ActiveCell.Offset(2, 0).Range("A1").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
        
        'does a unique date column format if, GE Capital, Ford Credit, Primus or Macquarie Finance is selected
        If ListSelection = "GE Auto. Financial Serv." Or ListSelection = "Financier Name" Or ListSelection = "Ford Credit" Or ListSelection = "Primus Finance" Or ListSelection = "Macquarie Finance" Then
                Application.GoTo Reference:="DateFinancier"
                ActiveCell.Offset(2, 0).Range("A1:A" & CountFinancierOSVar).Select
                Selection.NumberFormat = "@"
                If ListSelection = "GE Auto. Financial Serv." Then
                    Call MonthDateSeparatorGE
                ElseIf ListSelection = "Financier Name" Then
                    Call MonthDateSeparatorFCA
                ElseIf ListSelection = "Ford Credit" Then
                    Call MonthDateSeparatorFCA
                ElseIf ListSelection = "Primus Finance" Then
                    Call MonthDateSeparatorFCA
                ElseIf ListSelection = "Macquarie Finance" Then
                    Call MonthDateSeparatorFCA
                End If
        End If
        
        'copies and pastes the Vin # and Financier $ column of the Financier data
        'into the FinancierResults sheet
        Sheets("ReconciliationWorkings").Select
        Range("E14:F" & CountFinancierOSVar + 13).Select
        Selection.Copy
        Application.GoTo Reference:="VinFinancier"
        ActiveCell.Offset(2, 0).Range("A1").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
       
        'copies and pastes the Dealer $ column of the Financier data
        'into the FinancierResults sheet
        Sheets("ReconciliationWorkings").Select
        Range("J14: J" & CountFinancierOSVar + 13).Select
        Selection.Copy
        Application.GoTo Reference:="DealerFinancier"
        ActiveCell.Offset(2, 0).Range("A1").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
      
        'copies and pastes the Variances $ column of the Financier data
        'into the FinancierResults sheet
        Sheets("ReconciliationWorkings").Select
        Range("O14: O" & CountFinancierOSVar + 13).Select
        Selection.Copy
        Application.GoTo Reference:="VariancesFinancier"
        ActiveCell.Offset(2, 0).Range("A1").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
        
        'checks to see if there has been any data copied in the Financier Printout sheet
        'this is to avoid sorting with no records
        If Sheets("FinancierResults").Range("G7").Value = "" Then GoTo errorAlertFINANCIER
        
        'sorts the Financier Printout in Stock # order
        Range("C7").Select
        Selection.EntireRow.Insert
        ActiveCell.Offset(1, 0).Range("A1").Select
        Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlNo, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        ActiveCell.Offset(-1, 0).Range("A1").Select
        Selection.EntireRow.Delete
              
        Range("A1").Select
        Selection.Columns.AutoFit
     
    End If

''SwitchEngineFinancier procedure not needed for St George as Chassis don't get stripped
'If ListSelection = "St George Finance" Then
'    GoTo StGeorge_No_StripFinancier
'End If

Call SwitchEngineFinancier

    '************************
    'removes all the gunk from all columns
    Application.GoTo Reference:="DateFinancier"
    ActiveCell.Offset(2, 0).Range("A1").Select
    Selection.CurrentRegion.Select
    For Each SelectedCell In Selection
        NewChassisVal = Trim(SelectedCell.Value)
        SelectedCell.Value = NewChassisVal
    Next
    '************************

StGeorge_No_StripFinancier:
    
    Application.GoTo Reference:="BailmentFinancierRange"
    Selection.EntireColumn.Delete

errorAlertFINANCIER:

    'Dealer reconciliation process - part 2
   
    'counts the values in column Y - in the ReconciliationWorkings sheet
    CountDealerOSVar = Range("CountDealerOS").Value
    
    If CountDealerOSVar > 0 Then
        'inserts the required number of rows for pasted data
        Application.GoTo Reference:="StockDealer"
        ActiveCell.Offset(2, 0).Range("A1:A" & CountDealerOSVar).Select
        Selection.EntireRow.Insert
     
        'returns to the ReconciliationWorkings sheet
        Sheets("ReconciliationWorkings").Select
        Range("Q14").Select
        
        Application.StatusBar = "Please wait - 95% complete !"
        
        'sorts the data based on the Variances $ column in the Dealer section
        Selection.Sort Key1:=Range("Y14"), Order1:=xlAscending, Header:=xlYes, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        
        'copies and pastes the Stock #, Vin # and Dealer $ columns of the Dealer data
        'into the InhouseResults sheet
        Range("Q14:S" & CountDealerOSVar + 13).Select
        Selection.Copy
        Application.GoTo Reference:="StockDealer"
        ActiveCell.Offset(2, 0).Range("A1").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
        
        'copies and pastes the Financier $ column of the Financier data
        'into the InhouseResults sheet
        Sheets("ReconciliationWorkings").Select
        Range("W14:W" & CountDealerOSVar + 13).Select
        Selection.Copy
        Application.GoTo Reference:="FinancierDealer"
        ActiveCell.Offset(2, 0).Range("A1").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
        
        'copies and pastes the Variances $ column of the Dealer data
        'into the InhouseResults sheet
        Sheets("ReconciliationWorkings").Select
        Range("Y14:Y" & CountDealerOSVar + 13).Select
        Selection.Copy
        Application.GoTo Reference:="VariancesDealer"
        ActiveCell.Offset(2, 0).Range("A1").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
              
        If Sheets("InhouseResults").Range("E7").Value = "" Then GoTo errorAlertDEALER
        
        'sorts the Dealer Printout in Stock # order
        Range("A7").Select
        Selection.EntireRow.Insert
        ActiveCell.Offset(1, 0).Range("A1").Select
        Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlNo, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
        ActiveCell.Offset(-1, 0).Range("A1").Select
        Selection.EntireRow.Delete
        
    End If
    
''SwitchEngineDealer procedure not needed for St George as Chassis don't get stripped
'If ListSelection = "St George Finance" Then
'    GoTo StGeorge_No_StripDealer
'End If
    
Call SwitchEngineDealer

StGeorge_No_StripDealer:
    
errorAlertDEALER:
        
'replaces Toyota 'Vin/Chassis #' with 'Engine #'
If ListSelection = "Toyota Finance" Then
      'changes the column headings for the engine number - if using the RevolutionWithToyota system
       If DealershipName = "Fremantle Toyota" Or DealershipName = "Northpoint Toyota" Then
           Sheets("InhouseResults").Range("B5").Value = "UNITRID"
           Sheets("FinancierResults").Range("C5").Value = "UNITRID"
           Sheets("ConsolidatedResults").Range("EngineVIN1").Value = "UNITRID" 'added for new report
           Sheets("ConsolidatedResults").Range("EngineVIN2").Value = "UNITRID" 'added for new report
           Sheets("ConsolidatedResults").Range("EngineVIN3").Value = "UNITRID" 'added for new report
        Else
           Sheets("InhouseResults").Range("B5").Value = "ENGINE #"
           Sheets("FinancierResults").Range("C5").Value = "ENGINE #"
           Sheets("ConsolidatedResults").Range("EngineVIN1").Value = "ENGINE #" 'added for new report
           Sheets("ConsolidatedResults").Range("EngineVIN2").Value = "ENGINE #" 'added for new report
           Sheets("ConsolidatedResults").Range("EngineVIN3").Value = "ENGINE #" 'added for new report
        End If
    'formats the dates
    Sheets("FinancierResults").Select
    Range("A5:A65536").Select
    Selection.NumberFormat = "mm/dd/yyyy"
End If

If ListSelection = "BMW Finance" Then
    'formats the dates
    Sheets("FinancierResults").Select
    Range("A5:A65536").Select
    Selection.NumberFormat = "d-mmm-yy"
End If

If ListSelection = "Capital Finance" Then
    'formats the dates
    Sheets("FinancierResults").Select
    Range("A5:A65536").Select
    Selection.NumberFormat = "dd/mm/yyyy"
End If

If ListSelection = "St George Finance" Then 'Or ListSelection = "Capital Finance" Then
    'formats the dates
    Sheets("FinancierResults").Select
    Range("A5:A65536").Select
    Selection.NumberFormat = "dd/mm/yyyy"
End If

If ListSelection = "GMAC Finance" Or ListSelection = "UDC Finance" Then 'Or ListSelection = "Capital Finance" Then
    'formats the dates
    Sheets("FinancierResults").Select
    Range("A5:A65536").Select
    Selection.NumberFormat = "mm/dd/yyyy"
End If

If ListSelection = "Mercedes Benz" Or ListSelection = "Nissan Finance" Then
    'formats the dates
    Sheets("FinancierResults").Select
    Range("A5:A65536").Select
    Selection.NumberFormat = "dd/mm/yyyy"
End If

If ListSelection = "Esanda Finance" Then
    'formats the dates
    Sheets("FinancierResults").Select
    Range("A5:A65536").Select
    Selection.NumberFormat = "mm/dd/yy"
End If

If DealershipName = "Fremantle Toyota" Or DealershipName = "Northpoint Toyota" Then GoTo Freo

    If ListSelection = "Toyota Finance" Then
        'formats the dates
        Sheets("FinancierResults").Select
        Range("A5:A65536").Select
        Selection.NumberFormat = "dd/mm/yyyy"
    End If

Freo:

Call ConsolidatedReport

Application.StatusBar = "100% complete !"

Exit Sub

FileProtectedError:
Call ErrorAlertFileProtected

End Sub


Attribute VB_Name = "MercedesConversion"
Option Private Module
Sub ImportBailMercedes()
'Copyright 2008 AIMS P/L
'All rights reserved

    Dim GetData As Variant

    'creates a new worksheet and calls it 'Bail'
    With ThisWorkbook
      .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
    End With
    
    'opens the external file
    Workbooks.Open Filename:=FnameFinancier
    
    'gets the name of the external file
    ActiveFile = ActiveWorkbook.Name
    
    'goes to the amount column and counts the rows
    Range("J1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row
    
    'copies and pastes the data into the program
    Range("A1:N" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("BAIL").Select
    Range("A1").Select
    ActiveSheet.Paste
    
    'closes the external file
    Windows(ActiveFile).Activate
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
     
    'file compatibility checks for Mercedes Benz Financial Services
    If Trim(Range("B1").Value) <> "Stock No." Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("D1").Value) <> "Start Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("I1").Value) <> "Chassis NO." Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("J1").Value) <> "Cost" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    Range("A:A,C:C,E:H,K:N").Select
    Selection.Delete Shift:=xlToLeft
    Columns("B:B").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("C:C").Select
    Selection.Cut
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
    
    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

'    'removes any spaces that sometimes are inserted at the right hand side of the entry
'    Columns("E:E").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("D:D").Select
'    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
'        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'        :=Array(1, 1)
'    Columns("E:E").Select
'    Selection.Delete Shift:=xlToLeft


    'removes the spaces from the VIN column
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Range("E1").Select
    Do Until ActiveCell.Offset(0, 7).Range("A1").Value = ""
        ActiveCell.FormulaR1C1 = "=LEFT(RC[-1],17)"
        ActiveCell.Offset(1, 0).Select
    Loop

    Columns("E:E").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
     :=False, Transpose:=False
    Columns("D:D").Select
    Selection.Delete Shift:=xlToLeft

    'formats the entire date column to general
    Columns("C:C").Select
    Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'takes the initial Chassis # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'takes off the GST amount from the values if the GST is inclusive
    If frmMainScreen.optGST1.Value = True Then
        Range("K2").Select
        Range(Selection, Selection.End(xlDown)).Select
        For Each cell In Selection
        If Not cell.HasFormula Then
            cell.Value = cell.Value - Round((cell.Value / 11), 2)
        End If
        Next cell
    End If
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Sub ImportBailMercedesOLD()
'Copyright 2008 AIMS P/L
'All rights reserved

    Workbooks.Open Filename:=FnameFinancier
    
    ActiveFile = ActiveWorkbook.Name
   
   'renames the first worksheet
    Worksheets.Item(1).Name = "BAIL"
    
    'copies the data sheet from the BAIL.csv file, then closes BAIL.csv
    Sheets("Bail").Copy Before:=Workbooks(FileNameVar).Sheets(1)
    Windows(ActiveFile).Activate
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
     
    'file compatibility checks for Mercedes Benz Financial Services
    If Trim(Range("F7").Value) <> "Dist Stock No" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("G7").Value) <> "Start Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("E7").Value) <> "Chassis No" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("K7").Value) <> "Payout" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    Rows("1:6").Select
    Selection.Delete Shift:=xlUp
    Range("A:D,H:J,L:N").Select
    Selection.Delete Shift:=xlToLeft
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
    'formats the entire date column to general
    Columns("C:C").Select
    Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'takes the initial Chassis # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'takes off the GST amount from the values if the GST is inclusive
    If frmMainScreen.optGST1.Value = True Then
        Range("K2").Select
        Range(Selection, Selection.End(xlDown)).Select
        For Each cell In Selection
        If Not cell.HasFormula Then
            cell.Value = cell.Value - Round((cell.Value / 11), 2)
        End If
        Next cell
    End If
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Attribute VB_Name = "NissanConcatenation"
Option Private Module
Sub OpenAllNissanFiles()

    Application.DisplayAlerts = False
    Application.ScreenUpdating = False

    'ensures all data files exist, or not renamed
    If Dir(FolderPathVar & "Nissan1.xls") = "" Then
        Call ErrorAlertFileNames
    End If
        
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "Nissan2.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
    'opens the 2 data files
    Workbooks.Open Filename:=FolderPathVar & "Nissan1.xls"
        Call TideUpNissanFiles
    Workbooks.Open Filename:=FolderPathVar & "Nissan2.xls"
        Call TideUpNissanFiles
    
    'copies all data from the files to create one concatenated file
    Range("J1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "P" & Rowcounter).Select
    Selection.Copy
    
    Windows("Nissan1.xls").Activate
    Range("P1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -15).Select
    ActiveSheet.Paste
    
    'close the other data file
    Windows("Nissan2.xls").Activate
    ActiveWorkbook.Close

    Rows("1:1").Select
    Selection.Insert Shift:=xlDown
    
    'types the column headings
    Range("D1").Value = "Unit No"
    Range("H1").Value = "Start Date"
    Range("J1").Value = "Loan Amount"
    
    Range("A1").Select
    
    'saves the concatenated new file and closes it
    ActiveWorkbook.SaveAs Filename:=FolderPathVar & "MasterNissan", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWorkbook.Close
    
    'deletes all the original Nissan files
    Kill FolderPathVar & "Nissan?.xls"

End Sub

Sub TideUpNissanFiles()

Dim GetData As Variant
   
    'file compatibility check (Nissan)
    If Trim(Range("D1").Value) <> "Unit No" Then
        Call ErrorAlertCompatibilityFinancier
    End If

    If Trim(Range("H1").Value) <> "Start Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    If Trim(Range("J1").Value) <> "Loan Amount" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'clears all the formats because of the centre across column in place
    Cells.Select
    Selection.ClearFormats
       
    On Error GoTo NoBlankRowsUnitNo
        'deletes the rows where there is no Unit number
        Columns("D:D").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRowsUnitNo:
   
    'removes the unneeded top row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
End Sub
Attribute VB_Name = "NissanConversion"
Option Private Module
Sub ImportBailNissan()
'Copyright 2011 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

'opens the external file
Workbooks.Open Filename:=FnameFinancier

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'goes to the amount column and counts the rows
Range("J1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:O" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
   
    'file compatibility check (Nissan)
    If Trim(Range("D1").Value) <> "Unit No" Then
        Call ErrorAlertCompatibilityFinancier
    End If

    If Trim(Range("H1").Value) <> "Start Date" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    If Trim(Range("J1").Value) <> "Loan Amount" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    If DealershipName = "Clydevale Pty Ltd" Then GoTo Clydevale
    
    'clears all the formats because of the centre across column in place
    Cells.Select
    Selection.ClearFormats
       
    On Error GoTo NoBlankRowsUnitNo
        'deletes the rows where there is no Unit number
        Columns("D:D").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRowsUnitNo:

Clydevale:

    'do Liverpool calculation here - column L minus column K
    Range("L1").Select
    Do Until ActiveCell.Offset(0, 1).Value = ""
        If ActiveCell.Offset(0, -10).Value = "USED" Then
            ActiveCell.Value = ActiveCell.Value - ActiveCell.Offset(0, -1).Value
            ActiveCell.Offset(1, 0).Select
        Else
            ActiveCell.Offset(1, 0).Select
        End If
    Loop
       
    'moves the columns to suit
    Range("A:A,D:D,F:G,I:K,M:O").Select
    Selection.Delete Shift:=xlToLeft
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.Cut
    Columns("C:C").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
        
    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'do Liverpool calculation here - if column B does not equal "USED" then subtract GST
    Range("K2").Select
    Do Until ActiveCell.Value = ""
        If ActiveCell.Offset(0, -9).Value <> "USED" Then
            ActiveCell.Value = ActiveCell.Value - Round((ActiveCell.Value / 11), 2)
            ActiveCell.Offset(1, 0).Select
        Else
            ActiveCell.Offset(1, 0).Select
        End If
    Loop
    
'        Range("K2").Select
'        Range(Selection, Selection.End(xlDown)).Select
'        For Each cell In Selection
'        If Not cell.HasFormula Then
'            cell.Value = cell.Value - Round((cell.Value / 11), 2)
'        End If
'        Next cell

    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
'    'removes gunk from the stock entries
'    Columns("F:F").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("E:E").Select
'    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
'        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
'        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
'        Array(1, 1), Array(2, 1))
'    Columns("F:F").Select
'    Selection.Delete Shift:=xlToLeft
     
    'counts the number of Amount entries - only used if downloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Attribute VB_Name = "Registers"
Option Private Module
  'ALL BELOW IS FOR FUTURE REFERENCE
        
        'another way to type a date
        'If curDate > #6/6/03# Then
        
        'set the register to the expiry date
        '- note if text ensure to enclose the value after RegisterDate inside quotes
'        Dim wsh As Object
'        Set wsh = CreateObject("WScript.Shell")
'        wsh.RegWrite "HKCU\RegisterDate", DateSerial(2003, 6, 9 + 10) 'the 10 represents the number of days after their starting date
'        MsgBox wsh.RegRead("HKCU\RegisterDate")
        '------------------------------
        '- note below is how to remove a registry value
        'remove the register
        'wsh.RegDelete "HKCU\RegisterDate"
        
'        curDate = Date
'        If curDate > wsh.RegRead("HKCU\RegisterDate") Then
'            MsgBox "Your registration has expired." & Chr(13) _
'            & "Please contact an AIMS P/L representative to renew your license." & Chr(13) & Chr(13) _
'            & "This program will now end.", vbOKOnly + vbExclamation, "AIMS P/L"
'            Exit Sub
'        End If
        
        '------------------------------ THE END
Sub RegWrite()
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
'    wsh.RegWrite "HKCU\Software\Bogus\", "This is a default value"
'    wsh.RegWrite "HKCU\Software\Bogus\MyString", "A string value"
'    wsh.RegWrite "HKCU\Software\Bogus\MyNumString", 12345
'    wsh.RegWrite "HKCU\Software\Bogus\MyDwordValue", 12346, "REG_DWORD"
    
    'wsh.RegWrite "HKCU\MyNumString", 12345
    wsh.RegWrite "HKCU\MyNumString", "TESTING"
End Sub

Sub RegRead()
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
'    Debug.Print wsh.RegRead("HKCU\Software\Bogus\")
'    Debug.Print wsh.RegRead("HKCU\Software\Bogus\MyString")
'    Debug.Print wsh.RegRead("HKCU\Software\Bogus\MyNumString")
'    Debug.Print wsh.RegRead("HKCU\Software\Bogus\MyDwordValue")
    
    MsgBox wsh.RegRead("HKCU\MyNumString")
End Sub

Sub RegDelete()
    Dim wsh As Object
    Set wsh = CreateObject("WScript.Shell")
    'This deletes entire branch
'    wsh.RegDelete "HKCU\Software\Bogus\"
'    wsh.RegDelete "HKCU\Software\Bogus\MyString"
'    wsh.RegDelete "HKCU\Software\Bogus\MyNumString"
'    wsh.RegDelete "HKCU\Software\Bogus\MyDwordValue"
'    wsh.RegDelete "HKCU\Software\Bogus\MyBinaryValue"
'    wsh.RegDelete "HKCU\Software\Bogus\"

    wsh.RegDelete "HKCU\MyNumString"
End Sub

Attribute VB_Name = "SMGConcatenations"
Option Private Module
Sub OpenAllBMWFiles()

Dim objFSO As Object
Dim objFolder As Object
Dim objSubfolder As Object
Dim objFile As Object
Dim iRow As Long
Dim istr As String

    'ensures all data files exist, or not renamed
    If Dir("C:\aimspl\*.xls") = "" Then
        Call ErrorAlertMissingFiles
    End If

    Workbooks.Add 'creates a new workbook for the concatenated data
    ActiveWorkbook.SaveAs Filename:="C:\aimspl\BMW\" & "BMWConcatenated.xls", _
    FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
    ReadOnlyRecommended:=False, CreateBackup:=False
    
    Set objFSO = CreateObject("Scripting.FileSystemObject")
    Set objFolder = objFSO.GetFolder("C:\aimspl\")
    For Each objFile In objFolder.Files
        If objFile.Type Like "Microsoft*Excel*Worksheet*" Then
        istr = objFolder.Path & "\" & objFile.Name
        Workbooks.Open Filename:=istr
            Call ConcatenateFiles
        End If
    Next objFile
    
    'deletes all the original BMW files
    Kill "C:\aimspl\*.xls"
    
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown
    
    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

Range("A1").Select

'will close file and saves any changes
ActiveWorkbook.Save
ActiveWorkbook.Close True

End Sub

Sub ConcatenateFiles()

    'deletes the first 3 rows
    Rows("1:3").Select
    Selection.Delete Shift:=xlUp
    Range("A1").Select
    
    'removes the "Make" column if it exists
    If Trim(Range("G1").Value) = "Make" Then
        Columns("G:G").Select
        Selection.Delete Shift:=xlToLeft
    End If

    'file compatibility checks for BMW
    If Trim(Range("B1").Value) <> "Floorplan" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("C1").Value) <> "UnitNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("D1").Value) <> "ChassisNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("E1").Value) <> "EngineNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("F1").Value) <> "RegoNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("I1").Value) <> "Year" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("J1").Value) <> "Start Date" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("N1").Value) <> "GST" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If

    '----------------------------------------
   
    'removes the unneeded top row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
   
    'removes the unneeded columns
    Range("A:B,E:I,K:L,O:O").Select
    Selection.Delete Shift:=xlToLeft
    
    On Error GoTo NoUnitNo
        'deletes the blank rows where there is no 'UnitNo'
        Columns("A:A").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoUnitNo:

    'using paste special, subtracts the 'GST from the 'Balance inc GST'
    Columns("E:E").Select
    Selection.Copy
    Columns("D:D").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlSubtract, _
    SkipBlanks:=False, Transpose:=False
    Columns("E:E").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
    
    'moves the columns around to suit
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("C:C").Select
    Selection.Cut
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Range("A:B,D:H").Select
    Selection.Insert Shift:=xlToRight
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'rounds the amounts to 2 decimal places
    Range("K1").Select
    Do Until ActiveCell.Offset(1, 0).Value = ""
        ActiveCell.Offset(1, 0).Select
        ActiveCell.Value = Round(ActiveCell.Value, 2)
    Loop
     
    'copies the data from the file
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy
    
    'closes the file without saving it
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    Windows("BMWConcatenated.xls").Activate
    
    'checks to see if any data has already been pasted
    If Range("K1").Value = "" Then
        ActiveSheet.Paste
        Exit Sub
    Else
        'if there is data
        Range("K1").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, -10).Select
        ActiveSheet.Paste
    End If
   
    'deletes all the original text files'
'    Kill FolderPathVar & "*.txt"
    
End Sub

Sub OpenAllKerridgeFiles()

Application.DisplayAlerts = False
Application.ScreenUpdating = False

With Application.FileSearch
    .NewSearch
    .LookIn = "C:\AIMS\Kerridge\"
    .SearchSubFolders = False
    .Filename = "*.xls"
    .MatchTextExactly = True
    .FileType = msoFileTypeExcelWorkbooks
    If .Execute() > 0 Then
        Workbooks.Add 'creates a new workbook for the concatenated data
        ActiveWorkbook.SaveAs Filename:="C:\AIMS\" & "KerridgeConcatenated.xls", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
        
        'MsgBox "There were " & .FoundFiles.Count & "file(s) found."
        I = Null
        For I = 1 To .FoundFiles.Count
            Workbooks.Open Filename:=.FoundFiles(I)
            With ActiveWorkbook
                Call ConcatenateOnly
            End With
        Next I
    Else
        Call ErrorAlertMissingFiles
    End If
End With

Range("A1").Select

'will close file and saves any changes
ActiveWorkbook.Save
ActiveWorkbook.Close True

End Sub

Sub ConcatenateOnly()

    'sorts the data to ensure any blank chassis are at the bottom of the list
    Selection.Sort Key1:=Range("B1"), Order1:=xlAscending, Header:=xlNo, _
    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
    
    If Trim(Len(Range("B1").Value)) <> 17 Then
        Call ErrorAlertCompatibilityDealer
    End If
    
    'separates the columns using a tab delimiter
    Columns("A:A").Select
    Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=True, Semicolon _
        :=False, Comma:=False, Space:=False, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1), Array(3, 1)), TrailingMinusNumbers:=True
    
    'copies all data to create one concatenated file - checks to see if there is only one record
    If Range("C1").Value = "" Then
        Range("A1:" & "C1").Select
        Selection.Copy
    Else
        Range("C1").Select
        Selection.End(xlDown).Select
        Rowcounter = ActiveCell.Row
        Range("A1:" & "C" & Rowcounter).Select
        Selection.Copy
    End If
    
    'closes the file without saving it
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
   
    Windows("KerridgeConcatenated.xls").Activate
    
    'checks to see if any data has already been pasted
    If Range("C1").Value = "" Then
        ActiveSheet.Paste
        Exit Sub
    Else
        'if there is data
        Range("C1").Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(1, -2).Select
        ActiveSheet.Paste
    End If
  
    'deletes all the original text files'
'    Kill FolderPathVar & "*.txt"
    
End Sub

Sub SlightPause()
    newHour = Hour(Now())
    newMinute = Minute(Now())
    newSecond = Second(Now()) + 1
    waitTime = TimeSerial(newHour, newMinute, newSecond)
    
    Application.Wait waitTime
End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True





















































































Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True





















































































Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True





















































































Attribute VB_Name = "Sheets_Formulas"
Option Private Module
Sub CreateSheetsDealer()
'Copyright 2003 AIMS P/L
'All rights reserved

'creates a new Worksheet and names it DOWNLOADDEALER

With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "DOWNLOADDEALER"
End With

Range("A1:C1").Value = "***"

'creates range name

ActiveWorkbook.Names.Add Name:="DealerDownload1", RefersToR1C1:= _
        "=DOWNLOADDEALER!R2C1"

'creates a new Worksheet and names it DEALERIMPORT

With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "DEALERIMPORT"
End With

Range("A14:C14").Value = "***"
Range("E14:G14").Value = "***"
Range("L14:N14").Value = "***"

'creates range name

ActiveWorkbook.Names.Add Name:="DealerNoDups", RefersToR1C1:= _
        "=DEALERIMPORT!R15C1"
        
ActiveWorkbook.Names.Add Name:="StartCell2", RefersToR1C1:= _
        "=DEALERIMPORT!R15C5"
               
End Sub
Sub CreateSheetsFinancier()
'Copyright 2003 AIMS P/L
'All rights reserved

'creates a new Worksheet and names it DOWNLOADFINANCIER

With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "DOWNLOADFINANCIER"
End With

Range("A1:K1").Value = "***"

'creates range name
ActiveWorkbook.Names.Add Name:="FinancierDownload1", RefersToR1C1:= _
        "=DOWNLOADFINANCIER!R2C1"
        
'creates a new Worksheet and names it FINANCIERIMPORT

With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "FINANCIERIMPORT"
End With

Range("A14:K14").Value = "***"
Range("M14:R14").Value = "***"
Range("T14:Y14").Value = "***"

'creates range name

ActiveWorkbook.Names.Add Name:="FinancierNoDups", RefersToR1C1:= _
        "=FINANCIERIMPORT!R15C1"
        
ActiveWorkbook.Names.Add Name:="StartCell", RefersToR1C1:= _
        "=FINANCIERIMPORT!R15C13"
        
End Sub
Sub CreateSheetReconciliationWorkings()
'Copyright 2003 AIMS P/L
'All rights reserved

'creates a new Worksheet and names it RECONCILIATIONWORKINGS

With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "RECONCILIATIONWORKINGS"
End With

Sheets("ReconciliationWorkings").Select

Range("A13:O13").Value = "***"
Range("B9").Value = "=SUM(F14:F5000)"
Range("C8").Value = "=COUNT(O:O)"

'creates range name

ActiveWorkbook.Names.Add Name:="CountFinancierOS", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R8C3"

ActiveWorkbook.Names.Add Name:="FinancierTotal", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R13C1:R13C15"
        
Range("Q13:Y13").Value = "***"
Range("R9").Value = "=-SUM(S14:S5000)"
Range("S8").Value = "=COUNT(Y:Y)"

'creates range name

ActiveWorkbook.Names.Add Name:="CountDealerOS", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R8C19"

ActiveWorkbook.Names.Add Name:="InhouseTotal", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R13C17:R13C15"
        
'creates range names for the formulas
 
ActiveWorkbook.Names.Add Name:="FinancierAmount", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R14C6:R5000C6"
        
ActiveWorkbook.Names.Add Name:="FinancierChassis", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R14C5:R5000C5"
        
ActiveWorkbook.Names.Add Name:="FinancierStockNo", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R14C3:R5000C3"

ActiveWorkbook.Names.Add Name:="InhouseAmount", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R14C19:R5000C19"
        
ActiveWorkbook.Names.Add Name:="InhouseChassis", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R14C18:R5000C18"
        
ActiveWorkbook.Names.Add Name:="InhouseStockNo", RefersToR1C1:= _
        "=RECONCILIATIONWORKINGS!R14C17:R5000C17"
        
'types formulas into the two printout sheets
Sheets("InhouseResults").Range("$E$3").Value = "=-RECONCILIATIONWORKINGS!$R$9"
Sheets("FinancierResults").Range("$G$3").Value = "=RECONCILIATIONWORKINGS!$B$9"

Sheets("InhouseResults").Range("$E$9").Value = "=SUM(R[-4]C:R[-1]C)"
Sheets("InhouseResults").Range("$E$11").Value = "=R3C5+R9C5"

Sheets("FinancierResults").Range("$G$9").Value = "=SUM(R[-4]C:R[-1]C)"
Sheets("FinancierResults").Range("$G$11").Value = "=R3C7-R9C7"

'types the Balance per dealer and financier labels
Sheets("InhouseResults").Range("A3").Value = "Balance per " & DealershipName & " as @       "
Sheets("FinancierResults").Range("D3").Value = "Balance per " & ListSelection & " as @       "


'added for the new report sheet
Sheets("ConsolidatedResults").Range("A2").Value = DealershipName
Sheets("ConsolidatedResults").Range("A4").Value = "Floorplan Reconciliation - " & ListSelection
Sheets("ConsolidatedResults").Range("D6").Value = "Balance per " & ListSelection & " as @       "
Sheets("ConsolidatedResults").Range("A8").Value = "Less: " & ListSelection & " bailments not known in the General Ledger"
Sheets("ConsolidatedResults").Range("A16").Value = "Plus: Vehicles in the General Ledger but not on the " & ListSelection & " List"
Sheets("ConsolidatedResults").Range("A24").Value = "Less: Vehicles with differing bailment balances"
'this links to the Balance per financier cell in FinancierResults
Sheets("ConsolidatedResults").Range("G6").Value = "=FinancierResults!$G$3"
       
End Sub
Sub MainFormulaSetupRoutineDealer()
'Copyright 2003 AIMS P/L
'All rights reserved
   
    'determines the last active row number
    Sheets("Dealer").Select
    Range("A1").Select
    Selection.End(xlDown).Select
    RowCounterDealer = (ActiveCell.Row + 50)
    
    Sheets("DownloadDealer").Select
    
    'copies the formulas above
    Range("D2:E2").Select
    Selection.Copy
    Range("D3:D" & RowCounterDealer).Select
    ActiveSheet.Paste

    'DealerImport Sheet
    
    Sheets("DealerImport").Select

    'types the formulas for the DealerImport sheet
    Range("E15").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-4]="""",RC[4],RC[-4])"
    Range("F15").Select
    ActiveCell.FormulaR1C1 = "=RC[-4]"
    Range("G15").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-4]=0,"""",-RC[-4])"

    'copies the formulas above
    Range("E15:G15").Select
    Selection.Copy
    Range("E16:E" & RowCounterDealer).Select
    ActiveSheet.Paste

    'ReconciliationWorkings Sheet
    
    Sheets("ReconciliationWorkings").Select
    
    'types the formulas for the ReconciliationWorkings sheet
    Range("T14").Select
    Selection.FormulaArray = _
        "=IF(OR(RC[-2]=0,RC[-2]=""""),0,SUM(IF(RC[-2]=FinancierChassis,FinancierAmount)))"
    Range("U14").Select
    Selection.FormulaArray = _
        "=IF(OR(RC[-4]=0,RC[-4]=""""),0,SUM(IF(RC[-4]=FinancierStockNo,FinancierAmount)))"
    Range("V14").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]-RC[-1]"
    Range("W14").Select
    ActiveCell.FormulaR1C1 = "=IF(OR(RC[-1]=0,RC[-1]=RC[-3]),RC[-3],RC[-2])"
    Range("X14").Select
    ActiveCell.FormulaR1C1 = "=RC[-5]-RC[-1]"
    Range("Y14").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-1]=0,"""",-RC[-1])"

    'copies the formulas above
    Range("T14:Y14").Select
    Selection.Copy
    Range("T15:T" & RowCounterDealer).Select
    ActiveSheet.Paste

End Sub

Sub MainFormulaSetupRoutineFinancier()
'Copyright 2003 AIMS P/L
'All rights reserved
 
    'determines the last active row number
    Sheets("Bail").Select
    Range("B1").Select
    Selection.End(xlDown).Select
    RowCounterFinancier = (ActiveCell.Row + 50)
    
    'resets the font colour to cater for the Stock No. change routine
    Sheets("DownloadFinancier").Select
    Cells.Select
    Selection.Font.ColorIndex = 0
   
    'copies the formulas above
    Range("L2:M2").Select
    Selection.Copy
    Range("L3:L" & RowCounterFinancier).Select
    ActiveSheet.Paste
    
    Sheets("FinancierImport").Select
    
    'types the formulas for the FinancierImport sheet
    Range("M15").Select
    'PICKS UP THE DATE
    ActiveCell.FormulaR1C1 = "=RC[-10]"
    
    Range("N15").Select
    ActiveCell.FormulaR1C1 = "=RC[-12]"
    Range("O15").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-10]="""",RC[4],RC[-10])"
    Range("P15").Select
    ActiveCell.FormulaR1C1 = "=RC[-7]"
    Range("Q15").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-13]="""",RC[2],RC[-13])"
    Range("R15").Select
    ActiveCell.FormulaR1C1 = "=IF(RC[-7]=0,"""",RC[-7])"

    'copies the formulas above
    Range("M15:R15").Select
    Selection.Copy
    Range("M16:M" & RowCounterFinancier).Select
    ActiveSheet.Paste

    Sheets("ReconciliationWorkings").Select

    'types the formulas for the ReconciliationWorkings sheet
    Range("G14").Select
    Selection.FormulaArray = _
        "=IF(OR(RC[-2]=0,RC[-2]=""""),0,SUM(IF(RC[-2]=INHOUSECHASSIS,INHOUSEAMOUNT)))"
    Range("H14").Select
    Selection.FormulaArray = _
        "=IF(OR(RC[-5]=0,RC[-5]=""""),0,SUM(IF(RC[-5]=INHOUSESTOCKNO,INHOUSEAMOUNT,0)))"
    Range("I14").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]-RC[-1]"
    Range("J14").Select
    ActiveCell.FormulaR1C1 = "=IF(OR(RC[-1]=0,RC[-3]=RC[-1]),RC[-3],RC[-2])"
    Range("K14").Select
    Selection.FormulaArray = _
        "=IF(OR(RC[-6]=0,RC[-6]=""""),0,SUM(IF(RC[-6]=INHOUSECHASSIS,EVNCE)))"
    Range("L14").Select
    Selection.FormulaArray = _
        "=IF(OR(RC[-9]=0,RC[-9]=""""),0,SUM(IF(RC[-9]=INHOUSESTOCKNO,EVNCE)))"
    Range("M14").Select
    ActiveCell.FormulaR1C1 = "=RC[-2]-RC[-1]"
    Range("N14").Select
    ActiveCell.FormulaR1C1 = "=IF(OR(RC[-1]=0,RC[-1]=RC[-3]),RC[-3],RC[-2])"
    Range("O14").Select
    ActiveCell.FormulaR1C1 = _
        "=IF((RC[-9]-RC[-5])=0,"""",IF((RC[-9]-RC[-5]+RC[-1])=0,"""",(RC[-9]-RC[-5]+RC[-1])))"

    'copies the formulas above
    Range("G14:O14").Select
    Selection.Copy
    Range("G15:G" & RowCounterFinancier).Select
    ActiveSheet.Paste
    
End Sub


Attribute VB_Name = "StGeorgeConversions"
Option Private Module

Sub ImportBailStGeorge()
'Copyright 2010 AIMS P/L
'All rights reserved

Dim CheckValue As Variant
Dim GetData As Variant

    'creates a new worksheet and calls it 'Bail'
    With ThisWorkbook
        .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "Bail"
    End With

    Workbooks.Open Filename:=FnameFinancier

    'gets the name of the external file
    ActiveFile = ActiveWorkbook.Name

    'goes to the amount column and counts the rows
    Range("I1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row

    'copies and pastes the data into the program
    Range("A1:AA" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("Bail").Select
    Range("A1").Select
    ActiveSheet.Paste
    
    'closes the external file
    Windows(ActiveFile).Activate
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

    '----------------------------------------
          
    'performs error checking to see if a numeric exists in the amount column
    CheckValue = Range("I1").Value
    If IsNumeric(CheckValue) And CheckValue <> "" Then
    
    Call NewStGeorgeDateFix
    
        'deletes the unwanted columns
        Range("C:C,E:F,H:H,J:AA").Select
        Selection.Delete Shift:=xlToLeft
        
        'subtracts the Security Deposit column from the GST Exc Price column
        Columns("D:D").Select
        Selection.Copy
        Columns("E:E").Select
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlSubtract, _
            SkipBlanks:=False, Transpose:=False
        
        'removes the Security Deposit column
        Columns("D:D").Select
        Application.CutCopyMode = False
        Selection.Delete Shift:=xlToLeft
        
        'inserts columns to suit
        Columns("A:B").Select
        Selection.Insert Shift:=xlToRight
        Columns("F:J").Select
        Selection.Insert Shift:=xlToRight
        
        'inserts blank row
        Rows("1:1").Select
        Selection.Insert Shift:=xlDown
    
        'types the column headings
        Range("A1").Value = "Location #"
        Range("B1").Value = "Bailment #"
        Range("C1").Value = "Date"
        Range("D1").Value = "Chassis/VIN#"
        Range("E1").Value = "Stock#"
        Range("F1").Value = "Make"
        Range("G1").Value = "Model"
        Range("H1").Value = "Type"
        Range("I1").Value = "Rego #"
        Range("J1").Value = "Orig Bail #"
        Range("K1").Value = "CURRENT BALANCE"
        
        Range("A1").Select
       
        On Error GoTo NoBlankRows
            'deletes rows where amount is left blank
            Columns("K:K").Select
            Selection.SpecialCells(xlCellTypeBlanks).Select
            Selection.EntireRow.Delete
        On Error GoTo 0
NoBlankRows:
    
        Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
               
        'takes the initial VIN # column and stores in column V
        Columns("D:D").Select
        Selection.Copy
        Columns("V:V").Select
        ActiveSheet.Paste
        
        'counts the number of bailment entries for the ending label
        Range("K2").Select
        Selection.End(xlDown).Select
        BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
        Range("Z1").Value = BailmentEntriesVar
        ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
            "=Bail!R1C26" 'cell Z1 Bail sheet
            
        'counts the number of Amount entries - only used if downsloads come without Bailment entries
        Range("K2").Select
        Selection.End(xlDown).Select
        Rowcounter = ActiveCell.Row
    
        'types in psuedo bailment numbers
        Range("B2").Select
        ActiveCell.FormulaR1C1 = "1"
        Range("B2:B" & Rowcounter).Select
        Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
            Step:=1, Trend:=False
             
        'copies the original sheet and names it "Original Bail Data"
        Sheets("BAIL").Copy Before:=Sheets(1)
        Sheets("BAIL (2)").Select
        Sheets("BAIL (2)").Name = "Original Bail Data"
        
    Else
        Call ErrorAlertCompatibilityFinancier
    End If
    
End Sub

Sub DP_Strip()

'strips off any characters on the right after the seventeenth

    'selects cell D1 and sorts in ascending order on that column
    Range("D1").Select
    Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

    'inserts a blank column
    Selection.EntireColumn.Insert

    'clears all from the column
    ActiveCell.Columns("A:A").EntireColumn.Select
    Selection.Clear

    'types a stripping 17 char formula in the cell until the
    'cell to the right is blank
    Do While ActiveCell.Offset(0, 1).Value <> ""
        ActiveCell.FormulaR1C1 = "=Left(RC[1],17)"
        ActiveCell.Offset(1, 0).Range("A1").Select
    Loop

    ActiveCell.Columns("A:A").EntireColumn.Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False

    'select and delete the column with the original chassis numbers
    Columns("E:E").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft

End Sub

Sub NewStGeorgeDateFix()

Dim sval As String

'inserts column headings to allow for sorting
Range("A1").Select
Selection.EntireRow.Insert
ActiveCell.Value = "*"
Range("A1").Select
Selection.Copy
Range("A1:AA1").Select
ActiveSheet.Paste
Range("A1").Select

'sorts the data based on column A
    Selection.Sort Key1:=Range("A1"), Order1:=xlDescending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

'inserts a blank column B
Columns("B:B").Select
Selection.Insert Shift:=xlToRight

Selection.Clear

'types a stripping 6 char formula in the cell until the cell
'to the right is blank
Range("B1").Select
Do While ActiveCell.Offset(0, 1).Value <> ""
    If ActiveCell.Offset(0, -1).Value = "0" Then
        ActiveCell.Offset(0, -1).Value = ""
        ActiveCell.Offset(1, 0).Range("A1").Select
        Else
        ActiveCell.FormulaR1C1 = "=RIGHT(RC[-1],6)"
        ActiveCell.Offset(1, 0).Range("A1").Select
    End If
Loop

Columns("B:B").Select
   Selection.Copy
   Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
       :=False, Transpose:=False
       
Range("B2").Select
Do While ActiveCell.Value <> ""
        
        sval = ActiveCell.Value
        strDay = Right$(sval, 2)
        strMonth = Mid$(sval, Len(sval) - 3, 2)
        strYear = Left$(sval, 2)
        ActiveCell.Value = strDay & "/" & strMonth & "/" & strYear
        
        ActiveCell.Offset(1, 0).Range("A1").Select
        Selection.NumberFormat = "mm/dd/yy"
Loop

Columns("A:A").Select
    Selection.Delete Shift:=xlToLeft

'removes the inserted row
Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
Range("A1").Select

Application.CutCopyMode = False

End Sub

Attribute VB_Name = "StrippingProcedures"
Option Private Module
 Sub FinancierStrip()
'Copyright 2003 AIMS P/L
'All rights reserved

'If ListSelection = "St George Finance" And DealershipName = "James Frizelles Auto' Group P/L" Then
'    GoTo StGeorge_No_Strip
'End If

If DealershipName = "Youngs Holden" Or DealershipName = "Young Motors Pty Ltd" Then 'put in place because Revolution needs stripping
    GoTo MustStripBecauseOfRevolution
End If

If DealershipName = "City Automotive Group" Or DealershipName = "Westpoint Autos Group" Or DealershipName = "Southern Highland Automotive P/L" Then
    GoTo StGeorge_No_Strip
End If

If ListSelection = "Capital Finance" Or ListSelection = "St George Finance" Then
    GoTo StGeorge_No_Strip
End If

'below is done for downloaded Esanda files
If NewEsanda = "Yes" Then
    GoTo StGeorge_No_Strip
End If

MustStripBecauseOfRevolution:

    'selects cell D1 and sorts in ascending order on that column
    Range("D1").Select
    Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

    'inserts a blank column
    Selection.EntireColumn.Insert

    'clears all from the column
    ActiveCell.Columns("A:A").EntireColumn.Select
    Selection.Clear

    'types a stripping 6 char formula in the cell until the cell
    'to the right is blank
    Do While ActiveCell.Offset(0, 1).Value <> ""
        ActiveCell.FormulaR1C1 = "=RIGHT(RC[1],6)"
        ActiveCell.Offset(1, 0).Range("A1").Select
    Loop

    ActiveCell.Columns("A:A").EntireColumn.Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False

    'select and delete the column with the original chassis numbers
    Columns("E:E").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft

StGeorge_No_Strip:
    
    'inserts a blank column
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
        :=Array(1, 1)
    Selection.Delete Shift:=xlToLeft
    
    Range("K1").Select
    Selection.End(xlDown).Select
    
    'assigns the last active cell row number to the variable
    Rowcounter = ActiveCell.Row + 1
  
    'creates range names for Financier Stock abd Chassis columns
    ActiveWorkbook.Names.Add Name:="FinancierChassisREP", RefersToR1C1:= _
        "=DownloadFinancier!R2C4:R" & Rowcounter & "C4"
    ActiveWorkbook.Names.Add Name:="FinancierStockREP", RefersToR1C1:= _
        "=DownloadFinancier!R2C5:R" & Rowcounter & "C5"
   
    'selects cell D2 and sorts in ascending order on that column
    Range("D2").Select
    Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
     
    For DoBelow = 1 To Rowcounter
        On Error Resume Next
            
        If ActiveCell.Value = "0" Or ActiveCell.Value = "00" _
        Or ActiveCell.Value = "000" Or ActiveCell.Value = "0000" _
        Or ActiveCell.Value = "00000" Or ActiveCell.Value = "000000" Then
           ActiveCell.Value = ""
           ActiveCell.Offset(1, 0).Range("A1").Select
        Else
           ActiveCell.Offset(1, 0).Range("A1").Select
        End If
        
    Next

    'selects cell E2 and sorts in ascending order on that column
    Range("E2").Select
    Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

    For DoBelow = 1 To Rowcounter
               
        If ActiveCell.Value = "0" Or ActiveCell.Value = "00" _
        Or ActiveCell.Value = "000" Or ActiveCell.Value = "0000" _
        Or ActiveCell.Value = "00000" Or ActiveCell.Value = "000000" Then
           ActiveCell.Value = ""
           ActiveCell.Offset(1, 0).Range("A1").Select
        Else
           ActiveCell.Offset(1, 0).Range("A1").Select
        End If
        
    Next
    
If ListSelection = "Capital Finance" Then
    'copies and pastes the data into the DownloadFinancier sheet
    'does not use the General format due to date issue
    Range("A2:K" & Rowcounter).Select
    Selection.Copy
    Range("A1").Activate
    Application.GoTo Reference:="FinancierDownload1"
    ActiveSheet.Paste
    GoTo DateIssue
End If
    
    'copies and pastes the data into the DownloadFinancier sheet
    Range("A2:K" & Rowcounter).Select
    Selection.NumberFormat = "General"
    Selection.Copy
    Range("A1").Activate
    Application.GoTo Reference:="FinancierDownload1"
    ActiveSheet.Paste
    
DateIssue:

End Sub

Sub DealerStrip()
'Copyright 2003 AIMS P/L
'All rights reserved

'REMOVES THE TOTAL CELL

'    'done below for Skippers as they have a lot of gunk in the VIN and Stock Column
'    If DealershipName = "John Hughes' Skippers" Then
'        'goes to and clears the total row, as this comes with the download
'        Range("C1").Select
'        Selection.End(xlDown).Select
'        ActiveCell.Offset(0, -2).Range("A1:C1").Select
'        ActiveCell.Activate
'        Selection.ClearContents
'        ActiveCell.Select
'        GoTo SkippersOnly
'    End If
    
    'goes to and clears the total cell row, as this comes with the download
    Range("C1").Select
    Selection.End(xlDown).Select
    Selection.EntireRow.Delete
    
'SkippersOnly:

'---------------------------------------------
    
    'assigns the last active cell row number to the variable
    Rowcounter = ActiveCell.Row + 1

If DealershipName = "Youngs Holden" Or DealershipName = "Young Motors Pty Ltd" Then 'put in place because Revolution needs stripping
    GoTo MustStripBecauseOfRevolution
End If

If DealershipName = "City Automotive Group" Or DealershipName = "Westpoint Autos Group" Or DealershipName = "Southern Highland Automotive P/L" Then
    GoTo StGeorge_No_Strip
End If

If ListSelection = "Capital Finance" Or ListSelection = "St George Finance" Then
    GoTo StGeorge_No_Strip
End If

'below is done for downloaded Esanda files
If NewEsanda = "Yes" Then
    GoTo StGeorge_No_Strip
End If

MustStripBecauseOfRevolution:

   'selects cell B2 and sorts in ascending order on that column
    Range("B2").Select
    Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

    'inserts a blank column
    Selection.EntireColumn.Insert

    'clears all from the column
    ActiveCell.Columns("A:A").EntireColumn.Select
    Selection.Clear

    'types a stripping 6 char formula in cellS until the cell to the right is blank
    Do While ActiveCell.Offset(0, 1).Value <> ""
        ActiveCell.FormulaR1C1 = "=RIGHT(RC[1],6)"
        ActiveCell.Offset(1, 0).Range("A1").Select
    Loop

    ActiveCell.Columns("A:A").EntireColumn.Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False

    'select and delete the column with the original chassis numbers
    Columns("C:C").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft

StGeorge_No_Strip:
    
    'creates range names for Financier Stock and Chassis columns
    ActiveWorkbook.Names.Add Name:="DealerChassisREP", RefersToR1C1:= _
        "=DownloadDealer!R2C2:R" & Rowcounter & "C2"
    ActiveWorkbook.Names.Add Name:="DealerStockREP", RefersToR1C1:= _
        "=DownloadDealer!R2C1:R" & Rowcounter & "C1"
   
    'ensures look-a-like zeros, are zero values
    
    'inserts a blank column
    Columns("C:C").Select
    Selection.Insert Shift:=xlToRight
    Columns("B:B").Select
    Selection.TextToColumns Destination:=Range("C1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
        :=Array(1, 1)
    Selection.Delete Shift:=xlToLeft
    
    Range("B1").Value = "Chassis"
  
    'selects cell A2 and sorts in ascending order on that column
    Range("A2").Select
    Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom
       
    For DoBelow = 1 To Rowcounter
               
        If ActiveCell.Value = "0" Or ActiveCell.Value = "00" _
        Or ActiveCell.Value = "000" Or ActiveCell.Value = "0000" _
        Or ActiveCell.Value = "00000" Or ActiveCell.Value = "000000" Then
           ActiveCell.Value = ""
           ActiveCell.Offset(1, 0).Range("A1").Select
        Else
           ActiveCell.Offset(1, 0).Range("A1").Select
        End If
        
    Next

    'selects cell B2 and sorts in ascending order on that column
    Range("B2").Select
    Selection.Sort Key1:=ActiveCell, Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

    For DoBelow = 1 To Rowcounter
              
        If ActiveCell.Value = "0" Or ActiveCell.Value = "00" _
        Or ActiveCell.Value = "000" Or ActiveCell.Value = "0000" _
        Or ActiveCell.Value = "00000" Or ActiveCell.Value = "000000" Then
           ActiveCell.Value = ""
           ActiveCell.Offset(1, 0).Range("A1").Select
        Else
           ActiveCell.Offset(1, 0).Range("A1").Select
        End If
        
    Next
   
    'does a fresh count of column C - after crap is removed
    Range("C1").Select
    Selection.End(xlDown).Select
    
    'assigns the last active cell row number to the variable
    Rowcounter = ActiveCell.Row
    
    Range("A2").Select
    For DoBelow = 1 To Rowcounter - 1
               
        If ActiveCell.Value = "0" Or ActiveCell.Value = "00" _
        Or ActiveCell.Value = "000" Or ActiveCell.Value = "0000" _
        Or ActiveCell.Value = "00000" Or ActiveCell.Value = "000000" Or ActiveCell.Value = "" Then
           ActiveCell.Value = "BLANK"
           ActiveCell.Offset(1, 0).Range("A1").Select
        Else
           ActiveCell.Offset(1, 0).Range("A1").Select
        End If
        
    Next
  
    'copies and pastes the data into the DownloadDealer sheet
    Range("A2:C" & Rowcounter).Select
    Selection.NumberFormat = "General"
    Selection.Copy
    Range("A1").Activate
    Application.GoTo Reference:="DealerDownload1"
    ActiveSheet.Paste
    
End Sub
Attribute VB_Name = "TFAConversion"
Option Private Module
Sub ImportBailTFA()
'Copyright 2003 AIMS P/L
'All rights reserved

    Dim GetData As Variant

    'creates a new worksheet and calls it 'Bail'
    With ThisWorkbook
        .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "Bail"
    End With

    Workbooks.Open Filename:=FnameFinancier

    'gets the name of the external file
    ActiveFile = ActiveWorkbook.Name

    'goes to the amount column and counts the rows
    Range("H1").Select
    Selection.End(xlDown).Select
    GetData = ActiveCell.Row

    'copies and pastes the data into the program
    Range("A1:Q" & GetData).Select
    Selection.Copy
    Windows(FileNameVar).Activate
    Sheets("Bail").Select
    Range("A1").Select
    ActiveSheet.Paste
    
    'closes the external file
    Windows(ActiveFile).Activate
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
     
    'file compatibility check (TOYOTA)
    If Trim(Range("Q1").Value) <> "CompanyDesc" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    If Trim(Range("E1").Value) <> "EngineNum" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
     If Trim(Range("F1").Value) <> "StockNum" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    '----------------------------------------
    
    'uses the 'StockNum' column, not the DistStockNum'
    If DealershipName = "Southern Highland Automotive P/L" Then
        Columns("G:G").Select
        Selection.Cut
        Columns("F:F").Select
        Selection.Insert Shift:=xlToRight
    End If
        
    'deletes unnecessery columns
    Range("A:A,D:D,F:F,I:R").Select
    Selection.Delete Shift:=xlToLeft
    
    'inserts columns where needed
    Range("A:A,E:I").Select
    Selection.Insert Shift:=xlToRight

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Engine#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    If DealershipName = "Southern Highland Automotive P/L" Then
        GoTo No_Gunk_Strip
    End If
    
    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
No_Gunk_Strip:
    
    'formats the entire date column to general
    Columns("C:C").Select
    Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'takes the initial Engine # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Sub ImportBailTFA_MonthlyDealerStatements()
'Copyright 2003 AIMS P/L
'All rights reserved

    'Workbooks.Open Filename:=FnameFinancier
    Workbooks.Open Filename:=FnameFinancier
    
    ActiveFile = ActiveWorkbook.Name
   
   'renames the first worksheet
    Worksheets.Item(1).Name = "BAIL"
    
    'copies the data sheet from the BAIL.csv file, then closes BAIL.csv
    Sheets("Bail").Copy Before:=Workbooks(FileNameVar).Sheets(1)
  
    Windows(ActiveFile).Activate
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
 
    'file compatibility check (TOYOTA) Finance
    If Trim(Range("F1").Value) <> "EngineNum" Then
        Call ErrorAlertCompatibilityFinancier
    End If
'
'    'file compatibility check (TOYOTA)
    If Trim(Range("N1").Value) <> "OrigBal3" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
     '----------------------------------------

    'deletes unnecessery columns
    Range("A:A,D:D,G:G,I:U").Select
    Selection.Delete Shift:=xlToLeft
    
    'moves columns to suit
    Columns("D:E").Select
    Selection.Cut
    Columns("C:C").Select
    Selection.Insert Shift:=xlToRight
 
    'deletes unnecessery row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
    
    'inserts columns where needed
    Range("A:A,E:I").Select
    Selection.Insert Shift:=xlToRight

    'inserts blank row
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown

    'types the column headings
    Range("A1").Value = "Location#"
    Range("B1").Value = "Bailment#"
    Range("C1").Value = "Date"
    Range("D1").Value = "Engine#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego#"
    Range("J1").Value = "Orig Bail#"
    Range("K1").Value = "CURRENT BALANCE"
    
    'formats the entire date column to general
    Columns("C:C").Select
    Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
  
NoBlankRows:
    
    'takes the initial Engine # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
            
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    '------------------------------------
    'NOTE THAT THIS SECTION WAS DONE 19TH JULY 2005
    'AS DEALERSHIPS WERE GETTING TO MANY VARIANCES WHEN THE STIPPING WAS DONE
    
    If DealershipName = "Metro-Torque Ford" Then
    
        'types a stripping 6 char formula in the cell until the cell
        'to the right is blank - ONLY DONE FOR METRO TORQUE AS THEY USE 7 CHARS FOR THEIR STOCK #
        Columns("F:F").Select
        Selection.Insert Shift:=xlToRight
        Do While ActiveCell.Offset(0, 6) <> ""
            ActiveCell.FormulaR1C1 = "=RIGHT(RC[-1],6)"
            ActiveCell.Offset(1, 0).Range("A1").Select
        Loop
        
        ActiveCell.Columns("A:A").EntireColumn.Select
           Selection.Copy
           Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
               False, Transpose:=False
    
        'select and delete the column with the original stock numbers
        Columns("E:E").Select
        Application.CutCopyMode = False
        Selection.Delete Shift:=xlToLeft
        
        'removes gunk from the stock entries
        Columns("F:F").Select
        Selection.Insert Shift:=xlToRight
        Columns("E:E").Select
        Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
            :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
            Array(1, 1), Array(2, 1))
        Columns("F:F").Select
        Selection.Delete Shift:=xlToLeft
        
    End If
    
    '------------------------------------ METRO TORQUE STRIPPING STOPS HERE
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Sub ImportBailTFA_Dealer_Stock_List_GST()
'Copyright 2006 AIMS P/L
'All rights reserved

'Note that below is written for Toyota Dealers who use Revolution only,
'because it does its double checking with UnitRID against Floor ID, and Stock Num against Stock #

    'Workbooks.Open Filename:=FnameFinancier
    Workbooks.Open Filename:=FnameFinancier
    
    ActiveFile = ActiveWorkbook.Name
   
   'renames the first worksheet
    Worksheets.Item(1).Name = "BAIL"
    
    'copies the data sheet from the BAIL.csv file, then closes BAIL.csv
    Sheets("Bail").Copy Before:=Workbooks(FileNameVar).Sheets(1)
  
    Windows(ActiveFile).Activate
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
 
    'file compatibility check (TOYOTA) Finance
    If Trim(Range("A1").Value) <> "UnitRID" Then
        Call ErrorAlertCompatibilityFinancier
    End If

    'file compatibility check (TOYOTA)
    If Trim(Range("K1").Value) <> "StockNum" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    'file compatibility check (TOYOTA)
    If Trim(Range("W1").Value) <> "PayoutAmt" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
     '----------------------------------------
     
    'removes the gunk from the date column
    Columns("H:H").Select
    Selection.Insert Shift:=xlToRight
    Columns("G:G").Select
    
    Selection.TextToColumns Destination:=Range("G1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("H:H").Select
    Selection.Delete Shift:=xlToLeft
   
    'deletes unnecessery columns - I've also deleted blank others to the right - to be sure
    Range("B:F,H:J,L:V,X:AZ").Select
    Selection.Delete Shift:=xlToLeft
    
    'moves columns to suit
    Columns("A:A").Select
    Selection.Cut
    Columns("C:C").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
    
    'types the column headings
    Range("A1").Value = "Location#"
    Range("B1").Value = "Bailment#"
    Range("C1").Value = "Date"
    Range("D1").Value = "UnitRID"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego#"
    Range("J1").Value = "Orig Bail#"
    Range("K1").Value = "CURRENT BALANCE"
    
    'formats the entire date column to general
    Columns("C:C").Select
    Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
  
NoBlankRows:
    
    'takes the initial Engine # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
            
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    '------------------------------------
    'NOTE THAT THIS SECTION WAS DONE 19TH JULY 2005
    'AS DEALERSHIPS WERE GETTING TO MANY VARIANCES WHEN THE STIPPING WAS DONE
    
    If DealershipName = "Metro-Torque Ford" Then
    
        'types a stripping 6 char formula in the cell until the cell
        'to the right is blank - ONLY DONE FOR METRO TORQUE AS THEY USE 7 CHARS FOR THEIR STOCK #
        Columns("F:F").Select
        Selection.Insert Shift:=xlToRight
        Do While ActiveCell.Offset(0, 6) <> ""
            ActiveCell.FormulaR1C1 = "=RIGHT(RC[-1],6)"
            ActiveCell.Offset(1, 0).Range("A1").Select
        Loop
        
        ActiveCell.Columns("A:A").EntireColumn.Select
           Selection.Copy
           Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
               False, Transpose:=False
    
        'select and delete the column with the original stock numbers
        Columns("E:E").Select
        Application.CutCopyMode = False
        Selection.Delete Shift:=xlToLeft
        
        'removes gunk from the stock entries
        Columns("F:F").Select
        Selection.Insert Shift:=xlToRight
        Columns("E:E").Select
        Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
            :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
            Array(1, 1), Array(2, 1))
        Columns("F:F").Select
        Selection.Delete Shift:=xlToLeft
        
    End If
    
    '------------------------------------ METRO TORQUE STRIPPING STOPS HERE
          
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    
    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
        
'    'rounds the amounts to 2 decimal places only
'    Range("L1").Value = "CURRENT BALANCE"
'    Range("L2").Select
'    Do While ActiveCell.Offset(0, -1) <> ""
'        ActiveCell.FormulaR1C1 = "=ROUND(RC[-1],2)"
'        ActiveCell.Offset(1, 0).Range("A1").Select
'    Loop
'    Columns("L:L").Select
'    Selection.Copy
'    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
'        False, Transpose:=False
'
'    'select and delete the column with the original amounts
'    Columns("K:K").Select
'    Application.CutCopyMode = False
'    Selection.Delete Shift:=xlToLeft
    
    Range("K2").Select
    Range(Selection, Selection.End(xlDown)).Select
    For Each CurrentCell In Selection
        CurrentCell.Value = Round(CurrentCell.Value, 2)
    Next
       
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
'Copyright 2003 AIMS P/L
'All rights reserved
    
    'Prevent users from breaking into macro execution
    Application.EnableCancelKey = xlDisabled
    
    'replaces Microsoft Excel in the application title bar
'    Application.Caption = "AIMS P/L:"
    'replaces the saved workbook name in the workbook title bar
'    ActiveWindow.Caption = "Floorplan Reconciler"
    'place the following in the closing procedure to reset the application name back to Microsoft Excel
    'Application.Caption = Empty
          
    Application.Cursor = xlNorthwestArrow
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.CutCopyMode = True
       
    frmStartUp.Show
   
End Sub
Attribute VB_Name = "TrivettConcatenation"
Option Private Module
Sub ConcatenationTrivett()

    Application.DisplayAlerts = False
    Application.ScreenUpdating = False

    'ensures all data files exist, or not renamed
    If Dir(FolderPathVar & "BMW1.xls") = "" Then
        Call ErrorAlertFileNames
    End If
        
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW2.xls") = "" Then
        Call ErrorAlertFileNames
    End If

    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW3.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
    'ensures all text data files exist, or not renamed
    If Dir(FolderPathVar & "BMW4.xls") = "" Then
        Call ErrorAlertFileNames
    End If
    
'    'ensures all text data files exist, or not renamed
'    If Dir(FolderPathVar & "BMW5.xls") = "" Then
'        Call ErrorAlertFileNames
'    End If

'-----------------------------------------------------
    
    'opens the 4 data files
    Workbooks.Open Filename:=FolderPathVar & "BMW1.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW2.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW3.xls"
        Call GeneralTidy
    Workbooks.Open Filename:=FolderPathVar & "BMW4.xls"
        Call GeneralTidy
    
    'copies all data from the files to create one concatenated file
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy
    
    Windows("BMW3.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste
    
    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy

    Windows("BMW2.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste

    Range("K1").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row
    Range("A1:" & "K" & Rowcounter).Select
    Selection.Copy

    Windows("BMW1.xls").Activate
    Range("K1").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -10).Select
    ActiveSheet.Paste
       
    'close all other data files
    Windows("BMW2.xls").Activate
    ActiveWorkbook.Close
    Windows("BMW3.xls").Activate
    ActiveWorkbook.Close
    Windows("BMW4.xls").Activate
    ActiveWorkbook.Close
    
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"
    
    Range("A1").Select
    
    'saves the concatenated new file and closes it
    ActiveWorkbook.SaveAs Filename:=FolderPathVar & "MasterBMW", _
        FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False
    ActiveWorkbook.Close
    
    'deletes all the original BMW files
    Kill FolderPathVar & "BMW?.xls"

End Sub

Sub GeneralTidy()

    'deletes the first 3 rows
    Rows("1:3").Select
    Selection.Delete Shift:=xlUp
    Range("A1").Select
    
    'removes the "Make" column if it exists
    If Trim(Range("G1").Value) = "Make" Then
        Columns("G:G").Select
        Selection.Delete Shift:=xlToLeft
    End If

    'file compatibility checks for BMW
    If Trim(Range("B1").Value) <> "Floorplan" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("C1").Value) <> "UnitNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("D1").Value) <> "ChassisNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("E1").Value) <> "EngineNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("F1").Value) <> "RegoNo" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("I1").Value) <> "Year" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("J1").Value) <> "Start Date" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If
    If Trim(Range("N1").Value) <> "GST" Then
        ActiveWorkbook.Saved = True
        ActiveWorkbook.Close
        Call ErrorAlertCompatibilityFinancierBayFord
    End If

    '----------------------------------------
   
    'removes the unneeded top row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp
   
    'removes the unneeded columns
    Range("A:B,E:I,K:L,O:O").Select
    Selection.Delete Shift:=xlToLeft
    
    On Error GoTo NoUnitNo
        'deletes the blank rows where there is no 'UnitNo'
        Columns("A:A").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoUnitNo:

    'using paste special, subtracts the 'GST from the 'Balance inc GST'
    Columns("E:E").Select
    Selection.Copy
    Columns("D:D").Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlSubtract, _
    SkipBlanks:=False, Transpose:=False
    Columns("E:E").Select
    Application.CutCopyMode = False
    Selection.Delete Shift:=xlToLeft
    
    'moves the columns around to suit
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("C:C").Select
    Selection.Cut
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Range("A:B,D:H").Select
    Selection.Insert Shift:=xlToRight
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:

    'rounds the amounts to 2 decimal places
    Range("K1").Select
    Do Until ActiveCell.Offset(1, 0).Value = ""
        ActiveCell.Offset(1, 0).Select
        ActiveCell.Value = Round(ActiveCell.Value, 2)
    Loop

    Range("A1").Select

End Sub

Attribute VB_Name = "UDCConversion"
Option Private Module
Sub ImportBailUDC()
'Copyright 2008 AIMS P/L
'All rights reserved

Dim GetData As Variant

'creates a new worksheet and calls it 'Bail'
With ThisWorkbook
  .Worksheets.Add(after:=.Worksheets(.Worksheets.Count)).Name = "BAIL"
End With

Workbooks.OpenText Filename:=FnameFinancier, _
    Origin:=xlWindows, StartRow:=1, DataType:=xlDelimited, TextQualifier:= _
    xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, Semicolon:=False, _
    Comma:=False, Space:=False, Other:=True, OtherChar:="~", FieldInfo:= _
    Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7 _
    , 1), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1)) ', _
    'TrailingMinusNumbers:=True

'gets the name of the external file
ActiveFile = ActiveWorkbook.Name

'goes to the amount column and counts the rows
Range("J1").Select
Selection.End(xlDown).Select
GetData = ActiveCell.Row

'copies and pastes the data into the program
Range("A1:J" & GetData).Select
Selection.Copy
Windows(FileNameVar).Activate
Sheets("BAIL").Select
Range("A1").Select
ActiveSheet.Paste

'closes the external file
Windows(ActiveFile).Activate
ActiveWorkbook.Saved = True
ActiveWorkbook.Close

'----------------------------------------
       
    'file compatibility checks for UDP
    If Trim(Range("E1").Value) <> "Sido" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("H1").Value) <> "VIN" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("J1").Value) <> "Debt Amount" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    '----------------------------------------
    
'    'inserts a space to the left of each entry in the date range (i.e. to allow for data formatting issue)
'    Range("C1").Select
'    Range(Selection, Selection.End(xlDown)).Select
'
'    For Each cell In Selection
'    'If Not cell.HasFormula Then
'        'cell.Value = Chr(149) & " " & cell.Value
'        cell.Value = " " & cell.Value
'    'End If
'    Next cell

    'rearranges columns to suit
    Range("A:D,F:G,K:L").Select
    Range("K1").Activate
    Selection.Delete Shift:=xlToLeft
    Columns("C:C").Select
    Selection.Cut
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Columns("C:C").Select
    Selection.Cut
    Columns("B:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("A:B").Select
    Selection.Insert Shift:=xlToRight
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
    Range("A1").Select

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"
    
'    'removes all crap from the date column
'    Columns("D:D").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("C:C").Select
'    Selection.TextToColumns Destination:=Range("C1"), DataType:=xlDelimited, _
'        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'        :=Array(Array(1, 1), Array(2, 1)), TrailingMinusNumbers:=True
'    Columns("D:D").Select
'    Selection.Delete Shift:=xlToLeft
'    Range("A1").Select

'    'removes any spaces that sometimes are inserted at the right hand side of the entry
'    Columns("E:E").Select
'    Selection.Insert Shift:=xlToRight
'    Columns("D:D").Select
'    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
'        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
'        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
'        :=Array(1, 1)
'    Columns("E:E").Select
'    Selection.Delete Shift:=xlToLeft
    
   'formats the entire date column to general
   'Columns("C:C").Select
   'Selection.NumberFormat = "General"
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    'counts the number of Amount entries - only used if downsloads come without Bailment entries
    Range("K2").Select
    Selection.End(xlDown).Select
    Rowcounter = ActiveCell.Row

    'types in psuedo bailment numbers
    Range("B2").Select
    ActiveCell.FormulaR1C1 = "1"
    Range("B2:B" & Rowcounter).Select
    Selection.DataSeries Rowcol:=xlColumns, Type:=xlLinear, Date:=xlDay, _
        Step:=1, Trend:=False
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Sub MonthDateSeparatorEsanda()
'note - must format the range as text

For Each cell In Selection
    sval = cell.Value
    
        strYear = Right$(sval, 2)                         ' Year is always 2 characters
        strMonth = Mid$(sval, Len(sval) - 3, 2) ' Month is the two characters before the Year
        strDay = Left$(sval, Len(sval) - 4)            ' either 1 or 2 characters
    
    cell.Value = strDay & "/" & strMonth & "/" & strYear
    
Next

End Sub
Attribute VB_Name = "Utilities"
Option Private Module
Sub ShowForm()
'Copyright 2003 AIMS P/L
'All rights reserved

    frmMainScreen.Show
End Sub

Sub ForeignCharRemoveDealer()
'Copyright 2003 AIMS P/L
'All rights reserved

    'removes all hidden characters from Stock and Chassis columns
    If InhouseSystem = "Preston" Then
    
        'inserts column to the right of Stock
        Columns("B:B").Select
        Selection.Insert Shift:=xlToRight
    
        'parses the data into column B - the inserted column
        Columns("A:A").Select
        Selection.TextToColumns Destination:=Range("A1"), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
            :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
            Array(1, 1), Array(2, 1))
    
        'deletes the which contains the crap
        Columns("B:B").Select
        Selection.Delete Shift:=xlToLeft
        
        'inserts column to the right of VIN
        Columns("C:C").Select
        Selection.Insert Shift:=xlToRight
    
        'parses the data into column C - the inserted column
        Columns("B:B").Select
        Selection.TextToColumns Destination:=Range("B1"), DataType:=xlDelimited, _
            TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
            :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
            Array(1, 1), Array(2, 1))
    
        'deletes the which contains the crap
        Columns("C:C").Select
        Selection.Delete Shift:=xlToLeft
        
    End If
    
End Sub
Sub ForeignCharRemoveFinancier()
'Copyright 2003 AIMS P/L
'All rights reserved

    'removes all hidden characters from Stock and Chassis columns
    
    'inserts column to the right of Stock
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    
    'parses the data into column F - the inserted column
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
       
    'deletes the which contains the crap
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
    
    'inserts column to the right of VIN
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    
    'parses the data into column F - the inserted column
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    
    'deletes the whick contains the crap
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
End Sub
Sub DuplicationCheckFinancier()
'Copyright 2003 AIMS P/L
'All rights reserved

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.DisplayAlerts = False

Sheets("DOWNLOADFINANCIER").Select

'checks for duplicates in the financier stock column

'sorts the data in ascending order to get any duplicates together
Range("E1").Select
    Selection.Sort Key1:=Range("E1"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

Range("E2").Select

Do Until ActiveCell.Value = ""
    ThisValue = ActiveCell.Value

    ActiveCell.Offset(1, 0).Select

    Do While ActiveCell.Value = ThisValue
        ActiveCell.Value = ThisValue & "#"
        ActiveCell.Offset(-1, 0).Select
        ActiveCell.Value = ThisValue & "#"
        ActiveCell.Offset(2, 0).Select
    Loop

Loop

'-------------------------------------------------

'checks for duplicates in the financier VIN column
     
'sorts the data in ascending order to get any duplicates together
Range("D1").Select
Selection.Sort Key1:=Range("D1"), Order1:=xlAscending, Header:=xlYes, _
    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

Range("D2").Select

Do Until ActiveCell.Value = ""
    ThisValue = ActiveCell.Value

    ActiveCell.Offset(1, 0).Select

    Do While ActiveCell.Value = ThisValue
        ActiveCell.Value = ThisValue & "#"
        ActiveCell.Offset(-1, 0).Select
        ActiveCell.Value = ThisValue & "#"
        ActiveCell.Offset(2, 0).Select
    Loop

Loop

Application.Calculation = xlCalculationAutomatic
Application.DisplayAlerts = True
Application.ScreenUpdating = True|fffd|
        
End Sub
Sub DuplicationCheckDealer()
'Copyright 2003 AIMS P/L
'All rights reserved

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.DisplayAlerts = False

Sheets("DOWNLOADDEALER").Select

If DealershipName = "Westpoint Autos Group" Then
    GoTo NoStockNumbers
End If

'checks for duplicates in the dealer stock column

'sorts the data in ascending order to get any duplicates together
Range("A1").Select
    Selection.Sort Key1:=Range("A1"), Order1:=xlAscending, Header:=xlYes, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

Range("A2").Select

Do Until ActiveCell.Value = ""
    ThisValue = ActiveCell.Value

    ActiveCell.Offset(1, 0).Select

    Do While ActiveCell.Value = ThisValue
        ActiveCell.Value = "#" & ThisValue
        ActiveCell.Offset(-1, 0).Select
        ActiveCell.Value = "#" & ThisValue
        ActiveCell.Offset(2, 0).Select
    Loop

Loop

NoStockNumbers:
    
'-------------------------------------------------

'checks for duplicates in the dealer VIN column
     
'sorts the data in ascending order to get any duplicates together
Range("B1").Select
Selection.Sort Key1:=Range("B1"), Order1:=xlAscending, Header:=xlYes, _
    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom

Range("B2").Select

Do Until ActiveCell.Value = ""
    ThisValue = ActiveCell.Value

    ActiveCell.Offset(1, 0).Select

    Do While ActiveCell.Value = ThisValue
        ActiveCell.Value = "#" & ThisValue
        ActiveCell.Offset(-1, 0).Select
        ActiveCell.Value = "#" & ThisValue
        ActiveCell.Offset(2, 0).Select
    Loop

Loop

Application.Calculation = xlCalculationAutomatic
'Application.DisplayAlerts = True
Application.ScreenUpdating = True|fffd|
        
End Sub
Sub SwitchEngineFinancier()
'Copyright 2003 AIMS P/L
'All rights reserved

Sheets("FinancierResults").Select

'checks to see if there has been any data copied in the Financier Printout sheet
'this is to avoid doing this procedure
If Sheets("FinancierResults").Range("G7").Value = "" Then Exit Sub

'counts the number of rows in the FinancierResults sheet
Range("G5").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row

'counts the number of rows in the Bail sheet
Sheets("Bail").Select
Range("K2").Select
Selection.End(xlDown).Select
RowCounter2 = ActiveCell.Row

    'gets Original Engine number
    Sheets("FinancierResults").Select
    Range("D6").Select
        Do Until ActiveCell.Row = Rowcounter
            ActiveCell.Offset(1, 0).Range("A1").Select
            
            'checks to see if this is a repeated entry as signified by the hash symbol
            If Right(ActiveCell.Value, 1) = "#" Then
            
               BailmentFinancier = ActiveCell.Offset(0, -2).Value
               Sheets("Bail").Select
               Range("B1").Select
        
               Do Until ActiveCell.Row = RowCounter2
                   ActiveCell.Offset(1, 0).Range("A1").Select
                   If ActiveCell.Value = BailmentFinancier Then
                       OriginalEngineFinancier = ActiveCell.Offset(0, 20).Range("A1").Value
                   End If
               Loop
               
               Sheets("FinancierResults").Select
               'appends a '#' to the right of the original VIN
               ActiveCell.Value = OriginalEngineFinancier & "#"
               
            Else
                
               BailmentFinancier = ActiveCell.Offset(0, -2).Value
               Sheets("Bail").Select
               Range("B1").Select
        
               Do Until ActiveCell.Row = RowCounter2
                   ActiveCell.Offset(1, 0).Range("A1").Select
                   If ActiveCell.Value = BailmentFinancier Then
                       OriginalEngineFinancier = ActiveCell.Offset(0, 20).Range("A1").Value
                   End If
               Loop
               
               Sheets("FinancierResults").Select
               ActiveCell.Value = OriginalEngineFinancier
            
            End If
            
        Loop
        
End Sub

Sub SwitchEngineDealer()
'Copyright 2003 AIMS P/L
'All rights reserved

Sheets("InhouseResults").Select

'checks to see if there has been any data copied in the Dealer Printout sheet
'this is to avoid doing this procedure
If Sheets("InhouseResults").Range("E7").Value = "" Then Exit Sub

'counts the number of rows in the InhouseResults sheet
Range("E5").Select
Selection.End(xlDown).Select
Rowcounter = ActiveCell.Row

'counts the number of rows in the Dealer sheet
Sheets("Dealer").Select
Range("C2").Select
Selection.End(xlDown).Select
RowCounter2 = ActiveCell.Row

    'gets Original Engine number
    Sheets("InhouseResults").Select
    Range("B6").Select
        Do Until ActiveCell.Row = Rowcounter
            ActiveCell.Offset(1, 0).Range("A1").Select
            
            'checks to see if this is a repeated entry as signified by the hash symbol
            If Left(ActiveCell.Value, 1) = "#" Then
               
               StockDealer = ActiveCell.Offset(0, -1).Value
               
               'checks if there is a hash on the left of the Stock entry
               If Left(StockDealer, 1) = "#" Then
                    CellEntryLength = Len(StockDealer) - 1
                    StockDealer = Right(StockDealer, CellEntryLength)
               End If
             
               Sheets("Dealer").Select
               Range("A1").Select
        
               Do Until ActiveCell.Row = RowCounter2
                   ActiveCell.Offset(1, 0).Range("A1").Select
                   If ActiveCell.Value = StockDealer Then
                       OriginalEngineDealer = ActiveCell.Offset(0, 21).Range("A1").Value
                   End If
               Loop
               
               Sheets("InhouseResults").Select
               'appends a '#' to the left of the original VIN
               ActiveCell.Value = "#" & OriginalEngineDealer
               
            Else
            
               StockDealer = ActiveCell.Offset(0, -1).Value
               
               'checks if there is a hash on the left of the Stock entry
               If Left(StockDealer, 1) = "#" Then
                    CellEntryLength = Len(StockDealer) - 1
                    StockDealer = Right(StockDealer, CellEntryLength)
               End If
               
               Sheets("Dealer").Select
               Range("A1").Select
        
               Do Until ActiveCell.Row = RowCounter2
                   ActiveCell.Offset(1, 0).Range("A1").Select
                   If ActiveCell.Value = StockDealer Then
                       OriginalEngineDealer = ActiveCell.Offset(0, 21).Range("A1").Value
                   End If
               Loop
               
               Sheets("InhouseResults").Select
               ActiveCell.Value = OriginalEngineDealer
               
            End If
               
        Loop
     
End Sub

Sub RemoveRowsDealer()
'Copyright 2003 AIMS P/L
'All rights reserved
    
    'removes rows where the amount value is zero
    
    Range("C2").Select
    'will stay in loop until the active cell, and the cell 2 to the left are both blank
        Do Until ActiveCell.Value = "" And ActiveCell.Offset(0, -2).Value = ""
            If ActiveCell.Value = "0" Or ActiveCell.Value = "" Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(-1, 0).Range("A1").Select
            Else
                ActiveCell.Offset(1, 0).Range("A1").Select
            End If
        Loop
        
End Sub

Sub RemoveRowsFinancier()
'Copyright 2003 AIMS P/L
'All rights reserved
    
    'removes rows where the amount value is zero
    
    Range("K2").Select
    'will stay in loop until the active cell, and some cells to the left are also blank
        Do Until ActiveCell.Value = "" And ActiveCell.Offset(0, -6).Value = "" _
            And ActiveCell.Offset(0, -7).Value = "" And ActiveCell.Offset(0, -8).Value = "" _
            And ActiveCell.Offset(0, -9).Value = ""
            If ActiveCell.Value = "0" Or ActiveCell.Value = "" Then
                Selection.EntireRow.Delete
                ActiveCell.Offset(-1, 0).Range("A1").Select
            Else
                ActiveCell.Offset(1, 0).Range("A1").Select
            End If
        Loop
        
End Sub

Attribute VB_Name = "VolksWagenConversion"
Option Private Module
Sub ImportBailVolkswagen()
'Copyright 2004 AIMS P/L
'All rights reserved

    Workbooks.Open Filename:=FnameFinancier
    
    ActiveFile = ActiveWorkbook.Name
    
    'renames the first worksheet
    Worksheets.Item(1).Name = "BAIL"
    
    'copies the data sheet from the BAIL.csv file, then closes BAIL.csv
    Sheets("Bail").Copy Before:=Workbooks(FileNameVar).Sheets(1)
    Windows(ActiveFile).Activate
    
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
    
    '----------------------------------------
       
    'file compatibility checks for Volkswagen
    If Trim(Range("A1").Value) <> "Unit No." Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("C1").Value) <> "VIN No." Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("D1").Value) <> "Engine No." Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("E1").Value) <> "Dlr Stock No." Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("H1").Value) <> "WS. Price" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    If Trim(Range("I1").Value) <> "Payout" Then
        Call ErrorAlertCompatibilityFinancier
    End If
    
    '-----------------------------------------
       
    'done below to check if Rex Gorell Ford Pty Ltd are being naughty
    If DealershipName = "Rex Gorell Ford Pty Ltd" Then
            Call ErrorAlertCompatibilityWrongDealer
    End If
    
    '----------------------------------------
    
    'does the column manipluation stuff
    Columns("A:A").Select
    Selection.Insert Shift:=xlToRight
    Range("E:E,G:I").Select
    Selection.Delete Shift:=xlToLeft
    Columns("F:J").Select
    Selection.Insert Shift:=xlToRight
    Columns("L:R").Select
    Selection.Delete Shift:=xlToLeft
    
    '-----------------------------------------
    
    'inserts a space to the left of each entry in the date range (i.e. to allow for data formatting issue)
    Range("C1").Select
    Range(Selection, Selection.End(xlDown)).Select
    
    For Each cell In Selection
    If Not cell.HasFormula Then
        'cell.Value = Chr(149) & " " & cell.Value
        cell.Value = " " & cell.Value
    End If
    Next cell

    'types the column headings
    Range("A1").Value = "Location #"
    Range("B1").Value = "Bailment #"
    Range("C1").Value = "Date"
    Range("D1").Value = "Chassis/VIN#"
    Range("E1").Value = "Stock#"
    Range("F1").Value = "Make"
    Range("G1").Value = "Model"
    Range("H1").Value = "Type"
    Range("I1").Value = "Rego #"
    Range("J1").Value = "Orig Bail #"
    Range("K1").Value = "CURRENT BALANCE"

    'removes any spaces that sometimes are inserted at the right hand side of the entry
    Columns("E:E").Select
    Selection.Insert Shift:=xlToRight
    Columns("D:D").Select
    Selection.TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(1, 1)
    Columns("E:E").Select
    Selection.Delete Shift:=xlToLeft
    
    On Error GoTo NoBlankRows
        'deletes rows where amount is left blank
        Columns("K:K").Select
        Selection.SpecialCells(xlCellTypeBlanks).Select
        Selection.EntireRow.Delete
    On Error GoTo 0
NoBlankRows:
    
    'takes the initial VIN # column and stores in column V
    Columns("D:D").Select
    Selection.Copy
    Columns("V:V").Select
    ActiveSheet.Paste
    
    Call RemoveRowsFinancier 'calls a routine which deletes rows where amounts are zero
    
    'takes off the GST amount from the values if the GST is inclusive
    If frmMainScreen.optGST1.Value = True Then
        Range("K2").Select
        Range(Selection, Selection.End(xlDown)).Select
        For Each cell In Selection
        If Not cell.HasFormula Then
            cell.Value = cell.Value - Round((cell.Value / 11), 2)
        End If
        Next cell
    End If
    
    'counts the number of bailment entries for the ending label
    Range("K2").Select
    Selection.End(xlDown).Select
    BailmentEntriesVar = ActiveCell.Row - 1 'allows for the column names
    Range("Z1").Value = BailmentEntriesVar
    ActiveWorkbook.Names.Add Name:="BailmentEntriesVar", RefersToR1C1:= _
        "=Bail!R1C26" 'cell Z1 Bail sheet
        
    'appends a "VW-" to the left of each cell entry
    'this is so the stock is not used in the matching process
    'because with this financier it can cause problems because they use the last 6 characters
    'for their stock number
    'note that the stock number matching is done before the VIN matching
    Range("E2:E" & BailmentEntriesVar + 1).Select
    For Each cell In Selection
        cell.Value = "VW-" & cell.Value
    Next cell
    
    'removes gunk from the stock entries
    Columns("F:F").Select
    Selection.Insert Shift:=xlToRight
    Columns("E:E").Select
    Selection.TextToColumns Destination:=Range("E1"), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=True, Tab:=False, Semicolon _
        :=False, Comma:=False, Space:=True, Other:=False, FieldInfo:=Array( _
        Array(1, 1), Array(2, 1))
    Columns("F:F").Select
    Selection.Delete Shift:=xlToLeft
         
    'copies the original sheet and names it "Original Bail Data"
    Sheets("BAIL").Copy Before:=Sheets(1)
    Sheets("BAIL (2)").Select
    Sheets("BAIL (2)").Name = "Original Bail Data"
    
End Sub

Attribute VB_Name = "frmMainScreen"
Attribute VB_Base = "0{CD47691C-1196-4BE1-A969-1229658C2421}{6791D8DD-5FFC-4531-9CED-919FD473FE4A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub cmdHelp1_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

    frmMainScreen.txtHelp1.Visible = True
    
    newHour = Hour(Now())
    newMinute = Minute(Now())
    newSecond = Second(Now()) + 30
    waitTime = TimeSerial(newHour, newMinute, newSecond)
    
    Application.Wait waitTime
    
    frmMainScreen.txtHelp1.Visible = False
    
End Sub

Private Sub cmdHelp2_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

    frmMainScreen.txtHelp2.Visible = True
    
    newHour = Hour(Now())
    newMinute = Minute(Now())
    newSecond = Second(Now()) + 30
    waitTime = TimeSerial(newHour, newMinute, newSecond)
    
    Application.Wait waitTime
    
    frmMainScreen.txtHelp2.Visible = False
    
End Sub

Private Sub cmdHelp3_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

    'hides the report options frame
    frmMainScreen.frmReportOptions.Visible = False
    'hides the date frame
    frmMainScreen.frmDate.Visible = False
    
    frmMainScreen.txtHelp3.Visible = True
    
    newHour = Hour(Now())
    newMinute = Minute(Now())
    newSecond = Second(Now()) + 60
    waitTime = TimeSerial(newHour, newMinute, newSecond)
    
    Application.Wait waitTime
    
    frmMainScreen.txtHelp3.Visible = False
    
    'displays the report options frame
    frmMainScreen.frmReportOptions.Visible = True
    'displays the date frame
    frmMainScreen.frmDate.Visible = True
    
End Sub

Private Sub cmdHelp4_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

frmMainScreen.txtHelp4.Visible = True
    
    newHour = Hour(Now())
    newMinute = Minute(Now())
    newSecond = Second(Now()) + 30
    waitTime = TimeSerial(newHour, newMinute, newSecond)
    
    Application.Wait waitTime
    
    frmMainScreen.txtHelp4.Visible = False

End Sub

Private Sub optBMW_Click()
    If VersionSelection = "DemoCopy" Then
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        frmMainScreen.frmGST.Enabled = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        'selects the GST exclusive option
        optGST2.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optBMW = False
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        'selects the GST exclusive option to allow for demo
        'optGST2.Value = True
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    
'    If DealershipName = "Bayford Group Pty Ltd" Or DealershipName = "Trivett Classic - Parramatta" Then
'        'hides the Ford/Primus/BMW GST frame for this dealership because of the concatenation involved
'        frmMainScreen.frmGST.Visible = False
'    End If
    
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    'selects the GST exclusive option
    'optGST2.Value = True
End Sub

Private Sub optEsanda_Click()
    If VersionSelection = "DemoCopy" Then
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optEsanda = False
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
End Sub

Private Sub optFord_Click()
    If VersionSelection = "DemoCopy" Then
        'displays the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = True
        frmMainScreen.frmGST.Enabled = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        'selects the GST exclusive option
        optGST2.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optFord = False
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        Exit Sub
    End If
    'displays the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = True
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    'selects the GST exclusive option
    optGST2.Value = True
End Sub

Private Sub optMacquarie_Click()
    If VersionSelection = "DemoCopy" Then
        'displays the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = True
        frmMainScreen.frmGST.Enabled = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        'selects the GST exclusive option
        optGST2.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optMacquarie = False
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        Exit Sub
    End If
    'displays the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = True
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    'selects the GST exclusive option
    optGST2.Value = True
End Sub

Private Sub optNissan_Click()
    If VersionSelection = "DemoCopy" Then
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optGE = False
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
End Sub

Private Sub optGE_Click()
    If VersionSelection = "DemoCopy" Then
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optGE = False
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
End Sub

Private Sub optGMAC_Click()
    If VersionSelection = "DemoCopy" Then
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optGMAC = False
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
End Sub

Private Sub optPrimus_Click()
    If VersionSelection = "DemoCopy" Then
        'displays the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = True
        frmMainScreen.frmGST.Enabled = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        'selects the GST exclusive option
        optGST2.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optPrimus = False
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        Exit Sub
    End If
    'displays the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = True
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    'selects the GST exclusive option
    optGST2.Value = True
End Sub

Private Sub optStGeorge_Click()
    If VersionSelection = "DemoCopy" Then
        'displays the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = True
        frmMainScreen.frmGST.Enabled = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        'selects the GST exclusive option
        optGST2.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optStGeorge = False
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        Exit Sub
    End If
    'displays the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = True
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    'selects the GST exclusive option
    optGST2.Value = True
End Sub

Private Sub optToyota_Click()
    If VersionSelection = "DemoCopy" Then
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        'displays the Toyota report frame
        frmMainScreen.frmReportType.Visible = True
        frmMainScreen.frmReportType.Enabled = False
        'selects the floorplan register option
        optFloorplanReg.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optToyota = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    'displays the Toyota report frame
    frmMainScreen.frmReportType.Visible = True
    'selects the floorplan register option
    optFloorplanReg.Value = True
End Sub

Private Sub optCapital_Click()
    If VersionSelection = "DemoCopy" Then
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optCapital = False
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
End Sub

Private Sub optVolkswagen_Click()
    If VersionSelection = "DemoCopy" Then
        'displays the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = True
        frmMainScreen.frmGST.Enabled = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        'selects the GST inclusive option
        optGST1.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optVolkswagen = False
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        Exit Sub
    End If
    'displays the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = True
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    'selects the GST inclusive option
    optGST1.Value = True
End Sub

Private Sub optDaimler_Click()
    If VersionSelection = "DemoCopy" Then
        'displays the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = True
        frmMainScreen.frmGST.Enabled = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
        'selects the GST exclusive option
        optGST2.Value = True
        '---------------------
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optDaimler = False
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        Exit Sub
    End If
    'displays the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = True
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    'selects the GST exclusive option
    optGST2.Value = True
End Sub

Private Sub optUDC_Click()
    If VersionSelection = "DemoCopy" Then
        MsgBox "The financier selection option is reserved for registered members." & Chr(13) & Chr(13) & _
            "Simply click the [Next] button and open the two sample data files: " & Chr(13) & _
            "'SAMPLE FINANCIER FILE.txt' and 'SAMPLE DEALER FILE.csv'", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        optGE = False
        Exit Sub
    End If
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
End Sub

Private Sub UserForm_Initialize()
'Copyright 2003 AIMS P/L
'All rights reserved

    'Prevent users from breaking into macro execution
    Application.EnableCancelKey = xlDisabled
    
    'displays the needed controls/basic messages and financier list
    frmMainScreen.cmdNext1.Visible = True
    frmMainScreen.txtStep1.Visible = True
    
    'displays needed help buttons and the help text boxes
    frmMainScreen.cmdHelp1.Visible = True
    
    'hides unneeded controls/basic messages
    frmMainScreen.cmdNext2.Visible = False
    frmMainScreen.txtStep2.Visible = False
    frmMainScreen.cmdNext3.Visible = False
    frmMainScreen.txtStep3.Visible = False
    frmMainScreen.cmdNext4.Visible = False
    frmMainScreen.txtStep4.Visible = False
    frmMainScreen.cmdFinish.Visible = False
    frmMainScreen.txtStep5.Visible = False
    
    'hides date frame
    frmMainScreen.frmDate.Visible = False
    
    'hides the Toyota report frame
    frmMainScreen.frmReportType.Visible = False
    
    'hides the Ford/Primus/BMW GST frame
    frmMainScreen.frmGST.Visible = False
    
    'hides the print options report type frame
    frmMainScreen.frmReportOptions.Visible = False
       
    'hides unneeded help buttons and the help text boxes
    frmMainScreen.cmdHelp2.Visible = False
    frmMainScreen.cmdHelp3.Visible = False
    frmMainScreen.cmdHelp4.Visible = False
    
    frmMainScreen.txtHelp1.Visible = False
    frmMainScreen.txtHelp2.Visible = False
    frmMainScreen.txtHelp3.Visible = False
    frmMainScreen.txtHelp4.Visible = False
    
End Sub
Private Sub cmdNext1_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

GSTSelection = frmMainScreen.frmGST
ReportType = frmMainScreen.frmReportType

frmMainScreen.cmdNext1.Visible = False
frmMainScreen.txtStep1.Visible = False
frmMainScreen.cmdHelp1.Visible = False

'frmMainScreen.cmdClose.Visible = False
frmMainScreen.cmdClose.Enabled = False

StartFinancier:

'checks to see if running the demo
If VersionSelection = "DemoCopy" Then
    ListSelection = "Financier Name"
    'ensures correct file types are displayed
    FnameFinancier = Application.GetOpenFilename(("(Text Files) (*.txt),*.txt"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
    If UCase(Right(FnameFinancier, 3)) <> UCase("txt") Then
        GoTo ErrorWithFilenameSelection
    Else
        GoTo OKWithFilenameSelection
    End If
End If

'------------------------

    If optFord = True Then
        ListSelection = "Ford Credit"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("(SYLK Files) (*.slk),*.slk"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("slk") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
        
    ElseIf optPrimus = True Then
        ListSelection = "Primus Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("(SYLK Files) (*.slk),*.slk"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("slk") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
        
    ElseIf optMacquarie = True Then
        ListSelection = "Macquarie Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("(SYLK Files) (*.slk),*.slk"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("slk") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
        
    ElseIf optNissan = True Then
        ListSelection = "Nissan Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
'        If UCase(Right(FnameFinancier, 3)) <> UCase("xls") Then
'            GoTo ErrorWithFilenameSelection
'        Else
            GoTo OKWithFilenameSelection
'        End If
        
    ElseIf optGE = True Then
        ListSelection = "GE Auto. Financial Serv."
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("csv") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
        
    ElseIf optStGeorge = True Then
        ListSelection = "St George Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
'        If UCase(Right(FnameFinancier, 3)) <> UCase("xls") Then
'            GoTo ErrorWithFilenameSelection
'        Else
            GoTo OKWithFilenameSelection
        'End If
   
    ElseIf optGMAC = True Then
        ListSelection = "GMAC Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("csv") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
    
    ElseIf optEsanda = True Then
        ListSelection = "Esanda Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("csv") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
        
    ElseIf optToyota = True Then
        ListSelection = "Toyota Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
'        If UCase(Right(FnameFinancier, 3)) <> UCase("xls") Then
'            GoTo ErrorWithFilenameSelection
'        Else
            GoTo OKWithFilenameSelection
'        End If
        
    ElseIf optBMW = True Then
        ListSelection = "BMW Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
'        If UCase(Right(FnameFinancier, 3)) <> UCase("xls") Then
'            GoTo ErrorWithFilenameSelection
'        Else
            GoTo OKWithFilenameSelection
        'End If
        
    ElseIf optCapital = True Then
        ListSelection = "Capital Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("csv") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
        
    ElseIf optVolkswagen = True Then
        ListSelection = "VW Financial Services"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
'        If UCase(Right(FnameFinancier, 3)) <> UCase("xls") Then
'            GoTo ErrorWithFilenameSelection
'        Else
            GoTo OKWithFilenameSelection
        'End If
        
    ElseIf optDaimler = True Then
        ListSelection = "Mercedes Benz"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
'        If UCase(Right(FnameFinancier, 3)) <> UCase("xls") Then
'            GoTo ErrorWithFilenameSelection
'        Else
            GoTo OKWithFilenameSelection
        'End If
        
    ElseIf optUDC = True Then
        ListSelection = "UDC Finance"
        'ensures correct file types are displayed
        FnameFinancier = Application.GetOpenFilename(("Text Files (*.txt), *.txt"), , "AIMS P/L: Please select your " & "[" & ListSelection & "]" & " data file.", , False)
        If UCase(Right(FnameFinancier, 3)) <> UCase("txt") Then
            GoTo ErrorWithFilenameSelection
        Else
            GoTo OKWithFilenameSelection
        End If
        
    Else
        MsgBox "Please select your financier.", vbCritical, "AIMS P/L: Floorplan Reconciler"
        frmMainScreen.cmdNext1.Visible = True
        frmMainScreen.txtStep1.Visible = True
        frmMainScreen.cmdHelp1.Visible = True
        
        'frmMainScreen.cmdClose.Visible = True
        frmMainScreen.cmdClose.Enabled = True
        Exit Sub
    End If
    
'------------------------

'employ this in case they type a filename that dialog box doesn't display
ErrorWithFilenameSelection:

            MsgBox "No [" & ListSelection & "] data file was selected." & Chr(13) & Chr(13) _
                , vbOKOnly + vbCritical, "AIMS P/L: Floorplan Reconciler"
                
            'deselects the financier options
            optFord = False
            optPrimus = False
            optMacquarie = False
            optNissan = False
            optGE = False
            optStGeorge = False
            optGMAC = False
            optEsanda = False
            optToyota = False
            optBMW = False
            optCapital = False
            optVolkswagen = False
            optDaimler = False
            optUDC = False
            
            'hides the Ford/Primus/BMW GST frame
            frmMainScreen.frmGST.Visible = False
            'hides the Toyota report frame
            frmMainScreen.frmReportType.Visible = False
            
            frmMainScreen.cmdNext1.Visible = True
            frmMainScreen.txtStep1.Visible = True
            frmMainScreen.cmdHelp1.Visible = True
            
            'frmMainScreen.cmdClose.Visible = True
            frmMainScreen.cmdClose.Enabled = True
                
            Exit Sub
        
'employ this when they type a filename that dialog box does display
OKWithFilenameSelection:

        If FnameFinancier = False Or Right(FnameFinancier, 24) = FileNameVar Then
            GoTo ErrorWithFilenameSelection
        End If
       
        Response = MsgBox("[" & FnameFinancier & "]" & Chr(13) _
        & "is the [" & ListSelection & "] data file you selected." & Chr(13) & Chr(13) & _
        "Is this correct?" _
         , vbYesNo + vbQuestion, "AIMS P/L: Floorplan Reconciler")
         
        If Response = vbYes Then
            MsgBox "You must now select your [In-house] data file." & Chr(13) & Chr(13) _
            , vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        Else
            GoTo StartFinancier
        End If

StartDealer:

'checks to see if running the demo
If VersionSelection = "DemoCopy" Then
    'ensures correct file types are displayed
    FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
    If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
            GoTo ErrorWithFilenameInhouseSelection
    Else
        GoTo OKWithFilenameInhouseSelection
    End If
End If

'------------------------

Select Case InhouseSystem    'Evaluate inhouse constant - I set in mainproc
    
    'ensures correct file types are displayed (REYNOLDS AND REYNOLDS)
    Case "Reynolds"
        FnameInhouse = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your [In-house] data file.", , False)
'        If UCase(Right(FnameInhouse, 3)) <> UCase("xls") Or UCase(Right(FnameInhouse, 4)) <> UCase("xlsx") Then
'            GoTo ErrorWithFilenameInhouseSelection
'        Else
            GoTo OKWithFilenameInhouseSelection
'        End If
        
    'ensures correct file types are displayed (REYNOLDS AND REYNOLDS - Universal)
    Case "Universal"
        FnameInhouse = Application.GetOpenFilename(("Microsoft Excel Files (*.xls*),*.xls*"), , "AIMS P/L: Please select your [In-house] data file.", , False)
'        If UCase(Right(FnameInhouse, 3)) <> UCase("xls") Or UCase(Right(FnameInhouse, 4)) <> UCase("xlsx") Then
'            GoTo ErrorWithFilenameInhouseSelection
'        Else
            GoTo OKWithFilenameInhouseSelection
'        End If
                
    'ensures correct file types are displayed (Kerridge Midas)
    Case "Kerridge Midas"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
                GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'ensures correct file types are displayed
    Case "Autoline"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
                GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
            
    'ensures correct file types are displayed (INFOMEDIA)
    Case "Infomedia"
        FnameInhouse = Application.GetOpenFilename(("(Text Files) (*.txt),*.txt"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("txt") Then
                GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
                
    'ensures correct file types are displayed (CFS)
    Case "CFS"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
                GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
    
    'ensures correct file types are displayed (CFSq)
    Case "CFSq"
         FnameInhouse = Application.GetOpenFilename(("Microsoft Excel Files (*.xls),*.xls"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("xls") Then
            GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'ensures correct file types are displayed (Preston Motors System)
    Case "Preston"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
                GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'ensures correct file types are displayed (PMDS version of Auto-IT)
    Case "PMDS version of Auto-IT"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
                GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'ensures correct file types are displayed (Units)
    Case "UnitsNew"
        FnameInhouse = Application.GetOpenFilename(("Microsoft Excel Files (*.xls),*.xls"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("xls") Then
            GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'ensures correct file types are displayed (Units)
    Case "Units"
        FnameInhouse = Application.GetOpenFilename(("Microsoft Excel Files (*.xls),*.xls"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("xls") Then
            GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
         
    'ensures correct file types are displayed (Revolution With Toyota Files)
    Case "RevolutionWithToyotaAndFord"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
            GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'ensures correct file types are displayed (Revolution With Other Files)
    Case "Revolution"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
            GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'ensures correct file types are displayed (Dealer2)
    Case "Dealer2"
        FnameInhouse = Application.GetOpenFilename(("CSV (Comma delimited) (*.csv),*.csv)"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("csv") Then
                GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
                
    'ensures correct file types are displayed (DoneForBibStillwell)
    Case "DoneForBibStillwell"
        FnameInhouse = Application.GetOpenFilename(("Microsoft Excel Files (*.xls),*.xls"), , "AIMS P/L: Please select your [In-house] data file.", , False)
        If UCase(Right(FnameInhouse, 3)) <> UCase("xls") Then
            GoTo ErrorWithFilenameInhouseSelection
        Else
            GoTo OKWithFilenameInhouseSelection
        End If
        
    'Case Else

End Select

'-----------------------
    
'employ this in case they type a filename that dialog box doesn't display
ErrorWithFilenameInhouseSelection:

        MsgBox "No [In-house] data file was selected." & Chr(13) & Chr(13) _
            , vbOKOnly + vbCritical, "AIMS P/L: Floorplan Reconciler"

        'deselects the financier options
        optFord = False
        optPrimus = False
        optMacquarie = False
        optNissan = False
        optGE = False
        optStGeorge = False
        optGMAC = False
        optEsanda = False
        optToyota = False
        optBMW = False
        optCapital = False
        optVolkswagen = False
        optDaimler = False
        optUDC = False
        
        'hides the Ford/Primus/BMW GST frame
        frmMainScreen.frmGST.Visible = False
        'hides the Toyota report frame
        frmMainScreen.frmReportType.Visible = False
            
        frmMainScreen.cmdNext1.Visible = True
        frmMainScreen.txtStep1.Visible = True
        frmMainScreen.cmdHelp1.Visible = True
        
        'frmMainScreen.cmdClose.Visible = True
        frmMainScreen.cmdClose.Enabled = True
        
        Exit Sub
    
    'employ this when they type a filename that dialog box does display
OKWithFilenameInhouseSelection:

        'error trapping if program name or cancel is selected
        If FnameInhouse = False Or Right(FnameInhouse, 24) = FileNameVar Then
            GoTo ErrorWithFilenameInhouseSelection
        End If
        
        Response = MsgBox("[" & FnameInhouse & "]" & Chr(13) _
        & "is the [In-house] data file you selected." & Chr(13) & Chr(13) & _
        "Is this correct?" _
         , vbYesNo + vbQuestion, "AIMS P/L: Floorplan Reconciler")
         
        If Response = vbNo Then
            GoTo StartDealer
        End If
    
        MsgBox "[" & FnameFinancier & "]" & " and" & Chr(13) & "[" & FnameInhouse & "]" & Chr(13) & "are the data files you selected." _
         , vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"

frmMainScreen.frmFinancierList.Visible = False
frmMainScreen.cmdNext2.Visible = True
frmMainScreen.txtStep2.Visible = True
frmMainScreen.cmdHelp2.Visible = True

'frmMainScreen.cmdClose.Visible = True
frmMainScreen.cmdClose.Enabled = True

End Sub

Private Sub cmdNext2_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

frmMainScreen.cmdNext2.Visible = False
frmMainScreen.txtStep2.Visible = False
frmMainScreen.cmdHelp2.Visible = False

'hides the Toyota report frame
frmMainScreen.frmReportType.Visible = False
'hides the GST frame
frmMainScreen.frmGST.Visible = False
'hides the financier list frame
frmMainScreen.frmFinancierList.Visible = False

'frmMainScreen.cmdClose.Visible = False
frmMainScreen.cmdClose.Enabled = False

frmWaitScreen.Show

frmMainScreen.cmdNext3.Visible = True
frmMainScreen.txtStep3.Visible = True
frmMainScreen.cmdHelp3.Visible = True

'frmMainScreen.cmdClose.Visible = True
frmMainScreen.cmdClose.Enabled = True

'hides the financier list
frmFinancierList.Visible = False

'displays the Date frame
frmMainScreen.frmDate.Visible = True
    
'sets format for text box
txtDate.Value = Format(Now, "dd/mmm/yyyy")

'displays the print options report type frame
frmMainScreen.frmReportOptions.Visible = True

'selects the Consolidated Report type option
frmMainScreen.optConsolidated = True

End Sub

Private Sub cmdNext3_Click()
'Copyright 2003 AIMS P/L
'All rights reserved
    
    frmMainScreen.cmdNext3.Visible = False
    frmMainScreen.txtStep3.Visible = False
    frmMainScreen.cmdHelp3.Visible = False
    
    frmMainScreen.frmDate.Visible = False
    
    'hides the print options report type frame
    frmMainScreen.frmReportOptions.Visible = False
   
    'frmMainScreen.cmdClose.Visible = False
    frmMainScreen.cmdClose.Enabled = False
    
    Application.StatusBar = "Printing in progress !"
    
    '--------------
    'sets all labels and dates in all three reports for Electronic extract
    Sheets("FinancierResults").Range("E3").Value = txtDate.Value
    Sheets("FinancierResults").Range("A4").Value = "Variances to the " & DealershipName & " records"
    Sheets("InhouseResults").Range("D3").Value = txtDate.Value
    Sheets("InhouseResults").Range("A4").Value = "Variances to the " & ListSelection & " records"
    Sheets("ConsolidatedResults").Range("F6").Value = txtDate.Value
    'this cell address moves depending on number of records inserted - hence the range name
    Sheets("ConsolidatedResults").Range("GLDateCell").Value = txtDate.Value
    '--------------
    
    'DO IF PRINTING BOTH REPORT TYPES
    If frmMainScreen.frmReportOptions.optBoth.Value = True Then
         'added for the new report
         Application.GoTo Reference:="PrintRange3"
         On Error Resume Next 'error trapping in case printer not installed
         Selection.PrintOut copies:=IncBox.Value, Collate:=True
         With ActiveSheet.PageSetup
            .PrintTitleRows = "$4:$4"
         End With
         On Error GoTo 0
         '--------------
                  
         Application.GoTo Reference:="PrintRange2"
         On Error Resume Next 'error trapping in case printer not installed
         Selection.PrintOut copies:=IncBox.Value, Collate:=True
         With ActiveSheet.PageSetup
            .PrintTitleRows = "$4:$4"
         End With
         On Error GoTo 0
         '--------------
        
         Application.GoTo Reference:="PrintRange1"
         On Error Resume Next 'error trapping in case printer not installed
         Selection.PrintOut copies:=IncBox.Value, Collate:=True
         With ActiveSheet.PageSetup
            .PrintTitleRows = "$4:$4"
         End With
         On Error GoTo 0
    End If
    
    'DO IF PRINTING THE CONSOLIDATED LISTING
    If frmMainScreen.frmReportOptions.optConsolidated.Value = True Then
         'added for the new report
         Application.GoTo Reference:="PrintRange3"
         On Error Resume Next 'error trapping in case printer not installed
         Selection.PrintOut copies:=IncBox.Value, Collate:=True
         With ActiveSheet.PageSetup
            .PrintTitleRows = "$4:$4"
         End With
         On Error GoTo 0
    End If
    
    'DO IF PRINTING THE SEPARATE LISTINGS
    If frmMainScreen.frmReportOptions.optSeparate.Value = True Then
    
        Application.GoTo Reference:="PrintRange2"
        On Error Resume Next 'error trapping in case printer not installed
        Selection.PrintOut copies:=IncBox.Value, Collate:=True
        With ActiveSheet.PageSetup
            .PrintTitleRows = "$4:$4"
         End With
         On Error GoTo 0
        '--------------
        
        Application.GoTo Reference:="PrintRange1"
        On Error Resume Next 'error trapping in case printer not installed
        Selection.PrintOut copies:=IncBox.Value, Collate:=True
        With ActiveSheet.PageSetup
            .PrintTitleRows = "$4:$4"
        End With
        On Error GoTo 0
    End If
    
    'DO IF DO NOT PRINT
    If frmMainScreen.frmReportOptions.optDoNotPrint.Value = True Then
       GoTo NoPrint
    End If
     
    Application.GoTo Reference:="ASSERTEC"
       
    Application.StatusBar = "Printing complete !"
    
    MsgBox "Your reconciliation results are sent to the printer." _
     , vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
    
NoPrint:
        
    Application.StatusBar = False
    
    frmMainScreen.cmdNext4.Visible = True
    frmMainScreen.txtStep4.Visible = True
    frmMainScreen.cmdHelp4.Visible = True
    
    'frmMainScreen.cmdClose.Visible = True
    frmMainScreen.cmdClose.Enabled = True
    
End Sub

Private Sub cmdNext4_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

    frmMainScreen.cmdNext4.Visible = False
    frmMainScreen.txtStep4.Visible = False
    frmMainScreen.cmdHelp4.Visible = False
    
    frmMainScreen.cmdClose.Visible = False
    
    Application.StatusBar = "Saving in progress !"
    
    'removes columns where ranges of data exist
    Columns("AA:AZ").Delete
    
    'sets extract filename with today's date as a suffix
    XlsFileName = XlsFileNameConst & Format(Now, "DD-MMM-YYYY") & ".xls"
          
        'Sheets(Array("FinancierResults", "InhouseResults")).Copy
        Sheets(Array("FinancierResults", "InhouseResults", "ConsolidatedResults")).Copy 'added for the new report
                         
        'removes the formula from E3
        Range("E3").Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
            
        Application.CutCopyMode = False
        
        Range("A1").Select
                        
        'ensures good extract location
        ActiveWindow.ScrollColumn = 1
        'zooms the printout sheet
        ActiveWindow.Zoom = 95
                
        Sheets("FinancierResults").Activate
        'removes the formula from F3
        Range("F3").Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
            
        Application.CutCopyMode = False
        
        Range("A1").Select
        
        'ensures good extract location
        ActiveWindow.ScrollColumn = 1
        'zooms the printout sheet
        ActiveWindow.Zoom = 95
        
        '---------------------
        '---------------------
        'added for new report REMMED OUT FOR NOW
        Sheets("ConsolidatedResults").Activate
'        'removes the formula from E3
'        Range("E3").Select
'        Selection.Copy
'        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
'            False, Transpose:=False
'
'        Application.CutCopyMode = False
        
        Range("A1").Select
       
        'ensures good extract location
        ActiveWindow.ScrollColumn = 1
        'zooms the printout sheet
        ActiveWindow.Zoom = 95
        '----------------------
        '----------------------
               
        'removes all range names from the extract
        For Each nmeHolder In ActiveWorkbook.Names
            'MsgBox nmeHolder.Name
            nmeHolder.Delete
        Next nmeHolder
                
        'prevents users from selecting and copying data within a worksheet - kept for future reference
'        Sheets("InhouseResults").EnableSelection = xlUnlockedCells
'        Sheets("FinancierResults").EnableSelection = xlUnlockedCells

        'works like Tools - Protection - Protect Worksheet
        Sheets("InhouseResults").Protect "EXTRACT2000"
        Sheets("FinancierResults").Protect "EXTRACT2000"
        Sheets("ConsolidatedResults").Protect "EXTRACT2000"
        'works like Tools - Protection - Protect Workbook
        ActiveWorkbook.Protect "EXTRACT2000"
         
        On Error Resume Next
        
        XlsFileName = Application.GetSaveAsFilename(XlsFileName, "Microsoft Excel Files (*.xls),*.xls", FilterIndex, "AIMS P/L: Please enter your extract file name.", ButtonText)
        
        'deletes any file that exists with the same name
        Kill XlsFileName
        
        ActiveWorkbook.SaveAs Filename:=XlsFileName _
        , FileFormat:=xlNormal, Password:="", WriteResPassword:="", _
        ReadOnlyRecommended:=False, CreateBackup:=False

        ActiveWorkbook.Close
        
        On Error GoTo 0
        
        Application.StatusBar = False
    
    frmMainScreen.txtStep5.Visible = True
    frmMainScreen.cmdFinish.Visible = True
     
End Sub

Sub cmdFinish_click()
'Copyright 2003 AIMS P/L
'All rights reserved

    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
    
    MsgBox "Your reconciliation results are saved to: " _
    & Chr(13) & "[" & XlsFileName & "]", vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
    
    KillBeforeClose
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
    
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
         
    'will close file without saving any changes
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
'Copyright 2003 AIMS P/L
'All rights reserved
    
    'Prevent user from closing with the Close box in the title bar.
    If CloseMode <> 1 Then Cancel = 1

'    'prevents screen from flickering
'    Application.ScreenUpdating = False
'
'    Application.GoTo Reference:="ASSERTEC"
'
''    'displays ending message
''    MsgBox "No reconciliation results are saved to disk." & Chr(13) & Chr(13) _
''        , vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
'
'     KillBeforeClose
'    'If VersionSelection = "DemoCopy" Then KillBeforeClose
'
'    Application.Cursor = xlDefault
'    Application.ScreenUpdating = True
'    Application.DisplayAlerts = True
'    Application.StatusBar = False
'    Application.CutCopyMode = False
'
'    'will close file without saving any changes
'    ActiveWorkbook.Saved = True
'    ActiveWorkbook.Close

End Sub

 Private Sub cmdClose_Click()
'Copyright 2003 AIMS P/L
'All rights reserved
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
  
'    'displays ending message
'    MsgBox "No reconciliation results are saved to disk." & Chr(13) & Chr(13) _
'        , vbOKOnly + vbInformation, "AIMS P/L: Floorplan Reconciler"
        
    KillBeforeClose
    'If VersionSelection = "DemoCopy" Then KillBeforeClose
        
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
          
    'will close file without saving any changes
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub

Private Sub IncSpin_Change()
'Copyright 2003 AIMS P/L
'All rights reserved

    'increments the IncBox number
    frmMainScreen.IncBox.Value = frmMainScreen.IncSpin.Value
    
End Sub

Attribute VB_Name = "frmStartUp"
Attribute VB_Base = "0{42D0E7DD-D902-4157-AA46-FD1768F26858}{13A1ECB7-11C9-4AAE-B534-95897CDDE5BF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub cmdAgree_Click()
'Copyright 2003 AIMS P/L
'All rights reserved
   
    frmStartUp.txtTermsAndConditions.Visible = False
    
    frmStartUp.cmdTerms.Visible = True
    frmStartUp.cmdAgree.Visible = False
    frmStartUp.txtUserName.Enabled = True
    frmStartUp.txtPassword.Enabled = True
    frmStartUp.cmdStart.Enabled = True
    
    frmStartUp.txtUserName.SetFocus
    
End Sub
Private Sub cmdTerms_Click()
'Copyright 2003 AIMS P/L
'All rights reserved
   
    frmStartUp.txtTermsAndConditions.Visible = True
    frmStartUp.txtTermsAndConditions.Locked = True
    frmStartUp.txtTermsAndConditions.SetFocus
    
    'frmStartUp.txtTermsAndConditions.Value = Application.Rept("sean" & vbLf, 10) - used for future reference
    'as it types in 10 lines of text into a text box
    
    frmStartUp.txtTermsAndConditions.SelStart = 0
    'goes to the staring location of the text box - works the same way as above - used for future reference
    'Application.SendKeys ("^{HOME}")
    frmStartUp.txtTermsAndConditions.ScrollBars = fmScrollBarsVertical
    
    frmStartUp.cmdAgree.Visible = True
    frmStartUp.txtUserName.Enabled = False
    frmStartUp.txtPassword.Enabled = False
    frmStartUp.cmdStart.Enabled = False

End Sub
Private Sub cmdContinue_Click()
'Copyright 2003 AIMS P/L
'All rights reserved
   
    Me.Hide
    frmMainScreen.Show
End Sub

Private Sub cmdRunDemonstration_Click()
'Copyright 2003 AIMS P/L
'All rights reserved

    frmStartUp.txtTermsAndConditions.Visible = False
    
    frmStartUp.cmdTerms.Visible = True
    frmStartUp.cmdAgree.Visible = False
    
    frmStartUp.txtUserName.Enabled = True
    frmStartUp.txtUserName.Value = ""
    
    frmStartUp.txtPassword.Enabled = True
    frmStartUp.txtPassword.Value = ""
    
    frmStartUp.cmdStart.Enabled = True
    
    'ensures this program has not been renamed
    'below are two ways ignore the case
    'if UCase("my fILENAME.XLS") = UCase(FileNameVar) then ...
    If UCase(ThisWorkbook.Name) <> UCase(FileNameVar) Then
        Call ErrorAlertProgramName
    End If
    
'    'checks what version of Office is installed
'    If Application.Version > 11 Then
'        Call ErrorAlertVersion2007
'    End If
       
    Response = MsgBox("Accompanying this demonstration are two sample data files." & Chr(13) & Chr(13) & _
    "'SAMPLE FINANCIER FILE.txt' - is equivalent to the data file you will receive from your dealership's financier," & Chr(13) & _
    "and 'SAMPLE DEALER FILE.csv' - is equivalent to the data file you can simply extract from your dealership's in-house accounting system." & Chr(13) & Chr(13) & _
    "These are the two files you will be asked to open and reconcile during this demonstration.", vbInformation + vbOKCancel, "AIMS P/L: Floorplan Reconciler")
         
    If Response = vbCancel Then
        frmStartUp.txtUserName.SetFocus
        Exit Sub
    End If
    
    '--------------------------------------------------
    
    VersionSelection = "DemoCopy"
    InhouseSystem = "DemoCopy"
    DealershipName = "Dealership Name"
    
    '--------------------------------------------------
    On Error Resume Next
        'changes to the demonstration folder
        ChDir "C:\AIMS_Floorplan_Reconciler"
    On Error GoTo 0
    '--------------------------------------------------
   
    'works like Tools - Protection - Protect Worksheet
    Sheets("InhouseResults").Unprotect "KAREN21"
    Sheets("FinancierResults").Unprotect "KAREN21"
    Sheets("ConsolidatedResults").Unprotect "KAREN21"
    'works like Tools - Protection - Protect Workbook
    ActiveWorkbook.Unprotect "KAREN21"
    
    Me.Hide
    frmMainScreen.Show

End Sub

Private Sub cmdStart_Click()
'Copyright 2013 AIMS P/L
'All rights reserved

Dim MonthNumeric As Integer
MonthNumeric = 10

'------------------------------------------
                    
    'ensures this program has not been renamed
    If UCase(ThisWorkbook.Name) <> UCase(FileNameVar) Then
        Call ErrorAlertProgramName
    End If
    
'    'checks what version of Office is installed
'    If Application.Version > 11 Then
'        Call ErrorAlertVersion2007
'    End If
    
    '------------------------------------------------
        
    ConcatenatedUsernamePassword = frmStartUp.txtUserName.Text & "-" & frmStartUp.txtPassword.Text
    Select Case ConcatenatedUsernamePassword
    
    '1. validation for Alf Barbagallo Motors
    Case "jane@barbagallo.com.au-jNm22WxD"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Alf Barbagallo Motors"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '2. validation for Total Autos
    Case "rconnolly@totalautos.com.au-21xLR4nH"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Total Autos"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '3. validation for Northside Nissan
    Case "plittle@northsides.com.au-NKf226zL"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Northside Nissan"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '4. validation for Giant Autos
    Case "jthorn@giantautos.com.au-jt041081"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Giant Autos"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '5. validation for Wild West/Dual Autos
    Case "msheppard@ahg.com.au-d95w437Y"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Wild West"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '6. validation for Nuford P/L
    Case "tmatthews@nuford.com.au-nuford01"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Nuford P/L"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '7. validation for Big Rock Toyota
    Case "mmonteferrante@bigrocktoyota.com.au-p93w4Y4T"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Big Rock Toyota"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '8. validation for City Motors
    Case "fc@citymotors.com.au-citymotors2008"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "City Motors"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '9. validation for Grand Toyota
    Case "cconlan@grandtoyota.com.au-hoputo29"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Grand Toyota"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '10. validation for Chellingworth Motors
    Case "tnicholls@chellingworth.com.au-moser760"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Chellingworth Motors"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '11. validation for Southside Mitsubishi
     Case "jmitchell@southsidemitsubishi.com.au-sceatone123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southside Mitsubishi"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '12. validation for North City Holden
     Case "jnewell@northcityholden.com.au-AVF3342y"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "North City Holden"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '13. validation for WA Hino
     Case "sbumbak@wahino.com.au-WHN26LTZ"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "WA Hino"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '14. validation for Range Ford
     Case "trish@rangeford.com.au-rf272ord"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Range Ford"
        InhouseSystem = "Infomedia"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '15. validation for Power Ford
     Case "ljones@powerford.com.au-PWF27TX5"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Power Ford"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '16. validation for Cumberland Ford
     Case "ychand@cumberlandford.com.au-deepam123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Cumberland Ford"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '17. validation for Prestige Honda
     Case "admin@prestigehonda.com.au-PHonda555"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Prestige Honda"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '18. validation for Melville Subaru
     Case "admin@prestigehonda.com.au-MSubaru555"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Melville Subaru"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '19. validation for Melville Mazda
     Case "admin@prestigehonda.com.au-MMazda555"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Melville Mazda"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '20. validation for Gibbons Holden
     Case "helenb@prestige-honda.com.au-gHfjS32d"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Gibbons Holden"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '21. validation for Wanneroo Mazda
     Case "danielleg@wanneroomazda.com.au-WMT23YTD"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Wanneroo Mazda"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '22. validation for 'Sunshine Toyota'
     Case "admin@sunshinetoyota.com.au-SSYP78FP"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Sunshine Toyota"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '23. validation for 'Nunawading Toyota'
     Case "gbarrand@jeffersongroup.com.au-ntyq72ep"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Nunawading Toyota"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '24. validation for 'Brighton Holden'
     Case "david.deas@brightonholden.com.au-bhold456"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Brighton Holden"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '25. validation for 'John Hughes - New Vehicles'
     Case "sanjeevkaushik@johnhughes.com.au-johnhnew"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "John Hughes - New Vehicles"
        InhouseSystem = "Infomedia"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

'        'calls in a procedure that joins the 7 Esanda new vehicle files
'        Call ConcatenationJohnHughes

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '26. validation for 'John Hughes - Used Vehicles
     Case "sanjeevkaushik@johnhughes.com.au-johnhused"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "John Hughes - Used Vehicles"
        InhouseSystem = "Infomedia"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '27. validation for 'Pilbara Motor Group'
     Case "john.cicolari@pmg.pilbara.net-pmg7tv98"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Pilbara Motor Group"
        InhouseSystem = "RevolutionWithToyotaAndFord"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '28. validation for 'Adelaide Motors/BMW'
     Case "geoffreyc@adelaidemotors.com.au-coolen01"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Adelaide Motors"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '29. validation for 'Ralph D'Silva Holden'
     Case "michael@ralphdsilvaholden.com.au-RdS7jYw8"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Ralph D'Silva Holden"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '30. validation for 'Southern Classic Cars'
     Case "tim.koppel@southernclassiccars.com.au-MkLJpLx3"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southern Classic Cars"
        InhouseSystem = "Kerridge Midas"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '31. validation for 'City Automotive Group/City Subaru'
     Case "accountant@city-automotive.com.au-jA24pkw9"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "City Subaru"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '32. validation for 'Melbourne City Toyota'
     Case "nicole.sullivan@melbcitytoyota.com.au-mct27hqw"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Melbourne City Toyota"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '33. validation for 'Austral Honda/VW'
     Case "vwalker@australmotors.com.au-aus58hvw"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Austral Honda/VW"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '34. validation for 'Metro Ford'
     Case "gbagnall@metroford.com.au-bella2002"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Metro Ford"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '35. validation for 'Torque Ford'
     Case "scunningham@torqueford.com.au-tFY82gpy"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Torque Ford"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '36. validation for 'Southside Toyota'
     Case "asingh@southsidetoyota.com.au-StT33HVr"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southside Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '37. validation for 'Southside Honda'
     Case "dbrunjes@southsidetoyota.com.au-SHV2TB7X"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southside Honda"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '38. validation for 'Austral Motors'
     Case "vwalker@australmotors.com.au-aus57mot"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Austral Motors"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '39. validation for 'Tilford Group'
     Case "spalethorpe@tilford.com.au-TFG237VP"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Tilford Group"
        InhouseSystem = "PMDS version of Auto-IT"

        NewEsanda = "Yes" 'this is so that stripping of VINS and stock numbers won't be done

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '40. validation for 'Gary McMillan Toyota'
     Case "terry@garymcmillan.com.au-hecker0601"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Gary McMillan Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '41. validation for 'Brighton Toyota'
     Case "vincem@brightontoyota.com.au-BrtJL3y4"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Brighton Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '42. validation for 'John Newell Pty Ltd'
     Case "accounts@johnnewell.com.au-JNfgL7Y2"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "John Newell Pty Ltd"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '43. validation for 'Galleria Toyota'
     Case "sarab@galleriatoyota.com.au-sara3415"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Galleria Toyota"
        InhouseSystem = "RevolutionWithToyotaAndFord"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '44. validation for 'Scarboro Toyota'
     Case "dans@scarborotoyota.com.au-sty672hw"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Scarboro Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '45. validation for 'Auto Classic'
     Case "brian.read@autoclassic.com.au-AUXT243P"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Auto Classic"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '46. validation for 'Youngs Holden'
     Case "barry@youngsholden.com.au-YH44QWX7"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Youngs Holden"
        InhouseSystem = "Revolution"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '47. validation for 'Shacks Holden'
     Case "joanb@shacks.com.au-michael141252"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Shacks Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '48. validation for 'Rockingham Holden'
     Case "markz@shacks.com.au-emme0964"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Rockingham Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '49. validation for 'Solitaire Automotive'
     Case "jane.carrigan@solitaire.com.au-SOL82A4Y"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Solitaire Automotive"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '50. validation for 'Bayford Group Pty Ltd'
     Case "rkendrick@bayford.com.au-BF34473T"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Bayford Group Pty Ltd"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        'calls in a procedure that joins the 5 BMW files
        Call ConcatenationBayford

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '51. validation for 'Metro Motors'
     Case "nlarke@metromotors.com.au-nigel123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Metro Motors"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '52. validation for 'Metro Holden'
     Case "kmedhurst@plazaholden.com.au-MM24T2Y4"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Metro Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '53. validation for 'Plaza Holden'
     Case "kmedhurst@plazaholden.com.au-PH9R82Y5"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Plaza Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '54. validation for 'Grand Nissan'
     Case "kmedhurst@plazaholden.com.au-GN5W64T3"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Grand Nissan"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '55. validation for 'Jarvis Toyota'
     Case "amandao@jarviscars.com.au-JT5X24Y2"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Jarvis Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '56. validation for 'Jarvis Ford'
     Case "amandao@jarviscars.com.au-JF6T27C7"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Jarvis Ford"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show
            
     '57. validation for 'Jarvis Isuzu'
     Case "amandao@jarviscars.com.au-jarvis77"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Jarvis Isuzu"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show
        
     '58. validation for 'Jarvis Skoda'
     Case "amandao@jarviscars.com.au-jarvis78"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Jarvis Skoda"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '59. validation for 'Jarvis Suzuki'
     Case "amandao@jarviscars.com.au-jarvis79"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Jarvis Suzuki"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '60. validation for 'Young Motors Pty Ltd'
     Case "admin@youngmotors.com.au-ym3289qk"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Young Motors Pty Ltd"
        InhouseSystem = "Revolution"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '61. validation for 'Hunter Holden'
     Case "paul.sultana@hunterholden.com.au-HH54LP96"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Hunter Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '59. validation for 'Trivett Classic - Parramatta' - Used for a single reconciliation
     Case "onajder@trivett.com.au-TCP253WH"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Trivett Classic (Parramatta)"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '60. validation for 'Trivett Classic - Parramatta'
     Case "dcarter@trivett.com.au-TCP253WH"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Trivett Classic - Parramatta"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        'calls in a procedure that joins the 4 BMW files
        Call ConcatenationTrivett

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '61. validation for 'Jarvis Subaru'
     Case "amandao@jarviscars.com.au-JS9V2CC5"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Jarvis Subaru"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

'     '62. validation for 'Tony Ireland Group'
'     Case "tonyp@tonyireland.com.au-ti876ipw"
'        curDate = Date
'        If curDate > DateSerial(2013, MonthNumeric, 30) Then
'            Call Subwarning
'        End If
'
'        DealershipName = "Tony Ireland Group"
'        InhouseSystem = "Reynolds"
'
'        Call LogginMessage
'
'        If Response = vbCancel Then
'            Exit Sub
'        End If
'
'        Sheets("InhouseResults").Unprotect "KAREN21"
'        Sheets("FinancierResults").Unprotect "KAREN21"
'        Sheets("ConsolidatedResults").Unprotect "KAREN21"
'        ActiveWorkbook.Unprotect "KAREN21"
'
'        Me.Hide
'        frmMainScreen.Show

     '63. validation for 'Melville Mitsubishi' (Part of AHG)
     Case "dsprigg@melvillemitsubishi.com.au-ds297200"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Melville Mitsubishi"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '64. validation for 'Prestige Hino' - (Part of AHG, but based in Victoria)
     Case "mmonteferrante@prestigehino.com.au-ph873yfp"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Prestige Hino"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show


     '65. validation for 'Brighton Infiniti Porsche'
     Case "joehart@prestonmotors.com.au-bri234jh"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Brighton Infiniti Porsche"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '66. validation for 'Essendon Holden'
     Case "joehart@prestonmotors.com.au-ess234jh"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Essendon Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '67. validation for 'Epping Mitsubishi Suzuki Skoda'
     Case "joehart@prestonmotors.com.au-cam234jh"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Epping Mitsubishi Suzuki Skoda"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '68. validation for 'Kilmore Ford'
     Case "joehart@prestonmotors.com.au-kil234jh"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Kilmore Ford"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '69. validation for 'Dandenong Mitsubishi Hyundai'
     Case "joehart@prestonmotors.com.au-dan234jh"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Dandenong Mitsubishi Hyundai"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '70. validation for 'Canberra  Holden  Mitsubishi'
     Case "joehart@prestonmotors.com.au-can234jh"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Canberra  Holden  Mitsubishi"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '71. validation for 'New Oak Ford'
     Case "joehart@prestonmotors.com.au-new234jh"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "New Oak Ford"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '72. validation for 'Eagers Holden/Retail Pty Ltd'
     Case "aedmonds@eagers.com.au-holden2007"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Eagers Holden/Retail Pty Ltd"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '73. validation for 'Melville Holden'
     Case "gclarke@melvilleholden.com.au-mhd54fmb"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Melville Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '74. validation for 'Duncan Nissan'
     Case "accounts@duncannissan.com.au-duncan123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Duncan Nissan"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '75. validation for 'Torque Toyota'
     Case "scunningham@torqueford.com.au-tth84ghj"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Torque Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '76. validation for 'Trivett Classic Garage'
     Case "jmorrison@trivett.com.au-tcc28fhk"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Trivett Classic Garage"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '77. validation for 'Grand Motors Southport'
     Case "timu@grandmotors.com.au-gmg283hy"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Grand Motors Southport"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '78. validation for 'Performance Automobiles'
     Case "deve@pahobart.com.au-Dr666Evil"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Performance Automobiles"
        InhouseSystem = "Units"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '79. validation for 'Centenary Mazda'
     Case "khalid.manjra@centenary.com.au-centmaz123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Centenary Mazda"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '80. validation for 'Centenary Classic'
     Case "barry.harrod@centenary.com.au-Shannon219"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Centenary Classic"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '81. validation for 'Garry & Warren Smith - Oakleigh'
     Case "jennyh@gws.com.au-GWS784YO"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Garry & Warren Smith - Oakleigh"
        InhouseSystem = "Preston"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '82. validation for 'Garry & Warren Smith - Mazda'
     Case "taniab@gws.com.au-gwsm1234"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Garry & Warren Smith - Mazda"
        InhouseSystem = "Preston"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '83. validation for 'Hinterland Toyota'
     Case "jarrod.colman@hinterland.com.au-jarrod123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Hinterland Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '84. validation for 'Bunbury Toyota'
    Case "craig@bunburytoyota.com.au-BT52GYT4"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Bunbury Toyota"
        InhouseSystem = "RevolutionWithToyotaAndFord"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '85. validation for 'McGrath Liverpool'
    Case "dferguson@acmcgrath.com.au-mgp4529a"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "McGrath Liverpool"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '86. validation for 'Lander Motor Group (AKA McGrath Blacktown)'
    Case "rlal@lander.com.au-lander123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Lander Motor Group"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '87. validation for 'McGrath Sutherland'
    Case "janine@mcgraths.com.au-janine123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "McGrath Sutherland"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '88. validation for 'Zupps Mt Gravatt P/L'
     Case "gregp@zupps.com.au-zmg267h3"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Zupps Mt Gravatt P/L"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '89. validation for 'Zupps Aspley P/L'
     Case "pcampbell@zupps.com.au-zat247h6"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Zupps Aspley P/L"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '90. validation for 'Southeast Automotive Group P/L'
     Case "spriddey@zupps.com.au-bambie1984"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southeast Automotive Group P/L"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '91. validation for 'Southern Automotive Group P/L (Zupps Subaru - Mt Gravat)'
     Case "barryh@zupps.com.au-svg426kt"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southern Automotive Group P/L"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '92. validation for 'Southwest Automotive Group P/L'
     Case "cgreen@zupps.com.au-chris123"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southwest Automotive Group P/L"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '93. validation for 'Zupps Southside P/L'
     Case "nconnor@zupps.com.au-connor0235"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Zupps Southside P/L"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '95. validation for '3 Point Motors'
    Case "jasonr@3point.com.au-3ptm32gy"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "3 Point Motors"
        InhouseSystem = "Units"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '96. validation for 'Key Motors'
     Case "troyj@keymotors.com.au-km752jkw"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Key Motors"
        InhouseSystem = "Reynolds"

        NewEsanda = "Yes" 'this is so that stripping of VINS and stock numbers won't be done

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '97. validation for 'SMG European Cars'
     Case "anita.grubb@stillwellgroup.com.au-smg1234x"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "SMG European Cars"
        InhouseSystem = "Autoline"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Call OpenAllBMWFiles

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '98. validation for 'SMG Prestige Cars'
     Case "joan.lombos@stillwellgroup.com.au-Smgprestige01"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "SMG Prestige Cars"
        InhouseSystem = "Autoline"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Call OpenAllBMWFiles

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '99. validation for 'Lansvale Holden'
     Case "rsliteris@lansvaleholden.com.au-anw62kpt"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Lansvale Holden"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '100. validation for 'Allpike Autos'
     Case "bspiccia@allpikepeugeot.com.au-apa65kps"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Allpike Autos"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '101. validation for 'John Andrew Ford & Mazda' - (AHG New Zealand)
     Case "suman.charan@johnandrew.co.nz-jafm56jk"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "John Andrew Ford & Mazda"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '102. validation for 'North Harbour Ford and Mazda' - (AHG New Zealand)
     Case "manju.bangalore@northharbour.co.nz-nhfm57jk"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "North Harbour Ford and Mazda"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '103. validation for 'Westpoint Autos Group'
     Case "stuart@westpointautos.com.au-wag579jp"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Westpoint Autos Group"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '104. validation for 'Southern Highland Automotive P/L'
     Case "kevin.harrison@shmg.com.au-cambiata888"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Southern Highland Automotive P/L"
        InhouseSystem = "RevolutionWithToyotaAndFord"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Call ConcatenationToyotaFinance

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '105. validation for 'Maughan Thiem'
     Case "murrayf@maughanthiem.com.au-mt587jyd"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Maughan Thiem"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '106. validation for 'Bill Buckle Autos'
     Case "natashadaley@billbuckle.com.au-buckle790"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Bill Buckle Autos"
        InhouseSystem = "UnitsNew"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '107. validation for 'Audi Centre Perth'
     Case "natashav@audicentreperth.com.au-audi246c"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Audi Centre Perth"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '108. validation for 'Pacific Toyota'
     Case "rebbeccar@pacifictoyota.com.au-bomber10"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Pacific Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '109. validation for 'Melville Toyota'
     Case "mgalvin@melvilletoyota.com.au-mt557tfx"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Melville Toyota"
        InhouseSystem = "Revolution"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '110. validation for 'Ferntree Gully Toyota' (AHG in Victoria)
     Case "lmeeng@ferntreegullytoyota.com.au-cheetah777"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Ferntree Gully Toyota"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '111. validation for 'Yarra Ranges Ford'
     Case "sanjeewa.attaragama@knoxford.com.au-sanjeewa789"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Yarra Ranges Ford"
        InhouseSystem = "PMDS version of Auto-IT"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '112. validation for 'Knox Ford'
     Case "sanjeewa.attaragama@knoxford.com.au-sanjeewa456"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Knox Ford"
        InhouseSystem = "PMDS version of Auto-IT"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '113. validation for 'City Holden'
     Case "msodomka@cityholden.com.au-ch278ch"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "City Holden"
        InhouseSystem = "Units"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '114. validation for Phil McCarroll Toyota
    Case "tylerl@m-a-g.com.au-phmt123x"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Phil McCarroll Toyota"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '115. validation for 'Clydevale Pty Ltd'
     Case "robk@clydevale.com.au-clyd123x"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Clydevale Pty Ltd"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        'calls in a procedure that joins the 2 Nissan files
        Call OpenAllNissanFiles

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '116. validation for 'Bryan Byrt Automotive Group'
     Case "nathang@bryanbyrt.com.au-bbag84hy"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Bryan Byrt Automotive Group"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '117. validation for 'Castle Hill Autos'
     Case "rbeynon@castlehillautos.com.au-madcam1234"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Castle Hill Autos"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '118. validation for 'Peter Davey Toyota and Suzuki'
     Case "anthony@peterdavey.com.au-pdts245x"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Peter Davey Toyota and Suzuki"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '119. validation for 'Salters Motor Group Pty Ltd'
     Case "danielle.williamson@centenary.com.au-charlie1"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Salters Motor Group P/L"
        InhouseSystem = "Reynolds"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

    '120. validation for Springwood Nissan
    Case "zoe.atkins@springwoodnissan.com.au-spring45"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Springwood Nissan"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '121. validation for 'Peel WA Pty Ltd'
     Case "admin@prestigehonda.com.au-peel7248"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Peel WA Pty Ltd"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '122. validation for 'Magic Nissan'
     Case "johnm@magicent.com.au-magic345"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Magic Nissan"
        InhouseSystem = "Revolution"

        Call LogginMessage

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '123. validation for Newcastle Commercial Vehicles
     Case "wbrain@nsw.ahg.com.au-newcom45"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Newcastle Commercial Vehicles"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show

     '124. Brighton Mazda
     Case "ian.cardwell@brightonmazda.com.au-brimaz49"
        curDate = Date
        If curDate > DateSerial(2013, MonthNumeric, 30) Then
            Call Subwarning
        End If

        DealershipName = "Brighton Mazda"
        InhouseSystem = "Reynolds"

        Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")

        If Response = vbCancel Then
            Exit Sub
        End If

        Sheets("InhouseResults").Unprotect "KAREN21"
        Sheets("FinancierResults").Unprotect "KAREN21"
        Sheets("ConsolidatedResults").Unprotect "KAREN21"
        ActiveWorkbook.Unprotect "KAREN21"

        Me.Hide
        frmMainScreen.Show
    
    Case Else
        MsgBox "The information you have entered is invalid - please re-enter or exit the program." _
            , vbOKOnly + vbExclamation, "AIMS P/L: Floorplan Reconciler"
            
        frmStartUp.txtUserName.Value = ""
        frmStartUp.txtPassword.Value = ""
        
        frmStartUp.txtUserName.SetFocus

    End Select

End Sub
Sub LogginMessage()
    Response = MsgBox("Welcome registered member: " & DealershipName & Chr(13) & Chr(13) & _
        "Please ensure you have read and fully understand the 'Terms and Conditions' of this product before continuing." _
            , vbOKCancel + vbExclamation, "AIMS P/L: Floorplan Reconciler")
End Sub


'Private Sub txtPassword_Change()
''Copyright 2003 AIMS P/L
''All rights reserved
'
'    'disables the demonstration button if the username or password text boxes has an entry
'    If txtUserName.Value <> "" Or txtPassword.Value <> "" Then
'        cmdRunDemonstration.Enabled = False
'    Else
'        cmdRunDemonstration.Enabled = True
'    End If
'
'End Sub


'Private Sub txtUserName_Change()
''Copyright 2003 AIMS P/L
''All rights reserved
'
'    'disables the demonstration button if the username or password text boxes has an entry
'    If txtUserName.Value <> "" Or txtPassword.Value <> "" Then
'        cmdRunDemonstration.Enabled = False
'    Else
'        cmdRunDemonstration.Enabled = True
'    End If
'
'End Sub

Private Sub UserForm_Activate()
'Copyright 2003 AIMS P/L
'All rights reserved
    
'Prevent users from breaking into macro execution
Application.EnableCancelKey = xlDisabled

frmStartUp.txtTermsAndConditions.Visible = False
frmStartUp.cmdAgree.Visible = False

frmStartUp.txtUserName.SetFocus

End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
'Copyright 2003 AIMS P/L
'All rights reserved
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
    
    KillBeforeClose
   
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
          
    'will close file without saving any changes
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub

Private Sub cmdClose_Click()
'Copyright 2003 AIMS P/L
'All rights reserved
    
    'prevents screen from flickering
    Application.ScreenUpdating = False
    
    Application.GoTo Reference:="ASSERTEC"
    
    KillBeforeClose
        
    Application.Cursor = xlDefault
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.StatusBar = False
    Application.CutCopyMode = False
    
    'will close file without saving any changes
    ActiveWorkbook.Saved = True
    ActiveWorkbook.Close

End Sub

Attribute VB_Name = "frmWaitScreen"
Attribute VB_Base = "0{95C64429-ED1E-47D1-865B-23086313F59D}{307C5271-4F53-4EB2-A3AB-91F7EAA58FD1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub cmdClose_Click()
'Copyright 2003 AIMS P/L
'All rights reserved
    
    Application.StatusBar = False
    Unload Me
    
End Sub

Private Sub UserForm_Initialize()
'Copyright 2003 AIMS P/L
'All rights reserved

    'message displayed while reconciling
    frmWaitScreen.lblPleaseWait.Caption = "               Please wait ! - reconciliation with the"
    frmWaitScreen.lblTotalRecords.Caption = "               [" & ListSelection & "] records is in progress..."
End Sub
Private Sub UserForm_Activate()
'Copyright 2003 AIMS P/L
'All rights reserved

'Prevent users from breaking into macro execution
 Application.EnableCancelKey = xlDisabled

Dim newHour, newMinute, newSecond, waitTime As Date

'displays message to user in the status bar
Application.StatusBar = "Please wait !"

'creates slight delay
newHour = Hour(Now())
newMinute = Minute(Now())
newSecond = Second(Now()) + 2
waitTime = TimeSerial(newHour, newMinute, newSecond)
Application.Wait waitTime

    Call PrelimRecon
    
'----------------------------
    If VersionSelection = "DemoCopy" Then
        GoTo NoCountNeeeded
    End If
'    'counts the number of bailment entries to ensure correct version is used
'    If BailmentEntriesVar > RecordCount Then
'        Call KillBeforeCloseReconcilerVersions
'    End If
    
NoCountNeeeded:
'----------------------------
   
    For Count = 1 To 50
            Beep
    Next Count
    
    frmWaitScreen.Height = 152
    
    cmdClose.Visible = True
    
    lblPleaseWait.ForeColor = &HFF0000
    lblPleaseWait.Caption = "     " & Range("BailmentEntriesVar").Value & " [" & ListSelection & "] and " & Range("DealerEntriesVar").Value & " [In-house]"
    lblTotalRecords.ForeColor = &HFF0000
    lblTotalRecords.Caption = "     records have been reconciled successfully !"
    lblTotalVariances.ForeColor = &HFF&
    lblTotalVariances.Caption = "    Variances found to your [In-house] records: " & Range("VarToDealer").Value - 1
    lblTotalVariances2.ForeColor = &HFF&
    lblTotalVariances2.Caption = "    Variances found to the [" & ListSelection & "] records: " & Range("VarToFinancier").Value - 1
    
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
'Copyright 2003 AIMS P/L
'All rights reserved

    'Prevent user from closing with the Close box in the title bar.
    If CloseMode <> 1 Then Cancel = 1
    
End Sub

' InQuest injected base64 decoded content
' 6+,j
' ,jwZ
' zj/x7
' zj/xX
' jw"z

INQUEST-PP=macro
