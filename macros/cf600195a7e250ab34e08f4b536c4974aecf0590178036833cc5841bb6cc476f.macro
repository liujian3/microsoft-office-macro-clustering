Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Reisekostendatei 2019 Rev00
Private Sub Workbook_Open()
  ActiveSheet.Protect userinterfaceonly:=True
  Application.ScreenUpdating = False
  Call Entsperren
  Application.ScreenUpdating = True
End Sub
Private Sub Workbook_BeforeClose(Cancel As Boolean)
  If ThisWorkbook.Saved = False Then
    If Application.International(xlCountryCode) = 49 Then
      NichtGespeichertText = "Sollen Ihre |fffd|nderungen in " & Chr(39) & Replace(ThisWorkbook.Name, " ", Chr(160)) & Chr(39) & " gespeichert werden?"
    Else
      NichtGespeichertText = "Do you want to save the changes you made to " & Chr(39) & Replace(ThisWorkbook.Name, " ", Chr(160)) & Chr(39) & "?"
    End If
    Select Case MsgBox(NichtGespeichertText, vbExclamation + vbYesNoCancel, "Microsoft Office Excel")
      Case vbYes
        Call Workbook_BeforeSave(False, True)
      Case vbNo
        ThisWorkbook.Saved = True
      Case vbCancel
        Cancel = True
    End Select
  End If
End Sub
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
  Application.ScreenUpdating = False
  For i = 1 To 13
    With ThisWorkbook.Worksheets(i)
      .Unprotect
      .Cells.Locked = True
      .Cells.FormulaHidden = True
      .Protect userinterfaceonly:=True
    End With
  Next i
  Cancel = True
  If SaveAsUI = False Then
    Application.EnableEvents = False
    Application.DisplayAlerts = False
    Application.Workbooks(ThisWorkbook.Name).Save
    Application.DisplayAlerts = True
    Application.EnableEvents = True
  ElseIf Val(Left(Application.Version, 2)) >= 12 Then
    Application.EnableEvents = False
    Application.FileDialog(msoFileDialogSaveAs).FilterIndex = 2
    Application.FileDialog(msoFileDialogSaveAs).InitialFileName = ThisWorkbook.Path & "\" & ThisWorkbook.Name
    Application.FileDialog(msoFileDialogSaveAs).Show
    Application.DisplayAlerts = False
    Application.FileDialog(msoFileDialogSaveAs).Execute
    Application.DisplayAlerts = True
    Application.EnableEvents = True
  Else
    Application.EnableEvents = False
    Application.Dialogs(xlDialogSaveAs).Show
    Application.EnableEvents = True
  End If
  Call Entsperren
  On Error GoTo fehler
  If SaveAsUI = True Then DateiMitPfad = Application.FileDialog(msoFileDialogSaveAs).SelectedItems(1)
  ThisWorkbook.Saved = True
fehler:
  On Error GoTo 0
  Application.ScreenUpdating = True
End Sub
Private Sub Entsperren()
  For i = 1 To 12
    With ThisWorkbook.Worksheets(i)
      .Unprotect
      .Range("F3:H5").Locked = False
      .Range("H1:J1").Locked = False
      .Range("M1").Locked = False
      .Range("O3:U3").Locked = False
      .Range("O5:U5").Locked = False
      If i = 1 Then
        .Range("B11").Locked = False
        .Range("B11").FormulaHidden = False
        .Range("F3:H5").FormulaHidden = False
        .Range("H1:J1").FormulaHidden = False
        .Range("M1").FormulaHidden = False
        .Range("O3:U3").FormulaHidden = False
        .Range("O5:U5").FormulaHidden = False
      End If
      .Range("E11:F" & .Range("B2") + 10).Locked = False
      For j = 11 To .Range("B2") + 10
        If Not .Range("E" & j) = Chr(160) Then
          .Range("G" & j & ":K" & j).Locked = False
          .Range("J" & j & ":K" & j).FormulaHidden = False
          .Range("M" & j).Locked = False
          .Range("M" & j).FormulaHidden = False
          .Range("O" & j & ":Q" & j).Locked = False
          .Range("S" & j).Locked = False
          .Range("S" & j).FormulaHidden = False
        End If
      Next j
      If i = 2 And Month(DateSerial(Year(.Range("B11")), 2, 29)) = 3 Then
      End If
      .Protect userinterfaceonly:=True
    End With
  Next i
  With ThisWorkbook.Worksheets(13)
    .Unprotect
    .Range("A4:C73").Locked = False
    .Range("A4:C73").FormulaHidden = False
    .Protect userinterfaceonly:=True
  End With
End Sub
Attribute VB_Name = "Modul1"
Global OrteDaten(69, 2)
Dim Zweck As String
Dim Ort As String
Function WorksheetSelectionChange(Monat As String, Target As Range)
  With Worksheets(Monat)
    LZ = .Range("B2") + 10
    If Not Intersect(Target, .Range("E11:E" & LZ)) Is Nothing Then
      If Not InStr(Mid(Target.Address, 2, InStr(Target.Address, ":") - 2), "$") > 0 Then Exit Function
      Set Target = .Range(Left(Target.Address, InStr(Target.Address, ":") - 1))
      Zweck = Target.Value
    ElseIf Not Intersect(Target, .Range("G11:G" & LZ)) Is Nothing Then
      If Not InStr(Mid(Target.Address, 2, InStr(Target.Address, ":") - 2), "$") > 0 Then Exit Function
      Set Target = .Range(Left(Target.Address, InStr(Target.Address, ":") - 1))
      Ort = Target.Value
    End If
  End With
End Function
Function WorksheetChange(Monat As String, Target As Range)
  If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    With Worksheets(Monat)
      .Unprotect
      LZ = .Range("B2") + 10
      If Not Intersect(Target, .Range("E11:E" & LZ)) Is Nothing Then
        If InStr(Target.Address, ":") > 0 Then Set Target = .Range(Left(Target.Address, InStr(Target.Address, ":") - 1))
        If Target = "" Then Target = Chr(160)
        If Not Target.Value = Zweck Then
          If Target.Value = Chr(160) Then
            Target = Zweck
            Application.ScreenUpdating = True
            Application.ScreenUpdating = False
            Select Case MsgBox("Alle Eintr|fffd|ge in dieser Zeile werden entfernt.", vbExclamation + vbOKCancel, "Eintr|fffd|ge werden entfernt")
              Case vbOK
                Target = Chr(160)
                Zweck = Target.Value
                .Range("G" & Target.Row).Validation.Delete
                .Range("G" & Target.Row) = ""
                .Range("G" & Target.Row & ":I" & Target.Row).Locked = True
                .Range("J" & Target.Row & ":K" & Target.Row) = ""
                .Range("J" & Target.Row & ":K" & Target.Row).Locked = True
                .Range("J" & Target.Row & ":K" & Target.Row).FormulaHidden = True
                .Range("M" & Target.Row) = ""
                .Range("M" & Target.Row).Locked = True
                .Range("M" & Target.Row).FormulaHidden = True
                .Range("O" & Target.Row & ":Q" & Target.Row).Validation.Delete
                .Range("O" & Target.Row & ":Q" & Target.Row) = ""
                .Range("O" & Target.Row & ":Q" & Target.Row).Locked = True
            End Select
          Else
            Zweck = Target.Value
            Zweck1 = "Projekt"
            Zweck2 = "Projekt mit ausw|fffd|rtiger |fffd|bernachtung"
            Zweck4 = "Dienstreise/Seminar mit |fffd|bernachtung"
            Zweck5 = "Projekt/Seminar Dortmund"
            .Range("G" & Target.Row & ":I" & Target.Row).Locked = False
            .Range("J" & Target.Row & ":K" & Target.Row).Locked = False
            .Range("J" & Target.Row & ":K" & Target.Row).FormulaHidden = False
            .Range("M" & Target.Row).Locked = False
            .Range("M" & Target.Row).FormulaHidden = False
            .Range("N" & Target.Row).Locked = True
            .Range("N" & Target.Row).FormulaHidden = True
            .Range("O" & Target.Row & ":Q" & Target.Row).Locked = False
            .Range("N" & Target.Row).Formula = "=IF(OR(E" & Target.Row & "=""" & Chr(160) & """,AND(L" & Target.Row & "<=8,NOT(AND(OR(E" & Target.Row & "=""" & Zweck2 & """,E" & Target.Row & "=""" & Zweck4 & """),Y" & Target.Row & "=""x"")))," & _
                                               "AND(E" & Target.Row & "=""" & Zweck1 & """,X" & Target.Row & "=""""),E" & Target.Row & "=""" & Zweck5 & """),0," & _
                                               "IF(AND(L" & Target.Row & "<24,E" & Target.Row & "=""" & Zweck2 & """,X" & Target.Row & "=""""),6," & _
                                               "IF(AND(L" & Target.Row & "=24,NOT(AND(E" & Target.Row & "=""" & Zweck2 & """,X" & Target.Row & "=""""))),24,12)))"
            With .Range("G" & Target.Row).Validation
              .Delete
              .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=Orte" & ActiveSheet.Name
              .IgnoreBlank = True
              .InCellDropdown = True
              .InputTitle = ""
              .ErrorTitle = ""
              .InputMessage = ""
              .ErrorMessage = ""
              .ShowInput = True
              .ShowError = True
            End With
            With .Range("O" & Target.Row).Validation
              .Delete
              If Monat = "Feb" Then
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:= _
                "=$O$" & 16 + Range("B2") + Month(DateSerial(Year(Range("B11")), 2, 29)) & ":$O$" & 17 + Range("B2") + Month(DateSerial(Year(Range("B11")), 2, 29))
              Else
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$O$" & 18 + Range("B2") & ":$O$" & 19 + Range("B2")
              End If
              .IgnoreBlank = True
              .InCellDropdown = True
              .InputTitle = ""
              .ErrorTitle = ""
              .InputMessage = ""
              .ErrorMessage = ""
              .ShowInput = True
              .ShowError = True
            End With
            With .Range("P" & Target.Row).Validation
              .Delete
              If Monat = "Feb" Then
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:= _
                "=$P$" & 16 + Range("B2") + Month(DateSerial(Year(Range("B11")), 2, 29)) & ":$P$" & 17 + Range("B2") + Month(DateSerial(Year(Range("B11")), 2, 29))
              Else
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$P$" & 18 + Range("B2") & ":$P$" & 19 + Range("B2")
              End If
              .IgnoreBlank = True
              .InCellDropdown = True
              .InputTitle = ""
              .ErrorTitle = ""
              .InputMessage = ""
              .ErrorMessage = ""
              .ShowInput = True
              .ShowError = True
            End With
            With .Range("Q" & Target.Row).Validation
              .Delete
              If Monat = "Feb" Then
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:= _
                "=$Q$" & 16 + Range("B2") + Month(DateSerial(Year(Range("B11")), 2, 29)) & ":$Q$" & 17 + Range("B2") + Month(DateSerial(Year(Range("B11")), 2, 29))
              Else
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=$Q$" & 18 + Range("B2") & ":$Q$" & 19 + Range("B2")
              End If
              .IgnoreBlank = True
              .InCellDropdown = True
              .InputTitle = ""
              .ErrorTitle = ""
              .InputMessage = ""
              .ErrorMessage = ""
              .ShowInput = True
              .ShowError = True
            End With
            If Target.Value = "Ausland/Sonstiges" Then
              .Range("N" & Target.Row).Locked = False
              .Range("N" & Target.Row).FormulaHidden = False
              .Range("N" & Target.Row) = 0
            End If
          End If
        End If
      ElseIf Not Intersect(Target, .Range("G11:G" & LZ)) Is Nothing Then
        If InStr(Target.Address, ":") > 0 Then Set Target = .Range(Left(Target.Address, InStr(Target.Address, ":") - 1))
        If Target = "" Then Target = "Neuer besuchter Ort..."
        If Target.Value = "Neuer besuchter Ort..." Then
          .Range("G" & Target.Row) = Ort
          Application.ScreenUpdating = True
          Application.ScreenUpdating = False
vorhandenerOrt:
          BesuchterOrt = InputBox("Neuen besuchten Ort eingeben (z. B. ""Bayer AG, Ernst-Schering-Stra|fffd|e 14, 59192 Bergkamen""):")
          If BesuchterOrt = "" Then Exit Function
          For i = 4 To 73
            If Worksheets("Daten").Range("C" & i) = BesuchterOrt Then
              MsgBox ("Der eingegebene besuchte Ort ist bereits vorhanden!")
              GoTo vorhandenerOrt
            End If
            If Worksheets("Daten").Range("C" & i) = "" Then Exit For
          Next i
          If Target.Offset(0, -2) = "Projekt" Or Target.Offset(0, -2) = "Projekt mit ausw|fffd|rtiger |fffd|bernachtung" Then
keinDatum:
            If Err = 13 Then
              MsgBox ("Es wurde kein g|fffd|ltiges Datum eingegeben!")
              fehler = Err
              Resume Next
            End If
DatumBeginnWiederholung:
            DatumBeginn = InputBox("Datum des ersten Einsatzes am besuchten Ort bzw. Datum nach mindestens vierw|fffd|chiger Abwesenheit vom besuchten Ort eingeben (" & _
                                   "z. B. """ & Worksheets("Jan").Range("B" & 10 + Application.WorksheetFunction.Match("Mo", Worksheets("Jan").Range("A11:A" & .Range("B2") + 10), 0)) - 112 & """):")
            If DatumBeginn = "" Then Exit Function
            On Error GoTo keinDatum
            If CDate(DatumBeginn) > CDate("31.12." & Year(.Range("B11")) - 1) Then
              DatumBeginn = ""
              GoTo DatenEintragen
            End If
            If fehler = 13 Then
              fehler = 0
              GoTo DatumBeginnWiederholung
            End If
            On Error GoTo 0
DatumLetzterWiederholung:
            DatumLetzterBesuch = InputBox("Datum des letzten Einsatzes am besuchten Ort im vergangenen Jahr eingeben (" & _
                                          "z. B. """ & Worksheets("Jan").Range("B" & 10 + Application.WorksheetFunction.Match("Fr", Worksheets("Jan").Range("A11:A" & .Range("B2") + 10), 0)) - 21 & """):")
            If DatumLetzterBesuch = "" Then Exit Function
            If UCase(DatumLetzterBesuch) = "Z" Then GoTo DatumBeginnWiederholung
            On Error GoTo keinDatum
            If CDate(DatumLetzterBesuch) > CDate("31.12." & Year(.Range("B11")) - 1) Then
              MsgBox ("Das eingegebene Datum (" & CDate(DatumLetzterBesuch) & ") f|fffd|r den letzten Besuch im vergangenen Jahr liegt nicht im vergangenen Jahr.")
              GoTo DatumLetzterWiederholung
            End If
            If CDate(DatumLetzterBesuch) < CDate(DatumBeginn) Then
              MsgBox ("Das Datum des letzen Besuchs (" & CDate(DatumLetzterBesuch) & ") liegt vor dem des ersten Besuchs (" & CDate(DatumBeginn) & "). Das Datum des letzten Besuchs kann fr|fffd|hestens das des ersten Besuchs sein." & Chr(10) & _
                      "Hinweis: Zum |fffd|ndern des Datums des ersten Besuchs f|fffd|r das Datum des letzten Besuchs ""z"" eingeben. ""z"": Zur|fffd|ck")
              GoTo DatumLetzterWiederholung
            End If
            If CDate(DatumLetzterBesuch) < CDate("04.12." & Year(.Range("B11")) - 1) Then
              DatumBeginn = ""
              DatumLetzterBesuch = ""
            End If
            If fehler = 13 Then
              fehler = 0
              GoTo DatumLetzterWiederholung
            End If
            On Error GoTo 0
          End If
DatenEintragen:
          Worksheets("Daten").Unprotect
          If Not DatumBeginn = "" Then
            Worksheets("Daten").Range("A" & i) = CDate(DatumBeginn)
            Worksheets("Daten").Range("B" & i) = CDate(DatumLetzterBesuch)
          End If
          Worksheets("Daten").Range("C" & i) = BesuchterOrt
          Target = BesuchterOrt
          Ort = Target
          Call Worksheets("Daten").Sortieren
          Worksheets("Daten").Protect userinterfaceonly:=True
        Else
          Ort = Target
        End If
      End If
      .Protect userinterfaceonly:=True
    End With
    Application.ScreenUpdating = True
  End If
End Function
Function OpZ1(Monat As String, Target As Range)
  Call Klick(Monat, Target)
  OpZZeile = Target.Row
  Auswahl = ActiveCell.Address
  Application.ScreenUpdating = False
  With Worksheets(Monat)
    .Unprotect
    If Not .Range("E" & OpZZeile + .Cells(OpZZeile, 29) - 1) = Chr(160) Then
      EntfAbfr = MsgBox("Die gesamte letzte Zeile dieses Datums wird entfernt.", vbExclamation + vbOKCancel, "Zeile wird entfernt")
    Else
      EntfAbfr = 1
    End If
    If EntfAbfr = 1 Then
      If OpZZeile = .Range("B2") - .Cells(OpZZeile, 29) + 11 Then
        .Range("X" & OpZZeile + .Cells(OpZZeile, 29) - 1 & ":Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Copy
        .Range("X" & OpZZeile + .Cells(OpZZeile, 29) - 2).Select
        .Paste
      End If
      FSY = .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 2).Formula
      .Rows(OpZZeile + .Cells(OpZZeile, 29) - 1 & ":" & OpZZeile + .Cells(OpZZeile, 29) - 1).Delete
      .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 2).Formula = FSY
      If Not OpZZeile = .Range("B2") - .Cells(OpZZeile, 29) + 11 Then
        While InStr(1, .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Formula, "#REF!") > 0
          .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Formula = Replace(.Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Formula, "#REF!", "E" & OpZZeile + .Cells(OpZZeile, 29) - 2, 1, 1)
          .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Formula = Replace(.Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Formula, "#REF!", "G" & OpZZeile + .Cells(OpZZeile, 29) - 2, 1, 1)
        Wend
      Else
        With .Range("V" & OpZZeile + .Cells(OpZZeile, 29) - 2 & ":W" & OpZZeile + .Cells(OpZZeile, 29) - 2).Borders(xlEdgeBottom)
          .LineStyle = xlContinuous
          .ColorIndex = xlAutomatic
          .TintAndShade = 0
          .Weight = xlThin
        End With
      End If
      .Cells(OpZZeile, 29) = .Cells(OpZZeile, 29) - 1
      If .Cells(OpZZeile, 29) = 1 Then
        Target.Font.Color = RGB(255, 255, 255)
        Target.Interior.Color = RGB(255, 255, 255)
      End If
    End If
    Application.CutCopyMode = False
    .Range(Auswahl).Select
    .Protect userinterfaceonly:=True
  End With
  Application.ScreenUpdating = True
End Function
Function OpZ2(Monat As String, Target As Range)
  Call Klick(Monat, Target)
  OpZZeile = Target.Row
  Auswahl = ActiveCell.Address
  Application.ScreenUpdating = False
  With Worksheets(Monat)
    .Unprotect
    FSY = .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Formula
    .Rows(OpZZeile + .Cells(OpZZeile, 29) & ":" & OpZZeile + .Cells(OpZZeile, 29)).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    If OpZZeile + .Cells(OpZZeile, 29) = .Range("B2") + 11 Then
      If Not Monat = "Feb" Or Month(DateSerial(Year(Range("B11")), 2, 29)) = 2 Then
        For i = 14 To 18
          .Range(Split(.Cells(1, i).Address, "$")(1) & .Range("B2") + 12).Formula = Replace(.Range(Split(.Cells(1, i).Address, "$")(1) & .Range("B2") + 12).Formula, .Range("B2") + 10, .Range("B2") + 11)
        Next i
        For i = 12 To 16
          For j = 1 To 4
            If InStr(1, .Range("U" & .Range("B2") + i).Formula, .Range("B2") + 10) > 0 Then .Range("U" & .Range("B2") + i).Formula = Replace(.Range("U" & .Range("B2") + i).Formula, .Range("B2") + 10, .Range("B2") + 11)
          Next j
        Next i
      End If
    End If
    .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Formula = FSY
    If Not OpZZeile = .Range("B2") - .Cells(OpZZeile, 29) + 11 Then
      .Range("Y" & OpZZeile + .Cells(OpZZeile, 29) + 1).Formula = Replace(.Range("Y" & OpZZeile + .Cells(OpZZeile, 29) + 1).Formula, OpZZeile + .Cells(OpZZeile, 29) - 1, OpZZeile + .Cells(OpZZeile, 29))
    End If
    .Range("A" & OpZZeile & ":U" & OpZZeile).Copy
    .Range("A" & OpZZeile + .Cells(OpZZeile, 29)).Select
    .Paste
    .Range("G" & OpZZeile + .Cells(OpZZeile, 29)).Validation.Delete
    .Range("O" & OpZZeile + .Cells(OpZZeile, 29) & ":Q" & OpZZeile + .Cells(OpZZeile, 29)).Validation.Delete
    If OpZZeile = 11 Then
      If Monat = "Jan" Then
        .Range("B" & OpZZeile + .Cells(OpZZeile, 29)).Locked = True
        .Range("B" & OpZZeile + .Cells(OpZZeile, 29)).FormulaHidden = True
        .Range("B" & OpZZeile + .Cells(OpZZeile, 29)).Interior.Color = RGB(255, 255, 255)
      End If
      .Range("X" & OpZZeile + .Cells(OpZZeile, 29) + 1 & ":Y" & OpZZeile + .Cells(OpZZeile, 29) + 1).Copy
      .Range("X" & OpZZeile + .Cells(OpZZeile, 29)).Select
      .Paste
    Else
      .Range("X" & OpZZeile + .Cells(OpZZeile, 29) - 1 & ":Y" & OpZZeile + .Cells(OpZZeile, 29) - 1).Copy
      .Range("X" & OpZZeile + .Cells(OpZZeile, 29)).Select
      .Paste
      If OpZZeile = .Range("B2") - .Cells(OpZZeile, 29) + 11 Then
        With .Range("V" & OpZZeile + .Cells(OpZZeile, 29) & ":W" & OpZZeile + .Cells(OpZZeile, 29)).Borders(xlEdgeLeft)
          .LineStyle = xlContinuous
          .ColorIndex = xlAutomatic
          .TintAndShade = 0
          .Weight = xlThin
        End With
        With .Range("V" & OpZZeile + .Cells(OpZZeile, 29) & ":W" & OpZZeile + .Cells(OpZZeile, 29)).Borders(xlEdgeBottom)
          .LineStyle = xlContinuous
          .ColorIndex = xlAutomatic
          .TintAndShade = 0
          .Weight = xlThin
        End With
        With .Range("V" & OpZZeile + .Cells(OpZZeile, 29) & ":W" & OpZZeile + .Cells(OpZZeile, 29)).Borders(xlEdgeRight)
          .LineStyle = xlContinuous
          .ColorIndex = xlAutomatic
          .TintAndShade = 0
          .Weight = xlThin
        End With
        With .Range("V" & OpZZeile + .Cells(OpZZeile, 29) & ":W" & OpZZeile + .Cells(OpZZeile, 29)).Borders(xlInsideVertical)
          .LineStyle = xlContinuous
          .ColorIndex = xlAutomatic
          .TintAndShade = 0
          .Weight = xlThin
        End With
        .Range("X" & OpZZeile + .Cells(OpZZeile, 29) - 2 & ":Y" & OpZZeile + .Cells(OpZZeile, 29) - 2).Copy
        .Range("X" & OpZZeile + .Cells(OpZZeile, 29) - 1).Select
        .Paste
      End If
    End If
    .Range("V" & OpZZeile + .Cells(OpZZeile, 29) - 1 & ":W" & OpZZeile + .Cells(OpZZeile, 29)).Borders(xlInsideHorizontal).LineStyle = xlNone
    .Range("Z" & OpZZeile + .Cells(OpZZeile, 29) - 1 & ":AB" & OpZZeile + .Cells(OpZZeile, 29) - 1).Copy
    .Range("Z" & OpZZeile + .Cells(OpZZeile, 29)).Select
    .Paste
    Zweck1 = "Projekt"
    Zweck2 = "Projekt mit ausw|fffd|rtiger |fffd|bernachtung"
    Zweck4 = "Dienstreise/Seminar mit |fffd|bernachtung"
    Zweck5 = "Projekt/Seminar Dortmund"
    .Range("E" & OpZZeile + .Cells(OpZZeile, 29)) = Chr(160)
    .Range("G" & OpZZeile + .Cells(OpZZeile, 29)) = ""
    .Range("J" & OpZZeile + .Cells(OpZZeile, 29) & ":K" & OpZZeile + .Cells(OpZZeile, 29)) = ""
    .Range("M" & OpZZeile + .Cells(OpZZeile, 29)) = ""
    .Range("N" & OpZZeile + .Cells(OpZZeile, 29)).Formula = "=IF(OR(E" & OpZZeile + .Cells(OpZZeile, 29) & "=""" & Chr(160) & """,AND(L" & OpZZeile + .Cells(OpZZeile, 29) & "<=8,NOT(AND(OR(E" & OpZZeile + .Cells(OpZZeile, 29) & "=""" & Zweck2 & """,E" & OpZZeile + .Cells(OpZZeile, 29) & "=""" & Zweck4 & """),Y" & OpZZeile + .Cells(OpZZeile, 29) & "=""x"")))," & _
                                                           "AND(E" & OpZZeile + .Cells(OpZZeile, 29) & "=""" & Zweck1 & """,X" & OpZZeile + .Cells(OpZZeile, 29) & "=""""),E" & OpZZeile + .Cells(OpZZeile, 29) & "=""" & Zweck5 & """),0," & _
                                                           "IF(AND(L" & OpZZeile + .Cells(OpZZeile, 29) & "<24,E" & OpZZeile + .Cells(OpZZeile, 29) & "=""" & Zweck2 & """,X" & OpZZeile + .Cells(OpZZeile, 29) & "=""""),6," & _
                                                           "IF(AND(L" & OpZZeile + .Cells(OpZZeile, 29) & "=24,NOT(AND(E" & OpZZeile + .Cells(OpZZeile, 29) & "=""" & Zweck2 & """,X" & OpZZeile + .Cells(OpZZeile, 29) & "=""""))),24,12)))"
    .Range("O" & OpZZeile + .Cells(OpZZeile, 29) & ":Q" & OpZZeile + .Cells(OpZZeile, 29)) = ""
    .Range("S" & OpZZeile + .Cells(OpZZeile, 29)) = ""
    Application.CutCopyMode = False
    .Range(Auswahl).Select
    .Cells(OpZZeile, 29) = .Cells(OpZZeile, 29) + 1
    Target.Offset(1, -20).Font.Color = RGB(0, 51, 0)
    Target.Offset(1, -20).Interior.Color = RGB(192, 192, 192)
    Target.Offset(1, 0).Interior.Color = RGB(255, 255, 255)
    Target.Offset(0, -1).Font.Color = RGB(0, 51, 0)
    Target.Offset(0, -1).Interior.Color = RGB(192, 192, 192)
    .Protect userinterfaceonly:=True
  End With
  Application.ScreenUpdating = True
End Function
Function EintrKop(Monat As String, Target As Range)
  If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    With Worksheets(Monat)
      If .Range("C" & Target.Row).Font.Color = RGB(0, 51, 0) Then
        .Range("C" & Target.Row).Interior.Color = RGB(128, 128, 128)
        .Range("C" & Target.Row).Font.Color = RGB(0, 255, 0)
      Else
        .Range("C" & Target.Row).Font.Color = RGB(0, 51, 0)
        .Range("C" & Target.Row).Interior.Color = RGB(192, 192, 192)
      End If
    End With
    For i = 1 To 12
      With Worksheets(i)
      For j = 11 To .Range("B2") + 10
        If .Range("C" & j).Font.Color = RGB(0, 255, 0) And Not (.Name = ActiveSheet.Name And .Range("C" & j).Address = Target.Address) Then
          .Range("C" & j).Font.Color = RGB(0, 51, 0)
          .Range("C" & j).Interior.Color = RGB(192, 192, 192)
        End If
      Next j
      End With
    Next i
    Application.ScreenUpdating = True
  End If
End Function
Function EintrEinf(Monat As String, Target As Range)
  Call Klick(Monat, Target)
  With Worksheets(Monat)
    For i = 1 To 12
      For j = 11 To Worksheets(i).Range("B2") + 10
        If Worksheets(i).Range("C" & j).Font.Color = RGB(0, 255, 0) Then
          If .Range("E" & Target.Row) = Chr(160) And Worksheets(i).Range("E" & j) = Chr(160) Then Exit Function
          If Not .Range("E" & Target.Row) = Chr(160) And Not Worksheets(i).Range("E" & j) = Chr(160) Then
            Select Case MsgBox("Die Eintr|fffd|ge der gesamten Zeile werden |fffd|berschrieben.", vbExclamation + vbOKCancel, "Zeile wird |fffd|berschrieben")
              Case vbCancel
                Exit Function
            End Select
          End If
          ZweckTemp = Zweck
          Zweck = .Range("E" & Target.Row) & " "
          .Range("E" & Target.Row) = Worksheets(i).Range("E" & j)
          If .Range("E" & Target.Row) = Chr(160) Then
            Exit Function
          ElseIf Right(Zweck, 1) = " " Then
            .Range("E" & Target.Row) = Left(Zweck, Len(Zweck) - 1)
            Zweck = ZweckTemp
            Exit Function
          End If
          Zweck = ZweckTemp
          For k = 7 To 19
            If k = 8 Then k = 10 Else If k = 12 Then k = 13 Else If k = 14 And Target.Locked = True Then k = 15 Else If k = 18 Then k = 19
            .Range(.Cells(Target.Row, k).Address) = Worksheets(i).Range(.Cells(j, k).Address)
          Next k
        End If
      Next j
    Next i
  End With
  Application.ScreenUpdating = True
End Function
Function WorksheetBeforeDoubleClick(Monat As String, Target As Range)
  With Worksheets(Monat)
    .Unprotect
    If Target.Column = 3 And Target.Row > 10 And Target.Row < .Range("B2") + 11 Then Call EintrKop(Monat, Target)
    If Target.Column = 4 And Target.Row > 10 And Target.Row < .Range("B2") + 11 Then Call EintrEinf(Monat, Target)
    If Target.Column = 22 And Target.Interior.Color = RGB(192, 192, 192) And Target.Row > 10 And Target.Row < .Range("B2") + 11 Then Call OpZ1(Monat, Target)
    If Target.Column = 23 And Target.Interior.Color = RGB(192, 192, 192) And Target.Row > 10 And Target.Row < .Range("B2") + 11 Then Call OpZ2(Monat, Target)
    .Protect userinterfaceonly:=True
  End With
End Function
Function Klick(Monat As String, Target As Range)
  Target.Interior.Color = RGB(128, 128, 128)
  Target.Font.Color = RGB(0, 255, 0)
  Start = Timer
  While Timer < Start + 0.2
  Wend
  Target.Font.Color = RGB(0, 51, 0)
  Target.Interior.Color = RGB(192, 192, 192)
End Function

Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Jan", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Jan", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Jan", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Okt", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Okt", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Okt", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Nov", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Nov", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Nov", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Dez", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Dez", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Dez", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DatenImportieren, 1, 0, MSForms, CommandButton"
Dim Ort As String
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  If Not Intersect(Target, Range("C4:C73")) Is Nothing Then
    If InStr(Target.Address, ":") > 0 Then Exit Sub
    Ort = Target.Value
  End If
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  bereich = Target.Address
  Start = 0
  While Start > -1
    posKomma = InStr(Start + 1, bereich, ",")
    If posKomma > 0 Then
      ende = posKomma - 1
    Else
      ende = Len(bereich)
      posKomma = -1
    End If
    anfang = Start + 1
    teilbereich = Mid(bereich, anfang, ende - anfang + 1)
    If Range(teilbereich).Cells.Count = 1 Then
      Call EingabeManagen(Range(teilbereich))
    Else
      For i = Mid(teilbereich, InStr(2, teilbereich, "$") + 1, InStr(2, teilbereich, ":") - InStr(2, teilbereich, "$") - 1) To Mid(teilbereich, InStr(InStr(2, teilbereich, ":") + 3, teilbereich, "$") + 1, Len(teilbereich) - InStr(InStr(2, teilbereich, ":") + 3, teilbereich, "$"))
        For j = Range(Mid(teilbereich, 2, InStr(2, teilbereich, "$") - 2) & 1).Column To Range(Mid(teilbereich, InStr(5, teilbereich, ":") + 2, InStr(InStr(5, teilbereich, ":") + 2, teilbereich, "$") - InStr(5, teilbereich, ":") - 2) & 1).Column
          Call EingabeManagen(Range(Cells(i, j).Address))
        Next j
      Next i
    End If
    Start = posKomma
  Wend
End Sub
Private Sub EingabeManagen(Target As Range)
  If Application.ScreenUpdating = True Then
    Application.ScreenUpdating = False
    Unprotect
    If Not Intersect(Target, Range("C4:C73")) Is Nothing Then
      If Not Target.Value = Ort Then
        For i = 1 To 12
          x = 11
          With Worksheets(i)
            While Not x > .Range("B2") + 10
              If .Range("G" & x) = Ort And Not Ort = "" Then .Range("G" & x) = Target
              x = x + 1
            Wend
          End With
        Next i
        If Target.Value = "" Then
          Target.Offset(0, -2) = "-"
          Target.Offset(0, -1) = "-"
        End If
        Call Sortieren
      End If
    ElseIf Not Intersect(Target, Range("A4:B73")) Is Nothing Then
      If Val(Target) = 0 Then
        Cells(Target.Row, 1) = "-"
        Cells(Target.Row, 2) = "-"
      ElseIf Not Intersect(Target, Range("A4:A73")) Is Nothing Then
        If Year(Target) > Year(Worksheets("Jan").Range("B11") - 1) Then
          MsgBox ("Nur Datumsangaben aus vergangenen Jahren werden ben|fffd|tigt." & Chr(10) & _
                  "Angaben aus dem aktuellen Jahr werden direkt aus dieser Datei verarbeitet." & Chr(10) & _
                  "Angaben f|fffd|r zuk|fffd|nftige Jahre sind f|fffd|r diese Datei ohne Bedeutung." & Chr(10) & _
                  "Daher werden nur Angaben aus vergangenen Jahren akzeptiert.")
          Target = "-"
          Target.Offset(0, 1) = "-"
        ElseIf Target.Offset(0, 1) = "-" Then
          Target.Offset(0, 1) = CDate("31.12." & Year(Worksheets("Jan").Range("B11") - 1))
        ElseIf Target > Target.Offset(0, 1) Then
          MsgBox ("Das Datum des ersten Besuchs liegt nach dem des letzten Besuchs. Das Datum des letzten Besuchs wird angepasst.")
          Target.Offset(0, 1) = Target
        End If
      ElseIf Not Intersect(Target, Range("B4:B73")) Is Nothing Then
        If (Year(Target) > Year(Worksheets("Jan").Range("B11") - 1) Or CDate(Target) < CDate("04.12." & Year(Worksheets("Jan").Range("B11") - 1))) Then
          MsgBox ("Nur Datumsangaben der letzten 28 Tage des vergangenen Jahres werden ben|fffd|tigt." & Chr(10) & _
                  "Angaben aus dem aktuellen Jahr werden direkt aus dieser Datei verarbeitet." & Chr(10) & _
                  "Angaben f|fffd|r zuk|fffd|nftige Jahre sind f|fffd|r diese Datei ohne Bedeutung." & Chr(10) & _
                  "Daher werden hier nur Angaben vom 4. bis 31. Dezember des vergangenen Jahres akzeptiert.")
          Target = "-"
          Target.Offset(0, -1) = "-"
        ElseIf Target.Offset(0, -1) = "-" Then
          Target.Offset(0, -1) = CDate(Target - 98)
        ElseIf Target < Target.Offset(0, -1) Then
          MsgBox ("Das Datum des letzten Besuchs liegt vor dem des ersten Besuchs. Das Datum des ersten Besuchs wird angepasst.")
          Target.Offset(0, -1) = Target
        End If
      End If
    End If
    Protect userinterfaceonly:=True
    Application.ScreenUpdating = True
  End If
End Sub
Private Sub DatenImportieren_Click()
  Application.ScreenUpdating = False
  VersionIntern = Mid(ThisWorkbook.VBProject.VBComponents("DieseArbeitsmappe").CodeModule.Lines(1, 1), 19, 4)
  VersionExtern = Year(ThisWorkbook.Worksheets("Jan").Range("B11"))
  RevisionIntern = Mid(ThisWorkbook.VBProject.VBComponents("DieseArbeitsmappe").CodeModule.Lines(1, 1), 27, 2)
  VersionInternImport = "2018"
  VersionExternImport = Year(ThisWorkbook.Worksheets("Jan").Range("B11")) - 1
  RevisionInternImport = "00"
  RevisionExternImport = "00"
  If VersionExtern - VersionIntern > 0 Then
    VersionInternImport = VersionIntern
    RevisionInternImport = RevisionIntern
    If VersionExtern - VersionIntern = 1 Then
      RevisionExternImport = RevisionInternImport
    Else
      RevisionExternImport = "00"
    End If
  End If
  MsgBox ("Im n|fffd|chsten Dialogfenster die Reisekostendatei " & VersionExternImport & " Rev" & RevisionExternImport & " ausw|fffd|hlen, aus der Daten importiert werden sollen.")
  On Error GoTo fehler
  ChDrive Left(ThisWorkbook.Path, InStr(ThisWorkbook.Path, ":\") - 1)
  ChDir ThisWorkbook.Path
  DateiMitPfad = Application.GetOpenFilename("Excel-Dateien (*.xls; *.xlsm),*.xls;*.xlsm")
  Datei = Right(DateiMitPfad, InStr(1, StrReverse(DateiMitPfad), "\") - 1)
  Pfad = Left(DateiMitPfad, Len(DateiMitPfad) - Len(Datei))
fehler:
  If Err <> 0 Then
    MsgBox ("Es wurde keine Datei ausgew|fffd|hlt!")
    Exit Sub
  End If
  On Error GoTo 0
  Workbooks.Open (DateiMitPfad)
  ThisWorkbook.Activate
  Windows(Datei).Visible = False
  If Not (Workbooks(Datei).VBProject.VBComponents("DieseArbeitsmappe").CodeModule.Find("'Reisekostendatei " & VersionInternImport & " Rev" & RevisionInternImport, 1, 1, 1, 28)) Then
    MsgBox ("Aus dieser Datei k|fffd|nnen keine Daten importiert werden. (keine Reisekostendatei, falsche Rev)")
    Windows(Datei).Visible = True
    Workbooks(Datei).Close savechanges:=False
    Exit Sub
  End If
  k = 0
  OrtLeer = 0
  For i = 0 To 69
    For j = 0 To 2
      OrteDaten(k, j) = Workbooks(Datei).Worksheets("Daten").Cells(i + 4, 3 + 5 * j - 3 * (j \ 2))
      If j > 0 And OrteDaten(k, j) = "" Then OrteDaten(k, j) = "-"
    Next j
    OrtLeer = Len(OrteDaten(k, 0))
    If OrtLeer > 0 Then k = k + 1
    OrtLeer = 0
  Next i
  Dim ButtonText(5) As String
  ButtonText(0) = "Keine" & Chr(10) & "ausw|fffd|hlen"
  ButtonText(1) = "Alle" & Chr(10) & "ausw|fffd|hlen"
  ButtonText(2) = "Alle 'Stammkunden'" & Chr(10) & "ausw|fffd|hlen"
  ButtonText(3) = "Alle 'Neukunden'" & Chr(10) & "ausw|fffd|hlen"
  ButtonText(4) = "Importieren"
  ButtonText(5) = "Abbrechen"
  Set RKImportDialog = ThisWorkbook.VBProject.VBComponents.Add(3)
  With RKImportDialog
    .Properties("Height") = 426
    .Properties("Width") = 475
    .Properties("Caption") = "Daten aus Reisekostendatei vom vergangenen Jahr importieren"
  End With
  Set Rahmen = RKImportDialog.Designer.Controls.Add("Forms.Frame.1")
  With Rahmen
    .Top = 6
    .Left = 6
    .Height = 196
    .Width = 460
    Set LabelTitelOrt = .Controls.Add("Forms.Label.1", "TitOrt", True)
    With LabelTitelOrt
      .Top = 6
      .Left = 22
      .Height = 15
      .Width = 292
      .Caption = "Besuchter Ort"
      .Visible = True
    End With
    Set LabelTitelDS = .Controls.Add("Forms.Label.1", "TitDS", True)
    With LabelTitelDS
      .Top = 6
      .Left = 316
      .Height = 15
      .Width = 58
      .Caption = "Erster Besuch"
      .Visible = True
    End With
    Set LabelTitelDL = .Controls.Add("Forms.Label.1", "TitDL", True)
    With LabelTitelDL
      .Top = 6
      .Left = 376
      .Height = 15
      .Width = 58
      .Caption = "Letzter Besuch"
      .Visible = True
    End With
    Set Orte = .Controls.Add("Forms.Frame.1")
    With Orte
      .Top = 16
      .Left = -2
      .Height = 177
      .Width = 461
      .ScrollBars = 2
      .ScrollTop = 0
      .ScrollLeft = 0
      .ScrollWidth = 290
      For i = 1 To k
        Set CheckBoxOrt = .Controls.Add("Forms.CheckBox.1", "COrt" & i, True)
        With CheckBoxOrt
          .Top = 17.25 * i - 17
          .Left = 6
          .Height = 18
          .Width = 279
          .Visible = True
        End With
        Set TextBoxOrt = .Controls.Add("Forms.TextBox.1", "TOrt" & i, True)
        With TextBoxOrt
          .Top = 17.25 * i - 16
          .Left = 22
          .Height = 15
          .Width = 292
          .SpecialEffect = 0
          .SelectionMargin = False
          .Text = OrteDaten(i - 1, 0)
          .Locked = True
          .Visible = True
        End With
        Set TextBoxDatumStart = .Controls.Add("Forms.TextBox.1", "TDS" & i, True)
        With TextBoxDatumStart
          .Top = 17.25 * i - 16
          .Left = 316
          .Height = 15
          .Width = 58
          .SpecialEffect = 0
          .SelectionMargin = False
          .TextAlign = 2
          If OrteDaten(i - 1, 1) = "-" Or OrteDaten(i - 1, 1) > DateSerial(Year(Worksheets("Jan").Range("B11")) - 1, 10, 1) Then .ForeColor = RGB(0, 0, 255)
          .Text = OrteDaten(i - 1, 1)
          .Locked = True
          .Visible = True
        End With
        Set TextBoxDatumLetzter = .Controls.Add("Forms.TextBox.1", "TDL" & i, True)
        With TextBoxDatumLetzter
          .Top = 17.25 * i - 16
          .Left = 376
          .Height = 15
          .Width = 58
          .SpecialEffect = 0
          .SelectionMargin = False
          .TextAlign = 2
          .Text = OrteDaten(i - 1, 2)
          .Locked = True
          .Visible = True
        End With
      Next i
      .ScrollHeight = 17.25 * (k + 1) - 16
      .Visible = True
    End With
  End With
  For i = 0 To 3
    Set ButtonAuswahl = RKImportDialog.Designer.Controls.Add("Forms.CommandButton.1", "BAus" & i, True)
    With ButtonAuswahl
      .Top = 216 + 36 * (i \ 2)
      .Left = 6 + 156 * (i Mod 2)
      .Height = 30
      .Width = 150
      .Caption = ButtonText(i)
      .Visible = True
    End With
  Next i
  For i = 4 To 5
    Set ButtonAuswahl = RKImportDialog.Designer.Controls.Add("Forms.CommandButton.1", "BAus" & i, True)
    With ButtonAuswahl
      .Top = 178 + 36 * i
      .Left = 338
      .Height = 30
      .Width = 128
      .Caption = ButtonText(i)
      .Visible = True
    End With
  Next i
  With RKImportDialog.Designer
    Set CheckBoxName = .Controls.Add("Forms.CheckBox.1", "CName", True)
    With CheckBoxName
      .Top = 322
      .Left = 6
      .Height = 15
      .Width = 16
      If ThisWorkbook.Worksheets("Jan").Cells(1, 8) = Workbooks(Datei).Worksheets("Dez").Cells(1, 8) And _
         ThisWorkbook.Worksheets("Jan").Cells(1, 13) = Workbooks(Datei).Worksheets("Dez").Cells(1, 13) Then .Enabled = False
      .Value = True
      .Visible = True
    End With
    Set LabelName = .Controls.Add("Forms.Label.1", "LName", True)
    With LabelName
      .Top = 324
      .Left = 22
      .Height = 15
      .Width = 148
      If CheckBoxName.Enabled = False Then .Enabled = False
      .Caption = "Name & Pers.-Nr. aus " & Year(Workbooks(Datei).Worksheets("Jan").Range("B11")) & " importieren:"
      .Visible = True
    End With
    Set TextBoxName = .Controls.Add("Forms.TextBox.1", "TName", True)
    With TextBoxName
      .Top = 322
      .Left = 172
      .Height = 15
      .Width = 95
      .SelectionMargin = False
      .Text = Workbooks(Datei).Worksheets("Dez").Cells(1, 8)
      .Locked = True
      If ThisWorkbook.Worksheets("Jan").Cells(1, 8) = .Text Then .Enabled = False
      .Visible = True
    End With
    Set TextBoxPNr = .Controls.Add("Forms.TextBox.1", "TPNr", True)
    With TextBoxPNr
      .Top = 322
      .Left = 272
      .Height = 15
      .Width = 60
      .SelectionMargin = False
      .Text = CStr(Workbooks(Datei).Worksheets("Dez").Cells(1, 13))
      If Val(.Text) > 0 Then .Text = CStr(Format(.Text, "00000"))
      .Locked = True
      If ThisWorkbook.Worksheets("Jan").Cells(1, 13) = .Text Then .Enabled = False
      .Visible = True
    End With
    
    Set CheckBoxKennzeichen = .Controls.Add("Forms.CheckBox.1", "CKennzeichen", True)
    With CheckBoxKennzeichen
      .Top = 338
      .Left = 6
      .Height = 15
      .Width = 16
      If CStr(ThisWorkbook.Worksheets("Jan").Cells(3, 6)) = CStr(Workbooks(Datei).Worksheets("Dez").Cells(3, 6)) Then .Enabled = False
      .Value = True
      .Visible = True
    End With
    Set LabelKennzeichen = .Controls.Add("Forms.Label.1", "LKennzeichen", True)
    With LabelKennzeichen
      .Top = 340
      .Left = 22
      .Height = 15
      .Width = 244
      If CheckBoxKennzeichen.Enabled = False Then .Enabled = False
      .Caption = "KFZ-Kennzeichen aus " & Year(Workbooks(Datei).Worksheets("Jan").Range("B11")) & " importieren:"
      .Visible = True
    End With
    Set TextBoxKennzeichen = .Controls.Add("Forms.TextBox.1", "TKennzeichen", True)
    With TextBoxKennzeichen
      .Top = 338
      .Left = 172
      .Height = 15
      .Width = 95
      .SelectionMargin = False
      .Text = Workbooks(Datei).Worksheets("Dez").Cells(3, 6)
      .Locked = True
      If CStr(ThisWorkbook.Worksheets("Dez").Cells(3, 6)) = CStr(.Text) Then .Enabled = False
      .Visible = True
    End With
    
    Set CheckBoxHalter = .Controls.Add("Forms.CheckBox.1", "CHalter", True)
    With CheckBoxHalter
      .Top = 354
      .Left = 6
      .Height = 15
      .Width = 16
      If CStr(ThisWorkbook.Worksheets("Jan").Cells(3, 15)) = CStr(Workbooks(Datei).Worksheets("Dez").Cells(3, 15)) Then .Enabled = False
      .Value = True
      .Visible = True
    End With
    Set LabelHalter = .Controls.Add("Forms.Label.1", "LHalter", True)
    With LabelHalter
      .Top = 356
      .Left = 22
      .Height = 15
      .Width = 244
      If CheckBoxHalter.Enabled = False Then .Enabled = False
      .Caption = "Fahrzeughalter aus " & Year(Workbooks(Datei).Worksheets("Jan").Range("B11")) & " importieren:"
      .Visible = True
    End With
    Set TextBoxHalter = .Controls.Add("Forms.TextBox.1", "THalter", True)
    With TextBoxHalter
      .Top = 354
      .Left = 172
      .Height = 15
      .Width = 95
      .SelectionMargin = False
      .Text = Workbooks(Datei).Worksheets("Dez").Cells(3, 15)
      .Locked = True
      If CStr(ThisWorkbook.Worksheets("Dez").Cells(3, 15)) = CStr(.Text) Then .Enabled = False
      .Visible = True
    End With
    
    Set CheckBoxEW = .Controls.Add("Forms.CheckBox.1", "CEW", True)
    With CheckBoxEW
      .Top = 370
      .Left = 6
      .Height = 15
      .Width = 16
      If CStr(ThisWorkbook.Worksheets("Jan").Cells(4, 6)) = CStr(Workbooks(Datei).Worksheets("Dez").Cells(4, 6)) Then .Enabled = False
      .Value = True
      .Visible = True
    End With
    Set LabelEW = .Controls.Add("Forms.Label.1", "LEW", True)
    With LabelEW
      .Top = 372
      .Left = 22
      .Height = 15
      .Width = 244
      If CheckBoxEW.Enabled = False Then .Enabled = False
      .Caption = "Erst-Wohnsitz aus " & Year(Workbooks(Datei).Worksheets("Jan").Range("B11")) & " importieren:"
      .Visible = True
    End With
    Set TextBoxEW = .Controls.Add("Forms.TextBox.1", "TEW", True)
    With TextBoxEW
      .Top = 370
      .Left = 172
      .Height = 15
      .Width = 160
      .SelectionMargin = False
      .Text = Workbooks(Datei).Worksheets("Dez").Cells(4, 6)
      .Locked = True
      If CStr(ThisWorkbook.Worksheets("Jan").Cells(4, 6)) = CStr(.Text) Then .Enabled = False
      .Visible = True
    End With
    Set CheckBoxZW = .Controls.Add("Forms.CheckBox.1", "CZW", True)
    With CheckBoxZW
      .Top = 386
      .Left = 6
      .Height = 15
      .Width = 16
      If CStr(ThisWorkbook.Worksheets("Jan").Cells(5, 6)) = CStr(Workbooks(Datei).Worksheets("Dez").Cells(5, 6)) Then .Enabled = False
      .Value = True
      .Visible = True
    End With
    Set LabelZW = .Controls.Add("Forms.Label.1", "LZW", True)
    With LabelZW
      .Top = 388
      .Left = 22
      .Height = 15
      .Width = 244
      If CheckBoxZW.Enabled = False Then .Enabled = False
      .Caption = "Zweit-Wohnsitz aus " & Year(Workbooks(Datei).Worksheets("Jan").Range("B11")) & " importieren:"
      .Visible = True
    End With
    Set TextBoxZW = .Controls.Add("Forms.TextBox.1", "TZW", True)
    With TextBoxZW
      .Top = 386
      .Left = 172
      .Height = 15
      .Width = 160
      .SelectionMargin = False
      .Text = Workbooks(Datei).Worksheets("Dez").Cells(5, 6)
      .Locked = True
      If CStr(ThisWorkbook.Worksheets("Jan").Cells(5, 6)) = CStr(.Text) Then .Enabled = False
      .Visible = True
    End With
  End With
  For i = 1 To k
    For j = 4 To 73
        With RKImportDialog.Designer
          If OrteDaten(i - 1, 0) = ThisWorkbook.Worksheets("Daten").Range(Cells(j, 3).Address) Then
            .Controls("COrt" & i).Value = True
            .Controls("COrt" & i).Enabled = False
            .Controls("TOrt" & i).Enabled = False
            .Controls("TDS" & i).Enabled = False
            .Controls("TDL" & i).Enabled = False
          End If
        End With
    Next j
  Next i
  f = 0
  OrtLeer = 0
  For i = 0 To 69
    For j = 0 To 2
      OrtLeer = OrtLeer + Len(ThisWorkbook.Worksheets("Daten").Cells(i + 4, j + 1))
    Next j
    If OrtLeer = 2 Then f = f + 1
    OrtLeer = 0
  Next i
  Set kText = RKImportDialog.Designer.Controls.Add("Forms.TextBox.1", "k", True)
  kText.Text = k
  kText.Visible = False
  Set fText = RKImportDialog.Designer.Controls.Add("Forms.TextBox.1", "f", True)
  fText.Text = f
  fText.Visible = False
  Set aText = RKImportDialog.Designer.Controls.Add("Forms.TextBox.1", "a", True)
  aText.Text = 0
  aText.Visible = False
  Set LabelFrei = RKImportDialog.Designer.Controls.Add("Forms.Label.1", "LFrei", True)
    With LabelFrei
      .Top = 290
      .Left = 6
      .Height = 31
      .Width = 306
      .Caption = "Anzahl freier Pl|fffd|tze f|fffd|r Orte: " & f & Chr(10) & "Anzahl zum Importieren ausgew|fffd|hlter Orte: 0"
      .Visible = True
    End With
  With RKImportDialog.CodeModule
    .InsertLines 1, "'Orte importieren"
    .InsertLines 2, "Private Sub BAus0_Click()"
    .InsertLines 3, "  For i = 1 To " & k
    .InsertLines 4, "    If Controls(""COrt"" & i).Enabled = True Then Controls(""COrt"" & i).Value = False"
    .InsertLines 5, "  Next i"
    .InsertLines 6, "End Sub"
    .InsertLines 7, "Private Sub BAus1_Click()"
    .InsertLines 8, "  For i = 1 To " & k
    .InsertLines 9, "    If Controls(""COrt"" & i).Enabled = True Then Controls(""COrt"" & i).Value = True"
    .InsertLines 10, "  Next i"
    .InsertLines 11, "End Sub"
    .InsertLines 12, "Private Sub BAus2_Click()"
    .InsertLines 13, "  For i = 1 To " & k
    .InsertLines 14, "    If Controls(""TDS"" & i).ForeColor = &H80000008& Then Controls(""COrt"" & i).Value = True"
    .InsertLines 15, "  Next i"
    .InsertLines 16, "End Sub"
    .InsertLines 17, "Private Sub BAus3_Click()"
    .InsertLines 18, "  For i = 1 To " & k
    .InsertLines 19, "    If Controls(""TDS"" & i).ForeColor = RGB(0, 0, 255) Then Controls(""COrt"" & i).Value = True"
    .InsertLines 20, "  Next i"
    .InsertLines 21, "End Sub"
    .InsertLines 22, "Private Sub BAus4_Click()"
    .InsertLines 23, "  If CInt(Controls(""a"")) > CInt(Controls(""f"")) Then"
    .InsertLines 24, "    MsgBox (""Es sind "" & Controls(""a"") & "" Orte zum Importieren ausgew|fffd|hlt. " & _
                     "Es stehen aber nur "" & Controls(""f"") & "" freie Pl|fffd|tze f|fffd|r Orte zur Verf|fffd|gung."" & " & _
                     "Chr(10) & ""Es werden keine Orte importiert."")"
    .InsertLines 25, "    Exit Sub"
    .InsertLines 26, "  End If"
    .InsertLines 27, "  l = 3"
    .InsertLines 28, "  For i = 1 To " & k
    .InsertLines 29, "    If Controls(""COrt"" & i).Enabled = True And Controls(""COrt"" & i).Value = True Then"
    .InsertLines 30, "      LeererOrt = 3"
    .InsertLines 31, "      While LeererOrt > 2"
    .InsertLines 32, "        l = l + 1"
    .InsertLines 33, "        LeererOrt = 0"
    .InsertLines 34, "        For j = 1 To 3"
    .InsertLines 35, "          LeererOrt = LeererOrt + Len(ThisWorkbook.Worksheets(""Daten"").Cells(l, j))"
    .InsertLines 36, "        Next j"
    .InsertLines 37, "      Wend"
    .InsertLines 38, "      For j = 1 To 3"
    .InsertLines 39, "        ThisWorkbook.Worksheets(""Daten"").Cells(l, j) = OrteDaten(i - 1, j - 3 * (j \ 3))"
    .InsertLines 40, "      Next j"
    .InsertLines 41, "      Controls(""COrt"" & i).Enabled = False"
    .InsertLines 42, "      Controls(""TOrt"" & i).Enabled = False"
    .InsertLines 43, "      Controls(""TDS"" & i).Enabled = False"
    .InsertLines 44, "      Controls(""TDL"" & i).Enabled = False"
    .InsertLines 45, "      DatenImportiert = 1"
    .InsertLines 46, "    End If"
    .InsertLines 47, "  Next i"
    .InsertLines 48, "  If Controls(""CName"").Enabled = True And Controls(""CName"").Value = True Then"
    .InsertLines 49, "    ThisWorkbook.Worksheets(""Jan"").Cells(1, 8) = Controls(""TName"").Text"
    .InsertLines 50, "    ThisWorkbook.Worksheets(""Jan"").Cells(1, 13) = Controls(""TPNr"").Text"
    .InsertLines 51, "    Controls(""CName"").Enabled = False"
    .InsertLines 52, "    Controls(""LName"").Enabled = False"
    .InsertLines 53, "    Controls(""TName"").Enabled = False"
    .InsertLines 54, "    Controls(""TPNr"").Enabled = False"
    .InsertLines 55, "    DatenImportiert = 1"
    .InsertLines 56, "  End If"
    .InsertLines 57, "  If Controls(""CKennzeichen"").Enabled = True And Controls(""CKennzeichen"").Value = True Then"
    .InsertLines 58, "    ThisWorkbook.Worksheets(""Jan"").Cells(3, 6) = Controls(""TKennzeichen"").Text"
    .InsertLines 59, "    Controls(""CKennzeichen"").Enabled = False"
    .InsertLines 60, "    Controls(""LKennzeichen"").Enabled = False"
    .InsertLines 61, "    Controls(""TKennzeichen"").Enabled = False"
    .InsertLines 62, "    DatenImportiert = 1"
    .InsertLines 63, "  End If"
    .InsertLines 64, "  If Controls(""CHalter"").Enabled = True And Controls(""CHalter"").Value = True Then"
    .InsertLines 65, "    ThisWorkbook.Worksheets(""Jan"").Cells(3, 15) = Controls(""THalter"").Text"
    .InsertLines 66, "    Controls(""CHalter"").Enabled = False"
    .InsertLines 67, "    Controls(""LHalter"").Enabled = False"
    .InsertLines 68, "    Controls(""THalter"").Enabled = False"
    .InsertLines 69, "    DatenImportiert = 1"
    .InsertLines 70, "  End If"
    .InsertLines 71, "  If Controls(""CEW"").Enabled = True And Controls(""CEW"").Value = True Then"
    .InsertLines 72, "    ThisWorkbook.Worksheets(""Jan"").Cells(4, 6) = Replace(Controls(""TEW"").Text, "","", ""."")"
    .InsertLines 73, "    Controls(""CEW"").Enabled = False"
    .InsertLines 74, "    Controls(""LEW"").Enabled = False"
    .InsertLines 75, "    Controls(""TEW"").Enabled = False"
    .InsertLines 76, "    DatenImportiert = 1"
    .InsertLines 77, "  End If"
    .InsertLines 78, "  If Controls(""CZW"").Enabled = True And Controls(""CZW"").Value = True Then"
    .InsertLines 79, "    ThisWorkbook.Worksheets(""Jan"").Cells(5, 6) = Controls(""TZW"").Text"
    .InsertLines 80, "    Controls(""CZW"").Enabled = False"
    .InsertLines 81, "    Controls(""LZW"").Enabled = False"
    .InsertLines 82, "    Controls(""TZW"").Enabled = False"
    .InsertLines 83, "    DatenImportiert = 1"
    .InsertLines 84, "  End If"
    .InsertLines 85, "  If DatenImportiert = 1 Then"
    .InsertLines 86, "    Controls(""BAus5"").Caption = ""Beenden"""
    .InsertLines 87, "    MsgBox (""Daten wurden importiert."")"
    .InsertLines 88, "    DatenImportiert = 0"
    .InsertLines 89, "  EndIf"
    .InsertLines 90, "End Sub"
    .InsertLines 91, "Private Sub BAus5_Click()"
    .InsertLines 92, "  Unload me"
    .InsertLines 93, "End Sub"
    For i = 1 To k
      .InsertLines 3 * i + 94, "Private Sub COrt" & i & "_Change()"
      .InsertLines 3 * i + 95, "  Call Change(" & i & ")"
      .InsertLines 3 * i + 96, "End Sub"
    Next i
    .InsertLines 3 * k + 97, "Private Sub Change(i As Integer)"
    .InsertLines 3 * k + 98, "  If Controls(""COrt"" & i).Enabled = True Then"
    .InsertLines 3 * k + 99, "    If Controls(""COrt"" & i).Value = True Then"
    .InsertLines 3 * k + 100, "      Controls(""a"").Text = CInt(Controls(""a"").Text) + 1"
    .InsertLines 3 * k + 101, "    Else"
    .InsertLines 3 * k + 102, "      Controls(""a"").Text = CInt(Controls(""a"").Text) - 1"
    .InsertLines 3 * k + 103, "    End If"
    .InsertLines 3 * k + 104, "  End If"
    .InsertLines 3 * k + 105, "  AnzahlAnzeigen"
    .InsertLines 3 * k + 106, "End Sub"
    .InsertLines 3 * k + 107, "Private Sub AnzahlAnzeigen"
    .InsertLines 3 * k + 108, "  Controls(""LFrei"").Caption = ""Anzahl freier Pl|fffd|tze f|fffd|r Orte: "" & Controls(""f"").Text & Chr(10) & " & _
                              """Anzahl zum Importieren ausgew|fffd|hlter Orte: "" & Controls(""a"").Text"
    .InsertLines 3 * k + 109, "  If CInt(Controls(""a"").Text) > CInt(Controls(""f"").Text) Then"
    .InsertLines 3 * k + 110, "    Controls(""LFrei"").ForeColor = RGB(255, 0, 0)"
    .InsertLines 3 * k + 111, "  Else"
    .InsertLines 3 * k + 112, "    Controls(""LFrei"").ForeColor = RGB(0, 0, 0)"
    .InsertLines 3 * k + 113, "  End If"
    .InsertLines 3 * k + 114, "End Sub"
  End With
Windows(Datei).Visible = True
Workbooks(Datei).Saved = True
Workbooks(Datei).Close savechanges:=False
VBA.UserForms.Add(RKImportDialog.Name).Show
ThisWorkbook.VBProject.VBComponents.Remove VBComponent:=RKImportDialog
  Erase OrteDaten
Application.ScreenUpdating = True
End Sub
Function Sortieren()
  AktivesBlatt = ActiveSheet.Name
  Worksheets("Daten").Activate
  AktiveZelle = ActiveCell.Address
  With ThisWorkbook.Worksheets("Daten").Sort
    .SortFields.Clear
    .SortFields.Add Key:=Range("C4:C73"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    .SetRange Range("A3:C73")
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
  End With
  Range(AktiveZelle).Select
  Worksheets(AktivesBlatt).Activate
End Function


Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
  If Month(DateSerial(Year(Range("B11")), 2, 29)) = 3 And Rows(Range("A2") & ":" & Range("A2")).Hidden = False Then
    Range("C" & Range("A2") & ":D" & Range("A2") + Range("AC" & Range("A2")) - 1).Font.Color = RGB(255, 255, 255)
    Range("C" & Range("A2") & ":D" & Range("A2") + Range("AC" & Range("A2")) - 1).Interior.Color = RGB(255, 255, 255)
    Range("V" & Range("A2") & ":W" & Range("A2")).Font.Color = RGB(255, 255, 255)
    Range("V" & Range("A2") & ":W" & Range("A2")).Interior.Color = RGB(255, 255, 255)
    Rows(Range("A2") & ":" & Range("A2") + Range("AC" & Range("A2")) - 1).Hidden = True
    Range("AC" & Range("A2")) = 0
  ElseIf Month(DateSerial(Year(Range("B11")), 2, 29)) = 2 And Rows(Range("A2") & ":" & Range("A2")).Hidden = True Then
    AZz = 1
    While Rows(Range("A2") + AZz & ":" & Range("A2") + AZz).Hidden = True
      AZz = AZz + 1
    Wend
    Range("AC" & Range("A2")) = AZz
    Range("C" & Range("A2") & ":D" & Range("A2") + Range("AC" & Range("A2")) - 1).Font.Color = RGB(0, 51, 0)
    Range("C" & Range("A2") & ":D" & Range("A2") + Range("AC" & Range("A2")) - 1).Interior.Color = RGB(192, 192, 192)
    If Range("AC" & Range("A2")) > 1 Then
      Range("V" & Range("A2")).Font.Color = RGB(0, 51, 0)
      Range("V" & Range("A2")).Interior.Color = RGB(192, 192, 192)
    End If
    Range("W" & Range("A2")).Font.Color = RGB(0, 51, 0)
    Range("W" & Range("A2")).Interior.Color = RGB(192, 192, 192)
    Rows(Range("A2") & ":" & Range("A2") + Range("AC" & Range("A2")) - 1).Hidden = False
  End If
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Feb", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Feb", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Feb", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Mrz", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Mrz", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Mrz", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Apr", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Apr", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Apr", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Mai", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Mai", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Mai", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Jun", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Jun", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Jun", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Jul", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Jul", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Jul", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Aug", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Aug", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Aug", Target)
  Cancel = True
End Sub
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  Call WorksheetSelectionChange("Sep", Target)
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
  Call WorksheetChange("Sep", Target)
End Sub
Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
  Call WorksheetBeforeDoubleClick("Sep", Target)
  Cancel = True
End Sub

' InQuest injected base64 decoded content
' x)br

INQUEST-PP=macro
