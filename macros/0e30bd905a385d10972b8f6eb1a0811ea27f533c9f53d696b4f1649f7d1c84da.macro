Attribute VB_Name = "AFFICHAGE"
Function AFFICHAGE_MESSAGE(CHOIX_AFFICHAGE As String)
Select Case CHOIX_AFFICHAGE

    Case "TOUR"
        'If JOUEUR_ACTIF = 1 Then
            InterfaceJeu.LABEL_MESSAGE.Caption = "Tour du joueur " & JOUEUR_ACTIF
            'InterfaceJeu.LABEL_MESSAGE.Caption = "Tour du joueur " & JOUEUR_ACTIF & " (" & InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & JOUEUR_ACTIF).Caption & ")"

        'End If
    Case "VICTOIRE"
        'pour le easter egg
        If InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Value = True Then
            If JOUEUR_ACTIF = 2 Then
                InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 2 a gagn|fffd|!"
            Else
                InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 1 a gagn|fffd|!"
            End If
        
        Else
            If JOUEUR_ACTIF = 1 And InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
                InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Vous avez gagn|fffd|! :)"
            Else
                If JOUEUR_ACTIF = 1 And InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = False Then
                    InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 1 a gagn|fffd|!"
                Else
                    If JOUEUR_ACTIF = 2 And InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
                        InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Vous avez perdu! :("
                    Else
                        InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 2 a gagn|fffd|!"
                    End If
                End If
    
            End If
        End If
    Case "EGALITE"
        InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Egalit|fffd|!"
    
End Select

'traduction selon le cas de langue de toute les possibilit|fffd|s (tr|fffd|s peu ici donc facile et faisable |fffd| la main)

If InterfaceJeu.LABEL_MESSAGE.Caption = "Tour du joueur " & JOUEUR_ACTIF And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = True Then InterfaceJeu.LABEL_MESSAGE.Caption = "Turn of player " & JOUEUR_ACTIF
If InterfaceJeu.LABEL_MESSAGE.Caption = "Turn of player " & JOUEUR_ACTIF And InterfaceJeu.OPTION_LANGUE_FRANCAIS.Value = True Then InterfaceJeu.LABEL_MESSAGE.Caption = "Tour du joueur " & JOUEUR_ACTIF

'--------------------
If InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Vous avez gagn|fffd|! :)" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = True Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: You won! :)"
End If

If InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: You won! :)" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = False Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Vous avez gagn|fffd|! :)"
End If

'------------
If InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 1 a gagn|fffd|!" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = True Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: Player 1 won!"
End If

If InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: Player 1 won!" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = False Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 1 a gagn|fffd|!"
End If

'------------------
If InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Vous avez perdu! :(" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = True Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: You lost! :("
End If

If InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: You lost! :(" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = False Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Vous avez perdu! :("
End If

'-------------------
If InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 2 a gagn|fffd|!" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = True Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: Player 2 won!"
End If

If InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: Player 2 won!" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = False Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Le joueur 2 a gagn|fffd|!"
End If

'--------------
If InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Egalit|fffd|!" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = True Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: Draw"
End If

If InterfaceJeu.LABEL_MESSAGE.Caption = "GAME DONE: Draw" And InterfaceJeu.OPTION_LANGUE_ENGLISH.Value = False Then
    InterfaceJeu.LABEL_MESSAGE.Caption = "PARTIE FINIE: Egalit|fffd|!"
End If

End Function


Function CACHE_DATA()
Call INITIALISATION_VARIABLE_INTERFACE

Sheets(FEUILLE_DATA).Visible = xlVeryHidden
End Function

Function AFFICHE_DATA()
Call INITIALISATION_VARIABLE_INTERFACE

Sheets(FEUILLE_DATA).Visible = True
End Function
Attribute VB_Name = "Am|fffd|lioration"
'---------------
'A faire
'-------------

'easter eggg:
'userform specifique
'partie IA vs IA en facile
'faire une centaine de partie avec un timer entre 2 partie qui se raccourcis
'faire tout disparaitre et ecrire WHAT ABOUT A NICE CHESS GAME?
'mettre que l'easter egg existe

'stats general (bouton RESET, GLOBAL STATS)
'mettre que les stats de l'IA en cours, diviser en 3 stats distinctes
'advice: hard IA playing first will never loose ! try intermediate for more fun with IA playing first
'gerer les erreurs

'mettre en anglais les statistiques et le easter egg
'faire des boutons de reset

'pouvoir ajouter des symboles pour les joueurs
'image quand on gagne
'faire des stats pour 2 joueurs
'garder la seed pour relancer toujours la m|fffd|me partie versus IA tant que le joueur ne clique pas pour |fffd|viter qu'ils puisse reset le premier coup
'faire par 3 les seeds |fffd| chaque fois qu'on commence une partie, remplir le fichier de base avec des chiffres au hasard

'faire un menu des updates du log



'verry hiden le data


'faire 3 difficult|fffd| d'IA
'facile : random sauf si possible win ou loose ou mettre 50% de chance de voir le coup en rnd?
'moyen: random le premier coup (sauf milieu car le meilleur), random sur les diagonales quand joue en deuxieme) si joueur joue au milieu => sur les bords
'dur : commence au milieu, joue les meilleurs coups

'faire une option % ou valeur pour les stats ou les deux?

'-----------------------
'update possible
'-----------------------
'raccourcie clavier?
'faire un choix diff|fffd|rente entre "O" et "X"
'mettre en couleur les lignes choisi par les joueurs

'-------------------------
'DONE:
'-------------------------

'V3
'mettre en couleur la ligne gagnante
'faire des stats pour les joueurs et pas que vs IA
'randomize am|fffd|liorer : seed mis en m|fffd|moire si jamais le joueur refait une partie
'gardez en m|fffd|moire les parties non finies
'anti cheat: faire le select case quand on change la preference pour ajouter une loose si necessaire
'anti cheat: reprendre les cases directment quand on cliques dessus pour eviter de tricher en tuant excel et ne pas avant de parties perdues
'mettre l'adresse mail
'mettre l'adresse du site
'enregistrer les pr|fffd|f|fffd|rences

'V2:
'log ajout|fffd|
'interface graphiques
'symboles de joueurs
'difficult|fffd| IA
'statistiques 2 joueurs + reset specifique
'preferences JOUEURS sauvegarder
'hard reset /reset
'auto save du jeu
'nombre de partie + % dans les stats

'random ajout|fffd| pour savoir qui commence ('faire un rnd pour savoir si le joueur commence ou l'IA)
''compter une loose quand l'IA commence que s'il y a 2 coup (soit que le joueur |fffd| fait un coup)

'V1:
'nouvelle partie decompte win |fffd| revoir pour 1 joueur
'cas ou toute les case sont remplies
'faire une fonction pour le win/loose dans le check IA
'si on change de nombre de joueur pendant une partie, cela remet |fffd| z|fffd|ro et comptabilise une loose si on passe de 1 |fffd| 2 joueurs en pleine partie
'refaire les variables en integer avec la nouvelle macro specifique

'quand on change de langue il y a un bug sur le "tour du joueur 1"
Attribute VB_Name = "BUG"
Attribute VB_Base = "0{5FC3DCE0-E262-4315-9D4B-354599820FAE}{2D89BB05-D83D-4F19-AEB5-0C63C0C819AF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Attribute VB_Name = "Feuil5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Feuil6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "IA"
Function MOUVEMENT_IA()
Dim VALEUR_IA As String
Dim VALEUR_JOUEUR As String
Dim BALAYAGE_DIAGONALE As Integer
Dim RND_LIGNE As Integer
Dim RND_COLONNE As Integer
Dim RND_CHOIX As Integer
Dim CHECK_DISPO As String



'quelque soit :la difficult|fffd| si on peut gagner, on gagne, si on peut perdre, on contre






'------------------------------------------------------------------------------------------------------------------------------------------------------------
'------------------------------------------------------------------------autre cas -----------------------------------------------------------------------
'------------------------------------------------------------------------------------------------------------------------------------------------------------


If DIFFICULTE_IA = "FACILE" Then

Else
    
    
    
    '-------------------------------------------------------------------------------------------------------------------------
    '------------------------------------nombre pair de coup jou|fffd| sur le jeu, l'IA a donc commenc|fffd|----------------------------
    '-------------------------------------------------------------------------------------------------------------------------
    If CHECK_NOMBRE_JOUEUR("LIGNE", 1, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 2, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 3, "") Mod 2 = 0 Then
        'nombre pair de coup jou|fffd| sur le jeu, l'IA a donc commenc|fffd|
        
        
        'on fait un select case sur le nombre de case rempplie
        Select Case CHECK_NOMBRE_JOUEUR("LIGNE", 1, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 2, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 3, "")
            '--------------------------------------------------------------
            '------------------------------- CASE 0 -----------------------
            '--------------------------------------------------------------
            Case "0"
            'premier coup sur le jeu
            'on fait un rnd pour savoir dans quel coin jouer
            Randomize (Timer)
            Select Case Int((4 - 1 + 1) * Rnd + 1)
                Case 1
                    Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE).Value = VALEUR_IA
                     Exit Function
                Case 2
                    Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = VALEUR_IA
                     Exit Function
                Case 3
                    Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                     Exit Function
                Case Else
                    Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                   Exit Function
                
                    
            End Select
            '--------------------------------------------------------------
            '------------------------------- CASE 2 -----------------------
            '--------------------------------------------------------------
            
            Case "2"
            'si on est dans un cas 0X
        
            '--------------------------------------------------------------
            '------------------------------- CASE 4 -----------------------
            '--------------------------------------------------------------
            
            Case "4"
        
            '--------------------------------------------------------------
            '------------------------------- CASE else --------------------
            '--------------------------------------------------------------
            
            Case Else
        
        
        End Select
    Else
        '-------------------------------------------------------------------------------------------------------------------------
        '------------------------------------nombre impair de coup jou|fffd| sur le jeu, le joueur a donc commenc|fffd|---------------------
        '-------------------------------------------------------------------------------------------------------------------------
        
        
        'on fait un select case sur le nombre de case rempplie
        Select Case CHECK_NOMBRE_JOUEUR("LIGNE", 1, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 2, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 3, "")
            '--------------------------------------------------------------
            '------------------------------- CASE 1 -----------------------
            '--------------------------------------------------------------
            Case "1"
                'le joueur vient de jouer en premier, on joue en deuxi|fffd|me
                '--------------------------------------------------------------
                '------------------------------- CAS 1 ------------------------
                '--------------------------------------------------------------
                's'il a mis au centre, on met dans un des coin
                If Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = VALEUR_JOUEUR Then
                        'on fait un rnd pour savoir dans quel coin jouer
                    Randomize (Timer)
                    Select Case Int((4 - 1 + 1) * Rnd + 1)
                        Case 1
                            Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE).Value = VALEUR_IA
                             Exit Function
                        Case 2
                            Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = VALEUR_IA
                             Exit Function
                        Case 3
                            Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                             Exit Function
                        Case Else
                            Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                           Exit Function
                            
                    End Select
                '--------------------------------------------------------------
                '------------------------------- CAS 2 ------------------------
                '--------------------------------------------------------------
                'sinon il a mis dans un coin ou sur un bords, on met au milieu
                Else
                    Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                    Exit Function
                    
                    
                End If
    
    
            '--------------------------------------------------------------
            '------------------------------- CASE ELSE---------------------
            '--------------------------------------------------------------
            Case Else
                'si on arrive ici alors on a pas eu besoin de bloquer le joueur
                 
                 
                 'quand il y a 3 case de remplie
                 If CHECK_NOMBRE_JOUEUR("LIGNE", 1, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 2, "") + CHECK_NOMBRE_JOUEUR("LIGNE", 3, "") = 3 Then
                    'si on est dans une disposition OXO (le joueur a commenc|fffd| sur un des bords puis a jouer |fffd| l'oppos|fffd| (puisque avec le "case 1" juste avant dans ce cas la l'IA joue au milieu) alors on peut gagner
                    If Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "O" And _
                            Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "X" And _
                            Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "O" Or _
                       Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "O" And _
                            Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "X" And _
                            Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "O" Then
             
                        
                        'on tir au sort ou positionner sur les 4 positions des coins de libre forc|fffd|ment donc: Int((upperbound - lowerbound + 1) * Rnd + lowerbound)
                        Select Case Int((4 - 1 + 1) * Rnd + 1)
                            Case 1
                                Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE).Value = VALEUR_IA
                            Case 2
                                Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = VALEUR_IA
                            Case 3
                                Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                            Case Else
                                Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                        End Select
                        
                        Exit Function
                        
                    End If
                    
                    'si on est dans une disposition XOO/OOX sur les diagonales(le joueur a commenc|fffd| au milieu puis sur la m|fffd|me diagonale), il faut jouer sur une case adjacente pour forcer un draw/ne pas perdre
                     If 5 = 4 Then
                     'If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, "") = 3 And Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "O" Then
                        'on regarde si on est sur la premiere case de la diagonale, si oui on fait un random pour placer sur les deux positions adjacentes
                        RND_CHOIX = Int((2 - 1 + 1) * Rnd + 1) 'rnd entre 1 et 2 pour la position
                        If Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE).Value = "X" Then
                            'cas:
                            'X--
                            '-O-
                            '--O
                            If RND_CHOIX = 1 Then
                                Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "X"
                            Else
                                Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "X"
                            End If
                            Exit Function
                        Else
                            'cas:
                            'O--
                            '-O-
                            '--X
                            If RND_CHOIX = 1 Then
                                Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "X"
                            Else
                                Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "X"
                            End If
                            Exit Function
                        End If
                        
                     End If
                     If 5 = 4 Then
                     'If CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, "") = 3 And Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "O" Then
                        'on regarde si on est sur la premiere case de la diagonale, si oui on fait un random pour placer sur les deux positions adjacentes
                        RND_CHOIX = Int((2 - 1 + 1) * Rnd + 1) 'rnd entre 1 et 2 pour la position
                        
                        If Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "X" Then
                            'cas:
                            '--O
                            '-O-
                            'X--
                            If RND_CHOIX = 1 Then
                                Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "X"
                            Else
                                Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "X"
                            End If
                            Exit Function
                        Else
                            'sinon on est sur la derni|fffd|re case et on fait aussi un rnd
                            'cas:
                            '--X
                            '-O-
                            'O--
                            If RND_CHOIX = 1 Then
                                Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "X"
                            Else
                                Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "X"
                            End If
                            Exit Function
                        End If
                        
                     End If
                     
    
                 End If
                 
                'on joue dans un bord si disponible et on ajoute les position pour tirer au sort
                CHECK_DISPO = ""
                If Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "" Then CHECK_DISPO = CHECK_DISPO & "1"
                If Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "" Then CHECK_DISPO = CHECK_DISPO & "2"
                If Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "" Then CHECK_DISPO = CHECK_DISPO & "3"
                If Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "" Then CHECK_DISPO = CHECK_DISPO & "4"
                
                If CHECK_DISPO <> "" Then
                    'on tir au sort ou positionner: Int((upperbound - lowerbound + 1) * Rnd + lowerbound)
                    'avec notre lowerbound = 1 et le max vaut le nombre de solution trouver, au mini on aura upperbound = 1 donc on tirera le chiffre lui m|fffd|me
                    RND_CHOIX = Int((Len(CHECK_DISPO) - 1 + 1) * Rnd + 1)
                    Select Case Mid(CHECK_DISPO, RND_CHOIX, 1)
                        Case 1
                            Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                        Case 2
                            Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = VALEUR_IA
                        Case 3
                            Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                        Case Else
                            Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                    End Select
                    
                    Exit Function
                Else
                    'sinon on joue random dans une cellule vide
                
                    Do
                    'on fait un rnd sur un cube 3x3 puis apr|fffd|s on calculera la position en fonction de notre feuille excel
                    RND_LIGNE = Int((2 - 0 + 1) * Rnd + 0)
                    RND_COLONNE = Int((2 - 0 + 1) * Rnd + 0)
                    'on boucle tant que la cellule est vide
                    Loop Until Cells(PREMIERE_LIGNE_GRILLE + RND_LIGNE * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + RND_COLONNE * INCREMENTATION_ENTRE_CASE).Value = ""
                    Cells(PREMIERE_LIGNE_GRILLE + RND_LIGNE * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + RND_COLONNE * INCREMENTATION_ENTRE_CASE).Value = VALEUR_IA
                    Exit Function
              End If
        End Select
    End If
End If
'si jamais il y a un bug on affiche l'image ad|fffd|quate
BUG.Show



                    

End Function
Attribute VB_Name = "IA_INTERFACE"
Function MOUVEMENT_IA_INTERFACE()

Dim TOTAL_COUP As Integer
Dim BALAYAGE_LIGNE As Integer
Dim BALAYAGE_COLONNE As Integer
Dim BALAYAGE_CASE_IA As Integer
Dim VALEUR_JOUEUR As Integer
Dim RANDOM As Integer
TOTAL_COUP = CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) + CHECK_NOMBRE_JOUEUR("LIGNE", 2, 0) + CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0)


'on regarde si on peux gagner ou empecher de gagner
If IA_WIN_LOOSE_ALL Then Exit Function



'--------------------------------------------------


'selon la difficult|fffd|
Select Case Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value
'------------------------------------------------------------------------------------------------------------------------------------
'------------------------------------------------------FACILE------------------------------------------------------------------------
'------------------------------------------------------------------------------------------------------------------------------------

    Case "OPTION_DIFFICULTE_FACILE"
        
        'on joue en random
        Call IA_RANDOM
'------------------------------------------------------------------------------------------------------------------------------------
'------------------------------------------------------INTER-------------------------------------------------------------------------
'------------------------------------------------------------------------------------------------------------------------------------
    Case "OPTION_DIFFICULTE_INTERMEDIAIRE"
        If IA_WIN_LOOSE_AVANCE Then Exit Function
        
        Select Case TOTAL_COUP
            Case 0
                'joue le premier coup dans un coin et pas au centre
                Select Case VALEUR_RANDOM(1, 4)
                    Case 1
                        InterfaceJeu.CASE_1.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    Case 2
                        InterfaceJeu.CASE_3.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    Case 3
                        InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    Case 4
                        InterfaceJeu.CASE_9.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                End Select
                
                Exit Function
            Case 3
            'si on est dans le cas
                'X--    '--X
                '-0-    '-0-
                '--X    'X--
                
                If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 3 Or CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, 0) = 3 Then
                
                    'si on joue dans un coin on perd |fffd| coup sur
                    RANDOM = VALEUR_RANDOM(1, 2) 'pour tirage au sort mode inter qui a une chance de faire ce coup
                    
                    If RANDOM = 1 Then
                        'on joue partout sauf dans un coin
                        Select Case VALEUR_RANDOM(1, 4)
                            Case 1
                                InterfaceJeu.CASE_2.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                            Case 2
                                InterfaceJeu.CASE_4.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                            Case 3
                                InterfaceJeu.CASE_6.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                            Case 4
                                InterfaceJeu.CASE_8.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        End Select
                        
                        Exit Function
                    Else
                        'on joue dans un coin
                        Select Case VALEUR_RANDOM(1, 2)
                            Case 1
                                If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 3 Then
                                    InterfaceJeu.CASE_3.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                Else
                                    InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                End If
                            Case 2
                                If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 3 Then
                                    InterfaceJeu.CASE_1.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                Else
                                    InterfaceJeu.CASE_9.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                End If
                        End Select
                        
                        Exit Function
                    'sinon on va jouer en random en sortant du if
                    End If
                End If
                
            Case Else
                'on ne fait rien, on va jouer en random en sortant
                
        End Select
        
        Call IA_RANDOM
        
'------------------------------------------------------------------------------------------------------------------------------------
'------------------------------------------------------DIFFICILE---------------------------------------------------------------------
'------------------------------------------------------------------------------------------------------------------------------------
    Case "OPTION_DIFFICULTE_DIFFICILE"
    
        If IA_WIN_LOOSE_AVANCE Then Exit Function
        
        Select Case TOTAL_COUP
            Case 0
                'on joue en premier, au milieu pour maximiser les chances
                InterfaceJeu.CASE_5.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                Exit Function
            Case 1
                'le joueur vient de jouer en premier, si le centre est disponible on joue au milieu
                If InterfaceJeu.CASE_5.Caption = "" Then
                    InterfaceJeu.CASE_5.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                Else
                    'sinon on joue sur un coin
                    Select Case VALEUR_RANDOM(1, 4)
                        Case 1
                            InterfaceJeu.CASE_1.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        Case 2
                            InterfaceJeu.CASE_3.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        Case 3
                            InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        Case 4
                            InterfaceJeu.CASE_9.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    End Select
                End If
                
                Exit Function
                
            Case 2
                'si le joueur a jouer sur un bord, on gagner en deux coups
                For BALAYAGE_CASE_IA = 2 To 8 Step 2
                
                    If InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_1 Then
                        Select Case VALEUR_RANDOM(1, 2)
                            Case 1
                                If BALAYAGE_CASE_IA = 4 Or BALAYAGE_CASE_IA = 6 Then
                                    InterfaceJeu.Controls("CASE_2").Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                Else
                                    InterfaceJeu.Controls("CASE_4").Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                End If
                            Case 2
                                If BALAYAGE_CASE_IA = 4 Or BALAYAGE_CASE_IA = 6 Then
                                    InterfaceJeu.Controls("CASE_8").Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                Else
                                    InterfaceJeu.Controls("CASE_6").Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                                    
                                End If
                        End Select
                        
                        Exit Function
                    End If
                Next
                'si on arrive ici le joueur |fffd| jouer dans un coin, on joue dans le coin oppos|fffd|
                If InterfaceJeu.CASE_1.Caption <> "" Then
                    InterfaceJeu.CASE_9.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                Else
                    If InterfaceJeu.CASE_3.Caption <> "" Then
                        InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    Else
                        If InterfaceJeu.CASE_7.Caption <> "" Then
                            InterfaceJeu.CASE_3.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        Else
                            InterfaceJeu.CASE_1.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        End If
                    End If
                End If
                Exit Function
            Case 3
                'si on est dans le cas
                'X--    '--X
                '-0-    '-0-
                '--X    'X--
                
                If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 3 Or CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, 0) = 3 Then
                    
                    'on joue partout sauf dans un coin
                    Select Case VALEUR_RANDOM(1, 4)
                        Case 1
                            InterfaceJeu.CASE_2.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        Case 2
                            InterfaceJeu.CASE_4.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        Case 3
                            InterfaceJeu.CASE_6.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                        Case 4
                            InterfaceJeu.CASE_8.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    End Select
                    
                    Exit Function
    
                End If
            Case Else
                'on ne fait rien, on va jouer en random en sortant
         End Select

            
          'ici on joue au hasard
            'refaire la presque win pour des mouvements meilleurs
            Call IA_RANDOM
        

End Select
    
End Function




Function IA_WIN_LOOSE_ALL() As Boolean

Dim BALAYAGE_LIGNE As Integer
Dim BALAYAGE_COLONNE As Integer
Dim BALAYAGE_CASE_IA As Integer
Dim VALEUR_JOUEUR As Integer

IA_WIN_LOOSE_ALL = True

'sur l'IA facile on donne 50% de chance de ne pas voir un coup
If InterfaceJeu.OPTION_DIFFICULTE_FACILE.Value = True And VALEUR_RANDOM(1, 2) = 1 Then
    GoTo SORTIE
End If
'on va regarder en premier avec la valeur = 2 pour l'IA  pour faire le tour des victoires possibles
'si on ne peut pas gagner, on passe |fffd| la valeur 1 pour le joueur pour faire le tour des d|fffd|faites possibles pour l'IA et l'emp|fffd|cher
For VALEUR_JOUEUR = 2 To 1 Step -1

    '-----------------------------------------------------------------------
    '-----------------------------------LIGNE-------------------------------
    '-----------------------------------------------------------------------
    JOUEUR_ACTIF = VALEUR_JOUEUR
    
    For BALAYAGE_LIGNE = 1 To 3
        If CHECK_NOMBRE_JOUEUR("LIGNE", BALAYAGE_LIGNE, VALEUR_JOUEUR) = 2 And CHECK_NOMBRE_JOUEUR("LIGNE", BALAYAGE_LIGNE, 0) = 2 Then
            'on regarde la case de libre pour y |fffd|crire
            For BALAYAGE_CASE_IA = (BALAYAGE_LIGNE * 3) - 2 To BALAYAGE_LIGNE * 3
                If InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = "" Then
                    InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    JOUEUR_ACTIF = 2
                    Exit Function
                End If
            Next
        End If
    Next
    
    
    '-----------------------------------------------------------------------
    '----------------------------------COLONNE------------------------------
    '-----------------------------------------------------------------------
    For BALAYAGE_COLONNE = 1 To 3
        If CHECK_NOMBRE_JOUEUR("COLONNE", BALAYAGE_COLONNE, VALEUR_JOUEUR) = 2 And CHECK_NOMBRE_JOUEUR("COLONNE", BALAYAGE_COLONNE, 0) = 2 Then
            'on regarde la case de libre pour y |fffd|crire
            
            For BALAYAGE_CASE_IA = BALAYAGE_COLONNE To BALAYAGE_COLONNE + 6 Step 3
                If InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = "" Then
                    InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                    JOUEUR_ACTIF = 2
                    Exit Function
                End If
            Next
        End If
    Next
    '-----------------------------------------------------------------------
    '---------------------------------DIAGONALE-----------------------------
    '-----------------------------------------------------------------------
    'diagonale 1
    If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, VALEUR_JOUEUR) = 2 And CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 2 Then
        For BALAYAGE_CASE_IA = 1 To 9 Step 4
            If InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = "" Then
                'on regarde la case de libre pour y |fffd|crire
                InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                JOUEUR_ACTIF = 2
                Exit Function
            End If
        Next
    End If
    
    'diagonale 2
    If CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, VALEUR_JOUEUR) = 2 And CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, 0) = 2 Then
        For BALAYAGE_CASE_IA = 3 To 7 Step 2
            'on regarde la case de libre pour y |fffd|crire
            If InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = "" Then
                InterfaceJeu.Controls("CASE_" & BALAYAGE_CASE_IA).Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
                JOUEUR_ACTIF = 2
                Exit Function
            End If
        Next
    
    
    End If
Next

SORTIE:
JOUEUR_ACTIF = 2
IA_WIN_LOOSE_ALL = False

End Function

Function IA_WIN_LOOSE_AVANCE() As Boolean

Dim BALAYAGE_CASE_IA As Integer
Dim BALAYAGE_CASE_IA_2 As Integer
Dim VALEUR_JOUEUR As Integer

Dim BALAYAGE_LIGNE As Integer
Dim BALAYAGE_COLONNE As Integer



'case ou le joueur a deux cas en diagonale avec une case de vide dans le coin entour|fffd|, il faut jouer dedans pour ne pas perdre
'exemple :
'   -O-
'   OX-
'   ---
'si on ne joue pas dans le coin haut gauche on a forc|fffd|ment perdu
'de la m|fffd|me fa|fffd|on si on a ce cas la pour l'IA, elle va jou|fffd| sur cette case pour gagner |fffd| coup sur

IA_WIN_LOOSE_AVANCE = True



'on balaye les deux joueurs, on regarde l'IA en premier pour faire un coup gagnant avant un coup qui emp|fffd|che de perdre
For VALEUR_JOUEUR = 2 To 1 Step -1

    JOUEUR_ACTIF = VALEUR_JOUEUR
    
    'cas 1
    '   -O-
    '   O??
    '   -??
    If InterfaceJeu.CASE_2.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_4.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 1, 0) = 1 Then
        
        
            'InterfaceJeu.CASE_1.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR)
            InterfaceJeu.CASE_1.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
        Exit Function
    
    End If
    
    'cas 2
    '   -O-
    '   ??0
    '   ??-
    If InterfaceJeu.CASE_2.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_6.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 3, 0) = 1 Then
        
        
            InterfaceJeu.CASE_3.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
        Exit Function
    
    End If
    'cas 3
    '   ??-
    '   ??0
    '   -0-
    If InterfaceJeu.CASE_6.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_8.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 3, 0) = 1 Then
        
        
            InterfaceJeu.CASE_9.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
        Exit Function
    
    End If
    
    'cas 4
    '   -??
    '   O??
    '   -O-
    If InterfaceJeu.CASE_4.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_8.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 1, 0) = 1 Then
        
        
            InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
        Exit Function
    
    End If
    
    'cas 5      et case 6
    '   -?-     -??
    '   O0?     O0?
    '   -??     -?-
    
    For BALAYAGE_CASE_IA = 1 To 2
        If InterfaceJeu.CASE_4.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            CHECK_NOMBRE_JOUEUR("DIAGONALE", BALAYAGE_CASE_IA, 0) = 1 And _
            CHECK_NOMBRE_JOUEUR("COLONNE", 1, 0) = 1 Then
            
            If BALAYAGE_CASE_IA = 1 Then
                InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            Else
                InterfaceJeu.CASE_1.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            End If
            JOUEUR_ACTIF = 2
            Exit Function
        
        End If
        
    Next
    
    'cas 7      et case 8
    '   -0-     -0-
    '   ?0?     ?0?
    '   -??     ??-
    
    For BALAYAGE_CASE_IA = 1 To 2
        If InterfaceJeu.CASE_2.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            CHECK_NOMBRE_JOUEUR("DIAGONALE", BALAYAGE_CASE_IA, 0) = 1 And _
            CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 1 Then
            
            If BALAYAGE_CASE_IA = 1 Then
                InterfaceJeu.CASE_1.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            Else
                InterfaceJeu.CASE_3.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            End If
            JOUEUR_ACTIF = 2
            Exit Function
        
        End If
        
    Next

    'cas 9      et case 10
    '   -?-     ??-
    '   ?00     ?00
    '   ??-     -?-
    
    For BALAYAGE_CASE_IA = 1 To 2
        If InterfaceJeu.CASE_6.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            CHECK_NOMBRE_JOUEUR("DIAGONALE", BALAYAGE_CASE_IA, 0) = 1 And _
            CHECK_NOMBRE_JOUEUR("COLONNE", 3, 0) = 1 Then
            
            If BALAYAGE_CASE_IA = 1 Then
                InterfaceJeu.CASE_9.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            Else
                InterfaceJeu.CASE_3.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            End If
            JOUEUR_ACTIF = 2
            Exit Function
        
        End If
        
    Next
    
    'cas 11      et case 12
    '   ??-     -??
    '   ?0?     ?0?
    '   -0-     -0-
    
    For BALAYAGE_CASE_IA = 1 To 2
        If InterfaceJeu.CASE_8.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
            CHECK_NOMBRE_JOUEUR("DIAGONALE", BALAYAGE_CASE_IA, 0) = 1 And _
            CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 1 Then
            
            If BALAYAGE_CASE_IA = 1 Then
                InterfaceJeu.CASE_9.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            Else
                InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            End If
            JOUEUR_ACTIF = 2
            Exit Function
        
        End If
        
    Next
    
    'cas 13      et case 14
    '   0??     0--
    '   -0?     ?0?
    '   -?-     ??-
    
    If InterfaceJeu.CASE_1.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) Then
    
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 2 And CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 1 Then
    
            InterfaceJeu.CASE_2.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 2 And CHECK_NOMBRE_JOUEUR("COLONNE", 1, 0) = 1 Then
    
            InterfaceJeu.CASE_4.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 2, 0) = 1 Then
    
            InterfaceJeu.CASE_2.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 2, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 1, 0) = 1 Then
    
            InterfaceJeu.CASE_4.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
    End If
    
    
    'cas 15      et case 16
    '   ??0     --0
    '   ?0-     ?0?
    '   -?-     -??
    If InterfaceJeu.CASE_3.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) Then
    
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, 0) = 2 And CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 1 Then
    
            InterfaceJeu.CASE_2.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, 0) = 2 And CHECK_NOMBRE_JOUEUR("COLONNE", 3, 0) = 1 Then
    
            InterfaceJeu.CASE_6.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 2, 0) = 1 Then
    
            InterfaceJeu.CASE_2.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 2, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 3, 0) = 1 Then
    
            InterfaceJeu.CASE_6.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
    End If

    'cas 17      et case 18
    '   -?-     -??
    '   ?0-     ?0?
    '   ??0     --0
    If InterfaceJeu.CASE_9.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) Then
    
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 2 And CHECK_NOMBRE_JOUEUR("COLONNE", 3, 0) = 1 Then
    
            InterfaceJeu.CASE_6.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 1, 0) = 2 And CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 1 Then
    
            InterfaceJeu.CASE_8.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 2, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 3, 0) = 1 Then
    
            InterfaceJeu.CASE_6.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 2, 0) = 1 Then
    
            InterfaceJeu.CASE_8.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
    End If
    
    'cas 19      et case 20
    '   -?-     ??-
    '   -0?     ?0?
    '   0??     0--
    If InterfaceJeu.CASE_7.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_5.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) Then
    
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, 0) = 2 And CHECK_NOMBRE_JOUEUR("COLONNE", 1, 0) = 1 Then
    
            InterfaceJeu.CASE_4.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("DIAGONALE", 2, 0) = 2 And CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 1 Then
    
            InterfaceJeu.CASE_8.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 2, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 1, 0) = 1 Then
    
            InterfaceJeu.CASE_4.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
        
        If CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 1 And CHECK_NOMBRE_JOUEUR("COLONNE", 2, 0) = 1 Then
    
            InterfaceJeu.CASE_7.Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2
            JOUEUR_ACTIF = 2
            Exit Function
        End If
    End If
    

    
Next

JOUEUR_ACTIF = 2
IA_WIN_LOOSE_AVANCE = False

End Function

Function IA_RANDOM()

Dim CHOIX_CASE As Integer

Do
    CHOIX_CASE = VALEUR_RANDOM(1, 9)
    
Loop Until InterfaceJeu.Controls("CASE_" & CHOIX_CASE).Caption = ""

InterfaceJeu.Controls("CASE_" & CHOIX_CASE).Caption = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption

End Function
Function IA_WIN_LOOSE_AVANCE_OLD() As Boolean

Dim BALAYAGE_LIGNE As Integer
Dim BALAYAGE_COLONNE As Integer
Dim BALAYAGE_CASE_IA As Integer
Dim VALEUR_JOUEUR As Integer

'case ou le joueur a deux cas en diagonale avec une case de vide dans le coin entour|fffd|, il faut jouer dedans pour ne pas perdre
'exemple :
'   -O-
'   OX-
'   ---
'si on ne joue pas dans le coin haut gauche on a forc|fffd|ment perdu
'de la m|fffd|me fa|fffd|on si on a ce cas la pour l'IA, elle va jou|fffd| sur cette case pour gagner |fffd| coup sur



IA_WIN_LOOS_AVANCE = True
'on balaye les deux joueurs
For VALEUR_JOUEUR = 2 To 1 Step -1
    'cas 1
    '   -O?
    '   O??
    '   ???
    If InterfaceJeu.CASE_2.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        InterfaceJeu.CASE_4.Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & VALEUR_JOUEUR) And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 1, "") = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 1, "") = 1 Then
        
        
        Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE).Value = "X"
        Exit Function
    
    End If
    'cas 2
    '   -O-
    '   ??0
    '   ??-
    If Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "O" And _
        Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "O" And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 1, "") = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 3, "") = 1 Then
        
        
        Cells(PREMIERE_LIGNE_GRILLE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "X"
        Exit Function
    
    End If
    'cas 3
    '   ??-
    '   ??0
    '   -0-
    If Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "O" And _
        Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "O" And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 3, "") = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 3, "") = 1 Then
        
        
        Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE).Value = "X"
        Exit Function
    
    End If
    
    'cas 4
    '   -??
    '   O??
    '   -O-
    If Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "O" And _
        Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "O" And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 3, "") = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 1, "") = 1 Then
        
        
        Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "X"
        Exit Function
    
    End If
    
    'cas 5
    '   -?-
    '   O0?
    '   -??
    If Cells(PREMIERE_LIGNE_GRILLE + INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "O" And _
        Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE + INCREMENTATION_ENTRE_CASE).Value = "O" And _
        CHECK_NOMBRE_JOUEUR("LIGNE", 3, "") = 1 And _
        CHECK_NOMBRE_JOUEUR("COLONNE", 1, "") = 1 Then
        
        
        Cells(PREMIERE_LIGNE_GRILLE + 2 * INCREMENTATION_ENTRE_CASE, PREMIERE_COLONNE_GRILLE).Value = "X"
        Exit Function
    
    End If
    
Next

JOUEUR_ACTIF = 2
IA_WIN_LOOS_AVANCE = False

End Function
Attribute VB_Name = "INIT_NEWGAME_SAVE"
Function AFFICHE_INTERFACE()
InterfaceJeu.Show
End Function
Function NOUVELLE_PARTIE()


Call RESET_GRILLE

'on reset le compteur de secret
Call EASTER_EGG("RESET")


'on active le bon joueur selon la pr|fffd|f|fffd|rence
If InterfaceJeu.OPTION_PREFERENCE_JOUEUR_1.Value = True Then
    JOUEUR_ACTIF = 1
Else
    If InterfaceJeu.OPTION_PREFERENCE_JOUEUR_2.Value = True Then
        JOUEUR_ACTIF = 2
        'si on est en mode 1 joueur, l'IA joue et on repasse au joueur 1
        If InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
            Call MOUVEMENT_IA_INTERFACE
            Call CHANGEMENT_JOUEUR
        End If
        
    Else
        'on es en random
        
        'si on a pas de graine de calcul|fffd|, on la cr|fffd||fffd| sinon on utilise celle en cours
        'car cela veut dire qu'aucune partie n'a |fffd|t|fffd| lanc|fffd| et que le(les) joueur change les param|fffd|tres
        'cela |fffd|viter de tricher en changeant le premier coup de l'IA
        'If Sheets(FEUILLE_DATA).Cells(LIGNE_GRAINE_RANDOM_VALEUR, COLONNE_PREFERENCE).Value <> "" Then
           ' JOUEUR_ACTIF = Sheets(FEUILLE_DATA).Cells(LIGNE_GRAINE_RANDOM_VALEUR, COLONNE_PREFERENCE).Value
            
            'en mode 1 joueur on repositionne la case IA
         '   If InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
          '      InterfaceJeu.Controls("CASE_" & Sheets(FEUILLE_DATA).Cells(LIGNE_CASE_RANDOM_VALEUR, COLONNE_PREFERENCE).Value).Value = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption
         '   End If
        'Else
            
            If VALEUR_RANDOM(1, 2) = 1 Then
                JOUEUR_ACTIF = 1
            Else
                JOUEUR_ACTIF = 2
                'si on est en mode 1 joueur, l'IA joue et on repasse au joueur 1
                If InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
                    Call MOUVEMENT_IA_INTERFACE
                    Call CHANGEMENT_JOUEUR
                End If
            
            End If
        'End If
    End If
End If
Call AFFICHAGE_MESSAGE("TOUR")
InterfaceJeu.BOUTON_NOUVELLE_PARTIE.Visible = False

End Function
Function RESET_GRILLE()
Dim BALAYAGE As Integer

'on balayage les 9 cases
For BALAYAGE = 1 To 9
    InterfaceJeu.Controls("CASE_" & BALAYAGE).Caption = ""
    InterfaceJeu.Controls("CASE_" & BALAYAGE).BackColor = &H8000000F
Next

End Function
Function CHECK_NEW_GAME_EN_COURS()

Dim TOTAL_CASE_COCHE As Integer
TOTAL_CASE_COCHE = CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) + CHECK_NOMBRE_JOUEUR("LIGNE", 2, 0) + CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0)


'si on fait une nouvelle partie alors qu'elle est en cours (grille pas pleine ou partie pas termin|fffd|), on ajoute une partie perdu pour le joueur (vs IA) et pour le joueur actif (2 joueurs)

If Not (TOTAL_CASE_COCHE = 9 Or (Left(InterfaceJeu.LABEL_MESSAGE.Caption, 4) = "PART" Or Left(InterfaceJeu.LABEL_MESSAGE.Caption, 4) = "GAME")) Then

            
    If Sheets(FEUILLE_DATA).Cells(LIGNE_MODE_DE_JEU, COLONNE_PREFERENCE).Value = "OPTION_MODE_DE_JEU_1_JOUEUR" Then
        'mode 1 joueur

        'si on est pas dans le cas du joueur qui commence :  joueur 1 actif et aucune case de remplie
        'ou dans le cas de l'IA qui commence:  joueur 1 actif et une case de remplie
        'alors le joueur a jou|fffd| au moins une fois, on ajoute une partie perdante
        If Not ((JOUEUR_ACTIF = 1 And TOTAL_CASE_COCHE = 1) Or (JOUEUR_ACTIF = 1 And TOTAL_CASE_COCHE = 0)) Then
            Call AJOUTE_POINTS("PERD_JOUEUR")
        
        End If
   

    Else
        'mode 2 joueurs
        'si au moins un des joueurs |fffd| jouer
        If TOTAL_CASE_COCHE > 0 Then
            'je pars du principe que c'est le joueur qui vient de jouer qui va appuyer sur le bouton (pour ne pas perdre en ayant mal jouer par exemple)
            'donc vu qu'on est pass|fffd| au joueur suivant apr|fffd|s le coup, c'est le joueur actif qui gagne une partie
            
            Call AJOUTE_POINTS("GAGNE")
            
        End If
    End If
End If

End Function

Function PREFERENCE_JOUEUR(TYPE_PREFERENCE As String)
Dim BALAYAGE_CASE As Integer

Select Case TYPE_PREFERENCE
    Case "CHARGEMENT"
        InterfaceJeu.FRAME_SECRET.Visible = False
        InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Visible = False
        InterfaceJeu.Controls(Sheets(FEUILLE_DATA).Cells(LIGNE_MODE_DE_JEU, COLONNE_PREFERENCE).Value).Value = True
        InterfaceJeu.Controls(Sheets(FEUILLE_DATA).Cells(LIGNE_PREFERENCE, COLONNE_PREFERENCE).Value).Value = True
        InterfaceJeu.Controls(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value).Value = True
        InterfaceJeu.Controls(Sheets(FEUILLE_DATA).Cells(LIGNE_LANGUE, COLONNE_PREFERENCE).Value).Value = True
        InterfaceJeu.Controls("LISTECHOIX_SYMBOLE_JOUEUR_1").Value = "X"
        Call REPRISE_SAVE_STATISTIQUES
        
        
        
        'si on a une partie |fffd| reprendre on recopie les cases et on met en actif le derniere joueur et on clean la sauvegarde
        
        If Sheets(FEUILLE_DATA).Cells(LIGNE_REPRISE_GAME, COLONNE_PREFERENCE).Value <> "" Then
            'reprise
            JOUEUR_ACTIF = Sheets(FEUILLE_DATA).Cells(LIGNE_REPRISE_GAME, COLONNE_PREFERENCE).Value
            'on efface
            Sheets(FEUILLE_DATA).Cells(LIGNE_REPRISE_GAME, COLONNE_PREFERENCE).Value = ""
            
            Call AFFICHAGE_MESSAGE("TOUR")
            For BALAYAGE_CASE = LIGNE_CASE_1 To LIGNE_CASE_9
                'reprise
                InterfaceJeu.Controls("CASE_" & (BALAYAGE_CASE - LIGNE_CASE_1 + 1)).Caption = Sheets(FEUILLE_DATA).Cells(BALAYAGE_CASE, COLONNE_PREFERENCE).Value
                'efface
                Sheets(FEUILLE_DATA).Cells(BALAYAGE_CASE, COLONNE_PREFERENCE).Value = ""
            Next
            InterfaceJeu.BOUTON_NOUVELLE_PARTIE.Visible = True
         End If
         
    Case "SAUVEGARDE_OLD" 'old pour faire la sauvegarde en quitant l'usferform, n'est plus adapt|fffd| car on change directement quand on  clique sur les options maintenant
        'mode de jeu
        If InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
            Sheets(FEUILLE_DATA).Cells(LIGNE_MODE_DE_JEU, COLONNE_PREFERENCE).Value = "OPTION_MODE_DE_JEU_1_JOUEUR"
        Else
            Sheets(FEUILLE_DATA).Cells(LIGNE_MODE_DE_JEU, COLONNE_PREFERENCE).Value = "OPTION_MODE_DE_JEU_2_JOUEURS"
        End If
        
        'preference
        If InterfaceJeu.OPTION_PREFERENCE_JOUEUR_1 = True Then
            Sheets(FEUILLE_DATA).Cells(LIGNE_PREFERENCE, COLONNE_PREFERENCE).Value = "OPTION_PREFERENCE_JOUEUR_1"
        Else
            If InterfaceJeu.OPTION_PREFERENCE_JOUEUR_2 Then
                Sheets(FEUILLE_DATA).Cells(LIGNE_PREFERENCE, COLONNE_PREFERENCE).Value = "OPTION_PREFERENCE_JOUEUR_2"
            Else
                Sheets(FEUILLE_DATA).Cells(LIGNE_PREFERENCE, COLONNE_PREFERENCE).Value = "OPTION_PREFERENCE_ALEATOIRE"
            End If
        End If
        
        'difficulte
        If InterfaceJeu.OPTION_DIFFICULTE_FACILE = True Then
            Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value = "OPTION_DIFFICULTE_FACILE"
        Else
            If InterfaceJeu.OPTION_DIFFICULTE_INTERMEDIAIRE = True Then
                Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value = "OPTION_DIFFICULTE_INTERMEDIAIRE"
            Else
                Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value = "OPTION_DIFFICULTE_DIFFICILE"
            End If
            
        End If
    
        'langue
        If InterfaceJeu.OPTION_LANGUE_FRANCAIS = True Then
            Sheets(FEUILLE_DATA).Cells(LIGNE_LANGUE, COLONNE_PREFERENCE).Value = "OPTION_LANGUE_FRANCAIS"
        Else
            Sheets(FEUILLE_DATA).Cells(LIGNE_LANGUE, COLONNE_PREFERENCE).Value = "OPTION_LANGUE_ENGLISH"
        End If
        
        
    Case "SAUVEGARDE"
        'on reprend les cases et le joueur actif si la partie est en cours
        'si on est en 1 joueur vs IA et que l'IA joue en premier on save quand m|fffd|me, l'utilisateur pourra changer sans perdre
        If Not (Left(InterfaceJeu.LABEL_MESSAGE.Caption, 4) = "PART" Or _
           Left(InterfaceJeu.LABEL_MESSAGE.Caption, 4) = "GAME") Then
            
           If CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) <> 0 Or _
              CHECK_NOMBRE_JOUEUR("COLONNE", 2, 0) <> 0 Or _
              CHECK_NOMBRE_JOUEUR("DIAGONALE", 3, 0) <> 0 Then
        

                Sheets(FEUILLE_DATA).Cells(LIGNE_REPRISE_GAME, COLONNE_PREFERENCE).Value = JOUEUR_ACTIF
                
                For BALAYAGE_CASE = LIGNE_CASE_1 To LIGNE_CASE_9
                    'reprise
                    Sheets(FEUILLE_DATA).Cells(BALAYAGE_CASE, COLONNE_PREFERENCE).Value = InterfaceJeu.Controls("CASE_" & (BALAYAGE_CASE - LIGNE_CASE_1 + 1)).Caption
                Next
            End If
         End If
         
        
    Case "HARD_RESET"

    Case "EFFACE_SAVE_GRILLE"
        'on efface tout ce qu'on a sauvegarder pour ne pas charger la configuration la prochaine fois que le joueur reviens
        Sheets(FEUILLE_DATA).Cells(LIGNE_REPRISE_GAME, COLONNE_PREFERENCE).Value = ""
        
        For BALAYAGE_CASE = LIGNE_CASE_1 To LIGNE_CASE_9
            Sheets(FEUILLE_DATA).Cells(BALAYAGE_CASE, COLONNE_PREFERENCE).Value = ""
        Next
    
        
End Select

End Function


Function CREATION_LISTE_SYMBOLES()
Dim BALAYAGE_LIGNE As Integer

'on boucle sur tous les symbols pour les ajouter si celui-ci n'est pas d|fffd|ja choisis
BALAYAGE_LIGNE = LIGNE_PREMIER_SYMBOLE
Do Until Sheets(FEUILLE_DATA).Cells(BALAYAGE_LIGNE, COLONNE_SYMBOLS).Value = ""
    'si le symbole n'est pas utilis|fffd| par l'autre joueur on le met dans la liste des disponibles
    If Sheets(FEUILLE_DATA).Cells(BALAYAGE_LIGNE, COLONNE_SYMBOLS).Value <> Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_2, COLONNE_PREFERENCE).Value Then
        InterfaceJeu.LISTECHOIX_SYMBOLE_JOUEUR_1.AddItem (Sheets(FEUILLE_DATA).Cells(BALAYAGE_LIGNE, COLONNE_SYMBOLS).Value)
    End If
    BALAYAGE_LIGNE = BALAYAGE_LIGNE + 1
Loop

BALAYAGE_LIGNE = LIGNE_PREMIER_SYMBOLE
Do Until Sheets(FEUILLE_DATA).Cells(BALAYAGE_LIGNE, COLONNE_SYMBOLS).Value = ""
    'si le symbole n'est pas utilis|fffd| par l'autre joueur on le met dans la liste des disponibles
    If Sheets(FEUILLE_DATA).Cells(BALAYAGE_LIGNE, COLONNE_SYMBOLS).Value <> Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_1, COLONNE_PREFERENCE).Value Then
        InterfaceJeu.LISTECHOIX_SYMBOLE_JOUEUR_2.AddItem (Sheets(FEUILLE_DATA).Cells(BALAYAGE_LIGNE, COLONNE_SYMBOLS).Value)
    End If
    
    BALAYAGE_LIGNE = BALAYAGE_LIGNE + 1
    
Loop

InterfaceJeu.LISTECHOIX_SYMBOLE_JOUEUR_1.Value = Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_1, COLONNE_PREFERENCE).Value
InterfaceJeu.LISTECHOIX_SYMBOLE_JOUEUR_2.Value = Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_2, COLONNE_PREFERENCE).Value


End Function
Attribute VB_Name = "InterfaceJeu"
Attribute VB_Base = "0{344AF371-DBC0-41E7-A705-4DD7F36CFB27}{2C5B37BD-E219-4CFF-8E0F-DFF5B13485D4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub BOUTON_NOUVELLE_PARTIE_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If


Call CHECK_NEW_GAME_EN_COURS
Call NOUVELLE_PARTIE
End Sub

Private Sub BOUTON_RESET_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If

Call PREFERENCE_JOUEUR("HARD_RESET")
End Sub

Private Sub BOUTON_SECRET_Click()
Call EASTER_EGG("NOUVELLE PARTIE")
End Sub

Private Sub CASE_1_Click()
CLIQUE_CASE ("1")
End Sub
Private Sub CASE_2_Click()
CLIQUE_CASE ("2")
End Sub
Private Sub CASE_3_Click()
CLIQUE_CASE ("3")
End Sub
Private Sub CASE_4_Click()
CLIQUE_CASE ("4")
End Sub
Private Sub CASE_5_Click()
CLIQUE_CASE ("5")
End Sub
Private Sub CASE_6_Click()
CLIQUE_CASE ("6")
End Sub
Private Sub CASE_7_Click()
CLIQUE_CASE ("7")
End Sub
Private Sub CASE_8_Click()
CLIQUE_CASE ("8")
End Sub
Private Sub CASE_9_Click()
CLIQUE_CASE ("9")
End Sub


Private Sub CHECKBOX_SECRET_Click()
InterfaceJeu.BOUTON_SECRET.Visible = True
End Sub

Private Sub CommandButton1_Click()
Call test
End Sub

Private Sub CommandButton2_Click()
STATISTIQUES_GLOBALES.Show
End Sub

Private Sub FRAME_MODE_DE_JEU_Click()

End Sub

Private Sub LABEL_MAIL_Click()

End Sub

Private Sub LABEL_SECRET_CLIQUE_Click()
Call EASTER_EGG("AJOUTE")
End Sub

Private Sub LABEL_SECRET_DIALOGUE_Click()

End Sub

Private Sub LISTECHOIX_SYMBOLE_JOUEUR_1_Click()
Call CHANGEMENT_SYMBOLE_JOUEUR
End Sub



Private Sub LISTECHOIX_SYMBOLE_JOUEUR_2_Click()
Call CHANGEMENT_SYMBOLE_JOUEUR
End Sub

Private Sub OPTION_DIFFICULTE_DIFFICILE_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If


Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value = "OPTION_DIFFICULTE_DIFFICILE"
Call REPRISE_SAVE_STATISTIQUES
Call NOUVELLE_PARTIE
End Sub

Private Sub OPTION_DIFFICULTE_FACILE_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If


Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value = "OPTION_DIFFICULTE_FACILE"
Call REPRISE_SAVE_STATISTIQUES
Call NOUVELLE_PARTIE
End Sub

Private Sub OPTION_DIFFICULTE_INTERMEDIAIRE_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If


Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value = "OPTION_DIFFICULTE_INTERMEDIAIRE"
Call REPRISE_SAVE_STATISTIQUES
Call NOUVELLE_PARTIE
End Sub

Private Sub OPTION_LANGUE_ENGLISH_Change()
Sheets(FEUILLE_DATA).Cells(LIGNE_LANGUE, COLONNE_PREFERENCE).Value = "OPTION_LANGUE_ENGLISH"
Call TRADUCTION_LANGUE
Call AFFICHAGE_MESSAGE("")
End Sub



Private Sub OPTION_LANGUE_FRANCAIS_Change()
Sheets(FEUILLE_DATA).Cells(LIGNE_LANGUE, COLONNE_PREFERENCE).Value = "OPTION_LANGUE_FRANCAIS"
Call TRADUCTION_LANGUE
Call AFFICHAGE_MESSAGE("")
End Sub




Private Sub OPTION_MODE_DE_JEU_0_JOUEUR_Click()
If EstEnEasterEgg = True Then
    Exit Sub
End If

Call EASTER_EGG("CHOIX 0 JOUEUR")
End Sub

Private Sub OPTION_MODE_DE_JEU_1_JOUEUR_Click()
If EstEnEasterEgg = True Then
    Exit Sub
End If

Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_MODE_DE_JEU, COLONNE_PREFERENCE).Value = "OPTION_MODE_DE_JEU_1_JOUEUR"
Call NOUVELLE_PARTIE
End Sub

Private Sub OPTION_MODE_DE_JEU_2_JOUEURS_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If

Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_MODE_DE_JEU, COLONNE_PREFERENCE).Value = "OPTION_MODE_DE_JEU_2_JOUEURS"

Call NOUVELLE_PARTIE
End Sub

Private Sub OPTION_PREFERENCE_ALEATOIRE_Click()


If EstEnEasterEgg = True Then
    Exit Sub
End If



Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_PREFERENCE, COLONNE_PREFERENCE).Value = "OPTION_PREFERENCE_ALEATOIRE"
Call NOUVELLE_PARTIE
End Sub

Private Sub OPTION_PREFERENCE_JOUEUR_1_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If


Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_PREFERENCE, COLONNE_PREFERENCE).Value = "OPTION_PREFERENCE_JOUEUR_1"

Call NOUVELLE_PARTIE
End Sub

Private Sub OPTION_PREFERENCE_JOUEUR_2_Click()

If EstEnEasterEgg = True Then
    Exit Sub
End If


Call CHECK_NEW_GAME_EN_COURS
Sheets(FEUILLE_DATA).Cells(LIGNE_PREFERENCE, COLONNE_PREFERENCE).Value = "OPTION_PREFERENCE_JOUEUR_2"
Call NOUVELLE_PARTIE
End Sub


Private Sub UserForm_Initialize()

'InterfaceJeu.BackColor = 10286053

'15017814 violet fonc|fffd|
'15024982 violet clair
'10286053 beige 1
'16774117 bleu clair
'9764863

'violet
'InterfaceJeu.FRAME_MODE_DE_JEU.BackColor = 15024982
'InterfaceJeu.FRAME_PREFERENCE.BackColor = 15024982
'InterfaceJeu.FRAME_DIFFICULTE.BackColor = 15024982

'InterfaceJeu.FRAME_LANGUE.BackColor = 14148914
'InterfaceJeu.FRAME_STATISTIQUES_IA.BackColor = 14148914
'InterfaceJeu.FRAME_STATISTIQUES_JOUEURS.BackColor = 14148914
'InterfaceJeu.FRAME_PLAYER.BackColor = 14148914



InterfaceJeu.BOUTON_RESET.BackColor = 2300
'15938646


Call INITIALISATION_VARIABLE_INTERFACE

Call PREFERENCE_JOUEUR("CHARGEMENT")

Call CREATION_LISTE_SYMBOLES


End Sub



Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If EstEnEasterEgg = True Then

    Cancel = True
End If
End Sub

Private Sub UserForm_Terminate()


Call PREFERENCE_JOUEUR("SAUVEGARDE")

End Sub
Attribute VB_Name = "LANGUE"
Function TRADUCTION_LANGUE()

'ces informations ne changent pas, on le set par d|fffd|faut quand m|fffd|me au d|fffd|but
InterfaceJeu.LABEL_STATISTIQUES_IA_TOTAL.Caption = "Total"
InterfaceJeu.FRAME_LANGUE.Caption = "Langue / Language"
InterfaceJeu.OPTION_LANGUE_FRANCAIS.Caption = "Fran|fffd|ais"
InterfaceJeu.OPTION_LANGUE_ENGLISH.Caption = "English"
InterfaceJeu.TEXTBOX_MAIL.Value = "excelcoregame@gmail.com"
InterfaceJeu.TEXTBOX_SITE.Value = "https://www.excel-pratique.com/fr/telechargements/jeux-c10.php"
InterfaceJeu.LABEL_STATISTIQUES_2_JOUEUR_TOTAL.Caption = "Total"
'on traduit la zone de message
Call AFFICHAGE_MESSAGE("LANGUE")

If InterfaceJeu.OPTION_LANGUE_FRANCAIS.Value = True Then

    InterfaceJeu.FRAME_MODE_DE_JEU.Caption = "Mode de jeu"
        InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Caption = "1 Joueur"
        InterfaceJeu.OPTION_MODE_DE_JEU_2_JOUEURS.Caption = "2 Joueurs"
    InterfaceJeu.FRAME_PREFERENCE.Caption = "Pr|fffd|f|fffd|rence de jeu"
        InterfaceJeu.OPTION_PREFERENCE_JOUEUR_1.Caption = "Joueur 1 commence"
        InterfaceJeu.OPTION_PREFERENCE_JOUEUR_2.Caption = "Joueur 2/IA commence"
        InterfaceJeu.OPTION_PREFERENCE_ALEATOIRE.Caption = "Al|fffd|atoire"
    InterfaceJeu.FRAME_STATISTIQUES_IA.Caption = "Statistiques parties contre IA"
        InterfaceJeu.LABEL_STATISTIQUES_IA_GAGNE.Caption = "Gagn|fffd|es"
        InterfaceJeu.LABEL_STATISTIQUES_IA_PERDU.Caption = "Perdues"
        InterfaceJeu.LABEL_STATISTIQUES_IA_EGALITE.Caption = "Egalit|fffd|"
    InterfaceJeu.FRAME_STATISTIQUES_JOUEURS.Caption = "Statistiques parties 2 joueurs"
        InterfaceJeu.LABEL_STATISTIQUES_2_JOUEUR_GAGNE.Caption = "Gagn|fffd|es"
        InterfaceJeu.LABEL_STATISTIQUES_2_JOUEUR_EGALITE.Caption = "Egalit|fffd|"
        InterfaceJeu.LABEL_STATISTIQUES_JOUEURS_1.Caption = "Joueur 1"
        InterfaceJeu.LABEL_STATISTIQUES_JOUEURS_2.Caption = "Joueur 2"
    InterfaceJeu.FRAME_SYMBOLE.Caption = "Symb|fffd|les des joueurs"
        InterfaceJeu.LABEL_SYMBOLE_JOUEUR_1.Caption = "Joueur 1"
        InterfaceJeu.LABEL_SYMBOLE_JOUEUR_2.Caption = "Joueur 2"
    InterfaceJeu.FRAME_DIFFICULTE.Caption = "Difficult|fffd| de l'IA"
        InterfaceJeu.OPTION_DIFFICULTE_FACILE.Caption = "Facile"
        InterfaceJeu.OPTION_DIFFICULTE_INTERMEDIAIRE.Caption = "Interm|fffd|daire"
        InterfaceJeu.OPTION_DIFFICULTE_DIFFICILE.Caption = "Difficile"
    InterfaceJeu.FRAME_PLAYER.Caption = "Symbole"
    InterfaceJeu.BOUTON_NOUVELLE_PARTIE.Caption = "NOUVELLE PARTIE"
    InterfaceJeu.LABEL_MAIL.Caption = "Pour toute question/commentaire/am|fffd|lioration/bug, vous pouvez me contacter |fffd|:"
    InterfaceJeu.LABEL_SITE.Caption = "T|fffd|l|fffd|chargez plus de jeux et applications sur:"
    
    
    InterfaceJeu.LabelJoueur1Symbole.Caption = "Joueur 1:"
    InterfaceJeu.LabelJoueur2Symbole.Caption = "Joueur 2/IA:"
    
    InterfaceJeu.Caption = "Morpion"
    

    InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Caption = "0 joueur"
Else
    InterfaceJeu.FRAME_MODE_DE_JEU.Caption = "Game Mode"
        InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Caption = "1 Player"
        InterfaceJeu.OPTION_MODE_DE_JEU_2_JOUEURS.Caption = "2 Players"
    InterfaceJeu.FRAME_PREFERENCE.Caption = "Game Option"
        InterfaceJeu.OPTION_PREFERENCE_JOUEUR_1.Caption = "Player 1 begin"
        InterfaceJeu.OPTION_PREFERENCE_JOUEUR_2.Caption = "Player 2/IA begin"
        InterfaceJeu.OPTION_PREFERENCE_ALEATOIRE.Caption = "Random"
    InterfaceJeu.FRAME_STATISTIQUES_IA.Caption = "Game Statistic versus IA"
        InterfaceJeu.LABEL_STATISTIQUES_IA_GAGNE.Caption = "Win"
        InterfaceJeu.LABEL_STATISTIQUES_IA_PERDU.Caption = "Loose"
        InterfaceJeu.LABEL_STATISTIQUES_IA_EGALITE.Caption = "Draw"
    InterfaceJeu.FRAME_STATISTIQUES_JOUEURS.Caption = "Game Statistic 2 players"
        InterfaceJeu.LABEL_STATISTIQUES_2_JOUEUR_GAGNE.Caption = "Win"
        InterfaceJeu.LABEL_STATISTIQUES_2_JOUEUR_EGALITE.Caption = "Draw"
        InterfaceJeu.LABEL_STATISTIQUES_JOUEURS_1.Caption = "Player 1"
        InterfaceJeu.LABEL_STATISTIQUES_JOUEURS_2.Caption = "Player 2"
    InterfaceJeu.FRAME_SYMBOLE.Caption = "Players Symbols"
        InterfaceJeu.LABEL_SYMBOLE_JOUEUR_1.Caption = "Player 1"
        InterfaceJeu.LABEL_SYMBOLE_JOUEUR_2.Caption = "Player 2"
    InterfaceJeu.FRAME_DIFFICULTE.Caption = "IA Difficulty"
        InterfaceJeu.OPTION_DIFFICULTE_FACILE.Caption = "Easy"
        InterfaceJeu.OPTION_DIFFICULTE_INTERMEDIAIRE.Caption = "Medium"
        InterfaceJeu.OPTION_DIFFICULTE_DIFFICILE.Caption = "Hard"
    InterfaceJeu.FRAME_PLAYER.Caption = "Symbol"
    InterfaceJeu.BOUTON_NOUVELLE_PARTIE.Caption = "NEW GAME"
    InterfaceJeu.LABEL_MAIL.Caption = "Should you have any question/comment/upgrade/bug, feel free to contact me at:"
    InterfaceJeu.LABEL_SITE.Caption = "Download more game and application on:"
    
    InterfaceJeu.Caption = "Tic Tac Toe"
    
    InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Caption = "0 player"
    
    InterfaceJeu.LabelJoueur1Symbole.Caption = "Player 1:"
    InterfaceJeu.LabelJoueur2Symbole.Caption = "Player 2/IA:"
End If


End Function
Attribute VB_Name = "MACRO_INTERFACe"

Function CLIQUE_CASE(NUMERO_CASE)
Dim BALAYAGE_CASE As Integer


'si quelqu'un |fffd| gagner on ne fait rien
If CHECK_WIN Then
    Exit Function
End If


'on a jou|fffd| donc on met |fffd| z|fffd|ro la graine de positions random
Sheets(FEUILLE_DATA).Cells(LIGNE_GRAINE_RANDOM_VALEUR, COLONNE_PREFERENCE).Value = ""
Sheets(FEUILLE_DATA).Cells(LIGNE_CASE_RANDOM_VALEUR, COLONNE_PREFERENCE).Value = ""
                
'si la case est vide on la remplie avec le joueur actif
If InterfaceJeu.Controls("CASE_" & NUMERO_CASE).Caption = "" Then

    'on affiche le bouton de nouvelle partie vu que le joueur |fffd| jouer une fois
    InterfaceJeu.BOUTON_NOUVELLE_PARTIE.Visible = True

    InterfaceJeu.Controls("CASE_" & NUMERO_CASE).Caption = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & JOUEUR_ACTIF).Caption
    
    'on regarde si quelqu'un |fffd| gagner
    If CHECK_WIN Then Exit Function

    'on regarde si la grille est pleine
    If CHECK_GRILLE_PLEINE Then Exit Function
    
    'on change le joueur actif
    Call CHANGEMENT_JOUEUR
    
    'si on est sur le tour du joueur 2 et qu'on est en mode 1 joueur on fait jouer l'IA
    If JOUEUR_ACTIF = 2 And InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
        Call MOUVEMENT_IA_INTERFACE
        'on regarde si quelqu'un |fffd| gagner
        If CHECK_WIN Then Exit Function
        'on regarde si la grille est pleine
        If CHECK_GRILLE_PLEINE Then Exit Function
        Call CHANGEMENT_JOUEUR
    End If
End If

'on reprend la valeur de la case cocher et du joueur actif
Sheets(FEUILLE_DATA).Cells(LIGNE_REPRISE_GAME, COLONNE_PREFERENCE).Value = JOUEUR_ACTIF

For BALAYAGE_CASE = LIGNE_CASE_1 To LIGNE_CASE_9
    'reprise
    Sheets(FEUILLE_DATA).Cells(BALAYAGE_CASE, COLONNE_PREFERENCE).Value = InterfaceJeu.Controls("CASE_" & (BALAYAGE_CASE - LIGNE_CASE_1 + 1)).Caption
Next


End Function
Function CHECK_GRILLE_PLEINE() As Boolean
If CHECK_NOMBRE_JOUEUR("LIGNE", 1, 0) = 3 And CHECK_NOMBRE_JOUEUR("LIGNE", 2, 0) = 3 And CHECK_NOMBRE_JOUEUR("LIGNE", 3, 0) = 3 Then
    Call AJOUTE_POINTS("EGALITE")
    Call AFFICHAGE_MESSAGE("EGALITE")
    If InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Value = False Then Call PREFERENCE_JOUEUR("EFFACE_SAVE_GRILLE")
    CHECK_GRILLE_PLEINE = True
Else
    CHECK_GRILLE_PLEINE = False
End If

End Function


Function CHANGEMENT_JOUEUR()

'on change le joueur actif 1=>2 ; 2 => 1
If JOUEUR_ACTIF = 1 Then
    JOUEUR_ACTIF = 2
Else
    JOUEUR_ACTIF = 1
End If
Call AFFICHAGE_MESSAGE("TOUR")

End Function


Function CHECK_NEW_GAME()
'on verifie qu'il n'y avait pas de partie en cours sinon on ajoute une partie de perdues dans les statistiques
End Function


Function VALEUR_RANDOM(VALEUR_MIN As Integer, VALEUR_MAX As Integer) As Integer
Randomize (Timer)

VALEUR_RANDOM = Int((VALEUR_MAX - VALEUR_MIN + 1) * Rnd + VALEUR_MIN)

End Function




Public Function CHECK_NOMBRE_JOUEUR(TYPE_CHECK As String, NUMERO_CHECK As Integer, JOUEUR As Integer) As Integer
Dim STOCK As String
Dim COMPTEUR As Integer
Dim BALAYAGE As Integer
'Call INITIALISATION_VARIABLE

'renvoie le nombre d'occurence de valeur JOUEUR selon le TYPE_CHECK (LIGNE/COLONNE/DIAGONALE) et son num|fffd|ro dans le carr|fffd| 3x3 (NUMERO_CHECK)
'pour le joueur 1 / humain : les 0
'pour le joueur 2 / IA :  les X
'si JOUEUR est vide "" on renvoit le nombre de case non vide


'on accumule dans la variable STOCK le signe du joueur dans la case
STOCK = ""
Select Case TYPE_CHECK
    Case "LIGNE"
        For BALAYAGE = (NUMERO_CHECK * 3) - 2 To NUMERO_CHECK * 3
            If STOCK = "" Then
                STOCK = InterfaceJeu.Controls("CASE_" & BALAYAGE).Caption
            Else
                STOCK = STOCK & InterfaceJeu.Controls("CASE_" & BALAYAGE).Caption
            End If
        Next
        
    Case "COLONNE"
        For BALAYAGE = NUMERO_CHECK To NUMERO_CHECK + 6 Step 3
            If STOCK = "" Then
                STOCK = InterfaceJeu.Controls("CASE_" & BALAYAGE).Caption
            Else
                STOCK = STOCK & InterfaceJeu.Controls("CASE_" & BALAYAGE).Caption
            End If

        Next
    Case "DIAGONALE"

        If NUMERO_CHECK = 1 Then
            STOCK = InterfaceJeu.Controls("CASE_1").Caption & InterfaceJeu.Controls("CASE_5").Caption & InterfaceJeu.Controls("CASE_9").Caption
        Else
            If NUMERO_CHECK = 2 Then
                STOCK = InterfaceJeu.Controls("CASE_7").Caption & InterfaceJeu.Controls("CASE_5").Caption & InterfaceJeu.Controls("CASE_3").Caption
            Else
                STOCK = ""
            End If
        End If

    Case "ALL"
    
End Select

'on decompose le stock qu'on a obtenu et on comptabilise le nombre d'occurence JOUEUR demand|fffd|
Select Case JOUEUR
    Case 1, 2
        COMPTEUR = 0
        Do Until STOCK = ""
            If Left(STOCK, 1) = InterfaceJeu.Controls("LABEL_CHOIX_SYMBOLE_JOUEUR_" & JOUEUR_ACTIF).Caption Then
                COMPTEUR = COMPTEUR + 1
            End If
            
            STOCK = Right(STOCK, Len(STOCK) - 1)
        Loop
        'on renvoie le nombre d'occurence
        CHECK_NOMBRE_JOUEUR = COMPTEUR
    
    Case Else
        'CHECK_NOMBRE_JOUEUR = STOCK
        'si JOUEUR est vide "" on renvoit le nombre de case non vide
        CHECK_NOMBRE_JOUEUR = Len(STOCK)
End Select



End Function

Attribute VB_Name = "SECRET"
#If VBA7 Then
Declare PtrSafe Function Beep Lib "kernel32" (ByVal Frequence As LongPtr, ByVal Duree As LongPtr) As LongPtr

#Else
Declare Function Beep Lib "kernel32" (ByVal Frequence As Long, ByVal Duree As Long) As Long
#End If

Function EASTER_EGG(ACTION As String)


Select Case ACTION

    Case "AJOUTE"
        Sheets(FEUILLE_DATA).Cells(LIGNE_COMPTEUR_SECRET, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_COMPTEUR_SECRET, COLONNE_PREFERENCE).Value + 1
        
        If Sheets(FEUILLE_DATA).Cells(LIGNE_COMPTEUR_SECRET, COLONNE_PREFERENCE).Value = 3 Then
            InterfaceJeu.LABEL_SECRET_CLIQUE.Top = 90
            InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Visible = True
        End If

        
    Case "RESET"
        Sheets(FEUILLE_DATA).Cells(LIGNE_COMPTEUR_SECRET, COLONNE_PREFERENCE).Value = 0
        InterfaceJeu.LABEL_SECRET_CLIQUE.Top = 6
        
        InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Visible = False
        
    Case "NOUVELLE PARTIE"
        'on clique sur le bouton
        EASTER_EGG_INTERFACE.Show

    Case "CACHE TOUT"

    Case "CHOIX 0 JOUEUR"
        If Sheets(FEUILLE_DATA).Cells(LIGNE_LANGUE, COLONNE_PREFERENCE).Value = "OPTION_LANGUE_ENGLISH" Then
            If MsgBox("Play game 0 player", vbYesNo, "WARGAME") = vbYes Then
                Call EASTER_EGG_ANIMATION
            Else
                InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True
                EASTER_EGG ("RESET")
            End If
        Else
        
            If MsgBox("Jouer en 0 joueur", vbYesNo, "WARGAME") = vbYes Then
                Call EASTER_EGG_ANIMATION
            Else
                InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True
                EASTER_EGG ("RESET")
            End If
        End If
        
    Case "CACHE BOUTON"
    
End Select


End Function


Function ECRITURE(TEXTE_A_AFFICHER As String, NUMERO_LABEL As Integer)
Dim TEMPS As Variant
Dim ATTENTE_ENTRE_MOTS As Variant

ATTENTE_ENTRE_MOTS = 0.05

Do Until Len(TEXTE_A_AFFICHER) = 0
    TEMPS = Timer
    Do Until Timer > TEMPS + ATTENTE_ENTRE_MOTS
        DoEvents
    Loop
    InterfaceJeu.LABEL_SECRET_DIALOGUE.Caption = InterfaceJeu.LABEL_SECRET_DIALOGUE.Caption & Left(TEXTE_A_AFFICHER, 1)
    'EASTER_EGG_INTERFACE.Controls("LABEL_" & NUMERO_LABEL).Caption = EASTER_EGG_INTERFACE.Controls("LABEL_" & NUMERO_LABEL).Caption & Left(TEXTE_A_AFFICHER, 1)
    Call Beep(VALEUR_RANDOM(50, 500), 80)
    TEXTE_A_AFFICHER = Right(TEXTE_A_AFFICHER, Len(TEXTE_A_AFFICHER) - 1)
Loop

End Function

Function EASTER_EGG_ANIMATION()
Dim TEMPS As Variant
Dim ATTENTE_ENTRE_MOTS As Variant
Dim BALAYAGE_PHRASES As Integer
'GREETINGS PROFESSOR FALKEN

'HELLO

'A STRANGE GAME.
'THE ONLY WINNING MOVE IS
'NOT TO PLAY.

'HOW ABOUT A NICE GAME OF CHESS?


'faire une animation WARGAME avec les lettres qui tourne comme dans le film  6.20-6.35

EstEnEasterEgg = True

'on fait les parties en 0 joueurs en mode facile
Call EASTER_EGG_PARTIE

InterfaceJeu.LABEL_SECRET_DIALOGUE.Caption = ""
'Call PREFERENCE_JOUEUR("CHARGEMENT")
Call PREFERENCE_JOUEUR("SAUVEGARDE")

InterfaceJeu.FRAME_SECRET.Visible = True
InterfaceJeu.LABEL_SECRET_DIALOGUE.Caption = ""
'InterfaceJeu.FRAME_SECRET.Visible = false
'Exit Sub

ATTENTE_ENTRE_PHRASES = 1
For BALAYAGE_PHRASES = 1 To 6
    Select Case BALAYAGE_PHRASES
        Case 1
            Call ECRITURE("GREETINGS PROFESSOR FALKEN.", 1)
        Case 2
            Call ECRITURE("HELLO.", 1)
        Case 3
            Call ECRITURE("A STRANGE GAME.", 1)
        Case 4
            Call ECRITURE("THE ONLY WINNING MOVE IS NOT TO PLAY.", 1)
        Case 5
            Call ECRITURE("HOW ABOUT A NICE GAME OF CHESS?", 1)
    End Select
    
    InterfaceJeu.LABEL_SECRET_DIALOGUE.Caption = InterfaceJeu.LABEL_SECRET_DIALOGUE.Caption & vbCrLf & vbCrLf & vbCrLf
    TEMPS = Timer
    Do Until Timer > TEMPS + ATTENTE_ENTRE_PHRASES
        DoEvents
    Loop
Next

Do Until Timer > TEMPS + 2
        DoEvents
Loop


InterfaceJeu.FRAME_SECRET.Visible = False



'on repasse enable le jeu
EstEnEasterEgg = False

'on charge l'ancienne partie
Call PREFERENCE_JOUEUR("CHARGEMENT")

End Function
Function EASTER_EGG_PARTIE()
Dim TEMPS As Variant
Dim ATTENTE_ENTRE_JOUEUR As Variant
Dim ATTENTE_ENTRE_PARTIE As Variant
Dim STOCK_SYMBOLE_JOUEUR_1 As String
Dim STOCK_SYMBOLE_JOUEUR_2 As String
Dim STOCK_JOUEUR_ACTIF As Integer
Dim BALAYAGE_PARTIE_EASTER_EGG As Integer


InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Value = True
'on stock les symboles pour alterner manuellement entre les deux symbole sur l'IA
STOCK_SYMBOLE_JOUEUR_1 = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_1.Caption
STOCK_SYMBOLE_JOUEUR_2 = InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption

For BALAYAGE_PARTIE_EASTER_EGG = 1 To 75 '1 pour mode rapide 75 pour mode normal

    Select Case BALAYAGE_PARTIE_EASTER_EGG
        Case Is < 4
            ATTENTE_ENTRE_JOUEUR = 0.5
            ATTENTE_ENTRE_PARTIE = 2
        Case Is < 8
            ATTENTE_ENTRE_JOUEUR = 0.2
            ATTENTE_ENTRE_PARTIE = 1
        Case Is < 15
            ATTENTE_ENTRE_JOUEUR = 0.1
            ATTENTE_ENTRE_PARTIE = 0.5
        Case Is < 25
            ATTENTE_ENTRE_JOUEUR = 0.05
            ATTENTE_ENTRE_PARTIE = 0.2
            
        Case Else
            ATTENTE_ENTRE_JOUEUR = 0
            ATTENTE_ENTRE_PARTIE = 0
    End Select
    'on commence manuellement par le joueur 1
    STOCK_JOUEUR_ACTIF = 1
    JOUEUR_ACTIF = 1
    Call AFFICHAGE_MESSAGE("TOUR")
    
    'on nettoie la grille
    Call RESET_GRILLE
    
    Do Until Left(InterfaceJeu.LABEL_MESSAGE.Caption, 4) = "PART" Or Left(InterfaceJeu.LABEL_MESSAGE.Caption, 4) = "GAME"
        
        If STOCK_JOUEUR_ACTIF = 2 Then
             InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption = STOCK_SYMBOLE_JOUEUR_2
        Else
             InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption = STOCK_SYMBOLE_JOUEUR_1
        End If
        
        'Call IA_WIN_LOOSE_ALL
        JOUEUR_ACTIF = STOCK_JOUEUR_ACTIF
        If CHECK_WIN Then Exit Do
        If CHECK_GRILLE_PLEINE Then Exit Do
        Call IA_RANDOM
        JOUEUR_ACTIF = STOCK_JOUEUR_ACTIF
        If CHECK_WIN Then Exit Do
        If CHECK_GRILLE_PLEINE Then Exit Do
        
        'on fait manuellement le changement de joueur
        If STOCK_JOUEUR_ACTIF = 2 Then
            STOCK_JOUEUR_ACTIF = 1
        Else
            STOCK_JOUEUR_ACTIF = 2
        End If
        JOUEUR_ACTIF = STOCK_JOUEUR_ACTIF
        Call AFFICHAGE_MESSAGE("TOUR")
        
        TEMPS = Timer
        Do Until Timer > TEMPS + ATTENTE_ENTRE_JOUEUR
            DoEvents
        Loop

    Loop
    TEMPS = Timer
    
    Do Until Timer > TEMPS + ATTENTE_ENTRE_PARTIE
        DoEvents
    Loop
    
Next



'on remet les valeurs
 InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_1.Caption = STOCK_SYMBOLE_JOUEUR_1
 InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_2.Caption = STOCK_SYMBOLE_JOUEUR_2

'on recharge la partie sauvegarder

End Function


Attribute VB_Name = "STATISTIQUES_ET_WIN"
#If VBA7 Then
Declare PtrSafe Function Beep Lib "kernel32" (ByVal Frequence As LongPtr, ByVal Duree As LongPtr) As LongPtr

#Else
Declare Function Beep Lib "kernel32" (ByVal Frequence As Long, ByVal Duree As Long) As Long
#End If

Function AJOUTE_POINTS(TYPE_POINT As String) As Boolean
Dim DIFFICULTE_CHOISIE As String

DIFFICULTE_CHOISIE = Right(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE), Len(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE)) - Len("OPTION_DIFFICULTE_"))

Select Case TYPE_POINT
    Case "GAGNE"
    
        If InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Value = True Then
            If JOUEUR_ACTIF = 1 Then
                Call Beep(150, 80)
            Else
                Call Beep(2000, 80)
            End If
            
            Exit Function
        
        End If
        If JOUEUR_ACTIF = 1 Then
            If InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
                Select Case Right(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value, Len(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value) - Len("OPTION_DIFFICULTE_"))
                    Case "FACILE"
                        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_FACILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_FACILE, COLONNE_PREFERENCE).Value + 1

                    Case "INTERMEDIAIRE"
                        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value + 1

                    Case "DIFFICILE"
                        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_DIFFICILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_DIFFICILE, COLONNE_PREFERENCE).Value + 1

                End Select
                Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value + 1
                
            Else
                Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value + 1
                Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value + 1
            End If
        Else
            If InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
                Select Case Right(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value, Len(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value) - Len("OPTION_DIFFICULTE_"))
                    Case "FACILE"
                        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_FACILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_FACILE, COLONNE_PREFERENCE).Value + 1

                    Case "INTERMEDIAIRE"
                        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value + 1

                    Case "DIFFICILE"
                        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_DIFFICILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_DIFFICILE, COLONNE_PREFERENCE).Value + 1

                End Select
                
                
                Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value + 1
            Else
                Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value + 1
                Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value + 1
            End If
        End If

        
    Case "PERD_JOUEUR"
        Select Case Right(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value, Len(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value) - Len("OPTION_DIFFICULTE_"))
            Case "FACILE"
                Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_FACILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_FACILE, COLONNE_PREFERENCE).Value + 1

            Case "INTERMEDIAIRE"
                Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value + 1

            Case "DIFFICILE"
                Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_DIFFICILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_DIFFICILE, COLONNE_PREFERENCE).Value + 1

        End Select
        
        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value + 1
    Case "PERD_JOUEUR_1"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value + 1
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value + 1
    Case "PERD_JOUEUR2"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value + 1
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value + 1
    Case "EGALITE"
        If InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Value = True Then
            Call Beep(700, 80)
            Exit Function
        End If
        
        If InterfaceJeu.OPTION_MODE_DE_JEU_1_JOUEUR.Value = True Then
        
            Select Case Right(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value, Len(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value) - Len("OPTION_DIFFICULTE_"))
                Case "FACILE"
                    Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_FACILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_FACILE, COLONNE_PREFERENCE).Value + 1
    
                Case "INTERMEDIAIRE"
                    Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value + 1
    
                Case "DIFFICILE"
                    Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_DIFFICILE, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_DIFFICILE, COLONNE_PREFERENCE).Value + 1

            End Select
            Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value + 1
        Else
            Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value + 1
            Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR_TOTAL, COLONNE_PREFERENCE).Value = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR_TOTAL, COLONNE_PREFERENCE).Value + 1
        
        End If
        
End Select

Call REPRISE_SAVE_STATISTIQUES

End Function

Function REPRISE_SAVE_STATISTIQUES()
Dim TOTAL As Integer
Dim VALEUR_ARRONDI As Integer
Dim WORDING_ENTRE_TYPE As String
Dim WORDING_FIN_POURCENTAGE As String
Dim WORDING_NUL As String
Dim WORDING_100_POURCENT As String
Dim NB_GAGNE As Integer
Dim NB_PERD As Integer
Dim NB_EGALITE As Integer

VALEUR_ARRONDI = 0
WORDING_ENTRE_TYPE = " ("
WORDING_FIN_POURCENTAGE = "%)"
WORDING_NUL = "0" & WORDING_ENTRE_TYPE & "0" & WORDING_FIN_POURCENTAGE
WORDING_100_POURCENT = WORDING_ENTRE_TYPE & "100" & WORDING_FIN_POURCENTAGE

 Select Case Right(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value, Len(Sheets(FEUILLE_DATA).Cells(LIGNE_DIFFICULTE, COLONNE_PREFERENCE).Value) - Len("OPTION_DIFFICULTE_"))
    Case "FACILE"
        
        NB_GAGNE = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_FACILE, COLONNE_PREFERENCE).Value
        NB_PERD = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_FACILE, COLONNE_PREFERENCE).Value
        NB_EGALITE = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_FACILE, COLONNE_PREFERENCE).Value
        
        
        
    Case "INTERMEDIAIRE"
        NB_GAGNE = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value
        NB_PERD = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value
        NB_EGALITE = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value
        
        
    Case "DIFFICILE"
        NB_GAGNE = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_DIFFICILE, COLONNE_PREFERENCE).Value
        NB_PERD = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_DIFFICILE, COLONNE_PREFERENCE).Value
        NB_EGALITE = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_DIFFICILE, COLONNE_PREFERENCE).Value
        
End Select
        
'TOTAL = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value
        
TOTAL = NB_GAGNE + NB_PERD + NB_EGALITE

InterfaceJeu.LABEL_STATISTIQUES_IA_TOTAL_VALEUR.Caption = TOTAL '& WORDING_100_POURCENT
                                                        
                                                        
If NB_GAGNE = 0 Then
    InterfaceJeu.LABEL_STATISTIQUES_IA_GAGNE_VALEUR.Caption = WORDING_NUL
Else
    InterfaceJeu.LABEL_STATISTIQUES_IA_GAGNE_VALEUR.Caption = NB_GAGNE & WORDING_ENTRE_TYPE & _
                                                            Round(NB_GAGNE / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
End If

If NB_PERD = 0 Then
    InterfaceJeu.LABEL_STATISTIQUES_IA_PERDU_VALEUR.Caption = WORDING_NUL
Else
    InterfaceJeu.LABEL_STATISTIQUES_IA_PERDU_VALEUR.Caption = NB_PERD & WORDING_ENTRE_TYPE & _
                                                            Round(NB_PERD / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
End If

If NB_EGALITE = 0 Then
    InterfaceJeu.LABEL_STATISTIQUES_IA_EGALITE_VALEUR.Caption = WORDING_NUL
Else
    InterfaceJeu.LABEL_STATISTIQUES_IA_EGALITE_VALEUR.Caption = NB_EGALITE & WORDING_ENTRE_TYPE & _
                                                                Round(NB_EGALITE / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
End If




TOTAL = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value
                                                            
InterfaceJeu.LABEL_STATISTIQUES_JOUEUR_TOTAL_VALEUR.Caption = TOTAL '& WORDING_100_POURCENT


If Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value = 0 Then

    InterfaceJeu.LABEL_STATISTIQUES_JOUEUR_1_GAGNE_VALEUR.Caption = WORDING_NUL
Else

    InterfaceJeu.LABEL_STATISTIQUES_JOUEUR_1_GAGNE_VALEUR.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If


If Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value = 0 Then
    InterfaceJeu.LABEL_STATISTIQUES_JOUEUR_2_GAGNE_VALEUR.Caption = WORDING_NUL
Else

    InterfaceJeu.LABEL_STATISTIQUES_JOUEUR_2_GAGNE_VALEUR.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
End If

If Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value = 0 Then
    InterfaceJeu.LABEL_STATISTIQUES_JOUEUR_EGALITE_VALEUR.Caption = WORDING_NUL
Else
    InterfaceJeu.LABEL_STATISTIQUES_JOUEUR_EGALITE_VALEUR.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If

End Function

Function REPRISE_STATISTIQUES_GLOBALES()
Dim BALAYAGE_DIFFICULTE As Integer
Dim TOTAL As Integer
Dim VALEUR_ARRONDI As Integer
Dim WORDING_ENTRE_TYPE As String
Dim WORDING_FIN_POURCENTAGE As String
Dim WORDING_NUL As String
Dim WORDING_100_POURCENT As String
Dim NB_GAGNE As Integer
Dim NB_PERD As Integer
Dim NB_EGALITE As Integer
Dim NOM_DIFFICULTE As String

VALEUR_ARRONDI = 0
WORDING_ENTRE_TYPE = " ("
WORDING_FIN_POURCENTAGE = "%)"
WORDING_NUL = "0" & WORDING_ENTRE_TYPE & "0" & WORDING_FIN_POURCENTAGE
WORDING_100_POURCENT = WORDING_ENTRE_TYPE & "100" & WORDING_FIN_POURCENTAGE

Call INITIALISATION_VARIABLE_INTERFACE

'---------------------------------
'--------------PARTIE IA------
'---------------------------------

'-----------------
'les 3 difficultes
For BALAYAGE_DIFFICULTE = 1 To 3
    Select Case BALAYAGE_DIFFICULTE
    
        Case 1
            NB_GAGNE = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_FACILE, COLONNE_PREFERENCE).Value
            NB_PERD = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_FACILE, COLONNE_PREFERENCE).Value
            NB_EGALITE = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_FACILE, COLONNE_PREFERENCE).Value
            NOM_DIFFICULTE = "FACILE"
            
        Case 2
            NB_GAGNE = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value
            NB_PERD = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value
            NB_EGALITE = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value
            NOM_DIFFICULTE = "INTERMEDIAIRE"
        
        Case 3
        
            NB_GAGNE = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_DIFFICILE, COLONNE_PREFERENCE).Value
            NB_PERD = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_DIFFICILE, COLONNE_PREFERENCE).Value
            NB_EGALITE = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_DIFFICILE, COLONNE_PREFERENCE).Value
            NOM_DIFFICULTE = "DIFFICILE"
    End Select
    
    TOTAL = NB_GAGNE + NB_PERD + NB_EGALITE
    
    
    If NB_GAGNE = 0 Then
        STATISTIQUES_GLOBALES.Controls("LABEL_STATISTIQUES_IA_GAGNE_VALEUR_" & NOM_DIFFICULTE).Caption = WORDING_NUL
    Else
        STATISTIQUES_GLOBALES.Controls("LABEL_STATISTIQUES_IA_GAGNE_VALEUR_" & NOM_DIFFICULTE).Caption = NB_GAGNE & WORDING_ENTRE_TYPE & _
                                                                        Round(NB_GAGNE / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
    End If
    
    If NB_PERD = 0 Then
        STATISTIQUES_GLOBALES.Controls("LABEL_STATISTIQUES_IA_PERDU_VALEUR_" & NOM_DIFFICULTE).Caption = WORDING_NUL
    Else
        STATISTIQUES_GLOBALES.Controls("LABEL_STATISTIQUES_IA_PERDU_VALEUR_" & NOM_DIFFICULTE).Caption = NB_PERD & WORDING_ENTRE_TYPE & _
                                                                        Round(NB_PERD / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
    End If
    
    
    If NB_EGALITE = 0 Then
        STATISTIQUES_GLOBALES.Controls("LABEL_STATISTIQUES_IA_EGALITE_VALEUR_" & NOM_DIFFICULTE).Caption = WORDING_NUL
    Else
        STATISTIQUES_GLOBALES.Controls("LABEL_STATISTIQUES_IA_EGALITE_VALEUR_" & NOM_DIFFICULTE).Caption = NB_EGALITE & WORDING_ENTRE_TYPE & _
                                                                        Round(NB_EGALITE / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
    End If
    
    STATISTIQUES_GLOBALES.Controls("LABEL_STATISTIQUES_IA_TOTAL_VALEUR_" & NOM_DIFFICULTE).Caption = TOTAL
Next

'------------
'VALEUR TOTAL
TOTAL = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value

If Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value = 0 Then

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_IA_GAGNE_VALEUR_TOTAL.Caption = WORDING_NUL
Else

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_IA_GAGNE_VALEUR_TOTAL.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If

If Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value = 0 Then

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_IA_PERDU_VALEUR_TOTAL.Caption = WORDING_NUL
Else

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_IA_PERDU_VALEUR_TOTAL.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If

If Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value = 0 Then

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_IA_EGALITE_VALEUR_TOTAL.Caption = WORDING_NUL
Else

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_IA_EGALITE_VALEUR_TOTAL.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If

STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_IA_TOTAL_VALEUR_TOTAL.Caption = TOTAL

'---------------------------------
'--------------PARTIE JOUEUR------
'---------------------------------

TOTAL = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value
                                                            
STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_TOTAL_VALEUR.Caption = TOTAL '& WORDING_100_POURCENT


If Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value = 0 Then

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_1_GAGNE_VALEUR.Caption = WORDING_NUL
Else

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_1_GAGNE_VALEUR.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If


If Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value = 0 Then
    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_2_GAGNE_VALEUR.Caption = WORDING_NUL
Else

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_2_GAGNE_VALEUR.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
End If

If Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value = 0 Then
    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_EGALITE_VALEUR.Caption = WORDING_NUL
Else
    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_EGALITE_VALEUR.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If

'total
TOTAL = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value _
        + Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR_TOTAL, COLONNE_PREFERENCE).Value
                                                            
STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_TOTAL_VALEUR_TOTAL.Caption = TOTAL '& WORDING_100_POURCENT


If Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value = 0 Then

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_1_GAGNE_VALEUR_TOTAL.Caption = WORDING_NUL
Else

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_1_GAGNE_VALEUR_TOTAL.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If


If Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value = 0 Then
    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_2_GAGNE_VALEUR_TOTAL.Caption = WORDING_NUL
Else

    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_2_GAGNE_VALEUR_TOTAL.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE
End If

If Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR_TOTAL, COLONNE_PREFERENCE).Value = 0 Then
    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_EGALITE_VALEUR_TOTAL.Caption = WORDING_NUL
Else
    STATISTIQUES_GLOBALES.LABEL_STATISTIQUES_JOUEUR_EGALITE_VALEUR_TOTAL.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    & WORDING_ENTRE_TYPE & _
                                                                    Round(Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR_TOTAL, COLONNE_PREFERENCE).Value _
                                                                    / TOTAL * 100, VALEUR_ARRONDI) & WORDING_FIN_POURCENTAGE

End If

End Function

Function RESET_STATISTIQUES(ACTION As String)

If MsgBox("Etes vous sur de vouloir supprimer ces informations?", vbYesNo, "Validation") = vbNo Then Exit Function


Select Case ACTION

    Case "IA_FACILE"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_FACILE, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_FACILE, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_FACILE, COLONNE_PREFERENCE).Value = 0
    Case "IA_INTERMEDIAIRE"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_INTERMEDIAIRE, COLONNE_PREFERENCE).Value = 0
    Case "IA_DIFFICILE"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_DIFFICILE, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_DIFFICILE, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_DIFFICILE, COLONNE_PREFERENCE).Value = 0
    Case "IA_TOTAL"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_IA_TOTAL, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_PERDU_IA_TOTAL, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_IA_TOTAL, COLONNE_PREFERENCE).Value = 0
    Case "JOUEUR"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR, COLONNE_PREFERENCE).Value = 0
    Case "JOUEUR_TOTAL"
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_1_TOTAL, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_GAGNE_JOUEUR_2_TOTAL, COLONNE_PREFERENCE).Value = 0
        Sheets(FEUILLE_DATA).Cells(LIGNE_EGALITE_JOUEUR_TOTAL, COLONNE_PREFERENCE).Value = 0
End Select

'on refresh l'ecran
Call REPRISE_STATISTIQUES_GLOBALES

End Function
Function CHECK_WIN() As Boolean

'Function CHECK_WIN(JOUEUR As String)
Dim BALAYAGE As Integer
'on regarde si on a 3 fois le m|fffd|me symbole pour un joueur sur tous les cas possibles
For BALAYAGE = 1 To 3

    If CHECK_NOMBRE_JOUEUR("LIGNE", BALAYAGE, JOUEUR_ACTIF) = 3 Or CHECK_NOMBRE_JOUEUR("COLONNE", BALAYAGE, JOUEUR_ACTIF) = 3 Or CHECK_NOMBRE_JOUEUR("DIAGONALE", BALAYAGE, JOUEUR_ACTIF) = 3 Then
        CHECK_WIN = True
        Call AFFICHAGE_MESSAGE("VICTOIRE")
        Call COLORIE_VICTOIRE(BALAYAGE)
        Call AJOUTE_POINTS("GAGNE")
        If InterfaceJeu.OPTION_MODE_DE_JEU_0_JOUEUR.Value = False Then Call PREFERENCE_JOUEUR("EFFACE_SAVE_GRILLE")
        Exit Function
    End If

Next
CHECK_WIN = False

End Function
Function COLORIE_VICTOIRE(NUMERO_COLORIE As Integer)
Dim BALAYAGE_COLORIE As Integer
'on colorie la ligne/colonne/diagonale ad|fffd|quate

If CHECK_NOMBRE_JOUEUR("LIGNE", NUMERO_COLORIE, JOUEUR_ACTIF) = 3 Then
    For BALAYAGE_COLORIE = (NUMERO_COLORIE * 3) - 2 To NUMERO_COLORIE * 3
    'BALAYAGE = (NUMERO_CHECK * 3) - 2 To NUMERO_CHECK * 3
        InterfaceJeu.Controls("CASE_" & BALAYAGE_COLORIE).BackColor = vbGreen
    Next
Else

    If CHECK_NOMBRE_JOUEUR("COLONNE", NUMERO_COLORIE, JOUEUR_ACTIF) = 3 Then
        For BALAYAGE_COLORIE = NUMERO_COLORIE To NUMERO_COLORIE + 6 Step 3
            InterfaceJeu.Controls("CASE_" & BALAYAGE_COLORIE).BackColor = vbGreen
        Next
    Else
        If NUMERO_COLORIE = 1 Then
                InterfaceJeu.Controls("CASE_1").BackColor = vbGreen
                InterfaceJeu.Controls("CASE_5").BackColor = vbGreen
                InterfaceJeu.Controls("CASE_9").BackColor = vbGreen
        Else
            If NUMERO_COLORIE = 2 Then
                InterfaceJeu.Controls("CASE_7").BackColor = vbGreen
                InterfaceJeu.Controls("CASE_5").BackColor = vbGreen
                InterfaceJeu.Controls("CASE_3").BackColor = vbGreen
            End If
        End If
    End If
    
End If

End Function
Function CHECK_WIN_BIENTOT(JOUEUR As String)
Dim BALAYAGE As Integer
'on regarde si on a 3 fois le m|fffd|me symbole pour un joueur sur tous les cas possibles
For BALAYAGE = 1 To 3
    If CHECK_NOMBRE_JOUEUR("LIGNE", BALAYAGE, JOUEUR) = 2 Then
        CHECK_WIN_BIENTOT = "YES" & ";" & "LIGNE" & ";" & BALAYAGE
        Exit Function
    End If
    
    If CHECK_NOMBRE_JOUEUR("COLONNE", BALAYAGE, JOUEUR) = 2 Then
        CHECK_WIN_BIENTOT = "YES" & ";" & "LIGNE" & ";" & BALAYAGE
        Exit Function
    End If
    
Next

For BALAYAGE = 1 To 2
    If CHECK_NOMBRE_JOUEUR("DIAGONALE", BALAYAGE, JOUEUR) = 2 Then
        CHECK_WIN_BIENTOT = "YES" & ";" & "DIAGONALE" & ";" & BALAYAGE
        Exit Function
    End If
Next

End Function
Attribute VB_Name = "STATISTIQUES_GLOBALES"
Attribute VB_Base = "0{DB7365C8-D218-44E9-9ECC-C9D1DCB03E88}{C49BBEE9-6F97-412B-8D93-7A9E788D998F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub BOUTON_RESET_STATISTIQUES_DIFFICILE_Click()
Call RESET_STATISTIQUES("IA_DIFFICILE")
End Sub

Private Sub BOUTON_RESET_STATISTIQUES_FACILE_Click()
Call RESET_STATISTIQUES("IA_FACILE")
End Sub

Private Sub BOUTON_RESET_STATISTIQUES_INTERMEDIAIRE_Click()
Call RESET_STATISTIQUES("IA_INTERMEDIAIRE")
End Sub

Private Sub BOUTON_RESET_STATISTIQUES_JOUEUR_Click()
Call RESET_STATISTIQUES("JOUEUR")
End Sub

Private Sub BOUTON_RESET_STATISTIQUES_JOUEUR_TOTAL_Click()
Call RESET_STATISTIQUES("JOUEUR_TOTAL")
End Sub

Private Sub BOUTON_RESET_STATISTIQUES_TOTAL_Click()
Call RESET_STATISTIQUES("IA_TOTAL")
End Sub

Private Sub FRAME_STATISTIQUES_IA_GLOBALES_Click()

End Sub

Private Sub UserForm_Initialize()
Call REPRISE_STATISTIQUES_GLOBALES
End Sub
Attribute VB_Name = "SYMBOLE"
Function CHANGEMENT_SYMBOLE_JOUEUR()

'If Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_1, COLONNE_PREFERENCE).Value = InterfaceJeu.LISTECHOIX_SYMBOLE_JOUEUR_1.Value Then
    'Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_1, COLONNE_PREFERENCE).Value = InterfaceJeu.LISTECHOIX_SYMBOLE_JOUEUR_1.Value
'End If

'InterfaceJeu.LABEL_CHOIX_SYMBOLE_JOUEUR_1.Caption = Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_1, COLONNE_PREFERENCE).Value
'Sheets(FEUILLE_DATA).Cells(LIGNE_SYMBOL_JOUEUR_2, COLONNE_PREFERENCE).Value = InterfaceJeu.LISTECHOIX_SYMBOLE_JOUEUR_2.Value

'Call CREATION_LISTE_SYMBOLES

End Function


Function CHANGEMENT_SYMBOLE(NUMERO_JOUEUR As Integer)

'on remplace l'ancien symbole par le nouveau

End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "VARIABLE_INTERFACE"
Public JOUEUR_ACTIF As Integer
Public FEUILLE_DATA As String
Public EstEnEasterEgg As Boolean

Public COLONNE_SYMBOLS As Integer
Public LIGNE_PREMIER_SYMBOLE As Integer

Public COLONNE_PREFERENCE As Integer
Public LIGNE_MODE_DE_JEU As Integer
Public LIGNE_PREFERENCE As Integer
Public LIGNE_DIFFICULTE As Integer
Public LIGNE_LANGUE As Integer
Public LIGNE_SYMBOL_JOUEUR_1 As Integer
Public LIGNE_SYMBOL_JOUEUR_2 As Integer
Public LIGNE_PERDU_IA_TOTAL As Integer
Public LIGNE_GAGNE_IA_TOTAL As Integer
Public LIGNE_EGALITE_IA_TOTAL As Integer
Public LIGNE_GAGNE_JOUEUR_1 As Integer
Public LIGNE_GAGNE_JOUEUR_2 As Integer
Public LIGNE_EGALITE_JOUEUR As Integer
Public LIGNE_REPRISE_GAME As Integer
Public LIGNE_CASE_1 As Integer
Public LIGNE_CASE_2 As Integer
Public LIGNE_CASE_3 As Integer
Public LIGNE_CASE_4 As Integer
Public LIGNE_CASE_5 As Integer
Public LIGNE_CASE_6 As Integer
Public LIGNE_CASE_7 As Integer
Public LIGNE_CASE_8 As Integer
Public LIGNE_CASE_9 As Integer
Public LIGNE_GRAINE_RANDOM_VALEUR As Integer
Public LIGNE_CASE_RANDOM_VALEUR As Integer
Public LIGNE_COMPTEUR_SECRET As Integer
Public LIGNE_GAGNE_IA_FACILE As Integer
Public LIGNE_PERDU_IA_FACILE As Integer
Public LIGNE_EGALITE_IA_FACILE As Integer
Public LIGNE_GAGNE_IA_INTERMEDIAIRE As Integer
Public LIGNE_PERDU_IA_INTERMEDIAIRE As Integer
Public LIGNE_EGALITE_IA_INTERMEDIAIRE As Integer
Public LIGNE_GAGNE_IA_DIFFICILE As Integer
Public LIGNE_PERDU_IA_DIFFICILE As Integer
Public LIGNE_EGALITE_IA_DIFFICILE As Integer
Public LIGNE_GAGNE_JOUEUR_1_TOTAL As Integer
Public LIGNE_GAGNE_JOUEUR_2_TOTAL As Integer
Public LIGNE_EGALITE_JOUEUR_TOTAL As Integer



Function INITIALISATION_VARIABLE_INTERFACE()

JOUEUR_ACTIF = 1
FEUILLE_DATA = "DATA"

EstEnEasterEgg = False

COLONNE_SYMBOLS = 3
LIGNE_PREMIER_SYMBOLE = 2

COLONNE_PREFERENCE = 2
LIGNE_MODE_DE_JEU = 2
LIGNE_PREFERENCE = LIGNE_MODE_DE_JEU + 1
LIGNE_DIFFICULTE = LIGNE_PREFERENCE + 1
LIGNE_LANGUE = LIGNE_DIFFICULTE + 1
LIGNE_SYMBOL_JOUEUR_1 = LIGNE_LANGUE + 1
LIGNE_SYMBOL_JOUEUR_2 = LIGNE_SYMBOL_JOUEUR_1 + 1
LIGNE_GAGNE_IA_TOTAL = LIGNE_SYMBOL_JOUEUR_2 + 1
LIGNE_PERDU_IA_TOTAL = LIGNE_GAGNE_IA_TOTAL + 1
LIGNE_EGALITE_IA_TOTAL = LIGNE_PERDU_IA_TOTAL + 1
LIGNE_GAGNE_JOUEUR_1 = LIGNE_EGALITE_IA_TOTAL + 1
LIGNE_GAGNE_JOUEUR_2 = LIGNE_GAGNE_JOUEUR_1 + 1
LIGNE_EGALITE_JOUEUR = LIGNE_GAGNE_JOUEUR_2 + 1
LIGNE_REPRISE_GAME = LIGNE_EGALITE_JOUEUR + 1
LIGNE_CASE_1 = LIGNE_REPRISE_GAME + 1
LIGNE_CASE_2 = LIGNE_CASE_1 + 1
LIGNE_CASE_3 = LIGNE_CASE_2 + 1
LIGNE_CASE_4 = LIGNE_CASE_3 + 1
LIGNE_CASE_5 = LIGNE_CASE_4 + 1
LIGNE_CASE_6 = LIGNE_CASE_5 + 1
LIGNE_CASE_7 = LIGNE_CASE_6 + 1
LIGNE_CASE_8 = LIGNE_CASE_7 + 1
LIGNE_CASE_9 = LIGNE_CASE_8 + 1
LIGNE_GRAINE_RANDOM_VALEUR = LIGNE_CASE_9 + 1
LIGNE_CASE_RANDOM_VALEUR = LIGNE_GRAINE_RANDOM_VALEUR + 1
LIGNE_COMPTEUR_SECRET = LIGNE_CASE_RANDOM_VALEUR + 1
LIGNE_GAGNE_IA_FACILE = LIGNE_COMPTEUR_SECRET + 1
LIGNE_PERDU_IA_FACILE = LIGNE_GAGNE_IA_FACILE + 1
LIGNE_EGALITE_IA_FACILE = LIGNE_PERDU_IA_FACILE + 1
LIGNE_GAGNE_IA_INTERMEDIAIRE = LIGNE_EGALITE_IA_FACILE + 1
LIGNE_PERDU_IA_INTERMEDIAIRE = LIGNE_GAGNE_IA_INTERMEDIAIRE + 1
LIGNE_EGALITE_IA_INTERMEDIAIRE = LIGNE_PERDU_IA_INTERMEDIAIRE + 1
LIGNE_GAGNE_IA_DIFFICILE = LIGNE_EGALITE_IA_INTERMEDIAIRE + 1
LIGNE_PERDU_IA_DIFFICILE = LIGNE_GAGNE_IA_DIFFICILE + 1
LIGNE_EGALITE_IA_DIFFICILE = LIGNE_PERDU_IA_DIFFICILE + 1
LIGNE_GAGNE_JOUEUR_1_TOTAL = LIGNE_EGALITE_IA_DIFFICILE + 1
LIGNE_GAGNE_JOUEUR_2_TOTAL = LIGNE_GAGNE_JOUEUR_1_TOTAL + 1
LIGNE_EGALITE_JOUEUR_TOTAL = LIGNE_GAGNE_JOUEUR_2_TOTAL + 1


End Function
Attribute VB_Name = "ZTest"
Function cacheDATA()
'Sheets("DATA").Visible = xlVeryHidden
End Function

Function AFFICHEDATA()
'Sheets("DATA").Visible = True
End Function

Function RAZ_POUR_REALEASE()

End Function


INQUEST-PP=macro
