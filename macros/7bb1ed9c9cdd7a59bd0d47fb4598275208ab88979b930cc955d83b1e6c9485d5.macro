Attribute VB_Name = "Slide1"
Attribute VB_Base = "0{91493445-5A91-11CF-8700-00AA0060263B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Slide11"
Attribute VB_Base = "0{91493445-5A91-11CF-8700-00AA0060263B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 10, 0, MSForms, CommandButton"
Attribute VB_Control = "TBLocation, 9, 1, MSForms, TextBox"
Attribute VB_Control = "TBName, 8, 2, MSForms, TextBox"
Private Sub CommandButton1_Click()
Set CertificateSlide = ActivePresentation.Designs(2).SlideMaster.CustomLayouts(2)

CertificateSlide.Shapes("CName").TextFrame.TextRange = TBName.Value
CertificateSlide.Shapes("CLocation").TextFrame.TextRange = TBLocation.Value

ActivePresentation.SlideShowWindow.View.Next

End Sub
Attribute VB_Name = "Slide8"
Attribute VB_Base = "0{91493445-5A91-11CF-8700-00AA0060263B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 23, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
Set CertificateSlide = ActivePresentation.Designs(2).SlideMaster.CustomLayouts(2)
CertificateSlide.Shapes("CPercentages").TextFrame.TextRange = Int(SlideLayout24.Percentages.Caption)

If (SlideLayout24.Percentages.Caption) > 50 Then


'Print the certificate

'1. Choosing the location:
Application.FileDialog(msoFileDialogFolderPicker).Show
Dim Location As String
Location = Application.FileDialog(msoFileDialogFolderPicker).SelectedItems(1) & "\"

'2. Declaring the slides which are to be printed
Set SlidesToBePrinted = ActivePresentation.PrintOptions.Ranges.Add(10, 11)

'3. Exporting it as a .pdf file
ActivePresentation.ExportAsFixedFormat Location & Slide11.TBName.Value & " Quiz Game Certificate" & ".PDF", ppFixedFormatTypePDF, , , , , , SlidesToBePrinted, ppPrintSlideRange

'4. Return to Slide Show Mode
ActivePresentation.Windows(1).WindowState = ppWindowMinimized
Output = MsgBox("PDF has been generated", vbInformation, "Certificate has been printed")

Else

Output = MsgBox("Your percentage is less than 50. Certificate cannot be printed", vbCritical, "Secure above 50 percentage")
End If

End Sub


Attribute VB_Name = "SlideLayout24"
Attribute VB_Base = "0{91493447-5A91-11CF-8700-00AA0060263B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Percentages, 6, 1, MSForms, Label"
Attribute VB_Control = "Points, 5, 2, MSForms, Label"
Attribute VB_Control = "TQ, 4, 3, MSForms, Label"
Attribute VB_Control = "PQ, 3, 4, MSForms, Label"
Attribute VB_Control = "WA, 2, 5, MSForms, Label"
Attribute VB_Control = "CA, 1, 6, MSForms, Label"
Sub Correct()
Points.Caption = (Points.Caption) + 10
CA.Caption = (CA.Caption) + 1
Output = MsgBox("Your Answer is correct, well done!", vbOKOnly, "Correct Answer")
ActivePresentation.SlideShowWindow.View.Next
End Sub

Sub Wrong()
Points.Caption = (Points.Caption) - 5
WA.Caption = (WA.Caption) + 1
Output = MsgBox("Your Answer is wrong.", vbOKOnly, "Incorrect Answer")
ActivePresentation.SlideShowWindow.View.Next
End Sub

Sub Initialise()
CA.Caption = 0
WA.Caption = 0
PQ.Caption = 0
TQ.Caption = 0
Points.Caption = 0
Percentages.Caption = 0

Slide11.TBName.Value = ""
Slide11.TBLocation.Value = ""
End Sub

Sub Reset()
Initialise
ActivePresentation.SlideShowWindow.View.Exit
End Sub


Sub Retry()
Initialise
ActivePresentation.SlideShowWindow.View.GotoSlide (1)
End Sub

Sub StartGame()
Initialise
ActivePresentation.SlideShowWindow.View.Next
End Sub

Sub CalculateResults()
TQ.Caption = 6
PQ.Caption = (TQ.Caption) - (CA.Caption) - (WA.Caption)

Percentages.Caption = (CA.Caption) * 100 / (TQ.Caption)
ActivePresentation.SlideShowWindow.View.Next
End Sub



INQUEST-PP=macro
