Attribute VB_Name = "A_Global_Global"
Attribute VB_Base = "0{4CCBC5A4-5CA0-11D4-9117-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "CoffeeRecipe"
Attribute VB_Base = "0{649BE276-EE15-4D63-8226-92588B32615F}{A11A1218-B95F-426F-9BB8-B535B1F635CC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



'----------------------------------------------------------------------------------
' Dialogue for maintaining recipes for the coffee brewer
'
' All code maintaining the database recipe.mdb is in the module RecipeDB
' Utility dialogue for entering recipe names are in FormNewCoffeeRecipe
'----------------------------------------------------------------------------------

Dim db As Database

Private Sub enableCtrl(enable As Boolean)
  '----------------------------------------------------------------------------------
  ' Enable/disable appropriate controls
  '----------------------------------------------------------------------------------
  On Error Resume Next
  ComboBlend.Enabled = enable
  EditDose.Enabled = enable
  EditWater.Enabled = enable
  ComboCream.Enabled = enable
  ComboSugar.Enabled = enable
  
  ButEdit.Enabled = Not enable
  ButSave.Enabled = enable
  ButGetCur.Enabled = enable
  ButNew.Enabled = True
  ButDel.Enabled = enable
  ButLoad.Enabled = True
  
End Sub

Private Sub ButClose_Click()
  '----------------------------------------------------------------------------------
  ' Close button handler. Just hide the dialogue
  '----------------------------------------------------------------------------------
  On Error Resume Next
  Me.Hide
End Sub

Private Sub ButDel_Click()
  '----------------------------------------------------------------------------------
  ' Delete button handler. Delete selected recipe
  '----------------------------------------------------------------------------------
  On Error Resume Next
  enableCtrl False
  deleteRecipe 1, ComboRecipe.value
  populateRecipeCombo 1, ComboRecipe
End Sub

Private Sub ButEdit_Click()
  '----------------------------------------------------------------------------------
  ' Edit button handler. Enable controls so fields can be edited
  '----------------------------------------------------------------------------------
  On Error Resume Next
  enableCtrl True
End Sub

Private Sub ButGetCur_Click()
  '----------------------------------------------------------------------------------
  ' "Get" button handler gets the current process values for the IGSS object that are
  ' members of the selected recipe
  '----------------------------------------------------------------------------------
  Dim val As Double
  
  On Error Resume Next
  If (Configuration.OnlineDB.IsConfigLoaded()) Then
    val = Configuration.OnlineDB.ReadDB("CoffeeBlend!state")
    ComboBlend.ListIndex = val
    val = Configuration.OnlineDB.ReadDB("CoffeeCream!state")
    ComboCream.ListIndex = val
    val = Configuration.OnlineDB.ReadDB("CoffeeSugar!state")
    ComboSugar.ListIndex = val
    val = Configuration.OnlineDB.ReadDB("CoffeeDose!value")
    EditDose.value = val
    val = Configuration.OnlineDB.ReadDB("CoffeeWaterDose!value")
    EditWater.value = val
  End If

End Sub

Private Sub ButLoad_Click()
  '----------------------------------------------------------------------------------
  ' Load button handler. Write recipe member values to the process
  '----------------------------------------------------------------------------------
  On Error Resume Next
  If (Configuration.OnlineDB.IsConfigLoaded()) Then
    Configuration.OnlineDB.WriteDB "CoffeeBlend!state", ComboBlend.ListIndex
    Configuration.OnlineDB.WriteDB "CoffeeCream!state", ComboCream.ListIndex
    Configuration.OnlineDB.WriteDB "CoffeeSugar!state", ComboSugar.ListIndex
    Configuration.OnlineDB.WriteDB "CoffeeDose!value", EditDose.value
    Configuration.OnlineDB.WriteDB "CoffeeWaterDose!value", EditWater.value
    Configuration.OnlineDB.WriteDB "CoffeeRecipe!string", ComboRecipe.value
  End If
  Me.Hide

End Sub

Private Sub ButNew_Click()
  '----------------------------------------------------------------------------------
  ' New button handler. Create a new recipe. The name is prompted for using the form
  ' FormNewCoffeeRecipe
  '----------------------------------------------------------------------------------
  On Error Resume Next
  FormNewCoffeeRecipe.setType "Coffee"
  FormNewCoffeeRecipe.Show
  
  If (FormNewCoffeeRecipe.NewRecipeName <> "") Then
   insertRecipe 1, FormNewCoffeeRecipe.NewRecipeName
   populateRecipeCombo 1, ComboRecipe
   ComboRecipe.value = FormNewCoffeeRecipe.NewRecipeName
   ComboBlend.ListIndex = 0
   ComboCream.ListIndex = 0
   ComboSugar.ListIndex = 0
   EditDose.value = 6
   EditWater.value = 15
   
   enableCtrl True
  End If
End Sub

Private Sub ButSave_Click()
  '----------------------------------------------------------------------------------
  ' Save button handler. Save the selected recipe and its value to the database
  '----------------------------------------------------------------------------------
  On Error Resume Next
  enableCtrl False
  
  editRecipeObject 1, ComboRecipe.value, "Training", "CoffeeBlend", 0, ComboBlend.ListIndex
  editRecipeObject 1, ComboRecipe.value, "Training", "CoffeeCream", 0, ComboCream.ListIndex
  editRecipeObject 1, ComboRecipe.value, "Training", "CoffeeSugar", 0, ComboSugar.ListIndex
  editRecipeObject 1, ComboRecipe.value, "Training", "CoffeeDose", 2, EditDose.value
  editRecipeObject 1, ComboRecipe.value, "Training", "CoffeeWaterDose", 2, EditWater.value

End Sub

Private Sub getValsFromDB()
  '----------------------------------------------------------------------------------
  ' utility for placing DB values in correct controls
  '----------------------------------------------------------------------------------
  Dim rec As Recordset
  Dim str As String
  Dim val As Double

  On Error GoTo ErrExit2
  Set rec = getRecipe(1, ComboRecipe.value)
  On Error GoTo ErrExit1
  While (Not rec.EOF())
    str = rec.Fields("ObjectName").value
    val = rec.Fields("ProcValue").value
    If (str = "CoffeeBlend") Then
      ComboBlend.ListIndex = val
    ElseIf (str = "CoffeeCream") Then
      ComboCream.ListIndex = val
    ElseIf (str = "CoffeeSugar") Then
      ComboSugar.ListIndex = val
    ElseIf (str = "CoffeeDose") Then
      EditDose.value = val
    ElseIf (str = "CoffeeWaterDose") Then
      EditWater.value = val
    End If
   rec.MoveNext
  Wend
  
ErrExit1:

  rec.Close
  
ErrExit2:

End Sub

Private Sub ComboRecipe_Change()
  '----------------------------------------------------------------------------------
  ' recipe selection handler
  '----------------------------------------------------------------------------------
  On Error Resume Next
  getValsFromDB
  enableCtrl False
End Sub


Private Sub UserForm_initialize()
  '----------------------------------------------------------------------------------
  ' Called when formdialogue is firstime displayed
  '----------------------------------------------------------------------------------
  On Error Resume Next
  attachRecipeDB
  populateRecipeCombo 1, ComboRecipe
  populateDigCommandCombo "Global", "COFFEEBLEND", ComboBlend
  populateDigCommandCombo "Global", "COFFEECREAM", ComboCream
  populateDigCommandCombo "Global", "COFFEESUGAR", ComboSugar
  getValsFromDB
 
  enableCtrl False

  
End Sub



Attribute VB_Name = "CommunicationErrors"
Attribute VB_Base = "0{3547CF49-2BF8-4E1E-A3D1-9DCFC28F3E97}{81559B5A-B0F0-4041-81D6-DA78FB104027}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
Unload CommunicationErrors
End Sub

Attribute VB_Name = "Configuration"
Attribute VB_Base = "0{62FE8FE2-4CC3-11D4-9108-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "OnlineDB, 1, 0, IGSSonline, IGSSDB"
Private Sub Configuration_OnTimer()
  D_Recipe_Training.timerTick
End Sub
Private Sub Configuration_OnSuperviseCodeStart()
    timerTick = 500
            
End Sub
Attribute VB_Name = "D_Alarm_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2355, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2355_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\Alm.chm", 1
End Sub
Attribute VB_Name = "D_AuditTrail_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2297, 2, 1, DefEx, IGSSButtonControl"
Private Sub DIX_2296_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "AuditTrail.exe", 1
End Sub

Private Sub DIX_2297_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\AuditTrail.chm", 1

End Sub
Attribute VB_Name = "D_Communication_errors_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "D_Dashboard_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2299, 2, 1, DefEx, IGSSButtonControl"
Private Sub DIX_2268_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Dashboard.exe", 1
End Sub

Private Sub DIX_2299_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\Dashboard.chm", 1

End Sub
Attribute VB_Name = "D_DecayTowers_Cases"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "D_Definition_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2279, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2279_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\Def.chm", 1

End Sub
Attribute VB_Name = "D_Development_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_1350, 1, 0, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_1357, 2, 1, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_1358, 3, 2, DefEx, IGSSButtonControl"
Private Sub DIX_1350_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\GetStart.pdf", 1
End Sub

Private Sub DIX_1357_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\Checklist.pdf", 1
End Sub

Private Sub DIX_1358_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\QuickStart.pdf", 1
End Sub
Attribute VB_Name = "D_DistrictHeatingSouth_Cases"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "D_Drivers_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "D_Home_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_634, 1, 0, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_1319, 2, 1, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_1336, 3, 2, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_1406, 4, 3, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_3872, 5, 4, DefEx, IGSSButtonControl"
Private Sub DIX_1319_OnButtonClicked()

    If tra = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        tra = 1
        Configuration.OpenDiagram "TrainingDiagrams"
        Training.Show
    End If
    
End Sub

Private Sub DIX_1336_OnButtonClicked()

    If popup_systemoverview = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        popup_systemoverview = 1
        Configuration.OpenDiagram "SystemOverview"
        SystemOverview.Show
    End If
    
End Sub

Private Sub DIX_1406_OnButtonClicked()
  If newv = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        newv = 1
        Configuration.OpenDiagram "News"
        News.Show
    End If
End Sub

Private Sub DIX_3872_OnButtonClicked()

' ----- INSERTED BY PASTE/IMPORT ------
     If cus = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        cus = 1
        Configuration.OpenDiagram "ProjectExamples"
        Projects.Show
    End If

End Sub

Private Sub DIX_634_OnButtonClicked()

    If dev = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        dev = 1
        Configuration.OpenDiagram "Development"
        Developing.Show
    End If
    
End Sub

Private Sub IGSSDiagram_OnOpen()

     If Configuration.OnlineDB.IsConfigLoaded() = 1 Then
  
        If wel = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
            wel = 1
            WelcomeSup.Show
        End If
        
    End If
    
End Sub
Attribute VB_Name = "D_IGSSMaster_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2213, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2189_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Master.exe", 1
End Sub
Private Sub DIX_2281_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\AMS.chm", 1
End Sub

Private Sub DIX_2213_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\Master.chm", 1
End Sub
Attribute VB_Name = "D_JobSch_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2281, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2281_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\JobSch.chm", 1

End Sub

Private Sub DIX_2295_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "JobSch.exe", 1
End Sub
Attribute VB_Name = "D_Maintenance_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2283, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2283_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\Mnt.chm", 1

End Sub

Private Sub DIX_2298_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Maintenance.exe", 1
End Sub
Attribute VB_Name = "D_MoreDiagrams_Training"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "D_NewsV8AuditTrail_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2343, 1, 0, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_2344, 2, 1, DefEx, IGSSButtonControl"
Private Sub DIX_2343_OnButtonClicked()
Shell Configuration.OnlineDB.SysPath + "AuditTrail.exe", vbNormalFocus

End Sub

Private Sub DIX_2344_OnButtonClicked()
Shell Configuration.OnlineDB.SysPath + "firehelp.exe AuditTrail.chm", vbNormalFocus
End Sub
Attribute VB_Name = "D_NewsV8Dashboard_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2002, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2002_OnButtonClicked()

Shell Configuration.OnlineDB.SysPath + "Dashboard.exe", vbNormalFocus

End Sub
Attribute VB_Name = "D_NewsV8Panning_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub DIX_3932_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\def.chm", 1
End Sub
Attribute VB_Name = "D_NewsV9DataServer_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub DIX_2872_OnButtonClicked()
ret = Shell(Configuration.OnlineDB.SysPath + "IGSSdataServer.exe", vbNormalFocus)
End Sub
Attribute VB_Name = "D_NewsV9Master_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "D_Notifier_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2255, 2, 1, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_2259, 3, 2, DefEx, IGSSButtonControl"
Private Sub DIX_2186_OnButtonClicked()

    Dim str As String

    str = Configuration.OnlineDB.CfgPath + "demo.r/demo.ams"

    fHandleFile Configuration.OnlineDB.SysPath + "notifier.exe str", 1

End Sub


Private Sub DIX_2259_OnButtonClicked()

    fHandleFile Configuration.OnlineDB.SysPath + "Eng\AMS.chm", 1

End Sub
Attribute VB_Name = "D_ProjectExamples_Cases"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "D_PumpStation|fffd|New_Training"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub tank_OnReadyStateChange(ByVal newState As Long)

End Sub
Attribute VB_Name = "D_Recipe_Training"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Execute, 1, 0, DefEx, IGSSButtonControl"
Attribute VB_Control = "ButSelRecipe, 2, 1, DefEx, IGSSButtonControl"
Public recipeRunning As Boolean
Public Sub timerTick()
' called from Configuration.OnTime
  Dim coffeeProgress As Double
  
  If (recipeRunning) Then
    coffeeProgress = Configuration.OnlineDB.ReadDB("CoffeeProgress!value")
    Configuration.OnlineDB.WriteDB "CoffeeProgress!value", coffeeProgress + 1
    If (coffeeProgress >= 100) Then
      recipeRunning = False
      Configuration.OnlineDB.Objects("Switch").Atoms("state") = 0
    End If
  End If
End Sub
Public Sub initRecipe()
  recipeRunning = False
  Configuration.OnlineDB.WriteDB "CoffeeProgress!value", 0
End Sub

Private Sub ButSelRecipe_OnButtonClicked()
   CoffeeRecipe.Show
End Sub

Private Sub Execute_OnButtonClicked()
  Configuration.OnlineDB.WriteDB "CoffeeProgress!value", 0
  recipeRunning = True
     Configuration.OnlineDB.Objects("Switch").Atoms("state") = 1
End Sub
Attribute VB_Name = "D_Reports_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2287, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2287_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\Report.chm", 1

End Sub
Attribute VB_Name = "D_Supervise_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2291, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_2291_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\run.chm", 1

End Sub
Attribute VB_Name = "D_SysConfig_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2293, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_3707_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "SysConfig.exe", 1
End Sub

Private Sub DIX_2293_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\SysConfig.chm", 1

End Sub
Attribute VB_Name = "D_SystemOverview_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_1337, 1, 0, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_1340, 2, 1, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_2162, 3, 2, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_3611, 5, 4, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_3689, 6, 5, DefEx, IGSSButtonControl"
Attribute VB_Control = "DIX_1877, 7, 6, DefEx, IGSSButtonControl"
Private Sub DIX_1337_OnButtonClicked()
    
    If dri = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        dri = 1
        Configuration.OpenDiagram "Drivers"
        Drivers.Show
    End If
    
End Sub

Private Sub DIX_1340_OnButtonClicked()

    Language.Show

End Sub


Private Sub DIX_2162_OnButtonClicked()

    If modu = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        modu = 1
        Configuration.OpenDiagram "Modules"
        Modules.Show
    End If
    
End Sub

Private Sub DIX_2241_OnButtonClicked()
     If cus = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        cus = 1
        Configuration.OpenDiagram "ProjectExamples"
        Projects.Show
    End If
End Sub

Private Sub DIX_3611_OnButtonClicked()
    
    If popup_comerror = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        popup_comerror = 1
        Configuration.OpenDiagram "Communication_errors"
        CommunicationErrors.Show
    End If
    
End Sub

Private Sub DIX_3689_OnButtonClicked()

    If popup_scalability = 0 And Configuration.OnlineDB.ReadDB("VBAShowPopups!state") = 0 Then
        popup_scalability = 1
        Configuration.OpenDiagram "Scalability"
        Scalability.Show
    End If
    
End Sub
Attribute VB_Name = "D_TrainingDiagrams_Training"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Configuration_OnTimer()
  D_Recipe_Training.timerTick
End Sub

Private Sub Configuration_OnSuperviseCodeStart()
  timerTick = 500
End Sub
Attribute VB_Name = "D_UserAdm_Global"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DIX_2289, 1, 0, DefEx, IGSSButtonControl"
Private Sub DIX_3710_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "UserAdm.chm", 1
End Sub

Private Sub DIX_2289_OnButtonClicked()
fHandleFile Configuration.OnlineDB.SysPath + "Eng\UserAdm.chm", 1

End Sub
Attribute VB_Name = "D_Water_Overview_Cases"
Attribute VB_Base = "0{95D82583-57B6-11D4-9113-00105A48FF0C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Developing"
Attribute VB_Base = "0{EDB9B1C6-121D-4511-BDC3-4FA6FF4692C7}{89AD8299-E0D9-4553-92D8-96B8B85FD5D9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
Unload Developing
End Sub
Attribute VB_Name = "Drivers"
Attribute VB_Base = "0{5E12B5D8-25BE-4ECD-B26D-7EDFBE3108E4}{B1572A2F-5CF2-4161-8690-4D57C1B9F27E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
Unload Drivers
End Sub
Attribute VB_Name = "FormNewCoffeeRecipe"
Attribute VB_Base = "0{E6BD20C1-0143-4852-9A29-0A86AF745E09}{8F170ECF-6A23-432C-8810-9778855DA55F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False





'----------------------------------------------------------------------------------
' Helper dialogue for CoffeeRecipe form
' USed for entering the name of a new recipe
'----------------------------------------------------------------------------------

Public NewRecipeName As String

Private Sub ButCancel_Click()
  '----------------------------------------------------------------------------------
  ' Cancel button handle.  Just hide the dialogue
  '----------------------------------------------------------------------------------
  On Error Resume Next
  NewRecipeName = ""
  Me.Hide
End Sub

Private Sub ButOK_Click()
  '----------------------------------------------------------------------------------
  ' OK button handler. Store the entered name in a poublic member variable
  '----------------------------------------------------------------------------------
  On Error Resume Next
  NewRecipeName = EditName
  Me.Hide
End Sub

Public Sub setType(typeName As String)
  '----------------------------------------------------------------------------------
  ' Initialise the recipe type indication field.
  ' called directly from CoffeeRecipe
  '----------------------------------------------------------------------------------
  On Error Resume Next
  LabelType.Caption = typeName
End Sub

Attribute VB_Name = "Language"
Attribute VB_Base = "0{B7759E8C-EFCA-4A87-87CE-ECE3D01D5612}{1D369586-4EDE-43F1-BECE-815B5EA3FA31}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()

    Unload Language
    
End Sub

Private Sub EngFlag_Click()

    Shell Configuration.OnlineDB.SysPath + "chglang.exe ENG"
    Configuration.OpenDiagram "SystemOverview"
    Unload Language
    
    
End Sub

Private Sub DanFlag_Click()

    Shell Configuration.OnlineDB.SysPath + "chglang.exe DAN"
    Configuration.OpenDiagram "SystemOverview"
    Unload Language
    
    
End Sub


Private Sub EspFlag_Click()
    
    Shell Configuration.OnlineDB.SysPath + "chglang.exe ESP"
    Configuration.OpenDiagram "SystemOverview"
    Unload Language
    
    
    
End Sub


Private Sub UserForm_initialize()
    
    Dim lang As String
        lang = Configuration.OnlineDB.LangID
        
    Select Case lang
    
        Case "ENG"
            LngLabel.Caption = "English"
        Case "DAN"
            LngLabel.Caption = "Danish"
        Case "ESP"
            LngLabel.Caption = "Spanish"
        Case Else
            LngLabel.Caption = Configuration.OnlineDB.LangID
            
    End Select
    
End Sub
Attribute VB_Name = "Module1"
Public wel As Integer
Public dev As Integer
Public popup_systemoverview As Integer
Public cus As Integer
Public tra As Integer
Public newv As Integer
Public dri As Integer
Public modu As Integer
Public popup_comerror As Integer
Public popup_scalability As Integer


Private Declare Function apiShellExecute Lib "Shell32.dll" _
    Alias "ShellExecuteA" _
    (ByVal hwnd As Long, _
    ByVal lpOperation As String, _
    ByVal lpFile As String, _
    ByVal lpParameters As String, _
    ByVal lpDirectory As String, _
    ByVal nShowCmd As Long) _
    As Long

'***App Window Constants***
Public Const WIN_NORMAL = 1         'Open Normal
Public Const WIN_MAX = 3            'Open Maximized
Public Const WIN_MIN = 2            'Open Minimized

'***Error Codes***
Private Const ERROR_SUCCESS = 32&
Private Const ERROR_NO_ASSOC = 31&
Private Const ERROR_OUT_OF_MEM = 0&
Private Const ERROR_FILE_NOT_FOUND = 2&
Private Const ERROR_PATH_NOT_FOUND = 3&
Private Const ERROR_BAD_FORMAT = 11&


'***************Usage Examples***********************
'Open a folder:     ?fHandleFile("C:\TEMP\",WIN_NORMAL)
'Call Email app:    ?fHandleFile("mailto:dash10@hotmail.com",WIN_NORMAL)
'Open URL:          ?fHandleFile("http://home.att.net/~dashish", WIN_NORMAL)
'Handle Unknown extensions (call Open With Dialog):
'                   ?fHandleFile("C:\TEMP\TestThis",Win_Normal)
'Start Access instance:
'                   ?fHandleFile("I:\mdbs\CodeNStuff.mdb", Win_NORMAL)
'****************************************************

Function fHandleFile(stFile As String, lShowHow As Long)
Dim lRet As Long, varTaskID As Variant
Dim stRet As String
    'First try ShellExecute
    lRet = apiShellExecute(hWndAccessApp, vbNullString, _
            stFile, vbNullString, vbNullString, lShowHow)
            
    If lRet > ERROR_SUCCESS Then
        stRet = vbNullString
        lRet = -1
    Else
        Select Case lRet
            Case ERROR_NO_ASSOC:
                'Try the OpenWith dialog
                varTaskID = Shell("rundll32.exe shell32.dll,OpenAs_RunDLL " _
                        & stFile, WIN_NORMAL)
                lRet = (varTaskID <> 0)
            Case ERROR_OUT_OF_MEM:
                stRet = "Error: Out of Memory/Resources. Couldn't Execute!"
            Case ERROR_FILE_NOT_FOUND:
                stRet = "Error: File not found.  Couldn't Execute!"
            Case ERROR_PATH_NOT_FOUND:
                stRet = "Error: Path not found. Couldn't Execute!"
            Case ERROR_BAD_FORMAT:
                stRet = "Error:  Bad File Format. Couldn't Execute!"
            Case Else:
        End Select
    End If
    fHandleFile = lRet & _
                IIf(stRet = "", vbNullString, ", " & stRet)
End Function

Attribute VB_Name = "Modules"
Attribute VB_Base = "0{B4F51F69-BB1A-44D6-8E15-A3D1249C625B}{B47FBA17-65FA-4C6A-AE58-790E5E935E9F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Private Sub CommandButton1_Click()
Unload Modules
End Sub
Attribute VB_Name = "News"
Attribute VB_Base = "0{503BCE5D-E6CE-4760-8EBB-1FC16738C29E}{2691C094-84F1-410C-B675-6A59DF9C8A13}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
Unload News
End Sub
Attribute VB_Name = "Projects"
Attribute VB_Base = "0{DE2C5457-2F4C-4239-A0DE-4C5ECE4DC9CC}{98DEFFAE-A6CE-473D-81D9-00E22DFA995B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
Unload Projects
End Sub
Attribute VB_Name = "RecipeDB"
'----------------------------------------------------------------------------------------
'
' Procedures for accessing recipes stored in recipe.mdb
'
' The procedures are general, and examples of use are found in CoffeeRecipe
'----------------------------------------------------------------------------------------

Dim db As Database

Public Sub attachRecipeDB()
  '--------------------------------------------------------------------------------------
  ' Find and connect to recipe database.
  ' This procedure must be called once before any other
  '--------------------------------------------------------------------------------------
  Dim dbName As String
  Dim tb As TableDef
  
  On Error GoTo ErrExit
  dbName = Configuration.OnlineDB.CfgPath + "recipe.mdb"
  Set db = OpenDatabase(dbName)

ErrExit:
End Sub

Public Sub detachRecipeDB()
  '--------------------------------------------------------------------------------------
  ' Release connection to recipe database
  '--------------------------------------------------------------------------------------
  On Error GoTo 0
  Set db = Nothing
End Sub

Public Sub populateRecipeCombo(recipeType As Integer, cb As ComboBox)
  '--------------------------------------------------------------------------------------
  ' Populates combo box cb with the names of all recipes of type recipeType
  ' cb is cleared of existing entries
  '--------------------------------------------------------------------------------------
  Dim qry As QueryDef
  Dim rec As Recordset
  Dim str As String
  Dim rc  As Integer

  On Error GoTo ErrExit
  
  rc = -1
  Set qry = db.CreateQueryDef("", "SELECT * FROM Recipes WHERE RecipeType=" & recipeType)
  Set rec = qry.OpenRecordset()

  cb.Clear
  While (Not rec.EOF())
    str = rec.Fields("RecipeName").value
    cb.AddItem str
    rec.MoveNext
  Wend
  
  rec.Close
    
  If (Configuration.OnlineDB.IsConfigLoaded()) Then
    str = Configuration.OnlineDB.ReadDB("CoffeeRecipe!string")
    On Error Resume Next
    cb.value = str
  End If

ErrExit:
End Sub

Public Function getRecipe(recipeType As Integer, recipeName As String) As Recordset
  '--------------------------------------------------------------------------------------
  ' Returns a recordset containing all IGSS objects in are name recipe of a given type
  ' The caller must close the recordset after use
  '--------------------------------------------------------------------------------------
  Dim qry As QueryDef
  Dim rec As Recordset
  Dim sql As String
  
  On Error GoTo ErrExit
  sql = "SELECT * FROM Recipes, RecipeObjects "
  sql = sql & "WHERE Recipes.RecipeType= " & recipeType & " AND Recipes.RecipeName = '" & recipeName & "' AND Recipes.RecipeID = RecipeObjects.RecipeID"
  Set qry = db.CreateQueryDef("", sql)
  Set rec = qry.OpenRecordset()

  Set getRecipe = rec
  
ErrExit:
End Function

Public Sub insertRecipe(recipeType As Integer, recipeName As String)
  '--------------------------------------------------------------------------------------
  ' Insert a new recipe into the database
  ' No IGSS object are member of the recipe at this point
  '--------------------------------------------------------------------------------------
  Dim qry As QueryDef
  Dim sql As String
  
  On Error GoTo ErrExit
  
  sql = "INSERT INTO Recipes (RecipeName, RecipeType ) "
  sql = sql + "VALUES ( '" & recipeName & "' , " & recipeType & " )"
  Set qry = db.CreateQueryDef("", sql)
  qry.Execute

ErrExit:
End Sub

Public Sub deleteRecipe(recipeType As Integer, recipeName As String)
  '--------------------------------------------------------------------------------------
  ' Delete a named recipe of given type
  ' Both the recipe and its members are removed
  '--------------------------------------------------------------------------------------
  Dim qry As QueryDef
  Dim sql As String
  
  On Error GoTo ErrExit
  
  sql = "DELETE FROM Recipes WHERE RecipeName = '" & recipeName & "' AND RecipeType = " & recipeType
  Set qry = db.CreateQueryDef("", sql)
  qry.Execute
  
ErrExit:
End Sub



Public Sub editRecipeObject(recipeType As Integer, recipeName As String, area As String, object As String, atom As Integer, value As Double)
  '--------------------------------------------------------------------------------------
  ' Insert an IGSS object into the given recipe or updates the stored value of the object
  '--------------------------------------------------------------------------------------
  Dim qry As QueryDef
  Dim rec As Recordset
  Dim sql As String
  Dim rid As Integer
  Dim tb  As TableDef
  
  On Error GoTo ErrExit
  
  sql = "SELECT * FROM Recipes WHERE RecipeType = " & recipeType & " AND recipeName = '" & recipeName & "'"
  Set qry = db.CreateQueryDef("", sql)
  Set rec = qry.OpenRecordset()
  If (Not rec.EOF()) Then
    rid = rec.Fields("RecipeID").value
    rec.Close
    
    ' try insert
    sql = "INSERT INTO RecipeObjects (RecipeID, ObjectName, AreaName, Atom, ProcValue ) "
    sql = sql + "VALUES ( " & rid & " , '" & object & "' , '" & area & "' , " & atom & " , " & value & " )"
    qry.sql = sql
    On Error GoTo InsFailed
    qry.Execute
    On Error GoTo 0
    
    If (qry.RecordsAffected = 0) Then GoTo InsFailed
   
  End If
  Exit Sub

InsFailed:
    ' if insert failed try update
    On Error GoTo ErrExit
    sql = "UPDATE RecipeObjects SET ProcValue = " & value
    sql = sql + " WHERE RecipeID = " & rid & " AND ObjectName = '" & object & "' AND AreaName = '" & area & "' AND Atom = " & atom
    qry.sql = sql
    qry.Execute
ErrExit:
End Sub


Public Sub populateDigCommandCombo(area As String, template As String, cb As ComboBox)
  '--------------------------------------------------------------------------------------
  ' Populates a combo box cb with the possible commands of digital objects based on a
  ' template given by area + template
  ' cb is cleared before new entries are added
  '--------------------------------------------------------------------------------------
  Dim qry As QueryDef
  Dim rec As Recordset
  Dim str As String
  Dim rc  As Integer

  On Error GoTo ErrExit2
  
  rc = -1
  Set qry = db.CreateQueryDef("", "SELECT Name, Command FROM DIG_CMD WHERE Area ='" & area & "' AND Ename ='" & template & "' ORDER BY Command")
  Set rec = qry.OpenRecordset()
  
  On Error GoTo ErrExit1
  
  cb.Clear
  While (Not rec.EOF())
    str = rec.Fields("NAME").value
    cb.AddItem str
    rec.MoveNext
  Wend
  
ErrExit1:
  rec.Close
ErrExit2:
End Sub


Attribute VB_Name = "RegistryAndWeb"
Option Explicit

Private m_lngRetVal As Long

' --------------------------------------------------------------
' Constants required for values in the keys
' --------------------------------------------------------------
  Private Const REG_NONE As Long = 0                  ' No value type
  Private Const REG_SZ As Long = 1                    ' nul terminated string
  Private Const REG_EXPAND_SZ As Long = 2             ' nul terminated string w/enviornment var
  Private Const REG_BINARY As Long = 3                ' Free form binary
  Private Const REG_DWORD As Long = 4                 ' 32-bit number
  Private Const REG_DWORD_LITTLE_ENDIAN As Long = 4   ' 32-bit number (same as REG_DWORD)
  Private Const REG_DWORD_BIG_ENDIAN As Long = 5      ' 32-bit number
  
' --------------------------------------------------------------
' Registry Specific Access Rights
' --------------------------------------------------------------
  Private Const KEY_QUERY_VALUE As Long = &H1
  Private Const KEY_SET_VALUE As Long = &H2
  Private Const KEY_CREATE_SUB_KEY As Long = &H4
  Private Const KEY_ENUMERATE_SUB_KEYS As Long = &H8
  Private Const KEY_NOTIFY As Long = &H10
  Private Const KEY_CREATE_LINK As Long = &H20
  Private Const KEY_ALL_ACCESS As Long = &H3F
  
' --------------------------------------------------------------
' Constants required for key locations in the registry
' --------------------------------------------------------------
  Public Const HKEY_CLASSES_ROOT As Long = &H80000000
  Public Const HKEY_CURRENT_USER As Long = &H80000001
  Public Const HKEY_LOCAL_MACHINE As Long = &H80000002
  Public Const HKEY_USERS As Long = &H80000003
  Public Const HKEY_PERFORMANCE_DATA As Long = &H80000004
  Public Const HKEY_CURRENT_CONFIG As Long = &H80000005
  Public Const HKEY_DYN_DATA As Long = &H80000006

' --------------------------------------------------------------
' Constants required for return values (Error code checking)
' --------------------------------------------------------------
  Private Const ERROR_SUCCESS As Long = 0
  Private Const ERROR_ACCESS_DENIED As Long = 5
  Private Const ERROR_NO_MORE_ITEMS As Long = 259

' --------------------------------------------------------------
' Open/Create constants
' --------------------------------------------------------------
  Private Const REG_OPTION_NON_VOLATILE As Long = 0
  Private Const REG_OPTION_VOLATILE As Long = &H1

  Public Declare Function getCfgPath Lib "msacsupp7.dll" (ByVal path As String, ByVal llen As Long) As Long

' --------------------------------------------------------------
' Declarations required to access the Windows registry
' --------------------------------------------------------------
  Private Declare Function RegCloseKey Lib "advapi32.dll" (ByVal lngRootKey As Long) As Long
  
  Private Declare Function RegCreateKey Lib "advapi32.dll" Alias "RegCreateKeyA" _
            (ByVal lngRootKey As Long, ByVal lpSubKey As String, phkResult As Long) As Long
  
  Private Declare Function RegDeleteKey Lib "advapi32.dll" Alias "RegDeleteKeyA" _
            (ByVal lngRootKey As Long, ByVal lpSubKey As String) As Long
  
  Private Declare Function RegDeleteValue Lib "advapi32.dll" Alias "RegDeleteValueA" _
            (ByVal lngRootKey As Long, ByVal lpValueName As String) As Long
  
  Private Declare Function RegOpenKey Lib "advapi32.dll" Alias "RegOpenKeyA" _
            (ByVal lngRootKey As Long, ByVal lpSubKey As String, phkResult As Long) As Long
  
  Private Declare Function RegQueryValueEx Lib "advapi32.dll" Alias "RegQueryValueExA" _
            (ByVal lngRootKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, _
             lpType As Long, lpData As Any, lpcbData As Long) As Long
  
  Private Declare Function RegSetValueEx Lib "advapi32.dll" Alias "RegSetValueExA" _
            (ByVal lngRootKey As Long, ByVal lpValueName As String, ByVal Reserved As Long, _
             ByVal dwType As Long, lpData As Any, ByVal cbData As Long) As Long

Public Function regDelete_Sub_Key(ByVal lngRootKey As Long, _
                                  ByVal strRegKeyPath As String, _
                                  ByVal strRegSubKey As String)
                                  
  Dim lngKeyHandle As Long

  If regDoes_Key_Exist(lngRootKey, strRegKeyPath) Then
      m_lngRetVal = RegOpenKey(lngRootKey, strRegKeyPath, lngKeyHandle)
      m_lngRetVal = RegDeleteValue(lngKeyHandle, strRegSubKey)
      m_lngRetVal = RegCloseKey(lngKeyHandle)
  End If
End Function

Public Function regDoes_Key_Exist(ByVal lngRootKey As Long, _
                                  ByVal strRegKeyPath As String) As Boolean
  Dim lngKeyHandle As Long
  
  lngKeyHandle = 0
  m_lngRetVal = RegOpenKey(lngRootKey, strRegKeyPath, lngKeyHandle)
  If lngKeyHandle = 0 Then
      regDoes_Key_Exist = False
  Else
      regDoes_Key_Exist = True
  End If
  m_lngRetVal = RegCloseKey(lngKeyHandle)
End Function

Public Function regQuery_A_Key(ByVal lngRootKey As Long, _
                               ByVal strRegKeyPath As String, _
                               ByVal strRegSubKey As String) As Variant
    
  Dim intPosition As Integer
  Dim lngKeyHandle As Long
  Dim lngDataType As Long
  Dim lngBufferSize As Long
  Dim lngBuffer As Long
  Dim strBuffer As String

  lngKeyHandle = 0
  lngBufferSize = 0
  m_lngRetVal = RegOpenKey(lngRootKey, strRegKeyPath, lngKeyHandle)
  If lngKeyHandle = 0 Then
      regQuery_A_Key = ""
      m_lngRetVal = RegCloseKey(lngKeyHandle)
      Exit Function
  End If
  m_lngRetVal = RegQueryValueEx(lngKeyHandle, strRegSubKey, 0&, _
                         lngDataType, ByVal 0&, lngBufferSize)
  If lngKeyHandle = 0 Then
      regQuery_A_Key = ""
      m_lngRetVal = RegCloseKey(lngKeyHandle)
      Exit Function
  End If
  Select Case lngDataType
         Case REG_SZ:
              strBuffer = Space(lngBufferSize)
              m_lngRetVal = RegQueryValueEx(lngKeyHandle, strRegSubKey, 0&, 0&, _
                                     ByVal strBuffer, lngBufferSize)
              If m_lngRetVal <> ERROR_SUCCESS Then
                  regQuery_A_Key = ""
              Else
                  intPosition = InStr(1, strBuffer, Chr(0))
                  If intPosition > 0 Then
                      regQuery_A_Key = Left(strBuffer, intPosition - 1)
                  Else
                      regQuery_A_Key = strBuffer
                  End If
              End If
              
         Case REG_DWORD:
              m_lngRetVal = RegQueryValueEx(lngKeyHandle, strRegSubKey, 0&, lngDataType, _
                                     lngBuffer, 4&)
              If m_lngRetVal <> ERROR_SUCCESS Then
                  regQuery_A_Key = ""
              Else
                  regQuery_A_Key = lngBuffer
              End If
         
         Case Else:
              regQuery_A_Key = ""
  End Select
  m_lngRetVal = RegCloseKey(lngKeyHandle)
End Function
Public Sub regCreate_Key_Value(ByVal lngRootKey As Long, ByVal strRegKeyPath As String, _
                               ByVal strRegSubKey As String, varRegData As Variant)
    
  Dim lngKeyHandle As Long
  Dim lngDataType As Long
  Dim lngKeyValue As Long
  Dim strKeyValue As String
  
  If IsNumeric(varRegData) Then
      lngDataType = REG_DWORD
  Else
      lngDataType = REG_SZ
  End If
  
  m_lngRetVal = RegCreateKey(lngRootKey, strRegKeyPath, lngKeyHandle)
  Select Case lngDataType
         Case REG_SZ:
              strKeyValue = Trim(varRegData) & Chr(0)
              m_lngRetVal = RegSetValueEx(lngKeyHandle, strRegSubKey, 0&, lngDataType, _
                                          ByVal strKeyValue, Len(strKeyValue))
                                   
         Case REG_DWORD:
              lngKeyValue = CLng(varRegData)
              m_lngRetVal = RegSetValueEx(lngKeyHandle, strRegSubKey, 0&, lngDataType, _
                                          lngKeyValue, 4&)
                                   
  End Select
  m_lngRetVal = RegCloseKey(lngKeyHandle)
End Sub
Public Function regCreate_A_Key(ByVal lngRootKey As Long, ByVal strRegKeyPath As String)
  Dim lngKeyHandle As Long
  
  m_lngRetVal = RegCreateKey(lngRootKey, strRegKeyPath, lngKeyHandle)
  m_lngRetVal = RegCloseKey(lngKeyHandle)
End Function
Public Function regDelete_A_Key(ByVal lngRootKey As Long, _
                                ByVal strRegKeyPath As String, _
                                ByVal strRegKeyName As String) As Boolean
    
  Dim lngKeyHandle As Long
  
  regDelete_A_Key = False
  If regDoes_Key_Exist(lngRootKey, strRegKeyPath) Then
      m_lngRetVal = RegOpenKey(lngRootKey, strRegKeyPath, lngKeyHandle)
      m_lngRetVal = RegDeleteKey(lngKeyHandle, strRegKeyName)
      If m_lngRetVal = 0 Then regDelete_A_Key = True
      m_lngRetVal = RegCloseKey(lngKeyHandle)
  End If
End Function

Public Sub ShowWeb()
  Dim ShellCmd, ConfPath As String
  Dim pos As Long

  ConfPath = Space(256)
  pos = getCfgPath(ConfPath, Len(ConfPath))
  ConfPath = Left(ConfPath, pos)
  ShellCmd = regQuery_A_Key(HKEY_LOCAL_MACHINE, "SOFTWARE\Classes\Applications\iexplore.exe\shell\open\command", "")
  pos = InStr(ShellCmd, "%1")
  ShellCmd = Left(ShellCmd, pos - 1) & ConfPath & "igss.htm"
  Shell ShellCmd, vbNormalFocus
End Sub

Public Sub StartThePortal()
  Dim ShellCmd As String
  Dim pos As Long

  ShellCmd = regQuery_A_Key(HKEY_LOCAL_MACHINE, "SOFTWARE\Classes\Applications\iexplore.exe\shell\open\command", "")
  pos = InStr(ShellCmd, "%1")
  ShellCmd = Left(ShellCmd, pos - 1) & "http://localhost/igssportal"
  Shell ShellCmd, vbNormalFocus
End Sub
Public Sub ShowHtmlDoc(DocToShow As String)
  Dim ShellCmd, ConfPath As String
  Dim pos As Long

  ConfPath = Space(256)
  pos = getCfgPath(ConfPath, Len(ConfPath))
  ConfPath = Left(ConfPath, pos)
  ShellCmd = regQuery_A_Key(HKEY_LOCAL_MACHINE, "SOFTWARE\Classes\Applications\iexplore.exe\shell\open\command", "")
  pos = InStr(ShellCmd, "%1")
  ShellCmd = Left(ShellCmd, pos - 1) & ConfPath & DocToShow
  Shell ShellCmd, vbNormalFocus
End Sub
Attribute VB_Name = "Scalability"
Attribute VB_Base = "0{B7E1EAE0-3F96-4C7E-8D7C-8DD35F2FB94D}{5FB173BC-0587-4AFC-8A6C-7E28E5F25207}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False




Private Sub CommandButton1_Click()
Unload Scalability
End Sub
Attribute VB_Name = "SystemOverview"
Attribute VB_Base = "0{2E66F246-8B52-4151-8578-FDB1F14D6B10}{99B7F4E6-B1A1-4075-AF13-EBDB11426F5D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
Unload SystemOverview
End Sub
Attribute VB_Name = "Training"
Attribute VB_Base = "0{A0B35376-3C6C-43E2-885A-CC65C62252DE}{0D516E06-8A29-4B41-AE06-0D199C69F535}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
Unload Training
End Sub

Attribute VB_Name = "WelcomeSup"
Attribute VB_Base = "0{6FFDBFD5-A611-4CF6-B734-C4F4ED417A62}{E2F04663-848A-43D0-AE82-13201C8F1448}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton1_Click()

If CheckBox1.value = True Then
    Configuration.OnlineDB.WriteDB "VBAShowPopups!state", 1
    End If

Unload WelcomeSup
End Sub



INQUEST-PP=macro
