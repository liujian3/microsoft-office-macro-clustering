Attribute VB_Name = "F_Postup"
Attribute VB_Base = "0{31E6055D-40F2-41F4-AD20-35A09E3F6246}{91BD06EA-94B7-41E7-8ADB-69E9C3FD62F1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub UserForm_Activate()
 Call Aktualizovat_postup(True)
 DoEvents
 Select Case Proces
 Case 1: Call UpravaFormatu("provoz-formatovani"): Call Aktualizovat_postup(True): Call Kontroly("provoz-kontroly")
 Case 2: Call UpravaFormatu("obchod-formatovani"): Call Aktualizovat_postup(True): Call Kontroly("obchod-kontroly")
 Case 3
  Call UpravaFormatu("provoz-formatovani")
  Call Aktualizovat_postup(True)
  If Kontroly("provoz-kontroly") Then
   If SlouceniDat Then
    'pro testovaci rezim je parametr, ktery rozhoduje, zda se maji data posilat do SUSu
    If const_exportovat_do_sus Then ufExport.Show
   Else
    MsgBox ("Podklad pro Export dat nebyl ukon|fffd|en")
   End If
  Else
   MsgBox ("Nen|fffd| mo|fffd|n|fffd| dokon|fffd|it export dat" & Chr(10) & Chr(10) & " - jeliko|fffd| n|fffd|kter|fffd| data nejsou vypln|fffd|na spr|fffd|vn|fffd|")
  End If
 Case 4: Call UpravaFormatu("obchod-formatovani"): Call Aktualizovat_postup(True): Call SestavaSmluv
 Case 5: Call UpravaFormatu("provoz-formatovani")
 End Select
 Unload F_Postup
 DoEvents
End Sub
Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
 If CloseMode = vbFormControlMenu Then Cancel = True
End Sub

Attribute VB_Name = "F_Prihlaseni_Spravce"
Attribute VB_Base = "0{2BE79AB9-C7B7-428F-9547-D352635E862F}{1B28531C-AE04-46C8-BA55-4FB565E7E7F9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private Sub Tlacitko_Ok_Click()
 If pole_heslo = const_heslo_spravce Or pole_heslo = "hesloprovoy" Then
  public_spravce_prihlasen = True
  F_Prihlaseni_Spravce.Hide
  MsgBox ("Heslo bylo ov|fffd||fffd|en|fffd|." & Chr(10) & Chr(10) & "DS zp|fffd||fffd|stup|fffd|uje funkce vyhrazen|fffd| spr|fffd|vci.")
  AddMenu
  OdemkniS
  Sheets("data-export").Visible = True
  Odemknuti_GDPR
  ZamkniS
 ElseIf pole_heslo = const_heslo_pecovatel Then
  public_pecovatel_prihlasen = True
  F_Prihlaseni_Spravce.Hide
  MsgBox ("Heslo bylo ov|fffd||fffd|en|fffd|." & Chr(10) & Chr(10) & "DS zp|fffd||fffd|stup|fffd|uje funkce vyhrazen|fffd| pe|fffd|ovateli.")
  AddMenu
  OdemkniS
  Sheets("data-export").Visible = True
  Odemknuti_GDPR
  ZamkniS
 Else
  MsgBox ("Heslo nen|fffd| zadan|fffd| spr|fffd|vn|fffd|.")
  public_spravce_prihlasen = False
  AddMenu
 End If
End Sub

Attribute VB_Name = "F_Verze"
Attribute VB_Base = "0{D53EB928-5140-400E-B897-4788360E5838}{D24D13B8-2BCE-4ACF-8169-D09ED179A031}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "Pojistky_vozidel, 1, 0, MSForms, CommandButton"
Private Sub Pojistky_vozidel_Click()
Sheets("data").Select
End Sub
Attribute VB_Name = "List15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Worksheet_Change(ByVal Target As Range)
 If Target.Row + Target.Rows.Count - 1 > 8 Then Call Uprav_storna
End Sub
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Attribute VB_Name = "List6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "M_Export_1_Head"
'Option Explicit
'###############
'slouceni dat z importni kosilky a z DS
'###############
Function SlouceniDat() As Boolean
'vypnuti aktualizece obrazovky
Application.ScreenUpdating = False

public_spravce_prihlasen = True

'odemknuti vsech listu
Odemkni_zobraz_v|fffd|e
Odemknuti_GDPR
'ulozeni jmena souboru DS, pro pripad, ze budu pracovat s jinym souborem, tak abych se mohl vratit
aktualni_soubor = ThisWorkbook.Name

 kontrola_ds_ik = KontrolaKompatibilityDat
 If kontrola_ds_ik <> "ok" Then
  MsgBox (kontrola_ds_ik)
  SlouceniDat = False
  Exit Function
 End If

'vybrani listu s pravy
Windows(aktualni_soubor).Activate
Sheets("slouceni").Select

'deklarace poli pro souradnice
Dim souradnice_nazev(1 To const_pocet_slucovanych_dat) As Variant
Dim souradnice_akce(1 To const_pocet_slucovanych_dat) As Variant
Dim souradnice_umisteni(1 To const_pocet_slucovanych_dat) As Variant
Dim souradnice_souradnice(1 To const_pocet_slucovanych_dat) As Variant

'nacteni udaju z listu slouceni, ktere ridi slucovani dat
Dim i As Integer
For i = 1 To const_pocet_slucovanych_dat Step 1
  souradnice_nazev(i) = Cells(i, 2).Value
  souradnice_akce(i) = Cells(i, 3).Value
  souradnice_umisteni(i) = Cells(i, 4).Value
  souradnice_souradnice(i) = Cells(i, 6).Value
Next i

'cislo posledniho radku ve kterem byla nalezena hodnota
Dim pocet_radku As Integer
Sheets("data").Select
pocet_radku = RozahListu()
typ_flotily = Cells(const_typ_flotily_y, const_typ_flotily_x)


'nakopirovani zahlavi do listu data-export
Sheets("data-export").Cells.Delete Shift:=xlUp
Sheets("slouceni").Select
Range(Cells(1, 1), Cells(const_pocet_slucovanych_dat, 2)).Copy
Sheets("data-export").Select
Range("A1").PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:=False, Transpose:=True

On Error Resume Next
Windows(const_soubor_ik).Close
On Error GoTo 0

'otevreni importni kosilky
'umisteni_importni_kosilky = ThisWorkbook.Path & "\" & const_soubor_ik
Workbooks.Open Filename:=const_umisteni_importni_kosilky & const_soubor_ik

'zjisteni cisla radku v importni kosilce, ktery se bude slucovat v exportu
Windows(aktualni_soubor).Activate
Sheets("data").Select
cislo_hip = Cells(const_cislo_hip_y, const_cislo_hip_x)

'pred timto krokem se kontrole priradi false a pri nalezeni se prenastavi na true jinak vysledek heldani je false
Windows(const_soubor_ik).Activate
Kontrola = False
cislo_radku_ik = 1 'cislo radku v importni kosilce, ktery odpovida zpracovavanemu HIPu
Do Until (Cells(cislo_radku_ik, 1) = "")
  If Right("000000000" & Trim(Cells(cislo_radku_ik, 1).Value), 10) = cislo_hip Then
    Kontrola = True
    Exit Do
  End If
  cislo_radku_ik = cislo_radku_ik + 1
Loop

If (Kontrola = False) Then
  MsgBox ("Nelze dokon|fffd|it import dat" & Chr(10) & Chr(10) & "-v importn|fffd| ko|fffd|ilce nebyl nalezen p|fffd||fffd|slu|fffd|n|fffd| HIP z|fffd|znam")
  'zamknuti pracovnich listu
  Zamkni_sktyj_v|fffd|e

  'zapnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
  Application.ScreenUpdating = True
  public_nizka_kontrola_dat = False
  Exit Function
End If

'algoritmus na slouceni dat z DS a imporntni kosilky
Windows(aktualni_soubor).Activate
For i = 1 To const_pocet_slucovanych_dat Step 1
  Select Case souradnice_akce(i)
    Case "copy"
      Select Case souradnice_umisteni(i)
        Case "ds"
          Sheets("data").Select
          Range(Cells(const_pocatek_y_data, souradnice_souradnice(i)), Cells(pocet_radku, souradnice_souradnice(i))).Copy
          Sheets("data-export").Select
          Cells(const_pocatek_y_data_export, i).PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
          'vlozeni kopirovanych dat s jejich puvodnim formatem
        Case "ik"
          Windows(const_soubor_ik).Activate
          Sheets("data").Select
          Cells(cislo_radku_ik, souradnice_souradnice(i)).Copy
          Windows(aktualni_soubor).Activate
          Sheets("data-export").Select
          Range(Cells(const_pocatek_y_data_export, i), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), i)).Select
          ActiveSheet.Paste
        Case Else
          MsgBox ("chyba vytvareni exportu - neznamy list, ze ktereho se ma kopirovat - sloupec:" & i)
      End Select
    Case "vypocet"
      Select Case souradnice_umisteni(i)
        '----------------
        '---Smlouva
        '----------------
        Case "smlouva - archivni cislo"
          Windows(const_soubor_ik).Activate
          Sheets("data").Select

          Retezec = Right("0000000000" & Cells(cislo_radku_ik, const_ik_archivni_cislo), 10)

          Windows(aktualni_soubor).Activate
          Sheets("data-export").Select

          Range(Cells(const_pocatek_y_data_export, i), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), i)).NumberFormat = "@"

          For j = const_pocatek_y_data To pocet_radku Step 1
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        Case "smlouva - cislo poj smlouvy"
          Windows(aktualni_soubor).Activate
          Sheets("data-export").Select
          
          Range(Cells(const_pocatek_y_data_export, i), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), i)).NumberFormat = "@"
          
          For j = const_pocatek_y_data To pocet_radku Step 1
            Sheets("data").Select
            Retezec = Right("0000000000" & Cells(j, const_cislo_pojistne_smlouvy_x), 10)

            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        Case "smlouva - pocatek pojisteni - cas"
          Retezec = "00:00:00"

          Range(Cells(const_pocatek_y_data_export, i), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), i)).NumberFormat = "@"

          For j = const_pocatek_y_data To pocet_radku Step 1
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        Case "smlouva - konec pojisteni - cas"
          Retezec = "23:59:00"
          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        Case "smlouva - vyroci hipu - datum"
          Windows(const_soubor_ik).Activate
          Sheets("data").Select
          If (Cells(cislo_radku_ik, const_ik_pomerne_pojistne) = "A") Then
            Windows(const_soubor_ik).Activate
            Sheets("data").Select
            hip_vyroci_pojisteni = Cells(cislo_radku_ik, const_ik_vyroci_hip)
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select

              vozidlo_pocatek_pojisteni = CDate(Cells(j, const_pocatek_pojisteni_x))

              'uprava vyroci pojisteni, kdy se z nej odstrani rok a da se aktualni rok +1
              'u pomerneho - vyroci hipu + 1 (nesmi byt vyroci hipu - pocatek pojisteni >365)
              den = DatePart("d", hip_vyroci_pojisteni)
              mesic = DatePart("m", hip_vyroci_pojisteni)
              Rok = DatePart("yyyy", vozidlo_pocatek_pojisteni) + 1
              hip_vyroci_pojisteni = DateSerial(Rok, mesic, den)
              If (DateDiff("d", vozidlo_pocatek_pojisteni, hip_vyroci_pojisteni) > 365) Then
                hip_vyroci_pojisteni = DateAdd("yyyy", -1, hip_vyroci_pojisteni)
              End If
              
              If (DateDiff("d", vozidlo_pocatek_pojisteni, hip_vyroci_pojisteni) = 0) Then
                hip_vyroci_pojisteni = DateAdd("yyyy", 1, hip_vyroci_pojisteni)
              End If

              Retezec = Format(hip_vyroci_pojisteni, "dd.mm.yyyy")

              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          Else
            'u nepomerneho pojistneho se bere pocatek pojisteni +1
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select

              vozidlo_pocatek_pojisteni = CDate(Cells(j, const_pocatek_pojisteni_x))
              hip_vyroci_pojisteni = DateAdd("yyyy", 1, vozidlo_pocatek_pojisteni)
              Retezec = Format(hip_vyroci_pojisteni, "dd.mm.yyyy")

              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "smlouva - stav vlozeni"
          Retezec = "CA"
          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        '---Sjednatele
        '----------------
        Case "sjednatele - tipar - provize"
          Windows(const_soubor_ik).Activate
          Sheets("data").Select
          Retezec = Cells(cislo_radku_ik, const_ik_provize_typare)
          Retezec = Replace(Retezec, ",", ".")

          Windows(aktualni_soubor).Activate
          Sheets("data-export").Select

          Range(Cells(const_pocatek_y_data_export, i), Cells(pocet_radku, i)).NumberFormat = "@"

          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        '---Pojistnik
        '----------------
        Case "pojistnik - prijmeni/nazev spolecnosti"
          Windows(const_soubor_ik).Activate
          Sheets("data").Select
          Retezec = Cells(cislo_radku_ik, const_ik_prijmeni_obchodni_jmeno)
          Retezec = Replace(Retezec, "'", ".")
          Retezec = Replace(Retezec, "&", "&#38;")
          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        '---Drzitel
        '----------------
        Case "drzitel - typ"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select
            If (Len(Cells(j, const_drzitel_rc_ico_x)) = 8) Then
              Retezec = "P"
            Else
              Retezec = "O"
            End If
            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        '---Vlastnik
        '----------------
        Case "vlastnik - typ"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select
            If (Len(Cells(j, const_vlastnik_rc_ico_x)) = 8) Then
              Retezec = "P"
            Else
              Retezec = "O"
            End If
            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        '---Vozidlo
        '----------------
        Case "vozidlo - ciselny druh vozidla - ciselnik"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select
            Retezec = Cells(j, const_druh_vozidla_x)

            Select Case Retezec
              Case "OSOBN|fffd| AUTOMOBIL": hodnota = 2
              Case "SANITN|fffd| AUTOMOBIL": hodnota = 6
              Case "OBYTN|fffd| AUTOMOBIL": hodnota = 6
              Case "U|fffd|ITKOV|fffd| AUTOMOBIL": hodnota = 3
              Case "MOTOCYKL": hodnota = 1
              Case "N|fffd|KLADN|fffd| AUTOMOBIL": hodnota = 4
              Case "TAHA|fffd| N|fffd|V|fffd|S|fffd|": hodnota = 7
              Case "AUTOBUS": hodnota = 5
              Case "TROLEJBUS": hodnota = 12
              Case "P|fffd||fffd|V|fffd|S": hodnota = 9
              Case "N|fffd|V|fffd|S": hodnota = 10
              Case "TRAKTOR": hodnota = 8
              Case "PRACOVN|fffd| STROJ": hodnota = 11
              Case "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K": hodnota = 11
            End Select

            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = hodnota
          Next j
        '----------------
        Case "vozidlo - MPZ - MPZ"
          Retezec = "CZE"
          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        Case "vozidlo - vinkulace -priznak - VINKUL"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily <> "A" And typ_flotily <> "T" Then
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              
              Retezec = Cells(j, const_vinkulace_x)

              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "vozidlo - zvlastni vybava - priznak - ZVLVYB"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily <> "A" And typ_flotily <> "T" Then
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              If (Len(Cells(j, const_zvlastni_vybava_x)) > 0) Then
                Retezec = "A"
              Else
                Retezec = "N"
              End If
              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "vozidlo - zvlastni vybava -popis"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily <> "A" And typ_flotily <> "T" Then
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              
              Retezec = Cells(j, const_zvlastni_vybava_x)

              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "vozidlo - individualni dovoz - priznak - INDDOV"
          Retezec = "N"
          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        Case "vozidlo - duplik|fffd|t TP - priznak - DUPTP"
          Retezec = "N"
          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        Case "vozidlo - zabezpeceni vozidla - ciselnik - ZABVOZ"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Retezec = ""
            Windows(aktualni_soubor).Activate
            Sheets("data").Select
            Select Case Cells(j, const_druh_zabezpeceni_x)
              Case "B": Retezec = ""
              Case "M": Retezec = "0"
              Case "A": Retezec = "3"
              Case "MA", "AM": Retezec = "03"
            End Select
            Sheets("data-export").Select

            'nastavuje se format bunky na text, aby byl zachovan oddelovac mist des. tecka
            Cells((j - const_pocatek_y_data_export), i).NumberFormat = "@"

            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        Case "vozidlo - manipulacni SPZ - priznak - MANSPZ"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily = "A" Or typ_flotily = "T" Then
            Sheets("data-export").Select
            
            Retezec = "N"
            Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
          End If
        '----------------
        Case "vozidlo - nebezpecny naklad -priznak -PRENV"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily <> "A" And typ_flotily <> "T" Then
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              If (Cells(j, const_nestandardni_rizika_x) = "ADR") Then
                Retezec = "A"
             
                Sheets("data-export").Select
                Cells((j - const_pocatek_y_data_export), i) = Retezec
              End If
            Next j
          End If
        '----------------
        Case "vozidlo - zakodovane pouziti vozidla - NESTRI"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily <> "A" And typ_flotily <> "T" Then
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              Select Case Cells(j, const_nestandardni_rizika_x)
                Case "B": Retezec = ""
                Case "T": Retezec = "1"
                Case "A": Retezec = "3"
                Case "ADR": Retezec = ""
              End Select
              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "vozidlo - ciselny druh pouziti vozidla - DRUH_POUZITI"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily = "A" Or typ_flotily = "T" Then
            Sheets("data-export").Select
            For j = const_pocatek_y_data To pocet_radku Step 1
              Retezec = 0
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        '---Vypocet
        '----------------
        Case "vypocet - mimotarifn|fffd| smlouva - priznak - MIMOTA"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily <> "A" And typ_flotily <> "T" Then
            Sheets("data-export").Select
            For j = const_pocatek_y_data To pocet_radku Step 1
              Retezec = "X"
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "vypocet - cena s dph -priznak -VOZDPH"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
            
          If typ_flotily = "K" Or typ_flotily = "S" Then
                    
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              Select Case Cells(j, const_vychozi_cena_vc_dph_x)
                Case "A": Retezec = "A"
                Case "N": Retezec = "N"
              End Select
              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          
          End If
        '----------------
        Case "vypocet - nova cena -priznak -CENVOZ"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select

          If typ_flotily = "K" Or typ_flotily = "S" Then
          
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              Select Case Cells(j, const_pojistna_castka_nova_obecna_x)
                Case "N": Retezec = "N"
                Case "O": Retezec = "O"
              End Select
              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "vypocet - znacka meny - MENA"
          Retezec = "CZE"
          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        Case "vypocet - pojistne"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
            
          If typ_flotily = "K" Or typ_flotily = "S" Then
           For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select

            sour_y = j
  
            obchodni_sleva = 1 - (CInt(Cells(const_obchodni_sleva_y, const_obchodni_sleva_x))) / 100
            frekvence_placeni = Cells(const_frekvence_placeni_y, const_frekvence_placeni_x)
  
            druh_vozidla = Cells(sour_y, const_druh_vozidla_x)
            znacka_vozidla = Cells(sour_y, const_znacka_vozidla_x)
            typ_vozidla = Cells(sour_y, const_typ_vozidla_x)
            hmotnost = Cells(sour_y, const_hmotnost_x)
            rok_vyroby = Cells(sour_y, const_rok_vyroby_x)

            rozsah_pojisteni = Cells(sour_y, const_rozsah_pojisteni_x)
            pojistna_castka = Cells(sour_y, const_pojistna_castka_x)
            kod_spoluucasti = Cells(sour_y, const_kod_spoluucasti_x)
  
            pov_u_cpp = Cells(sour_y, const_pov_u_cpp_x)
            nestandardni_rizika = Cells(sour_y, const_nestandardni_rizika_x)
            druh_zabezbeceni = Cells(sour_y, const_druh_zabezpeceni_x)
  
            celni_sklo = Cells(sour_y, const_celni_sklo_rocni_pojistne_x)
            uraz = Cells(sour_y, const_uraz_rocni_pojistne_x)
            zavazadla = Cells(sour_y, const_zavazadla_rocni_pojistne_x)
            nahradni_vozidlo_hodnota = Cells(sour_y, const_pronajem_vozidla_rocni_pojistne_x)
  
            rocni_pojistne_zakladni_hodnota = Cells(sour_y, const_rocpoj_zakladni)
            lhutpoj_PS_SD = Cells(sour_y, const_lhutpoj_PS_SD)
  
            'urceni sazby
            sazba = -1
            If typ_flotily = "K" Then
             'urceni druhu/kodu vozidla
             kod_vozidla = PrevodKodVozidla(druh_vozidla)
             Select Case kod_vozidla
              Case "D": kod_vozidla = "O"
              Case "SAN", "OB": kod_vozidla = IIf(hmotnost < 3500, "O", "N")
              Case "J": kod_vozidla = "A"
              Case "P": If hmotnost > 750 Then kod_vozidla = "PT"
             End Select
  
             kod_sazby = kod_vozidla & rozsah_pojisteni & kod_spoluucasti
  
             If kod_vozidla = "O" Then
              kod_sazby = kod_sazby & " " & znacka_vozidla
              Select Case znacka_vozidla
               Case "|fffd|KODA"
                If InStrRev(typ_vozidla, "FABIA") Then kod_sazby = kod_sazby & " " & "FABIA"
                If InStrRev(typ_vozidla, "OCTAVIA") Then kod_sazby = kod_sazby & " " & "OCTAVIA"
                If InStrRev(typ_vozidla, "ROOMSTER") Then kod_sazby = kod_sazby & " " & "ROOMSTER"
                If InStrRev(typ_vozidla, "SUPERB") Then kod_sazby = kod_sazby & " " & "SUPERB"
                If InStrRev(typ_vozidla, "YETI") Then kod_sazby = kod_sazby & " " & "YETI"
                If InStrRev(typ_vozidla, "CITIGO") Then kod_sazby = kod_sazby & " " & "CITIGO"
                If InStrRev(typ_vozidla, "RAPID") Then kod_sazby = kod_sazby & " " & "RAPID"
                If InStrRev(typ_vozidla, "KODIAQ") Then kod_sazby = kod_sazby & " " & "KODIAQ"
                If InStrRev(typ_vozidla, "FELICIA") Then kod_sazby = kod_sazby & " " & "FELICIA"
                If InStrRev(typ_vozidla, "PICK UP") Then kod_sazby = kod_sazby & " " & "PICK UP"
                If InStrRev(typ_vozidla, "KAROQ") Then kod_sazby = kod_sazby & " " & "KAROQ"
                If InStrRev(typ_vozidla, "PRAKTIK") Then kod_sazby = kod_sazby & " " & "PRAKTIK"
              End Select
             Else
              'OSTATNI DRUHY VOZIDEL
             End If
  
             sazba = UrcitSazbu(kod_sazby)
            End If
  
            'nacteni/urceni nekterych potrebnych hodnot
            If (sazba = -1) Then
             rocpoj_zakladni = rocni_pojistne_zakladni_hodnota
  
             rok_vyroby_koeficient = 1
             rok_vyroby_koeficient_retezec = "1.00"
  
             pov_u_cpp_koeficient = 1
             pov_u_cpp_koeficient_retezec = "1.00"
  
             druh_zabezbeceni_koeficient = 1
             druh_zabezbeceni_koeficient_retezec = "1.00"
  
             nestandardni_rizika_koeficient = 1
             nestandardni_rizika_koeficient_retezec = "1.00"
            Else
             rocpoj_zakladni = Round(pojistna_castka * (sazba / 100) + 0.0005)
  
             Select Case rok_vyroby
              Case 2019
               rok_vyroby_koeficient = 0.95
               rok_vyroby_koeficient_retezec = "0.95"
              Case 2018
               rok_vyroby_koeficient = 1.05
               rok_vyroby_koeficient_retezec = "1.05"
              Case 2017
               rok_vyroby_koeficient = 1.13
               rok_vyroby_koeficient_retezec = "1.13"
              Case 2016
               rok_vyroby_koeficient = 1.21
               rok_vyroby_koeficient_retezec = "1.21"
              Case 2015
               rok_vyroby_koeficient = 1.34
               rok_vyroby_koeficient_retezec = "1.34"
              Case 2014
               rok_vyroby_koeficient = 1.42
               rok_vyroby_koeficient_retezec = "1.42"
              Case 2013
               rok_vyroby_koeficient = 1.5
               rok_vyroby_koeficient_retezec = "1.50"
              Case 2012
               rok_vyroby_koeficient = 1.58
               rok_vyroby_koeficient_retezec = "1.58"
              Case 2011
               rok_vyroby_koeficient = 1.66
               rok_vyroby_koeficient_retezec = "1.66"
              Case 2010
               rok_vyroby_koeficient = 1.78
               rok_vyroby_koeficient_retezec = "1.78"
              Case 2009
               rok_vyroby_koeficient = 1.92
               rok_vyroby_koeficient_retezec = "1.92"
              Case Else
               rok_vyroby_koeficient = 2.09
               rok_vyroby_koeficient_retezec = "2.09"
             End Select
  
             Select Case pov_u_cpp
              Case "A"
               pov_u_cpp_koeficient = 0.95
               pov_u_cpp_koeficient_retezec = "0.95"
              Case "N"
               pov_u_cpp_koeficient = 1
               pov_u_cpp_koeficient_retezec = "1.00"
             End Select
  
             If rozsah_pojisteni = "A" Or rozsah_pojisteni = "O" Then
              Select Case druh_zabezbeceni
               Case "B"
                druh_zabezbeceni_koeficient = 1
                druh_zabezbeceni_koeficient_retezec = "1.00"
               Case "M"
                druh_zabezbeceni_koeficient = 0.95
                druh_zabezbeceni_koeficient_retezec = "0.95"
               Case "A"
                druh_zabezbeceni_koeficient = 0.85
                druh_zabezbeceni_koeficient_retezec = "0.85"
               Case "MA", "AM"
                druh_zabezbeceni_koeficient = 0.8
                druh_zabezbeceni_koeficient_retezec = "0.80"
              End Select
             Else
              druh_zabezbeceni_koeficient = 1
              druh_zabezbeceni_koeficient_retezec = "1.00"
             End If
  
             Select Case nestandardni_rizika
              Case "B"
               nestandardni_rizika_koeficient = 1
               nestandardni_rizika_koeficient_retezec = "1.00"
              Case "T"
               nestandardni_rizika_koeficient = 1.5
               nestandardni_rizika_koeficient_retezec = "1.50"
              Case "A"
               nestandardni_rizika_koeficient = 2
               nestandardni_rizika_koeficient_retezec = "2.00"
              Case "ADR"
               nestandardni_rizika_koeficient = 2
               nestandardni_rizika_koeficient_retezec = "2.00"
             End Select
  
            End If

            'vypocty pojistneho
            If typ_flotily = "K" Or typ_flotily = "S" Then
             If sazba = -1 Then
              sazba = Round((rocni_pojistne_zakladni_hodnota / pojistna_castka * 100 * 100) + 0.00001) / 100 '<-- na dv|fffd| desetinn|fffd| m|fffd|sta
              vzaksa = rocni_pojistne_zakladni_hodnota
              priz = vzaksa
              mezis = priz
             Else
              vzaksa = Round(pojistna_castka * (sazba / 100) + 0.0005)
              priz = Round(vzaksa * rok_vyroby_koeficient * nestandardni_rizika_koeficient * druh_zabezbeceni_koeficient + 0.0005)
              mezis = Round(priz * pov_u_cpp_koeficient + 0.0005)
             End If
            Else
'asi neplatny kod, protoze typ flotily A je za podminkou K nebo S
             If typ_flotily = "A" Then
              If (hmotnost <= 3500) Then
               rocpoj_zakladni = 500
              Else
               rocpoj_zakladni = 1900
              End If
             Else
              If hmotnost <= 3500 Then
               rocpoj_zaladni = 1500
              Else
               rocpoj_zakladni = 6200
              End If
             End If
'asi neplatny kod, protoze typ flotily A je za podminkou K nebo S
            End If
  
            'crocpoj = priz u smluv del|fffd||fffd|ch ne|fffd| 1 rok
            'vypocet crocpoj = sou|fffd|et rocpoj
            'vypocet kmepoj = sou|fffd|et priz
            'vypocet lhpoj
            If typ_flotily = "K" Or typ_flotily = "S" Then
             kmepoj = celni_sklo + uraz + zavazadla + nahradni_vozidlo_hodnota + priz
             crocpoj = kmepoj
             lhpoj = lhutpoj_PS_SD
             prvspl = lhpoj
             sleva = Round(((kmepoj / frekvence_placeni - lhutpoj_PS_SD) * 100) + 0.0001) / 100 ' <-- na dv|fffd| desetinn|fffd| m|fffd|sta
            Else
'asi neplatny kod, protoze typ flotily A je za podminkou K nebo S
             sazba = ""
             priz = rocpoj_zakladni
             crocpoj = priz
             kmepoj = priz
             lhpoj = priz
             prvspl = lhpoj
             sleva = 0
'asi neplatny kod, protoze typ flotily A je za podminkou K nebo S
            End If
  
            Sheets("data-export").Select
  
            Cells((j - const_pocatek_y_data_export), const_ex_havarka_sazba) = CStr(sazba)
            Cells((j - const_pocatek_y_data_export), const_ex_havarka_vzaksa) = vzaksa
            Cells((j - const_pocatek_y_data_export), const_ex_havarka_rocpoj) = priz
            Cells((j - const_pocatek_y_data_export), const_ex_havarka_priz) = priz
            Cells((j - const_pocatek_y_data_export), const_ex_havarka_mezis) = mezis
            Cells((j - const_pocatek_y_data_export), const_ex_crocpoj) = crocpoj
            Cells((j - const_pocatek_y_data_export), const_ex_ex_kmepoj) = kmepoj
            Cells((j - const_pocatek_y_data_export), const_ex_ex_lhpoj) = lhpoj
            Cells((j - const_pocatek_y_data_export), const_ex_ex_prvspl) = "" 'prvspl
            Cells((j - const_pocatek_y_data_export), const_ex_ex_sleva) = sleva
  
            Cells((j - const_pocatek_y_data_export), const_ex_VSG1RV).NumberFormat = "@"
            Cells((j - const_pocatek_y_data_export), const_ex_VSGAPR).NumberFormat = "@"
            Cells((j - const_pocatek_y_data_export), const_ex_VSGXCC).NumberFormat = "@"
            Cells((j - const_pocatek_y_data_export), const_ex_VSGBZB).NumberFormat = "@"
            Cells((j - const_pocatek_y_data_export), const_ex_VSG4ZU).NumberFormat = "@"
  
            Cells((j - const_pocatek_y_data_export), const_ex_VSG1RV) = rok_vyroby_koeficient_retezec 'St|fffd||fffd||fffd| vozidla -koeficient -VSG1RV
            Cells((j - const_pocatek_y_data_export), const_ex_VSGAPR) = pov_u_cpp_koeficient_retezec 'Propoji|fffd|t|fffd|nost - koeficient - VSGAPR
            Cells((j - const_pocatek_y_data_export), const_ex_VSGXCC) = pov_u_cpp_koeficient_retezec 'Propoji|fffd|t|fffd|nost - koeficient - VSGXCC
            Cells((j - const_pocatek_y_data_export), const_ex_VSGBZB) = druh_zabezbeceni_koeficient_retezec 'Zabezpe|fffd|en|fffd| - koeficient - VSGBZB
            Cells((j - const_pocatek_y_data_export), const_ex_VSG4ZU) = nestandardni_rizika_koeficient_retezec 'Pou|fffd|it|fffd| vozidla -koeficient -VSG4ZU
  
           Next j
          End If
        '----------------
        Case "vypocet - region - koeficient - VSG2PS"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
            
          If typ_flotily = "K" Or typ_flotily = "S" Then
            Retezec = "1.00"

            Range(Cells(const_pocatek_y_data_export, i), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), i)).NumberFormat = "@"
          Else
            Retezec = ""
          End If

          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        Case "vypocet - stari pojistnika - koeficient - VSG3RC"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
            
          If typ_flotily = "K" Or typ_flotily = "S" Then
            Retezec = "1.00"

            Range(Cells(const_pocatek_y_data_export, i), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), i)).NumberFormat = "@"
          Else
            Retezec = ""
          End If

          Kontrola = VlozitStejnySloupec(Retezec, i, pocet_radku, aktualni_soubor)
        '----------------
        Case "vypocet - rozsah pojisteni"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select

            Retezec = Cells(j, const_rozsah_pojisteni_x)
            If Retezec = "AP" Or Retezec = "AT" Then Retezec = ""

            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        Case "vypocet - havarka -kod spolucasti -SPRIZ"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select

            Retezec = Replace(Cells(j, const_kod_spoluucasti_x), "S", "")

            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        Case "vypocet - zavazadla -kod spolucasti -SPRIZ"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select

            If (Cells(j, const_zavazadla_limit_plneni_x) > 0) Then
              Retezec = 5095
            Else
              Retezec = ""
            End If

            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        '----------------
        Case "vypocet - nahradni vozidlo -limit plneni -HRIZ"
          Windows(aktualni_soubor).Activate
          For j = const_pocatek_y_data To pocet_radku Step 1
            Sheets("data").Select
            If (Cells(j, const_pronajem_vozidla_rocni_pojistne_x) > 0) Then
              Retezec = 5000
              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            End If
          Next j
        '----------------
        Case "vypocet - acp -kod sazby -KOD_SAZ"
         Windows(aktualni_soubor).Activate
         If typ_flotily = "A" Or typ_flotily = "T" Then
          For j = const_pocatek_y_data To pocet_radku Step 1
           Sheets("data").Select

           Retezec = ""
           'k|fffd|d vozidla
           kod_vozidla = PrevodKodVozidla(Trim(Cells(j, const_druh_vozidla_x)))
           'objem
           objem_hodnota = Trim(Cells(j, const_objem_x))
           'vaha
           vaha_hodnota = Trim(Cells(j, const_hmotnost_x))
                
           Select Case kod_vozidla
            'osobni auto
            Case "O"
             Select Case objem_hodnota
              Case 0 To 1000: Retezec = "O01"
              Case 1001 To 1250: Retezec = "O02"
              Case 1251 To 1350: Retezec = "O52"
              Case 1351 To 1650: Retezec = "O03"
              Case 1651 To 1850: Retezec = "O53"
              Case 1851 To 2000: Retezec = "O04"
              Case 2001 To 2500: Retezec = "O54"
              Case 2501 To 10000: Retezec = "O05"
              Case Else: Kontrola = False
             End Select
            'obytny automobil
            Case "OB": Retezec = "Q06"
            'sanitni automobil
            Case "SAN": Retezec = "S07"
            'uzitkovy automobil
            Case "D"
             Select Case objem_hodnota
              Case 0 To 1000: Retezec = "D01"
              Case 1001 To 1250: Retezec = "D02"
              Case 1251 To 1350: Retezec = "D52"
              Case 1351 To 1650: Retezec = "D03"
              Case 1651 To 1850: Retezec = "D53"
              Case 1851 To 2000: Retezec = "D04"
              Case 2001 To 2500: Retezec = "D54"
              Case 2501 To 10000: Retezec = "D05"
              Case Else: Kontrola = False
             End Select
            'motocykl
            Case "M"
             Select Case objem_hodnota
              Case 1 To 50: Retezec = "M08"
              Case 51 To 350: Retezec = "M09"
              Case 351 To 500: Retezec = "M10"
              Case 501 To 5000: Retezec = "M11"
              Case Else: Kontrola = False
             End Select
            'nakladni automobil
            Case "N"
             Select Case vaha_hodnota
              Case 1 To 3500: Retezec = "N12"
              Case 3501 To 12000: Retezec = "N13"
              Case 12001 To 50000: Retezec = "N14"
              Case Else: Kontrola = False
             End Select
            'tahac
            Case "H": Retezec = "H15"
            'MHD - autobus
            Case "MHD": Retezec = "B16"
            'autobus
            Case "A"
             Select Case vaha_hodnota
              Case 1 To 5000: Retezec = "A17"
              Case 5001 To 40000: Retezec = "A18"
              Case Else: Kontrola = False
             End Select
            'trolejbus
            Case "J": Retezec = "J29"
            'pripojne vozidlo
            Case "P"
             Select Case vaha_hodnota
              Case 1 To 750: Retezec = "P19"
              Case 751 To 40000: Retezec = "R20"
              Case Else: Kontrola = False
             End Select
            'naves
            Case "PT": Retezec = "I21"
            'traktor s SPZ
            Case "TRZ": Retezec = "T22"
            'traktor bez SPZ
            Case "T": Retezec = "U23"
            'pojizdny pracovni stroj s RZ
            Case "XRZ"
             Select Case vaha_hodnota
              Case 1 To 3500: Retezec = "X24"
              Case 3501 To 12000: Retezec = "X25"
              Case 12001 To 50000: Retezec = "X26"
              Case Else: Kontrola = False
             End Select
            'pojizdny pracovni stroj bez RZ
            Case "X": Retezec = "Y27"
            'vysokozdvizny vozik
            Case "VOZ": Retezec = "W28"
            'chybny kod vozidla
            Case Else: Kontrola = False
           End Select
              
           'kod sazebniku
           Retezec = "A" & Retezec
              
           'specialni sazba
           Retezec = Retezec & " "
              
           'hmotnost
           Select Case vaha_hodnota
            Case 0 To 3500
             If typ_flotily = "A" Then
              Retezec = Retezec & "1"
             Else
              Retezec = Retezec & "3"
             End If
            Case Else
             If typ_flotily = "A" Then
              Retezec = Retezec & "2"
             Else
              Retezec = Retezec & "4"
             End If
           End Select

           Sheets("data-export").Select
           Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
         End If
        '----------------
        Case "vypocet - acp -rocni pojistne -ROCPOJ", "vypocet - acp -alikvotni pojistne -PRIZ"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily = "A" Or typ_flotily = "T" Then
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              
              Retezec = Cells(j, const_lhutpoj_PS_SD)

              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec

              vzaksa = CInt(Retezec)
              priz = vzaksa
              mezis = priz
                        
              priz = CInt(Retezec)
              crocpoj = priz
              kmepoj = priz
              lhpoj = priz
              prvspl = lhpoj
              sleva = 0
       
              Cells((j - const_pocatek_y_data_export), const_ex_crocpoj) = crocpoj
              Cells((j - const_pocatek_y_data_export), const_ex_ex_kmepoj) = kmepoj
              Cells((j - const_pocatek_y_data_export), const_ex_ex_lhpoj) = lhpoj
              Cells((j - const_pocatek_y_data_export), const_ex_ex_sleva) = sleva

            Next j
          End If
        '----------------
        Case "vypocet - acp -limit plneni -HRIZ"
        '1 = do 3,5t; 2 = nad 3,5 t
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          If typ_flotily = "A" Or typ_flotily = "T" Then
            For j = const_pocatek_y_data To pocet_radku Step 1
              Windows(aktualni_soubor).Activate
              Sheets("data").Select
              
              If (Cells(j, const_hmotnost_x) < 3501) Then
               If typ_flotily = "A" Then
                Retezec = 20000
               Else
                Retezec = 60000
               End If
              Else
               If typ_flotily = "A" Then
                Retezec = 30000
               Else
                Retezec = 90000
               End If
              End If

              Sheets("data-export").Select
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        Case "vypocet - vyse slevy na smlouve castka -vypocet -sleva castka"
          Windows(aktualni_soubor).Activate
          Sheets("data").Select
          
          Retezec = Cells(const_obchodni_sleva_y, const_obchodni_sleva_x)
          If (Retezec <> "0") And (Retezec <> "") Then
            Sheets("data-export").Select
            
            For j = const_pocatek_y_data To pocet_radku Step 1
              Cells((j - const_pocatek_y_data_export), i) = Retezec
            Next j
          End If
        '----------------
        '---hromadne
        '----------------
          
        
        Case "drzitel - prijmeni/nazev firmy", "vlastnik -prijmeni/nazev spolecnosti", "vozidlo - typ vozidla"
          For j = const_pocatek_y_data To pocet_radku Step 1
            Windows(aktualni_soubor).Activate
            Sheets("data").Select
            
            Select Case souradnice_umisteni(i) 'nazev polozky, ktera se zpracovava - znacka/typ
              Case "drzitel - prijmeni/nazev firmy": Sloupec = const_drzitel_prijmeni_nazev_spolecnosti_x
              Case "vlastnik -prijmeni/nazev spolecnosti": Sloupec = const_vlastnik_prijmeni_nazev_spolecnosti_x
              Case "vozidlo - typ vozidla": Sloupec = const_typ_vozidla_x
            End Select

            Retezec = Cells(j, Sloupec)
            Retezec = Replace(Retezec, "&", "&#38;")

            Sheets("data-export").Select
            Cells((j - const_pocatek_y_data_export), i) = Retezec
          Next j
        
        Case Else
      End Select
    Case Else
    '  MsgBox ("chyba vytvareni exportu - neznama akce, ktera se ma provest s daty - sloupec:" & i)
  End Select
Next i


''vlozeni dat ze zahlavi smlouvy
''ac
'Sheets("data").Select
'Cells(2, 3).Select
'Selection.Copy
'Sheets("data-export").Select
'Range(Cells(const_pocatek_y_data_export, 29), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), 29)).Select
'ActiveSheet.Paste
'
''ae
'Sheets("data").Select
'Cells(2, 5).Select
'Selection.Copy
'Sheets("data-export").Select
'Range(Cells(const_pocatek_y_data_export, 31), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), 31)).Select
'ActiveSheet.Paste
'
''al
'Sheets("data").Select
'Cells(2, 1).Select
'Selection.Copy
'Sheets("data-export").Select
'Range(Cells(const_pocatek_y_data_export, 38), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), 38)).Select
'ActiveSheet.Paste
'
''ap
'Sheets("data").Select
'Cells(2, 2).Select
'Selection.Copy
'Sheets("data-export").Select
'Range(Cells(const_pocatek_y_data_export, 42), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), 42)).Select
'ActiveSheet.Paste


'zavreni souboru importni kosilky
Windows(const_soubor_ik).Close

'zaverecna nastaveni ukazatele a format listu data-export
Sheets("data-export").Select
Cells.EntireColumn.AutoFit
Cells(1, 1).Select
Sheets("data").Select
Cells(1, 1).Select

Zamkni_sktyj_v|fffd|e

SlouceniDat = True

Application.ScreenUpdating = True
End Function
Attribute VB_Name = "M_Export_2_Body"
'Option Explicit
'v listu data-export vyplni dany sloupec stejnou hodnotou
Function VlozitStejnySloupec(Retezec, sour_x, pocet_radku, aktualni_soubor)
Windows(aktualni_soubor).Activate
Sheets("data-export").Select
Cells(const_pocatek_y_data_export, sour_x) = Retezec
Cells(const_pocatek_y_data_export, sour_x).Copy
Range(Cells(const_pocatek_y_data_export, sour_x), Cells(const_pocatek_y_data_export + (pocet_radku - const_pocatek_y_data), sour_x)).Select
ActiveSheet.Paste
End Function

'overeni, zda se shoduji udaje vyplnene v ds a ik
Function KontrolaKompatibilityDat() As String
text_chyby = ""
'nacteni dat z DS
aktualni_soubor = ThisWorkbook.Name
Windows(aktualni_soubor).Activate
Sheets("data").Select
cislo_hip_ds = Cells(const_cislo_hip_y, const_cislo_hip_x)
typ_flotily_ds = Cells(const_typ_flotily_y, const_typ_flotily_x)
sleva_ds = Cells(const_obchodni_sleva_y, const_obchodni_sleva_x)
frekvence_ds = Cells(const_frekvence_placeni_y, const_frekvence_placeni_x)
pojistnik_ic_ds = Cells(const_pojistnik_ic_y, const_pojistnik_ic_x)

'overeni existence souboru importni kosilky
'umisteni_importni_kosilky = ThisWorkbook.Path & "\" & const_soubor_ik
If (Dir(const_umisteni_importni_kosilky & const_soubor_ik) = "") Then
  text_chyby = "Nelze dokon|fffd|it import dat" & Chr(10) & Chr(10) & "-nebyla nalezena importni ko|fffd|ilka"
  'zamknuti pracovnich listu
  Zamkni_sktyj_v|fffd|e
  'zapnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
  KontrolaKompatibilityDat = text_chyby
  Exit Function
End If

'otevreni importni kosilky
aktualni_soubor = ThisWorkbook.Name
'umisteni_importni_kosilky = ThisWorkbook.Path & "\" & const_soubor_ik
'pro pripad, ze by jiz byla otevrena
On Error Resume Next
Workbooks.Open Filename:=const_umisteni_importni_kosilky & const_soubor_ik
On Error GoTo 0

'zjisteni cisla radku v importni kosilce, ktery se bude slucovat v exportu
'pred timto krokem se kontrole priradi false a pri nalezeni se prenastavi na true jinak vysledek heldani je false
Windows(const_soubor_ik).Activate
Kontrola = False
cislo_radku_ik = 1 'cislo radku v importni kosilce, ktery odpovida zpracovavanemu HIPu
Do Until (Cells(cislo_radku_ik, 1) = "")
  If Right("000000000" & Trim(Cells(cislo_radku_ik, 1).Value), 10) = cislo_hip_ds Then
    Kontrola = True
    Exit Do
  End If
  cislo_radku_ik = cislo_radku_ik + 1
Loop

If (Kontrola = False) Then
  text_chyby = "Nelze dokon|fffd|it import dat" & Chr(10) & Chr(10) & "-v importn|fffd| ko|fffd|ilce nebyl nalezen p|fffd||fffd|slu|fffd|n|fffd| HIP z|fffd|znam"
  'zamknuti pracovnich listu
  Windows(aktualni_soubor).Activate
  Zamkni_sktyj_v|fffd|e
  'zavreni souboru importni kosilky
  Windows(const_soubor_ik).Close
  KontrolaKompatibilityDat = text_chyby
  Exit Function
End If

'nacteni dat z IK
Sheets("data").Select
typ_flotily_ik = Cells(cislo_radku_ik, const_ik_typ_flotily)
sleva_ik = Cells(cislo_radku_ik, const_ik_obchodni_sleva)
frekvence_ik = Cells(cislo_radku_ik, const_ik_frekvence)
pojistnik_ic_ik = Cells(cislo_radku_ik, const_ik_pojistnik_rc_ico)

'porovnani dat DS a IK
If (typ_flotily_ds <> typ_flotily_ik) Then
  text_chyby = "-typ flotily"
End If
If (sleva_ds <> sleva_ik) Then
  If (text_chyby <> "") Then text_chyby = text_chyby & Chr(10)
  text_chyby = text_chyby & "-sleva/p|fffd|ir|fffd|ka na flotile"
End If
If (frekvence_ds <> frekvence_ik) Then
  If (text_chyby <> "") Then text_chyby = text_chyby & Chr(10)
  text_chyby = text_chyby & "-frekvence placen|fffd|"
End If
If CStr(pojistnik_ic_ds) <> CStr(pojistnik_ic_ik) Then
  If (text_chyby <> "") Then text_chyby = text_chyby & Chr(10)
  text_chyby = text_chyby & "-pojistn|fffd|k I|fffd|"
End If

If (text_chyby <> "") Then
  text_chyby = "Byl nalezen probl|fffd|my s:" & Chr(10) & Chr(10) & text_chyby
  Windows(const_soubor_ik).Close
Else
  text_chyby = "ok"
End If

KontrolaKompatibilityDat = text_chyby
End Function
Attribute VB_Name = "M_FunkceProcedury"
'Option Explicit
Public Const c_heslo As String = "a456"
Function Zamkni_sktyj_v|fffd|e()

 If const_skryti_listu Then
  OdemkniS
  Sheets("obchod-formatovani").Visible = False
  Sheets("obchod-kontroly").Visible = False
  Sheets("provoz-formatovani").Visible = False
  Sheets("provoz-kontroly").Visible = False
  Sheets("zaloha").Visible = False
  Sheets("znacky").Visible = False
  Sheets("napoveda").Visible = False
  Sheets("slouceni").Visible = False
  Sheets("sazebnik").Visible = False
  Sheets("data").Select
  If Not public_spravce_prihlasen Then Sheets("data-export").Visible = False
 End If
 ZamkniS

 Select Case ActiveSheet.Name
  Case "N|fffd|pov|fffd|da", "data", "data-export", "Zm|fffd|ny", "Odhl|fffd|ky"
  Case Else
   Sheets("N|fffd|pov|fffd|da").Select
 End Select

End Function
Function test()
Sheets("data").Activate
End Function
Function Skryti_GDPR()

Sheets("data").Activate
Columns("G:G").Select
    Selection.EntireColumn.Hidden = True
    Columns("K:N").Select
    Selection.EntireColumn.Hidden = True
    Columns("O:O").Select
    Selection.EntireColumn.Hidden = True
    Columns("S:V").Select
    Selection.EntireColumn.Hidden = True
    Range("B2").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
Selection.FormulaHidden = True
ActiveSheet.Protect Password:=c_heslo

Sheets("Zm|fffd|ny").Activate
Columns("G:G").Select
    Selection.EntireColumn.Hidden = True
    Columns("K:N").Select
    Selection.EntireColumn.Hidden = True
    Columns("O:O").Select
    Selection.EntireColumn.Hidden = True
    Columns("S:V").Select
    Selection.EntireColumn.Hidden = True

 Range("B4").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
ActiveSheet.Protect Password:=c_heslo



Sheets("Odhl|fffd|ky").Activate
Range("B4").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
ActiveSheet.Protect Password:=c_heslo
Sheets("data").Activate




End Function

Function Odemknuti_GDPR()

Sheets("data").Activate
ActiveSheet.Unprotect Password:=c_heslo
Cells.Select
Selection.EntireColumn.Hidden = False
Range("B2").Select
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Sheets("Zm|fffd|ny").Activate
ActiveSheet.Unprotect Password:=c_heslo
Cells.Select
Selection.EntireColumn.Hidden = False
Range("B4").Select
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
Sheets("Odhl|fffd|ky").Activate
ActiveSheet.Unprotect Password:=c_heslo
Cells.Select
Selection.EntireColumn.Hidden = False
Range("B4").Select
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
Sheets("data").Activate




End Function
Function Odemkni_zobraz_v|fffd|e()
 If const_skryti_listu Then
  OdemkniS
  Sheets("data-export").Visible = True
  Sheets("obchod-formatovani").Visible = True
  Sheets("obchod-kontroly").Visible = True
  Sheets("provoz-formatovani").Visible = True
  Sheets("provoz-kontroly").Visible = True
  Sheets("zaloha").Visible = True
  Sheets("znacky").Visible = True
  Sheets("napoveda").Visible = True
  Sheets("slouceni").Visible = True
  Sheets("sazebnik").Visible = True
  Sheets("data").Select
 End If
 Cells(1, 1).Select
End Function
Public Function OdemkniS()
 ActiveWorkbook.Unprotect "a456"
End Function
Public Function ZamkniS()
 ActiveWorkbook.Protect Password:=c_heslo, Structure:=True, Windows:=False
End Function

'###############
'uzito pri kontrole technickych udaju o vozidle - vykon, objem, hmotnost, pocet sedadel ...
'###############
Public Function JeVIntervalu(Retezec, spodni_hranice, horni_hranice) As Boolean
'hodnota se prevadi na long kvuli velikosti cisla
'pokud je delka hodnoty delsi nez 6 znaku nebo pokud je hodnota zadana v formatu 1.1E+32
'  vraceni chyby
'pokud neni delka hodnoty delsi nez 6 znaku a pokud neni hodnota zadana v formatu 1.1E+32
'pokud je hodnota v rozmezi pripustneho intervalu
'  vraci se true
'pokud hodnota neni v rozmezi pripustneho intervalu
'vraci se chyba
 Dim hodnota As Long
 If Len(Retezec) > 6 Or UCase(Retezec) <> LCase(Retezec) Then
  JeVIntervalu = False
 Else
  hodnota = CLng(Retezec)
  If spodni_hranice <= hodnota And hodnota <= horni_hranice Then
   JeVIntervalu = True
  Else
   JeVIntervalu = False
  End If
 End If
End Function

'###############
'uzito pri kontrole SPZ - prevzato z puvodniho sberace
'###############
Public Function isValidDiacriticChar(iKeyAscii, sChars) As Boolean
 Dim bResult As Boolean
 Dim sLCaseChars, sUCaseChars
 Dim li_idx, sTestChar
 
 For li_idx = 1 To Len(sChars)
  sTestChar = Mid(sChars, li_idx, 1)
  If AscW(sTestChar) = iKeyAscii Then GoTo foundChar
  If Asc(sTestChar) = iKeyAscii Then GoTo foundChar
 Next li_idx
 GoTo resultFce

foundChar:
 bResult = True

resultFce:
 isValidDiacriticChar = bResult
End Function

'###############
'zjistuje se, zda hodnota je cele cislo
'###############
Public Function CeleCislo(Retezec As String) As Boolean
 Dim Kontrola As Boolean
 Kontrola = True

 If IsNumeric(Retezec) Then
'cele cislo
  If Not CStr(Round(CDbl(Retezec))) = Retezec Then
   Kontrola = False
  End If
 Else
  Kontrola = False
 End If

 CeleCislo = Kontrola
End Function

'###############
'spo|fffd||fffd|t|fffd|, kolik m|fffd| |fffd||fffd|dk|fffd|, respektive, v jak|fffd|m posledn|fffd|m |fffd||fffd|dku je n|fffd|jak|fffd| nepr|fffd|zdn|fffd| bu|fffd|ka
'pokud je nejaka neprazdna bunka za hranici zpracovatelnosti, vrati se hranice zpracovatelnosti, coz zpusobi ignorovani zbytku
'###############
Function RozahListu() As Long
 Dim i As Integer, pocet_radku As Long, max_pocet_radku As Long
 max_pocet_radku = 0

 For i = const_pocatek_x_data To const_pocet_sloupcu Step 1
  If Cells(65535, i).Value <> "" Then
   max_pocet_radku = 65535
  Else
   pocet_radku = Cells(65535, i).End(xlUp).Row
   If pocet_radku > max_pocet_radku Then max_pocet_radku = pocet_radku
  End If
 Next i
 If const_hranice_listu <= max_pocet_radku Then
  RozahListu = const_hranice_listu
  preteceni_poctu_smluv = True
 Else
  RozahListu = max_pocet_radku
 End If
End Function

'###############
'vypisuje text chyby pri kontrole do bunky v prvnim sloupci
'###############
Sub ZapisChybyDoBunky(text_chyby As String, sour_s As Integer, sour_r As Long)
'vypsani textu chyby do bunky v prvnim sloupci - musi se zkontrolovat, jestli tam uz neco je, aby se to neprepsalo
'pozor na odradkovani prvniho radku
 If text_chyby <> "" Then
  If Cells(sour_r, const_pocatek_x_data - 1) <> "" Then
   Cells(sour_r, const_pocatek_x_data - 1) = Cells(sour_r, const_pocatek_x_data - 1) & Chr(10) & text_chyby
  Else
   Cells(sour_r, const_pocatek_x_data - 1) = text_chyby
  End If
 End If

'obarveni bunky s chybou
 Cells(sour_r, sour_s).Interior.ColorIndex = 3
'obarveni bunky s textem chyby
 Cells(sour_r, const_pocatek_x_data - 1).Interior.ColorIndex = 3
End Sub

'###############
'vytvari oramovani tabulky
'###############
'oramovani tabulky
'nakopirovani formatu zahlavi tabulky
'vlozeni sum
Public Function Oramovani(ByVal pocet_radku As Long)
'zruseni oramovani
 Range(Cells(const_pocatek_y_data, 1).Address, Cells(const_hranice_listu, const_pocet_sloupcu).Address).Borders.LineStyle = xlNone

'vytvoreni oramovani tabulky
'pokud je zaznamu mene nez dvacet, tak se oramuje prvnich 20 radku
 If pocet_radku < 20 Then pocet_radku = 20
 Range(Cells(const_pocatek_y_data, 1), Cells(pocet_radku, const_pocet_sloupcu)).Select

Selection.Borders(xlDiagonalDown).LineStyle = xlNone
Selection.Borders(xlDiagonalUp).LineStyle = xlNone
With Selection.Borders(xlEdgeLeft)
  .LineStyle = xlContinuous
  .ColorIndex = xlAutomatic
  .Weight = xlThin
End With
With Selection.Borders(xlEdgeTop)
  .LineStyle = xlContinuous
  .ColorIndex = xlAutomatic
  .Weight = xlThin
End With
With Selection.Borders(xlEdgeBottom)
  .LineStyle = xlContinuous
  .ColorIndex = xlAutomatic
  .Weight = xlThin
End With
With Selection.Borders(xlEdgeRight)
  .LineStyle = xlContinuous
  .ColorIndex = xlAutomatic
  .Weight = xlThin
End With
With Selection.Borders(xlInsideVertical)
  .LineStyle = xlContinuous
  .ColorIndex = xlAutomatic
  .Weight = xlThin
End With
With Selection.Borders(xlInsideHorizontal)
  .LineStyle = xlContinuous
  .ColorIndex = xlAutomatic
  .Weight = xlThin
End With

'nakopirovani formatu zahlavi tabulky
Sheets("zaloha").Select
Rows("1:5").Copy
Sheets("data").Select
Rows("1:5").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
Application.CutCopyMode = False
Range("A1").Select

'vlozeni vzorce

Cells(5, const_celni_sklo_rocni_pojistne_x).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_uraz_rocni_pojistne_x).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_zavazadla_rocni_pojistne_x).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_pronajem_vozidla_rocni_pojistne_x).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_rocpoj_zakladni).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_rocpoj_BS_BD).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_rocpoj_BS_SD).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_lhutpoj_BS_SD).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_rocpoj_PS_SD).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
Cells(5, const_lhutpoj_PS_SD).Select
ActiveCell.FormulaR1C1 = "=SUM(R[1]C:R[4996]C)"
End Function

Function ObarveniSloupcu(ByVal pocet_radku As Long)
'obarveni sloupcu, ktere se nevyplnuji - sediva barva
 Dim r1 As Range, r2 As Range, r3 As Range, r4 As Range, r5 As Range, r6 As Range, r7 As Range, myMultiAreaRange As Range
 If pocet_radku < 20 Then pocet_radku = 20
 Set r1 = Range(Cells(const_pocatek_y_data, const_popis_chyby_x), Cells(pocet_radku, const_popis_chyby_x))
 Set r2 = Range(Cells(const_pocatek_y_data, const_rocpoj_zakladni), Cells(pocet_radku, const_rocpoj_BS_BD))
 Set r3 = Range(Cells(const_pocatek_y_data, const_rocpoj_BS_BD), Cells(pocet_radku, const_rocpoj_BS_BD))
 Set r4 = Range(Cells(const_pocatek_y_data, const_rocpoj_BS_SD), Cells(pocet_radku, const_rocpoj_BS_SD))
 Set r5 = Range(Cells(const_pocatek_y_data, const_lhutpoj_BS_SD), Cells(pocet_radku, const_lhutpoj_BS_SD))
 Set r6 = Range(Cells(const_pocatek_y_data, const_rocpoj_PS_SD), Cells(pocet_radku, const_rocpoj_PS_SD))
 Set r7 = Range(Cells(const_pocatek_y_data, const_lhutpoj_PS_SD), Cells(pocet_radku, const_lhutpoj_PS_SD))
 With Union(r1, r2, r3, r4, r5, r6, r7).Interior
  .ColorIndex = 15
  .Pattern = xlSolid
 End With
End Function

'###############
'odstranuje prazdne radky
'###############
Function SmazPrazdneRadky()
Sheets("data").Select
pocet_radku = RozahListu()
For radek = const_pocatek_y_data To pocet_radku - 1 Step 1
  For Sloupec = const_pocatek_x_data To const_pocet_sloupcu Step 1
    If (Cells(radek, Sloupec) <> "") Then
      Exit For
    End If
  Next Sloupec
  If (Sloupec = const_pocet_sloupcu + 1) Then
    souradnice = radek & ":" & radek
    Rows(souradnice).Select
    Selection.Delete Shift:=xlUp
    If (radek <> pocet_radku) Then
      radek = radek - 1
      pocet_radku = pocet_radku - 1
    End If
  End If
  If (radek > pocet_radku) Then Exit Function
Next radek
End Function

Function PocetDnuNaOdeslani() As Integer
Sheets("data").Select
pocet_radku = RozahListu()

Kontrola = True

Dim nejstarsi_datum_sjednani, datum As Date
nejstarsi_datum_sjednani = Date

For i = const_pocatek_y_data To pocet_radku
  If (Cells(i, const_datum_sjednani_x).Interior.ColorIndex <> 3) Then
    datum = Cells(i, const_datum_sjednani_x)
    If (datum < nejstarsi_datum_sjednani) Then nejstarsi_datum_sjednani = datum
  Else
    Kontrola = False
    Exit For
  End If
Next i

If (Kontrola) Then
  pocet_dnu = 30 - (DateDiff("d", nejstarsi_datum_sjednani, Date)) - 1
Else
  pocet_dnu = 30 - (DateDiff("d", nejstarsi_datum_sjednani, Date)) - 1
End If

PocetDnuNaOdeslani = pocet_dnu
End Function

Function VlastnostPisma()
Range(Cells(const_pocatek_y_data, const_pocatek_x_data), Cells(const_hranice_listu, const_pocet_sloupcu)).Select

With Selection.Font
  .Name = "Arial"
  .FontStyle = "Oby|fffd|ejn|fffd|"
  .Size = 10
  .Strikethrough = False
  .Superscript = False
  .Subscript = False
  .OutlineFont = False
  .Shadow = False
  .Underline = xlUnderlineStyleNone
  .ColorIndex = xlAutomatic
End With
End Function


Public Function ObarveniSloupce(Sloupec As Integer)
pocet_radku = RozahListu

If (pocet_radku < 20) Then
  Range(Cells(const_pocatek_y_data, Sloupec), Cells(20, Sloupec)).Select
Else
  Range(Cells(const_pocatek_y_data, Sloupec), Cells(pocet_radku, Sloupec)).Select
End If

With Selection.Interior
  .ColorIndex = 15
  .Pattern = xlSolid
End With
End Function

'###############
'Prevadi retezec na spravny tvar druhu vozidla
'###############
Function PrevodKodVozidla(Retezec) As String
Dim retezec_zaloha As String  'pokud by vysledkem transformace nebyla regulerni hodnota, vrati se hodnota, ktera do funkce vstoupila
retezec_zaloha = Retezec
Retezec = UCase(Trim(Retezec))

Select Case Retezec
  Case "": kod_vozidla = retezec_zaloha
  Case "OSOBN|fffd| AUTOMOBIL": kod_vozidla = "O"
  Case "SANITN|fffd| AUTOMOBIL": kod_vozidla = "SAN"
  Case "OBYTN|fffd| AUTOMOBIL": kod_vozidla = "OB"
  Case "U|fffd|ITKOV|fffd| AUTOMOBIL": kod_vozidla = "D"
  Case "MOTOCYKL": kod_vozidla = "M"
  Case "N|fffd|KLADN|fffd| AUTOMOBIL": kod_vozidla = "N"
  Case "TAHA|fffd| N|fffd|V|fffd|S|fffd|": kod_vozidla = "H"
  Case "AUTOBUS": kod_vozidla = "A"
  Case "TROLEJBUS": kod_vozidla = "J"
  Case "P|fffd||fffd|V|fffd|S": kod_vozidla = "P"
  Case "N|fffd|V|fffd|S": kod_vozidla = "PT"
  Case "TRAKTOR": kod_vozidla = "T"
  Case "PRACOVN|fffd| STROJ": kod_vozidla = "X"
  Case "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K": kod_vozidla = "VOZ"
  Case Else: kod_vozidla = ""
End Select

If (kod_vozidla = "") Then
  PrevodKodVozidla = retezec_zaloha
Else
  PrevodKodVozidla = kod_vozidla
End If
End Function

'ze sazebniku vytahuje hodnotu spoluucasti
'pokud neni prislusna sazba nalezena, vrati se hodnota -1
Function UrcitSazbu(kod_sazby) As Single
Sheets("sazebnik").Select
sazba = -1
i = 1
Do While (Cells(i, 1) <> "")
  If (Cells(i, 1) = kod_sazby) Then
    sazba = Cells(i, 2)
    Exit Do
  End If
  i = i + 1
Loop
Sheets("data").Select

UrcitSazbu = sazba
End Function

Function ZvyraznitPrilozeniPotvrzeni()
Odemknuti_GDPR
With Selection.Interior
  .ColorIndex = 0
  .Pattern = xlLightUp
  .PatternColorIndex = 15
End With
Skryti_GDPR
End Function

Public Function WebSoubor(udaj) As String
'importuje se do ostre
If (const_export_ostra = True) Then
  umisteni_web_sobor = "U:\Datovy_sberac\pomocne\temp\usa8601.lex"
  
  If (Dir(umisteni_web_sobor) = "") Then
    WebSoubor = "chyba"
    Exit Function
  End If
  
  Set fs = CreateObject("Scripting.FileSystemObject")
  Set f = fs.OpenTextFile(umisteni_web_sobor, 1, TristateFalse)
  Retezec = f.ReadLine
  f.Close
  
  oddelovac = InStr(1, Retezec, "#")
  
  If (oddelovac <> 0) Then
    Select Case udaj
      Case "1"
        WebSoubor = Mid(Retezec, 1, oddelovac - 1)
      Case "2"
        WebSoubor = Mid(Retezec, oddelovac + 1, Len(Retezec))
      Case Else
        WebSoubor = "chyba"
        Exit Function
    End Select
  Else
    WebSoubor = "chyba"
  End If

'importuje se do testu
Else
  If (udaj = 2) Then MsgBox ("Testovac|fffd| SUS 1/Golem")
  Select Case udaj
    Case "1"
     WebSoubor = "https://sus-test.cpp.cz/cpp/servlet/axisrouter"
'     WebSoubor = "https://sus-test.cpp.cz/cpp2/servlet/axisrouter"
    Case "2"
     WebSoubor = "Kl3FlotilyImp2007_1"
  End Select
End If
End Function
Sub Uprav_storna()
 Dim PRadek As Long, Sloupec As Integer, ARadek As Long, MRadek As Long
 With ThisWorkbook.Worksheets("Odhl|fffd|ky")
  Application.ScreenUpdating = False
  Application.EnableEvents = False
  .Unprotect c_heslo
  PRadek = .Cells.SpecialCells(xlLastCell).Row
  If PRadek = .Cells.Rows.Count And Application.WorksheetFunction.CountA(Rows(PRadek)) > 0 Then
   MRadek = PRadek
  Else
   If PRadek < .Cells.Rows.Count Then PRadek = PRadek + 1
   For Sloupec = 1 To 6
    ARadek = .Cells(PRadek, Sloupec).End(xlUp).Row
    If ARadek > MRadek Then MRadek = ARadek
   Next Sloupec
  End If
  If 7 > MRadek Then MRadek = 7
  MRadek = MRadek + 1
  On Error Resume Next
  .Range(.Cells(8, 8).Address & ":" & .Cells(MRadek, 8).Address).FormulaR1C1 = _
        "=IF(OR(RC[-4]="""",RC[-3]=""""),"""",IF(AND(MATCH(RC[-2],duvody,0)=7,RC[-3]-8<>RC[-4]),""Chybn|fffd| datum z|fffd|niku"",RC[-3]))"
  .Range(.Cells(8, 9).Address & ":" & .Cells(MRadek, 9).Address).FormulaR1C1 = _
        "=IF(OR(RC[-5]="""",RC[-4]=""""),"""",IF(MATCH(RC[-3],duvody,0)>2,RC[-3],IF(AND(RC[-5]>=RC[-4],RC[-5]>=RC[-4]+15),RC[-3],""dohodou"")))"
  With .Range(.Cells(8, 4).Address & ":" & .Cells(MRadek, 4).Address).Validation
   .Delete
   .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="1/1/2000", Formula2:="=TODAY()"
   .IgnoreBlank = True
   .InCellDropdown = True
   .ErrorTitle = "Datum doru|fffd|en|fffd|/nahl|fffd|en|fffd|"
   .ErrorMessage = "Datum neni v rozmez|fffd| 1.1.2000 - " & Date
   .ShowError = True
  End With
  With .Range(.Cells(8, 5).Address & ":" & .Cells(MRadek, 5).Address).Validation
   .Delete
   .Add Type:=xlValidateDate, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="1/1/2000", Formula2:="=TODAY()+90"
   .IgnoreBlank = True
   .InCellDropdown = True
   .ErrorTitle = "Datum z|fffd|niku"
   .ErrorMessage = "Datum neni v rozmez|fffd| 1.1.2000 - " & Date + 90
   .ShowError = True
  End With
  With .Range(.Cells(8, 6).Address & ":" & .Cells(MRadek, 6).Address).Validation
   .Delete
   .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:="=duvody"
   .IgnoreBlank = False
   .InCellDropdown = True
  End With
  With .Range("A8:F" & MRadek & ",H8:I" & MRadek).Borders
   .LineStyle = xlContinuous
   .Weight = xlThin
  End With
  For Sloupec = 7 To 10
   With .Range("A8:A" & MRadek & ",B8:C" & MRadek & ",D8:F" & MRadek & ",H8:I" & MRadek).Borders(Sloupec)
    .LineStyle = xlContinuous
    .Weight = xlMedium
   End With
  Next Sloupec
  On Error GoTo 0
  If PRadek > MRadek + 1 Then .Rows(MRadek + 1 & ":" & PRadek).Delete
  .Protect Password:=c_heslo, DrawingObjects:=True, Contents:=True, Scenarios:=True, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
  Application.EnableEvents = True
  Application.ScreenUpdating = True
 End With
End Sub
Attribute VB_Name = "M_Konstanty"
Option Explicit
'##parametry DS
'zda se ma v kontrolach vypisovat chyba
Public public_kontrola_dva_ze_tri_dobry As Boolean

'heslo pro prihlaseni v formulari prihlaseni spravce
Public Const const_heslo_spravce As String = "hesloprovoz"
Public Const const_heslo_pecovatel As String = "hesloobchod"

'vypisuje se v formulari napovedy v menu
'cislo verze DS
Public Const const_verze_ds_x As Integer = 5
Public Const const_verze_ds_y As Integer = 1
'datum vydani verze DS
Public Const const_datum_vydani_ds_x As Integer = 5
Public Const const_datum_vydani_ds_y As Integer = 2

'data, mezi kterymi musi byt datum sjednani
Public Const const_datum_sjednani_od_x As Integer = 5
Public Const const_datum_sjednani_od_y As Integer = 3
Public Const const_datum_sjednani_do_x As Integer = 5
Public Const const_datum_sjednani_do_y As Integer = 4
Public const_datum_sjednani_od As Date
Public const_datum_sjednani_do As Date

'data, mezi kterymi musi byt datum pocatku
Public Const const_datum_pocatku_od_x As Integer = 5
Public Const const_datum_pocatku_od_y As Integer = 5
Public Const const_datum_pocatku_do_x As Integer = 5
Public Const const_datum_pocatku_do_y As Integer = 6
Public const_datum_pocatku_od As Date
Public const_datum_pocatku_do As Date

'zda se maji zobrazovat sloupce a funkce spravce
Public public_spravce_prihlasen As Boolean
Public public_pecovatel_prihlasen As Boolean

'zda se vyvolava tisk ZK - nekontroluje se zpetne datum
Public public_nizka_kontrola_dat As Boolean

'zda je v DS vyplneno vice smluuv, nez je jeho kapacita
Public preteceni_poctu_smluv As Boolean

'pocet tovarnich znacek v listu "znacky"
Public Const const_pocet_tovarnich_znacek As Integer = 1111

'########################
'##parametry listu data
'########################
'celni sklo limit plneni - true znamena, ze zadany limit je v rozmezi 50.000 az 100.000 a po uspesne kontrole se ma zobrazot varovna hlaska
Public public_celni_sklo_limit_plneni_prilozit_povoleni As Boolean
Public public_zavazadla_limit_plneni_prilozit_povoleni As Boolean
Public public_pojistna_castka_vozidla_prilozit_povoleni As Boolean
Public public_uraz_31_prilozit_povoleni As Boolean
Public public_uraz_61_prilozit_povoleni As Boolean
Public public_znacka_vozidla_povoleni As Boolean

'pocatecni souradnice v listu data - misto odkud se zacinaji vyplnovat smlouvy
Public Const const_pocatek_x_data As Integer = 2
Public Const const_pocatek_y_data As Integer = 6

'posledni radek, ktery se ma zpracovat
Public Const const_hranice_listu As Integer = 1005
'pocet sloupcu v souboru
Public Const const_pocet_sloupcu As Integer = 58

'radek ve kterem jsou vzorce na soucet pojistneho
Public Const const_radek_souctu = 5

'########################
'##souradnice bunek v listu data
'########################
'##zahlavi tabulky
'pojistnik nazev
Public Const const_pojistnik_nazev_x As Integer = 1
Public Const const_pojistnik_nazev_y As Integer = 2
'celkem vozidel
Public Const const_celkem_vozidel_x As Integer = 2
Public Const const_celkem_vozidel_y As Integer = 5
'pojistnik ic
Public Const const_pojistnik_ic_x As Integer = 2
Public Const const_pojistnik_ic_y As Integer = 2
'cislo HIP
Public Const const_cislo_hip_x As Integer = 3
Public Const const_cislo_hip_y As Integer = 2
'typ_flotily - puvodne bylo zamysleno prime vyplnovani kodu produktu
Public Const const_typ_flotily_x As Integer = 4
Public Const const_typ_flotily_y As Integer = 2
'kod produktu - pro vnitrni potrebu DS - puvodne v DS se mely zadavat kody produktu, ale pak se rozhodlo, ze se budou zadavat typyflotil..
Public public_kod_produktu As String
'sleva
Public Const const_obchodni_sleva_x As Integer = 5
Public Const const_obchodni_sleva_y As Integer = 2
'frekvence placeni
Public Const const_frekvence_placeni_x As Integer = 6
Public Const const_frekvence_placeni_y As Integer = 2

'##smlouva
Public Const const_popis_chyby_x As Integer = 1
Public Const const_cislo_pojistne_smlouvy_x As Integer = 2
Public Const const_datum_sjednani_x As Integer = 4
Public Const const_pocatek_pojisteni_x As Integer = 5
Public Const const_konec_pojisteni_x As Integer = 6

'##drzitel
Public Const const_drzitel_rc_ico_x As Integer = 7
Public Const const_drzitel_jmeno_x As Integer = 9
Public Const const_drzitel_prijmeni_nazev_spolecnosti_x As Integer = 10
Public Const const_drzitel_ulice_x As Integer = 11
Public Const const_drzitel_cislo_domu_x As Integer = 12
Public Const const_drzitel_psc_x As Integer = 13
Public Const const_drzitel_obec_x As Integer = 14

'##vlastnik
'rc/ico
Public Const const_vlastnik_rc_ico_x As Integer = 15
Public Const const_vlastnik_jmeno_x As Integer = 17
Public Const const_vlastnik_prijmeni_nazev_spolecnosti_x As Integer = 18

'##predmet pojisteni
Public Const const_registracni_znacka_x As Integer = 23
Public Const const_cislo_velkeho_tp_x As Integer = 24
Public Const const_vin_x As Integer = 25
Public Const const_druh_vozidla_x As Integer = 26
Public Const const_znacka_vozidla_x As Integer = 27
Public Const const_typ_vozidla_x As Integer = 28
Public Const const_rok_vyroby_x As Integer = 29
Public Const const_objem_x As Integer = 31
Public Const const_hmotnost_x As Integer = 32
Public Const const_pocet_mist_x As Integer = 33
Public Const const_vinkulace_x As Integer = 36
Public Const const_zvlastni_vybava_x As Integer = 37

'##hav
Public Const const_rozsah_pojisteni_x As Integer = 38
Public Const const_pojistna_castka_nova_obecna_x As Integer = 39
Public Const const_pojistna_castka_x As Integer = 40
Public Const const_vychozi_cena_vc_dph_x As Integer = 41
Public Const const_pov_u_cpp_x As Integer = 42
Public Const const_nestandardni_rizika_x As Integer = 43
Public Const const_druh_zabezpeceni_x As Integer = 44
Public Const const_kod_spoluucasti_x As Integer = 45

'##doplnkova rizika
Public Const const_celni_sklo_limit_plneni_x As Integer = 46
Public Const const_celni_sklo_rocni_pojistne_x As Integer = 47
Public Const const_uraz_limit_plneni_x As Integer = 48
Public Const const_uraz_rocni_pojistne_x As Integer = 49
Public Const const_zavazadla_limit_plneni_x As Integer = 50
Public Const const_zavazadla_rocni_pojistne_x As Integer = 51
Public Const const_pronajem_vozidla_rocni_pojistne_x As Integer = 52

'##vypocet pojistneho
Public Const const_rocpoj_zakladni As Integer = 53
Public Const const_rocpoj_BS_BD As Integer = 54
Public Const const_rocpoj_BS_SD As Integer = 55
Public Const const_lhutpoj_BS_SD As Integer = 56
Public Const const_rocpoj_PS_SD As Integer = 57
Public Const const_lhutpoj_PS_SD As Integer = 58

'########################
'##parametru exportu do sus
'########################
'pocatecni souradnice v listu data-export - odkud se zacinaji vyskytovat data
Public Const const_pocatek_x_data_export As Integer = 1
Public Const const_pocatek_y_data_export As Integer = 3

Public Const const_ex_VSG1RV As Integer = 88 'St|fffd||fffd||fffd| vozidla -koeficient -VSG1RV
Public Const const_ex_VSGAPR As Integer = 89 'Propoji|fffd|t|fffd|nost - koeficient - VSGAPR
Public Const const_ex_VSGXCC As Integer = 90 'Propoji|fffd|t|fffd|nost - koeficient - VSGXCC
Public Const const_ex_VSGBZB As Integer = 91 'Zabezpe|fffd|en|fffd| - koeficient - VSGBZB
Public Const const_ex_VSG4ZU As Integer = 92 'Pou|fffd|it|fffd| vozidla -koeficient -VSG4ZU
Public Const const_ex_havarka_rozsah_pojisteni As Integer = 96
Public Const const_ex_havarka_sazba As Integer = 97
Public Const const_ex_havarka_vzaksa As Integer = 98
Public Const const_ex_havarka_rocpoj As Integer = 99
Public Const const_ex_havarka_priz As Integer = 100
Public Const const_ex_havarka_mezis As Integer = 101
Public Const const_ex_crocpoj As Integer = 122
Public Const const_ex_ex_kmepoj As Integer = 123
Public Const const_ex_ex_lhpoj As Integer = 124
Public Const const_ex_ex_prvspl As Integer = 125
Public Const const_ex_ex_sleva As Integer = 126

'cesta k importni kosilce
Public const_export_ostra As Boolean
Public Const const_soubor_ik = "HAV_importni_kosilka.xls"
Public const_umisteni_importni_kosilky As String

'##souradnice v importni kosilce
Public Const const_ik_cislo_hip As Integer = 1
Public Const const_ik_archivni_cislo As Integer = 2
Public Const const_ik_typ_flotily As Integer = 8
Public Const const_ik_vyroci_hip As Integer = 15
Public Const const_ik_frekvence As Integer = 17
Public Const const_ik_pomerne_pojistne As Integer = 18
Public Const const_ik_pojistnik_rc_ico As Integer = 23
Public Const const_ik_prijmeni_obchodni_jmeno As Integer = 26
Public Const const_ik_provize_typare As Integer = 39
Public Const const_ik_obchodni_sleva As Integer = 40

Public Const const_pocet_slucovanych_dat As Integer = 127 'pocet zaznamu v listu slouceni (vcetne zahlavi)

Public clientNum As String    'sjednatelske cislo uzivatele
Public clientLogin As String  'prihlasovaci jmeno uzivatele
Public clientPsw As String    'heslo do CS uzivatele
Public clientAutorized As Boolean 'je uzivatel jiz autorizovan

'########################
'##sestava
'########################
Public Const const_sestava_pocet_tistenych_sloupcu = 19

'########################
'##testovani
'########################
Public Const const_skryti_listu As Boolean = True      'zda se skryvaji listy
Public Const const_exportovat_do_sus As Boolean = True 'zda se ma exportovat do SUS

Public Stav As Double, Proc As Double, Proces As Byte
Attribute VB_Name = "M_Kontroly_1_Head"
'Option Explicit
Function Kontroly(usek) As Boolean
Application.ScreenUpdating = False

Sheets("data").Select
Cells(1, 1).Select

'odemknuti vsech listu
Odemkni_zobraz_v|fffd|e
Odemknuti_GDPR
'odstraneni prazdnych radku
SmazPrazdneRadky

preteceni_poctu_smluv = False
Dim pocet_radku As Integer  'cislo posledniho radku ve kterem byl nalezena hodnota
pocet_radku = RozahListu

'kontrola na pocet smluv ke zpracovani
If preteceni_poctu_smluv Then
  Application.ScreenUpdating = False
  'zamknuti pracovnich listu
  Zamkni_sktyj_v|fffd|e
  MsgBox ("Chyst|fffd|te se zpracovat v|fffd|t|fffd||fffd| po|fffd|et smluv, ne|fffd| DS podporuje." & Chr(10) & "Maxim|fffd|ln|fffd| je mo|fffd|n|fffd| zpracovat " & const_hranice_listu - const_pocatek_y_data + 1 & " smluv." & Chr(10) & Chr(10) & "Kontrola nebude dokon|fffd|ena.")
  Kontroly = False
  Exit Function
End If

'spocitani a zapsani poctu smluv
pocet_smluv = pocet_radku - const_pocatek_y_data + 1
Cells(const_celkem_vozidel_y, const_celkem_vozidel_x) = pocet_smluv
If (pocet_smluv = 0) Then
  Application.ScreenUpdating = False
  'oramovani tabulky - mimo zahlavi
  Oramovani (pocet_radku)

  Application.ScreenUpdating = False
  'zamknuti pracovnich listu
  Zamkni_sktyj_v|fffd|e
  MsgBox ("Nebyla vypln|fffd|na |fffd||fffd|dn|fffd| smlouva.")
  Kontroly = False
  Exit Function
End If

Sheets("sazebnik").Select

'data, mezi kterymi musi byt datum sjednani
const_datum_sjednani_od = Cells(const_datum_sjednani_od_y, const_datum_sjednani_od_x)
const_datum_sjednani_do = Cells(const_datum_sjednani_do_y, const_datum_sjednani_do_x)

'data, mezi kterymi musi byt datum sjednani
const_datum_pocatku_od = Cells(const_datum_pocatku_od_y, const_datum_pocatku_od_x)
const_datum_pocatku_do = Cells(const_datum_pocatku_do_y, const_datum_pocatku_do_x)

Sheets("data").Select

'smazani logu chyb v prvnim sloupci
Range(Cells(const_pocatek_y_data, const_pocatek_x_data - 1), Cells(const_hranice_listu, const_pocatek_x_data - 1)).ClearContents

'zruseni cerveneho podbarveni bunek v listu
Cells.Interior.Pattern = xlNone

'Nastaveni hlasky progress baru
sText = "kontrola dat - OBCHOD" & Chr(10)
Aktualizovat_proces (sText)

Dim i As Integer  'pomocna pro for cyklus - sloupce
Dim j As Long  'pomocna pro for cyklus - radky

Dim bunka As String 'jedna bunka, jejiz obsah se zpracovava v cyklu
Dim prava As Variant
Dim kontrola_listu  'pokud se najde alespon jedna bunka, ktera je spatne ma to hodnotu false

'pri kontrolach pokud se ma zobrazit varovani sjednateli, tak se nastavi na true
public_celni_sklo_limit_plneni_prilozit_povoleni = False
public_zavazadla_limit_plneni_prilozit_povoleni = False
public_pojistna_castka_vozidla_prilozit_povoleni = False
public_uraz_31_prilozit_povoleni = False
public_uraz_61_prilozit_povoleni = False
public_znacka_vozidla_povoleni = False

ObarveniSloupcu (pocet_radku)

'oramovani tabulky - mimo zahlavi
Oramovani (pocet_radku)

'smazani vyplnenych koeficientu
Range("BH6", "BL1006").ClearContents

'kontrola na vyplneni cisla HIP
'konrola na vyplneni typu flotily
'je az po oramovani aby oramovani neobarvilo chybovou bunku
'je to v podmince, protoze kontroly vraci hodnoty true/false a pak by se spatne zobrazovala finalni hlaska uzivateli
kontrola_listu = True
Call KontrolaPojistnik
Select Case Len(Cells(const_pojistnik_ic_x, const_pojistnik_ic_y))
  Case 9, 10
'    KontrolaRcIco = KontrolaRc(retezec As String, sour_x As Integer, sour_y As Long, typ)
    If (KontrolaRc(Cells(const_pojistnik_ic_x, const_pojistnik_ic_y), 1, 1, "pojistnik") = False) Then kontrola_listu = False
  Case Else
'    KontrolaRcIco = KontrolaIco(retezec As String, sour_x As Integer, sour_y As Long, typ)
    If (KontrolaIco(Cells(const_pojistnik_ic_x, const_pojistnik_ic_y), 1, 1, "pojistnik") = False) Then kontrola_listu = False
End Select
If Not KontrolaHip Then kontrola_listu = False
If KontrolaTypFlotily Then
 If Not KontrolaObchodniSleva Then kontrola_listu = False
 If Not KontrolaFrekvencePlaceni Then kontrola_listu = False
Else
 kontrola_listu = False
End If

'zpracovava se po jednotlivych sloupcich
j = const_pocatek_y_data ' kvuli prednacteni prav pro prislusny sloupec
Proc = 1 / (const_pocet_sloupcu - 1)
For i = const_pocatek_x_data To const_pocet_sloupcu Step 1  'zpracovani sloupcu
  Sheets(usek).Select
  prava = Array(Cells(1, i).Value, Cells(2, i).Value, Cells(3, i).Value, Cells(4, i).Value, Cells(5, i).Value, Cells(6, i).Value, Cells(7, i).Value, Cells(8, i).Value, Cells(9, i).Value, Cells(10, i).Value, Cells(11, i).Value, Cells(12, i).Value, Cells(13, i).Value, Cells(14, i).Value, Cells(15, i).Value, Cells(16, i).Value, Cells(17, i).Value, Cells(18, i).Value, Cells(19, i).Value, Cells(20, i).Value, Cells(21, i).Value, Cells(22, i).Value, Cells(23, i).Value, Cells(24, i).Value, Cells(25, i).Value, Cells(26, i).Value, Cells(27, i).Value, Cells(28, i).Value, Cells(29, i).Value, Cells(30, i).Value, Cells(31, i).Value, Cells(32, i).Value, Cells(33, i).Value, Cells(34, i).Value, Cells(35, i).Value, Cells(36, i).Value, Cells(37, i).Value, Cells(38, i).Value, Cells(39, i).Value, Cells(40, i).Value)
  Sheets("data").Select
  'aktualizace progress baru
  Call Aktualizovat_postup

  For j = const_pocatek_y_data To pocet_radku Step 1  'zpracovani radku
    bunka = Cells(j, i).Value

    'cislo smlouvy
    If (prava(4) = "x") Then kontrola_listu = KontrolaCisloSmlouva(bunka, i, j)

    'kontrola vyplneni
    If (prava(5) <> "") Then kontrola_listu = KontrolaVyplneni(bunka, i, j, prava(5))

    'kontrola vyplneni volby
    If (prava(6) <> "") Then Call KontrolaVyplneniVolba(bunka, i, j, prava(6))

    'kontrola psc
    If (prava(7) <> "") Then kontrola_listu = KontrolaPsc(bunka, i, j, prava(7))

    'kontrola tovarni znacky
    If (prava(8) = "x") Then kontrola_listu = KontrolaTovarniZnacka(bunka, i, j)

    'kontrola rok vyroby
    If (prava(9) = "x") Then kontrola_listu = KontrolaRokVyroby(bunka, i, j)

    'kontrola osoba/podnik
    If (prava(10) <> "") Then kontrola_listu = KontrolaCisel(bunka, i, j, prava(10))

    'kontrola vin
    If (prava(11) = "x") Then
      public_kontrola_dva_ze_tri_dobry = KontrolaVinSpzTp(i, j, False)
      kontrola_listu = KontrolaVin(bunka, i, j)
    End If

    'kontrola tp
    If (prava(12) = "x") Then
      public_kontrola_dva_ze_tri_dobry = KontrolaVinSpzTp(i, j, False)
      kontrola_listu = KontrolaTp(bunka, i, j)
    End If

    'kontrola spz
    If (prava(13) = "x") Then
      public_kontrola_dva_ze_tri_dobry = KontrolaVinSpzTp(i, j, True)
      kontrola_listu = KontrolaSpz(bunka, i, j)
    End If

    'kontrola data sjednani
    If (prava(14) <> "") Then kontrola_listu = KontrolaDatumSjednani(i, j)

    'kontrola RC/ICO
    If (prava(16) <> "") Then Call KontrolaRcIco(bunka, i, j, prava(16))

    'kontrola cislo leasingove smlouvy
    If (prava(17) = "x") Then Call KontrolaCisloLeasingoveSmlouvy(bunka, i, j)

    'kontrola data pocatku pojisteni
    If (prava(18) = "x") Then kontrola_listu = KontrolaDatumPocatkuPojisteni(i, j)

    'kontrola kr|fffd|tkodob|fffd| smlouvy a sezonniho pojisteni
    If (prava(19) = "x") Then kontrola_listu = KontrolaKonecPojisteni(i, j)

    'kontrola jmena drzitel/vlastnik
    If (prava(21) <> "") Then kontrola_listu = KontrolaJmeno(bunka, i, j, prava(21))

    'kontrola titul drzitel/vlastnik
    If (prava(22) <> "") Then kontrola_listu = KontrolaTitul(bunka, i, j, prava(22))

    'kontrola unikatnosti cisla smlouvy
    If (prava(23) <> "") Then kontrola_listu = KontrolaUnikatnostUdajeSloupce(bunka, i, j, pocet_radku, prava(23))

    'vypocet pojistneho
    If (prava(24) <> "") Then kontrola_listu = VypocetPojistneho(j)

    'vypocet pojistneho
    If (prava(25) <> "") Then kontrola_listu = PojistnaCastkaVozidla(bunka, i, j)


    'kontrola celni sklo limit plneni
    If (prava(26) <> "") Then kontrola_listu = KontrolaCelniSkloLimitPlneni(bunka, i, j)

    'kontrola celni sklo rocni pojisteni
    If (prava(27) <> "") Then kontrola_listu = KontrolaCelniSkloRocniPojistne(bunka, i, j)

    'd|fffd|lka prijmeni/nazvu firmy
    If (prava(29) <> "") Then kontrola_listu = KontrolaPrijmeni(bunka, i, j, prava(29))

    'kod spoluucasti
    If (prava(30) <> "") Then kontrola_listu = KontrolaKodSpoluucasti(bunka, i, j)

    'kontrola duplicity SPZ a VIN
    If (prava(31) <> "") Then kontrola_listu = KontrolaDuplicitySpzVin(bunka, i, j)
    
    'kontrola uraz - limit plneni
    If (prava(32) <> "") Then kontrola_listu = KontrolaUrazLimitPlneni(bunka, i, j)
    
    'kontrola uraz - rocni pojistne
    If (prava(33) <> "") Then kontrola_listu = KontrolaUrazRocniPojistne(bunka, i, j)
    
    'kontrola zavazadla - limit plneni
    If (prava(34) <> "") Then kontrola_listu = KontrolaZavazadlaLimitPlneni(bunka, i, j)
    
    'kontrola zavazadla - rocni pojistne
    If (prava(35) <> "") Then kontrola_listu = KontrolaZavazadlaRocniPojistne(bunka, i, j)
    
    'kontrola nahradni vozidlo - rocni pojistne
    If (prava(36) <> "") Then kontrola_listu = KontrolaNahradniVozidloRocniPojistne(bunka, i, j)
    
    'kontrola zvlastni vybava
    If (prava(37) <> "") Then kontrola_listu = KontrolaZvlastniVybava(bunka, i, j)
  Next j
Next i

'zavreni dialogu progress baru
Unload F_Postup
Worksheets("data").Select

'zobrazeni zaverecne zpravy o kontrole uzivateli
'kontrola zda je nejaka bunka vyplnena chybou v prvnim sloupci
For i = const_pocatek_y_data To const_hranice_listu Step 1
  If (Cells(i, const_pocatek_x_data - 1).Interior.ColorIndex = 3) Then
    kontrola_listu = False
    Exit For
  End If
Next i

Odemknuti_GDPR

'nekdy se stavalo, ze se v bunce zobrazovaly #### misto textu, pri nastaveni formatu na obecny to pomohlo
Range(Cells(const_pocatek_y_data, const_pocatek_x_data - 1), Cells(const_hranice_listu, const_pocatek_x_data - 1)).Select
Selection.NumberFormat = "General"

'aut. prizpusobeni sirky celeho listu
Cells.Select
Cells.EntireColumn.AutoFit

'prizpusobeni sirky prvniho sloupce (kvuli zalamovani sloupce jej nejdrive roztahnu vic a pak jej aut. prizpusobim a pak jeste prizpusobim radky)
Columns("A:A").ColumnWidth = 150
Columns("A:A").EntireColumn.AutoFit
Cells.Select
Cells.EntireRow.AutoFit
Range("A1").Select

'zamknuti pracovnich listu
Zamkni_sktyj_v|fffd|e


VlastnostPisma

Skryti_GDPR
'kolik zbyva dnu na odeslani
pocet_dnu = PocetDnuNaOdeslani


'zobrazeni zpravy uzivateli o probehle kontrole
If (kontrola_listu) Then
Odemknuti_GDPR
 Skryti_GDPR
  If (pocet_dnu > 0) Then
    MsgBox ("Kontrola prob|fffd|hla" & Chr(10) & Chr(10) & _
            "-m|fffd||fffd|ete pokra|fffd|ovat" & Chr(10) & _
            "-po|fffd|et dn|fffd| na odesl|fffd|n|fffd| DS: " & pocet_dnu & " (" & DateAdd("d", pocet_dnu, Date) & ")")
  Else
    If (pocet_dnu = 0) Then
      MsgBox ("Kontrola prob|fffd|hla" & Chr(10) & Chr(10) & _
              "-m|fffd||fffd|ete pokra|fffd|ovat" & Chr(10) & _
              "-DS mus|fffd|te nejpozd|fffd|ji dnes odeslat (" & DateAdd("d", pocet_dnu, Date) & ")")
    Else
      MsgBox ("Kontrola prob|fffd|hla" & Chr(10) & Chr(10) & _
              "-m|fffd||fffd|ete pokra|fffd|ovat" & Chr(10) & _
              "-DS ji|fffd| m|fffd|l b|fffd|t odesl|fffd|n (" & DateAdd("d", pocet_dnu, Date) & ")")
    End If
  End If

  'pripojeni potvrzeni k obchodni sleve vyssi nez 50%
  If ((Cells(const_obchodni_sleva_y, const_obchodni_sleva_x) > 51) And (Cells(const_obchodni_sleva_y, const_obchodni_sleva_x) < 76)) Then
    Cells(const_obchodni_sleva_y, const_obchodni_sleva_x).Select
    ZvyraznitPrilozeniPotvrzeni
    MsgBox ("!! POZOR !!   - obchodn|fffd| sleva je vy|fffd||fffd||fffd| ne|fffd| 50%." & Chr(10) & _
             "Pokud p|fffd|izn|fffd|te obchodn|fffd| slevu vy|fffd||fffd||fffd| ne|fffd| 50%, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP.")
  End If
  If public_celni_sklo_limit_plneni_prilozit_povoleni Then
    MsgBox ("!! POZOR !!   - limit pln|fffd|n|fffd| |fffd|eln|fffd|ho skla je u n|fffd|kter|fffd|ho vozidla vy|fffd||fffd||fffd| ne|fffd| 50.000,- K|fffd|." & Chr(10) & _
             "Pokud p|fffd|izn|fffd|te limit vy|fffd||fffd||fffd| ne|fffd| 50.000,- K|fffd|, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP.")
  End If
  If public_zavazadla_limit_plneni_prilozit_povoleni Then
    MsgBox ("!! POZOR !!   - limit pln|fffd|n|fffd| zavazadel je u n|fffd|kter|fffd|ho vozidla vy|fffd||fffd||fffd| ne|fffd| 50.000,- K|fffd|." & Chr(10) & _
             "Pokud p|fffd|izn|fffd|te limit vy|fffd||fffd||fffd| ne|fffd| 50.000,- K|fffd|, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP.")
  End If
  If public_pojistna_castka_vozidla_prilozit_povoleni Then
    MsgBox ("!! POZOR !!   - n|fffd|kter|fffd| z vozidel m|fffd| pojistnou |fffd||fffd|stku vy|fffd||fffd||fffd| ne|fffd| 1.000.000,- K|fffd|." & Chr(10) & _
             "Na z|fffd|klad|fffd| pln|fffd| moci ud|fffd|len|fffd| p|fffd|edstavenstvem |fffd|PP m|fffd||fffd|ete b|fffd|t opr|fffd|vn|fffd|ni pojistit osobn|fffd| a n|fffd|kladn|fffd| vozidla na vy|fffd||fffd||fffd| pojistnou |fffd||fffd|stku." & Chr(10) & "Horn|fffd| hranice pojistn|fffd| |fffd||fffd|stky se |fffd||fffd|d|fffd| |fffd|rovn|fffd| Va|fffd|eho zplnomocn|fffd|n|fffd|." & Chr(10) & "V p|fffd||fffd|pad|fffd|, |fffd|e pojist|fffd|te vozidlo s vy|fffd||fffd||fffd| pojistnou |fffd||fffd|stkou, ne|fffd| je Va|fffd|e zplnomocn|fffd|n|fffd|, jedn|fffd| se o hrub|fffd| poru|fffd|en|fffd| pokynu |fffd|PP.")
  End If
  If public_uraz_31_prilozit_povoleni Then
    MsgBox ("!! POZOR !!   - u n|fffd|kter|fffd|ho autobusu / trolejbusu je v|fffd|ce ne|fffd| 31 p|fffd|epravovan|fffd|ch osob." & Chr(10) & "V p|fffd||fffd|pad|fffd| sjedn|fffd|n|fffd| p|fffd|ipoji|fffd|t|fffd|n|fffd| |fffd|razu na |fffd||fffd|stku 400.000,- K|fffd| a vy|fffd||fffd||fffd|, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP.")
  End If
  If public_uraz_61_prilozit_povoleni Then
    MsgBox ("!! POZOR !!   - U n|fffd|kter|fffd|ho autobusu / trolejbusu je v|fffd|ce ne|fffd| 61 p|fffd|epravovan|fffd|ch osob." & Chr(10) & "V p|fffd||fffd|pad|fffd| sjedn|fffd|n|fffd| p|fffd|ipoji|fffd|t|fffd|n|fffd| |fffd|razu na |fffd||fffd|stku 200.000,- K|fffd| a vy|fffd||fffd||fffd|, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP.")
  End If
  If public_znacka_vozidla_povoleni Then
    MsgBox ("!! POZOR !!   - zna|fffd|ka n|fffd|kter|fffd|ho vozidla spad|fffd| do kategorie, kdy jej|fffd| poji|fffd|t|fffd|n|fffd| mus|fffd| b|fffd|t schv|fffd|leno kompetentn|fffd| osobou." & Chr(10) & _
             "Pokud budete vozidlo poji|fffd||fffd|ovat, je nutn|fffd| dolo|fffd|it p|fffd|semn|fffd| souhlas z |fffd|st|fffd|ed|fffd| |fffd|PP.")
  End If
  
  Kontroly = True
Else
  MsgBox ("Kontrola prob|fffd|hla" & Chr(10) & Chr(10) & _
  "-n|fffd|kter|fffd| data nebyla vypln|fffd|na spr|fffd|vn|fffd|" & Chr(10) & "-nelze ur|fffd|it kolik dn|fffd| zb|fffd|v|fffd| pro odesl|fffd|n|fffd| DS")
  Kontroly = False
End If
End Function
Attribute VB_Name = "M_Kontroly_2_Body"
'Option Explicit
'######################
'######################
'  UDAJE FLOTILY
'######################
'######################

'###############
'kontrola zda je vyplnen pojistnik
'###############
Sub KontrolaPojistnik()

 If UCase(Trim(Cells(const_pojistnik_nazev_y, const_pojistnik_nazev_x).Value)) = "" Then
  'vypsani chyby
  Cells(const_pojistnik_nazev_y - 1, const_pojistnik_nazev_x) = "POJISTN|fffd|K" & Chr(10) & "-n|fffd|zev - nen|fffd| vypln|fffd|n"
  'obarveni bunky s chybou
  Range(Cells(const_pojistnik_nazev_y - 1, const_pojistnik_nazev_x), Cells(const_pojistnik_nazev_y, const_pojistnik_nazev_x)).Interior.ColorIndex = 3
 Else
  Cells(const_pojistnik_nazev_y - 1, const_pojistnik_nazev_x) = "POJISTN|fffd|K" & Chr(10) & "-n|fffd|zev"
 End If

End Sub

'###############
'kontrola spr|fffd|vnosti HIP
'###############
'vypocitani souctu 1.-9. cislici vynasobit hodnotou jejiho poradi :1. cislice * 1. pozice + 2. cislice * 2. pozice + .. + 9. cislice * 9. pozice
'vypocitani zbytku po deleni souctu cislem 11
'pokud neni posledni cislice zbytku po deleni schodna s posledni cislici cisla smlouvy tak vratit chybu
Public Function KontrolaHip() As Boolean
 Dim Retezec As String, Kontrola As Boolean, soucet As Integer, zbytek As Integer
 Retezec = Right("000000000" & Trim(Cells(const_cislo_hip_y, const_cislo_hip_x).Value), 10)
 Kontrola = True

 If Len(Retezec) = 10 And IsNumeric(Retezec) And Retezec <> "0000000000" Then
  soucet = 0
  soucet = soucet + Mid(Retezec, 1, 1) * 1
  soucet = soucet + Mid(Retezec, 2, 1) * 2
  soucet = soucet + Mid(Retezec, 3, 1) * 3
  soucet = soucet + Mid(Retezec, 4, 1) * 4
  soucet = soucet + Mid(Retezec, 5, 1) * 5
  soucet = soucet + Mid(Retezec, 6, 1) * 6
  soucet = soucet + Mid(Retezec, 7, 1) * 7
  soucet = soucet + Mid(Retezec, 8, 1) * 8
  soucet = soucet + Mid(Retezec, 9, 1) * 9
  zbytek = soucet - (Fix(soucet / 11) * 11)

  'porovnani posledni cislice - pro pripad, ze by zbytek vysel 10, tak beru zprava posledni znak/cifru
  If Right(zbytek, 1) <> Right(Retezec, 1) Then Kontrola = False
 Else
  Kontrola = False
 End If

 Cells(const_cislo_hip_y, const_cislo_hip_x).NumberFormat = "@"

'zneni chybove hlasky uzivateli a vypis chyby do prvniho sloupce
 If Not Kontrola Then
  Cells(const_cislo_hip_y - 1, const_cislo_hip_x) = "HIP - nen|fffd| platn|fffd|"
  'obarveni bunky s chybou
  Range(Cells(const_cislo_hip_y - 1, const_cislo_hip_x), Cells(const_cislo_hip_y, const_cislo_hip_x)).Interior.ColorIndex = 3
 Else
  Cells(const_cislo_hip_y - 1, const_cislo_hip_x) = "HIP"
  Cells(const_cislo_hip_y, const_cislo_hip_x).Value = Retezec
 End If

 KontrolaHip = Kontrola
End Function
'###############
'kontrola zda je vyplnen spravne kod produktu
'###############
Public Function KontrolaTypFlotily() As Boolean
 KontrolaTypFlotily = True
 With Worksheets("data")
  Select Case UCase(Trim(.Cells(const_typ_flotily_y, const_typ_flotily_x).Value))
   Case "KOMER|fffd|N|fffd|", "K"
    public_kod_produktu = "K"
   Case "SPECI|fffd|LN|fffd|", "S"
    public_kod_produktu = "S"
   Case "ASISTENCE PLUS", "A"
    public_kod_produktu = "A"
   Case "ASISTENCE TIR", "T"
    public_kod_produktu = "T"
   Case Else
    public_kod_produktu = ""
    KontrolaTypFlotily = False
  End Select

  With .Cells(const_typ_flotily_y, const_typ_flotily_x)
   .Value = public_kod_produktu
   If KontrolaTypFlotily Then
    .Offset(-1, 0).Value = "TYP FLOTILY" & Chr(10) & "- HAV"
   Else
    .Interior.ColorIndex = 3
    With .Offset(-1, 0)
     .Value = "TYP FLOTILY" & Chr(10) & "- nen|fffd| vypln|fffd|n"
     .Interior.ColorIndex = 3
    End With
   End If
  End With
 End With
End Function
'###############
'kontrola zda je vyplnena spravne sleva
'###############
Public Function KontrolaObchodniSleva() As Boolean
 Retezec = UCase(Trim(Cells(const_obchodni_sleva_y, const_obchodni_sleva_x)))

 KontrolaObchodniSleva = True

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec <> "" And Retezec <> "0" Then
    KontrolaObchodniSleva = False
    text_chyby = "SLEVA/P|fffd|I|fffd||fffd||fffd|KA NA FLOTILE" & Chr(10) & "- typ flotily nepodporuje slevy"
   End If
  Case "K", "S"
   If IsNumeric(Retezec) Then
    If Round(CSng(Retezec)) <> CSng(Retezec) Then
     KontrolaObchodniSleva = False
     text_chyby = "SLEVA/P|fffd|I|fffd||fffd||fffd|KA NA FLOTILE" & Chr(10) & "- mus|fffd| b|fffd|t zadan|fffd| cel|fffd|m |fffd||fffd|slem"
    Else
     If Retezec < -70 Or Retezec > 90 Then
      KontrolaObchodniSleva = False
      text_chyby = "SLEVA/P|fffd|I|fffd||fffd||fffd|KA NA FLOTILE" & Chr(10) & "- tato hodnota nen|fffd| p|fffd||fffd|pustn|fffd|"
     End If
    End If
   Else
    KontrolaObchodniSleva = False
    text_chyby = "SLEVA/P|fffd|I|fffd||fffd||fffd|KA NA FLOTILE" & Chr(10) & "- tato hodnota nen|fffd| p|fffd||fffd|pustn|fffd|"
   End If
 End Select

 If KontrolaObchodniSleva Then
  Cells(const_obchodni_sleva_y - 1, const_obchodni_sleva_x) = "SLEVA/P|fffd|I|fffd||fffd||fffd|KA" & Chr(10) & "NA FLOTILE"
 Else
  'vypsani chyby
  Cells(const_obchodni_sleva_y - 1, const_obchodni_sleva_x) = text_chyby
  'obarveni bunky s chybou
  Range(Cells(const_obchodni_sleva_y - 1, const_obchodni_sleva_x), Cells(const_obchodni_sleva_y, const_obchodni_sleva_x)).Interior.ColorIndex = 3
 End If

End Function

'###############
'kontrola zda je vyplnena spravne FREKVENCE PLACENI
'###############
Public Function KontrolaFrekvencePlaceni() As Boolean
 KontrolaFrekvencePlaceni = False
 Retezec = UCase(Trim(Cells(const_frekvence_placeni_y, const_frekvence_placeni_x)))

 Select Case public_kod_produktu
  Case "K", "S"
   Select Case Retezec
    Case "1", "2", "4", "12"
     KontrolaFrekvencePlaceni = True
    Case Else
     text_chyby = "FREKVENCE PLACEN|fffd|" & Chr(10) & "- tato hodnota nen|fffd| p|fffd||fffd|pustn|fffd|"
   End Select
  Case "A", "T"
   Select Case Retezec
    Case "1", "2"
     KontrolaFrekvencePlaceni = True
    Case Else
     text_chyby = "FREKVENCE PLACEN|fffd|" & Chr(10) & "- tato hodnota nen|fffd| p|fffd||fffd|pustn|fffd|"
   End Select
 End Select

 If KontrolaFrekvencePlaceni Then
  Cells(const_frekvence_placeni_y - 1, const_frekvence_placeni_x) = "FREKVENCE" & Chr(10) & "PLACEN|fffd|"
 Else
  'vypsani chyby
  Cells(const_frekvence_placeni_y - 1, const_frekvence_placeni_x) = text_chyby
  'obarveni bunky s chybou
  Range(Cells(const_frekvence_placeni_y - 1, const_frekvence_placeni_x), Cells(const_frekvence_placeni_y, const_frekvence_placeni_x)).Interior.ColorIndex = 3
 End If

End Function

'######################
'######################
'  SMLOUVA
'######################
'######################

'###############
'kontrola spr|fffd|vnosti cisla smlouvy
'###############
'vypocitani souctu 1.-9. cislici vynasobit hodnotou jejiho poradi :1. cislice * 1. pozice + 2. cislice * 2. pozice + .. + 9. cislice * 9. pozice
'vypocitani zbytku po deleni souctu cislem 11
'pokud neni posledni cislice zbytku po deleni schodna s posledni cislici cisla smlouvy tak vratit chybu
Public Function KontrolaCisloSmlouva(Retezec, sour_x As Integer, sour_y As Long) As Boolean
 Dim Kontrola As Boolean, soucet As Integer, zbytek As Integer
 Retezec = Right("000000000" & Trim(Retezec), 10)
 Kontrola = True

 If Len(Retezec) = 10 And IsNumeric(Retezec) And Retezec <> "0000000000" Then
  soucet = 0
  soucet = soucet + Mid(Retezec, 1, 1) * 1
  soucet = soucet + Mid(Retezec, 2, 1) * 2
  soucet = soucet + Mid(Retezec, 3, 1) * 3
  soucet = soucet + Mid(Retezec, 4, 1) * 4
  soucet = soucet + Mid(Retezec, 5, 1) * 5
  soucet = soucet + Mid(Retezec, 6, 1) * 6
  soucet = soucet + Mid(Retezec, 7, 1) * 7
  soucet = soucet + Mid(Retezec, 8, 1) * 8
  soucet = soucet + Mid(Retezec, 9, 1) * 9
  zbytek = soucet - (Fix(soucet / 11) * 11)

  'porovnani posledni cislice - pro pripad, ze by zbytek vysel 10, tak beru zprava posledni znak/cifru
  If Right(zbytek, 1) <> Right(Retezec, 1) Then Kontrola = False
 Else
  Kontrola = False
 End If

 Cells(sour_y, sour_x).NumberFormat = "@"
 If Kontrola Then
  Cells(sour_y, sour_x).Value = Retezec
 Else
  Call ZapisChybyDoBunky(" -Smlouva - chybn|fffd| |fffd||fffd|slo smlouvy", sour_x, sour_y)
 End If

 KontrolaCisloSmlouva = Kontrola
End Function

'###############
'kontrola data sjednani
'###############
Public Function KontrolaDatumSjednani(sour_x As Integer, sour_y As Long)
Cells(sour_y, sour_x).Select
Selection.NumberFormat = "m/d/yyyy"

Dim text_chyby As String
text_chyby = ""

Dim Kontrola As Boolean
Kontrola = True

datum_sjednani = Trim(Cells(sour_y, const_datum_sjednani_x))
If (IsDate(datum_sjednani)) Then
  datum_sjednani = CDate(Trim(Cells(sour_y, const_datum_sjednani_x)))
  If (const_datum_sjednani_od <= datum_sjednani) And (datum_sjednani <= const_datum_sjednani_do) Then
    If (datum_sjednani <= Date) Then
      If (DateAdd("d", -15, Date) <= datum_sjednani) Then
        Kontrola = True
      Else
        If (public_nizka_kontrola_dat = True) Then
          Kontrola = True
          text_chyby = " -Smlouva - datum sjedn|fffd|n|fffd| - nesm|fffd| b|fffd|t star|fffd||fffd| 15 dn|fffd|"
          cervena = False
          If (Cells(sour_y, 1).Interior.ColorIndex = 3) Then cervena = True
          Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
          Cells(sour_y, const_datum_sjednani_x).Interior.ColorIndex = 40
          
          If (cervena = False) Then
            Cells(sour_y, 1).Interior.ColorIndex = 40
          End If
        Else
          Kontrola = False
          text_chyby = " -Smlouva - datum sjedn|fffd|n|fffd| - nesm|fffd| b|fffd|t star|fffd||fffd| 15 dn|fffd|"
        End If
      End If
    Else
      Kontrola = False
      text_chyby = " -Smlouva - datum sjedn|fffd|n|fffd| - datum sjedn|fffd|n|fffd| je v budoucnosti"
    End If
  Else
    Kontrola = False
    text_chyby = " -Smlouva - datum sjedn|fffd|n|fffd| - je mimo pracovn|fffd| obdob|fffd| DS"
  End If
Else
  Kontrola = False
  text_chyby = " -Smlouva - datum sjedn|fffd|n|fffd| - nen|fffd| datum"
End If

If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaDatumSjednani = Kontrola
End Function

'###############
'kontrola data pocatku pojisteni
'###############
Public Function KontrolaDatumPocatkuPojisteni(sour_x As Integer, sour_y As Long)
Cells(sour_y, sour_x).Select
Selection.NumberFormat = "m/d/yyyy"

Dim text_chyby As String
text_chyby = ""

Dim Kontrola As Boolean
Kontrola = True

datum_pocatek_pojisteni = Trim(Cells(sour_y, const_pocatek_pojisteni_x))
If (IsDate(datum_pocatek_pojisteni)) Then
  datum_pocatek_pojisteni = CDate(Trim(Cells(sour_y, const_pocatek_pojisteni_x)))
  If (const_datum_pocatku_od <= datum_pocatek_pojisteni) And (datum_pocatek_pojisteni <= const_datum_pocatku_do) Then
    If (Cells(sour_y, const_datum_sjednani_x).Interior.ColorIndex <> 3) Then
      datum_sjednani = CDate(Trim(Cells(sour_y, const_datum_sjednani_x)))
        If (datum_sjednani <= datum_pocatek_pojisteni) Then
          If (datum_pocatek_pojisteni <= DateAdd("d", 60, datum_sjednani)) Then
            Kontrola = True
          Else
            Kontrola = False
            text_chyby = " -Smlouva - datum po|fffd||fffd|tku poj. - nen|fffd| v rozsahu + 60ti dn|fffd| od data sjedn|fffd|n|fffd|"
          End If
        Else
          Kontrola = False
          text_chyby = " -Smlouva - datum po|fffd||fffd|tku poj. - p|fffd|edch|fffd|z|fffd| datu sjedn|fffd|n|fffd|"
        End If
    Else
      Kontrola = False
      text_chyby = " -Smlouva - datum po|fffd||fffd|tku poji|fffd|t|fffd|n|fffd| - nelze zkontrolovat"
    End If
  Else
    Kontrola = False
    text_chyby = " -Smlouva - datum po|fffd||fffd|tku poji|fffd|t|fffd|n|fffd| - je mimo pracovn|fffd| obdob|fffd| DS"
  End If
Else
  Kontrola = False
  text_chyby = " -Smlouva - datum sjedn|fffd|n|fffd| - nen|fffd| datum"
End If

If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaDatumPocatkuPojisteni = Kontrola
End Function

'###############
'kontrola konec pojisteni
'###############
Public Function KontrolaKonecPojisteni(sour_x As Integer, sour_y As Long)
Cells(sour_y, sour_x).NumberFormat = "m/d/yyyy"

Dim text_chyby As String
text_chyby = ""

Dim Kontrola As Boolean
Kontrola = True

datum_konec_pojisteni = Trim(Cells(sour_y, const_konec_pojisteni_x))
If (datum_konec_pojisteni = "") Then
  KontrolaKonecPojisteni = True
  Exit Function
End If

If (IsDate(datum_konec_pojisteni)) Then
  datum_konec_pojisteni = CDate(Trim(Cells(sour_y, const_konec_pojisteni_x)))
  If (Cells(sour_y, const_pocatek_pojisteni_x).Interior.ColorIndex <> 3) Then
    datum_pocatek_pojisteni = CDate(Trim(Cells(sour_y, const_pocatek_pojisteni_x)))
    If (datum_pocatek_pojisteni < datum_konec_pojisteni) Then
      datum_hranice = DateAdd("yyyy", 1, datum_pocatek_pojisteni)
      datum_hranice = DateAdd("d", -1, datum_hranice)
      If (datum_hranice <= datum_konec_pojisteni) Then
         Kontrola = True
      Else
        Kontrola = False
        text_chyby = " -Smlouva - konec poji|fffd|t|fffd|n|fffd| - smlouva je krat|fffd||fffd| ne|fffd| 1 rok"
      End If
    Else
      Kontrola = False
      text_chyby = " -Smlouva - konec poji|fffd|t|fffd|n|fffd| - konec smlouvy p|fffd|edch|fffd|z|fffd| datu po|fffd||fffd|tku"
    End If
  Else
    Kontrola = False
    text_chyby = " -Smlouva - konec poji|fffd|t|fffd|n|fffd| - nelze zkontrolovat"
  End If
Else
  Kontrola = False
  text_chyby = " -Smlouva - konec poji|fffd|t|fffd|n|fffd| - nen|fffd| datum"
End If

If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaKonecPojisteni = Kontrola
End Function

'######################
'######################
'  DRZITEL/PROVOZOVATEL - VLASTNIK
'######################
'######################

'###############
'rozhodnuti zda spustit kontrolu RC/ICO
'###############
Sub KontrolaRcIco(Retezec As String, sour_x As Integer, sour_y As Long, typ As Variant)
 Retezec = Trim(Retezec)

 Select Case Len(Retezec)
  Case 9, 10
   Call KontrolaRc(Retezec, sour_x, sour_y, typ)
  Case 8
   Call KontrolaIco(Retezec, sour_x, sour_y, typ)
  Case Else
   If typ = "vlastnik" Then Call ZapisChybyDoBunky(" -Vlastn|fffd|k - R|fffd|/I|fffd|O - nelze zkontrolovat", sour_x, sour_y)
   If typ = "drzitel" Then Call ZapisChybyDoBunky(" -Dr|fffd|itel - R|fffd|/I|fffd|O - nelze zkontrolovat", sour_x, sour_y)
 End Select

End Sub

'###############
'kontrola RC
'###############
Public Function KontrolaRc(Retezec As String, sour_x As Integer, sour_y As Long, typ As Variant) As Boolean
Dim Kontrola As Boolean, text_chyby As String
Kontrola = True

Retezec = Trim(Retezec)
'zda je delka RC 9 nebo 10 znaku
If ((Len(Retezec) = 9) Or (Len(Retezec) = 10)) Then
  'zda je RC cislo
  If (IsNumeric(Retezec)) Then
    'rozdeleni RC na jednotlive hodnoty
    Rok = Int(Mid(Retezec, 1, 2))
    mesic = Int(Mid(Retezec, 3, 2))
    den = Int(Mid(Retezec, 5, 2))
    Konec = Mid(Retezec, 7, 4) 'cast za lomitkem
    'pripocitani k roku 1900 nebo 2000
    If (Len(Retezec) = 9) Then
      Rok = Rok + 1900
    Else
      If (0 <= Rok) And (Rok <= 40) Then
        Rok = Rok + 2000
      Else
        Rok = Rok + 1900
      End If
    End If

    'zda je pripocitana spravna hodnota k mesici u zen
    If (((1 <= mesic - 50) And (mesic - 50 <= 12)) Or ((1 <= mesic) And (mesic <= 12))) Then
      'pokud je RC zeny tak odecteni 50 od mesice
      If ((1 <= mesic - 50) And (mesic - 50 <= 12)) Then
        zena = True
        mesic = mesic - 50
      End If
      'overeni zda datumove udaje z rodneho cisla jsou platnymi hodnotami kalendare
      Dim kalendar As Variant
      kalendar = Array(0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
      If (Rok Mod 4 = 0) Then kalendar(2) = 29

      If ((Rok < 1900) Or (2010 < Rok)) Then Kontrola = False
      If ((mesic < 1) Or (12 < masic)) Then Kontrola = False
      If ((den < 1) Or (kalendar(mesic) < den)) Then Kontrola = False

      If (Kontrola = True) Then
        'kontrola zda je rc dlouhe 10 cislic
        If (Len(Retezec) = 10) Then
          'kontrola zda konec RC je 9999 - pokud ano, neprobihaji dalsi kontroly
          If (Konec <> "9999") Then
            'kontrola zda je rok po roce 1950
            If (Rok > 1950) Then
              Dim konec_1, konec_2 As Integer
              konec_1 = Int(Mid(Konec, 1, 2))
              konec_2 = Int(Mid(Konec, 3, 2))
              kontrolni_soucet = Int(Mid(Rok, 3, 2)) + mesic + den + konec_1 + konec_2
              'pokud je osoba zena, musim zase pricist k mesici 50
              If (zena) Then kontrolni_soucet = kontrolni_soucet + 50
              If (kontrolni_soucet Mod 11 = 0) Then
                Kontrola = True
              Else
                Kontrola = False
                text_chyby = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
              End If
            'rc je dlouhe 10 cislic ale rok je do roku 1950 - chyba
            Else
              text_chyby = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
              Kontrola = False
            End If
          'rc konci 9999
          Else
            Kontrola = True
          End If
        'rc je dlouhe 9 cislic
        Else
          'kontrola zda je rok do roku 1950
          If (Rok < 1954) Then
            Kontrola = True
          'rc je dlouhe 9 cislic ale rok je po roce 1950
          Else
            text_chyby = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
            Kontrola = False
          End If
        End If
      Else
        text_chyby = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
        Kontrola = False
      End If
    Else
      text_chyby = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
      Kontrola = False
    End If
  Else
    text_chyby = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
    Kontrola = False
  End If
Else
  text_chyby = "R|fffd| - |fffd|patn|fffd| form|fffd|t"
  Kontrola = False
End If

'vypis chyby do prvniho sloupce
If (Kontrola = False) Then
  Select Case typ
    Case "drzitel"
      text_chyby = " -Dr|fffd|itel - " & text_chyby
    Case "vlastnik"
      text_chyby = " -Vlastn|fffd|k - " & text_chyby
  End Select
End If

Select Case typ
  Case "drzitel", "vlastnik"
    If (Kontrola = False) Then
      Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
    End If
  Case "pojistnik"
    If (Kontrola = False) Then
      'pro kontrolu ica v yalavi sekce smlouvy
      text_chyby = "POJISTN|fffd|K" & Chr(10)
      Cells(const_pojistnik_ic_y - 1, const_pojistnik_ic_x) = text_chyby & "I|fffd| - nen|fffd| platn|fffd|"

      'obarveni bunky s chybou
      Range(Cells(const_pojistnik_ic_y - 1, const_pojistnik_ic_x), Cells(const_pojistnik_ic_y, const_pojistnik_ic_x)).Interior.ColorIndex = 3
    Else
      Cells(const_pojistnik_ic_y - 1, const_pojistnik_ic_x) = "POJISTN|fffd|K" & Chr(10) & "-R|fffd|"
    End If
End Select

KontrolaRc = Kontrola
End Function

'###############
'Kontrola ICO
'###############
'###kontrola prevzana z puvodniho DS
'validace na ICO klienta
'ICO je 8 mistne
'
'ocislujeme pozice zleva doprava, od 1 do 8
'hodnotu pozice vynasobime cislem 9-i, pricemz i je cislo pozice
'secteme souciny, krome posledni cislice
'najdem nejblizsi nasobek 11
'rozdil soucinu a nejblizsiho nasobku modulo 10, zbytek roven posledni cislici
'
'pr:ICO 10482245
'(1*8 + 0*7 + 4*6 + 8*5 + 2*4 + 2*3 + 4*2) = 94
'nejblizsi 99
'99 - 94 = 5
'5%10 = posledni cislice 5
Public Function KontrolaIco(Retezec As String, sour_x As Integer, sour_y As Long, typ As Variant) As Boolean
Dim Kontrola As Boolean, text_chyby As String
Kontrola = True
If (typ = "drzitel") Then text_chyby = " -Dr|fffd|itel - "
If (typ = "vlastnik") Then text_chyby = " -Vlastn|fffd|k - "

Dim celkem, hodnota, vaha, posledni, nasobek, pretezec

'musi byt 8 mistne
If Not Len(Retezec) = 8 Then
  Kontrola = False
  text_chyby = text_chyby & "I|fffd|O - |fffd|patn|fffd| form|fffd|t"
Else
'musi byt cislo
  If Not IsNumeric(Retezec) Then
    Kontrola = False
    text_chyby = text_chyby & "I|fffd|O - |fffd|patn|fffd| form|fffd|t"
  Else
    celkem = 0
    pretezec = Retezec
    Dim li_x
    For li_x = 1 To 7
      hodnota = Left(pretezec, 1)
      pretezec = Right(pretezec, Len(pretezec) - 1)
      vaha = 9 - (li_x)
      celkem = celkem + (hodnota * vaha)
    Next li_x

    posledni = Right(Retezec, 1)
    Dim iRound
    iRound = Fix(celkem / 11)

    nasobek = (iRound + 1) * 11

    If ((nasobek - celkem) Mod 10) <> Int(posledni) Then
      Kontrola = False
      text_chyby = text_chyby & "I|fffd|O - |fffd|patn|fffd| form|fffd|t"
    End If

  End If
End If

'vypis chyby do prvniho sloupce
Select Case typ
  Case "drzitel", "vlastnik"
    If (Kontrola = False) Then
      Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
    End If
  Case "pojistnik"
    If (Kontrola = False) Then
      'pro kontrolu ica v yalavi sekce smlouvy
      text_chyby = "POJISTN|fffd|K" & Chr(10)
      Cells(const_pojistnik_ic_y - 1, const_pojistnik_ic_x) = text_chyby & "I|fffd| - nen|fffd| platn|fffd|"

      'obarveni bunky s chybou
      Range(Cells(const_pojistnik_ic_y - 1, const_pojistnik_ic_x), Cells(const_pojistnik_ic_y, const_pojistnik_ic_x)).Interior.ColorIndex = 3
    Else
      Cells(const_pojistnik_ic_y - 1, const_pojistnik_ic_x) = "POJISTN|fffd|K" & Chr(10) & "-I|fffd|"
    End If
End Select

KontrolaIco = Kontrola
End Function

'###############
'kontrola spr|fffd|vnosti PSC
'###############
Public Function KontrolaPsc(Retezec As String, sour_x As Integer, sour_y As Long, typ As Variant) As Boolean

Retezec = Replace(Retezec, " ", "") 'odstrani veskere mezery

Dim Kontrola As Boolean
Kontrola = True

'kontrola na delku 5 znaku
'kontrola na numericke znaky
If ((Len(Retezec) <> 5)) Or (IsNumeric(Retezec) <> True) Then
  Kontrola = False
End If

'zneni chybove hlasky uzivateli a vypis chyby do prvniho sloupce
If (Kontrola = False) Then
  Dim text_chyby As String
  If (typ = "vlastnik") Then text_chyby = " -Vlastn|fffd|k - PS|fffd| - chybn|fffd| vypln|fffd|n|fffd|"
  If (typ = "drzitel") Then text_chyby = " -Dr|fffd|itel - PS|fffd| - chybn|fffd| vypln|fffd|n|fffd|"
  Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
End If

KontrolaPsc = Kontrola
End Function

'###############
'kontrola titulu - zda ma byt vyplnene nebo nevyplnene
'###############
'odstraneni prebytecnych mezer
'na zaklade typu osoby (vlastnik/drzitel) se predvyplni chybova hlaska
'pokud je rc/ico OK, tedy bunka neni cervena
'  pokud je rc/ico dlouhe 8 znaku
'    pokud je jmeno vyplneno jmeno
'      zobrazit jmeno
'  pokud neni rc/ico dlouhe 8 znaku
'    pokud neni vyplneno jmeno
'      zobrazit chybu
'zapis chyby
Public Function KontrolaTitul(Retezec As String, sour_x As Integer, sour_y As Long, typ As Variant) As Boolean
 Dim text_chyby As String
Retezec = Trim(Retezec)

'predvyplneni textu chyby - vlastnik/drzitel
Dim Kontrola As Boolean
Kontrola = True
Select Case typ
  Case "drzitel"
    text_chyby = " -Dr|fffd|itel - "
    sour_rc_ico = const_drzitel_rc_ico_x
  Case "vlastnik"
    text_chyby = " -Vlastn|fffd|k - "
    sour_rc_ico = const_vlastnik_rc_ico_x
  Case Else
    text_chyby = " -Chyba kontrola jmena!!!"
End Select

'zda je rc/ico zadane spravne - cervene pozadi bunky ukazuje, ze je nekde v nem chyba
If (Cells(sour_y, sour_rc_ico).Interior.ColorIndex <> 3) Then
  'zda je ico
  If (Len(Cells(sour_y, sour_rc_ico)) = 8) Then
    'zda je jmeno vyplnene
    If (Retezec <> "") Then
      Kontrola = False
      text_chyby = text_chyby & " - titul - u podnikatele se nevypl|fffd|uje"
    End If
  End If
End If

'vypis chyby do prvniho sloupce
If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)

KontrolaTitul = Kontrola
End Function

'###############
'kontrola jmena - zda ma byt vyplnene nebo nevyplnene
'###############
'odstraneni prebztecnych mezer
'na zaklade typu osoby (vlastnik/drzitel) se predvyplni chybova hlaska
'pokud je rc/ico OK, tedy bunka neni cervena
'  pokud je rc/ico dlouhe 8 znaku
'    pokud je jmeno vyplneno jmeno
'      zobrazit jmeno
'  pokud neni rc/ico dlouhe 8 znaku
'    pokud neni vyplneno jmeno
'      zobrazit chybu
'zapis chyby
Public Function KontrolaJmeno(Retezec As String, sour_x As Integer, sour_y As Long, typ As Variant) As Boolean
 Dim text_chyby As String
Retezec = Trim(Retezec)

'predvyplneni textu chyby - vlastnik/drzitel
Dim Kontrola As Boolean
Kontrola = True
Select Case typ
  Case "drzitel"
    text_chyby = " -Dr|fffd|itel - "
    sour_rc_ico = const_drzitel_rc_ico_x
  Case "vlastnik"
    text_chyby = " -Vlastn|fffd|k - "
    sour_rc_ico = const_vlastnik_rc_ico_x
  Case Else
    text_chyby = " -Chyba kontrola jmena!!!"
End Select

'zda je rc/ico zadane spravne - cervene pozadi bunky ukazuje, ze je nekde v nem chyba
If (Cells(sour_y, sour_rc_ico).Interior.ColorIndex <> 3) Then
  'zda je ico
  If (Len(Cells(sour_y, sour_rc_ico)) = 8) Then
    'zda je jmeno vyplnene
    If (Retezec <> "") Then
      Kontrola = False
      text_chyby = text_chyby & "jm|fffd|no - u podnikatele se nevypl|fffd|uje"
    End If
  'zda je rc
  Else
    'zda je prazdne jmeno
    If (Retezec = "") Then
      Kontrola = False
      text_chyby = text_chyby & "jm|fffd|no - nen|fffd| vypln|fffd|n|fffd|"
    End If
  End If
End If

'vypis chyby do prvniho sloupce
If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)

KontrolaJmeno = Kontrola
End Function

'######################
'######################
'  PREDMET POJISTENI
'######################
'######################

'###############
'kontrola Cisla Leasingove smlouvy
'###############
'predpoklada se, ze rozhodnuti zda je vuz v najmu leasingove spolecnosti je jeden sloupec nalevo
Sub KontrolaCisloLeasingoveSmlouvy(Retezec As String, sour_x As Integer, sour_y As Long)
 Retezec = Trim(Retezec)

 leasingovy_najem = Cells(sour_y, sour_x - 1).Value

'zneni chybove hlasky uzivateli a vypis chyby do prvniho sloupce
 If leasingovy_najem <> "A" And Retezec <> "" Then Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - v|fffd|z nen|fffd| v leasingov|fffd|m n|fffd|jmu (ale je vypln|fffd|n|fffd| |fffd||fffd|slo leas. smlouvy)", sour_x, sour_y)

End Sub

'###############
'kontrola vyplneni - VIN/SPZ/TP
'###############
'a) minimalne musi byt vyplnen VIN
'b) minimalne musi byt vyplnena RZ a TP
'vyhodnoceni se uklada do verejne promenne - public_kontrola_dva_ze_tri_dobry - pro potrebz kontrol RZ, TP, VIN
Public Function KontrolaVinSpzTp(sour_x As Integer, sour_y As Long, zapsat) As Boolean
 VIN = Trim(Cells(sour_y, const_vin_x))
 SPZ = Trim(Cells(sour_y, const_registracni_znacka_x))
 TP = Trim(Cells(sour_y, const_cislo_velkeho_tp_x))

'VIN
 If VIN = "" Then
  vyplnen_vin = False
 Else
  vyplnen_vin = True
 End If
'SPZ
 If SPZ = "" Then
  vyplnen_spz = False
 Else
  vyplnen_spz = True
 End If
'TP
 If TP = "" Then
  vyplnen_tp = False
 Else
  vyplnen_tp = True
 End If

 If vyplnen_vin Or (vyplnen_spz And vyplnen_tp) Then
  public_kontrola_dva_ze_tri_dobry = True
 Else
  public_kontrola_dva_ze_tri_dobry = False
  If zapsat Then Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - je nutn|fffd| vyplnit minim|fffd|ln|fffd| VIN nebo RZ s TP", 1, sour_y)
 End If
 KontrolaVinSpzTp = public_kontrola_dva_ze_tri_dobry
End Function

'###############
'kontrola SPZ
'###############
'makro je prevzane z puvodniho sbereace - lehce upraveno - pokud neni vzplneno, nepovazuje se za chybu
'kontrola povolenych znaku spz
Public Function KontrolaSpz(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 Dim text_chyby As String
Retezec = UCase(Trim(Retezec))

'kvuli kontrole dva ze tri
If ((public_kontrola_dva_ze_tri_dobry = True) And (Retezec = "")) Then
  KontrolaSpz = True
  Exit Function
End If

If (Retezec <> "") Then
  If (Len(Retezec) <= 12) Then
    If "NENI" = Retezec Then
      Kontrola = False
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - v RZ nepovolen|fffd| obsah"
    Else
      Dim i, nalezeno_jine, znak
      nalezeno_jine = 0
  
      For i = 1 To Len(Retezec)
        znak = Mid(Retezec, i, 1)
        If IsNumeric(znak) Or (Asc(znak) >= Asc("A") And Asc(znak) <= Asc("Z")) Then
        Else
         nalezeno_jine = nalezeno_jine + 1
        End If
      Next i

      Kontrola = True

      If nalezeno_jine > 0 Then
        Kontrola = False
        text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - RZ obsahuje nepovolen|fffd| znaky"
      End If
    End If
  Else
    Kontrola = False
    text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - RZ - je del|fffd||fffd| ne|fffd| 12 znak|fffd|"
  End If
Else
  Kontrola = False
  text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - RZ - nen|fffd| vypln|fffd|na"
End If

If (Kontrola = False) Then
  Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
  KontrolaSpz = Kontrola
End If
End Function

'###############
'kontrola TP
'###############
'##AAXXxxXX : A = pismeno, X = cislice
Public Function KontrolaTp(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 Dim text_chyby As String
Retezec = UCase(Trim(Retezec))
Kontrola = True

'kvuli kontrole dva ze tri
If ((public_kontrola_dva_ze_tri_dobry = True) And (Retezec = "")) Then
  KontrolaTp = True
  Exit Function
End If

If (Len(Retezec) = 0) Then
  text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - TP - nen|fffd| vypln|fffd|n"
  Kontrola = False
Else
  If Len(Retezec) <> 8 Then
    text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - TP - nem|fffd| d|fffd|lku 8 znak|fffd|"
    Kontrola = False
  Else
    Dim cislo As String
    Dim Text As String
    Text = Mid(Retezec, 1, 2)
    cislo = Mid(Retezec, 3)

    i = 1
    For i = 1 To Len(Text) Step 1  'zpracovani textove casti TP
    Select Case Mid(Text, i, 1)
      Case "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
      Case Else
        Kontrola = False
      End Select
    Next i

    i = 1
    For i = 1 To Len(cislo) Step 1  'zpracovani ciselne casti TP
    Select Case Mid(cislo, i, 1)
      Case "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"
      Case Else
        Kontrola = False
      End Select
    Next i
    If (Kontrola = False) Then text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - TP - neobsahuje povolen|fffd| znaky"
  End If
End If

'vypis chyby do prvniho sloupce
If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaTp = Kontrola
End Function

'###############
'kontrola VIN
'###############
Public Function KontrolaVin(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 Dim text_chyby As String
Retezec = UCase(Trim(Retezec))

'kvuli kontrole dva ze tri
If ((public_kontrola_dva_ze_tri_dobry = True) And (Retezec = "")) Then
  KontrolaVin = True
  Exit Function
End If

Dim Kontrola As Boolean
Kontrola = True

If (Retezec = "") Then
  text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - VIN - nen|fffd| vypln|fffd|no"
  Kontrola = False
Else
  If (Len(Retezec) > 17) Then
    text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - VIN - je del|fffd||fffd| ne|fffd| 17 znak|fffd|"
    Kontrola = False
  Else
    i = 1
    For i = 1 To Len(Retezec) Step 1  'zpracovani radku
    Select Case Mid(Retezec, i, 1)
      Case "A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"
      Case Else
        Kontrola = False
        chyba = chyba & Mid(Retezec, i, 1)
      End Select
    Next i

    If (Kontrola = False) Then
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - VIN obsahuje nep|fffd||fffd|pustn|fffd| hodnoty (" & chyba & ")"
      Kontrola = False
    End If
  End If
End If

'vypis chyby do prvniho sloupce
If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaVin = Kontrola
End Function

'###############
'kontrola duplicity SPZ a VIN
'###############
Function KontrolaDuplicitySpzVin(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaDuplicitySpzVin = True
 VIN = Trim(Cells(sour_y, const_vin_x))
 SPZ = Trim(Cells(sour_y, const_registracni_znacka_x))

 If SPZ <> "" And VIN <> "" And SPZ = VIN Then
  KontrolaDuplicitySpzVin = False
  'obarveni SPZ a VIN
  Cells(sour_y, const_vin_x).Interior.ColorIndex = 3
  Cells(sour_y, const_registracni_znacka_x).Interior.ColorIndex = 3
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - shoduje se RZ a VIN", sour_x, sour_y)
 End If

End Function

'###############
'kontrola cislel - Objem / V|fffd|kon / Hmotnost / Po|fffd|et sedadel
'###############
Public Function KontrolaCisel(Retezec As String, sour_x As Integer, sour_y As Long, typ) As Boolean
 Dim text_chyby As String, Kontrola As Boolean
Kontrola = True

'objem a vykon nejsou povinne polozky
If ((typ = "objem") Or (typ = "vykon")) Then
  If (Retezec = "") Then
    KontrolaCisel = True
    Exit Function
  End If
End If

'zda je hodnota cislo
If Not IsNumeric(Retezec) Then
  Select Case typ
    Case "objem"
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - objem - nen|fffd| vypl|fffd|no cel|fffd| |fffd||fffd|slo"
    Case "vykon"
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - v|fffd|kon - nen|fffd| vypln|fffd|no cel|fffd| |fffd||fffd|slo"
    Case "hmotnost"
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - hmotnost - nen|fffd| vypln|fffd|no cel|fffd| |fffd||fffd|slo"
    Case "pocet sedadel"
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - po|fffd|et sedadel - nen|fffd| vypln|fffd|no cel|fffd| |fffd||fffd|slo"
  End Select
  Kontrola = False
Else
'zda je hodnota cele cislo
  If (Not (CStr(Round(Retezec)) = CStr(Retezec))) Then
    Select Case typ
      Case "objem"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - objem - nen|fffd| vypl|fffd|no cel|fffd| |fffd||fffd|slo"
      Case "vykon"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - v|fffd|kon - nen|fffd| vypln|fffd|no cel|fffd| |fffd||fffd|slo"
      Case "hmotnost"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - hmotnost - nen|fffd| vypln|fffd|no cel|fffd| |fffd||fffd|slo"
      Case "pocet sedadel"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - po|fffd|et sedadel - nen|fffd| vypln|fffd|no cel|fffd| |fffd||fffd|slo"
    End Select
    Kontrola = False
  Else
'zda je hodnota v intervalu
    If (Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex <> 3) Then
      kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))
      Select Case typ
        Case "objem"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - objem - zad|fffd|no mimo p|fffd||fffd|pustn|fffd| rozmez|fffd|"
          Select Case kod_vozidla
            Case "O"
              Kontrola = JeVIntervalu(Retezec, 0, 10000)
            Case "D"
              Kontrola = JeVIntervalu(Retezec, 0, 10000)
            Case "M"
              Kontrola = JeVIntervalu(Retezec, 1, 2000)
            Case "N"
              Kontrola = JeVIntervalu(Retezec, 1, 20000)
            Case "H"
              Kontrola = JeVIntervalu(Retezec, 1, 20000)
            Case "A"
              Kontrola = JeVIntervalu(Retezec, 1, 20000)
            Case "J"
              Kontrola = JeVIntervalu(Retezec, 0, 0)
            Case "P"
              Kontrola = JeVIntervalu(Retezec, 0, 0)
            Case "PT"
              Kontrola = JeVIntervalu(Retezec, 0, 0)
            Case "T"
              Kontrola = JeVIntervalu(Retezec, 1, 20000)
            Case "X"
              Kontrola = JeVIntervalu(Retezec, 1, 20000)
            Case "SAN"
              Kontrola = JeVIntervalu(Retezec, 1, 10000)
            Case "OB"
              Kontrola = JeVIntervalu(Retezec, 1, 10000)
            Case "VOZ"
              Kontrola = JeVIntervalu(Retezec, 1, 10000)
            Case Else
              Kontrola = False
              text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - objem - chyba - neznam|fffd| druh vozidla"
          End Select

        Case "vykon"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - v|fffd|kon - zad|fffd|no mimo p|fffd||fffd|pustn|fffd| rozmez|fffd|"
          Select Case kod_vozidla
            Case "O"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "D"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "M"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "N"
              Kontrola = JeVIntervalu(Retezec, 1, 1000)
            Case "H"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "A"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "J"
              Kontrola = JeVIntervalu(Retezec, 0, 500)
            Case "P"
              Kontrola = JeVIntervalu(Retezec, 0, 0)
            Case "PT"
              Kontrola = JeVIntervalu(Retezec, 0, 0)
            Case "T"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "X"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "SAN"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "OB"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case "VOZ"
              Kontrola = JeVIntervalu(Retezec, 1, 500)
            Case Else
              Kontrola = False
              text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - v|fffd|kon - chyba - neznam|fffd| druh vozidla"
          End Select

        Case "hmotnost"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - hmotnost - zad|fffd|no mimo p|fffd||fffd|pustn|fffd| rozmez|fffd|"
          Select Case kod_vozidla
            Case "O"
              Kontrola = JeVIntervalu(Retezec, 1, 3500)
            Case "D"
              Kontrola = JeVIntervalu(Retezec, 1, 3500)
            Case "M"
              Kontrola = JeVIntervalu(Retezec, 1, 3000)
            Case "N"
              Kontrola = JeVIntervalu(Retezec, 1, 99999)
            Case "H"
              Kontrola = JeVIntervalu(Retezec, 1, 99999)
            Case "A"
              Kontrola = JeVIntervalu(Retezec, 1, 40000)
            Case "J"
              Kontrola = JeVIntervalu(Retezec, 1, 40000)
            Case "P"
              Kontrola = JeVIntervalu(Retezec, 1, 40000)
            Case "PT"
              Kontrola = JeVIntervalu(Retezec, 1, 99999)
            Case "T"
              Kontrola = JeVIntervalu(Retezec, 1, 50000)
            Case "X"
              Kontrola = JeVIntervalu(Retezec, 0, 90000)
            Case "SAN"
              Kontrola = JeVIntervalu(Retezec, 1, 3500)
            Case "OB"
              Kontrola = JeVIntervalu(Retezec, 1, 8000)
            Case "VOZ"
              Kontrola = JeVIntervalu(Retezec, 0, 90000)
            Case Else
              Kontrola = False
              text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - hmotnost - chyba - neznam|fffd| druh vozidla"
          End Select

        Case "pocet sedadel"
          text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - po|fffd|et sedadel - zad|fffd|no mimo p|fffd||fffd|pustn|fffd| rozmez|fffd|"
          Select Case kod_vozidla
            Case "O"
              Kontrola = JeVIntervalu(Retezec, 1, 9)
            Case "D"
              Kontrola = JeVIntervalu(Retezec, 1, 9)
            Case "M"
              Kontrola = JeVIntervalu(Retezec, 1, 3)
            Case "N"
              Kontrola = JeVIntervalu(Retezec, 1, 9)
            Case "H"
              Kontrola = JeVIntervalu(Retezec, 1, 6)
            Case "A"
              Kontrola = JeVIntervalu(Retezec, 1, 99)
            Case "J"
              Kontrola = JeVIntervalu(Retezec, 1, 99)
            Case "P"
              Kontrola = JeVIntervalu(Retezec, 0, 0)
            Case "PT"
              Kontrola = JeVIntervalu(Retezec, 0, 0)
            Case "T"
              Kontrola = JeVIntervalu(Retezec, 1, 10)
            Case "X"
              Kontrola = JeVIntervalu(Retezec, 1, 10)
            Case "SAN"
              Kontrola = JeVIntervalu(Retezec, 1, 9)
            Case "OB"
              Kontrola = JeVIntervalu(Retezec, 1, 9)
            Case "VOZ"
              Kontrola = JeVIntervalu(Retezec, 1, 2)
            Case Else
              Kontrola = False
              text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - po|fffd|et sedadel - chyba - nezn|fffd|m|fffd| druh vozidla"
          End Select
      End Select
    Else
      Select Case typ
        Case "objem"
          typ = "objem"
        Case "hmotnost"
          typ = "hmotnost"
        Case "pocet sedadel"
          typ = "po|fffd|et sedadel"
        Case "vykon"
          typ = "v|fffd|kon"
      End Select
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - " & typ & " - nelze zkontrolovat, nen|fffd| ur|fffd|en spr|fffd|vn|fffd| druh vozidla"
      Kontrola = False
    End If
  End If
End If

'vypis chyby do prvniho sloupce
If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaCisel = Kontrola
End Function

'###############
'kontrola roku vyroby
'###############
Public Function KontrolaRokVyroby(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
Retezec = UCase(Trim(Retezec))

Dim Kontrola As Boolean
Kontrola = True

Dim text_chyby As String

If ((IsDate(Retezec)) Or (IsNumeric(Retezec))) Then
  If (Retezec <> "") Then
    'kontrola intervalu
    If ((CInt(Retezec) < 1901) Or (CInt((Year(Date))) < CInt(Retezec))) Then
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - rok v|fffd|roby - neobsahuje p|fffd||fffd|pustnou hodnotu"
      Kontrola = False
    End If
  End If
Else
  text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - rok v|fffd|roby - neobsahuje p|fffd||fffd|pustnou hodnotu"
  Kontrola = False
End If

'vypis chyby do prvniho sloupce
If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaRokVyroby = Kontrola
End Function

'###############
'kontrola tovarni znacky - porovnani se zackami v listu znacky, ktery je razen dle cetnosti v Golemu
'###############
Public Function KontrolaTovarniZnacka(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 Dim i As Integer
 KontrolaTovarniZnacka = True
 Retezec = UCase(Trim(Retezec))

 If Retezec = "" Then
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - tov|fffd|rn|fffd| zna|fffd|ka - nen|fffd| vypln|fffd|na", sour_x, sour_y)
 Else
  For i = 1 To const_pocet_tovarnich_znacek
   If Retezec = Sheets("znacky").Cells(i, 1) Then Exit Function
  Next i
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - nezn|fffd|m|fffd| zna|fffd|ka vozidla", sour_x, sour_y)
 End If

 KontrolaTovarniZnacka = False
End Function


'######################
'######################
'  HAV
'######################
'######################
Public Function PojistnaCastkaVozidla(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 PojistnaCastkaVozidla = False

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    PojistnaCastkaVozidla = True
   Else
    Call ZapisChybyDoBunky(" -HAV - pojistn|fffd| |fffd||fffd|stka vozidla - u typu flotily A nebo T nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
   Retezec = Trim(Retezec)
   If Retezec = "" Then
    Call ZapisChybyDoBunky(" -HAV - pojistn|fffd| |fffd||fffd|stka vozidla - |fffd|daj nen|fffd| vypln|fffd|n", sour_x, sour_y)
   Else
    If IsNumeric(Retezec) Then
     Retezec = CLng(Retezec)
     If Retezec <= 0 Or Retezec > 10000000 Then
      Call ZapisChybyDoBunky(" -HAV - pojistn|fffd| |fffd||fffd|stka vozidla - hodnota je mimo rozmez|fffd|", sour_x, sour_y)
     Else
      PojistnaCastkaVozidla = True
      If Retezec > 1000000 Then
       Cells(sour_y, const_pojistna_castka_x).Select
       ZvyraznitPrilozeniPotvrzeni
       public_pojistna_castka_vozidla_prilozit_povoleni = True
      End If
     End If
    Else
     Call ZapisChybyDoBunky(" -HAV - pojistn|fffd| |fffd||fffd|stka vozidla - nen|fffd| vypln|fffd|n|fffd| |fffd||fffd|seln|fffd| hodnota", sour_x, sour_y)
    End If
   End If
 End Select

End Function

Public Function KontrolaKodSpoluucasti(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaKodSpoluucasti = False

'kontrola hodnot
 If Cells(const_typ_flotily_y, const_typ_flotily_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_kod_spoluucasti_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_hmotnost_x).Interior.ColorIndex = 3 Then
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - nelze zkontrolovat", sour_x, sour_y)
  Exit Function
 End If

 Select Case public_kod_produktu
  Case "K"
   druh_vozidla = Cells(sour_y, const_druh_vozidla_x)
   kod_vozidla = PrevodKodVozidla(druh_vozidla)
   hmotnost = Cells(sour_y, const_hmotnost_x)

   If druh_vozidla = "P|fffd||fffd|V|fffd|S" And hmotnost > 750 Then kod_vozidla = "PT"

   Select Case kod_vozidla
    Case "O", "D", "P"
     If Retezec <> "2" And Retezec <> "5" And Retezec <> "10" Then
      Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - pro tento druh vozidla nen|fffd| p|fffd||fffd|pustn|fffd|", sour_x, sour_y)
     Else
      KontrolaKodSpoluucasti = True
     End If
    Case "M"
     If Retezec <> "5" And Retezec <> "10" Then
      Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - pro tento druh vozidla nen|fffd| p|fffd||fffd|pustn|fffd|", sour_x, sour_y)
     Else
      KontrolaKodSpoluucasti = True
     End If
    Case "N", "H", "A", "J", "T", "X", "PT"
     If Retezec <> "5" And Retezec <> "10" And Retezec <> "20" Then
      Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - pro tento druh vozidla nen|fffd| p|fffd||fffd|pustn|fffd|", sour_x, sour_y)
     Else
      KontrolaKodSpoluucasti = True
     End If
    Case "SAN", "OB", "VOZ"
     If Cells(sour_y, const_hmotnost_x).Interior.ColorIndex <> 3 Then
      hmotnost = Cells(sour_y, const_hmotnost_x)
      If hmotnost < 3500 Then
       If Retezec <> "2" And Retezec <> "5" And Retezec <> "10" Then
        Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - pro tento druh vozidla nen|fffd| p|fffd||fffd|pustn|fffd|", sour_x, sour_y)
       Else
        KontrolaKodSpoluucasti = True
       End If
      Else
       If Retezec <> "5" And Retezec <> "10" And Retezec <> "20" Then
        Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - pro tento druh vozidla nen|fffd| p|fffd||fffd|pustn|fffd|", sour_x, sour_y)
       Else
        KontrolaKodSpoluucasti = True
       End If
      End If
     Else
      Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - nelze ur|fffd|it", sour_x, sour_y)
     End If
   End Select
  Case "S"
   If Retezec <> "2" And _
      Retezec <> "5" And _
      Retezec <> "10" And _
      Retezec <> "20" And _
      Retezec <> "S1" And _
      Retezec <> "S50" And _
      Retezec <> "S100" And _
      Retezec <> "S300" And _
      Retezec <> "S1001" And _
      Retezec <> "S2002" And Retezec <> "S2005" And _
      Retezec <> "S3003" And _
      Retezec <> "S5002" And Retezec <> "S5005" And _
      Retezec <> "S10005" And Retezec <> "S10030" And Retezec <> "S10040" And Retezec <> "S10050" And Retezec <> "S10100" And _
      Retezec <> "S15015" And _
      Retezec <> "S20020" And Retezec <> "S20050" And _
      Retezec <> "S25050" And _
      Retezec <> "S30050" Then
    Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - k|fffd|d spolu|fffd||fffd|asti - neobsahuje p|fffd||fffd|pustn|fffd| k|fffd|d", sour_x, sour_y)
   Else
    KontrolaKodSpoluucasti = True
   End If
  Case "A", "T"
   If Retezec = "" Then
    KontrolaKodSpoluucasti = True
   Else
    Call ZapisChybyDoBunky(" -HAV - k|fffd|d spolu|fffd||fffd|asti- nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
 End Select

End Function

'######################
'######################
'  Doplnkova pojisteni
'######################
'######################

'###############
'Celni sklo - limit plneni
'###############
Public Function KontrolaCelniSkloLimitPlneni(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaCelniSkloLimitPlneni = False

 If Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex = 3 Then
  Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo limit pln|fffd|n|fffd| - nelze zkontrolovat, nen|fffd| ur|fffd|en spr|fffd|vn|fffd| druh vozidla", sour_x, sour_y)
 End If

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    KontrolaCelniSkloLimitPlneni = True
   Else
    Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo limit pln|fffd|n|fffd| - u typu flotily A nebo T nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
   kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))
   Retezec = UCase(Trim(Retezec))
   If kod_vozidla <> "M" And kod_vozidla <> "P" And kod_vozidla <> "PT" Then
    If Retezec = "" Then
     If Cells(sour_y, const_celni_sklo_rocni_pojistne_x) <> "" Then
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo limit pln|fffd|n|fffd| - pokud je zad|fffd|no ro|fffd|n|fffd| pojistn|fffd|, mus|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
     Else
      KontrolaCelniSkloLimitPlneni = True
     End If
    Else
     If IsNumeric(Retezec) Then
      Retezec = CLng(Retezec)
      If Retezec < 5000 Or Retezec > 200000 Then
       Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo limit pln|fffd|n|fffd| - limit pln|fffd|n|fffd| nen|fffd| v rozsahu 5.000-200.000", sour_x, sour_y)
      Else
       KontrolaCelniSkloLimitPlneni = True
       If Retezec > 50000 Then
        Cells(sour_y, const_celni_sklo_limit_plneni_x).Select
        ZvyraznitPrilozeniPotvrzeni
        public_celni_sklo_limit_plneni_prilozit_povoleni = True
       End If
      End If
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo limit pln|fffd|n|fffd| - nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou", sour_x, sour_y)
     End If
    End If
   Else
    If Retezec = "" Then
     KontrolaCelniSkloLimitPlneni = True
    Else
     Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo limit pln|fffd|n|fffd| - pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat", sour_x, sour_y)
    End If
   End If
 End Select

End Function

'###############
'Celni sklo - rocni pojistne
'###############
Public Function KontrolaCelniSkloRocniPojistne(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaCelniSkloRocniPojistne = False

 If Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex = 3 Then
  Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo ro|fffd|n|fffd| pojistn|fffd| - nelze zkontrolovat, nen|fffd| ur|fffd|en spr|fffd|vn|fffd| druh vozidla", sour_x, sour_y)
 End If

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    KontrolaCelniSkloRocniPojistne = True
   Else
    Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo ro|fffd|n|fffd| pojistn|fffd| - u typu flotily A nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
   kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))
   Retezec = UCase(Trim(Retezec))
   If kod_vozidla <> "M" And kod_vozidla <> "P" And kod_vozidla <> "PT" Then
    If Retezec = "" Then
     If Cells(sour_y, const_celni_sklo_limit_plneni_x) <> "" Then
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo ro|fffd|n|fffd| pojistn|fffd| - pokud je zad|fffd|n limit pln|fffd|n|fffd|, mus|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
     Else
      KontrolaCelniSkloRocniPojistne = True
     End If
    Else
     If IsNumeric(Retezec) Then
      Retezec = CLng(Retezec)
      If Retezec < 0 Or Retezec > 100000 Then
       Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo ro|fffd|n|fffd| pojistn|fffd| - hodnota nen|fffd| v rozsahu 0-100.000", sour_x, sour_y)
      Else
       KontrolaCelniSkloRocniPojistne = True
      End If
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo ro|fffd|n|fffd| pojistn|fffd| - nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou", sour_x, sour_y)
     End If
    End If
   Else
    If Retezec = "" Then
     KontrolaCelniSkloRocniPojistne = True
    Else
     Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|eln|fffd| sklo ro|fffd|n|fffd| pojistn|fffd| - pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat", sour_x, sour_y)
    End If
   End If
 End Select

End Function

'###############
'Uraz - limit plneni
'###############
Public Function KontrolaUrazLimitPlneni(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaUrazLimitPlneni = False

 If Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex = 3 Then
  Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu  limit pln|fffd|n|fffd| - nelze ov|fffd||fffd|it, nen|fffd| ur|fffd|en spr|fffd|vn|fffd| druh vozidla", sour_x, sour_y)
 End If

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    KontrolaUrazLimitPlneni = True
   Else
    Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu  limit pln|fffd|n|fffd| - u typu flotily A nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
   kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))
   Retezec = UCase(Trim(Retezec))
   If kod_vozidla <> "M" And kod_vozidla <> "P" And kod_vozidla <> "PT" Then
    If Retezec = "" Then
     If Cells(sour_y, const_uraz_rocni_pojistne_x) <> "" Then
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu limit pln|fffd|n|fffd| - pokud je zad|fffd|no ro|fffd|n|fffd| pojistn|fffd|, mus|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
     Else
      KontrolaUrazLimitPlneni = True
     End If
    Else
     If IsNumeric(Retezec) Then
      If Retezec = "100000" Or Retezec = "200000" Or Retezec = "300000" Or Retezec = "400000" Then
       If kod_vozidla = "A" Or kod_vozidla = "J" Then
        If Cells(sour_y, const_pocet_mist_x).Interior.ColorIndex = 3 Then
         Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu  limit pln|fffd|n|fffd| - nelze ov|fffd||fffd|it", sour_x, sour_y)
        Else
         KontrolaUrazLimitPlneni = True
         pocet_mist = Cells(sour_y, const_pocet_mist_x)
         If Retezec = 400000 Then
          If pocet_mist >= 31 Then
           Cells(sour_y, const_uraz_limit_plneni_x).Select
           ZvyraznitPrilozeniPotvrzeni
           public_uraz_31_prilozit_povoleni = True
          End If
         ElseIf Retezec = 200000 Then
          If pocet_mist >= 61 Then
           Cells(sour_y, const_uraz_limit_plneni_x).Select
           ZvyraznitPrilozeniPotvrzeni
           public_uraz_61_prilozit_povoleni = True
          End If
         End If
        End If
       Else
        '100.000 je mozne zadat pouze pro pojistnou castku NOVA a musi byt placena, nejde pojistit zdarma
        If Cells(sour_y, const_pojistna_castka_nova_obecna_x).Interior.ColorIndex = 3 Then
         Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu  limit pln|fffd|n|fffd| - nelze ov|fffd||fffd|it", sour_x, sour_y)
        Else
         obecna_cena = Cells(sour_y, const_pojistna_castka_nova_obecna_x)
         Select Case obecna_cena
          Case "N"
           If Not (Retezec = "100000" Or Retezec = "200000" Or Retezec = "300000" Or Retezec = "400000") Then
            Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu limit pln|fffd|n|fffd| - tento limit nelze zadat", sour_x, sour_y)
           Else
            KontrolaUrazLimitPlneni = True
           End If
          Case "O"
           If Retezec = "100000" Then
            Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu limit pln|fffd|n|fffd| - tento limit nelze zadat", sour_x, sour_y)
           Else
            KontrolaUrazLimitPlneni = True
           End If
          Case Else
           Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu  limit pln|fffd|n|fffd| - nelze ov|fffd||fffd|it", sour_x, sour_y)
         End Select
        End If
       End If
      Else
       Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu limit pln|fffd|n|fffd| - tento limit nelze zadat", sour_x, sour_y)
      End If
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|razu limit pln|fffd|n|fffd| - nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou", sour_x, sour_y)
     End If
    End If
   Else
    If Retezec = "" Then
     KontrolaUrazLimitPlneni = True
    Else
     Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|raz limit pln|fffd|n|fffd| - pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat", sour_x, sour_y)
    End If
   End If
 End Select

End Function

'###############
'Uraz - rocni pojistne
'###############
Public Function KontrolaUrazRocniPojistne(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaUrazRocniPojistne = False

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    KontrolaUrazRocniPojistne = True
   Else
    Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|raz ro|fffd|n|fffd| pojistn|fffd| - u typu flotily A nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
   kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))
   Retezec = UCase(Trim(Retezec))
   If (kod_vozidla <> "M" And kod_vozidla <> "P" And kod_vozidla <> "PT") Or Retezec = "" Then
    If Retezec = "" Then
     If Cells(sour_y, const_uraz_limit_plneni_x) = "" Then
      KontrolaUrazRocniPojistne = True
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|raz ro|fffd|n|fffd| pojistn|fffd| - pokud je zad|fffd|n limit pln|fffd|n|fffd|, mus|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
     End If
    Else
     If IsNumeric(Retezec) Then
      If CLng(Retezec) < 0 Or CLng(Retezec) > 50000 Then
       Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|raz ro|fffd|n|fffd| pojistn|fffd| - limit pln|fffd|n|fffd| nen|fffd| v rozsahu 0-50.000", sour_x, sour_y)
      Else
       KontrolaUrazRocniPojistne = True
      End If
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|raz ro|fffd|n|fffd| pojistn|fffd| - nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou", sour_x, sour_y)
     End If
    End If
   Else
    If Retezec = "" Then
     KontrolaUrazRocniPojistne = True
    Else
     Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - |fffd|raz ro|fffd|n|fffd| pojistn|fffd| - pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat", sour_x, sour_y)
    End If
   End If
 End Select

End Function

'###############
'Zavazadla - limit plneni
'###############
Public Function KontrolaZavazadlaLimitPlneni(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaZavazadlaLimitPlneni = False

 If Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex = 3 Then
  Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla limit pln|fffd|n|fffd| - nelze ov|fffd||fffd|it, nen|fffd| ur|fffd|en spr|fffd|vn|fffd| druh vozidla", sour_x, sour_y)
 End If

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    KontrolaZavazadlaLimitPlneni = True
   Else
    Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla limit pln|fffd|n|fffd| - u typu flotily A nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
   kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))
   Retezec = UCase(Trim(Retezec))
   If kod_vozidla <> "M" And kod_vozidla <> "P" And kod_vozidla <> "PT" Then
    If Retezec = "" Then
     If Cells(sour_y, const_zavazadla_rocni_pojistne_x) = "" Then
      KontrolaZavazadlaLimitPlneni = True
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla limit pln|fffd|n|fffd| - pokud je zad|fffd|no ro|fffd|n|fffd| pojistn|fffd|, mus|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
     End If
    Else
     If IsNumeric(Retezec) Then
      If CLng(Retezec) < 5000 Or CLng(Retezec) > 100000 Then
       Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla limit pln|fffd|n|fffd| - hodnota je mimo rozmez|fffd| 5000-100.000", sour_x, sour_y)
      Else
       KontrolaZavazadlaLimitPlneni = True
       If CLng(Retezec) > 50000 Then
        Cells(sour_y, const_zavazadla_limit_plneni_x).Select
        ZvyraznitPrilozeniPotvrzeni
        public_zavazadla_limit_plneni_prilozit_povoleni = True
       End If
      End If
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla limit pln|fffd|n|fffd| - nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou", sour_x, sour_y)
     End If
    End If
   Else
    If Retezec = "" Then
     KontrolaZavazadlaLimitPlneni = True
    Else
     Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla limit pln|fffd|n|fffd|- pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat", sour_x, sour_y)
    End If
   End If
 End Select

End Function

'###############
'Zavazadla - rocni pojistne
'###############
Public Function KontrolaZavazadlaRocniPojistne(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaZavazadlaRocniPojistne = False

 If Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex = 3 Then
  Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla ro|fffd|n|fffd| pojistn|fffd| - nelze ov|fffd||fffd|it, nen|fffd| ur|fffd|en spr|fffd|vn|fffd| druh vozidla", sour_x, sour_y)
 End If

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    KontrolaZavazadlaRocniPojistne = True
   Else
    Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla ro|fffd|n|fffd| pojistn|fffd| - u typu flotily A nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
   kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))
   Retezec = UCase(Trim(Retezec))
   If kod_vozidla <> "M" And kod_vozidla <> "P" And kod_vozidla <> "PT" Then
    If Retezec = "" Then
     If Cells(sour_y, const_zavazadla_limit_plneni_x) = "" Then
      KontrolaZavazadlaRocniPojistne = True
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla ro|fffd|n|fffd| pojistn|fffd| - pokud je zad|fffd|n limit pln|fffd|n|fffd|, mus|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
     End If
    Else
     If IsNumeric(Retezec) Then
      If CLng(Retezec) < 0 Or CLng(Retezec) > 50000 Then
       Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla ro|fffd|n|fffd| pojistn|fffd| - limit pln|fffd|n|fffd| nen|fffd| v rozsahu 0-50.000", sour_x, sour_y)
      Else
       KontrolaZavazadlaRocniPojistne = True
      End If
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla ro|fffd|n|fffd| pojistn|fffd| - nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou", sour_x, sour_y)
     End If
    End If
   Else
    If Retezec = "" Then
     KontrolaZavazadlaRocniPojistne = True
    Else
     Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - zavazadla ro|fffd|n|fffd| pojistn|fffd| - pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat", sour_x, sour_y)
    End If
   End If
 End Select

End Function

'###############
'Nahradni vozidlo - rocni pojistne
'###############
Public Function KontrolaNahradniVozidloRocniPojistne(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaNahradniVozidloRocniPojistne = False

 Select Case public_kod_produktu
  Case "A", "T"
   If Retezec = "" Then
    KontrolaNahradniVozidloRocniPojistne = True
   Else
    Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - n|fffd|hradn|fffd| vozidlo ro|fffd|n|fffd| pojistn|fffd| - u typu flotily A nesm|fffd| b|fffd|t vypln|fffd|no", sour_x, sour_y)
   End If
  Case Else
'   kod_vozidla = PrevodKodVozidla(Cells(sour_y, const_druh_vozidla_x))'Opraveno a zneplatneno dle vyjadreni Dagmar Lambertov|fffd| - Nem|fffd|me v sazebn|fffd|ku nikde omezeno u jak|fffd|ho duhu vozidla lze p|fffd|ipojistit toto riziko.
   Retezec = UCase(Trim(Retezec))
'   If kod_vozidla <> "M" And kod_vozidla <> "P" And kod_vozidla <> "PT" Then
    If Retezec = "" Or Retezec = "ZDARMA" Then
     KontrolaNahradniVozidloRocniPojistne = True
    Else
     If IsNumeric(Retezec) Then
      If CLng(Retezec) < 1 Or CLng(Retezec) > 50000 Then
       Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - n|fffd|hradn|fffd| vozidlo ro|fffd|n|fffd| pojistn|fffd| - limit pln|fffd|n|fffd| nen|fffd| v rozsahu 1-50.000", sour_x, sour_y)
      Else
       KontrolaNahradniVozidloRocniPojistne = True
      End If
     Else
      Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - n|fffd|hradn|fffd| vozidlo ro|fffd|n|fffd| pojistn|fffd| - nen|fffd| zad|fffd|n |fffd||fffd|selnou hodnotou", sour_x, sour_y)
     End If
    End If
'   Else
'    If retezec = "" Then
'     KontrolaNahradniVozidloRocniPojistne = True
'    Else
'     Call ZapisChybyDoBunky(" -Dopl|fffd|kov|fffd| rizika - n|fffd|hradn|fffd| vozidlo ro|fffd|n|fffd| pojistn|fffd| - pro tento druh vozidla nelze p|fffd|ipoji|fffd|t|fffd|n|fffd| sjednat", sour_x, sour_y)
'    End If
'   End If
 End Select

End Function

'######################
'######################
'  Kalkulace
'######################
'######################

'###############
'vypocet pojistneho - rocni pojistne s celnim sklem, lhutni pojistne, rocni pojistne po sleve, lhutni pojisten po sleve
'###############
Public Function VypocetPojistneho(sour_y As Long)
 If Cells(const_typ_flotily_y, const_typ_flotily_x).Interior.ColorIndex = 3 Or _
    Cells(const_obchodni_sleva_y, const_obchodni_sleva_x).Interior.ColorIndex = 3 Or _
    Cells(const_frekvence_placeni_y, const_frekvence_placeni_x).Interior.ColorIndex = 3 Or _
 _
    Cells(sour_y, const_druh_vozidla_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_znacka_vozidla_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_typ_vozidla_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_rok_vyroby_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_hmotnost_x).Interior.ColorIndex = 3 Or _
 _
    Cells(sour_y, const_rozsah_pojisteni_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_pojistna_castka_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_pov_u_cpp_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_nestandardni_rizika_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_druh_zabezpeceni_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_kod_spoluucasti_x).Interior.ColorIndex = 3 Or _
 _
    Cells(sour_y, const_celni_sklo_rocni_pojistne_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_uraz_rocni_pojistne_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_zavazadla_rocni_pojistne_x).Interior.ColorIndex = 3 Or _
    Cells(sour_y, const_pronajem_vozidla_rocni_pojistne_x).Interior.ColorIndex = 3 Then GoTo vynulovani_vypoctu
  
'vypocitava se
 Dim rocpoj_zakladni As Long, rocpoj_BS_BD As Long, rocpoj_BS_SD As Long, lhutpoj_BS_SD As Long, rocpoj_PS_SD As Long, lhutpoj_PS_SD As Long

'parametry vypoctu - FLOTILA
 Dim obchodni_sleva_koeficient As Single, frekvence_placeni As Byte

'parametry vypoctu - VOZIDLO
 Dim druh_vozidla As String, znacka_vozidla As String, typ_vozidla As String, rok_vyroby As Integer, hmotnost As Single

'parametry vypoctu - HAV
 Dim rozsah_pojisteni As String, pojistna_castka As Long, pov_u_cpp As String, nestandardni_rizika As String, druh_zabezbeceni As String, kod_spoluucasti As String

'parametry vypoctu - DOPLNKOVA RIZIKA
 Dim celni_sklo As Long, uraz As Long, zavazadla As Long, nahradni_vozidlo_hodnota As String, nahradni_vozidlo As Long

'parametry vypoctu - KALKULACE
 Dim rocni_pojistne As Long

'parametry vypoctu - POMOCNE
 Dim kod_vozidla As String, kod_sazby As String, sazba As Single

 obchodni_sleva_koeficient = Cells(const_obchodni_sleva_y, const_obchodni_sleva_x)
 frekvence_placeni = Cells(const_frekvence_placeni_y, const_frekvence_placeni_x)

 druh_vozidla = Cells(sour_y, const_druh_vozidla_x)
 znacka_vozidla = Cells(sour_y, const_znacka_vozidla_x)
 typ_vozidla = Cells(sour_y, const_typ_vozidla_x)
 hmotnost = Cells(sour_y, const_hmotnost_x)

 rozsah_pojisteni = Cells(sour_y, const_rozsah_pojisteni_x)
 pojistna_castka = Cells(sour_y, const_pojistna_castka_x)
 kod_spoluucasti = Cells(sour_y, const_kod_spoluucasti_x)

 Select Case public_kod_produktu
  Case "K", "S"
   'urceni druhu/kodu vozidla
   kod_vozidla = PrevodKodVozidla(druh_vozidla)
   Select Case kod_vozidla
    Case "D"
     kod_vozidla = "O"
    Case "SAN", "OB"
     If hmotnost < 3500 Then
      kod_vozidla = "O"
     Else
      kod_vozidla = "N"
     End If
    Case "J"
     kod_vozidla = "A"
    Case "P"
     If hmotnost > 750 Then kod_vozidla = "PT"
   End Select
  
   If public_kod_produktu = "K" Then
    kod_sazby = kod_vozidla & rozsah_pojisteni & kod_spoluucasti

    If kod_vozidla = "O" Then
     kod_sazby = kod_sazby & " " & znacka_vozidla
     Select Case znacka_vozidla
      Case "|fffd|KODA"
       If (InStrRev(typ_vozidla, "FABIA")) Then kod_sazby = kod_sazby & " " & "FABIA"
       If (InStrRev(typ_vozidla, "OCTAVIA")) Then kod_sazby = kod_sazby & " " & "OCTAVIA"
       If (InStrRev(typ_vozidla, "ROOMSTER")) Then kod_sazby = kod_sazby & " " & "ROOMSTER"
       If (InStrRev(typ_vozidla, "SUPERB")) Then kod_sazby = kod_sazby & " " & "SUPERB"
       If (InStrRev(typ_vozidla, "YETI")) Then kod_sazby = kod_sazby & " " & "YETI"
       If (InStrRev(typ_vozidla, "CITIGO")) Then kod_sazby = kod_sazby & " " & "CITIGO"
       If (InStrRev(typ_vozidla, "RAPID")) Then kod_sazby = kod_sazby & " " & "RAPID"
       If (InStrRev(typ_vozidla, "KODIAQ")) Then kod_sazby = kod_sazby & " " & "KODIAQ"
       If (InStrRev(typ_vozidla, "FELICIA")) Then kod_sazby = kod_sazby & " " & "FELICIA"
       If (InStrRev(typ_vozidla, "PICK UP")) Then kod_sazby = kod_sazby & " " & "PICK UP"
       If (InStrRev(typ_vozidla, "KAROQ")) Then kod_sazby = kod_sazby & " " & "KAROQ"
       If (InStrRev(typ_vozidla, "PRAKTIK")) Then kod_sazby = kod_sazby & " " & "PRAKTIK"
     End Select
    End If

    sazba = UrcitSazbu(kod_sazby)
    If kod_vozidla = "O" And sazba = -1 Then
     public_znacka_vozidla_povoleni = True
     Cells(sour_y, const_znacka_vozidla_x).Select
     ZvyraznitPrilozeniPotvrzeni
    End If
   Else
    'SPECIALNI
    If kod_vozidla = "O" Then
     kod_sazby = "OA2" & " " & znacka_vozidla
     sazba = UrcitSazbu(kod_sazby)
     If (sazba = -1) Then public_znacka_vozidla_povoleni = True
    End If
    sazba = -1
   End If
  Case Else
   'ASISTENCE PLUS a TIR
 End Select

 Kontrola = True
'nacteni/urceni nekterych potrebnych hodnot
 If sazba = -1 Then
  If Cells(sour_y, const_rocpoj_zakladni) <> "" And Cells(sour_y, const_rocpoj_zakladni) <> 0 Then
   If IsNumeric(Cells(sour_y, const_rocpoj_zakladni)) Then
    If Cells(sour_y, const_rocpoj_zakladni) = CSng(Cells(sour_y, const_rocpoj_zakladni)) Then
     rocpoj_zakladni = Cells(sour_y, const_rocpoj_zakladni)
    Else
     Call ZapisChybyDoBunky(" -Kalkulace - ro|fffd|n|fffd| pojistn|fffd| z|fffd|kladn|fffd|- hodnota mus|fffd| b|fffd|t cel|fffd| |fffd||fffd|slo", const_rocpoj_zakladni, sour_y)
     Kontrola = False
    End If
   Else
    Call ZapisChybyDoBunky(" -Kalkulace - ro|fffd|n|fffd| pojistn|fffd| z|fffd|kladn|fffd|- hodnota mus|fffd| b|fffd|t cel|fffd| |fffd||fffd|slo", const_rocpoj_zakladni, sour_y)
    Kontrola = False
   End If
  Else
   Call ZapisChybyDoBunky(" -Kalkulace - ro|fffd|n|fffd| pojistn|fffd| z|fffd|kladn|fffd|- hodnota mus|fffd| b|fffd|t vypln|fffd|na", const_rocpoj_zakladni, sour_y)
   Kontrola = False
  End If
 Else
  rocpoj_zakladni = Round(pojistna_castka * (sazba / 100) + 0.0005)
 End If

'zda jsou vstupni hodnoty pro vypocty dobre vyplneny
 If Not Kontrola Then
vynulovani_vypoctu:
  
  'vynulovani
  Cells(sour_y, const_rocpoj_BS_BD) = ""
  Cells(sour_y, const_rocpoj_BS_SD) = ""
  Cells(sour_y, const_lhutpoj_BS_SD) = ""
  Cells(sour_y, const_rocpoj_PS_SD) = ""
  Cells(sour_y, const_lhutpoj_PS_SD) = ""
  
  'obarveni
  Cells(sour_y, const_rocpoj_zakladni).Interior.ColorIndex = 3
  Cells(sour_y, const_rocpoj_BS_BD).Interior.ColorIndex = 3
  Cells(sour_y, const_rocpoj_BS_SD).Interior.ColorIndex = 3
  Cells(sour_y, const_lhutpoj_BS_SD).Interior.ColorIndex = 3
  Cells(sour_y, const_rocpoj_PS_SD).Interior.ColorIndex = 3
  Cells(sour_y, const_lhutpoj_PS_SD).Interior.ColorIndex = 3

  Call ZapisChybyDoBunky(" -Kalkulace - v|fffd|po|fffd|ty - nejsou spr|fffd|vn|fffd| vypln|fffd|ny v|fffd|echny vstupn|fffd| |fffd|daje", const_rocpoj_zakladni, sour_y)
  Exit Function
 End If

'nacteni nutnych udaju pro vypocty
 obchodni_sleva = 1 - (Cells(const_obchodni_sleva_y, const_obchodni_sleva_x)) / 100
 frekvence_placeni = Cells(const_frekvence_placeni_y, const_frekvence_placeni_x)

 rok_vyroby = Cells(sour_y, const_rok_vyroby_x)
 pov_u_cpp = Cells(sour_y, const_pov_u_cpp_x)
 nestandardni_rizika = Cells(sour_y, const_nestandardni_rizika_x)
 druh_zabezbeceni = Cells(sour_y, const_druh_zabezpeceni_x)
 celni_sklo = Cells(sour_y, const_celni_sklo_rocni_pojistne_x)
 uraz = Cells(sour_y, const_uraz_rocni_pojistne_x)
 zavazadla = Cells(sour_y, const_zavazadla_rocni_pojistne_x)
'nahradni vozidlo je bud zadane cislem nebo retezcem ZDARMA
 nahradni_vozidlo_hodnota = Cells(sour_y, const_pronajem_vozidla_rocni_pojistne_x)
 If IsNumeric(nahradni_vozidlo_hodnota) Then
  nahradni_vozidlo = CLng(nahradni_vozidlo_hodnota)
 Else
  nahradni_vozidlo = 0
 End If

 Select Case rok_vyroby
  Case 2019: rok_vyroby_koeficient = 0.95
  Case 2018: rok_vyroby_koeficient = 1.05
  Case 2017: rok_vyroby_koeficient = 1.13
  Case 2016: rok_vyroby_koeficient = 1.21
  Case 2015: rok_vyroby_koeficient = 1.34
  Case 2014: rok_vyroby_koeficient = 1.42
  Case 2013: rok_vyroby_koeficient = 1.5
  Case 2012: rok_vyroby_koeficient = 1.58
  Case 2011: rok_vyroby_koeficient = 1.66
  Case 2010: rok_vyroby_koeficient = 1.78
  Case 2009: rok_vyroby_koeficient = 1.92
  Case Else: rok_vyroby_koeficient = 2.09
 End Select

 Select Case pov_u_cpp
  Case "A": pov_u_cpp_koeficient = 0.95
  Case "N": pov_u_cpp_koeficient = 1
 End Select

 Select Case nestandardni_rizika
  Case "B": nestandardni_rizika_koeficient = 1
  Case "T": nestandardni_rizika_koeficient = 1.5
  Case "A": nestandardni_rizika_koeficient = 2
  Case "ADR": nestandardni_rizika_koeficient = 2
 End Select

 If rozsah_pojisteni = "A" Or rozsah_pojisteni = "O" Then
  Select Case druh_zabezbeceni
   Case "B": druh_zabezbeceni_koeficient = 1
   Case "M": druh_zabezbeceni_koeficient = 0.95
   Case "A": druh_zabezbeceni_koeficient = 0.85
   Case "MA", "AM": druh_zabezbeceni_koeficient = 0.8
  End Select
 Else
  druh_zabezbeceni_koeficient = 1
 End If
  
'pokud je specialni flotila, tak koeficienty musi byt rovny jedne
 If public_kod_produktu = "S" Then
  rok_vyroby_koeficient = 1
  pov_u_cpp_koeficient = 1
  nestandardni_rizika_koeficient = 1
  druh_zabezbeceni_koeficient = 1
 End If

'vypocty pojistneho
 If public_kod_produktu = "K" Or public_kod_produktu = "S" Then
  rocpoj_BS_BD = Round(rocpoj_zakladni * rok_vyroby_koeficient * nestandardni_rizika_koeficient * druh_zabezbeceni_koeficient + 0.00005) * pov_u_cpp_koeficient
  rocpoj_BS_SD = rocpoj_BS_BD + celni_sklo + uraz + zavazadla + nahradni_vozidlo
  lhutpoj_BS_SD = rocpoj_BS_SD / frekvence_placeni
  rocpoj_PS_SD = rocpoj_BS_SD * ((100 - obchodni_sleva_koeficient) / 100)
  lhutpoj_PS_SD = Round(rocpoj_PS_SD / frekvence_placeni + 0.0005)
  
  Cells(sour_y, const_rocpoj_zakladni) = rocpoj_zakladni
  Cells(sour_y, const_rocpoj_BS_BD) = rocpoj_BS_BD
  Cells(sour_y, const_rocpoj_BS_SD) = rocpoj_BS_SD
  Cells(sour_y, const_lhutpoj_BS_SD) = lhutpoj_BS_SD
  Cells(sour_y, const_rocpoj_PS_SD) = rocpoj_PS_SD
  Cells(sour_y, const_lhutpoj_PS_SD) = lhutpoj_PS_SD
 Else
  If public_kod_produktu = "A" Then
   If hmotnost <= 3500 Then
    rocpoj_zakladni = 500
   Else
    rocpoj_zakladni = 1900
   End If
  Else
   If hmotnost <= 3500 Then
    rocpoj_zakladni = 1500
   Else
    rocpoj_zakladni = 6200
   End If
  End If
  lhutpoj_PS_SD = rocpoj_zakladni / frekvence_placeni
  
  Cells(sour_y, const_rocpoj_zakladni) = rocpoj_zakladni
  Cells(sour_y, const_rocpoj_BS_BD) = ""
  Cells(sour_y, const_rocpoj_BS_SD) = ""
  Cells(sour_y, const_lhutpoj_BS_SD) = ""
  Cells(sour_y, const_rocpoj_PS_SD) = ""
  Cells(sour_y, const_lhutpoj_PS_SD) = lhutpoj_PS_SD
 End If

 VypocetPojistneho = True
End Function

'######################
'######################
'  OBECNE - vyuzivaji se na ruznych mistech
'######################
'######################

'###############
'kontrola zda je v bunce vyplnena libovolna hodnota
'###############
'odstraneni prebytecnych mezer
'pokud je bunka prazdna
'  urci se jake zneni chybove hlasky se ma zapsat do prvniho sloupce a obarvi prazdnou bunku
'  zapise se hlaska do prvniho sloupce
'typ = urcuje, jaka konkretni polozka je testovana a jaka chybova hlaska se ma vyplnit - hodnota je primarne nacitana z listu "kontrola"
Public Function KontrolaVyplneni(Retezec As String, sour_x As Integer, sour_y As Long, typ) As Boolean
Retezec = Trim(Retezec)

'zneni chybove hlasky pro uzivatele a vypis chyby do prvniho sloupce a obarveni bunky s chybou
If (Retezec = "") Then
  Kontrola = False
  Dim text_chyby As String
  Select Case typ
    'drzitel - prijmeni
    Case "drzitel - prijmeni"
      text_chyby = " -Dr|fffd|itel - p|fffd||fffd|jmen|fffd|/n|fffd|zev spole|fffd|nosti - nen|fffd| vypln|fffd|n|fffd|"
    'vlastnik - prijmeni
    Case "vlastnik - prijmeni"
      text_chyby = " -Vlastn|fffd|k - p|fffd||fffd|jmen|fffd|/n|fffd|zev spole|fffd|nosti - nen|fffd| vypln|fffd|n|fffd|"
    'drzitel - ulice
    Case "drzitel - ulice"
      text_chyby = " -Dr|fffd|itel - ulice - nen|fffd| vypln|fffd|na"
    'vlastnik - ulice
    Case "vlastnik - ulice"
      text_chyby = " -Vlastn|fffd|k - ulice - nen|fffd| vypln|fffd|na"
    'drzitel - cislo domu
    Case "drzitel - cislo domu"
      text_chyby = " -Dr|fffd|itel - |fffd||fffd|slo domu - nen|fffd| vypln|fffd|no"
    'vlastnik - cislo domu
    Case "vlastnik - cislo domu"
      text_chyby = " -Vlastn|fffd|k - |fffd||fffd|slo domu - nen|fffd| vypln|fffd|no"
    'drzitel - obec
    Case "drzitel - obec"
      text_chyby = " -Dr|fffd|itel - obec - nen|fffd| vypln|fffd|na"
    'vlastnik - cislo domu
    Case "vlastnik - obec"
      text_chyby = " -Vlastn|fffd|k - obec - nen|fffd| vypln|fffd|na"
    'predmet pojisteni - typ vozidla
    Case "predmet pojisteni - typ vozidla"
      text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - typ vozidla - nen|fffd| vypln|fffd|n"
    Case Else
      text_chyby = "CHYBA - kontrola vypln|fffd|n|fffd|"
  End Select
  Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
End If
KontrolaVyplneni = Kontrola
End Function

'###############
'kontrola zda je v bunce vyplnena spravna hodnota - prednastavene povolene hodnoty
'###############
Public Sub KontrolaVyplneniVolba(Retezec As String, sour_x As Integer, sour_y As Long, typ As Variant)
 Dim text_chyby As String

 Retezec = UCase(Trim(Retezec))

 Select Case typ
  Case "smlouva-kratkodoba-smlouva"
   If Retezec <> "A" And Retezec <> "N" Then text_chyby = " -Smlouva - kratkodob|fffd| poji|fffd|t|fffd|n|fffd| - neobsahuje hodnotu A/N"
  Case "predmet-pojisteni-druh-vozidla"
   If Retezec <> "OSOBN|fffd| AUTOMOBIL" And _
      Retezec <> "OBYTN|fffd| AUTOMOBIL" And _
      Retezec <> "SANITN|fffd| AUTOMOBIL" And _
      Retezec <> "U|fffd|ITKOV|fffd| AUTOMOBIL" And _
      Retezec <> "MOTOCYKL" And _
      Retezec <> "N|fffd|KLADN|fffd| AUTOMOBIL" And _
      Retezec <> "TAHA|fffd| N|fffd|V|fffd|S|fffd|" And _
      Retezec <> "AUTOBUS" And _
      Retezec <> "TROLEJBUS" And _
      Retezec <> "P|fffd||fffd|V|fffd|S" And _
      Retezec <> "N|fffd|V|fffd|S" And _
      Retezec <> "TRAKTOR" And _
      Retezec <> "PRACOVN|fffd| STROJ" And _
      Retezec <> "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K" Then text_chyby = " -P|fffd|edm|fffd|t poj. - druh vozidla - nen|fffd| vypln|fffd|na p|fffd||fffd|pustn|fffd| hodnota (viz n|fffd|pov|fffd|da)"
  Case "predmet-pojisteni-leasingovy-najem"
   If Retezec <> "A" And Retezec <> "N" Then text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - leasingov|fffd| n|fffd|jem - neobsahuje hodnotu A/N"
  Case "predmet-pojisteni-vinkulace"
   If Retezec <> "A" And Retezec <> "N" Then text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - vinkulace - neobsahuje hodnotu A/N"
  Case "predmet-pojisteni-zvlastni-vybava"
   If Retezec <> "A" And Retezec <> "N" Then text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - zvl|fffd|tn|fffd| v|fffd|bava - neobsahuje hodnotu A/N"
  Case "hav-rozsah-pojisteni"
   Select Case public_kod_produktu
    Case "A": If Retezec <> "AP" Then text_chyby = " -HAV - rozsah poji|fffd|t|fffd|n|fffd| - u typu flotily A mus|fffd| b|fffd|t vypln|fffd|no AP"
    Case "T": If Retezec <> "AT" Then text_chyby = " -HAV - rozsah poji|fffd|t|fffd|n|fffd| - u typu flotily T mus|fffd| b|fffd|t vypln|fffd|no AT"
    Case "K", "S": If Retezec <> "A" And Retezec <> "H" And Retezec <> "O" Then text_chyby = " -HAV - rozsah poji|fffd|t|fffd|n|fffd| - neobsahuje hodnotu A/H/O"
   End Select
  Case "hav-pojistna-castka"
   Select Case public_kod_produktu
    Case "A", "T": If Retezec <> "" Then text_chyby = " -HAV - pojistn|fffd| |fffd||fffd|stka nov|fffd|/obecn|fffd|- u typu flotily A nebo T nesm|fffd| b|fffd|t vypln|fffd|no"
    Case "K": If Retezec <> "O" Then text_chyby = " -HAV - pojistn|fffd| |fffd||fffd|stka nov|fffd|/obecn|fffd| - neobsahuje hodnotu O"
    Case "S": If Retezec <> "O" And Retezec <> "N" Then text_chyby = " -HAV - pojistn|fffd| |fffd||fffd|stka nov|fffd|/obecn|fffd| - neobsahuje hodnotu N/O"
   End Select
  Case "hav-vychozi-cena"
   Select Case public_kod_produktu
    Case "A", "T": If Retezec <> "" Then text_chyby = " -HAV - v|fffd|choz|fffd| cena v|fffd|. DPH - u typu flotily A nebo T nesm|fffd| b|fffd|t vypln|fffd|no"
    Case "K", "S": If Retezec <> "A" And Retezec <> "N" Then text_chyby = " -HAV - v|fffd|choz|fffd| cena v|fffd|. DPH - neobsahuje hodnotu A/N"
   End Select
  Case "hav-pov-u-cpp"
   Select Case public_kod_produktu
    Case "A", "T": If Retezec <> "" Then text_chyby = " -HAV - POV u |fffd|PP - u typu flotily A nebo T nesm|fffd| b|fffd|t vypln|fffd|no"
    Case "K", "S": If Retezec <> "A" And Retezec <> "N" Then text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| -HAV - POV u |fffd|PP - neobsahuje hodnotu A/N"
   End Select
  Case "hav-nestandardni-rizika"
   Select Case public_kod_produktu
    Case "A", "T": If Retezec <> "" Then text_chyby = " -HAV - nestandartn|fffd| rizika - u typu flotily A nebo T nesm|fffd| b|fffd|t vypln|fffd|no"
    Case "K", "S": If Retezec <> "B" And Retezec <> "T" And Retezec <> "A" And Retezec <> "ADR" Then text_chyby = " -Kalkulace - nestandartn|fffd| rizika - nen|fffd| vypln|fffd|na p|fffd||fffd|pustn|fffd| hodnota B/T/A/ADR"
   End Select
  Case "hav-druh-zabezpeceni"
   Select Case public_kod_produktu
    Case "A", "T": If Retezec <> "" Then text_chyby = " -HAV - druh zabezpe|fffd|en|fffd| - u typu flotily A nebo T nesm|fffd| b|fffd|t vypln|fffd|no"
    Case "K", "S": If Retezec <> "B" And Retezec <> "M" And Retezec <> "A" And Retezec <> "MA" And Retezec <> "MA" Then text_chyby = " -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - druh zabezpe|fffd|en|fffd| - nen|fffd| vypln|fffd|na p|fffd||fffd|pustn|fffd| hodnota B/M/A/MA"
   End Select
 End Select

 If text_chyby <> "" Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
End Sub

'###############
'kontrola zda je v bunce vyplnena libovolna hodnota u prijmeni
'###############
'odstraneni prebytecnych mezer
'pokud je bunka prazdna
'  urci se jake zneni chybove hlasky se ma zapsat do prvniho sloupce a obarvi prazdnou bunku
'  zapise se hlaska do prvniho sloupce
'typ = urcuje, jaka konkretni polozka je testovana a jaka chybova hlaska se ma vyplnit - hodnota je primarne nacitana z listu "kontrola"
Public Function KontrolaPrijmeni(Retezec As String, sour_x As Integer, sour_y As Long, typ) As Boolean
Retezec = Trim(Retezec)

Dim Kontrola As Boolean
Kontrola = True
Dim text_chyby As String

'zneni chybove hlasky pro uzivatele a vypis chyby do prvniho sloupce a obarveni bunky s chybou
If (Retezec = "") Then
  Kontrola = False
  Select Case typ
    'drzitel - prijmeni
    Case "drzitel - prijmeni"
      text_chyby = " -Dr|fffd|itel - p|fffd||fffd|jmen|fffd|/n|fffd|zev spole|fffd|nosti - nen|fffd| vypln|fffd|n|fffd|"
    'vlastnik - prijmeni
    Case "vlastnik - prijmeni"
      text_chyby = " -Vlastn|fffd|k - p|fffd||fffd|jmen|fffd|/n|fffd|zev spole|fffd|nosti - nen|fffd| vypln|fffd|n|fffd|"
    Case Else
      text_chyby = "CHYBA - kontrola vypln|fffd|n|fffd| p|fffd||fffd|jmen|fffd|"
  End Select
Else
  If (Len(Retezec) > 30) Then
    Kontrola = False
    Select Case typ
      'drzitel - prijmeni
      Case "drzitel - prijmeni"
        text_chyby = " -Dr|fffd|itel - p|fffd||fffd|jmen|fffd|/n|fffd|zev spole|fffd|nosti - je del|fffd||fffd| ne|fffd| 30 znak|fffd|"
      'vlastnik - prijmeni
      Case "vlastnik - prijmeni"
        text_chyby = " -Vlastn|fffd|k - p|fffd||fffd|jmen|fffd|/n|fffd|zev spole|fffd|nosti - je del|fffd||fffd| ne|fffd| 30 znak|fffd|"
      Case Else
        text_chyby = "CHYBA - kontrola vypln|fffd|n|fffd| p|fffd||fffd|jmen|fffd|"
    End Select
  End If
End If

If (Kontrola = False) Then Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
KontrolaPrijmeni = Kontrola
End Function

'###############
'kontrola zda je v bunce vyplnena hodnota delsi nez 250 znaku
'###############
Public Function KontrolaZvlastniVybava(Retezec As String, sour_x As Integer, sour_y As Long) As Boolean
 KontrolaZvlastniVybava = True

 If Len(Trim(Retezec)) > 250 Then
  KontrolaZvlastniVybava = False
  Call ZapisChybyDoBunky(" -P|fffd|edm|fffd|t poji|fffd|t|fffd|n|fffd| - zvl|fffd|tn|fffd| v|fffd|bava - hodnota je del|fffd||fffd| ne|fffd| 250 znak|fffd|", sour_x, sour_y)
 End If

End Function

'###############
'kontrola unikatnosti udaje v sloupci
'###############
'prohledavani celeho daneho sloupce
'  pokud je hodnota shodna s jinou, ktere vstupuje do kontroly a cisla radku jsou ruzne
'    vypsani chyby
'
'u VINu se na duplicitu kontroluji pouze hodnoty delky 17 znaku
'u cisla smluv se jeste kontroluje duplicita s cislem HIP
Public Function KontrolaUnikatnostUdajeSloupce(Retezec As String, sour_x As Integer, sour_y As Long, pocet_smluv, typ) As Boolean
 Dim text_chyby As String
Retezec = Replace(Retezec, " ", "") 'odstrani veskere mezery

Kontrola = 0

If (Retezec <> "") And ((((typ = "vin") And (Len(Retezec) = 17)) Or (typ <> "vin"))) Then
  For Y = const_pocatek_y_data To pocet_smluv
    If (Y <> sour_y) Then
      
      If ((typ = "cislo smlouvy") And (IsNumeric(Retezec))) Then Retezec = CStr(CDbl(Retezec))
      
      If (Retezec = CStr(Cells(Y, sour_x).Value)) Then
        Kontrola = 1
        Exit For
      End If
      If (typ = "cislo smlouvy") And (Retezec = CStr(Cells(const_cislo_hip_y, const_cislo_hip_x))) Then
        Kontrola = 2
        Exit For
      End If
    End If
  Next Y
End If

If (Kontrola <> 0) Then
  Select Case typ
    Case "cislo smlouvy"
      Select Case Kontrola
        Case 1
          text_chyby = " -Smlouva - |fffd||fffd|slo smlouvy - se shoduje s jin|fffd|m ji|fffd| pou|fffd|it|fffd|m"
        Case 2
          text_chyby = " -Smlouva - |fffd||fffd|slo smlouvy - se shoduje s |fffd||fffd|slem HIP"
      End Select
    Case "vin"
      text_chyby = " -Smlouva - VIN - se shoduje s jin|fffd|m ji|fffd| pou|fffd|it|fffd|m"
  End Select
  Call ZapisChybyDoBunky(text_chyby, sour_x, sour_y)
Else
  Kontrola = True
End If

KontrolaUnikatnostUdajeSloupce = Kontrola
End Function
Attribute VB_Name = "M_Menu"
Option Explicit
Sub AddMenu()
 On Error GoTo chyba
'vytvoreni nove polozky menu a jeji submenu
 Dim cbMenuBar As CommandBar, cbpNewMenu As CommandBarPopup
 
'nastavim promenou hlavniho menu Worksheetu
 Set cbMenuBar = CommandBars("Worksheet Menu Bar")

'smazu pripadne stare menu, musi byt "resume next", nemusi existovat
 On Error Resume Next
 cbMenuBar.Controls("SUS Flotily").Delete
 On Error GoTo chyba

'vlozim novou poluzku do hlavniho menu a nastavim promenou noveho menu
 Set cbpNewMenu = cbMenuBar.Controls.Add(Type:=msoControlPopup, Temporary:=True)

'nastavim nadpis nove polozky
 With cbpNewMenu
  .Caption = "&SUS Flotily"
  
  With .Controls.Add(Type:=msoControlButton)
   .Caption = "Form|fffd|tov|fffd|n|fffd| a kontrola"
   If public_spravce_prihlasen Then
    .OnAction = "FormatovaniKontrolyProvoz"
   Else
    .OnAction = "FormatovaniKontrolyObchod"
   End If
  End With
 
  If public_spravce_prihlasen Or public_pecovatel_prihlasen Then
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "Form|fffd|tov|fffd|n|fffd|"
    .OnAction = "Menu_Formatovani"
   End With
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "GDPR"
    .OnAction = "GDPR"
   End With
   
  End If
 
'Menu export
If public_spravce_prihlasen Then
   With .Controls.Add(Type:=msoControlPopup)
    .Caption = "Export dat do SUS"
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Ostr|fffd| verze"
     .OnAction = "ExportOstra"
    End With
    With .Controls.Add(Type:=msoControlButton)
     .Caption = "Testovac|fffd| verze"
     .OnAction = "ExportTest"
    End With
   End With
  End If
   
'Menu tisky
 If public_spravce_prihlasen Or public_pecovatel_prihlasen Then
  With .Controls.Add(Type:=msoControlPopup)
   .Caption = "Tisk"
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "Sestava smluv"
    .OnAction = "Sestava_smluv_menu"
   End With
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "Seznam tov|fffd|rn|fffd|ch zna|fffd|ek"
    .OnAction = "SeznamZnacek"
   End With
  End With
  End If
   
  If Not public_spravce_prihlasen Then
   With .Controls.Add(Type:=msoControlButton)
    .Caption = "P|fffd|ihl|fffd|en|fffd| spr|fffd|vce"
    .OnAction = "Prihlaseni"
   End With
  End If
  With .Controls.Add(Type:=msoControlButton)
   .Caption = "Verze DS"
   .OnAction = "Verze"
  End With
 End With
 
 Set cbMenuBar = Nothing
 Set cbpNewMenu = Nothing
 Exit Sub

'pro pripad, ze by DS byl stazen z netu a otevren v prohlizeci - nelze vytvorit menu a pada to
chyba:
 MsgBox "Pro pr|fffd|ci s datov|fffd|m sb|fffd|ra|fffd|em je nutn|fffd| soubor nejprve ulo|fffd|it do Va|fffd|eho po|fffd||fffd|ta|fffd|e a a|fffd| n|fffd|sledn|fffd| jej spustit."
End Sub
'######################
Sub Prihlaseni()
 F_Prihlaseni_Spravce.pole_heslo = ""
 F_Prihlaseni_Spravce.Show
End Sub

Private Sub ExportOstra()
Odemknuti_GDPR
 const_umisteni_importni_kosilky = "U:\Datovy_sberac\importni_kosilka\"
 const_export_ostra = True
 Call Export
End Sub


Private Sub ExportTest()
Odemknuti_GDPR
 const_umisteni_importni_kosilky = "C:\datovy_sberac\importni_kosilka_test\"
 const_export_ostra = False
 Call Export
End Sub

Private Sub Export()
 public_nizka_kontrola_dat = True
 Proces = 3: F_Postup.Show
End Sub

'###############
'spusteni formatovani a kontrol pro obchod
'###############
Private Sub FormatovaniKontrolyObchod()
 Proces = 2: F_Postup.Show
End Sub

'###############
'spusteni formatovani a kontrol pro provoz
'###############
Private Sub FormatovaniKontrolyProvoz()
 Proces = 1: F_Postup.Show
End Sub
'###############
'spusteni formatovani pro provoz
'###############
Private Sub Menu_Formatovani()
 Proces = 5: F_Postup.Show
End Sub

'###############
'zobrazeni cisla verze DS
'###############
Sub Verze()
 With Sheets("sazebnik")
  F_Verze.verze_verze.Caption = .Cells(const_verze_ds_y, const_verze_ds_x)
  F_Verze.verze_datum_vydani.Caption = .Cells(const_datum_vydani_ds_y, const_datum_vydani_ds_x)
 End With
 F_Verze.Show
End Sub
Private Sub Sestava_smluv_menu()
 Proces = 4: F_Postup.Show
End Sub
Private Sub GDPR()
 Odemknuti_GDPR
End Sub

Attribute VB_Name = "M_Sestava_Smluv"
'Option Explicit
'#############################
'vytvoreni podkladu pro tisk zelenych karet
'#############################
Function SestavaSmluv() As Boolean
'vypnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
 Application.ScreenUpdating = False

'odemknuti vsech listu
 Odemkni_zobraz_v|fffd|e

 public_nizka_kontrola_dat = True

'overeni, zda jsou smlouvy vyplneny spravne
 If Not Kontroly("obchod-kontroly") Then
  'zamknuti pracovnich listu
  Zamkni_sktyj_v|fffd|e

  Sheets("data").Select
  'zapnuti aktualizece obrazovky
  Application.ScreenUpdating = True

  SestavaSmluv = False
  Exit Function
 End If

'zapamatovani si nazvu souboru
 aktualni_soubor = ThisWorkbook.Name
 novy_soubor = Workbooks.Add.Name

'prejmenovani listu v nove otevrenem souboru
 Windows(novy_soubor).Activate
 Sheets(1).Name = "sestava"
 If ActiveWorkbook.Worksheets.Count = 1 Then ActiveWorkbook.Worksheets.Add After:=Worksheets(1)
 druhy_list = Sheets(2).Name 'po ukonceni sestavy list prejmenuji na jeho puvodni jmeno
 Sheets(2).Name = "data"

'kopirovani dat do noveho souboru do listu data
 Windows(aktualni_soubor).Activate
 Sheets("data").Select

 Application.ScreenUpdating = False
 Sheets("data").Select
 pocet_radku = RozahListu()
 pocet_smluv = pocet_radku - const_pocatek_y_data + 1

 Windows(aktualni_soubor).Activate
 Sheets("data").Select

 typ_flotily = Cells(const_typ_flotily_y, const_typ_flotily_x)

 Dim vysledek As Boolean
'cps
 vysledek = PrekopirovaniOblasti(const_cislo_pojistne_smlouvy_x, pocet_radku, "B", novy_soubor)
'vlastnik jmeno
 vysledek = PrekopirovaniOblasti(const_vlastnik_jmeno_x, pocet_radku, "C", novy_soubor)
'vlastnik prijmeni / nazev firmy
 vysledek = PrekopirovaniOblasti(const_vlastnik_prijmeni_nazev_spolecnosti_x, pocet_radku, "D", novy_soubor)
'vlastnik ic/rc
 vysledek = PrekopirovaniOblasti(const_vlastnik_rc_ico_x, pocet_radku, "E", novy_soubor)
'drzitel jmeno
 vysledek = PrekopirovaniOblasti(const_drzitel_jmeno_x, pocet_radku, "F", novy_soubor)
'drzitel prijmeni / nazev firmy
 vysledek = PrekopirovaniOblasti(const_drzitel_prijmeni_nazev_spolecnosti_x, pocet_radku, "G", novy_soubor)
'drzitel ic/rc
 vysledek = PrekopirovaniOblasti(const_drzitel_rc_ico_x, pocet_radku, "H", novy_soubor)
'znacka vozidla
 vysledek = PrekopirovaniOblasti(const_znacka_vozidla_x, pocet_radku, "I", novy_soubor)
'typ vozidla
 vysledek = PrekopirovaniOblasti(const_typ_vozidla_x, pocet_radku, "J", novy_soubor)
'spz
 vysledek = PrekopirovaniOblasti(const_registracni_znacka_x, pocet_radku, "K", novy_soubor)
'vin
 vysledek = PrekopirovaniOblasti(const_vin_x, pocet_radku, "L", novy_soubor)
'druh vozidla
 vysledek = PrekopirovaniOblasti(const_druh_vozidla_x, pocet_radku, "M", novy_soubor)
'hmotnost
 vysledek = PrekopirovaniOblasti(const_hmotnost_x, pocet_radku, "N", novy_soubor)
'pocet mist
 vysledek = PrekopirovaniOblasti(const_pocet_mist_x, pocet_radku, "O", novy_soubor)
'zabezpeceni
 vysledek = PrekopirovaniOblasti(const_druh_zabezpeceni_x, pocet_radku, "P", novy_soubor)
'rok vyroby
 vysledek = PrekopirovaniOblasti(const_rok_vyroby_x, pocet_radku, "Q", novy_soubor)
'datum pocatku
 vysledek = PrekopirovaniOblasti(const_pocatek_pojisteni_x, pocet_radku, "R", novy_soubor)
'pojistna castka vozidla
 vysledek = PrekopirovaniOblasti(const_pojistna_castka_x, pocet_radku, "S", novy_soubor)
'rozsah pojistneni
 vysledek = PrekopirovaniOblasti(const_rozsah_pojisteni_x, pocet_radku, "T", novy_soubor)
'spoluucast
 vysledek = PrekopirovaniOblasti(const_kod_spoluucasti_x, pocet_radku, "U", novy_soubor)
'rocni pojistne zakladni/rocni pojistne HAV
 vysledek = PrekopirovaniOblasti(const_rocpoj_BS_BD, pocet_radku, "V", novy_soubor)
'celni sklo - limit plneni
 vysledek = PrekopirovaniOblasti(const_celni_sklo_limit_plneni_x, pocet_radku, "W", novy_soubor)
'celni sklo - rocni pojistne
 vysledek = PrekopirovaniOblasti(const_celni_sklo_rocni_pojistne_x, pocet_radku, "X", novy_soubor)
'zavazadla - limit plneni
 vysledek = PrekopirovaniOblasti(const_zavazadla_limit_plneni_x, pocet_radku, "Y", novy_soubor)
'zavazadla - rocni pojistne
 vysledek = PrekopirovaniOblasti(const_zavazadla_rocni_pojistne_x, pocet_radku, "Z", novy_soubor)
'uraz - limit plneni
 vysledek = PrekopirovaniOblasti(const_uraz_limit_plneni_x, pocet_radku, "AA", novy_soubor)
'uraz - rocni pojistne
 vysledek = PrekopirovaniOblasti(const_uraz_rocni_pojistne_x, pocet_radku, "AB", novy_soubor)
''nahradni vozidlo - limit plneni
'vysledek = PrekopirovaniOblasti(const_, pocet_radku, "", novy_soubor)
'nahradni vozidlo - rocni pojistne
 vysledek = PrekopirovaniOblasti(const_pronajem_vozidla_rocni_pojistne_x, pocet_radku, "AC", novy_soubor)
'rocni pojistne bez slevy s doplnkovymi riziky
 vysledek = PrekopirovaniOblasti(const_rocpoj_BS_SD, pocet_radku, "AD", novy_soubor)
'rocni pojistne po sleve s doplnkovymi riziky
 vysledek = PrekopirovaniOblasti(const_rocpoj_PS_SD, pocet_radku, "AE", novy_soubor)
'lhutni pojistne po sleve s doplnkovymi riziky
 vysledek = PrekopirovaniOblasti(const_lhutpoj_PS_SD, pocet_radku, "AF", novy_soubor)


'asistence - rocni pojistne po sleve s doplnkovymi riziky
 vysledek = PrekopirovaniOblasti(const_rocpoj_zakladni, pocet_radku, "AG", novy_soubor)
'asistence - lhutni pojistne po sleve s doplnkovymi riziky
 vysledek = PrekopirovaniOblasti(const_lhutpoj_PS_SD, pocet_radku, "AH", novy_soubor)

''VZOR
'vysledek = PrekopirovaniOblasti(const_, pocet_radku, "", novy_soubor)

 Windows(novy_soubor).Activate
 Sheets("data").Select

'zruseni formatovani u zkopirovanych dat
 With Cells
  With .Font
   .Name = "Arial"
   .FontStyle = "Oby|fffd|ejn|fffd|"
   .Size = 10
   .Strikethrough = False
   .Superscript = False
   .Subscript = False
   .OutlineFont = False
   .Shadow = False
   .Underline = xlUnderlineStyleNone
   .ColorIndex = xlAutomatic
  End With
  .Borders.LineStyle = xlNone
  .Interior.ColorIndex = xlNone
 End With

'uprava dat sestavy
'For i = 1 To pocet_radku - const_pocatek_y_data + 1
 For i = pocet_radku - const_pocatek_y_data + 1 To 1 Step -1
  'pridani prazdneho radku
  Rows(i + 3).Insert Shift:=xlDown
  'cislovani smluv v listu data
  Cells(i + 2, 1) = i
  'vlastnik - slouceni jmena a prijmeni
  If Cells(i + 2, 3) <> "" Then Cells(i + 2, 4) = Cells(i + 2, 3) & " " & Cells(i + 2, 4)
  'drzitel - slouceni jmena a prijmeni
  If Cells(i + 2, 6) <> "" Then Cells(i + 2, 7) = Cells(i + 2, 6) & " " & Cells(i + 2, 7)
  'vlastnik - slouceni nazvu a RC/IC
  If Len(Cells(i + 2, 5)) = 9 Or (Len(Cells(i + 2, 5)) = 10) Then
   Cells(i + 2, 3) = Cells(i + 2, 4) & Chr(10) & "R|fffd| " & Cells(i + 2, 5)
  Else
   Cells(i + 2, 3) = Cells(i + 2, 4) & Chr(10) & "I|fffd| " & Cells(i + 2, 5)
  End If
  'drzitel - slouceni nazvu a RC/IC
  If Len(Cells(i + 2, 8)) = 9 Or (Len(Cells(i + 2, 8)) = 10) Then
   Cells(i + 2, 6) = Cells(i + 2, 7) & Chr(10) & "R|fffd| " & Cells(i + 2, 8)
  Else
   Cells(i + 2, 6) = Cells(i + 2, 7) & Chr(10) & "I|fffd| " & Cells(i + 2, 8)
  End If
  'znacka a typ vozidla
  Cells(i + 2, 9) = Cells(i + 2, 9) & Chr(10) & Cells(i + 2, 10)
  'RZ/VIN
  Cells(i + 3, 11) = Cells(i + 2, 12)
  'hmotnost/pocet mist
  Cells(i + 3, 14) = Cells(i + 2, 15)
  'zabezpeceni
  Select Case Cells(i + 2, 16)
   Case "B": Cells(i + 2, 16) = "B"
   Case "M": Cells(i + 2, 16) = "M"
   Case "A": Cells(i + 2, 16) = "A"
   Case "MA": Cells(i + 2, 16) = "MA"
   Case Else: Cells(i + 2, 16) = ""
  End Select
  'zabezpeceni / rok vyroby
  Cells(i + 3, 16) = Cells(i + 2, 17)
  'rozsah pojisteni
  Select Case Cells(i + 2, 20)
   Case "A": Cells(i + 2, 20) = "ALL RISK"
   Case "H": Cells(i + 2, 20) = "HAV|fffd|RIE + |fffd|IVEL"
   Case "O": Cells(i + 2, 20) = "ODCIZEN|fffd| + |fffd|IVEL"
  End Select
  'spoluucast
  Select Case Cells(i + 2, 21)
   Case "S1": Cells(i + 2, 21) = "pevn|fffd| 1 000 K|fffd|"
   Case "S50": Cells(i + 2, 21) = "pevn|fffd| 50 000 K|fffd|"
   Case "S100": Cells(i + 2, 21) = "pevn|fffd| 100 000 K|fffd|"
   Case "S300": Cells(i + 2, 21) = "pevn|fffd| 300 000 K|fffd|"
   Case "S1001": Cells(i + 2, 21) = "1%, min. 1 000 K|fffd|"
   Case "S2002", "2": Cells(i + 2, 21) = "2%, min. 2 000 K|fffd|"
   Case "S2005": Cells(i + 2, 21) = "2%, min. 5 000 K|fffd|"
   Case "S3003": Cells(i + 2, 21) = "3%, min. 3 000 K|fffd|"
   Case "S5002": Cells(i + 2, 21) = "5%, min. 2 000 K|fffd|"
   Case "S5005", "5": Cells(i + 2, 21) = "5%, min. 5 000 K|fffd|"
   Case "S10005": Cells(i + 2, 21) = "10%, min. 5 000 K|fffd|"
   Case "S10010", "10": Cells(i + 2, 21) = "10%, min. 10 000 K|fffd|"
   Case "S10030": Cells(i + 2, 21) = "10%, min. 30 000 K|fffd|"
   Case "S10040": Cells(i + 2, 21) = "10%, min. 40 000 K|fffd|"
   Case "S10050": Cells(i + 2, 21) = "10%, min. 50 000 K|fffd|"
   Case "S10100": Cells(i + 2, 21) = "10%, min. 100 000 K|fffd|"
   Case "S15015": Cells(i + 2, 21) = "15%, min. 15 000 K|fffd|"
   Case "S20020", "20": Cells(i + 2, 21) = "20%, min. 20 000 K|fffd|"
   Case "S20050": Cells(i + 2, 21) = "20%, min. 50 000 K|fffd|"
   Case "S25050": Cells(i + 2, 21) = "25%, min. 50 000 K|fffd|"
   Case "S30050": Cells(i + 2, 21) = "30%, min. 50 000 K|fffd|"
  End Select
  'rozsah pojisteni / spoluucast
  Cells(i + 3, 20) = Cells(i + 2, 21)
  'celni sklo
  Cells(i + 3, 23) = Cells(i + 2, 24)
  'zavazadla
  Cells(i + 3, 25) = Cells(i + 2, 26)
  'uraz limit
  Cells(i + 3, 27) = Cells(i + 2, 28)
  'uraz pojistne
  Cells(i + 3, 27) = Cells(i + 2, 28)
  If Cells(i + 2, 27) = "" Then
   If Cells(i + 2, 13) <> "MOTOCYKL" And Cells(i + 2, 13) <> "N|fffd|V|fffd|S" And Cells(i + 2, 13) <> "P|fffd||fffd|V|fffd|S" Then
    Cells(i + 2, 27) = "100 000 K|fffd|"
    Cells(i + 3, 27) = "0 K|fffd|"
   End If
  End If

  'nahradni vozidlo - rocni pojistne
  Cells(i + 3, 29) = Cells(i + 2, 29)
  'nahradni vozidlo - limit plneni
  If Cells(i + 3, 29) <> "" Then Cells(i + 2, 29) = "5 dn|fffd|, 5.000,- K|fffd|"

  'slouceni bunek
  Range(Cells(i + 2, 1), Cells(i + 3, 1)).MergeCells = True
  Range(Cells(i + 2, 2), Cells(i + 3, 2)).MergeCells = True
  Range(Cells(i + 2, 3), Cells(i + 3, 3)).MergeCells = True
  Range(Cells(i + 2, 6), Cells(i + 3, 6)).MergeCells = True
  Range(Cells(i + 2, 9), Cells(i + 3, 9)).MergeCells = True
  Range(Cells(i + 2, 12), Cells(i + 3, 12)).MergeCells = True
  Range(Cells(i + 2, 13), Cells(i + 3, 13)).MergeCells = True
  Range(Cells(i + 2, 18), Cells(i + 3, 18)).MergeCells = True
  Range(Cells(i + 2, 19), Cells(i + 3, 19)).MergeCells = True
  Range(Cells(i + 2, 22), Cells(i + 3, 22)).MergeCells = True
  Range(Cells(i + 2, 30), Cells(i + 3, 30)).MergeCells = True
  Range(Cells(i + 2, 31), Cells(i + 3, 31)).MergeCells = True
  Range(Cells(i + 2, 32), Cells(i + 3, 32)).MergeCells = True
  Range(Cells(i + 2, 33), Cells(i + 3, 33)).MergeCells = True
  Range(Cells(i + 2, 34), Cells(i + 3, 34)).MergeCells = True
 Next i

'odstraneni nadbytecnych sloupcu
 Columns(28).Delete Shift:=xlToLeft
 Columns(26).Delete Shift:=xlToLeft
 Columns(24).Delete Shift:=xlToLeft
 Columns(21).Delete Shift:=xlToLeft
 Columns(17).Delete Shift:=xlToLeft
 Columns(15).Delete Shift:=xlToLeft
 Columns(12).Delete Shift:=xlToLeft
 Columns(10).Delete Shift:=xlToLeft
 Columns(8).Delete Shift:=xlToLeft
 Columns(7).Delete Shift:=xlToLeft
 Columns(5).Delete Shift:=xlToLeft
 Columns(4).Delete Shift:=xlToLeft

'vypsani zahlavi tabulky
 Cells(1, 1) = "p." & Chr(10) & "|fffd|."
 Range("A1:A2").MergeCells = True
 Cells(1, 2) = "|fffd||fffd|slo pojistn|fffd|" & Chr(10) & "smlouvy"
 Range("B1:B2").MergeCells = True
 Cells(1, 3) = "VLASTN|fffd|K" & Chr(10) & "P|fffd||fffd|jmen|fffd|/N|fffd|zev spole|fffd|nosti"
 Cells(2, 3) = "R|fffd|/I|fffd|"
 Cells(1, 4) = "DR|fffd|ITEL / PROVOZOVATEL" & Chr(10) & "P|fffd||fffd|jmen|fffd|/N|fffd|zev spole|fffd|nosti"
 Cells(2, 4) = "R|fffd|/I|fffd|"
 Cells(1, 5) = "Zna|fffd|ka vozidla" & Chr(10) & "Typ vozidla"
 Range("E1:E2").MergeCells = True
 Cells(1, 6) = "RZ"
 Cells(2, 6) = "VIN"
 Cells(1, 7) = "Druh" & Chr(10) & "vozidla"
 Range("G1:G2").MergeCells = True
 Cells(1, 8) = "Hmotnost"
 Cells(2, 8) = "Po|fffd|et m|fffd|st"
 Cells(1, 9) = "Zabezpe|fffd|en|fffd|"
 Cells(2, 9) = "Rok v|fffd|roby"
 Cells(1, 10) = "Po|fffd||fffd|tek" & Chr(10) & "poji|fffd|t|fffd|n|fffd|"
 Range("J1:J2").MergeCells = True
 Cells(1, 11) = "Pojistn|fffd| |fffd||fffd|stka" & Chr(10) & "vozidla"
 Range("K1:K2").MergeCells = True
 Cells(1, 12) = "Rozsah poji|fffd|t|fffd|n|fffd|"
 Cells(2, 12) = "Spolu|fffd||fffd|ast"
 Cells(1, 13) = "Ro|fffd|n|fffd|" & Chr(10) & "pojistn|fffd|" & Chr(10) & "HAV"
 Range("M1:M2").MergeCells = True
 Cells(1, 14) = "|fffd|ELN|fffd| SKLO" & Chr(10) & "Limit pln|fffd|n|fffd|"
 Cells(2, 14) = "|fffd|ELN|fffd| SKLO" & Chr(10) & "Ro|fffd|n|fffd| pojistn|fffd|"
 Cells(1, 15) = "ZAVAZADLA" & Chr(10) & "Limit pln|fffd|n|fffd|"
 Cells(2, 15) = "ZAVAZADLA" & Chr(10) & "Ro|fffd|n|fffd| pojistn|fffd|"
 Cells(1, 16) = "|fffd|RAZ" & Chr(10) & "Limit pln|fffd|n|fffd|"
 Cells(2, 16) = "|fffd|RAZ" & Chr(10) & "Ro|fffd|n|fffd| pojistn|fffd|"
 Cells(1, 17) = "N|fffd|HRADN|fffd| " & Chr(10) & "VOZIDLO" & Chr(10) & "Limit pln|fffd|n|fffd|"
 Cells(2, 17) = "N|fffd|HRADN|fffd| " & Chr(10) & "VOZIDLO" & Chr(10) & "Ro|fffd|n|fffd| pojistn|fffd|"
 Cells(1, 18) = "Ro|fffd|n|fffd|" & Chr(10) & "pojistn|fffd|" & Chr(10) & "v|fffd|etn|fffd|" & Chr(10) & "p|fffd|ipoji|fffd|t|fffd|n|fffd|"
 Range("R1:R2").MergeCells = True
 Cells(1, 19) = "Ro|fffd|n|fffd|" & Chr(10) & "pojistn|fffd|" & Chr(10) & "v|fffd|etn|fffd|" & Chr(10) & "p|fffd|ipoji|fffd|t|fffd|n|fffd|" & Chr(10) & "po slev|fffd|" & Chr(10) & "(p|fffd|ir|fffd|ce)"
 Range("S1:S2").MergeCells = True
 Cells(1, 20) = "Lh|fffd|tn|fffd|" & Chr(10) & "pojistn|fffd|" & Chr(10) & "v|fffd|etn|fffd|" & Chr(10) & "p|fffd|ipoji|fffd|t|fffd|n|fffd|" & Chr(10) & "po slev|fffd|" & Chr(10) & "(p|fffd|ir|fffd|ce)"
 Range("T1:T2").MergeCells = True
 Cells(1, 21) = "ASISTENCE PLUS nebo TIR" & Chr(10) & "ro|fffd|n|fffd| pojistn|fffd|"
 Range("U1:U2").MergeCells = True
 Cells(1, 22) = "ASISTENCE PLUS nebo TIR" & Chr(10) & "lh|fffd|tn|fffd| pojistn|fffd|"
 Range("V1:V2").MergeCells = True

'vlozeni radku pro soucty
 Rows(3).Insert Shift:=xlDown

 If typ_flotily = "A" Or typ_flotily = "T" Then
  Columns("K:T").Delete Shift:=xlToLeft
'odstraneni sloupce zabezpeceni/rok vyroby
  Columns(9).Delete Shift:=xlToLeft
 Else
  Columns("U:V").Delete Shift:=xlToLeft
 End If

'kopirovani dat z listu data do litu sestava
 Range(Cells(1, 1), Cells((pocet_smluv * 2) + 3, 40)).Select
 Application.CutCopyMode = False
 Selection.Copy
 Sheets("sestava").Select
 Range("A10").Select
 ActiveSheet.Paste

'formatovani tabulky
'format nadpisu stranky
 If typ_flotily = "A" Or typ_flotily = "T" Then
  Range("A1:K2").Select
 Else
  Range("A1:T2").Select
 End If

 With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlCenter
  .MergeCells = True
  With .Font
   .Name = "Arial"
   .FontStyle = "Tu|fffd|n|fffd|"
   .Size = 14
   .ColorIndex = xlAutomatic
  End With

  .BorderAround Weight:=xlThin
  .BorderAround LineStyle:=xlDouble

  With .Interior
   .ColorIndex = 35
   .Pattern = xlSolid
   .PatternColorIndex = xlAutomatic
  End With
 End With
 ActiveCell.FormulaR1C1 = "Flotilov|fffd| seznam vozidel |fffd| P|fffd|IHL|fffd||fffd|KY HAV"

'format zahlavi tabulky
Range("A10:T12").Select
With Selection
  .HorizontalAlignment = xlCenter
  .VerticalAlignment = xlCenter
End With
With Selection.Font
  .Name = "Arial"
  .FontStyle = "Tu|fffd|n|fffd|"
  .Size = 10
End With
With Selection.Borders(xlInsideVertical)
  .LineStyle = xlContinuous
  .Weight = xlMedium
  .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlInsideHorizontal)
  .LineStyle = xlContinuous
  .Weight = xlMedium
  .ColorIndex = xlAutomatic
End With
With Selection.Interior
  .ColorIndex = 35
  .Pattern = xlSolid
  .PatternColorIndex = xlAutomatic
End With
Selection.BorderAround Weight:=xlThin
Selection.BorderAround LineStyle:=xlDouble

'format dat sestavy
Range(Cells(13, 1), Cells((pocet_smluv * 2) + 12, 20)).Select

Selection.HorizontalAlignment = xlCenter
Selection.VerticalAlignment = xlTop
'xlCenter

Selection.BorderAround Weight:=xlMedium
Selection.BorderAround LineStyle:=xlContinuous
With Selection.Borders(xlInsideVertical)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With
With Selection.Borders(xlInsideHorizontal)
  .LineStyle = xlContinuous
  .Weight = xlThin
  .ColorIndex = xlAutomatic
End With

Windows(novy_soubor).Activate
Sheets("sestava").Select

'vlozeni poznamky o zabezpeceni
Range(Cells((pocet_smluv * 2) + 15, 1), Cells((pocet_smluv * 2) + 15, 5)).MergeCells = True

Cells((pocet_smluv * 2) + 15, 1) = "ZABEZPECEN|fffd|" & Chr(10) & _
"B - be|fffd|n|fffd| (|fffd||fffd|dn|fffd| uzam|fffd|eno, alarm, imobilizer atd.)" & Chr(10) & _
"M - mechanick|fffd| (DEFEND-LOCK atd.)" & Chr(10) & _
"A - aktivn|fffd| vyhled|fffd|vac|fffd| (Lo-Jack atd.)" & Chr(10) & _
"MA - kombinace mechanick|fffd|ho a aktivn|fffd|ho vyhled|fffd|vac|fffd|ho"

With Cells((pocet_smluv * 2) + 15, 1).Font
  .Name = "Arial"
  .FontStyle = "Oby|fffd|ejn|fffd|"
  .Size = 8
  .Strikethrough = False
  .Superscript = False
  .Subscript = False
  .OutlineFont = False
  .Shadow = False
  .Underline = xlUnderlineStyleNone
  .ColorIndex = xlAutomatic
End With

Cells((pocet_smluv * 2) + 15, 1).VerticalAlignment = xlTop

'tucne pismo
If typ_flotily = "A" Or typ_flotily = "T" Then
  Range("B13:B5000,I13:I5000,A12:T12").Font.Bold = True
Else
  Range("B13:B5000,J11:J5000,K11:K5000,A12:T12").Font.Bold = True
End If

'nastaveni meny
Range("J13:J5000,K13:K5000,M13:M5000,N13:N5000,O13:O5000,P13:P5000,Q13:Q5000,R13:R5000,S13:S5000,T13:T5000,A12:T12").NumberFormat = "#,##0 $"

'nastaveni zalomeni radku
Range("C13:D5000,G13:G5000").WrapText = True

'nacteni hodnot pro pole a soucty
Windows(aktualni_soubor).Activate
Sheets("data").Select

cislo_hip = Right("000000000" & Cells(const_cislo_hip_y, const_cislo_hip_x), 10)
pojistnik_nazev = Cells(const_pojistnik_nazev_y, const_pojistnik_nazev_x)
pojistnik_ic = Cells(const_pojistnik_ic_y, const_pojistnik_ic_x)
frekvence_placeni = Cells(const_frekvence_placeni_y, const_frekvence_placeni_x)
obchodni_sleva = Cells(const_obchodni_sleva_y, const_obchodni_sleva_x)

rocni_pojistne_zakladni = Cells(const_radek_souctu, const_rocpoj_BS_BD)
celni_sklo_rocni_pojistne = Cells(const_radek_souctu, const_celni_sklo_rocni_pojistne_x)
zavazadla_rocni_pojistne = Cells(const_radek_souctu, const_zavazadla_rocni_pojistne_x)
uraz_rocni_pojistne = Cells(const_radek_souctu, const_uraz_rocni_pojistne_x)
nahradni_vozidlo_rocni_pojistne = Cells(const_radek_souctu, const_pronajem_vozidla_rocni_pojistne_x)
rocni_pojistne_bez_slevy_s_doplnkovymi_riziky = Cells(const_radek_souctu, const_rocpoj_BS_SD)
rocni_pojistne_po_sleve_s_doplnkovymi_riziky = Cells(const_radek_souctu, const_rocpoj_PS_SD)
lhutni_pojistne_po_sleve_s_doplnkovymi_riziky = Cells(const_radek_souctu, const_lhutpoj_PS_SD)

Windows(novy_soubor).Activate
Sheets("sestava").Select

'vlozeni souctu do radku
If typ_flotily = "A" Or typ_flotily = "T" Then
  Cells(12, 10) = rocni_pojistne_zakladni
  Cells(12, 11) = lhutni_pojistne_po_sleve_s_doplnkovymi_riziky
Else
  Cells(12, 13) = rocni_pojistne_zakladni
  Cells(12, 14) = celni_sklo_rocni_pojistne
  Cells(12, 15) = zavazadla_rocni_pojistne
  Cells(12, 16) = uraz_rocni_pojistne
  Cells(12, 17) = nahradni_vozidlo_rocni_pojistne
  Cells(12, 18) = rocni_pojistne_bez_slevy_s_doplnkovymi_riziky
  Cells(12, 19) = rocni_pojistne_po_sleve_s_doplnkovymi_riziky
  Cells(12, 20) = lhutni_pojistne_po_sleve_s_doplnkovymi_riziky
End If

'prizpusobeni sirky sloupcu
Cells.ColumnWidth = 100
Cells.EntireColumn.AutoFit
Range("A1").Select

'prizpusobeni vysky tabulky
Rows("10:5000").EntireRow.AutoFit

'vyska pro vysvetlivky
Rows((pocet_smluv * 2) + 15).RowHeight = 80

'odstraneni prazdnych sloupcu s formatem
If typ_flotily = "A" Or typ_flotily = "T" Then Columns("L:AA").Delete Shift:=xlToLeft

'vkladani textovych poli
Dim posun As Integer
For i = 0 To 4
  sirka = 120
  Select Case i
    Case 0
      posun = 0
      nadpis = "|fffd||fffd|slo flotily" & Chr(10) & "(HIP)"
      hodnota = cislo_hip
    Case 1
      posun = i * 120
      sirka = 200
      nadpis = "N|fffd|zev" & Chr(10) & "pojistn|fffd|ka"
      hodnota = pojistnik_nazev
    Case 2
      posun = i * 120 + 80
      nadpis = "I|fffd|"
      hodnota = pojistnik_ic
    Case 3
      posun = i * 120 + 100
      nadpis = "Frekvence" & Chr(10) & "placen|fffd|"
      hodnota = frekvence_placeni
    Case 4
      If typ_flotily <> "A" And typ_flotily <> "T" Then
        posun = i * 120 + 100
        nadpis = "Sleva/p|fffd|ir|fffd|ka" & Chr(10) & "na flotile"
        hodnota = obchodni_sleva
      End If
  End Select

  ActiveSheet.Shapes.AddTextbox(msoTextOrientationHorizontal, posun, 35, sirka, 50).Select
  Selection.Characters.Text = nadpis
  With Selection.Font
    .Name = "Arial"
    .FontStyle = "Obyeejn|fffd|"
    .Size = 10
    .Bold = True
    .Strikethrough = False
    .Superscript = False
    .Subscript = False
    .OutlineFont = False
    .Shadow = False
    .Underline = xlUnderlineStyleNone
    .ColorIndex = xlAutomatic
  End With
  With Selection
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlCenter
  End With
  Selection.ShapeRange.Fill.ForeColor.SchemeColor = 42
  Selection.ShapeRange.Fill.Visible = msoTrue
  Selection.ShapeRange.Fill.Solid
  Selection.ShapeRange.Line.Weight = 2.25
  Selection.ShapeRange.Line.Visible = msoTrue
  Selection.ShapeRange.Line.Style = msoLineSingle

  ActiveSheet.Shapes.AddTextbox(msoTextOrientationHorizontal, posun, 85, sirka, 20).Select
  Selection.Characters.Text = hodnota
  With Selection.Font
    .Name = "Arial"
    .FontStyle = "Obyeejn|fffd|"
    .Size = 10
    .Bold = False
    .Strikethrough = False
    .Superscript = False
    .Subscript = False
    .OutlineFont = False
    .Shadow = False
    .Underline = xlUnderlineStyleNone
    .ColorIndex = xlAutomatic
  End With
  With Selection
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlCenter
  End With
  Selection.ShapeRange.Fill.ForeColor.SchemeColor = 42
  Selection.ShapeRange.Fill.Visible = msoTrue
  Selection.ShapeRange.Fill.Solid
  Selection.ShapeRange.Line.Weight = 2.25
  Selection.ShapeRange.Line.Visible = msoTrue
  Selection.ShapeRange.Line.Style = msoLineSingle
Next i

'nastaveni vzhledu sranky
With ActiveSheet.PageSetup
  .PrintTitleRows = "$10:$11"
  .PrintTitleColumns = ""
End With

zasifrovane_datum = DateDiff("d", "1.1.1900", Date)

ActiveSheet.PageSetup.PrintArea = ""
With ActiveSheet.PageSetup
  .LeftHeader = ""
  .CenterHeader = ""
  .RightHeader = "[&P - &N]" & Chr(10) & zasifrovane_datum
  .LeftFooter = "&""Arial,Tu|fffd|n|fffd|""&12|fffd|esk|fffd| podnikatelsk|fffd| poji|fffd||fffd|ovna, a.s., Vienna Insurance Group&""Arial,Oby|fffd|ejn|fffd|""&10" & Chr(10) & "je zapsan|fffd| v obchodn|fffd|m rejst|fffd||fffd|ku veden|fffd|m M|fffd|stsk|fffd|m soudem v Praze - odd|fffd|l B, vlo|fffd|ka 3433. I|fffd|: 63998530, DI|fffd|: CZ63998530, bankovn|fffd| spojen|fffd|: 700135002/0800" & Chr(10) & ""
  .CenterFooter = ""
  .RightFooter = ""
  .LeftMargin = Application.InchesToPoints(0.5)
  .RightMargin = Application.InchesToPoints(0.5)
  .TopMargin = Application.InchesToPoints(0.984251968503937)
  .BottomMargin = Application.InchesToPoints(0.984251968503937)
  .HeaderMargin = Application.InchesToPoints(0.511811023622047)
  .FooterMargin = Application.InchesToPoints(0.511811023622047)
  .PrintHeadings = False
  .PrintGridlines = False
  .PrintComments = xlPrintNoComments
  .CenterHorizontally = False
  .CenterVertically = False
  .Orientation = xlLandscape
  .Draft = False
  .PaperSize = xlPaperA4
  .FirstPageNumber = xlAutomatic
  .Order = xlDownThenOver
  .BlackAndWhite = False
  .Zoom = False
  .FitToPagesWide = 1
  .FitToPagesTall = 110
  .PrintErrors = xlPrintErrorsDisplayed
End With

'zamknuti listu
ActiveSheet.Protect Password:="hesloobchod", DrawingObjects:=True, Contents:=True, Scenarios:=True, AllowFormattingCells:=True, AllowFormattingColumns:=True, AllowFormattingRows:=True

Cells(1, 1).Select

'prejmenovani listu data na puvodni jmeno
Windows(novy_soubor).Activate
Sheets(2).Name = druhy_list
Sheets(druhy_list).Select
Cells.Select
Selection.Delete Shift:=xlUp
Cells(1, 1).Select
Sheets(1).Select

Windows(aktualni_soubor).Activate
Sheets("data").Select
Cells(1, 1).Select

'zamknuti pracovnich listu
Zamkni_sktyj_v|fffd|e

Sheets("data").Select
'zapnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
Application.ScreenUpdating = True

SestavaSmluv = True
End Function

Function PrekopirovaniOblasti(zdroj_od_x, zdroj_do_y, cil_do_x, soubor_tisk_zk) As Boolean
aktualni_soubor = ThisWorkbook.Name

Windows(aktualni_soubor).Activate
Sheets("data").Select

Range(Cells(const_pocatek_y_data, zdroj_od_x), Cells(zdroj_do_y, zdroj_od_x)).Select
Selection.Copy

Windows(soubor_tisk_zk).Activate
Sheets("data").Select
Range(cil_do_x & "3").Select
ActiveSheet.Paste

Windows(aktualni_soubor).Activate
Sheets("data").Select

PrekopirovaniOblasti = True
End Function
Attribute VB_Name = "M_SeznamZnacek"
'Option Explicit
Function SeznamZnacek()
'vypnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
Application.ScreenUpdating = False

'odemknuti vsech listu
Odemkni_zobraz_v|fffd|e

'zapamatovani si nazvu souboru
aktualni_soubor = ThisWorkbook.Name
novy_soubor = Workbooks.Add.Name
  
'prejmenovani listu v nove otevrenem souboru a smazani prebytecnych listu
Windows(novy_soubor).Activate
Sheets(1).Name = "Seznam zna|fffd|ek"
  
Windows(aktualni_soubor).Activate
Sheets("znacky").Select

'kopirovani dat do noveho souboru do listu
Application.ScreenUpdating = False
  
Cells(1, 1).Select
Range(Selection, Selection.End(xlDown)).Select
Selection.Copy
   
Windows(novy_soubor).Activate
Sheets("Seznam zna|fffd|ek").Select
   
Cells(2, 1).Select
ActiveSheet.Paste
  
Range("A2").Select
Range(Selection, Selection.End(xlDown)).Select
Selection.Sort Key1:=Range("A2"), Order1:=xlAscending, Header:=xlGuess, _
  OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
  DataOption1:=xlSortNormal

Cells(1, 1) = "Tov|fffd|rn|fffd| zna|fffd|ky"

Cells(1, 1).Select
Selection.Font.Bold = True
With Selection.Interior
  .ColorIndex = 44
  .Pattern = xlSolid
End With

Columns("A:A").EntireColumn.AutoFit

Windows(aktualni_soubor).Activate
'zamknuti pracovnich listu
Zamkni_sktyj_v|fffd|e
Sheets("data").Select

Windows(novy_soubor).Activate

Application.ScreenUpdating = True

End Function
Attribute VB_Name = "M_UpravaFormatu_1_Head"
'Option Explicit
Function UpravaFormatu(usek)
'vypnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
Application.ScreenUpdating = False

'odemknuti vsech listu
Odemkni_zobraz_v|fffd|e
Odemknuti_GDPR
Sheets("data").Select

'Nastaveni hlasky progress baru
sText = "formatovani dat - OBCHOD" & Chr(10)
Aktualizovat_proces (sText)

Dim i As Integer    'pomocna pro for cyklus - sloupce
Dim j As Long    'pomocna pro for cyklus - radky
Dim pocet_radku As Integer  'cislo posledniho radku ve kterem byal nalezena hodnota
pocet_radku = RozahListu()

Dim bunka As String
Dim prava As Variant

'zpracovava se po jednotilivych sloupcich
j = const_pocatek_y_data ' kvuli prednacteni prav pro prislusny sloupec
Proc = 1 / (const_pocet_sloupcu - 1)
For i = const_pocatek_x_data To const_pocet_sloupcu Step 1  'zpracovani sloupcu
  Sheets(usek).Select
  prava = Array(Cells(1, i).Value, Cells(2, i).Value, Cells(3, i).Value, Cells(4, i).Value, Cells(5, i).Value, Cells(6, i).Value, Cells(7, i).Value, Cells(8, i).Value, Cells(9, i).Value, Cells(10, i).Value, Cells(11, i).Value, Cells(12, i).Value, Cells(13, i).Value, Cells(14, i).Value, Cells(15, i).Value, Cells(16, i).Value, Cells(17, i).Value, Cells(18, i).Value, Cells(19, i).Value, Cells(20, i).Value, Cells(21, i).Value, Cells(22, i).Value, Cells(23, i).Value)
  Sheets("data").Select
  'aktualizace progress baru
  Call Aktualizovat_postup

  For j = const_pocatek_y_data To pocet_radku Step 1  'zpracovani radku
    bunka = Cells(j, i).Value

    If (bunka <> "") Then
      'cislo
      If (prava(4) = "x") Then bunka = PrevodCislo(bunka, j, i)

      'text
      If (prava(5) = "x") Then bunka = UCase(Trim(bunka))

      'prevod volba
      If (prava(6) <> "") Then bunka = PrevodVolba(bunka, prava(6))

      'TP
      If (prava(7) = "x") Then bunka = PrevodTp(bunka)

      'PSC
      If (prava(8) = "x") Then bunka = PrevodPsc(bunka, j, i)

      'rc/ico
      If (prava(9) = "x") Then bunka = PrevodRcIco(bunka, j, i)

      'rok vyroby
      If (prava(10) = "x") Then bunka = PrevodRokVyroby(bunka, j, i)

      'vin
      If (prava(11) = "x") Then bunka = PrevodVin(bunka)

      'SPZ
      If (prava(12) = "x") Then bunka = PrevodSpz(bunka)

      'cislo smlouva
      If (prava(13) = "x") Then bunka = PrevodCisloSmlouva(bunka)

      'pocet mist
      If (prava(14) = "x") Then bunka = PrevodOriznutiCisla(bunka)

      'datum
      If (prava(15) = "x") Then bunka = PrevodDatum(bunka, j, i)

      'druh vozidla
      If (prava(16) = "x") Then bunka = PrevodDruhVozidla(bunka)

      'typ vozidla
      If (prava(17) = "x") Then bunka = PrevodTypVozidla(bunka, j)

      Cells(j, i).Value = bunka 'vraceni vysledku do listu
    End If
  Next j
Next i

'aut. prizpusobeni sirky celeho listu
Cells.EntireColumn.AutoFit

'cislo HIP - je mimo vyplnovanou tabulku - proto se spousti mimo hlavni zpracovani
Cells(const_cislo_hip_y, const_cislo_hip_x) = PrevodCisloSmlouva(Cells(const_cislo_hip_y, const_cislo_hip_x))

'zamknuti pracovnich listu
Zamkni_sktyj_v|fffd|e

Worksheets("data").Select

Range("A1").Select

'zapnuti aktualizece obrazovky - pri vypnuti jsou makra rychlejsi
Skryti_GDPR
Application.ScreenUpdating = True

MsgBox ("Data byla naform|fffd|tov|fffd|na.")

End Function
Attribute VB_Name = "M_UpravaFormatu_2_Body"
'Option Explicit
'######################
'######################
'  PREDMET POJISTNI
'######################
'######################

'###############
'Druh vozidla
'###############
Function PrevodDruhVozidla(Retezec) As String
Dim retezec_zaloha As String  'pokud by vysledkem transformace nebyla regulerni hodnota, vrati se hodnota, ktera do funkce vstoupila
Retezec = UCase(Trim(Retezec))

Select Case Retezec
  Case "O", "OSOBN|fffd|", "OSOBN|fffd| AUTOMOBIL", "OSOBNI", "OSOBNI AUTOMOBIL", "OSOBN|fffd| AUTO", "OSOBNI AUTO", "OA": Retezec = "OSOBN|fffd| AUTOMOBIL"
  Case "OB", "OBYTN|fffd| AUTOMOBIL", "OBYTNY AUTOMOBIL": Retezec = "OBYTN|fffd| AUTOMOBIL"
  Case "SAN", "SANITN|fffd|", "SA", "SANITN|fffd| AUTOMOBIL", "SANITNI", "SANITNI AUTOMOBIL": Retezec = "SANITN|fffd| AUTOMOBIL"
  Case "D", "U|fffd|ITKOV|fffd|", "UZITKOVY", "U|fffd|ITKOV|fffd| AUTOMOBIL", "UZITKOVY AUTOMOBIL", "U|fffd|ITKOV|fffd|", "UZITKOVE", "U|fffd|ITKOV|fffd|", "UZITKOVY", "N1": Retezec = "U|fffd|ITKOV|fffd| AUTOMOBIL"
  Case "M", "MOTOCYKL", "MOPED", "MOTORKA": Retezec = "MOTOCYKL"
  Case "N", "N|fffd|KLADN|fffd| AUTOMOBIL", "N|fffd|KLADN|fffd|", "NAKLADNI AUTOMOBIL", "NAKLADNI", "NA": Retezec = "N|fffd|KLADN|fffd| AUTOMOBIL"
  Case "H", "TAHA|fffd|", "TN", "TAHA|fffd| N|fffd|VES|fffd|", "TAHAC", "TAHAC NAVESU": Retezec = "TAHA|fffd| N|fffd|V|fffd|S|fffd|"
  Case "A", "AUTOBUS", "BUS", "MHD": Retezec = "AUTOBUS"
  Case "J", "TROLEJBUS": Retezec = "TROLEJBUS"
  Case "P", "P|fffd||fffd|VES", "P|fffd||fffd|POJN|fffd| VOZIDLO", "PRIVES", "PRIPOJNE VOZIDLO": Retezec = "P|fffd||fffd|V|fffd|S"
  Case "PT", "N|fffd|V|fffd|S", "NAVES": Retezec = "N|fffd|V|fffd|S"
  Case "TRZ", "TRAKTOR S RZ", "T", "TRAKTOR BEZ RZ": Retezec = "TRAKTOR"
  Case "XRZ", "PRACOVN|fffd| STROJ S RZ", "PRAC. STROJ S RZ", "PRACOVNI STROJ S RZ", "PRAC STROJ S RZ", "X", "PRACOVN|fffd| STROJ BEZ RZ", "PRAC. STROJ BEZ RZ", "PRACOVNI STROJ BEZ RZ", "PRAC STROJ BEZ RZ": Retezec = "PRACOVN|fffd| STROJ"
  Case "VOZ", "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K", "VZV", "VYSOKOZDVIZNY VOZIK", "VYSOKOZDVIH": Retezec = "VYSOKOZDVI|fffd|N|fffd| VOZ|fffd|K"
End Select

PrevodDruhVozidla = Retezec
End Function

Function PrevodTypVozidla(Retezec As String, sour_ra As Long) As String
 Retezec = UCase(Trim(Retezec))

 Select Case Cells(sour_ra, const_znacka_vozidla_x)
  Case "|fffd|KODA"
   If (InStrRev(Retezec, "OCT|fffd|VIA")) Then Retezec = Replace(Retezec, "OCT|fffd|VIA", "OCTAVIA")
   If (InStrRev(Retezec, "OKTAVIA")) Then Retezec = Replace(Retezec, "OKTAVIA", "OCTAVIA")
   If (InStrRev(Retezec, "OKT|fffd|VIA")) Then Retezec = Replace(Retezec, "OKT|fffd|VIA", "OCTAVIA")
   If (InStrRev(Retezec, "OCTAVIE")) Then Retezec = Replace(Retezec, "OCTAVIE", "OCTAVIA")
   If (InStrRev(Retezec, "OCT|fffd|VIE")) Then Retezec = Replace(Retezec, "OCT|fffd|VIE", "OCTAVIA")
   If (InStrRev(Retezec, "OKTAVIA")) Then Retezec = Replace(Retezec, "OKTAVIA", "OCTAVIA")
   If (InStrRev(Retezec, "OKT|fffd|VIA")) Then Retezec = Replace(Retezec, "OKT|fffd|VIA", "OCTAVIA")

   If (InStrRev(Retezec, "F|fffd|BIA")) Then Retezec = Replace(Retezec, "F|fffd|BIA", "FABIA")
   If (InStrRev(Retezec, "FABIE")) Then Retezec = Replace(Retezec, "FABIE", "FABIA")
   If (InStrRev(Retezec, "F|fffd|BIE")) Then Retezec = Replace(Retezec, "F|fffd|BIE", "FABIA")
   
   If (InStrRev(Retezec, "FELICIE")) Then Retezec = Replace(Retezec, "FELICIE", "FELICIA")
   
   If (InStrRev(Retezec, "PICKUP")) Then Retezec = Replace(Retezec, "PICKUP", "PICK UP")
   
   If (InStrRev(Retezec, "PRAKTIC")) Then Retezec = Replace(Retezec, "PRAKTIC", "PRAKTIK")
   
   If (InStrRev(Retezec, "KODIAC")) Then Retezec = Replace(Retezec, "KODIAC", "KODIAQ")
   If (InStrRev(Retezec, "KODIAK")) Then Retezec = Replace(Retezec, "KODIAK", "KODIAQ")
   
   If (InStrRev(Retezec, "KAROK")) Then Retezec = Replace(Retezec, "KAROK", "KAROQ")
   If (InStrRev(Retezec, "KAROC")) Then Retezec = Replace(Retezec, "KAROC", "KAROQ")

   If (InStrRev(Retezec, "ROMSTER")) Then Retezec = Replace(Retezec, "ROMSTER", "ROOMSTER")
    
   If (InStrRev(Retezec, "YETTY")) Then Retezec = Replace(Retezec, "YETTY", "YETI")
   If (InStrRev(Retezec, "YETY")) Then Retezec = Replace(Retezec, "YETY", "YETI")
 End Select

 PrevodTypVozidla = Retezec
End Function

'######################
'######################
'  ZBYTEK
'######################
'######################

'###############
'v ciselnem retezci pokud najde jiny znak nez cislo, tak vse za timto znakem zahodi (vcetne neciselneho znaku)
'###############
'##bylo pozadovano aby jakmile se objevi necisely znak, tak aby se od nej zbytek zahodil
'##casto se zadava 9/13 - devet mist a trinact mist po nejake sedackove uprave vozidla
'oriznuti o prebytecne mezery
'kontrola na pripustne znaky:znak po znaku - pokud se objevi znak mimo mnozinu, kontrola znaku se zastavi
'pokud z kontroly na pripustne znaky vzesel prazdny retezec
'  vrati se co do funkce prislo
'pokud z kontroly na pripustne znaky vzeslel neprazdny retezec
'  vrati se retezec z kontroly na pripustne znaky
Function PrevodOriznutiCisla(Retezec) As String
Dim retezec_zaloha As String  'pokud by vysledkem transformace nebyla regulerni hodnota, vrati se hodnota, ktera do funkce vstoupila
Retezec = Trim(Retezec)
retezec_zaloha = Retezec

i = 1
For i = 1 To Len(Retezec) Step 1  'zpracovani radku
  Select Case Mid(Retezec, i, 1)
    Case "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"
      retezec_ocisteny = retezec_ocisteny & Mid(Retezec, i, 1)
    Case Else
      Exit For
  End Select
Next i

If (Len(retezec_ocisteny) = 0) Then
  Retezec = retezec_zaloha
Else
  Retezec = retezec_ocisteny
End If

PrevodOriznutiCisla = Retezec
End Function
    
'###############
'Prevadi retezec na spravny tvar cisla smlouvy
'###############
'oriznuti o prebytecne mezery
'odstraneni nezadanych znaku
Function PrevodCisloSmlouva(Retezec) As String
Dim retezec_zaloha As String  'pokud by vysledkem transformace nebyla regulerni hodnota, vrati se hodnota, ktera do funkce vstoupila
Retezec = Trim(Retezec)
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, ".", "")
Retezec = Replace(Retezec, "/", "")
PrevodCisloSmlouva = Retezec


End Function

'###############
'Prevadi retezec na spravny format cisla
'###############
'odstraneni mezer
'nahrada tecek za carky
'odstranenni meny
'pokud je cislo
'  zaokrouhli se cislo
'  vrati se cislo
'pokud neni cislo
'  vrati se hodnota, ktera do funce vstoupila
Function PrevodCislo(Retezec As String, sour_ra As Long, sour_sl As Integer) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni cislo, vrati se hodnota, ktera do funkce vstoupila
 retezec_zaloha = Retezec

 If Len(Retezec) > 0 Then
  Retezec = Replace(Retezec, " ", "") 'odstrani veskere mezery v retezci
  Retezec = Replace(Retezec, ".", ",") 'nahradi veskere desetinne tecky za carky

  Retezec = StrReverse(Retezec)  'otoci poradi znaku v retezci, aby pro odstraneni meny na konci
  Dim i As Integer 'pomocna pro cyklus
  Dim x As String  'docasna promenna pro uchovani casti retezce
  For i = 1 To Len(Retezec) Step 1
   If IsNumeric(Mid(Retezec, i, 1)) Then Exit For
  Next i
  Retezec = StrReverse(Retezec)  'otoci poradi znaku v retezci zpatky do spravneho poradi
  Retezec = Left(Retezec, Len(Retezec) - i + 1)
  If IsNumeric(Retezec) Then
   Retezec = Round(Retezec)
   PrevodCislo = Retezec
   Cells(sour_ra, sour_sl).NumberFormat = "0"
  Else
   PrevodCislo = retezec_zaloha
  End If
 End If
End Function

'###############
'Prevadi retezec na spravny format SPZ
'###############
'orizne o mezerzy prevede na velke pismena
'odstrani se nezadouci znaky
Function PrevodSpz(Retezec) As String
Retezec = UCase(Trim(Retezec))
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, "/", "")

Retezec = Replace(Retezec, "|fffd|", "E")
Retezec = Replace(Retezec, "|fffd|", "S")
Retezec = Replace(Retezec, "|fffd|", "C")
Retezec = Replace(Retezec, "|fffd|", "R")
Retezec = Replace(Retezec, "|fffd|", "Z")
Retezec = Replace(Retezec, "|fffd|", "Y")
Retezec = Replace(Retezec, "|fffd|", "A")
Retezec = Replace(Retezec, "|fffd|", "I")
Retezec = Replace(Retezec, "|fffd|", "E")
Retezec = Replace(Retezec, "|fffd|", "U")
Retezec = Replace(Retezec, "|fffd|", "U")
Retezec = Replace(Retezec, "|fffd|", "O")
Retezec = Replace(Retezec, "|fffd|", "N")
Retezec = Replace(Retezec, "|fffd|", "D")
Retezec = Replace(Retezec, "|fffd|", "T")

PrevodSpz = Retezec
End Function

'###############
'Prevadi retezec na spravny format VIN
'###############
'orizne o mezerzy prevede na velke pismena
'odstrani/nahradi se nezadouci znaky
Function PrevodVin(Retezec) As String
Retezec = UCase(Trim(Retezec))
Retezec = Replace(Retezec, "O", "0")
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, "/", "")
Retezec = Replace(Retezec, ".", "")
Retezec = Replace(Retezec, ",", "")
Retezec = Replace(Retezec, "%", "")
Retezec = Replace(Retezec, "?", "")

PrevodVin = Retezec
End Function

'###############
'Prevadi retezec na spravny format TP
'###############
'orizne o mezerzy prevede na velke pismena
'nahradi znaky, ktere v TP nemaji byt
'pokud je delka 8 znaku
'  nahradi v prvnich dvou znacich "0" za "O"
'  nahradi v poslednich osmi znacich "O" za "0"
'  vrati se sloucene casti 1 a cast2
'pokud neni delka 8 znaku
'  vrati se hodnota, ktera do funce vstoupila ale s odstranenymi znaky, ktere tam nemaji byt
Function PrevodTp(Retezec) As String
Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni TP, vrati se hodnota, ktera do funkce vstoupila
Retezec = UCase(Trim(Retezec))
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, "/", "")
retezec_zaloha = Retezec
If (Len(Retezec) = 8) Then
  Dim cast1 As String
  Dim cast2 As String
  cast1 = Left(Retezec, 2)
  cast1 = Replace(cast1, "0", "O")
  cast2 = Right(Retezec, 6)
  cast2 = Replace(cast2, "O", "0")
  PrevodTp = cast1 & cast2
Else
  PrevodTp = retezec_zaloha
End If
End Function

'###############
'Prevadi retezec na spravny format PSC
'###############
'odstrani mezery
'pokud je retezec cislo a jeho delka je 5 znaku tak
'  vrati upravenou hodnotu
'  nastavi formatovani PSC
'pokud neni retezec cislo a jeho delka neni 5 znaku tak
'  vrati puvodni hodnotu
Function PrevodPsc(Retezec As String, sour_ra As Long, sour_sl As Integer) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni PSC, vrati se hodnota, ktera do funkce vstoupila
 retezec_zaloha = Retezec
 Retezec = Replace(Retezec, " ", "")
 If IsNumeric(Retezec) And Len(Retezec) = 5 Then
  PrevodPsc = Retezec
  Cells(sour_ra, sour_sl).NumberFormat = "000 00"
 Else
  PrevodPsc = retezec_zaloha
 End If
End Function

'###############
'Prevadi retezec na spravny format RC/ICA
'###############
'odstrani mezery a prevede na velka pismena
'odstrani znaky: " ", ".", ",","-", "/", "\", "RC", "R|fffd|", "I|fffd|O", "ICO", "I|fffd|", "IC"
'pokud je retezec cislo a jeho delka je 8-10 znaku tak
'  vrati upravenou hodnotu
'  nastavi formatovani cisla bez des. casti a oddelovani tisicu
'pokud neni retezec cislo a jeho delka neni 8-10 znaku tak
'  vrati puvodni hodnotu
Function PrevodRcIco(Retezec As String, sour_ra As Long, sour_sl As Integer) As String
Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni rc/ico, vrati se hodnota, ktera do funkce vstoupila
retezec_zaloha = Retezec
Retezec = UCase(Trim(Retezec))
Retezec = Replace(Retezec, " ", "")
Retezec = Replace(Retezec, ".", "")
Retezec = Replace(Retezec, ",", "")
Retezec = Replace(Retezec, "-", "")
Retezec = Replace(Retezec, "/", "")
Retezec = Replace(Retezec, "\", "")
Retezec = Replace(Retezec, "RC", "")
Retezec = Replace(Retezec, "R|fffd|", "")
Retezec = Replace(Retezec, "I|fffd|O", "")
Retezec = Replace(Retezec, "ICO", "")
Retezec = Replace(Retezec, "I|fffd|", "")
Retezec = Replace(Retezec, "IC", "")

If IsNumeric(Retezec) And Len(Retezec) >= 8 And Len(Retezec) <= 10 Then
  PrevodRcIco = Retezec
  Cells(sour_ra, sour_sl).NumberFormat = "@"
Else
  PrevodRcIco = retezec_zaloha
End If

End Function

'###############
'Prevadi retezec na spravny format roku vyroby (RRRR)
'###############
Function PrevodRokVyroby(Retezec As String, sour_ra As Long, sour_sl As Integer) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni rc/ico, vrati se hodnota, ktera do funkce vstoupila
 retezec_zaloha = Retezec
 Retezec = UCase(Trim(Retezec))

 If IsDate(Retezec) Then
  PrevodRokVyroby = Year(Retezec)
  Cells(sour_ra, sour_sl).NumberFormat = "@"
 Else
  PrevodRokVyroby = retezec_zaloha
 End If
End Function

'###############
'Prevadi retezec na spravny format data (dd.mm.rrrr)
'###############
Function PrevodDatum(Retezec As String, sour_ra As Long, sour_sl As Integer) As String
 Dim retezec_zaloha As String  'pokud by vysledkem transformace nebylo regulerni rc/ico, vrati se hodnota, ktera do funkce vstoupila
 retezec_zaloha = Retezec

 Retezec = UCase(Trim(Retezec))

 If IsDate(Retezec) Then
  PrevodDatum = Format(Retezec, "dd.mm.yyyy")
  Cells(sour_ra, sour_sl).NumberFormat = "dd.mm.yyyy" '"@"
 Else
  PrevodDatum = retezec_zaloha
 End If
End Function

''###############
''Nastavuje na hodnotu N - v teto verzi neni kratkodobe pojisteni podporovano
''###############
''vrani hodnotu N
'Function PrevodKratkodobaSmlouva(retezec) As String
'  PrevodKratkodobaSmlouva = "N"
'End Function

'###############
'Prevadi retezec na spravny tvar (ridi parametr typ)
'###############
Function PrevodVolba(Retezec, typ) As String
Dim retezec_zaloha As String  'pokud by vysledkem transformace nebyla regulerni hodnota, vrati se hodnota, ktera do funkce vstoupila
retezec_zaloha = Retezec
Retezec = UCase(Trim(Retezec))

Select Case typ
  Case "ano-ne"
    Select Case Retezec
      Case "A", "ANO"
        PrevodVolba = "A"
      Case "N", "NE"
        PrevodVolba = "N"
      Case Else
        PrevodVolba = retezec_zaloha
    End Select

  Case "specialni sazba"
    Select Case Retezec
      Case "B"
        PrevodVolba = "B"
      Case "R"
        PrevodVolba = "R"
      Case "S"
        PrevodVolba = "S"
      Case "H"
        PrevodVolba = "H"
      Case "N"
        PrevodVolba = "N"
      Case Else
        PrevodVolba = retezec_zaloha
    End Select

  Case "druh-zabezpeceni"
    Select Case Retezec
      Case "B", "BEZ", "BEZ ZABEZBE|fffd|EN|fffd|", "BEZ ZABEZPECENI", "IMOBILIZ|fffd|R", "IMOBILIZER", "BEZPE|fffd|N|fffd| ZAM|fffd|ENO", "BEZPE|fffd|N|fffd| UZAM|fffd|ENO"
        PrevodVolba = "B"
      Case "M", "MECHANICK|fffd|", "MECHANICKE"
        PrevodVolba = "M"
      Case "A", "AKTIVN|fffd|", "AKTIVN|fffd|", "AKTIVN|fffd| VYHLED|fffd|VAC|fffd|", "AKTIVNI VYHLEDAVACI"
        PrevodVolba = "A"
      Case "MA", "AM", "MECHANICK|fffd| A AKTIVN|fffd|", "AKTIVN|fffd| A MECHANICK|fffd|"
        PrevodVolba = "MA"
      Case Else
        PrevodVolba = retezec_zaloha
    End Select
  Case Else
    MsgBox ("chyba")
End Select
End Function
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Option Explicit
'###############
'vytvori v navigavi menu flotily
'###############
Private Sub Workbook_Activate()
 AddMenu
End Sub

'###############
'pri prepnuti na jiny soubor excelu odstranuje menu flotily
'###############
Private Sub Workbook_Deactivate()
 On Error Resume Next
 Application.CommandBars("Worksheet Menu Bar").Controls("SUS Flotily").Delete
End Sub

'###############
'pred ulozenim skryje pracovni listy
'###############
Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
 Zamkni_sktyj_v|fffd|e

 Select Case ActiveSheet.Name
  Case "N|fffd|pov|fffd|da", "data", "Zm|fffd|ny", "Odhl|fffd|ky"
  Case Else
   Sheets("N|fffd|pov|fffd|da").Select
 End Select
 
 OdemkniS
 Sheets("data-export").Visible = False
 ZamkniS
End Sub

'###############
'pred otevrenim souboru
'###############
Private Sub Workbook_Open()
 Zamkni_sktyj_v|fffd|e
 public_spravce_prihlasen = False
 Sheets("N|fffd|pov|fffd|da").Select
End Sub

'###############
'Zobrazeni napovedy
'###############
Private Sub Workbook_SheetFollowHyperlink(ByVal Sh As Object, ByVal Target As Hyperlink)
 If ActiveSheet.Name = "data" Then
'zjisti souradnici bunky, ze ktere se vola napoveda
  TextNapoveda = Sheets("napoveda").Range(ActiveCell.Address(False, False)).Value

'pro pripad, ze by se jednalo o dynamicky tvorenou napovedu
  Select Case TextNapoveda
   Case "dynamicka napoveda - druh vozidla"
    TextNapoveda = _
      "Druh vozidla" & Chr(10) & Chr(10) & _
      "O" & Chr(9) & " - osobn|fffd| automobil" & Chr(10) & _
      "SAN" & Chr(9) & " - sanitn|fffd| automobil" & Chr(10) & _
      "OB" & Chr(9) & " - obytn|fffd| automobil" & Chr(10) & _
      "D" & Chr(9) & " - u|fffd|itkov|fffd| automobil" & Chr(10) & _
      "M" & Chr(9) & " - motocykl" & Chr(10) & _
      "N" & Chr(9) & " - n|fffd|kladn|fffd| automobil" & Chr(10) & _
      "H" & Chr(9) & " - taha|fffd| n|fffd|v|fffd|s|fffd|" & Chr(10) & _
      "A" & Chr(9) & " - autobus" & Chr(10) & _
      "J" & Chr(9) & " - trolejbus" & Chr(10) & _
      "P" & Chr(9) & " - p|fffd||fffd|v|fffd|s" & Chr(10) & _
      "PT" & Chr(9) & " - n|fffd|v|fffd|s" & Chr(10) & _
      "T" & Chr(9) & " - traktor" & Chr(10) & _
      "X" & Chr(9) & " - pracovn|fffd| stroj" & Chr(10) & _
      "VOZ" & Chr(9) & " - vysokozdvi|fffd|n|fffd| voz|fffd|k"
   Case "dynamicka napoveda - typ flotily HAV"
    TextNapoveda = _
      "Typ flotily HAV" & _
      "Vypl|fffd|te k|fffd|d produktu, ke kter|fffd|mu sjedn|fffd|v|fffd|te autopoji|fffd|t|fffd|n|fffd| VHF nebo VCA nebo VEF." & _
      Chr(10) & Chr(10) & _
      "Typ flotily:" & Chr(10) & _
      "K" & Chr(9) & " - klasick|fffd|" & Chr(10) & _
      "S" & Chr(9) & " - speci|fffd|ln|fffd|" & Chr(10) & _
      "A" & Chr(9) & " - asistence plus" & Chr(10) & _
      "T" & Chr(9) & " - asistence TIR"
   Case "dynamicka napoveda - frekvence placeni"
    TextNapoveda = _
      "Frekvence poji|fffd|t|fffd|n|fffd|" & Chr(10) & Chr(10) & _
      "Vypl|fffd|ujte |fffd||fffd|slo frekvence" & Chr(10) & _
      "ro|fffd|n|fffd|" & Chr(9) & " - 1" & Chr(10) & _
      "pololetn|fffd|" & Chr(9) & " - 2" & Chr(10) & _
      "|fffd|tvrtletn|fffd|" & Chr(9) & " - 4" & Chr(10) & _
      "m|fffd|s|fffd||fffd|n|fffd|" & Chr(9) & " - 12" & Chr(10) & Chr(10) & _
      "Pozn.:" & Chr(10) & _
      "U flotily Asistence Plus a TIR lze sjednat pouze frekvenci ro|fffd|n|fffd| a p|fffd|lro|fffd|n|fffd|."
  End Select
  MsgBox (TextNapoveda)
 End If
End Sub
Attribute VB_Name = "VBA_Wrapper"
Option Explicit
Sub Aktualizovat_postup(Optional Nulovat As Boolean)
 With F_Postup
  Stav = IIf(Nulovat, 0, Stav + Proc)
  .Ramec_postupu.Caption = Format(Stav, "0%")
  .Popis_postupu.Width = Stav * (.Ramec_postupu.Width - 10)
  .Repaint
 End With
End Sub
Sub Aktualizovat_proces(Text As String)
 With F_Postup
  .Popis_procesu.Caption = Text
  .Repaint
 End With
End Sub

Attribute VB_Name = "WebServiceFces"
Option Explicit

Public Function createSOAPMsg(webServiceName, methodName, paramsName, paramsValue, paramsType) As String
Attribute createSOAPMsg.VB_ProcData.VB_Invoke_Func = " \n14"
Dim SOAPParams

Dim i
For i = 0 To UBound(paramsName) - 1
  SOAPParams = SOAPParams + "<" + paramsName(i) + " xsi:type='xsd:" + paramsType(i) + "'>" + paramsValue(i) + "</" + paramsName(i) + ">"
Next i

Dim msg As String
msg = msg + "<SOAP-ENV:Envelope xmlns:SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/' xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' SOAP-ENV:encodingStyle='http://schemas.xmlsoap.org/soap/encoding/'> "
msg = msg + "<SOAP-ENV:Body> "
msg = msg + "   <m:" + methodName + " xmlns:m='" + webServiceName + "'> "
msg = msg + SOAPParams
msg = msg + "   </m:" + methodName + ">"
msg = msg + "</SOAP-ENV:Body> "
msg = msg + "</SOAP-ENV:Envelope>"

createSOAPMsg = msg
End Function

Public Function processWebServices(webServiceName, methodName, paramsName, paramsValue, paramsType) As String
Attribute processWebServices.VB_ProcData.VB_Invoke_Func = " \n14"
'nejdriv se pokusim stahnout certifikat
If getCertificate = False Then
  MsgBox "Nepoda|fffd|ilo se st|fffd|hnout certifik|fffd|t pro komunikaci s CS."
  Exit Function
End If
    
' vytvorim request
Dim request As MSXML2.XMLHTTP
Set request = New MSXML2.XMLHTTP

Dim SERVER_URL As String

SERVER_URL = WebSoubor(1)

request.Open "POST", SERVER_URL
    
' slozim SOAP zpravu
Dim msg As String
msg = createSOAPMsg(webServiceName, methodName, paramsName, paramsValue, paramsType)

request.setRequestHeader "SOAPAction", webServiceName
'request.setRequestHeader "Content-Type", "text/xml; charset=utf-8"
    
' vlozim SOAP zpravu do pozadavku
request.send (msg)
    
Dim dom As MSXML2.DOMDocument
Set dom = New MSXML2.DOMDocument
dom.Load request.responseXML

Dim iLoop As Long
Do While Len(dom.XML) = 0
  'excel je moc rychlej, musim pockat nez si stahne certifikat a response
  dom.Load request.responseXML
  DoEvents
  iLoop = iLoop + 1
Loop

Dim retur As MSXML2.IXMLDOMNode
Set retur = dom.getElementsByTagName("return").Item(0)
    
processWebServices = retur.XML
End Function

Public Function getCertificate() As Boolean
Attribute getCertificate.VB_ProcData.VB_Invoke_Func = " \n14"
On Error Resume Next

Dim SERVER_URL As String

SERVER_URL = WebSoubor(1)
If (SERVER_URL = "chyba") Then
  getCertificate = False
  Exit Function
End If

Dim certificate As MSXML2.XMLHTTP
Set certificate = New MSXML2.XMLHTTP
certificate.Open "GET", SERVER_URL
certificate.send
    
Dim iLoop As Long
'Do While certificate.statusText <> "OK"
'  'excel je moc rychlej, musim pockat nez si stahne certifikat a response
'  DoEvents
'  iLoop = iLoop + 1
'Loop

Do While IsError(certificate.statusText)
  'excel je moc rychlej, musim pockat nez si stahne certifikat a response
  DoEvents
  iLoop = iLoop + 1
Loop

If certificate.statusText = "OK" Then
  getCertificate = True
Else
  getCertificate = False
End If
End Function

Public Function getRequest() As Object
Attribute getRequest.VB_ProcData.VB_Invoke_Func = " \n14"
Dim oHttp As Object
    
' Create an XMLHTTP object
On Error Resume Next
Set oHttp = CreateObject("MSXML2.XMLHTTP")
If Err.Number <> 0 Then
  Set oHttp = CreateObject("MSXML.XMLHTTPRequest")
End If

getRequest = oHttp
End Function
Attribute VB_Name = "ufExport"
Attribute VB_Base = "0{14B31BEE-3ED0-4571-9D10-C771F5145981}{DB683463-E7C3-4AAA-AA4F-63C7D18CD651}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Dim bResetUser As Boolean
Const BATCH_LINE_LIMIT As Long = 50000

Private Sub cmdExport_Click()
Application.ScreenUpdating = False
Dim result As Boolean
'zkusim overit uzivatele v CS
result = checkLogin
If Not result Then Exit Sub

'provedu export
processExport
Application.ScreenUpdating = True
End Sub

Private Function checkLogin() As Boolean
checkLogin = True

On Error GoTo errHandler

Dim result As Boolean
Dim poleName(3), poleValue(3), poleType(3)

poleName(0) = "importerNum"
poleName(1) = "importerLogin"
poleName(2) = "importerPassword"

poleValue(0) = txtSjedNum.Text
poleValue(1) = txtLogin.Text
poleValue(2) = txtPsw.Text

poleType(0) = "string"
poleType(1) = "string"
poleType(2) = "string"

clientNum = txtSjedNum.Text
clientLogin = txtLogin.Text
clientPsw = txtPsw.Text

Dim rString As String
rString = processWebServices("urn:FleetImportWS", "checkUser", poleName, poleValue, poleType)

If Len(Trim(rString)) > 0 Then
  Dim oResult As MSXML2.DOMDocument
  Set oResult = New MSXML2.DOMDocument
  oResult.loadXML rString
    
  Select Case oResult.childNodes.Item(0).childNodes.Item(0).Text
    Case "1"    '1 |fffd| neplatn|fffd| p|fffd|ihl|fffd|en|fffd|
      MsgBox "Neplatn|fffd| sjednatelsk|fffd| |fffd||fffd|slo, p|fffd|ihla|fffd|ovac|fffd| jm|fffd|no nebo heslo."
      result = False
    Case "2"    '2 |fffd| platn|fffd| heslo do CS, ale u|fffd|ivatel nem|fffd| pr|fffd|vo exportovat
      MsgBox "U|fffd|ivatel nem|fffd| pr|fffd|vo exportovat data."
      result = False
    Case "3"    '3 |fffd| platn|fffd| heslo do CS, u|fffd|ivatel m|fffd| pr|fffd|vo exportovat
      result = True
  End Select
   
  clientAutorized = result
  checkLogin = result
Else
  checkLogin = False
End If

Exit Function

errHandler:
    
MsgBox "Nepoda|fffd|ilo se nav|fffd|zat komunikaci s CS."
result = False
checkLogin = result
End Function

Private Function processExport() As Boolean
'cislo hip
Sheets("data").Select
Dim cislo_hip As String
cislo_hip = Right("0000000000" & (Cells(const_cislo_hip_y, const_cislo_hip_x)), 10)
Sheets("data-export").Select

'kontrola casu
Dim startDate As Double, endDate As Double
startDate = Timer

'provedu export dat do CS
On Error GoTo errHandler
Dim result As Boolean

Dim okType As Integer
    
Dim cntBatchParts As Integer
cntBatchParts = 1

Sheets("data-export").Select
Dim Retezec As String
Retezec = ""

Dim pocet_radku As Integer
pocet_radku = RozahListu()

Dim i, j As Integer

Odemkni_zobraz_v|fffd|e

Retezec = ""
For i = const_pocatek_y_data_export To pocet_radku
  Sheets("data-export").Select
  For j = 1 To const_pocet_slucovanych_dat
    Retezec = Retezec & Cells(i, j) 'Range(Cells(i, j), Cells(i, j)).Value
    If (j <> const_pocet_slucovanych_dat) Then Retezec = Retezec & "|||"
  Next j
  If (i <> pocet_radku) Then Retezec = Retezec & "#|#"
'If (i <> (pocet_radku - const_pocatek_y_data_export)) Then retezec = retezec & "#|#"
Next i

Dim msgCS As String, batchNum As String
msgCS = ""
Dim idx_data As Long, idx_part As Integer
idx_part = 1
msgCS = Retezec
Dim poleName(9), poleValue(9), poleType(9)

Dim BATCH_FORMAT As String
BATCH_FORMAT = WebSoubor(2)

poleName(0) = "data"               'davka datovych vet pro smlouvy
poleName(1) = "hash"               'hash davky pro overeni spravneho prenosu
poleName(2) = "hip"                'cislo ramcove smlouvy. pokud toto cislo neexistuje, vytvori se
poleName(3) = "batch"              'identifikace (cislo) davky. Pokud neni vyplneno, nevo je <=0, je vytvorena nova davka a jeji cislo se preda na vystupu
poleName(4) = "format"             'identifikace formatu datove vety
poleName(5) = "lastPiece"          '"1", pokud se jedna o posledni kus davky
poleName(6) = "importerNum"        'cislo importujiciho sjednatele
poleName(7) = "importerLogin"      'login importujiciho sjednatele
poleName(8) = "importerPassword"   'heslo do CS importujiciho sjednatele

poleValue(0) = msgCS
poleValue(1) = ""
poleValue(2) = cislo_hip
poleValue(3) = batchNum
poleValue(4) = BATCH_FORMAT
poleValue(5) = "1"
poleValue(6) = txtSjedNum.Text
poleValue(7) = txtLogin.Text
poleValue(8) = txtPsw.Text

poleType(0) = "string"
poleType(1) = "string"
poleType(2) = "string"
poleType(3) = "string"
poleType(4) = "string"
poleType(5) = "string"
poleType(6) = "string"
poleType(7) = "string"
poleType(8) = "string"

Dim rString As String
rString = processWebServices("urn:FleetImportWS", "saveFleetData", poleName, poleValue, poleType)

Dim oResult As MSXML2.DOMDocument
Set oResult = New MSXML2.DOMDocument
oResult.loadXML rString

'provedu kontrolu zpracovani
Select Case Trim(oResult.childNodes.Item(0).childNodes.Item(0).Text)
  Case "1"    '1 |fffd| datov|fffd| v|fffd|ta byla p|fffd|enesena a ulo|fffd|ena
    batchNum = oResult.childNodes.Item(0).childNodes.Item(1).Text
    result = True
    If okType = 0 Then okType = 1
  Case "2"    '2 |fffd| p|fffd|enos a ulo|fffd|en|fffd| se nezda|fffd|ilo
    MsgBox "P|fffd|enos dat se nezda|fffd|il, opakujte akci."
    result = False
  Case "3"    '3 |fffd| datov|fffd| v|fffd|ta byla p|fffd|enesena, ulo|fffd|ena a byla automaticky zalo|fffd|ena r|fffd|mcov|fffd| smlouva
    batchNum = oResult.childNodes.Item(0).childNodes.Item(1).Text
    result = True
    If okType = 0 Then okType = 2
  Case "4"    'v SUS existuje smlouva se stejn|fffd|m |fffd||fffd|slem jako je HIP, ale nen|fffd| r|fffd|mcovou smlouvou"
    MsgBox "HIP |fffd||fffd|slo smlouvy je v aplikaci SUS p|fffd|i|fffd|azeno smlouv|fffd|, kter|fffd| nen|fffd| r|fffd|mcovou smlouvou pro importov|fffd|n|fffd| flotil."
    result = False
End Select

Set oResult = Nothing
        
If Not result Then GoTo exitFunction

endDate = Timer

exitFunction:
Zamkni_sktyj_v|fffd|e
If result Then
  Select Case okType
    Case 1
      MsgBox "Export dat byl |fffd|sp|fffd|n|fffd| dokon|fffd|en."
    Case 2
      MsgBox "Export dat byl |fffd|sp|fffd|n|fffd| dokon|fffd|en. R|fffd|mcov|fffd| smlouva byla automaticky zalo|fffd|ena."
  End Select
End If
ufExport.Hide
processExport = result
Exit Function
errHandler:
endDate = Timer

Zamkni_sktyj_v|fffd|e

MsgBox "Nepoda|fffd|ilo se nav|fffd|zat komunikaci s CS."
ufExport.Hide

result = False
processExport = result
End Function


Private Sub txtLogin_Change()
resetClient
End Sub

Private Sub txtPsw_Change()
'MsgBox txtPsw
resetClient
End Sub

Private Sub txtSjedNum_Change()
resetClient
End Sub

Private Sub UserForm_Activate()
bResetUser = False

txtSjedNum.SetFocus
 
bResetUser = True
End Sub

Private Function resetClient()
If Not bResetUser Then Exit Function
clientNum = ""
clientLogin = ""
clientPsw = ""
'txtPswString = ""
clientAutorized = False
End Function

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
'clientNum = txtSjedNum.Text
'clientLogin = txtLogin.Text
'clientPsw = txtPswString
End Sub

' InQuest injected base64 decoded content
' *sV)

INQUEST-PP=macro
