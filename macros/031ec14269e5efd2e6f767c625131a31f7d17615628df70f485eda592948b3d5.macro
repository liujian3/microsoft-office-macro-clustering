Attribute VB_Name = "Common"
Option Explicit

Declare Function CopyFile Lib "kernel32" Alias "CopyFileA" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As Long) As Long

Public Const TEMPLATE_FILENAME_PREFIX = "t_"     '|fffd||fffd||fffd||635||fffd||123||fffd||fffd||fffd||1f0||5fa|
Public TemplateDownFile As String                '|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||13f||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||b7||fffd||fffd|
Public TemplateDownUrl As String                 '|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd|URL|fffd||fffd||5b7|
Public NewDocWord As String                      '|fffd||135||fffd||2b9||fffd||f5||fffd||fffd||b5||fffd||fffd||13c||fffd||fffd||fffd|
Public NewTemplateName As String                 '|fffd||135||fffd||fffd||fffd||fffd||fffd||2b9||fffd||f5||fffd||fffd||b5||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd|
Public OldDocWord As String                      '|fffd||135||fffd||2b9||fffd||f5||fffd||52d||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|
Public OldTemplateName As String                 '|fffd||135||fffd||2b9||fffd||f5||fffd||52d||fffd||fffd||fffd||fffd|word|123||fffd||fffd||fffd||fffd||fffd||fffd|
Public OldWTFlag As String                       '|52d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||5be|
Public NewWTFlag As String                       '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||5be|
Public AutoChangeFlag As Boolean                 '|fffd||536||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||3e2||fffd||fffd||5be|

Function BackupFile(ByVal strFile As String) As Boolean
    Dim strDir As String, strName As String
    strDir = StrLeftBack(strFile, "\")
    strName = StrRightBack(strFile, "\")
    If Len(strName) > 32 Then
        strName = Mid$(strName, 33)
    End If
    ClearOtherDayFile strDir & "\rjoawork.bak"
    BackupFile = CopyFile(strFile, strDir & "\rjoawork.bak\" _
    & Format(Now, "yyyymmddhhnnss") & strName, False)
End Function

Function ClearOtherDayFile(ByVal strDir As String) As Boolean
    On Error Resume Next
    Err.Clear
    Dim sTemp As String
    If Dir(strDir, vbDirectory + vbSystem + vbHidden) = "" Then
        MkDir strDir
    End If
    sTemp = Dir(strDir & "\*.*", vbSystem + vbHidden)
    While sTemp <> ""
        If FileDateTime(strDir & "\" & sTemp) < Now - 4 Then
            Kill strDir & "\" & sTemp
        End If
        sTemp = Dir
    Wend
    ClearOtherDayFile = (Err.Number <> 0)
End Function

Function StrLeftBack(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStrRev(strMain, strSep)
    If intPos Then
        StrLeftBack = Left$(strMain, intPos - 1)
    End If
End Function

Function StrRightBack(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStrRev(strMain, strSep)
    If intPos Then
        StrRightBack = Mid$(strMain, intPos + Len(strSep))
    End If
End Function

Function InStrRev(ByVal strCheck As String, ByVal strMatch As String) As Long
    Dim lngPos As Long
    Do
        InStrRev = lngPos
        lngPos = InStr(lngPos + 1, strCheck, strMatch)
    Loop While lngPos > 0
End Function

Function StrLeft(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStr(strMain, strSep)
    If intPos Then
        StrLeft = Left$(strMain, intPos - 1)
    End If
End Function

Function StrRight(ByVal strMain As String, ByVal strSep As String) As String
    Dim intPos As Integer
    intPos = InStr(strMain, strSep)
    If intPos Then
        StrRight = Mid$(strMain, intPos + Len(strSep))
    End If
End Function

'|fffd||fffd||4bb||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||5b3||27c||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
Function Explode(ByVal strMsg As String, strSep As String)
   Dim arrMsg() As String
   Dim intCount As Long, intStart As Long, intPos As Long
    '|fffd||4f5||fffd||4bb||fffd||fffd||fffd||fffd||138||fffd||fffd||2bc||fffd||fffd|
   intStart = 1
   Do
      intPos = InStr(intStart, strMsg, strSep)
      If intPos = 0 Then Exit Do
      ReDim Preserve arrMsg(intCount)
      arrMsg(intCount) = Mid$(strMsg, intStart, intPos - intStart)
      intStart = intPos + Len(strSep)
      intCount = intCount + 1
   Loop
   ReDim Preserve arrMsg(intCount)
   arrMsg(intCount) = Mid$(strMsg, intStart)
   Explode = arrMsg
End Function

Function Replace(ByVal strSource As String, ByVal strFrom As String, ByVal strTo As String) As String
    Dim intPos As Integer
    intPos = InStr(1, strSource, strFrom)
    Do While intPos > 0
        strSource = Left(strSource, intPos - 1) + strTo + Right$(strSource, Len(strSource) - intPos - Len(strFrom) + 1)
        intPos = InStr(intPos + Len(strTo), strSource, strFrom)
    Loop
    Replace = strSource
End Function

Function Escape(ByVal strInput) As String
     Dim strOutput As String
     Dim strChar As String
     Dim intAscii As Integer
     Dim i As Long
     For i = 1 To Len(strInput)
        strChar = Mid$(strInput, i, 1)
        intAscii = AscW(strChar)
        If intAscii = 160 Then intAscii = 32  '|fffd||530||fffd||1ff||578||fffd||fffd||fffd||fffd||fffd||fffd||2d26||fffd||fffd|
        If ((intAscii < 58) And (intAscii > 47)) Or _
           ((intAscii < 91) And (intAscii > 64)) Or _
           ((intAscii < 123) And (intAscii > 96)) Then
           strOutput = strOutput & strChar
        Else
           strChar = Hex$(intAscii)
           Select Case Len(strChar)
              Case 1
                 strChar = "%0" & strChar
              Case 2
                 strChar = "%" & strChar
              Case 3
                 strChar = "%u0" & strChar
              Case 4
                 strChar = "%u" & strChar
           End Select
           strOutput = strOutput & strChar
        End If
     Next
     Escape = strOutput
End Function

Function GetItemValue(colGet As Collection, ByVal strName As String) As String
    On Error GoTo Errhandle:
    GetItemValue = colGet.Item(strName)
    Exit Function
Errhandle:
End Function

Function SetItemValue(colGet As Collection, ByVal strName As String, ByVal strValue) As Boolean
    On Error GoTo Errhandle:
    colGet.Add strValue, strName
    SetItemValue = True
    Exit Function
Errhandle:
End Function

Function DelItemValue(colGet As Collection, ByVal strName As String)
    On Error GoTo Errhandle:
    colGet.Remove strName
    DelItemValue = True
    Exit Function
Errhandle:
End Function







Attribute VB_Name = "FileDialog"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Type OPENFILENAME
        lStructSize As Long
        hwndOwner As Long
        hInstance As Long
        lpstrFilter As String
        lpstrCustomFilter As String
        nMaxCustFilter As Long
        nFilterIndex As Long
        lpstrFile As String
        nMaxFile As Long
        lpstrFileTitle As String
        nMaxFileTitle As Long
        lpstrInitialDir As String
        lpstrTitle As String
        Flags As Long
        nFileOffset As Integer
        nFileExtension As Integer
        lpstrDefExt As String
        lCustData As Long
        lpfnHook As Long
        lpTemplateName As String
End Type

Private Type CHOOSECOLOR
        lStructSize As Long
        hwndOwner As Long
        hInstance As Long
        rgbResult As Long
        lpCustColors As Long
        Flags As Long
        lCustData As Long
        lpfnHook As Long
        lpTemplateName As String
End Type

Private Declare Function ChooseColorA Lib "comdlg32.dll" (pChoosecolor As CHOOSECOLOR) As Long
Private Declare Function GetOpenFileName Lib "comdlg32.dll" Alias "GetOpenFileNameA" (lpOFN As OPENFILENAME) As Long
Private Declare Function GetSaveFileName Lib "comdlg32.dll" Alias "GetSaveFileNameA" (lpOFN As OPENFILENAME) As Long


Public Enum FlagConstants
    OFN_READONLY = &H1
    OFN_OVERWRITEPROMPT = &H2
    OFN_HIDEREADONLY = &H4
    OFN_NOCHANGEDIR = &H8
    OFN_SHOWHELP = &H10
    OFN_ENABLEHOOK = &H20
    OFN_ENABLETEMPLATE = &H40
    OFN_ENABLETEMPLATEHANDLE = &H80
    OFN_NOVALIDATE = &H100
    OFN_ALLOWMULTISELECT = &H200
    OFN_EXTENSIONDIFFERENT = &H400
    OFN_PATHMUSTEXIST = &H800
    OFN_FILEMUSTEXIST = &H1000
    OFN_CREATEPROMPT = &H2000
    OFN_SHAREAWARE = &H4000
    OFN_NOREADONLYRETURN = &H8000
    OFN_NOTESTFILECREATE = &H10000
    OFN_NONETWORKBUTTON = &H20000
    OFN_NOLONGNAMES = &H40000
    OFN_EXPLORER = &H80000
    OFN_NODEREFERENCELINKS = &H100000
    OFN_LONGNAMES = &H200000
End Enum

Private CC As CHOOSECOLOR
Private OFN As OPENFILENAME

Public Color As Long
Public DialogTitle As String
Public DefaultExt As String
Public FileName As String
Public Filter As String
Public FilterIndex As Long
Public Flags As FlagConstants
Public InitDir As String

Sub ShowColor(ByVal hwndOwner As Long)
    Dim lngRet As Long
    CC.lStructSize = Len(CC)
    CC.hwndOwner = hwndOwner
    CC.rgbResult = Color
    lngRet = ChooseColorA(CC)
    If lngRet Then
        'Color = CC.rgbResult
    End If
End Sub

Sub ShowOpen(ByVal hwndOwner As Long)
    Show hwndOwner
End Sub

Sub ShowSave(ByVal hwndOwner As Long)
    Show hwndOwner, True
End Sub

Private Sub Show(ByVal hwndOwner As Long, Optional ByVal blnSave As Boolean)

    Dim sFileName As String
    sFileName = FileName & String(65000, vbNullChar)
    With OFN
        .lStructSize = Len(OFN)
        .hwndOwner = hwndOwner
        .lpstrFilter = Replace(Filter, "|", vbNullChar) & vbNullChar & vbNullChar
        .nFilterIndex = FilterIndex
        .lpstrFile = sFileName
        .nMaxFile = Len(sFileName)
        .lpstrInitialDir = InitDir
        .lpstrTitle = DialogTitle
        .Flags = Flags
        .lpstrDefExt = DefaultExt
    End With

    Dim iNull As Integer, lngRet As Long
    If blnSave Then
        lngRet = GetSaveFileName(OFN)
    Else
        lngRet = GetOpenFileName(OFN)
    End If
    If lngRet Then
        iNull = InStr(OFN.lpstrFile, vbNullChar & vbNullChar)
        If iNull Then
            FileName = Left$(OFN.lpstrFile, iNull - 1)
        Else
            FileName = OFN.lpstrFile
        End If
    Else
        FileName = ""
    End If
End Sub

Attribute VB_Name = "RJeGov"
Option Explicit

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
    On Error Resume Next
    With ActiveDocument
        Dim oldIndent As Single, strFontName As String, intFontSize As Integer
        oldIndent = Selection.ParagraphFormat.FirstLineIndent
        intFontSize = Selection.Font.Size
        strFontName = Selection.Font.Name
        .Bookmarks.Add Range:=Selection.Range, Name:="InsertFileStart"
        Dialogs(wdDialogInsertFile).Show
        .Bookmarks.Add Range:=Selection.Range, Name:="InsertFileEnd"
        Dim myRange As Range
        Set myRange = .Range(.Bookmarks("InsertFileStart").Start, .Bookmarks("InsertFileEnd").End)
        myRange.Font.Name = strFontName
        myRange.Font.Size = intFontSize
        myRange.ParagraphFormat.FirstLineIndent = oldIndent
        .Bookmarks("InsertFileStart").Delete
        .Bookmarks("InsertFileEnd").Delete
    End With
End Sub

Sub |fffd||9ff4||fffd||6fc||fffd|()
    SetRevisionsOption
    With ActiveDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .TrackRevisions = True
        .PrintRevisions = False
        .ShowRevisions = True
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||fffd||63a||6fc||fffd|()
    With ActiveDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .TrackRevisions = True
        .PrintRevisions = False
        .ShowRevisions = False
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||7ba||6fc||fffd|()
    'SetRevisionsOption
    With ActiveDocument
        .TrackRevisions = False
        .PrintRevisions = False
        .ShowRevisions = False
    End With
End Sub

Sub SetRevisionsOption()
    With Options
        .InsertedTextMark = wdInsertedTextMarkUnderline
        .InsertedTextColor = wdByAuthor
        .DeletedTextMark = wdDeletedTextMarkStrikeThrough
        .DeletedTextColor = wdByAuthor
        .RevisedPropertiesMark = wdRevisedPropertiesMarkUnderline
        .RevisedPropertiesColor = wdByAuthor
        .RevisedLinesMark = wdRevisedLinesMarkLeftBorder
        .RevisedLinesColor = wdAuto
    End With
End Sub

Sub |fffd||fffd||fffd||fffd|OA|3f5||373|()
    ThisDocument.Close
End Sub

'///////////////////////////////////////////////////////////////////
'                      |fffd||fffd||fffd||fffd||fffd||1fa||fffd||377||fffd||fffd||635||132||fffd||fffd||fffd|
'///////////////////////////////////////////////////////////////////
Sub |fffd||fffd||fffd||63a||fffd||377|()
    On Error Resume Next
    'SubjectText|fffd||1e1||fffd||fffd||13c||fffd||fffd||fffd||fffd||2871||fffd||fffd|
    'DocMarkLine|fffd||1e1||fffd||fffd||13a||161||fffd||fffd||fffd||fffd||fffd||13a||fffd||fffd||fffd|
    Dim o As Variant
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .Shapes("SubjectText").TextFrame.TextRange.Font.ColorIndex = wdWhite
        .Shapes("DocMarkLine").Visible = msoFalse
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||2be||fffd||fffd||377|()
    On Error Resume Next
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        .Shapes("SubjectText").TextFrame.TextRange.Font.ColorIndex = wdRed
        .Shapes("DocMarkLine").Visible = msoTrue
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd|()
    On Error Resume Next
    'KeywordText|fffd||1e1||fffd||fffd||fffd||fffd||fffd||2a1||fffd||fffd||fffd|
    'KeywordLine|fffd||1e1||fffd||fffd||fffd||fffd||fffd||2a1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'CopySendText|fffd||1e1||fffd||fffd||fffd||fffd||361||fffd||fffd||fffd|
    Dim nStep As Single
    Dim o As Variant
    Dim vTop
    
    nStep = MillimetersToPoints(10.35)
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        Set o = .Shapes("KeywordText")
        o.Top = o.Top - nStep
        Set o = .Shapes("KeywordLine")
        o.Top = o.Top - nStep
        Set o = .Shapes("CopySendText")
        vTop = o.Top
        'MsgBox "Top1==" & CStr(o.Top) & ",height=" & CStr(o.Height) + ",nStep=" & CStr(nStep)
        'MsgBox "vTop==" & CStr(vTop)
        o.Height = o.Height + nStep
        o.Top = vTop - nStep
        'MsgBox "Top2==" & CStr(o.Top) & ",height=" & CStr(o.Height) + ",nStep=" & CStr(nStep)
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
End Sub

Sub |fffd||fffd||fffd||37c||fffd||fffd||fffd||4bb||fffd||fffd|()
    On Error Resume Next
    Dim nStep As Single
    Dim o As Variant
    Dim vTop
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa||fffd||fffd||421||fffd||fffd||2b1||fffd||fffd||fffd||fffd||421|
    Dim tshape As Shape
    Set tshape = ThisDocument.Shapes("CopySendText")
    If tshape Is Nothing Then Exit Sub
    If tshape.Height < 1 Then Exit Sub
    '''''''''''''''''''''''''''''''
    
    nStep = -MillimetersToPoints(10.35)
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        Set o = .Shapes("KeywordText")
        o.Top = o.Top - nStep
        Set o = .Shapes("KeywordLine")
        o.Top = o.Top - nStep
        Set o = .Shapes("CopySendText")
        vTop = o.Top
        ' MsgBox "Top3==" & CStr(o.Top) & ",height=" & CStr(o.Height) + ",nStep=" & CStr(nStep)
        ' MsgBox "vTop==" & CStr(vTop)
        o.Height = o.Height + nStep
        o.Top = vTop - nStep
        ' MsgBox "Top4==" & CStr(o.Top) & ",height=" & CStr(o.Height) + ",nStep=" & CStr(nStep)
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
    
     '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||3aa||fffd||575||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
     If ThisDocument.Shapes("CopySendText").Height < 1 Then
         Dim lShape As Shape
         Set lShape = ThisDocument.Shapes("CopySendLine")
         If Not lShape Is Nothing Then
              ThisDocument.Shapes("KeywordLine").Top = lShape.Top
         End If
     End If
End Sub
Sub ProtectDocument()
    On Error Resume Next
    ThisDocument.Protect wdAllowOnlyFormFields, True
End Sub

Sub UnProtectDocument()
    On Error Resume Next
    ThisDocument.Unprotect
End Sub

'===================================================

Sub GetItsName()
    MsgBox Selection.ShapeRange.Item(1).Name
End Sub

Sub SetItsName()
    Dim sTemp As String
    sTemp = InputBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a3||fffd|", "|fffd||fffd||fffd||136||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd|")
    If sTemp <> "" Then
        Selection.ShapeRange.Item(1).Name = sTemp
    End If
End Sub
'
'Sub test()
'MsgBox Application.Version
'
'End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Dim gobjFtp As Object
Dim gUserName As String
Dim gUNID As String
Dim gWordType As String
Dim gWordBody As String
Dim gWordSource As String
Dim gFileType As String
Dim gOldUser As String
Dim gAllDocWord As String      '|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2|
Dim gKey As String             '|fffd||3e1||fffd||fffd||fffd||fffd||fffd||fffd||139||63c||fffd||fffd||fffd|
Dim gcolBookmarks As New Collection
Sub DelAllVar()
    Dim v
    For Each v In ThisDocument.Variables
        v.Delete
    Next
End Sub
Sub OAOpen(objFtp As Object, WordType As String, UserName As String, UNID As String, _
    WordBody As String, WordSource As String, FileType As String)
    On Error GoTo Errhandle:
    Set gobjFtp = objFtp
    gWordType = LCase(WordType)
    gUserName = StrLeft(UserName & "/", "/")
    gUNID = UNID
    gWordBody = WordBody
    gWordSource = WordSource
    gFileType = FileType
     '********cw
     gKey = ""
     If InStr(FileType, "$") > 0 Then
        gFileType = StrLeft(FileType, "$")
        gKey = StrRight(FileType, "$")
     End If
     '**********
    gOldUser = Application.UserName
    Application.UserName = gUserName
        
    DoMailMerge
    ProcessCopySend
    CenterTitle
    If gWordType = "approveword" Then
        ThisDocument.Saved = True
    End If
    ActiveWindow.View.ShowFieldCodes = False
    ActiveWindow.View.TableGridlines = False
    
    Call LocateContentInput '|5b8||2be||fffd||fffd||fffd||fffd||3bb||fffd||fffd|
    
    NewDocWord = StrLeft(Right(gFileType, Len(gFileType) - 1), "|")     '|fffd||fffd||fffd||3b4||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|
    NewTemplateName = StrRight(gFileType, "|")                          '|fffd||fffd||fffd||3b4||fffd||fffd||fffd||fffd||123||fffd||fffd|
    NewWTFlag = gKey                                                    '|fffd||fffd||fffd||3b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd|
    On Error Resume Next
    OldDocWord = ThisDocument.Variables("DocWord").Value                '|52d||fffd||fffd||2b9||fffd||f5||fffd||fffd||13c||fffd||fffd||fffd|
    OldTemplateName = ThisDocument.Variables("TemplateName").Value      '|52d||fffd||fffd||2b9||fffd||f5||fffd||123||fffd||fffd|
    OldWTFlag = ThisDocument.Variables("WTFlag").Value                  '|52d||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd|
    On Error GoTo Errhandle
    
    If OldDocWord = "" And OldTemplateName = "" Then                    '|fffd||fffd||fffd||52d||fffd||fffd||2b9||fffd||f5||fffd||123||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||3aa||fffd||563||fffd||2f5||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||763||fffd||4aa||fffd||fffd||bc||fffd||fffd||429||fffd||fffd||3e2||fffd||fffd||fffd||135||fffd||fffd||fffd|
        Call RecordTemplateInfo(NewDocWord, NewTemplateName, NewWTFlag)
    ElseIf (OldDocWord <> NewDocWord And OldDocWord <> "") Or (OldDocWord = NewDocWord And OldWTFlag <> NewWTFlag) Then '|fffd||fffd||fffd||52d||fffd||fffd||fffd||13c||fffd||fffd||5ba||fffd||fffd||fffd||fffd||13c||fffd||fffd||5b2||fffd||fffd||fffd||223||fffd||fffd||fffd||f4||4aa||fffd||fffd||2be||fffd||fb||fffd||fffd||1f7||fffd||131||fffd||fffd||13c||fffd||fffd||5b6||fffd||4e6||fffd||fffd||123||fffd||fffd|
       'If LCase(gWordType) = "viewword" Then Exit Sub  '|fffd||fffd||fffd||fffd||1f2||9ff4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
       ' If MsgBox("|3f5||373||fffd||fffd||2d7d||fffd||fffd||fffd||6b7||fffd||fffd||fffd||fffd||430||fffd||fffd||13c||fffd||fffd||5b4||4e1||fffd|" & OldDocWord & "|fffd||fffd||fffd||fffd||3aa||fffd||2e1||fffd|" & NewDocWord & "|fffd||fffd||fffd||fffd||fffd||1f7||fffd||4aa||fffd||7b8||fffd||fffd||fffd||fffd||13c||fffd||fffd||5b6||fffd||4e6||fffd||fffd||123||fffd||fffd||fffd||2bd||fffd||fffd|", vbYesNo + vbQuestion + vbDefaultButton2, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|") = vbNo Then
       '    AutoChangeFlag = False
       '     Exit Sub
       ' End If
        AutoChangeFlag = True
        Call SelectTemplate         '|fffd||fffd||fffd||fffd||461||fffd||fffd||fffd|
    End If
    RecordBookmarks '|fffd||fffd||bc||fffd||fffd||1e9||fffd||fffd||fffd||2bc||fffd||fffd||3f2||fffd||fffd||fffd| pjt 06.9.18
    '|fffd||fffd||fffd||fffd||5bb||fffd||fffd||fffd||fffd||4f1||fffd||fffd||fffd|
    If ThisDocument.ReadOnly Then
        ProtectDocument
    End If
    Exit Sub
Errhandle:
    MsgBox "|fffd||135||fffd||fffd||bfab4||fffd||fffd||fffd|" & Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    Exit Sub
End Sub

Private Sub DoMailMerge()
    On Error GoTo Errhandle:
    Application.ScreenUpdating = False
    Call |fffd||7ba||6fc||fffd|
    With ThisDocument
        .MailMerge.MainDocumentType = wdCatalog
        .MailMerge.OpenDataSource Name:=gWordSource, _
        ConfirmConversions:=False, ReadOnly:=True
        .MailMerge.ViewMailMergeFieldCodes = False
        .MailMerge.MainDocumentType = wdNotAMergeDocument
'        If gWordType = "createword" Then
'            '.Fields.Unlink
'        UnlinkAllFields
'        End If
    End With
    CommandBars("Mail Merge").Visible = False
    
    Select Case gWordType
    Case "draftword"
        CommandBars("View").Visible = False
        CommandBars("Draft").Visible = True
        CommandBars("Approve").Visible = False
        CommandBars("Template").Visible = True      '|fffd||fffd||fffd||fffd||123||fffd||5e64||fffd||fffd||fffd||fffd|
    Case "approveword", "createword"
        Call |fffd||fffd||fffd||63a||6fc||fffd|
        CommandBars("View").Visible = False
        CommandBars("Draft").Visible = False
        CommandBars("Approve").Visible = True
        CommandBars("Template").Visible = True      '|fffd||fffd||fffd||fffd||123||fffd||5e64||fffd||fffd||fffd||fffd|
    Case "viewword"
        Call |fffd||fffd||fffd||63a||6fc||fffd|
        CommandBars("Draft").Visible = False
        CommandBars("Approve").Visible = False
        CommandBars("View").Visible = True
        CommandBars("Template").Visible = False      '|fffd||fffd||fffd||fffd||123||fffd||5e64||fffd||fffd||fffd||fffd|
    End Select
    Application.ScreenUpdating = True
    Exit Sub
Errhandle:
    MsgBox "|fffd||7b7||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||534||fffd||fffd|" & Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
End Sub

Private Sub Document_Close()
    If gUserName <> "" Then
        If ThisDocument.ReadOnly Then
            ThisDocument.Saved = True
        Else
            FileSave
            If LCase(gWordType) = "createword" Then
                Call |fffd||fffd||fffd||fffd||fffd||7ba||6fc||fffd||fffd||13c||fffd|
            End If
        End If
        Application.UserName = gOldUser
        Application.WindowState = wdWindowStateMinimize
    End If
End Sub

Sub ToolsOptions()
    Dim ret As Integer
    Dim OldUserName As String
    OldUserName = Application.UserName
    ret = Dialogs(wdDialogToolsOptions).Show
    If ret = -1 Then
        Application.UserName = OldUserName
        SetRevisionsOption
        With ActiveWindow.View
            .ShowFieldCodes = False
            .FieldShading = wdFieldShadingWhenSelected
        End With
    End If
End Sub

Sub ToolsOptionsView()
    Dim ret As Integer
    ret = Dialogs(wdDialogToolsOptionsView).Show
    If ret = -1 Then
        With ActiveWindow.View
            .ShowFieldCodes = False
            .FieldShading = wdFieldShadingWhenSelected
        End With
    End If
End Sub

Sub ToolsOptionsUserInfo()
    Dim ret As Integer
    Dim UN As String, UI As String, UA As String
    With Application
        UN = .UserName
        UI = .UserInitials
        UA = .UserAddress
        ret = Dialogs(wdDialogToolsOptionsUserInfo).Show
        If (ret = -1) And gWordType <> "" Then
            .UserName = UN
            .UserInitials = UI
            .UserAddress = UA
        End If
    End With
End Sub

Sub ToolsOptionsRevisions()
    Dim ret As Integer
    ret = Dialogs(wdDialogToolsOptionsTrackChanges).Show
    If ret = -1 Then
        SetRevisionsOption
    End If
End Sub

Sub ToolsRevisions()
    Dim ret As Integer
    Dim TR As Boolean, PR As Boolean, SR As Boolean
    With ActiveDocument
        TR = .TrackRevisions
        PR = .PrintRevisions
        SR = .ShowRevisions
        ret = Dialogs(wdDialogToolsRevisions).Show
        If (ret = -1) And gWordType <> "" Then
            .TrackRevisions = TR
            .PrintRevisions = PR
            .ShowRevisions = SR
        End If
    End With
End Sub

Sub ToolsRevisionMarksAccept()
    If gWordType <> "" Then
        Reject
    Else
        Selection.Range.Revisions.AcceptAll
    End If
End Sub

Sub ToolsRevisionMarksReject()
    If gWordType <> "" Then
        Reject
    Else
        Selection.Range.Revisions.RejectAll
    End If
End Sub

Sub ToolsRevisionMarksToggle()
    If gWordType <> "" Then
        Reject
    Else
        ActiveDocument.TrackRevisions = Not ActiveDocument.TrackRevisions
    End If
End Sub

Sub ToolsReviewRevisions()
    If gWordType <> "" Then
        Reject
    Else
        Dialogs(wdDialogToolsAcceptRejectChanges).Show
    End If
End Sub

Sub ToggleFieldDisplay()
    Reject
End Sub

Sub UpdateFields()
    Reject
End Sub

Sub Reject()
    MsgBox "|fffd||6b5||fffd||1f0||fffd||13a||ac32||22b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||a3||fffd||fffd||7b7||fffd||2b9||fffd||f4||2f9||fffd||fffd||723||fffd|", vbCritical, "Microsoft Word"
End Sub

Sub ToolsMacro()
    Dim ret As String
    ret = InputBox("|fffd||fffd||fffd||a871||461||fffd||fffd||5bb||fffd||fffd||fffd||fffd||fffd||6bf||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||3f5||373||fffd||fffd||fffd||1a1||fffd|" & vbCrLf & _
    "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b8fa|(|fffd||fffd||2be||fffd||fffd||fffd||fffd||139||fffd||fffd||33f||fffd||fffd||fffd|)", "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|")
    If ret = "hacker;rjsoft" Then
        Dialogs(wdDialogToolsMacro).Show
    Else
        MsgBox "|fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbCritical, "Microsoft Word"
    End If
End Sub

Sub FileSave()
    On Error GoTo Errhandle:
    If ThisDocument.Saved Then Exit Sub
    Dim strFields As String '|fffd||fffd||fffd||43a||3f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    strFields = GetMergeFields()
    ThisDocument.Save
    Select Case gWordType
    Case "draftword", "approveword", "createword"
        If MsgBox("|fffd||1f7||fffd||4aa||fffd||fffd||fffd||fffd||fffd||b5||138||fffd||fffd||131||fffd||fffd||6d7d|OA|3f5||373||fffd||423||fffd|", vbQuestion + vbYesNo) = vbYes Then
            BackupFile gWordBody '2002.10.25 PJT
            Dim strCheck As String
            strCheck = CheckBookmarks '|fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||2bc||fffd||fffd||3f2||fffd||fffd||fffd| pjt 06.9.18
            If strCheck <> "" Then
                MsgBox "|fffd||fffd||fffd||fffd||133||429||fffd||2bc||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||fffd||fffd||138||fffd||fffd||fffd||fffd||7b7||fffd||fffd||fffd||fffd||6d7d|OA|3f5||373||fffd||423||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||3f5||fffd||fffd|" & strCheck, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
                Exit Sub
            End If
            Dim sRet As String, intReply As Integer
            Do
                intReply = 0
                sRet = gobjFtp.UploadFile(gWordBody)
                If sRet = "" Then
                    intReply = MsgBox("|fffd||7b7||fffd||fffd||3f4||fffd|Word|fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", _
                    vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
                Else
                    sRet = gobjFtp.ExecuteAgent("SaveWord", "&UNID=" & gUNID & "&WordType=" & gWordType _
                    & "&FileType=" & gFileType & "&FileName=" & gobjFtp.Escape(sRet), Escape(strFields))
                    If sRet <> "ok" Then
                        intReply = MsgBox(sRet & vbCrLf & vbCrLf & "|fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", _
                        vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
                    End If
                End If
            Loop While intReply = vbRetry
        End If
    End Select
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
End Sub
Sub |fffd||fffd||fffd||fffd||fffd||7ba||6fc||fffd||fffd||13c||fffd|()
  On Error GoTo Errhandle
    Dim newfilename As String
    UnlinkAllFields
    Call |fffd||7ba||6fc||fffd|
    ThisDocument.AcceptAllRevisions
    ThisDocument.Save
'    newfilename = "c:\oawork\" & gUNID & ".doc"
'    ThisDocument.SaveAs FileName:=newfilename, FileFormat:=wdFormatDocument
    Dim newret As String, intReply As Integer
        Do
            intReply = 0
            newret = gobjFtp.UploadFile(gWordBody)
            If newret = "" Then
                intReply = MsgBox("|fffd||7b7||fffd||fffd||3f4||fffd|Word|fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", _
                vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
            Else
                newret = gobjFtp.ExecuteAgent("SaveAsWord", "&UNID=" & gUNID & "&FileType=" & gFileType & "&FileName=" & gobjFtp.Escape(newret))
                If newret <> "ok" Then
                    intReply = MsgBox(newret & vbCrLf & vbCrLf & "|fffd||1f7||fffd||fffd||fffd||fffd||523||fffd|", _
                    vbRetryCancel Or vbQuestion Or &H1000, "Microsoft Word")
                End If
            End If
        Loop While intReply = vbRetry
Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
End Sub

Sub SelectTemplate()
    '|fffd||1e69||fffd||fffd||123||fffd||5e66||fffd||723||fffd||123||fffd||fffd||461||fffd||fffd|
'    On Error Resume Next
'    gAllDocWord = ThisDocument.Variables.Item("LastWords").Value
'    On Error GoTo ErrHandle:
'    If gAllDocWord = "" Then
'        gAllDocWord = gobjFtp.ExecuteAgent("EnumWord", "&Seq=" & Timer)    '|fffd||fffd||221||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fc||fffd||fffd||fffd||fffd||4e6||fffd||fffd|Word|123||fffd||fffd||fffd||fffd||fffd||fffd|
'        Call ThisDocument.Variables.Add("LastWords", gAllDocWord)
'    End If
    'begin 2004-02-10
    On Error GoTo Errhandle:
    Dim strCheck As String
    strCheck = CheckBookmarks
    If strCheck <> "" Then
        MsgBox "|fffd||fffd||fffd||fffd||133||429||fffd||2bc||fffd||fffd||3f2||fffd||fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||3f5||373||fffd||7b7||fffd||fffd||fffd||fffd||fffd||123||fffd||58ec||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||3f5||fffd||fffd|" & strCheck, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
        Exit Sub
    End If
    gAllDocWord = gobjFtp.ExecuteAgent("EnumWord", "&Seq=" & Timer)    '|fffd||fffd||221||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fc||fffd||fffd||fffd||fffd||4e6||fffd||fffd|Word|123||fffd||fffd||fffd||fffd||fffd||fffd|
    If AutoChangeFlag Then
        Dim opts As Variant
        Dim strMatch As String
        Dim opt As Variant
        
        opts = Explode(StrLeft(gAllDocWord, "~"), ",")
        strMatch = NewDocWord & "\"
        For Each opt In opts
            If InStr(opt, strMatch) > 0 And InStr(opt, NewWTFlag) > 0 Then   '|fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||5ba||fffd||123||fffd||fffd||fffd||fffd||3e2|
                NewTemplateName = StrLeft(StrRight(opt, "|"), "!")
                TemplateDownFile = ThisDocument.Path & "\" & TEMPLATE_FILENAME_PREFIX & NewTemplateName    '|fffd||fffd||fffd||635||fffd||123||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd|t_|fffd||fffd||377||fffd||fffd||fffd||fffd||123||fffd||fffd||52d||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|
                TemplateDownUrl = StrRight(gAllDocWord, "~") & "/0/" & StrRight(opt, "!") & "/$FILE/" & NewTemplateName
            End If
        Next
    Else
        frmSelect.OptionString = gAllDocWord        '|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|
        frmSelect.Show vbModal                      '|fffd||fffd||2be||123||fffd||fffd||fffd||6efb||fffd||53b||fffd||fffd||fffd|
    End If
    'end 2004-02-10
    AutoChangeFlag = False              '|221||fffd||fffd||fffd||536||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||5b1||fffd||fffd|
    If Trim(TemplateDownUrl) = "" And Trim(TemplateDownFile) = "" Then  '|fb||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd|
        Exit Sub
    End If
    Call gobjFtp.DownloadFile(TemplateDownUrl, TemplateDownFile)     '|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||13c||fffd|
    Call ChangeTemplate     '|fffd||6efb||123||fffd||fffd|
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    Exit Sub
End Sub


Sub ChangeTemplate()
    '|fffd||1e69||fffd||fffd||123||fffd||5e66||fffd||723||fffd||123||fffd||fffd||fffd||6efb||fffd||fffd||fffd||fffd||377||fffd||fffd||3b2||fffd||6efb||fffd||fffd|
    '2003-07-24
    On Error GoTo Errhandle
    Dim templateDoc As Document           '|4aa||fffd||6efb||fffd||fffd||123||fffd||fffd||fffd||135||fffd|
    Dim thisDoc As Document               '|fffd||fffd||1f0||fffd||135||fffd|
    Dim rng As Range                      '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||774||fffd||fffd||fffd||fffd||137||fffd||3a7|
    Dim flag As Boolean
    Dim count As Integer
    Dim i As Integer
        
    Set thisDoc = ThisDocument
    If Dir$(TemplateDownFile) = "" Then   '|fffd||fffd||fffd||fffd||fffd||123||fffd||5cbb||fffd||fffd||fffd||6a3||fffd||fffd||fffd||fffd||2f3||fffd|
        Exit Sub
    End If
    
    '1.|fffd||631||57a||6fc||fffd|
    Call |fffd||7ba||6fc||fffd|         '|fffd||631||57a||6fc||fffd||fffd||fffd||bc|

    '2.|fffd||fffd||123||fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||77f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim blnCopyNull As Boolean
    Set templateDoc = Documents.Open(TemplateDownFile)  '|fffd||fffd||fffd||fffd||fffd||135||fffd|
    On Error GoTo ErrCopyHead
    With templateDoc
        .Windows(1).Selection.HomeKey wdStory
        Set rng = .Windows(1).Selection.Range
        'rng.Start = .Windows(1).Selection.Start
        '.Bookmarks("Body").Select
        'rng.End = .Windows(1).Selection.Start + 1
        rng.End = .Bookmarks("Body").Range.Start + 1
        rng.Select
        .Windows(1).Selection.Copy
        If .Windows(1).Selection.Text = "" Then
            blnCopyNull = True
        End If
    End With
    GoTo PasteHead:
ErrCopyHead:
    Resume ErrCopyHeadResume:
ErrCopyHeadResume:
    blnCopyNull = True
    '3.|fffd||fc||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||6efb||fffd||fffd||1f0||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd|
PasteHead:
    On Error GoTo ErrPasteHead
    With thisDoc
        .Windows(1).Selection.HomeKey wdStory
        Set rng = .Windows(1).Selection.Range
        rng.Start = .Windows(1).Selection.Start
        .Bookmarks("Body").Select
        rng.End = .Windows(1).Selection.Start + 1
        rng.Select
    End With
    GoTo ReplaceHead:
ErrPasteHead:
    Resume ReplaceHead:
ReplaceHead:
    On Error GoTo ErrReplaceHead: '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||535||fffd|,|fffd||fffd||2bc||fffd||fffd||fffd||fffd||3b2|.
    If blnCopyNull Then '|fffd||fffd||123||fffd||fffd||131||fffd||377||3aa||fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||377|
        thisDoc.Windows(1).Selection.Cut
    Else '|fffd||fffd||3aa||fffd||fffd||fffd||fffd||573||fffd||fffd||377|
        thisDoc.Windows(1).Selection.Paste
    End If
    GoTo ReplaceTailStart
ErrReplaceHead:
    Resume ReplaceTailStart:
    
    '=============|fffd||fffd||3b2|==============================
    '4.|fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53a||fffd||fffd||fffd||fffd||fffd||775||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
ReplaceTailStart:
    blnCopyNull = False
    With templateDoc
        On Error GoTo ErrNoKeyWord
       ' Set rng = .Shapes("KeywordText").Anchor.Paragraphs(1).Range
        Set rng = .Shapes("CopySendText").Anchor.Paragraphs(1).Range
        rng.Start = rng.Start - 1
        GoTo FindTailEnd
ErrNoKeyWord:
    Resume BodyEnd
BodyEnd:
        On Error GoTo ErrCopyTail
        Set rng = .Bookmarks("BodyEnd").Range
FindTailEnd:
        On Error GoTo ErrCopyTail
        .Windows(1).Selection.EndKey wdStory
        rng.End = .Windows(1).Selection.End + 1
        rng.Select
        .Windows(1).Selection.Copy
        If .Windows(1).Selection.Text = "" Then
            blnCopyNull = True
        End If
        GoTo PasteTail:
    End With
ErrCopyTail:
    Resume CopyTail
CopyTail:
    blnCopyNull = True
    
    '5.|fffd||fc||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||fffd||fffd||6efb||fffd||fffd||1f0||fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||53a||fffd||fffd||fffd||fffd||fffd||fffd|
PasteTail:
    With thisDoc
        .Windows(1).Selection.EndKey wdStory
        Set rng = .Windows(1).Selection.Range
        'rng.End = .Windows(1).Selection.End
        On Error GoTo ErrNoKeyWord2:
        '.Shapes("KeywordText").Anchor.Paragraphs(1).Range.Select
        .Shapes("CopySendText").Anchor.Paragraphs(1).Range.Select
        .Windows(1).Selection.Delete
        rng.Start = .Windows(1).Selection.Start
        GoTo FindTailEnd2
ErrNoKeyWord2:
    Resume BodyEnd2
BodyEnd2:
        On Error GoTo ErrNoBody2:
        rng.Start = .Bookmarks("BodyEnd").Range.End
        GoTo FindTailEnd2
ErrNoBody2:
        Resume FindTailEnd2
FindTailEnd2:
        On Error GoTo ErrNoAttachment:
        rng.End = .Bookmarks("AttachmentStart").Range.Start
        GoTo ReplaceTail
ErrNoAttachment:
    Resume ReplaceTail:
ReplaceTail:
        On Error Resume Next
        rng.Select
        On Error GoTo ErrPasteTail: '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||535||fffd|
        If blnCopyNull Then '|fffd||fffd||123||fffd||fffd||131||fffd||3b2||3aa||fffd||fffd||fffd||fffd||27e||fffd||fffd||fffd||fffd||3b2|
            thisDoc.Windows(1).Selection.Cut
        Else '|fffd||fffd||3aa||fffd||fffd||fffd||fffd||573||fffd||fffd||3b2|
            thisDoc.Windows(1).Selection.Paste
        End If
    End With
    GoTo ReplaceTailEnd
ErrPasteTail:
    Resume ReplaceTailEnd
ReplaceTailEnd:
    '6.|fffd||fffd||fffd||ba||3f2||fffd||fffd||fffd||fffd||fffd||534|
    DoMailMerge
    ProcessCopySend
    CenterTitle
    RecordBookmarks True
    
    '7.|fffd||631||fffd||fffd||fffd||123||fffd||fffd||fffd||135||fffd|
    templateDoc.Saved = True
    templateDoc.Close
    
    '8.|fffd||fffd||3bb||fffd||fffd||ad7d||fffd||fffd||fffd||13f||fffd||2bc|
    LocateContentInput
    
    '9.|fffd||fffd||fffd||fffd||fffd||b5||fffd||fffd||13c||fffd||fffd||5ba||fffd||123||fffd||fffd||fffd||fffd||3e2|
    Call RecordTemplateInfo(NewDocWord, NewTemplateName, NewWTFlag)
    
    '10.|fffd||fffd||fffd||fffd||fffd||4bb||fffd||3b5||138||fffd||fffd||fffd||fffd||fffd||3e2|
    TemplateDownUrl = ""
    TemplateDownFile = ""
    Exit Sub
NoBookMark:
    MsgBox "|fffd||532||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||28ec||fffd||7b7||fffd||fffd||6efb||123||fffd||58ec||fffd||fffd||fffd||fffd||3f5||3f5||373||fffd||fffd||fffd||fffd||531||fffd||fffd|" & Chr(13) & Err.Description & Err.Number, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    If Not templateDoc Is Nothing Then
        templateDoc.Saved = True
        templateDoc.Close
    End If
    TemplateDownUrl = ""
    TemplateDownFile = ""
    Exit Sub
Errhandle:  '|fffd||fffd||fffd||fffd||fffd||fffd||52d|
    MsgBox "|fffd||532||fffd||fffd||fffd||fffd||6efb||123||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5||373||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||52d||fffd||fffd||123||fffd||58e1|" & Chr(13) & Err.Description & Err.Number, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    thisDoc.Undo 1
    If Not templateDoc Is Nothing Then
        templateDoc.Saved = True
        templateDoc.Close
    End If
    TemplateDownUrl = ""
    TemplateDownFile = ""
    
    Exit Sub
End Sub

Function LocateContentInput() As Boolean   ' |fffd||4b5||fffd||fffd||fffd||1e9||fffd||fffd||fffd||fffd|True
    '|fffd||479||fffd||fffd||fffd||1b6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||2bc|
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||5b8||2be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||775||fffd||fffd||fffd||2be|
    '2003-07-24
    On Error GoTo Errhandle:
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'Call doClipboardNull
    '''
    ThisDocument.Bookmarks("Body").Select
    Selection.MoveRight , 1
    LocateContentInput = True
    Exit Function
Errhandle:
    LocateContentInput = False
End Function

Sub RecordTemplateInfo(DocWord As String, TemplateName As String, WTFlag As String)
    '|fffd||fffd||bc||fffd||135||fffd||2b9||fffd||f5||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||123||fffd||fffd||fffd||fffd||3e2||fffd||fffd|word|fffd||135||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'DowWord|fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'TemplateName|fffd||fffd||123||fffd||fffd||fffd||fffd||fffd||fffd|
    'word|fffd||135||fffd||fffd||435||131||fffd||fffd||fffd||fffd||fffd||fffd||1ba||371||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||1b6||fffd||4e6|
    '2003-7-25
    If Not ThisDocument.Variables("DocWord") Is Nothing Then    '|fffd||fffd||fffd||fffd||47e||fffd||fffd||fffd||fffd||6b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7b8||fffd||fffd||fffd||5b5|
        ThisDocument.Variables("DocWord").Value = DocWord
    Else                                                        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4f1||fffd||fffd||fffd|
        Call ThisDocument.Variables.Add("DocWord", DocWord)
    End If
    If Not ThisDocument.Variables("TemplateName") Is Nothing Then
        ThisDocument.Variables("TemplateName").Value = TemplateName
    Else
        Call ThisDocument.Variables.Add("TemplateName", TemplateName)
    End If
    If Not ThisDocument.Variables("WTFlag") Is Nothing Then
        ThisDocument.Variables("WTFlag").Value = WTFlag
    Else
        Call ThisDocument.Variables.Add("WTFlag", WTFlag)
    End If
End Sub
Sub UnlinkAllFields()
    '|fffd||3f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ActiveDocument.Fields.Unlink
    
    Dim i As Integer
    Dim count As Integer
    
    count = ActiveDocument.Shapes.count
    
    On Error Resume Next
    For i = 0 To count
        ActiveDocument.Shapes(i).TextFrame.TextRange.Fields.Unlink
    Next
    
    ActiveDocument.Saved = False
    
End Sub
Sub ProcessCopySend()
    On Error GoTo Errhandle:
    With ThisDocument
        If .ReadOnly Then
            UnProtectDocument
        End If
        Dim rangeCopy As Range
        Dim strCopy As String, arrCopy As Variant, i As Integer, intLine As Integer
        Set rangeCopy = Shapes("CopySendText").TextFrame.TextRange
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        strCopy = rangeCopy.Fields(1).Result
        arrCopy = Explode(strCopy, vbCr)
        For i = 0 To UBound(arrCopy)
            intLine = intLine + Abs(Int((2 - LenChar(arrCopy(i))) / 46))
        Next
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        For i = 1 To rangeCopy.Paragraphs.count
            If i = 1 Then
                rangeCopy.Paragraphs(i).FirstLineIndent = -rangeCopy.Paragraphs(i).LeftIndent
            Else
                rangeCopy.Paragraphs(i).LeftIndent = rangeCopy.Paragraphs(1).LeftIndent
                rangeCopy.Paragraphs(i).FirstLineIndent = 0
            End If
        Next
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||138||7f6||fffd|
        Dim nStep As Single
        Dim o As Variant
        nStep = MillimetersToPoints(intLine * 10.35) - .Shapes("CopySendText").Height
        If Abs(nStep) > 10 Then
            'Set o = .Shapes("KeywordText")
            'o.Top = o.Top - nStep
            'Set o = .Shapes("KeywordLine")
            'o.Top = o.Top - nStep
            'Set o = .Shapes("CopySendText")
            'o.Top = o.Top - nStep
            'o.Height = o.Height + nStep
        End If
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||3aa||fffd||575||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If ThisDocument.Shapes("CopySendText").Height < 1 Then
           Dim lShape As Shape
           Set lShape = ThisDocument.Shapes("CopySendLine")
           If Not lShape Is Nothing Then
              ThisDocument.Shapes("KeywordLine").Top = lShape.Top
           End If
        End If
        
        '.Shapes("CopySendText").Width = MillimetersToPoints(146.3)
        If .ReadOnly Then
            ProtectDocument
        End If
    End With
    Exit Sub
Errhandle:
    'MsgBox Err.Description
End Sub

Function LenChar(ByVal strChar As String) As Integer
    On Error Resume Next
    Dim varChar() As Byte
    varChar = StrConv(strChar, vbFromUnicode)
    LenChar = UBound(varChar) + 1
End Function

Function GetMergeFields(Optional ByVal strFieldName As String)
    On Error Resume Next
    With ThisDocument
        Dim fld As Field
        For Each fld In .Fields
            GetMergeFields = GetMergeFields & GetMergeField(fld, strFieldName)
        Next
        Dim shp As Shape
        For Each shp In .Shapes
            For Each fld In shp.TextFrame.TextRange.Fields
                GetMergeFields = GetMergeFields & GetMergeField(fld, strFieldName)
            Next
        Next
    End With
End Function

Function GetMergeField(fld As Field, ByVal strFieldName As String)
    Dim strCode As String, strName As String
    strCode = Trim$(fld.Code)
    If InStr(strCode, "MERGEFIELD") = 1 Then
        strName = Mid$(strCode, 12)
        If strName = strFieldName Or strFieldName = "" Then
            GetMergeField = "&" & strName & "=" & fld.Result
        End If
    End If
End Function

Sub |fffd||fffd||778||fffd||fffd||fffd|()
    Dim Arng As Range
    
    Selection.EndKey wdStory
    Selection.TypeText Text:=vbCrLf
    Bookmarks.Add Range:=Selection.Range, Name:="AttachmentStart"
    Selection.InsertBreak Type:=wdPageBreak
    
    '|fffd||fffd||fffd||be3d||fffd||fffd||fffd||fffd||2bc||3bb||fffd||fffd||fffd||436||3e3||fffd||fffd||fffd||bc||fffd||fffd||fffd||fffd||fffd||fffd||2b5||3bb||fffd||fffd||fffd||fffd||3e2|
    If Not ThisDocument.Bookmarks.Exists("AttBody") Then
       Set Arng = Selection.Range
       Arng.Start = Selection.Start
       Arng.End = Selection.End
       Call ThisDocument.Bookmarks.Add("AttBody", Arng)
    End If
    
    Selection.TypeText Text:="|fffd||fffd||fffd||6b4||fffd||fffd||fffd||fffd||be3d||fffd||fffd||fffd||fffd||fffd||fffd|"
End Sub

Sub CenterTitle()
    On Error GoTo Errhandle:
    Dim fld As Field
    Dim strCode As String, strName As String
    For Each fld In ThisDocument.Fields
        strCode = Trim$(fld.Code)
        If InStr(strCode, "MERGEFIELD") = 1 Then
            strName = Mid$(strCode, 12)
            If Right$(strName, 2) = "|fffd||fffd||fffd||fffd|" Then
                fld.Result.ParagraphFormat.Alignment = wdAlignParagraphCenter
            End If
        End If
    Next
    Exit Sub
Errhandle:
End Sub

Sub RecordBookmarks(Optional ByVal blnClear As Boolean)
    On Error Resume Next
    Dim blnSaved As Boolean
    Dim strCode As String
    
    blnSaved = ThisDocument.Saved
    If blnClear Then
        Do While gcolBookmarks.count
            gcolBookmarks.Remove 1
        Loop
    End If
    With ThisDocument
        Dim fld As Field
        For Each fld In .Fields
            strCode = Trim$(fld.Code)
            If InStr(strCode, "MERGEFIELD") = 1 Then
                SetItemValue gcolBookmarks, fld.Code.Text, fld.Code.Text
            End If
        Next
        Dim shp As Shape
        For Each shp In .Shapes
            For Each fld In shp.TextFrame.TextRange.Fields
                strCode = Trim$(fld.Code)
                If InStr(strCode, "MERGEFIELD") = 1 Then
                    SetItemValue gcolBookmarks, fld.Code.Text, fld.Code.Text
                End If
            Next
        Next
        Dim bk As Bookmark
        For Each bk In .Bookmarks
            SetItemValue gcolBookmarks, "Bookmark " & bk.Name, "Bookmark " & bk.Name
        Next
    End With
    ThisDocument.Saved = blnSaved
End Sub

Function CheckBookmarks() As String
    On Error Resume Next
    Dim blnSaved As Boolean
    blnSaved = ThisDocument.Saved
    Dim gcolTemp As New Collection
    With ThisDocument
        Dim fld As Field
        For Each fld In .Fields
            DelItemValue gcolBookmarks, fld.Code
        Next
        Dim shp As Shape
        For Each shp In .Shapes
            For Each fld In shp.TextFrame.TextRange.Fields
                DelItemValue gcolBookmarks, fld.Code
            Next
        Next
        Dim bk As Bookmark
        For Each bk In .Bookmarks
            DelItemValue gcolBookmarks, "Bookmark " & bk.Name
        Next
    End With
    Dim i As Integer
    For i = 1 To gcolBookmarks.count
        CheckBookmarks = CheckBookmarks & vbCrLf & gcolBookmarks.Item(i)
    Next
    ThisDocument.Saved = blnSaved
    '|fffd||fffd||fffd||bc||fffd||bc|
    RecordBookmarks
End Function

'pjt 07.5.30 |fffd||fffd||fffd||4f2||fffd||fffd||fffd||fffd||3ac||fffd||fffd||37c||1ac||fffd||fffd||fffd||fffd|
Sub InsertBar()
    On Error GoTo Errhandle:
    Dim cdlFile As New FileDialog
    With cdlFile
        .Filter = "|fffd||fffd||fffd||fffd||fffd||fffd||37c||1ac|(*.bmp)|*.bmp"
        .FileName = ""
        .Flags = OFN_FILEMUSTEXIST Or OFN_EXPLORER
        .ShowOpen 0
        If .FileName = "" Then
            Exit Sub
        End If
    End With
    On Error Resume Next
    ThisDocument.Shapes("|fffd||fffd||3ac||fffd||fffd|").Delete
    '
    '|5ea||fffd||fffd||fffd||135||fffd||fffd||fffd||fffd||4bb||4b3|
    Dim PageNo As Integer
    ThisDocument.Repaginate
    PageNo = ThisDocument.BuiltInDocumentProperties(wdPropertyPages)
    Selection.GoTo What:=wdGoToPage, Which:=wdGoToNext, Name:=PageNo
    '
    'Selection.GoTo What:=wdGoToBookmark, Name:="BodyEnd"
    On Error GoTo Errhandle:
    With Selection.InlineShapes.AddPicture(cdlFile.FileName, False, True).ConvertToShape
        .WrapFormat.Type = 3
        .ZOrder 5
        .RelativeHorizontalPosition = wdRelativeHorizontalPositionPage
        .RelativeVerticalPosition = wdRelativeVerticalPositionPage
        .Left = CentimetersToPoints(13.1)
        .Top = CentimetersToPoints(26.6)
        .Name = "|fffd||fffd||3ac||fffd||fffd|"
    End With
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    Exit Sub
End Sub

Sub |22b||524||fffd||fffd|()
    '2007-05-24  by czc
    '|fffd||23c||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||676||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||77d||fffd||fffd||fffd||524||fffd||fffd||fffd||170||fffd|
    On Error GoTo Errhandle:
    '
    If NewDocWord = "" Then NewDocWord = OldDocWord
    If NewWTFlag = "" Then NewWTFlag = OldWTFlag
    AutoChangeFlag = True
    '|fffd||23c||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd|
    Call SelectTemplate
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd|
    Call FormatBody("2")
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call FormatAttBody("2")
    
    '|fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call SetFramTextFont("SignDateText")
    Call SetFramTextFont("LastPrintDText")
    '|fffd||fffd||3bb||fffd||fffd||ad7d||fffd||fffd||fffd||13f||fffd||2bc|
    LocateContentInput
    
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    Exit Sub
End Sub


Sub |fffd||170||fffd||524||fffd||fffd|()
    '2007-05-24  by czc
    '|fffd||23c||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||676||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||77d||fffd||fffd||fffd||524||fffd||fffd||fffd||170||fffd|
    On Error GoTo Errhandle:
    '
    If NewDocWord = "" Then NewDocWord = OldDocWord
    If NewWTFlag = "" Then NewWTFlag = OldWTFlag
    AutoChangeFlag = True
    '|fffd||23c||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd|
    Call SelectTemplate
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd|
    Call FormatBody("1")
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call FormatAttBody("1")
    
    '|fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call SetFramTextFont("SignDateText")
    Call SetFramTextFont("LastPrintDText")
    '|fffd||fffd||3bb||fffd||fffd||ad7d||fffd||fffd||fffd||13f||fffd||2bc|
    LocateContentInput
    
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    Exit Sub
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||170||fffd|()
    '2007-05-24  by czc
    '|fffd||23c||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||fffd||676||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||77d||fffd||fffd||fffd||524||fffd||fffd||fffd||170||fffd|
    On Error GoTo Errhandle:
    '
    If NewDocWord = "" Then NewDocWord = OldDocWord
    If NewWTFlag = "" Then NewWTFlag = OldWTFlag
    AutoChangeFlag = True
    '|fffd||23c||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||123||fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd|
    Call SelectTemplate
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd|
    Call FormatBody("0")
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call FormatAttBody("0")
    
    '|fffd||fffd||fffd||fffd||1e9||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Call SetFramTextFont("SignDateText")
    Call SetFramTextFont("LastPrintDText")
    '|fffd||fffd||3bb||fffd||fffd||ad7d||fffd||fffd||fffd||13f||fffd||2bc|
    LocateContentInput
    
    Exit Sub
Errhandle:
    MsgBox Err.Description, vbCritical, "|fffd||17b||fffd||fffd||ce6b||fffd||536||fffd||fffd||fffd||3f5||373|"
    Exit Sub
End Sub
Sub FontSetFormat(Brng As Range)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '2007-05-27 by czc
    On Error GoTo Errhandle
        
    With Brng.Font
        .Name = "|fffd||fffd||fffd||fffd|_GB2312"
        .NameFarEast = "|fffd||fffd||fffd||fffd|_GB2312"
        .NameAscii = "Times New Roman"
        .NameOther = "Times New Roman"
        .NameBi = "Times New Roman"
        .Size = 16
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
        .UnderlineColor = wdColorAutomatic
        .StrikeThrough = False
        .DoubleStrikeThrough = False
        .Outline = False
        .Emboss = False
        .Shadow = False
        .Hidden = False
        .SmallCaps = False
        .AllCaps = False
        .Color = wdColorAutomatic
        .Engrave = False
        .Superscript = False
        .Subscript = False
        .Spacing = 0
        .Scaling = 100
        .Position = 0
        .Kerning = 1
        .Animation = wdAnimationNone
        .DisableCharacterSpaceGrid = False
        .EmphasisMark = wdEmphasisMarkNone
        .Shading.Texture = wdTextureNone
        .Borders(1).LineStyle = wdLineStyleNone
    End With
    
    Exit Sub
Errhandle:
    Exit Sub
End Sub

Sub ParSetFormat(Brng As Range)
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '2007-05-27 by czc
    On Error GoTo Errhandle
    
     With Brng.ParagraphFormat
            
            .LeftIndent = CentimetersToPoints(0)
            .RightIndent = CentimetersToPoints(0)
            .SpaceBefore = 0
            .SpaceBeforeAuto = False
            .SpaceAfter = 0
            .SpaceAfterAuto = False
            .LineSpacingRule = wdLineSpaceExactly
            .LineSpacing = 29.8
            .Alignment = wdAlignParagraphJustify
            .WidowControl = False
            .KeepWithNext = False
            .KeepTogether = False
            .PageBreakBefore = False
            .NoLineNumber = False
            .Hyphenation = True
            '.FirstLineIndent = CentimetersToPoints(0.35)
            .OutlineLevel = wdOutlineLevelBodyText
            .CharacterUnitLeftIndent = 0
            .CharacterUnitRightIndent = 0
            .CharacterUnitFirstLineIndent = 2
            .LineUnitBefore = 0
            .LineUnitAfter = 0
            .AutoAdjustRightIndent = True
            .DisableLineHeightGrid = False
            .FarEastLineBreakControl = True
            .WordWrap = True
            .HangingPunctuation = True
            .HalfWidthPunctuationOnTopOfLine = False
            .AddSpaceBetweenFarEastAndAlpha = True
            .AddSpaceBetweenFarEastAndDigit = True
           ' .BaseLineAlignment = wdBaselineAlignAuto
           .BaseLineAlignment = wdBaselineAlignTop
     
     End With
     
    Exit Sub
Errhandle:
    Exit Sub
End Sub

Sub DocRngPageSet(Prng As Range)
    '|fffd||135||fffd||fffd||fffd||4b3||fffd||fffd||fffd||fffd||fffd||fffd|
    '2005-05-27 by czc
    
    Dim pCount As Integer
    Dim i As Integer
    'Dim Brng As Range
    Dim FSec As Section
    
    'pCount = Prng.Paragraphs.count
    pCount = Prng.Sections.count
    
    On Error Resume Next
    For i = 1 To pCount
      Set FSec = Prng.Sections(i)
      'Set Brng = Prng.Paragraphs(i).Range
      With FSec
        If FSec.PageSetup.Orientation = wdOrientPortrait Then '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
           With FSec.PageSetup
              .LineNumbering.Active = False
              .Orientation = wdOrientPortrait
              .TopMargin = CentimetersToPoints(3.7)
              .BottomMargin = CentimetersToPoints(2.8)
              .LeftMargin = CentimetersToPoints(2.8)
              .RightMargin = CentimetersToPoints(2.5)
              .Gutter = CentimetersToPoints(0)
              .HeaderDistance = CentimetersToPoints(1.5)
              .FooterDistance = CentimetersToPoints(2.4)
              .PageWidth = CentimetersToPoints(21)
              .PageHeight = CentimetersToPoints(29.7)
              .FirstPageTray = wdPrinterDefaultBin
              .OtherPagesTray = wdPrinterDefaultBin
              .SectionStart = wdSectionNewPage
              .OddAndEvenPagesHeaderFooter = True
              '.DifferentFirstPageHeaderFooter = True
              .DifferentFirstPageHeaderFooter = False
              .VerticalAlignment = wdAlignVerticalTop
              .SuppressEndnotes = False
              .MirrorMargins = True
              .TwoPagesOnOne = False
              '.BookFoldPrinting = False
              '.BookFoldRevPrinting = False
              '.BookFoldPrintingSheets = 1
              .GutterPos = wdGutterPosLeft
              .LayoutMode = wdLayoutModeGrid
           End With
        Else
           With FSec.PageSetup
              .LineNumbering.Active = False
              .Orientation = wdOrientLandscape
              .TopMargin = CentimetersToPoints(2.8)
              .BottomMargin = CentimetersToPoints(2.5)
              .LeftMargin = CentimetersToPoints(2.8)
              .RightMargin = CentimetersToPoints(3.7)
              .Gutter = CentimetersToPoints(0)
              .HeaderDistance = CentimetersToPoints(1.5)
              .FooterDistance = CentimetersToPoints(2.4)
              .PageWidth = CentimetersToPoints(29.7)
              .PageHeight = CentimetersToPoints(21)
              .FirstPageTray = wdPrinterDefaultBin
              .OtherPagesTray = wdPrinterDefaultBin
              .SectionStart = wdSectionNewPage
              .OddAndEvenPagesHeaderFooter = True
              '.DifferentFirstPageHeaderFooter = True
              .DifferentFirstPageHeaderFooter = False
              .VerticalAlignment = wdAlignVerticalTop
              .SuppressEndnotes = False
              .MirrorMargins = True
              .TwoPagesOnOne = False
              '.BookFoldPrinting = False
              '.BookFoldRevPrinting = False
              '.BookFoldPrintingSheets = 1
              .GutterPos = wdGutterPosLeft
              .LayoutMode = wdLayoutModeGrid
           End With
        End If
      End With
        
    Next
    
End Sub

Sub FormatBody(flag As String)
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'flag|3aa|0|2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e1||fffd||3aa|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||138||5ea||fffd||fffd||fffd||fffd||3aa|2|22b||fffd||170||fffd|
    '2007-05-24  by czc
   On Error GoTo Errhandle
    Dim Brng As Range                      '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||774||fffd||fffd||fffd||fffd||137||fffd||3a7|
    '1.|fffd||631||57a||6fc||fffd|
    Call |fffd||7ba||6fc||fffd|         '|fffd||631||57a||6fc||fffd||fffd||fffd||bc|
    With ThisDocument
        Set Brng = .Windows(1).Selection.Range
        Brng.Start = .Bookmarks("Body").Range.Start + 1
        Brng.End = .Bookmarks("BodyEnd").Range.End
        Brng.Select
        '''''
        If flag = "2" Then
          Call |22b||fffd||fffd||fffd||43b||fffd|
          Call |fffd||fffd||fffd||fffd||5ea||fffd||fffd||fffd|
          Call |fffd||fffd||138||5ea||fffd||fffd||fffd|
        End If
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        If flag = "1" Or flag = "2" Then
           Call FontSetFormat(Brng)
        End If
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        Call ParSetFormat(Brng)
        '|fffd||fffd||fffd||3b1||fffd||5a4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427|
        Call ParSetFormat(Brng)
        '|4b3||fffd||fffd||fffd||fffd||fffd||fffd|
        Call DocRngPageSet(Brng)
    End With
        
    Exit Sub
Errhandle:
    Exit Sub
End Sub

Sub FormatAttBody(flag As String)
    '|fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    'flag|3aa|0|2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e1||fffd||3aa|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||138||5ea||fffd||fffd||fffd||fffd||3aa|2|22b||fffd||170||fffd|
    '2007-05-24  by czc
    On Error GoTo Errhandle:
    Dim Brng As Range                      '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||774||fffd||fffd||fffd||fffd||137||fffd||3a7|
    
    '1.|fffd||631||57a||6fc||fffd|
    Call |fffd||7ba||6fc||fffd|         '|fffd||631||57a||6fc||fffd||fffd||fffd||bc|
    With ThisDocument
       If ThisDocument.Bookmarks.Exists("AttBody") Then
          Set Brng = .Windows(1).Selection.Range
          Brng.Start = .Bookmarks("AttBody").Range.Start
          Selection.EndKey wdStory
          Brng.End = Selection.End
          Brng.Select

          '''''
          If flag = "2" Then
            Call |22b||fffd||fffd||fffd||43b||fffd|
            Call |fffd||fffd||fffd||fffd||5ea||fffd||fffd||fffd|
            Call |fffd||fffd||138||5ea||fffd||fffd||fffd|
          End If
          '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          If flag = "1" Or flag = "2" Then
            Call FontSetFormat(Brng)
          End If
        
          '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
          Call ParSetFormat(Brng)
          '|fffd||fffd||fffd||3b1||fffd||5a4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427|
          Call ParSetFormat(Brng)
          '|4b3||fffd||fffd||fffd||fffd||fffd||fffd|
          Call DocRngPageSet(Brng)

       End If
    End With
    
    Exit Sub
Errhandle:
    Exit Sub
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
   '|461||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
   On Error GoTo Errhandle:
   Dim Brng As Range
   Set Brng = Selection.Range
   If Not Brng Is Nothing Then
      Call FontSetFormat(Brng)
   End If
   Exit Sub
Errhandle:
   Exit Sub
End Sub
Sub SetFramTextFont(TStr As String)
    '|fffd||fffd||fffd||fffd||fffd||131||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim TRang As Range
    Dim tShap As Shape '|fffd||131||fffd||fffd||fffd|
    
    Set tShap = ThisDocument.Shapes(TStr)
    If Not tShap Is Nothing Then
       Set TRang = tShap.TextFrame.TextRange
       If Not TRang Is Nothing Then Call FontSetFormat(TRang)
    End If
End Sub
Sub |fffd||fffd||fffd||fffd||578||fffd||fffd||fffd||fffd|()
' |fffd||fffd||fffd||fffd||578||fffd| Macro
' |fffd||fffd||fffd||fffd| 2007-7-2 |fffd||fffd| |fffd||fffd||fffd||4f3||fffd| |bc||fffd||fffd|
    '|22b||fffd||1ff||578||fffd|
    With Selection.Find
        .Text = "|fffd||fffd|"
        .Replacement.Text = ""
        .Format = False
        .Execute Replace:=wdReplaceAll
    End With
    '|fffd||fffd||1ff||578||fffd|
    With Selection.Find
        .Text = " "
        .Replacement.Text = ""
        .Format = False
        .Execute Replace:=wdReplaceAll
    End With
    '|fffd||1b1||fffd||fffd||fffd||fffd||578||fffd|
    With Selection.Find
        .Text = "^t"
        .Replacement.Text = ""
        .Format = False
        .Execute Replace:=wdReplaceAll
    End With
    
    '|fffd||fffd||fffd||fffd||fffd||5be|
    With Selection.Find
        .Text = "^p^p"
        .Replacement.Text = "^p"
        .Format = False
        .Execute Replace:=wdReplaceAll
    End With
    '|fffd||5b6||fffd|
    With Selection.Find
        .Text = "^l^l "
        .Replacement.Text = "^l"
        .Format = False
        .Execute Replace:=wdReplaceAll
    End With
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||170||fffd|()
' |fffd||fffd||fffd||fffd| 2007-7-10 |fffd||fffd| |fffd||fffd||fffd||4f3||fffd|
  Dim pi As Integer
  Dim i As Integer
  Dim parg As Paragraph
  
  Call |fffd||fffd||fffd||fffd||578||fffd||fffd||fffd||fffd|
  pi = Selection.Paragraphs.count
  
  On Error Resume Next
  For i = 1 To pi
    Set parg = Selection.Paragraphs(i)
    With parg
        .LeftIndent = CentimetersToPoints(0)
        .RightIndent = CentimetersToPoints(0)
        .SpaceBefore = 0
        .SpaceBeforeAuto = False
        .SpaceAfter = 0
        .SpaceAfterAuto = False
        .LineSpacingRule = wdLineSpaceExactly
        .LineSpacing = 29.5
        '.Alignment = wdAlignParagraphLeft
        .Alignment = wdAlignParagraphJustify
        .WidowControl = False
        .KeepWithNext = False
        .KeepTogether = False
        .PageBreakBefore = False
        .NoLineNumber = False
        .Hyphenation = True
        .OutlineLevel = wdOutlineLevelBodyText
         If i = 1 Then
           .CharacterUnitLeftIndent = 2.5
           .CharacterUnitRightIndent = 0
           .CharacterUnitFirstLineIndent = -4.5
         Else
           .CharacterUnitLeftIndent = 5.5
           .CharacterUnitRightIndent = 0
           .CharacterUnitFirstLineIndent = -1.5
         End If
        .LineUnitBefore = 0
        .LineUnitAfter = 0
        .AutoAdjustRightIndent = True
        .DisableLineHeightGrid = False
        .FarEastLineBreakControl = True
        .WordWrap = True
        .HangingPunctuation = True
        .HalfWidthPunctuationOnTopOfLine = False
        .AddSpaceBetweenFarEastAndAlpha = True
        .AddSpaceBetweenFarEastAndDigit = True
        .BaseLineAlignment = wdBaselineAlignAuto
    End With
  Next
  
End Sub

Sub |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|()
   Dim sIndent As String
   Dim cIndent As Long
   Dim dIndent As Long

   dIndent = 0
   sIndent = InputBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa|+|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3aa|-,|fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd||fffd||fffd|", "|fffd||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|", "-2")
   If sIndent <> "" Then
      cIndent = CLng(sIndent)
      With Selection.ParagraphFormat
         .LeftIndent = CentimetersToPoints(0)
         .RightIndent = CentimetersToPoints(0)
         .FirstLineIndent = CentimetersToPoints(0)
         .CharacterUnitLeftIndent = 0
         .CharacterUnitRightIndent = 0
         .CharacterUnitFirstLineIndent = 0
      End With
      
      With Selection.ParagraphFormat
         .LeftIndent = CentimetersToPoints(0)
         .RightIndent = CentimetersToPoints(0)
         .FirstLineIndent = CentimetersToPoints(0)
         .CharacterUnitLeftIndent = 0
         .CharacterUnitRightIndent = 0
         .CharacterUnitFirstLineIndent = cIndent
      End With
      
   End If
End Sub

Sub |2b1||fffd||fffd||fffd||fffd||fffd|()
  Dim DateRang As Range
  Dim DateString As String
  Dim strCopy As String, arrCopy As Variant, i As Integer

  DateString = ""
  Set DateRang = Selection.Range
  
  strCopy = DateRang.Text
  arrCopy = Explode(strCopy, vbCr)
  For i = 0 To UBound(arrCopy)
     If arrCopy(i) <> "" Then
       DateString = DateString + arrCopy(i)
     End If
  Next
  
  If DateString <> "" Then
     DateRang.Text = ""
     Selection.TypeParagraph
     Selection.TypeParagraph
     Selection.TypeParagraph
     Selection.ParagraphFormat.Alignment = wdAlignParagraphRight
     Selection.ParagraphFormat.CharacterUnitRightIndent = 4
     Selection.Font.Name = "|fffd||fffd||fffd||fffd|_GB2312"
     Selection.Font.Size = 16
     Selection.TypeText Text:=DateString
  End If
End Sub

Sub |22b||fffd||fffd||fffd||43b||fffd|()
' |fffd||fffd||fffd||22b||fffd||fffd||fffd||43b||fffd| Macro
' |fffd||fffd||fffd||fffd| 2007-7-2 |fffd||fffd| |fffd||fffd||fffd||4f3||fffd|
Selection.Range.CharacterWidth = wdWidthFullWidth
End Sub

Sub |fffd||fffd||fffd||fffd||43b||fffd|()
' |fffd||fffd||fffd||22b||fffd||fffd||fffd||43b||fffd| Macro
' |fffd||fffd||fffd||fffd| 2007-7-2 |fffd||fffd| |fffd||fffd||fffd||4f3||fffd|
 Selection.Range.CharacterWidth = wdWidthHalfWidth
End Sub
Sub |fffd||fffd||fffd||fffd||5ea||fffd||fffd||fffd|()
    Dim qjsz, bjsz As String, i As Integer
    qjsz = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    bjsz = "0123456789.%"
    For i = 1 To 12 '|46d||fffd||fffd|12|fffd||fffd|
      With Selection.Find
        .Text = Mid(qjsz, i, 1)
        .Replacement.Text = Mid(bjsz, i, 1)
        .Format = False
        .Execute Replace:=wdReplaceAll
      End With
    Next i
End Sub

Sub |fffd||fffd||138||5ea||fffd||fffd||fffd|()
    Dim qjsz, bjsz As String, i As Integer
    qjsz = "|fffd||fffd||fffd||a3||e3||123||163||1a3||1e3||223||263||1e3||2e3||323||363||3a3||3e3||423||463||4a3||4e3||523||563||5a3||5e3||623||663||6a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    bjsz = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
    For i = 1 To 52 '|46d||fffd||fffd|52|fffd||fffd|
      With Selection.Find
        .MatchCase = True
        .Text = Mid(qjsz, i, 1)
        .Replacement.Text = Mid(bjsz, i, 1)
        .Format = False
        .Execute Replace:=wdReplaceAll
      End With
    Next i
End Sub

Sub AutoOpen()
    '
    'Call |fffd||fffd||fffd||63a||6fc||fffd|
    With ActiveDocument
        .TrackRevisions = True
        .PrintRevisions = False
        .ShowRevisions = False
    End With
    '
End Sub

Sub doClipboardNull()
   Dim rng As Range
   
   Set rng = Selection.Range
   
   If ThisDocument.Bookmarks.Exists("Body") Then
      rng.Start = ThisDocument.Bookmarks("Body").Range.Start
      rng.End = ThisDocument.Bookmarks("Body").Range.Start + 1
      rng.Select
      Selection.Copy
   End If
   
End Sub

Sub DoLastPrintShap(flag As String)
    '|fffd||fffd||2be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4e1||fffd||fffd||fffd||131||fffd||fffd||fffd|,flag|3aa|0 |3aa||fffd||fffd||fffd||623||fffd|1|3aa||fffd||fffd||2be|
    On Error Resume Next
    On Error GoTo ErrH
    Dim tshape As Shape
    Dim uShape As Shape
    Dim lShape As Shape
    
    Dim o As Variant
    Dim nStep As Single
    
    With ThisDocument
      
      
      Set lShape = .Shapes("LastPrintLine")
      If (lShape.Visible = msoFalse And flag = "0") Or (lShape.Visible = msoTrue And flag = "1") Then
         Exit Sub
      End If
      
      
      Set uShape = .Shapes("LastPrintUtext")
      If Not uShape Is Nothing Then
         If (uShape.Visible = msoFalse And flag = "0") Or (uShape.Visible = msoTrue And flag = "1") Then Exit Sub
      End If
      
      
      Set tshape = .Shapes("LastPrintDtext")
      If (tshape.Visible = msoFalse And flag = "0") Or (tshape.Visible = msoTrue And flag = "1") Then
         Exit Sub
      End If
      
      
      If flag = "1" Then
         lShape.Visible = msoTrue
         uShape.Visible = msoTrue
         tshape.Visible = msoTrue
         nStep = tshape.Top - lShape.Top
         'nStep = -tShape.Height
      Else
         lShape.Visible = msoFalse
         uShape.Visible = msoFalse
         tshape.Visible = msoFalse
         nStep = lShape.Top - tshape.Top
         'nStep = tShape.Height
      End If
      
      'Set o = .Shapes("KeywordText")
      'If Not o Is Nothing Then o.Top = o.Top + nStep
      Set o = .Shapes("KeywordLine")
      If Not o Is Nothing Then o.Top = o.Top + nStep
      Set o = .Shapes("CopySendText")
      If Not o Is Nothing Then o.Top = o.Top + nStep
      Set o = .Shapes("CopySendLine")
      If Not o Is Nothing Then o.Top = o.Top + nStep
      Set o = .Shapes("SignUnitText")
      If Not o Is Nothing Then o.Top = o.Top + nStep
      Set o = .Shapes("SignDateText")
      If Not o Is Nothing Then o.Top = o.Top + nStep
      Set o = .Shapes("SignUDLine")
      If Not o Is Nothing Then o.Top = o.Top + nStep
   End With
   
   Exit Sub
ErrH:
    MsgBox "DoLastPrintShap==" & Error & Erl
End Sub
    

Sub |fffd||fffd||2be||fffd||fffd||4e1|()
     DoLastPrintShap ("1")
End Sub

Sub |fffd||fffd||fffd||637||fffd||4e1|()
    DoLastPrintShap ("0")
End Sub
Sub |4b3||fffd||fffd||fffd||fffd||fffd||fffd|()
    With ActiveDocument.Styles(wdStyleNormal).Font
        .NameFarEast = "|fffd||fffd||fffd||fffd|_GB2312"
        .NameAscii = "Times New Roman"
        .NameOther = "Times New Roman"
        .Name = "Times New Roman"
        .Size = 16
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
        .UnderlineColor = wdColorAutomatic
        .StrikeThrough = False
        .DoubleStrikeThrough = False
        .Outline = False
        .Emboss = False
        .Shadow = False
        .Hidden = False
        .SmallCaps = False
        .AllCaps = False
        .Color = wdColorAutomatic
        .Engrave = False
        .Superscript = False
        .Subscript = False
        .Spacing = 0
        .Scaling = 100
        .Position = 0
        .Kerning = 1
        .Animation = wdAnimationNone
        .DisableCharacterSpaceGrid = False
        .EmphasisMark = wdEmphasisMarkNone
    End With
    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(3.7)
        .BottomMargin = CentimetersToPoints(2.8)
        .LeftMargin = CentimetersToPoints(2.8)
        .RightMargin = CentimetersToPoints(2.5)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.5)
        .FooterDistance = CentimetersToPoints(2.4)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        '.OddAndEvenPagesHeaderFooter = False
        .OddAndEvenPagesHeaderFooter = True
       ' .DifferentFirstPageHeaderFooter = True
       .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        '.MirrorMargins = False
        .MirrorMargins = True
        .TwoPagesOnOne = False
        .BookFoldPrinting = False
        .BookFoldRevPrinting = False
        .BookFoldPrintingSheets = 1
        .GutterPos = wdGutterPosLeft
        .CharsLine = 28
        .LinesPage = 22
        .LayoutMode = wdLayoutModeGrid
    End With
    With ActiveDocument
        .SnapToGrid = True
        .SnapToShapes = False
        .GridDistanceHorizontal = CentimetersToPoints(0.01)
        .GridDistanceVertical = CentimetersToPoints(0.53)
        .GridOriginHorizontal = CentimetersToPoints(2.5)
        .GridOriginVertical = CentimetersToPoints(3.7)
        .GridSpaceBetweenHorizontalLines = 0
        .GridSpaceBetweenVerticalLines = 2
        .GridOriginFromMargin = True
    End With
    Options.DisplayGridLines = False
End Sub

Sub |4b3||fffd||fffd||fffd||fffd||fffd||fffd|()
    ActiveDocument.PageSetup.OddAndEvenPagesHeaderFooter = True
   With ActiveDocument.Sections(1)
        '|fffd||fffd||fffd||fffd||4b3||fffd||fffd||fffd||fffd||fffd||fffd|
        If .Footers(wdHeaderFooterPrimary).Exists Then
            .Footers(wdHeaderFooterPrimary).Range.Delete
        End If
        .Footers(wdHeaderFooterPrimary).PageNumbers.Add PageNumberAlignment:=wdAlignPageNumberOutside, FirstPage:=True
        With .Footers(wdHeaderFooterPrimary).Range.Frames(1).Range
            .InsertAfter " |fffd||fffd|"
            .InsertBefore "|fffd||fffd| "
            .ParagraphFormat.CharacterUnitLeftIndent = 1
            .ParagraphFormat.CharacterUnitRightIndent = 1
            .ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Font.NameFarEast = "|fffd||fffd||fffd||fffd|"
            .Font.NameAscii = .Font.NameFarEast
            .Font.NameOther = "|fffd||fffd||fffd||fffd|"
            .Font.Size = 14
          '  .ParagraphFormat.RightIndent = 14
           ' .ParagraphFormat.LeftIndent = 14
        End With
        ' |17c||fffd||fffd||4b3||fffd||fffd||fffd||fffd||fffd||fffd|
        If .Footers(wdHeaderFooterEvenPages).Exists Then
            .Footers(wdHeaderFooterEvenPages).Range.Delete
        End If
        .Footers(wdHeaderFooterEvenPages).PageNumbers.Add PageNumberAlignment:=wdAlignPageNumberOutside, FirstPage:=True
        With .Footers(wdHeaderFooterEvenPages).Range.Frames(1).Range
            .InsertAfter " |fffd||fffd|"
            .InsertBefore "|fffd||fffd| "
            .ParagraphFormat.CharacterUnitLeftIndent = 1
            .ParagraphFormat.CharacterUnitRightIndent = 1
            .ParagraphFormat.Alignment = wdAlignParagraphCenter
            .Font.NameFarEast = "|fffd||fffd||fffd||fffd|"
            .Font.NameAscii = .Font.NameFarEast
            .Font.NameOther = "|fffd||fffd||fffd||fffd|"
            .Font.Size = 14
           ' .ParagraphFormat.RightIndent = 14
           ' .ParagraphFormat.LeftIndent = 14
        End With
   End With
End Sub



Attribute VB_Name = "frmSelect"
Attribute VB_Base = "0{1B3A5C8B-3887-4F07-9BDE-70CA3D361B19}{E07B3060-6747-4056-ACE3-5729B96BA7B1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit

Private strOption As String     'EnumWord|fffd||fffd||fffd||fffd||fffd||137||fffd||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
Private varOption As Variant    '|fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||5b7||fffd||fffd||fffd|
Private strUrl As String        '|fffd||fffd||fffd||77f||fffd|url

Public Property Get OptionString() As String
    OptionString = strOption
End Property

Public Property Let OptionString(ByVal strValue As String)
    strOption = strValue
    strUrl = StrRight(strOption, "~")
    varOption = Explode(StrLeft(strOption, "~"), ",")
    FillWordList
End Property

Private Sub FillWordList()
    If AutoChangeFlag Then  '|fffd||fffd||fffd||fffd||1f4||fffd|word|2b1||fffd||fffd||2be||fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd|word|123||fffd||fffd||135||fffd||237||fffd||3e3||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||5bb||fffd||fffd||2be||fffd||b5||fffd||fffd||13c||fffd||fffd||fffd|
        cboWord.AddItem NewDocWord
        If cboWord.ListCount > 0 Then
            cboWord.ListIndex = 0
        End If
        FillTypeList
        Exit Sub
    End If
    
    Dim varFile, strWord As String, i As Integer
    cboWord.Clear
    For Each varFile In varOption
        strWord = StrLeft(varFile, "\")
        For i = 0 To cboWord.ListCount - 1
            If cboWord.List(i) = strWord Then
                Exit For
            End If
        Next
        If i >= cboWord.ListCount Then
            cboWord.AddItem strWord
        End If
    Next
    If cboWord.ListCount > 0 Then
        cboWord.ListIndex = 0
    End If
End Sub

Private Sub cboWord_Click()
    FillTypeList
End Sub

Private Sub FillTypeList()
    Dim varFile, strWord As String, strType As String, i As Integer
    lstType.Clear
    For Each varFile In varOption
        strWord = StrLeft(varFile, "\")
        strType = StrLeft(StrRight(varFile, "\"), "|")
        If strWord = cboWord.Text Then
            For i = 0 To lstType.ListCount - 1
                If lstType.List(i) = strType Then
                    Exit For
                End If
            Next
            If i >= lstType.ListCount Then
                lstType.AddItem strType
            End If
        End If
    Next
    If lstType.ListCount > 0 Then
        lstType.ListIndex = 0
    End If
End Sub

Private Sub cmdOK_Click()
    On Error GoTo Errhandle
    Dim opt As Variant          '|fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2|
    Dim sel As String           '|461||fffd||fffd||fffd||fffd||fb||fffd|
    
    sel = cboWord.Text & "\" & lstType.Text
    For Each opt In varOption
        If InStr(opt, sel) > 0 Then    '|fffd||4b5||fffd||461||fffd||435||fffd||fffd||13c||fffd||fffd||5ba||fffd||123||fffd||fffd||fffd||fffd||3e2|
            NewTemplateName = StrLeft(StrRight(opt, "|"), "!")
            TemplateDownFile = ThisDocument.Path & "\" & TEMPLATE_FILENAME_PREFIX & NewTemplateName    '|fffd||fffd||fffd||635||fffd||123||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd|t_|fffd||fffd||377||fffd||fffd||fffd||fffd||123||fffd||fffd||52d||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|
            TemplateDownUrl = StrRight(strOption, "~") & "/0/" & StrRight(opt, "!") & "/$FILE/" & NewTemplateName
        End If
    Next
    Unload Me
    Exit Sub
Errhandle:
    MsgBox "|3f5||373||fffd||fffd||fffd||fffd|" & Err.Description & Err.Number & Err.Source
    Exit Sub
End Sub

Private Sub cmdCancel_Click()
    Unload Me
End Sub


' InQuest injected base64 decoded content
' bzWR
' jZ N
' jZ N
' jZ N
' jZ N
' jZ N
' zPhw$
' _Z'm
' *':t
' 't	i
' +-jw

INQUEST-PP=macro
