Attribute VB_Name = "NewMacros"
Option Private Module
#If VBA7 Then
   Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As Long
   Private Declare PtrSafe Function SetFocus Lib "user32" (ByVal hwnd As LongPtr) As Long
   Private Declare PtrSafe Function GetParent Lib "user32" (ByVal hwnd As LongPtr) As Long
#Else
   Private Declare Function GetActiveWindow Lib "user32" () As Long
   Private Declare Function SetFocus Lib "user32" (ByVal hwnd As Long) As Long
   Private Declare Function GetParent Lib "user32" (ByVal hwnd As Long) As Long
#End If
Option Explicit
Global autorenliste As String
Global list1 As Boolean
Global list2 As Boolean

Sub setFocusToDoc()
On Error Resume Next
  Dim h As Long
  h = GetActiveWindow()
  h = GetParent(h)
  SetFocus h
End Sub

Sub addBlock(StartStyle, StopStyle, caption)
    Dim return_anz, i As Integer
    Dim DocEndeLeer, ZweiSchlusszeilen, inTabelle As Boolean
    
    On Error GoTo ErrHandler
    
    If ActiveDocument.Bookmarks.Exists("Block_Position") = True Then ActiveDocument.Bookmarks("Block_Position").Delete
    
    If Selection.Range.Characters(1).Information(wdWithInTable) Then inTabelle = True
    If Selection.Range.Characters(Selection.Range.Characters.Count).Information(wdWithInTable) Then inTabelle = True
    If inTabelle = True Or Selection.Range.Information(wdInFootnote) = True Then
       MsgBox ("Block-Formate an dieser Stelle nicht m|fffd|glich. Die Markierung muss au|fffd|erhalb einer Tabelle beginnen bzw. enden und darf sich nicht im Fu|fffd|notenbereich befinden.")
       Exit Sub
    End If
    
    return_anz = Selection.Paragraphs.Count 'wie viele Zeilen sinds
    If Selection.Characters.Count <> return_anz Then
       If Selection.Characters.Count > 1 And Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    End If
    
    If Selection.Bookmarks.Exists("\EndOfDoc") And Selection.Paragraphs(return_anz).Range.Text = Chr(13) Then
       DocEndeLeer = True
       If return_anz = 2 Then ZweiSchlusszeilen = True 'zwei ausgew|fffd|hlte leere Schlusszeilen reagieren anders als drei
    End If
    If IsLineEmpty And return_anz = 1 Then   'eine einzige Leerzeile anders handhaben. IslineEmpty untersucht nur ersten Absatz
        Selection.Collapse Direction:=wdCollapseStart
        Selection.TypeText (caption & " Start" & Chr(13))
        Selection.MoveUp Unit:=wdLine
        Selection.style = ActiveDocument.Styles(StartStyle)
        Selection.MoveDown Unit:=wdLine
        Selection.TypeText (Chr(13) & caption & " Stopp")
        Selection.style = ActiveDocument.Styles(StopStyle)
        Selection.MoveUp Unit:=wdLine
    Else
        If return_anz = 1 Then Selection.EndKey Unit:=wdLine 'Wenn Cursor am Zeilenbeginn steht, funtionierts nicht
        ActiveDocument.Bookmarks.Add Name:="Block_Position", Range:=Selection.Range
        Selection.Paragraphs(1).Range.Select
        Selection.MoveLeft
        Selection.TypeText (caption & " Start" & Chr(13))
        Selection.MoveUp Unit:=wdLine
        Selection.style = ActiveDocument.Styles(StartStyle)
        
        ActiveDocument.Bookmarks("Block_Position").Select
        If Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then 'letzte Zeile nicht leer
           Selection.Collapse Direction:=wdCollapseEnd
           Selection.Paragraphs(1).Range.Select
        End If
        Selection.MoveRight
        If Selection.Bookmarks.Exists("\EndOfDoc") Then
           'do nothing
        Else
           Selection.MoveLeft
        End If
        If DocEndeLeer Then Selection.MoveDown Unit:=wdLine
        If ZweiSchlusszeilen Then Selection.MoveDown Unit:=wdLine
        Selection.TypeText (Chr(13) & caption & " Stopp")
        Selection.style = ActiveDocument.Styles(StopStyle)
        
        Selection.MoveUp Unit:=wdLine
        Selection.EndKey Unit:=wdLine
    End If
    
    Exit Sub

ErrHandler:
    MsgBox ("Zuweisung eines Blickfangs ist nicht m|fffd|glich. Bitte pr|fffd|fen Sie die Cursorposition. Diese darf sich nur im Text befinden.")
    On Error GoTo 0
End Sub

Sub addInhalt()
    Dim return_anz, i As Integer
    Dim DocEndeLeer, ZweiSchlusszeilen, inTabelle As Boolean
    
    On Error GoTo ErrHandler
    
    If Selection.Range.Characters(1).Information(wdWithInTable) Then inTabelle = True
    If Selection.Range.Characters(Selection.Range.Characters.Count).Information(wdWithInTable) Then inTabelle = True
    If inTabelle = True Or Selection.Range.Information(wdInFootnote) = True Then
       MsgBox ("Inhalts|fffd|bersicht an dieser Stelle nicht m|fffd|glich.")
       Exit Sub
    End If
    
    return_anz = Selection.Paragraphs.Count 'wie viele Zeilen sinds
    If Selection.Characters.Count <> return_anz Then
       If Selection.Characters.Count > 1 And Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    End If
    
    If Selection.Bookmarks.Exists("\EndOfDoc") And Selection.Paragraphs(return_anz).Range.Text = Chr(13) Then
       DocEndeLeer = True
       If return_anz = 2 Then ZweiSchlusszeilen = True 'zwei ausgew|fffd|hlte leere Schlusszeilen reagieren anders als drei
    End If
    If IsLineEmpty And return_anz = 1 Then   'eine einzige Leerzeile anders handhaben. IslineEmpty untersucht nur ersten Absatz
        Selection.Collapse Direction:=wdCollapseStart
        Selection.TypeText ("Inhalts|fffd|bersicht Platzhalter" & Chr(13))
        Selection.MoveUp Unit:=wdLine
        Selection.style = ActiveDocument.Styles("kh_inhalt_platzhalter")
    Else
        If return_anz = 1 Then Selection.EndKey Unit:=wdLine 'Wenn Cursor am Zeilenbeginn steht, funtionierts nicht
        Selection.Paragraphs(1).Range.Select
        Selection.MoveLeft
        Selection.TypeText ("Inhalts|fffd|bersicht Platzhalter" & Chr(13))
        Selection.MoveUp Unit:=wdLine
        Selection.style = ActiveDocument.Styles("kh_inhalt_platzhalter")
    End If
    
    Exit Sub

ErrHandler:
    MsgBox ("Plazierung des Platzhalters nicht m|fffd|glich.")
    On Error GoTo 0
End Sub

Sub QuickSort(SortArray() As String, Optional ByVal varStart As Long, Optional ByVal varEnd As Long)
   'Option Compare Text s.o.
   Dim i As Long, j As Long, RandIndex As Long, Partition As String
   Dim Low As Long, High As Long

   Low = IIf(varStart = 0, LBound(SortArray), varStart)
   High = IIf(varEnd = 0, UBound(SortArray), varEnd)

   If Low < High Then
      If High - Low = 1 Then
         If UCase(SortArray(Low)) > UCase(SortArray(High)) Then
            Swap SortArray(Low), SortArray(High)
         End If
      Else
         RandIndex = Rnd() * (High - Low) + Low
         Swap SortArray(High), SortArray(RandIndex)
         Partition = UCase(SortArray(High))
         Do
            i = Low: j = High
            Do While (i < j) And (UCase(SortArray(i)) <= Partition)
               i = i + 1
            Loop
            Do While (j > i) And (UCase(SortArray(j)) >= Partition)
               j = j - 1
            Loop
            If i < j Then
               Swap SortArray(i), SortArray(j)
            End If
         Loop While i < j
         Swap SortArray(i), SortArray(High)
         If (i - Low) < (High - i) Then
            QuickSort SortArray, Low, i - 1
            QuickSort SortArray, i + 1, High
         Else
            QuickSort SortArray, i + 1, High
            QuickSort SortArray, Low, i - 1
         End If
      End If
   End If
End Sub

Sub Swap(First As String, Second As String)
   Dim varTemp As String

   varTemp = First
   First = Second
   Second = varTemp
End Sub

Sub Start_RVW()
    SetPaperSize
    InsertPageNum
    SetShortcuts

    Load kh_menu
    kh_menu.Show
End Sub


Function CustomPropExist(WhichDoc As Document, NameOfProp As String) As Boolean
    Dim prop As DocumentProperty
    Dim ret As Boolean
    ret = False
    For Each prop In WhichDoc.CustomDocumentProperties
        If LCase(prop.Name) = LCase(NameOfProp) Then
            ret = True
            Exit For
        End If
    Next
    CustomPropExist = ret
End Function

Function updateMeta(PropName As String, PropValue As String)
    If CustomPropExist(ActiveDocument, PropName) Then
        ActiveDocument.CustomDocumentProperties(PropName).Value = PropValue
    Else
        ActiveDocument.CustomDocumentProperties.Add Name:=PropName, Value:=PropValue, LinkToContent:=False, Type:=msoPropertyTypeString
        If CustomPropExist(ActiveDocument, PropName) Then
        Else
            MsgBox "Adding " & PropName & " failed." & vbCr & Err.Description
        End If
    End If
End Function

Function delMeta(PropName As String)
    If CustomPropExist(ActiveDocument, PropName) Then
        ActiveDocument.CustomDocumentProperties(PropName).Delete
    End If
End Function

Function MetaUpdate(PropName As String)
    If CustomPropExist(ActiveDocument, PropName) Then
        MetaUpdate = ActiveDocument.CustomDocumentProperties(PropName).Value
    Else
        MetaUpdate = ""
    End If
End Function

Sub ExportXML()
    NewFilename = (Replace(ActiveDocument.FullName, ".doc", ".xml"))
    ActiveDocument.SaveAs FileName:=NewFilename, FileFormat:=wdFormatXML
End Sub

Function IsLineEmpty()
    If Selection.Paragraphs(1).Range.Characters.Count = 1 Then
        IsLineEmpty = True
    Else
        IsLineEmpty = False
    End If
End Function

Function SetPaperSize()
    On Error GoTo ErrHandler
    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(2.5)
        .BottomMargin = CentimetersToPoints(2)
        .LeftMargin = CentimetersToPoints(2.5)
        .RightMargin = CentimetersToPoints(2.5)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.25)
        .FooterDistance = CentimetersToPoints(1.25)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .BookFoldPrinting = False
        .BookFoldRevPrinting = False
        .BookFoldPrintingSheets = 1
        .GutterPos = wdGutterPosLeft
        .SectionDirection = wdSectionDirectionLtr
    End With
    Exit Function
ErrHandler:
    MsgBox ("Anpassung des Seitenformats nicht m|fffd|glich.")
    On Error GoTo 0
End Function


Function InsertPageNum()
    Dim view As Variant
    view = ActiveWindow.view.Type
    On Error GoTo ErrHandler
    If ActiveWindow.view.SplitSpecial = wdPaneNone Then
        ActiveWindow.ActivePane.view.Type = wdPrintView
    Else
        ActiveWindow.view.Type = wdPrintView
    End If
    ActiveWindow.view.SeekView = wdSeekCurrentPageFooter
    Selection.WholeStory
    Selection.Delete Unit:=wdCharacter, Count:=1
    Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldPage
    ActiveWindow.view.SeekView = wdSeekMainDocument
    ActiveWindow.view.Type = view
    Exit Function
ErrHandler:
    MsgBox ("Hinzuf|fffd|gen der Seitenzahl in der Fu|fffd|zeile nicht m|fffd|glich.")
    On Error GoTo 0
End Function

Function SetShortcuts()
    list1 = Options.AutoFormatAsYouTypeApplyBulletedLists
    list2 = Options.AutoFormatAsYouTypeApplyNumberedLists
    With Options
        .AutoFormatAsYouTypeApplyBulletedLists = False
        .AutoFormatAsYouTypeApplyNumberedLists = False
    End With
'    Application.CustomizationContext = ActiveDocument
'    Application.KeyBindings.Add KeyCode:=BuildKeyCode(wdKeyAlt, wdKey0), KeyCategory:=wdKeyCategoryCommand, Command:="Test"
End Function

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Private Sub Document_Close()
    With Options
        .AutoFormatAsYouTypeApplyBulletedLists = list1
        .AutoFormatAsYouTypeApplyNumberedLists = list2
    End With
End Sub

Private Sub Document_New()

End Sub
Attribute VB_Name = "kh_autor"
Attribute VB_Base = "0{5B0CB98E-07AB-4B6C-9AA1-3E9A11245B78}{F16DDAAB-3452-4849-998D-E750DF31A444}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    Dim verstorben, verstorben_txt, kh_autor_grad_txt, kh_autor_vorname_txt
    If kh_autor_verstorben = True Then
        verstorben = "1"
        verstorben_txt = " |fffd|"
    Else
        verstorben = ""
        verstorben_txt = ""
    End If
    If kh_autor_grad = "" Then
        kh_autor_grad_txt = ""
    Else
        kh_autor_grad_txt = kh_autor_grad + " "
    End If
    If kh_autor_vorname = "" Then
        kh_autor_vorname_txt = ""
    Else
        kh_autor_vorname_txt = kh_autor_vorname + " "
    End If
    If autorenliste = "reihe" Then
        kh_metadaten_reihe.kh_reihe_autoren_liste.AddItem kh_autor_grad_txt + kh_autor_vorname_txt + kh_autor_nachname + verstorben_txt
        kh_metadaten_reihe.kh_reihe_autoren_liste.list(kh_metadaten_reihe.kh_reihe_autoren_liste.ListCount - 1, 1) = kh_autor_grad + "#" + kh_autor_vorname + "#" + kh_autor_nachname + "#" + verstorben
    End If
    If autorenliste = "autor" Then
        kh_metadaten_autoren.kh_autoren_liste.AddItem kh_autor_grad_txt + kh_autor_vorname_txt + kh_autor_nachname + verstorben_txt
        kh_metadaten_autoren.kh_autoren_liste.list(kh_metadaten_autoren.kh_autoren_liste.ListCount - 1, 1) = kh_autor_grad + "#" + kh_autor_vorname + "#" + kh_autor_nachname + "#" + verstorben
    End If
    If autorenliste = "herausgeber" Then
        kh_metadaten_autoren.kh_herausgeber_liste.AddItem kh_autor_grad_txt + kh_autor_vorname_txt + kh_autor_nachname + verstorben_txt
        kh_metadaten_autoren.kh_herausgeber_liste.list(kh_metadaten_autoren.kh_herausgeber_liste.ListCount - 1, 1) = kh_autor_grad + "#" + kh_autor_vorname + "#" + kh_autor_nachname + "#" + verstorben
    End If
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    Unload Me
End Sub

Private Sub TextBox3_Change()

End Sub
Attribute VB_Name = "kh_menu"
Attribute VB_Base = "0{AF4EEF89-2664-43AF-B671-4D1060B38460}{EED76B1A-A84E-41A7-87A0-3219375FCCA5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    Selection.ClearFormatting
End Sub

Private Sub CommandButton10_Click()
    With Dialogs(wdDialogInsertPicture)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.InlineShapes.AddPicture FileName:=.Name, LinkToFile:=False, SaveWithDocument:=True
                Selection.style = "kh_abbildung"
                Selection.TypeText Chr(13)
                Selection.style = "kh_abbildung_titel"
                Selection.TypeText ChrW(9632) + " Bitte Abbildungstitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
            Case Else
                ' do nothing
        End Select
    End With

End Sub

Private Sub CommandButton2_Click()
    Selection.ClearFormatting
End Sub

Private Sub CommandButton3_Click()
    On Error GoTo ErrHandler
    With Selection
       With .FootnoteOptions
            .Location = wdBottomOfPage
            .NumberingRule = wdRestartContinuous
            .StartingNumber = 1
            .NumberStyle = wdNoteNumberStyleArabic
            .NumberingRule = wdRestartSection
       End With
       .Footnotes.Add Range:=Selection.Range, Reference:=""
    End With
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fu|fffd|note kann hier nicht eingef|fffd|gt werden"), , "Fehler"
End Sub

Private Sub CommandButton5_Click()
    With Dialogs(wdDialogTableInsertTable)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.style = "kh_tabelle_titel"
                Selection.TypeText ChrW(9632) + " Bitte Tabellentitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
                Selection.TypeText Chr(13)
                Selection.style = "kh_tabelle_absatz"
                .Execute
                Selection.TypeBackspace
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton8_Click()
    On Error GoTo ErrHandler
    With Selection
       With .FootnoteOptions
            .Location = wdBottomOfPage
            .NumberingRule = wdRestartContinuous
            .StartingNumber = 1
            .NumberStyle = wdNoteNumberStyleArabic
            .NumberingRule = wdRestartSection
       End With
       .Footnotes.Add Range:=Selection.Range, Reference:=""
    End With
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fu|fffd|note kann hier nicht eingef|fffd|gt werden"), , "Fehler"
End Sub

Private Sub CommandButton9_Click()
    With Dialogs(wdDialogTableInsertTable)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.style = "kh_tabelle_titel"
                Selection.TypeText ChrW(9632) + " Bitte Tabellentitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
                Selection.TypeText Chr(13)
                Selection.style = "kh_tabelle_absatz"
                .Execute
                Selection.TypeBackspace
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton11_Click()
    CommandButton11.Enabled = False
    CommandButton24.Enabled = False
    CommandButton29.Enabled = False
    setFocusToDoc
    Load kh_registereintrag
    kh_registereintrag.Show
    CommandButton11.Enabled = True
    CommandButton24.Enabled = True
    CommandButton29.Enabled = True
End Sub

Private Sub CommandButton12_Click()
    On Error GoTo ErrHandler
    With Selection
       With .FootnoteOptions
            .Location = wdBottomOfPage
            .NumberingRule = wdRestartContinuous
            .StartingNumber = 1
            .NumberStyle = wdNoteNumberStyleArabic
            .NumberingRule = wdRestartSection
       End With
       .Footnotes.Add Range:=Selection.Range, Reference:=""
    End With
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fu|fffd|note kann hier nicht eingef|fffd|gt werden"), , "Fehler"
End Sub

Private Sub CommandButton13_Click()
    With Dialogs(wdDialogTableInsertTable)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.style = "kh_tabelle_titel"
                Selection.TypeText ChrW(9632) + " Bitte Tabellentitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
                Selection.TypeText Chr(13)
                Selection.style = "kh_tabelle_absatz"
                .Execute
                Selection.TypeBackspace
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton14_Click()
    With Dialogs(wdDialogInsertPicture)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.InlineShapes.AddPicture FileName:=.Name, LinkToFile:=False, SaveWithDocument:=True
                Selection.style = "kh_abbildung"
                Selection.TypeText Chr(13)
                Selection.style = "kh_abbildung_titel"
                Selection.TypeText ChrW(9632) + " Bitte Abbildungstitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton16_Click()

End Sub

Private Sub kh_formatierung_aufhebung_Click()
    Selection.ClearFormatting
End Sub

Private Sub CommandButton24_Click()

    CommandButton11.Enabled = False
    CommandButton24.Enabled = False
    CommandButton29.Enabled = False
    setFocusToDoc
    Load kh_registereintrag
    kh_registereintrag.Show
    CommandButton11.Enabled = True
    CommandButton24.Enabled = True
    CommandButton29.Enabled = True
End Sub

Private Sub CommandButton25_Click()
    Selection.ClearFormatting
End Sub

Private Sub CommandButton26_Click()
    On Error GoTo ErrHandler
    With Selection
       With .FootnoteOptions
            .Location = wdBottomOfPage
            .NumberingRule = wdRestartContinuous
            .StartingNumber = 1
            .NumberStyle = wdNoteNumberStyleArabic
            .NumberingRule = wdRestartSection
       End With
       .Footnotes.Add Range:=Selection.Range, Reference:=""
    End With
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fu|fffd|note kann hier nicht eingef|fffd|gt werden"), , "Fehler"
End Sub

Private Sub CommandButton27_Click()
    With Dialogs(wdDialogTableInsertTable)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.style = "kh_tabelle_titel"
                Selection.TypeText ChrW(9632) + " Bitte Tabellentitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
                Selection.TypeText Chr(13)
                Selection.style = "kh_tabelle_absatz"
                .Execute
                Selection.TypeBackspace
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton28_Click()
    With Dialogs(wdDialogInsertPicture)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.InlineShapes.AddPicture FileName:=.Name, LinkToFile:=False, SaveWithDocument:=True
                Selection.style = "kh_abbildung"
                Selection.TypeText Chr(13)
                Selection.style = "kh_abbildung_titel"
                Selection.TypeText ChrW(9632) + " Bitte Abbildungstitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton29_Click()

    CommandButton11.Enabled = False
    CommandButton24.Enabled = False
    CommandButton29.Enabled = False
    setFocusToDoc
    Load kh_registereintrag
    kh_registereintrag.Show
    CommandButton11.Enabled = True
    CommandButton24.Enabled = True
    CommandButton29.Enabled = True
End Sub

Private Sub CommandButton30_Click()
    Selection.ClearFormatting
End Sub

Private Sub CommandButton31_Click()
    On Error GoTo ErrHandler
    With Selection
       With .FootnoteOptions
            .Location = wdBottomOfPage
            .NumberingRule = wdRestartContinuous
            .StartingNumber = 1
            .NumberStyle = wdNoteNumberStyleArabic
            .NumberingRule = wdRestartSection
       End With
       .Footnotes.Add Range:=Selection.Range, Reference:=""
    End With
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fu|fffd|note kann hier nicht eingef|fffd|gt werden"), , "Fehler"
End Sub

Private Sub CommandButton32_Click()
    With Dialogs(wdDialogTableInsertTable)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.style = "kh_tabelle_titel"
                Selection.TypeText ChrW(9632) + " Bitte Tabellentitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
                Selection.TypeText Chr(13)
                Selection.style = "kh_tabelle_absatz"
                .Execute
                Selection.TypeBackspace
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton33_Click()
    With Dialogs(wdDialogInsertPicture)
        res = .Display
        Select Case res
            Case -1:
                If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                   Selection.TypeText Chr(13)
                Else
                   Selection.TypeText Chr(13)
                   Selection.TypeText Chr(13)
                End If
                Selection.MoveUp Unit:=wdLine
                Selection.InlineShapes.AddPicture FileName:=.Name, LinkToFile:=False, SaveWithDocument:=True
                Selection.style = "kh_abbildung"
                Selection.TypeText Chr(13)
                Selection.style = "kh_abbildung_titel"
                Selection.TypeText ChrW(9632) + " Bitte Abbildungstitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
            Case Else
                ' do nothing
        End Select
    End With
End Sub

Private Sub CommandButton34_Click()
    Call updateMeta("kh_titel", kh_metadaten_titel.Text)
    Call updateMeta("kh_untertitel", kh_metadaten_untertitel.Text)
    Call updateMeta("kh_buchtyp", kh_metadaten_buchtyp.Text)
    Call updateMeta("kh_auflage", kh_metadaten_auflage.Text)
    Call updateMeta("kh_verlag", kh_metadaten_verlag.Text)
    Call updateMeta("kh_isbn1", kh_metadaten_isbn1.Text)
    Call updateMeta("kh_isbn2", kh_metadaten_isbn2.Text)
    Call updateMeta("kh_isbn3", kh_metadaten_isbn3.Text)
    Call updateMeta("kh_isbn4", kh_metadaten_isbn4.Text)
    Call updateMeta("kh_id", kh_metadaten_id.Text)
    Call updateMeta("kh_kurztitel", kh_metadaten_kurztitel.Text)
    Call updateMeta("kh_toctitel", kh_metadaten_toctitel.Text)
    
End Sub

Private Sub meta_update()
    kh_metadaten_titel.Text = MetaUpdate("kh_titel")
    kh_metadaten_untertitel.Text = MetaUpdate("kh_untertitel")
    kh_metadaten_buchtyp.Text = MetaUpdate("kh_buchtyp")
    kh_metadaten_auflage.Text = MetaUpdate("kh_auflage")
    kh_metadaten_verlag.Text = MetaUpdate("kh_verlag")
    kh_metadaten_isbn1.Text = MetaUpdate("kh_isbn1")
    kh_metadaten_isbn2.Text = MetaUpdate("kh_isbn2")
    kh_metadaten_isbn3.Text = MetaUpdate("kh_isbn3")
    kh_metadaten_isbn4.Text = MetaUpdate("kh_isbn4")
    kh_metadaten_id.Text = MetaUpdate("kh_id")
    kh_metadaten_kurztitel.Text = MetaUpdate("kh_kurztitel")
    kh_metadaten_toctitel.Text = MetaUpdate("kh_toctitel")
End Sub

Private Sub CommandButton35_Click()
    meta_update
End Sub

Private Sub CommandButton36_Click()
    Load kh_metadaten_autoren
    kh_metadaten_autoren.Show
End Sub

Private Sub CommandButton37_Click()
    Load kh_metadaten_schlagworte
    kh_metadaten_schlagworte.Show
End Sub

Private Sub CommandButton38_Click()
    Load kh_metadaten_reihe
    kh_metadaten_reihe.Show
End Sub

Private Sub CommandButton39_Click()
    If kh_menu_fehlerlist.ListIndex > -1 Then
        If kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "para" Then
            ActiveDocument.Paragraphs(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Range.Select
        ElseIf kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "shape" Then
            ActiveDocument.Shapes.Range(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Select
            ActiveWindow.ScrollIntoView Selection.Range, True
        ElseIf kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "fn" Then
            ActiveDocument.Footnotes(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Range.Paragraphs(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 4)).Range.Select
        End If
    End If
End Sub

Private Sub CommandButton40_Click()
    If kh_menu_fehlerlist.ListIndex > -1 Then
        MsgBox (kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 2))
    End If
End Sub

Private Sub CommandButton41_Click()
    If kh_menu_fehlerlist.ListIndex + 1 < kh_menu_fehlerlist.ListCount Then
        kh_menu_fehlerlist.ListIndex = kh_menu_fehlerlist.ListIndex + 1
        If kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "para" Then
            ActiveDocument.Paragraphs(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Range.Select
        ElseIf kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "shape" Then
            ActiveDocument.Shapes.Range(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Select
            ActiveWindow.ScrollIntoView Selection.Range, True
        ElseIf kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "fn" Then
            ActiveDocument.Footnotes(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Range.Paragraphs(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 4)).Range.Select
        End If
    End If
End Sub

Private Sub CommandButton42_Click()
    Load kh_struktur_info
    kh_struktur_info.Show
End Sub

Private Sub CommandButton43_Click()
    Dim return_anz, i As Integer
    Dim DocEndeLeer, ZweiSchlusszeilen As Boolean
    
    On Error GoTo ErrHandler
    
    return_anz = Selection.Paragraphs.Count
    If Selection.Characters.Count <> return_anz Then
       If Selection.Characters.Count > 1 And Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    End If
    
    If Selection.Bookmarks.Exists("\EndOfDoc") And Selection.Paragraphs(return_anz).Range.Text = Chr(13) Then
       DocEndeLeer = True
       If return_anz = 2 Then ZweiSchlusszeilen = True 'zwei ausgew|fffd|hlte leere Schlusszeilen reagieren anders als drei
    End If
    If IsLineEmpty And return_anz = 1 Then   'eine einzige Leerzeile anders handhaben. IslineEmpty untersucht nur ersten Absatz
        Selection.Collapse Direction:=wdCollapseStart
        Selection.TypeText ("Autorenhinweis: ")
        Selection.style = ActiveDocument.Styles("kh_autorenhinweis")
    Else
        If return_anz = 1 Then Selection.EndKey Unit:=wdLine 'Wenn Cursor am Zeilenbeginn steht, funtionierts nicht
        Selection.Paragraphs(1).Range.Select
        Selection.MoveLeft
        Selection.TypeText ("Autorenhinweis: ")
        Selection.style = ActiveDocument.Styles("kh_autorenhinweis")
    End If
    
    Exit Sub

ErrHandler:
    MsgBox ("Plazierung des Autorenhinweises nicht m|fffd|glich.")
    On Error GoTo 0
End Sub

Private Sub CommandButton44_Click()

    Dim return_anz, i As Integer
    Dim DocEndeLeer, ZweiSchlusszeilen As Boolean
    
    On Error GoTo ErrHandler
    
    return_anz = Selection.Paragraphs.Count
    If Selection.Characters.Count <> return_anz Then
       If Selection.Characters.Count > 1 And Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    End If
    
    If Selection.Bookmarks.Exists("\EndOfDoc") And Selection.Paragraphs(return_anz).Range.Text = Chr(13) Then
       DocEndeLeer = True
       If return_anz = 2 Then ZweiSchlusszeilen = True 'zwei ausgew|fffd|hlte leere Schlusszeilen reagieren anders als drei
    End If
    If IsLineEmpty And return_anz = 1 Then   'eine einzige Leerzeile anders handhaben. IslineEmpty untersucht nur ersten Absatz
        Selection.Collapse Direction:=wdCollapseStart
        Selection.TypeText ("Autorenhinweis: ")
        Selection.style = ActiveDocument.Styles("kh_autorenhinweis")
    Else
        If return_anz = 1 Then Selection.EndKey Unit:=wdLine 'Wenn Cursor am Zeilenbeginn steht, funtionierts nicht
        Selection.Paragraphs(1).Range.Select
        Selection.MoveLeft
        Selection.TypeText ("Autorenhinweis: ")
        Selection.style = ActiveDocument.Styles("kh_autorenhinweis")
    End If
    
    Exit Sub

ErrHandler:
    MsgBox ("Plazierung des Autorenhinweises nicht m|fffd|glich.")
    On Error GoTo 0
End Sub

Private Sub CommandButton45_Click()

    Dim return_anz, i As Integer
    Dim DocEndeLeer, ZweiSchlusszeilen As Boolean
    
    On Error GoTo ErrHandler
    
    return_anz = Selection.Paragraphs.Count
    If Selection.Characters.Count <> return_anz Then
       If Selection.Characters.Count > 1 And Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then Selection.MoveLeft Unit:=wdCharacter, Count:=1, Extend:=wdExtend
    End If
    
    If Selection.Bookmarks.Exists("\EndOfDoc") And Selection.Paragraphs(return_anz).Range.Text = Chr(13) Then
       DocEndeLeer = True
       If return_anz = 2 Then ZweiSchlusszeilen = True 'zwei ausgew|fffd|hlte leere Schlusszeilen reagieren anders als drei
    End If
    If IsLineEmpty And return_anz = 1 Then   'eine einzige Leerzeile anders handhaben. IslineEmpty untersucht nur ersten Absatz
        Selection.Collapse Direction:=wdCollapseStart
        Selection.TypeText ("Autorenhinweis: ")
        Selection.style = ActiveDocument.Styles("kh_autorenhinweis")
    Else
        If return_anz = 1 Then Selection.EndKey Unit:=wdLine 'Wenn Cursor am Zeilenbeginn steht, funtionierts nicht
        Selection.Paragraphs(1).Range.Select
        Selection.MoveLeft
        Selection.TypeText ("Autorenhinweis: ")
        Selection.style = ActiveDocument.Styles("kh_autorenhinweis")
    End If
    
    Exit Sub

ErrHandler:
    MsgBox ("Plazierung des Autorenhinweises nicht m|fffd|glich.")
    On Error GoTo 0
End Sub

Private Sub kh_menu_fehlerlist_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    If kh_menu_fehlerlist.ListIndex > -1 Then
        If kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "para" Then
            ActiveDocument.Paragraphs(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Range.Select
        ElseIf kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "shape" Then
            ActiveDocument.Shapes.Range(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Select
            ActiveWindow.ScrollIntoView Selection.Range, True
        ElseIf kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 3) = "fn" Then
            ActiveDocument.Footnotes(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 1)).Range.Paragraphs(kh_menu_fehlerlist.list(kh_menu_fehlerlist.ListIndex, 4)).Range.Select
        End If
    End If
End Sub

Private Sub kh_menu_reiter_Change()
    meta_update
End Sub


Private Sub kh_menu_objekte_abbildung_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_objekte_abbildung.ListIndex <> -1 Then
        If Left(kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 2), kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 3), kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 4))
        ElseIf kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1) = "insert_abb" Then
            With Dialogs(wdDialogInsertPicture)
                res = .Display
                Select Case res
                    Case -1:
                        If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                            Selection.TypeText Chr(13)
                            Selection.MoveUp Unit:=wdLine
                        ElseIf ActiveDocument.Paragraphs(GetParNum(Selection.Range)).Range.Characters(Selection.Information(wdFirstCharacterColumnNumber)).Text = Chr(13) Then
                            Selection.TypeText Chr(13)
                        Else
                            Selection.TypeText Chr(13)
                            Selection.TypeText Chr(13)
                            Selection.MoveUp Unit:=wdLine
                        End If
                        
                        Selection.InlineShapes.AddPicture FileName:=.Name, LinkToFile:=False, SaveWithDocument:=True
                        Selection.style = "kh_abbildung_absatz"
                        Selection.TypeText Chr(13)
                        Selection.style = "kh_abbildung_titel"
                        Selection.TypeText ChrW(9632) + " Bitte Abbildungstitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
                    Case Else
                        ' do nothing
                End Select
            End With
        ElseIf kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_objekte_abbildung.list(kh_menu_objekte_abbildung.ListIndex, 1) + " nicht gefunden")

End Sub

Private Sub kh_menu_objekte_block_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_objekte_block.ListIndex <> -1 Then
        If Left(kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 2), kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 3), kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 4))
        ElseIf kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_objekte_block.list(kh_menu_objekte_block.ListIndex, 1) + " nicht gefunden")

End Sub

Private Sub kh_menu_objekte_endnote_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_objekte_endnote.ListIndex <> -1 Then
        If kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1) = "kh_endnote_absatz" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1) = "kh_endnote_zeichen" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1))
        ElseIf kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1) = "kommentar" Then
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1) + " nicht gefunden")


End Sub

Private Sub kh_menu_objekte_fussnote_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_objekte_fussnote.ListIndex <> -1 Then
        If Left(kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1) = "Fu|fffd|notentext" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1) = "Fu|fffd|notenzeichen" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1))
        ElseIf Left(kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 2), kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 3), kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 4))
        ElseIf kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_objekte_fussnote.list(kh_menu_objekte_fussnote.ListIndex, 1) + " nicht gefunden")

End Sub

Private Sub kh_menu_objekte_sonstiges_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_objekte_sonstiges.ListIndex <> -1 Then
        If kh_menu_objekte_sonstiges.list(kh_menu_objekte_sonstiges.ListIndex, 1) = "convert_list" Then
            ActiveDocument.Range.ListFormat.ConvertNumbersToText
        ElseIf kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1) = "kommentar" Then
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_objekte_endnote.list(kh_menu_objekte_endnote.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_objekte_sonstiges.list(kh_menu_objekte_sonstiges.ListIndex, 1) + " nicht gefunden")


End Sub

Private Sub kh_menu_objekte_tabelle_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_objekte_tabelle.ListIndex <> -1 Then
        If Left(kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 2), kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 3), kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 4))
        ElseIf kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1) = "insert_tab" Then
            With Dialogs(wdDialogTableInsertTable)
                res = .Display
                Select Case res
                    Case -1:
                        If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
                            Selection.TypeText Chr(13)
                            Selection.MoveUp Unit:=wdLine
                        ElseIf ActiveDocument.Paragraphs(GetParNum(Selection.Range)).Range.Characters(Selection.Information(wdFirstCharacterColumnNumber)).Text = Chr(13) Then
                            Selection.TypeText Chr(13)
                        Else
                            Selection.TypeText Chr(13)
                            Selection.TypeText Chr(13)
                            Selection.MoveUp Unit:=wdLine
                        End If
                        Selection.style = "kh_tabelle_titel"
                        Selection.TypeText ChrW(9632) + " Bitte Tabellentitel eintragen, ansonsten Absatz l|fffd|schen " + ChrW(9632)
                        Selection.TypeText Chr(13)
                        Selection.style = "kh_tabelle_absatz"
                        .Execute
                        Selection.TypeBackspace
                    Case Else
                        ' do nothing
                End Select
            End With
        ElseIf kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_objekte_tabelle.list(kh_menu_objekte_tabelle.ListIndex, 1) + " nicht gefunden")

End Sub

Function GetParNum(r As Range) As Integer
    Dim rParagraphs As Range
    Dim CurPos As Integer

    r.Select
    CurPos = ActiveDocument.Bookmarks("\startOfSel").Start
    Set rParagraphs = ActiveDocument.Range(Start:=0, End:=CurPos)
    GetParNum = rParagraphs.Paragraphs.Count
End Function

Private Sub kh_menu_vorspann_vorwort_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_vorspann_vorwort.ListIndex <> -1 Then
        Selection.style = ActiveDocument.Styles(kh_menu_vorspann_vorwort.list(kh_menu_vorspann_vorwort.ListIndex, 1))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_titelei_formate.list(kh_menu_titelei_formate.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_vorspann_reihe_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_vorspann_reihe.ListIndex <> -1 Then
        Selection.style = ActiveDocument.Styles(kh_menu_vorspann_reihe.list(kh_menu_vorspann_reihe.ListIndex, 1))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_vorspann_reihe.list(kh_menu_vorspann_reihe.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_vorspann_titelei_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_vorspann_titelei.ListIndex <> -1 Then
        If Left(kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 2), kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 3), kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 4))
        ElseIf kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_vorspann_titelei.list(kh_menu_vorspann_titelei.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_vorspann_inhalt_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_vorspann_inhalt.ListIndex <> -1 Then
        Selection.style = ActiveDocument.Styles(kh_menu_vorspann_inhalt.list(kh_menu_vorspann_inhalt.ListIndex, 1))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_vorspann_inhalt.list(kh_menu_vorspann_inhalt.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_vorspann_abkuerzung_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_vorspann_abkuerzung.ListIndex <> -1 Then
        Selection.style = ActiveDocument.Styles(kh_menu_vorspann_abkuerzung.list(kh_menu_vorspann_abkuerzung.ListIndex, 1))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_vorspann_abkuerzung.list(kh_menu_vorspann_abkuerzung.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_vorspann_literatur_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_vorspann_literatur.ListIndex <> -1 Then
        Selection.style = ActiveDocument.Styles(kh_menu_vorspann_literatur.list(kh_menu_vorspann_literatur.ListIndex, 1))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
    End If
    setFocusToDoc
    Exit Sub
ErrHandler:
    MsgBox ("Fehler im Template: Format " + kh_menu_vorspann_literatur.list(kh_menu_vorspann_literatur.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_norm_formate_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_norm_formate.ListIndex <> -1 Then
        If Left(kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 2), kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 3), kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 4))
        ElseIf kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_norm_formate.list(kh_menu_norm_formate.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_norm_anlage_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_norm_anlage.ListIndex <> -1 Then
        If Left(kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 2), kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 3), kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 4))
        ElseIf kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_norm_anlage.list(kh_menu_norm_anlage.ListIndex, 1) + " nicht gefunden")
End Sub


Private Sub kh_menu_norm_block_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_norm_block.ListIndex <> -1 Then
        If Left(kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 2), kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 3), kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 4))
        ElseIf kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_norm_block.list(kh_menu_norm_block.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_norm_texte_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_norm_texte.ListIndex <> -1 Then
        If Left(kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 2), kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 3), kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 4))
        ElseIf kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_norm_texte.list(kh_menu_norm_texte.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_norm_zeichen_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_norm_zeichen.ListIndex <> -1 Then
        Selection.style = ActiveDocument.Styles(kh_menu_norm_zeichen.list(kh_menu_norm_zeichen.ListIndex, 1))
        Selection.MoveDown Unit:=wdParagraph, Count:=1
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_norm_zeichen.list(kh_menu_norm_zeichen.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_kommentar_formate_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_kommentar_formate.ListIndex <> -1 Then
        If Left(kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 2), kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 3), kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 4))
        ElseIf kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_kommentar_formate.list(kh_menu_kommentar_formate.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_kommentar_texte_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_kommentar_texte.ListIndex <> -1 Then
        If Left(kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 2), kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 3), kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 4))
        ElseIf kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_kommentar_texte.list(kh_menu_kommentar_texte.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_kommentar_block_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_kommentar_block.ListIndex <> -1 Then
        If Left(kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 2), kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 3), kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 4))
        ElseIf kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_kommentar_block.list(kh_menu_kommentar_block.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_kommentar_zitate_block_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_kommentar_zitate_block.ListIndex <> -1 Then
        If Left(kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 2), kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 3), kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 4))
        ElseIf kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_kommentar_zitate_block.list(kh_menu_kommentar_zitate_block.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub kh_menu_kommentar_zitate_inline_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    On Error GoTo ErrHandler
    If Button = 2 Then Exit Sub
    If kh_menu_kommentar_zitate_inline.ListIndex <> -1 Then
        If Left(kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 1), 3) = "kh_" Then
            Selection.style = ActiveDocument.Styles(kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 1))
            Selection.MoveDown Unit:=wdParagraph, Count:=1
        ElseIf Left(kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 1), 6) = "block_" Then
            Call addBlock(kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 2), kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 3), kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 4))
        ElseIf kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 1) = "kommentar" Then
        ElseIf kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 1) = "platzhalter" Then
            Call addInhalt
        Else
            MsgBox ("Fehler im Template: Funktion " + kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 1) + " nicht gefunden")
        End If
    End If
    setFocusToDoc
   Exit Sub
ErrHandler:
   MsgBox ("Fehler im Template: Format " + kh_menu_kommentar_zitate_inline.list(kh_menu_kommentar_zitate_inline.ListIndex, 1) + " nicht gefunden")
End Sub

Private Sub OptionButton2_Click()

End Sub

Private Sub Label32_Click()

End Sub

Private Sub Label37_Click()

End Sub

Private Sub TabStrip1_Change()
    Select Case TabStrip1.SelectedItem.caption
    Case "Vorspann"
        Call darstellung(True, False, False, False, False, False)
    Case "Norm"
        Call darstellung(False, True, False, False, False, False)
    Case "Kommentar"
        Call darstellung(False, False, True, False, False, False)
    Case "Objekte"
        Call darstellung(False, False, False, True, False, False)
    Case "Metadaten"
        Call darstellung(False, False, False, False, True, False)
    Case "Struktur pr|fffd|fen"
        Call darstellung(False, False, False, False, False, True)
    Case Else
    End Select
End Sub

Function darstellung(vorspann As Boolean, norm As Boolean, kommentar As Boolean, objekte As Boolean, metadaten As Boolean, struktur As Boolean)
    
    If Application.Version = "15.0" Then
        kh_menu.Width = 251
        kh_menu.Height = 308
    Else
        kh_menu.Width = 243
        kh_menu.Height = 300
    End If
    
    
    'Struktur pr|fffd|fen
    Label32.Visible = struktur
    Label32.Top = 32
    Label32.Left = 4
    kh_menu_fehlerlist.Visible = struktur
    kh_menu_fehlerlist.Top = 44
    kh_menu_fehlerlist.Left = 4
    
    CommandButton42.Visible = struktur
    CommandButton42.Top = 250
    CommandButton42.Left = 4
    
    CommandButton39.Visible = struktur
    CommandButton39.Top = 44
    CommandButton39.Left = 166
    CommandButton40.Visible = struktur
    CommandButton40.Top = 69
    CommandButton40.Left = 166
    CommandButton41.Visible = struktur
    CommandButton41.Top = 94
    CommandButton41.Left = 166
    
    'Metadaten
    Label17.Visible = metadaten
    Label17.Top = 32
    Label17.Left = 4
    kh_metadaten_titel.Visible = metadaten
    kh_metadaten_titel.Top = 30
    kh_metadaten_titel.Left = 58
    
    Label18.Visible = metadaten
    Label18.Top = 50
    Label18.Left = 4
    kh_metadaten_untertitel.Visible = metadaten
    kh_metadaten_untertitel.Top = 48
    kh_metadaten_untertitel.Left = 58
    
    Label19.Visible = metadaten
    Label19.Top = 68
    Label19.Left = 4
    kh_metadaten_buchtyp.Visible = metadaten
    kh_metadaten_buchtyp.Top = 66
    kh_metadaten_buchtyp.Left = 58
    
    Label21.Visible = metadaten
    Label21.Top = 86
    Label21.Left = 4
    kh_metadaten_auflage.Visible = metadaten
    kh_metadaten_auflage.Top = 84
    kh_metadaten_auflage.Left = 58
    
    Label26.Visible = metadaten
    Label26.Top = 104
    Label26.Left = 4
    kh_metadaten_verlag.Visible = metadaten
    kh_metadaten_verlag.Top = 102
    kh_metadaten_verlag.Left = 58
    
    Label22.Visible = metadaten
    Label22.Top = 122
    Label22.Left = 4
    kh_metadaten_isbn1.Visible = metadaten
    kh_metadaten_isbn1.Top = 120
    kh_metadaten_isbn1.Left = 58
    
    Label20.Visible = metadaten
    Label20.Top = 140
    Label20.Left = 4
    kh_metadaten_isbn2.Visible = metadaten
    kh_metadaten_isbn2.Top = 138
    kh_metadaten_isbn2.Left = 58
    
    Label24.Visible = metadaten
    Label24.Top = 158
    Label24.Left = 4
    kh_metadaten_isbn3.Visible = metadaten
    kh_metadaten_isbn3.Top = 156
    kh_metadaten_isbn3.Left = 58
    
    Label25.Visible = metadaten
    Label25.Top = 176
    Label25.Left = 4
    kh_metadaten_isbn4.Visible = metadaten
    kh_metadaten_isbn4.Top = 174
    kh_metadaten_isbn4.Left = 58
    
    CommandButton38.Visible = metadaten
    CommandButton38.Top = 200
    CommandButton38.Left = 4
    CommandButton36.Visible = metadaten
    CommandButton36.Top = 200
    CommandButton36.Left = 82
    CommandButton37.Visible = metadaten
    CommandButton37.Top = 200
    CommandButton37.Left = 160
    
    CommandButton34.Visible = metadaten
    CommandButton34.Top = 250
    CommandButton34.Left = 4
    CommandButton35.Visible = metadaten
    CommandButton35.Top = 250
    CommandButton35.Left = 160
    
    Frame1.Visible = metadaten
    
    'Objekte
    Label33.Visible = objekte
    Label33.Top = 32
    Label33.Left = 4
    kh_menu_objekte_tabelle.Visible = objekte
    kh_menu_objekte_tabelle.Top = 44
    kh_menu_objekte_tabelle.Left = 4
    
    Label34.Visible = objekte
    Label34.Top = 92
    Label34.Left = 4
    kh_menu_objekte_abbildung.Visible = objekte
    kh_menu_objekte_abbildung.Top = 104
    kh_menu_objekte_abbildung.Left = 4
    
    Label35.Visible = objekte
    Label35.Top = 32
    Label35.Left = 121
    kh_menu_objekte_block.Visible = objekte
    kh_menu_objekte_block.Top = 44
    kh_menu_objekte_block.Left = 121
    
    Label36.Visible = objekte
    Label36.Top = 104
    Label36.Left = 121
    kh_menu_objekte_fussnote.Visible = objekte
    kh_menu_objekte_fussnote.Top = 116
    kh_menu_objekte_fussnote.Left = 121
    
    Label37.Visible = objekte
    Label37.Top = 146
    Label37.Left = 121
    kh_menu_objekte_endnote.Visible = objekte
    kh_menu_objekte_endnote.Top = 158
    kh_menu_objekte_endnote.Left = 121
    
    Label38.Visible = objekte
    Label38.Top = 152
    Label38.Left = 4
    kh_menu_objekte_sonstiges.Visible = objekte
    kh_menu_objekte_sonstiges.Top = 164
    kh_menu_objekte_sonstiges.Left = 4
    
    'Kommentar
    Label16.Visible = kommentar
    Label16.Top = 32
    Label16.Left = 4
    kh_menu_kommentar_formate.Visible = kommentar
    kh_menu_kommentar_formate.Top = 44
    kh_menu_kommentar_formate.Left = 4
    
    Label13.Visible = kommentar
    Label13.Top = 178
    Label13.Left = 4
    kh_menu_kommentar_zitate_block.Visible = kommentar
    kh_menu_kommentar_zitate_block.Top = 190
    kh_menu_kommentar_zitate_block.Left = 4
    
    Label15.Visible = kommentar
    Label15.Top = 32
    Label15.Left = 121
    kh_menu_kommentar_texte.Visible = kommentar
    kh_menu_kommentar_texte.Top = 44
    kh_menu_kommentar_texte.Left = 121
    
    Label14.Visible = kommentar
    Label14.Top = 144
    Label14.Left = 121
    kh_menu_kommentar_block.Visible = kommentar
    kh_menu_kommentar_block.Top = 156
    kh_menu_kommentar_block.Left = 121
    
    Label12.Visible = kommentar
    Label12.Top = 178
    Label12.Left = 121
    kh_menu_kommentar_zitate_inline.Visible = kommentar
    kh_menu_kommentar_zitate_inline.Top = 190
    kh_menu_kommentar_zitate_inline.Left = 121
    
    'Norm
    Label10.Visible = norm
    Label10.Top = 32
    Label10.Left = 4
    kh_menu_norm_formate.Visible = norm
    kh_menu_norm_formate.Top = 44
    kh_menu_norm_formate.Left = 4
    
    Label9.Visible = norm
    Label9.Top = 32
    Label9.Left = 121
    kh_menu_norm_texte.Visible = norm
    kh_menu_norm_texte.Top = 44
    kh_menu_norm_texte.Left = 121
    
    Label8.Visible = norm
    Label8.Top = 97
    Label8.Left = 121
    kh_menu_norm_block.Visible = norm
    kh_menu_norm_block.Top = 109
    kh_menu_norm_block.Left = 121
    
    Label7.Visible = norm
    Label7.Top = 172
    Label7.Left = 121
    kh_menu_norm_anlage.Visible = norm
    kh_menu_norm_anlage.Top = 184
    kh_menu_norm_anlage.Left = 121
    
    Label11.Visible = norm
    Label11.Top = 218
    Label11.Left = 121
    kh_menu_norm_zeichen.Visible = norm
    kh_menu_norm_zeichen.Top = 230
    kh_menu_norm_zeichen.Left = 121
    
    'Vorspann
    Label1.Visible = vorspann
    Label1.Top = 32
    Label1.Left = 4
    kh_menu_vorspann_reihe.Visible = vorspann
    kh_menu_vorspann_reihe.Top = 44
    kh_menu_vorspann_reihe.Left = 4
    
    Label3.Visible = vorspann
    Label3.Top = 105
    Label3.Left = 4
    kh_menu_vorspann_inhalt.Visible = vorspann
    kh_menu_vorspann_inhalt.Top = 117
    kh_menu_vorspann_inhalt.Left = 4
    
    Label5.Visible = vorspann
    Label5.Top = 188
    Label5.Left = 4
    kh_menu_vorspann_abkuerzung.Visible = vorspann
    kh_menu_vorspann_abkuerzung.Top = 200
    kh_menu_vorspann_abkuerzung.Left = 4
    
    Label6.Visible = vorspann
    Label6.Top = 32
    Label6.Left = 121
    kh_menu_vorspann_titelei.Visible = vorspann
    kh_menu_vorspann_titelei.Top = 44
    kh_menu_vorspann_titelei.Left = 121
    
    Label2.Visible = vorspann
    Label2.Top = 149
    Label2.Left = 121
    kh_menu_vorspann_vorwort.Visible = vorspann
    kh_menu_vorspann_vorwort.Top = 161
    kh_menu_vorspann_vorwort.Left = 121
    
    Label4.Visible = vorspann
    Label4.Top = 198
    Label4.Left = 121
    kh_menu_vorspann_literatur.Visible = vorspann
    kh_menu_vorspann_literatur.Top = 210
    kh_menu_vorspann_literatur.Left = 121
    
    If norm = True Or vorspann = True Or kommentar = True Or objekte = True Then
        CommandButton1.Visible = True
        CommandButton1.Top = 246
        CommandButton1.Left = 4
        
        CommandButton43.Visible = True
        CommandButton43.Top = 246
        CommandButton43.Left = 63
        
        CommandButton12.Visible = True
        CommandButton12.Top = 246
        CommandButton12.Left = 129
        
        CommandButton11.Visible = True
        CommandButton11.Top = 246
        CommandButton11.Left = 170
    Else
        CommandButton1.Visible = False
        CommandButton43.Visible = False
        CommandButton12.Visible = False
        CommandButton11.Visible = False
    End If
    
    
    CommandButton13.Visible = vorspann
    CommandButton14.Visible = vorspann
    CommandButton24.Visible = norm
    CommandButton25.Visible = norm
    CommandButton26.Visible = norm
    CommandButton27.Visible = norm
    CommandButton28.Visible = norm
    CommandButton44.Visible = norm
    CommandButton29.Visible = kommentar
    CommandButton30.Visible = kommentar
    CommandButton31.Visible = kommentar
    CommandButton32.Visible = kommentar
    CommandButton33.Visible = kommentar
    CommandButton45.Visible = kommentar
End Function

Private Sub UserForm_Initialize()
    TabStrip1.TabIndex = 1
    Call darstellung(True, False, False, False, False, False)
    
    meta_update
    
    kh_menu_vorspann_reihe.Clear
    Call addFormat(kh_menu_vorspann_reihe, "Werktitel", "kh_reihe_werktitel", "", "", "")
    Call addFormat(kh_menu_vorspann_reihe, "Untertitel", "kh_reihe_untertitel", "", "", "")
    Call addFormat(kh_menu_vorspann_reihe, "Absatz", "kh_reihe_absatz", "", "", "")
    Call addFormat(kh_menu_vorspann_reihe, "Autor", "kh_reihe_autor", "", "", "")
    Call addFormat(kh_menu_vorspann_reihe, "Autorenzusatz", "kh_reihe_autorenzusatz", "", "", "")

    kh_menu_vorspann_vorwort.Clear
    Call addFormat(kh_menu_vorspann_vorwort, "Titel", "kh_vorwort_titel", "", "", "")
    Call addFormat(kh_menu_vorspann_vorwort, "Absatz", "kh_vorwort_absatz", "", "", "")
    Call addFormat(kh_menu_vorspann_vorwort, "Autor", "kh_vorwort_autor", "", "", "")
    
    kh_menu_vorspann_inhalt.Clear
    Call addFormat(kh_menu_vorspann_inhalt, "Titel", "kh_inhaltsverz_titel", "", "", "")
    Call addFormat(kh_menu_vorspann_inhalt, "Eintrag 1. Ordnung", "kh_inhaltsverz_eintrag1", "", "", "")
    Call addFormat(kh_menu_vorspann_inhalt, "Eintrag 2. Ordnung", "kh_inhaltsverz_eintrag2", "", "", "")
    Call addFormat(kh_menu_vorspann_inhalt, "Eintrag 3. Ordnung", "kh_inhaltsverz_eintrag3", "", "", "")
    Call addFormat(kh_menu_vorspann_inhalt, "Eintrag 4. Ordnung", "kh_inhaltsverz_eintrag4", "", "", "")
    Call addFormat(kh_menu_vorspann_inhalt, "Eintrag 5. Ordnung", "kh_inhaltsverz_eintrag5", "", "", "")
    
    kh_menu_vorspann_titelei.Clear
    Call addFormat(kh_menu_vorspann_titelei, "Werktitel", "kh_titelei_werktitel", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Untertitel", "kh_titelei_untertitel", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Buchtyp", "kh_titelei_buchtyp", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Absatz", "kh_titelei_absatz", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Autor", "kh_titelei_autor", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Autorenzusatz", "kh_titelei_autorenzusatz", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Auflage", "kh_titelei_auflage", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Verlag", "kh_titelei_verlag", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Impressum", "kh_impressum", "", "", "")
    Call addFormat(kh_menu_vorspann_titelei, "Anmerkung", "block_anmerkung", "kh_anmerkung_start", "kh_anmerkung_stopp", "Anmerkung")
    
    kh_menu_vorspann_abkuerzung.Clear
    Call addFormat(kh_menu_vorspann_abkuerzung, "Titel", "kh_abkuerzungsverz_titel", "", "", "")
    Call addFormat(kh_menu_vorspann_abkuerzung, "Anmerkung", "kh_abkuerzungsverz_anmerkung", "", "", "")
    Call addFormat(kh_menu_vorspann_abkuerzung, "Zwischentitel", "kh_abkuerzungsverz_zwischentitel", "", "", "")
    Call addFormat(kh_menu_vorspann_abkuerzung, "Eintrag", "kh_abkuerzungsverz_eintrag", "", "", "")
    
    kh_menu_vorspann_literatur.Clear
    Call addFormat(kh_menu_vorspann_literatur, "Titel", "kh_literaturverz_titel", "", "", "")
    Call addFormat(kh_menu_vorspann_literatur, "Anmerkung", "kh_literaturverz_anmerkung", "", "", "")
    Call addFormat(kh_menu_vorspann_literatur, "Eintrag", "kh_literaturverz_eintrag", "", "", "")
    
    kh_menu_norm_formate.Clear
    Call addFormat(kh_menu_norm_formate, "Haupttitel", "kh_norm_haupttitel", "", "", "")
    Call addFormat(kh_menu_norm_formate, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Inhaltsverz. Titel", "kh_norm_inhaltsverz_titel", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Eintrag 1. Ordnung", "kh_norm_inhaltsverz_eintrag1", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Eintrag 2. Ordnung", "kh_norm_inhaltsverz_eintrag2", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Eintrag 3. Ordnung", "kh_norm_inhaltsverz_eintrag3", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Eintrag 4. Ordnung", "kh_norm_inhaltsverz_eintrag4", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Eintrag 5. Ordnung", "kh_norm_inhaltsverz_eintrag5", "", "", "")
    Call addFormat(kh_menu_norm_formate, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Teil", "kh_norm_teil", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Kapitel", "kh_norm_kapitel", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Unterkapitel", "kh_norm_unterkapitel", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Abschnitt", "kh_norm_abschnitt", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Unterabschnitt", "kh_norm_unterabschnitt", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Titel", "kh_norm_titel", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Paragraph", "kh_norm_paragraph", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Artikel", "kh_norm_artikel", "", "", "")
    Call addFormat(kh_menu_norm_formate, "I. Titel", "kh_norm_roemisch", "", "", "")
    Call addFormat(kh_menu_norm_formate, "1. Titel", "kh_norm_arabisch", "", "", "")
    Call addFormat(kh_menu_norm_formate, "Ordnungsziffer 1", "kh_norm_ordnung", "", "", "")
    
    kh_menu_norm_zeichen.Clear
    Call addFormat(kh_menu_norm_zeichen, "aufgehoben", "kh_norm_aufgehoben", "", "", "")
    
    kh_menu_norm_texte.Clear
    Call addFormat(kh_menu_norm_texte, "Zwischentitel", "kh_norm_zwischentitel", "", "", "")
    Call addFormat(kh_menu_norm_texte, "Absatz", "kh_norm_absatz", "", "", "")
    Call addFormat(kh_menu_norm_texte, "1. Liste", "kh_norm_liste1", "", "", "")
    Call addFormat(kh_menu_norm_texte, "    2. Liste", "kh_norm_liste2", "", "", "")
    Call addFormat(kh_menu_norm_texte, "        3. Liste", "kh_norm_liste3", "", "", "")
    
    kh_menu_norm_block.Clear
    'Call addFormat(kh_menu_norm_block, "Kleindruck", "block_kleindruck", "kh_kleindruck_start", "kh_kleindruck_stopp", "Kleindruck")
    Call addFormat(kh_menu_norm_block, "Anmerkung-Einschub", "block_anmerkung_einschub", "kh_norm_anmerkung_einschub_start", "kh_norm_anmerkung_einschub_stopp", "Anmerkung-Einschub")
    'Call addFormat(kh_menu_norm_block, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_norm_block, "Material", "block_material", "kh_norm_material_start", "kh_norm_material_stopp", "Material")
    Call addFormat(kh_menu_norm_block, "Begr|fffd|ndung", "block_begruendung", "kh_norm_begruendung_start", "kh_norm_begruendung_stopp", "Begr|fffd|ndung")
    Call addFormat(kh_menu_norm_block, "Vorschrift", "block_vorschrift", "kh_norm_vorschrift_start", "kh_norm_vorschrift_stopp", "Vorschrift")
    Call addFormat(kh_menu_norm_block, "Alte Fassung", "block_altefassung", "kh_norm_altefassung_start", "kh_norm_altefassung_stopp", "Alte Fassung")
    'Call addFormat(kh_menu_norm_block, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_norm_block, "Material-Titel", "kh_material_titel", "", "", "")
    
    kh_menu_norm_anlage.Clear
    Call addFormat(kh_menu_norm_anlage, "Anlage/Anhang (Block)", "block_anlage", "kh_norm_anlage_start", "kh_norm_anlage_stopp", "Anlage/Anhang")
    Call addFormat(kh_menu_norm_anlage, "Anlage/Anhang Z|fffd|hler", "kh_norm_anlage_zaehler", "", "", "")
    Call addFormat(kh_menu_norm_anlage, "Anlage/Anhang Haupttitel", "kh_norm_anlage_titel", "", "", "")
    
    kh_menu_kommentar_formate.Clear
    Call addFormat(kh_menu_kommentar_formate, "Zwischenblatt", "kh_kommentar_K-0", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "Haupttitel", "kh_kommentar_K-1a", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "Kommentartitel", "kh_kommentar_K-1b", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "Inhalts|fffd|bersicht (Platzhalter)", "platzhalter", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "A. Titel", "kh_kommentar_K-4", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "I. Titel", "kh_kommentar_K-5", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "1. Titel", "kh_kommentar_K-6", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "a) Titel", "kh_kommentar_K-7", "", "", "")
    Call addFormat(kh_menu_kommentar_formate, "aa) Titel", "kh_kommentar_K-8", "", "", "")
    
    kh_menu_kommentar_texte.Clear
    Call addFormat(kh_menu_kommentar_texte, "Zwischentitel", "kh_kommentar_zwischentitel", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "Randnummer", "kh_kommentar_randnummer", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "Absatz", "kh_kommentar_absatz", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "1. Liste", "kh_kommentar_liste1", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "    2. Liste", "kh_kommentar_liste2", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "        3. Liste", "kh_kommentar_liste3", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "", "kommentar", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "Literatur Titel", "kh_kommentar_literatur_titel", "", "", "")
    Call addFormat(kh_menu_kommentar_texte, "Literatur Eintrag", "kh_kommentar_literatur_eintrag", "", "", "")
    
    kh_menu_kommentar_block.Clear
    'Call addFormat(kh_menu_kommentar_block, "Kleindruck", "block_kleindruck", "kh_kleindruck_start", "kh_kleindruck_stopp", "Kleindruck")
    'Call addFormat(kh_menu_kommentar_block, "Formel", "block_formel", "kh_formel_start", "kh_formel_stopp", "Formel")
    'Call addFormat(kh_menu_kommentar_block, "Anmerkung", "block_anmerkung", "kh_anmerkung_start", "kh_anmerkung_stopp", "Anmerkung")
    Call addFormat(kh_menu_kommentar_block, "Beispiel", "block_beispiel", "kh_kommentar_beispiel_start", "kh_kommentar_beispiel_stopp", "Beispiel")
    'Call addFormat(kh_menu_kommentar_block, "Kasten Fl|fffd|che", "block_kasten", "kh_kasten_flaeche_start", "kh_kasten_flaeche_stopp", "Kasten Fl|fffd|che")
    'Call addFormat(kh_menu_kommentar_block, "Kasten Rand", "block_kasten", "kh_kasten_rand_start", "kh_kasten_rand_stopp", "Kasten Rand")
        
    kh_menu_kommentar_zitate_block.Clear
    Call addFormat(kh_menu_kommentar_zitate_block, "Zitat - Norm neu", "block_zitat", "kh_zitat_neu_start", "kh_zitat_neu_stopp", "Zitat Norm neu")
    Call addFormat(kh_menu_kommentar_zitate_block, "Zitat - Norm alt", "block_zitat", "kh_zitat_alt_start", "kh_zitat_alt_stopp", "Zitat Norm alt")
    Call addFormat(kh_menu_kommentar_zitate_block, "Zitat - Material", "block_zitat", "kh_zitat_mat_start", "kh_zitat_mat_stopp", "Zitat Material")
    Call addFormat(kh_menu_kommentar_zitate_block, "Zitat - Literatur", "block_zitat", "kh_zitat_lit_start", "kh_zitat_lit_stopp", "Zitat Literatur")
    Call addFormat(kh_menu_kommentar_zitate_block, "Zitat - Unbekannt", "block_zitat", "kh_zitat_unb_start", "kh_zitat_unb_stopp", "Zitat unbekannt")
    
    kh_menu_kommentar_zitate_inline.Clear
    Call addFormat(kh_menu_kommentar_zitate_inline, "Zitat - Norm neu", "kh_zitat_neu", "", "", "")
    Call addFormat(kh_menu_kommentar_zitate_inline, "Zitat - Norm alt", "kh_zitat_alt", "", "", "")
    Call addFormat(kh_menu_kommentar_zitate_inline, "Zitat - Material", "kh_zitat_mat", "", "", "")
    Call addFormat(kh_menu_kommentar_zitate_inline, "Zitat - Literatur", "kh_zitat_lit", "", "", "")
    Call addFormat(kh_menu_kommentar_zitate_inline, "Zitat - Unbekannt", "kh_zitat_unb", "", "", "")
    
    kh_menu_objekte_tabelle.Clear
    Call addFormat(kh_menu_objekte_tabelle, "Tabelle einf|fffd|gen", "insert_tab", "", "", "")
    Call addFormat(kh_menu_objekte_tabelle, "Tabellentitel", "kh_tabelle_titel", "", "", "")
    Call addFormat(kh_menu_objekte_tabelle, "Tabellenabsatz", "kh_tabelle_absatz", "", "", "")
    Call addFormat(kh_menu_objekte_tabelle, "Tabellenlegende", "kh_tabelle_legende", "", "", "")
    
    kh_menu_objekte_abbildung.Clear
    Call addFormat(kh_menu_objekte_abbildung, "Abbildung einf|fffd|gen", "insert_abb", "", "", "")
    Call addFormat(kh_menu_objekte_abbildung, "Abbildungstitel", "kh_abbildung_titel", "", "", "")
    Call addFormat(kh_menu_objekte_abbildung, "Abbildungsabsatz", "kh_abbildung_absatz", "", "", "")
    Call addFormat(kh_menu_objekte_abbildung, "Abbildungslegende", "kh_abbildung_legende", "", "", "")
    
    kh_menu_objekte_block.Clear
    Call addFormat(kh_menu_objekte_block, "Kleindruck", "block_kleindruck", "kh_kleindruck_start", "kh_kleindruck_stopp", "Kleindruck")
    Call addFormat(kh_menu_objekte_block, "Formel", "block_formel", "kh_formel_start", "kh_formel_stopp", "Formel")
    Call addFormat(kh_menu_objekte_block, "Anmerkung", "block_anmerkung", "kh_anmerkung_start", "kh_anmerkung_stopp", "Anmerkung")
    Call addFormat(kh_menu_objekte_block, "Kasten Fl|fffd|che", "block_kasten", "kh_kasten_flaeche_start", "kh_kasten_flaeche_stopp", "Kasten Fl|fffd|che")
    Call addFormat(kh_menu_objekte_block, "Kasten Rand", "block_kasten", "kh_kasten_rand_start", "kh_kasten_rand_stopp", "Kasten Rand")
    
    kh_menu_objekte_fussnote.Clear
    Call addFormat(kh_menu_objekte_fussnote, "Fu|fffd|notentext", "Fu|fffd|notentext", "", "", "")
    Call addFormat(kh_menu_objekte_fussnote, "Fu|fffd|notenzeichen", "Fu|fffd|notenzeichen", "", "", "")
    
    kh_menu_objekte_endnote.Clear
    Call addFormat(kh_menu_objekte_endnote, "Endnotentext", "kh_endnote_absatz", "", "", "")
    Call addFormat(kh_menu_objekte_endnote, "Endnotenzeichen", "kh_endnote_zeichen", "", "", "")
    
    kh_menu_objekte_sonstiges.Clear
    Call addFormat(kh_menu_objekte_sonstiges, "Listen normalisieren", "convert_list", "", "", "")
End Sub

Function addFormat(list As Listbox, caption As String, format As String, block_start As String, block_stop As String, block_caption As String)
    list.AddItem caption
    list.list(list.ListCount - 1, 1) = format
    list.list(list.ListCount - 1, 2) = block_start
    list.list(list.ListCount - 1, 3) = block_stop
    list.list(list.ListCount - 1, 4) = block_caption
End Function

Private Sub UserForm_Terminate()
    With Options
        .AutoFormatAsYouTypeApplyBulletedLists = list1
        .AutoFormatAsYouTypeApplyNumberedLists = list2
    End With
End Sub

Attribute VB_Name = "kh_metadaten_autoren"
Attribute VB_Base = "0{569DEEED-EACE-4325-B765-7DDA1DEAB37F}{68982E26-9CB5-498E-91EB-C68AA928F66C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    autorenliste = "herausgeber"
    Load kh_autor
    kh_autor.Show
End Sub

Private Sub CommandButton4_Click()
    autorenliste = "autor"
    Load kh_autor
    kh_autor.Show
End Sub

Private Sub CommandButton2_Click()
    If kh_herausgeber_liste.ListIndex > -1 Then kh_herausgeber_liste.RemoveItem (kh_herausgeber_liste.ListIndex)
End Sub

Private Sub CommandButton3_Click()
    If kh_autoren_liste.ListIndex > -1 Then kh_autoren_liste.RemoveItem (kh_autoren_liste.ListIndex)
End Sub

Private Sub CommandButton34_Click()
    For i = 1 To 100
        If i <= kh_autoren_liste.ListCount Then
            Call updateMeta("kh_autor" + Str(i), kh_autoren_liste.list(i - 1, 1))
        Else
            Call delMeta("kh_autor" + Str(i))
        End If
    Next i
    For i = 1 To 100
        If i <= kh_herausgeber_liste.ListCount Then
            Call updateMeta("kh_herausgeber" + Str(i), kh_herausgeber_liste.list(i - 1, 1))
        Else
            Call delMeta("kh_herausgeber" + Str(i))
        End If
    Next i
    Unload Me
End Sub

Private Sub CommandButton35_Click()
    Unload Me
End Sub

Private Sub UserForm_Initialize()
    Dim autoren_txt() As String
    kh_autoren_liste.Clear
    For i = 1 To 100
        var = MetaUpdate("kh_autor" + Str(i))
        If var <> "" Then
            autoren_txt() = Split(var, "#")
            If autoren_txt(0) <> "" Then autoren_txt(0) = autoren_txt(0) + " "
            If autoren_txt(1) <> "" Then autoren_txt(1) = autoren_txt(1) + " "
            If autoren_txt(3) = "1" Then autoren_txt(3) = " |fffd|"
            kh_autoren_liste.AddItem autoren_txt(0) + autoren_txt(1) + autoren_txt(2) + autoren_txt(3)
            kh_autoren_liste.list(i - 1, 1) = var
        End If
    Next i
    kh_herausgeber_liste.Clear
    For i = 1 To 100
        var = MetaUpdate("kh_herausgeber" + Str(i))
        If var <> "" Then
            autoren_txt() = Split(var, "#")
            If autoren_txt(0) <> "" Then autoren_txt(0) = autoren_txt(0) + " "
            If autoren_txt(1) <> "" Then autoren_txt(1) = autoren_txt(1) + " "
            If autoren_txt(3) = "1" Then autoren_txt(3) = " |fffd|"
            kh_herausgeber_liste.AddItem autoren_txt(0) + autoren_txt(1) + autoren_txt(2) + autoren_txt(3)
            kh_herausgeber_liste.list(i - 1, 1) = var
        End If
    Next i
End Sub
Attribute VB_Name = "kh_metadaten_reihe"
Attribute VB_Base = "0{ED16F16F-D574-4B74-963A-2065FB1320C1}{BFBC5AE7-2DB3-4B78-B835-0E6A62D46D34}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton3_Click()
    If kh_reihe_autoren_liste.ListIndex > -1 Then kh_reihe_autoren_liste.RemoveItem (kh_reihe_autoren_liste.ListIndex)
End Sub

Private Sub CommandButton34_Click()
    Call updateMeta("kh_reihe_titel", kh_reihe_titel.Text)
    Call updateMeta("kh_reihe_untertitel", kh_reihe_untertitel.Text)
    For i = 1 To 100
        If i <= kh_reihe_autoren_liste.ListCount Then
            Call updateMeta("kh_reihe_autor" + Str(i), kh_reihe_autoren_liste.list(i - 1, 1))
        Else
            Call delMeta("kh_reihe_autor" + Str(i))
        End If
    Next i
    Unload Me
End Sub

Private Sub UserForm_Initialize()
    Dim autoren_txt() As String
    kh_reihe_titel.Text = MetaUpdate("kh_reihe_titel")
    kh_reihe_untertitel.Text = MetaUpdate("kh_reihe_untertitel")
    kh_reihe_autoren_liste.Clear
    For i = 1 To 100
        var = MetaUpdate("kh_reihe_autor" + Str(i))
        If var <> "" Then
            autoren_txt() = Split(var, "#")
            If autoren_txt(0) <> "" Then autoren_txt(0) = autoren_txt(0) + " "
            If autoren_txt(1) <> "" Then autoren_txt(1) = autoren_txt(1) + " "
            If autoren_txt(3) = "1" Then autoren_txt(3) = " |fffd|"
            kh_reihe_autoren_liste.AddItem autoren_txt(0) + autoren_txt(1) + autoren_txt(2) + autoren_txt(3)
            kh_reihe_autoren_liste.list(i - 1, 1) = var
        End If
    Next i
End Sub

Private Sub CommandButton35_Click()
    Unload Me
End Sub

Private Sub CommandButton4_Click()
    autorenliste = "reihe"
    Load kh_autor
    kh_autor.Show
End Sub
Attribute VB_Name = "kh_metadaten_schlagworte"
Attribute VB_Base = "0{A4D93DFB-FC7F-4912-B729-799DB2170106}{97716697-2186-4ABB-8D23-FC44F821EE69}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton3_Click()
    If kh_schlagwort_liste.ListIndex > -1 Then kh_schlagwort_liste.RemoveItem (kh_schlagwort_liste.ListIndex)
End Sub

Private Sub CommandButton34_Click()
    For i = 1 To 100
        If i <= kh_schlagwort_liste.ListCount Then
            Call updateMeta("kh_schlagwort" + Str(i), kh_schlagwort_liste.list(i - 1))
        Else
            Call delMeta("kh_schlagwort" + Str(i))
        End If
    Next i
    Unload Me
End Sub

Private Sub UserForm_Initialize()
    kh_schlagwort_liste.Clear
    For i = 1 To 100
        var = MetaUpdate("kh_schlagwort" + Str(i))
        If var <> "" Then
            kh_schlagwort_liste.AddItem var
        End If
    Next i
End Sub

Private Sub CommandButton35_Click()
    Unload Me
End Sub

Private Sub CommandButton4_Click()
    Load kh_schlagwort
    kh_schlagwort.Show
End Sub
Attribute VB_Name = "kh_registereintrag"
Attribute VB_Base = "0{D7F6B24C-9964-4901-A178-0C24014AA8CB}{A1D91852-03BA-4F09-BEC1-4753C7EB2AC9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public lastText As String
Public regentry, index4 As String

Private Function IndexCheck() As Boolean
    kh_index_1.Text = LTrim(kh_index_1.Text)
    kh_index_1.Text = RTrim(kh_index_1.Text)
    kh_index_2.Text = LTrim(kh_index_2.Text)
    kh_index_2.Text = RTrim(kh_index_2.Text)
    kh_index_3.Text = LTrim(kh_index_3.Text)
    kh_index_3.Text = RTrim(kh_index_3.Text)
    
    regentry = kh_index_1.Text
    If Len(regentry) = 0 Then
       MsgBox ("Es ist kein Haupteintrag bef|fffd|llt.")
       IndexCheck = False
       Exit Function
    End If
    
    If InStr(regentry & kh_index_2.Text, ":") Then
       MsgBox ("Der Registereintrag darf keinen Doppelpunkt enthalten. Bitte korrigieren.")
       IndexCheck = False
       Exit Function
    End If
    If Len(kh_index_2.Text) > 0 Then regentry = regentry & ":" & kh_index_2.Text
    
    If Len(kh_index_3.Text) > 0 Then
         If Len(kh_index_2.Text) = 0 Then
         MsgBox ("Kein Untereintrag bef|fffd|llt.")
         IndexCheck = False
       Exit Function
       End If
       regentry = regentry & ":" & kh_index_3.Text
    End If
    
    If kh_index_4_set.Value Then index4 = kh_index_4.Text
    
    IndexCheck = True
End Function

Private Sub kh_index_1_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub kh_index_2_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub kh_index_3_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub kh_index_4_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub kh_index_4_Change()
    Update
    kh_index_4_set.Value = True
End Sub

Private Sub kh_index_set_Click()
    If IndexCheck Then
       ActiveWindow.ActivePane.view.ShowAll = True
       ActiveDocument.Indexes.MarkEntry Range:=Selection.Range, Entry:=regentry _
            , EntryAutoText:=regentry, CrossReference:=index4, CrossReferenceAutoText:= _
            "", BookmarkName:="", Bold:=False, Italic:=False
       Selection.Collapse Direction:=wdCollapseEnd
    End If
End Sub

Private Sub kh_index_unload_Click()
    Unload Me
End Sub

Private Sub Label1_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub Label2_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub Label3_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub UserForm_Initialize()
    Update
End Sub

Private Sub UserForm_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal Y As Single)
    Update
End Sub

Private Sub Update()
    Dim selectText, index1 As String
    Dim saveView As Boolean
    Dim x As Integer
    
    On Error Resume Next
    
    Application.ScreenUpdating = False
    saveView = ActiveWindow.ActivePane.view.ShowAll
    ActiveDocument.Bookmarks.Add Range:=Selection.Range, Name:="pos"
    
    Selection.GoTo what:=wdGoToBookmark, Name:="pos"
    
    If Selection.Text <> lastText Then
      
        selectText = kh_index_1.Text
        If ActiveWindow.ActivePane.view.ShowAll Then ActiveWindow.ActivePane.view.ShowAll = False
       
        If Selection.Start <> Selection.End Then
            If Right(Selection.Text, 1) = " " Then
                index1 = Left(Selection, Len(Selection.Text) - 1)
            Else
                index1 = Selection.Text
            End If
    
            index1 = Replace(index1, Chr(1), "")    'Chr(1) = Bild.
            index1 = Replace(index1, Chr(2), "")    'Chr(2) = Fu|fffd|notenzeichen.
            index1 = Replace(index1, Chr(21), "")   'Chr(21) = Word-Grafik.
            index1 = Replace(index1, Chr(30), "")   'Chr(30) = Gesch. Trennung.
            index1 = Replace(index1, Chr(31), "")   'Chr(31) = Manuelle Trennung.
    
            If InStr(index1, Chr(12)) <> 0 And InStr(index1, Chr(12)) < InStr(index1, Chr(13)) Then
                x = InStr(index1, Chr(12))
            Else
                x = InStr(index1, Chr(13))
            End If
        
            If Len(index1) > 0 Then
                If Asc(index1) = 12 Or Asc(index1) = 13 Then
                    index1 = ""
                Else
                    If x = 0 Then x = Len(index1) Else x = x - 1
                    index1 = Mid(index1, 1, x)
                End If
            End If
            kh_index_1.Text = index1
        End If
    
        If Selection.Start = Selection.End Then
            kh_index_1.Text = ""
        End If
        
        If selectText <> kh_index_1.Text Then
            kh_index_2.Text = ""
            kh_index_3.Text = ""
        End If
        
        For n = 1 To ActiveWindow.Panes.Count
            If saveView Then ActiveWindow.Panes(n).view.ShowAll = True
        Next
    End If
    
    ActiveDocument.Bookmarks("pos").Delete
    lastText = Selection.Text
    Application.ScreenUpdating = True
    ActiveDocument.UndoClear
End Sub

Attribute VB_Name = "kh_schlagwort"
Attribute VB_Base = "0{D125B868-FCAD-42C8-83D1-4BA4B4678F84}{92B02DED-38F6-4EF5-82D9-3F5EF3ABB789}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
    If kh_schlagwort_text.Text <> "" Then
        kh_metadaten_schlagworte.kh_schlagwort_liste.AddItem kh_schlagwort_text.Text
    End If
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    Unload Me
End Sub
Attribute VB_Name = "kh_struktur_info"
Attribute VB_Base = "0{D16AD41D-9071-4275-B37C-A56385C164E0}{6261CC59-2E2C-40C1-B4F2-04C9653AED10}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private bAbort As Boolean

Private Sub CommandButton1_Click()
    If bAbort = False Then
        bAbort = True
    Else
        Unload Me
    End If
End Sub

Private Sub UserForm_Activate()
    Dim kleindruck As Integer
    Dim kleindruck_start As Integer
    Dim anmerkung As Integer
    Dim anmerkung_start As Integer
    Dim anmerkung_einschub As Integer
    Dim anmerkung_einschub_start As Integer
    Dim begruendung As Integer
    Dim begruendung_start As Integer
    Dim vorschrift As Integer
    Dim vorschrift_start As Integer
    Dim altefassung As Integer
    Dim altefassung_start As Integer
    Dim material As Integer
    Dim material_start As Integer
    Dim zitat_neu As Integer
    Dim zitat_neu_start As Integer
    Dim zitat_alt As Integer
    Dim zitat_alt_start As Integer
    Dim zitat_mat As Integer
    Dim zitat_mat_start As Integer
    Dim zitat_lit As Integer
    Dim zitat_lit_start As Integer
    Dim zitat_unb As Integer
    Dim zitat_unb_start As Integer
    Dim beispiel As Integer
    Dim beispiel_start As Integer
    Dim anlage As Integer
    Dim anlage_start As Integer
    Dim formel As Integer
    Dim formel_start As Integer
    Dim kastenf As Integer
    Dim kastenf_start As Integer
    Dim kastenr As Integer
    Dim kastenr_start As Integer
    Dim max As Integer
    Dim style As String
    
    bAbort = False
    
    CommandButton1.caption = "Abbruch"

    Application.ScreenUpdating = False
    
    kh_menu.kh_menu_fehlerlist.Clear
    Label2.caption = "Objekte |fffd|berpr|fffd|fen ( 0 /" + Str(ActiveDocument.Shapes.Count) + " )"
    Label3.caption = "Fu|fffd|noten |fffd|berpr|fffd|fen ( 0 /" + Str(ActiveDocument.Footnotes.Count) + " )"
    Label4.caption = "Absatzformate |fffd|berpr|fffd|fen ( 0 /" + Str(ActiveDocument.Paragraphs.Count) + " )"
    DoEvents
    max = ActiveDocument.Shapes.Count
    If max > 0 Then
        For i = 1 To max
            kh_menu.kh_menu_fehlerlist.AddItem "Textfeld ist nicht erlaubt"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = ActiveDocument.Shapes(i).Name
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Textfelder sind nicht erw|fffd|nscht. Bitte setzen Sie Texte direkt in den Textfluss oder nutzen die Abbildungs- bzw. Tabellenfunktion f|fffd|r grafische Objekte."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "shape"
            
            If i Mod 10 = 0 Then
                Label2.caption = "Objekte |fffd|berpr|fffd|fen (" + Str(i) + " /" + Str(ActiveDocument.Shapes.Count) + " )"
                DoEvents
                If bAbort Then Exit For
            End If
        Next i
    End If
    Label2.caption = "Objekte |fffd|berpr|fffd|fen (" + Str(i) + " /" + Str(ActiveDocument.Shapes.Count) + " )"
    DoEvents
    If bAbort = False Then
        CheckBox1.Value = 1
    End If
    max = ActiveDocument.Footnotes.Count
    If max > 0 Then
        i = 0
        For Each afn In ActiveDocument.Footnotes
            i = i + 1
        'For i = 1 To max
            j = 0
            For Each apara In afn.Range.Paragraphs
                j = j + 1
            'For j = 1 To ActiveDocument.Footnotes(i).Range.Paragraphs.Count
                style = apara.Range.Paragraphs.style
                'style = ActiveDocument.Footnotes(i).Range.Paragraphs(j).style
                If Left(style, 3) <> "kh_" And style <> "Fu|fffd|notentext" Then
                    kh_menu.kh_menu_fehlerlist.AddItem style + " ist nicht erlaubt"
                    kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                    kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Ein unbekanntes Format (" + style + ") wurde im Dokument gefunden. Die Verwendung dieses Formats ist nicht erlaubt. Bitte formatieren Sie diese Zeile mit einer entsprechenden Auszeichnung auf dem RVW-Buch Men|fffd|"
                    kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "fn"
                    kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 4) = j
                End If
            Next apara
            If i Mod 1 = 0 Then
                Label3.caption = "Fu|fffd|noten |fffd|berpr|fffd|fen (" + Str(i) + " /" + Str(max) + " )"
                DoEvents
                If bAbort Then Exit For
            End If
        Next afn
    End If
    Label3.caption = "Fu|fffd|noten |fffd|berpr|fffd|fen (" + Str(i) + " /" + Str(max) + " )"
    DoEvents
    If bAbort = False Then
        CheckBox2.Value = 1
    End If
    max = ActiveDocument.Paragraphs.Count
    i = 0
    For Each apara In ActiveDocument.Paragraphs
        i = i + 1
    'For i = 1 To max
        'style = ActiveDocument.Paragraphs(i).style
        On Error GoTo next_para
        apara.Range.Select
        If Selection.Paragraphs.Count = 1 Then
            style = Selection.Paragraphs.style
        Else
            style = Selection.Paragraphs(1).style 's.o.
        End If
        'style = apara.Range.Paragraphs.style
        If Left(style, 3) <> "kh_" Then
            If apara.Range.Tables.Count <> 0 And style = "Standard" Then
            Else
                kh_menu.kh_menu_fehlerlist.AddItem style + " ist nicht erlaubt"
                kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Ein unbekanntes Format (" + style + ") wurde im Dokument gefunden. Die Verwendung dieses Formats ist nicht erlaubt. Bitte formatieren Sie diese Zeile mit einer entsprechenden Auszeichnung auf dem RVW-Buch Men|fffd|"
                kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
            End If
        Else
            Select Case style
                Case "kh_anmerkung_start"
                    If anmerkung = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anmerkung Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anmerkung wurde schon gestartet. Das Starten einer weiteren Anmerkung ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder die letzte Anmerkung oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        anmerkung = 1
                        anmerkung_start = i
                    End If
                Case "kh_anmerkung_stopp"
                    If anmerkung = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anmerkung Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anmerkung wurde noch nicht gestartet. Das Stoppen einer nicht gestarteten Anmerkung ist deshalb nicht erlaubt. Starten Sie entweder die Anmerkung oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        anmerkung = 0
                    End If
                Case "kh_kommentar_beispiel_start"
                    If beispiel = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Beispiel Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Beispiel wurde schon gestartet. Das Starten eines weiteren Beispiels ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder das letzte Beispiel oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        beispiel = 1
                        beispiel_start = i
                    End If
                Case "kh_kommentar_beispiel_stopp"
                    If beispiel = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Beispiel Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Beispiel wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Beispiels ist deshalb nicht erlaubt. Starten Sie entweder das Beispiel oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        beispiel = 0
                    End If
                Case "kh_formel_start"
                    If formel = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Formel Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Formel wurde schon gestartet. Das Starten einer weiteren Formel ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder die letzte Formel oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        formel = 1
                        formel_start = i
                    End If
                Case "kh_formel_stopp"
                    If formel = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Formel Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Formel wurde noch nicht gestartet. Das Stoppen einer nicht gestarteten Formel ist deshalb nicht erlaubt. Starten Sie entweder die Formel oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        formel = 0
                    End If
                Case "kh_kasten_flaeche_start"
                    If kastenf = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Kasten (Fl|fffd|che) Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Kasten (Fl|fffd|che) wurde schon gestartet. Das Starten eines weiteren Kastens (Fl|fffd|che) ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder den letzte Kasten (Fl|fffd|che) oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        kastenf = 1
                        kastenf_start = i
                    End If
                Case "kh_kasten_flaeche_stopp"
                    If kastenf = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Kasten (Fl|fffd|che) Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Kasten (Fl|fffd|che) wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Kastens (Fl|fffd|che) ist deshalb nicht erlaubt. Starten Sie entweder den Kasten (Fl|fffd|che) oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        kastenf = 0
                    End If
                Case "kh_kasten_rand_start"
                    If kastenr = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Kasten (Rand) Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Kasten (Rand) wurde schon gestartet. Das Starten eines weiteren Kastens (Rand) ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder den letzte Kasten (Rand) oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        kastenr = 1
                        kastenr_start = i
                    End If
                Case "kh_kasten_rand_stopp"
                    If kastenr = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Kasten (Rand) Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Kasten (Rand) wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Kastens (Rand) ist deshalb nicht erlaubt. Starten Sie entweder den Kasten (Rand) oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        kastenr = 0
                    End If
                Case "kh_kleindruck_start"
                    If kleindruck = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Kleindruck Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Kleindruck wurde schon gestartet. Das Starten eines weiteren Kleindrucks ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder den letzte Kleindruck oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        kleindruck = 1
                        kleindruck_start = i
                    End If
                Case "kh_kleindruck_stopp"
                    If kleindruck = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Kleindruck Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Kleindruck wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Kleindrucks ist deshalb nicht erlaubt. Starten Sie entweder den Kleindruck oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        kleindruck = 0
                    End If
                Case "kh_zitat_alt_start"
                    If zitat_alt = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Norm alt) Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Norm alt) wurde schon gestartet. Das Starten eines weiteren Zitats (Norm alt) ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder das letzte Zitat (Norm alt) oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_alt = 1
                        zitat_alt_start = i
                    End If
                Case "kh_zitat_alt_stopp"
                    If zitat_alt = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Norm alt) Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Norm alt) wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Zitats (Norm alt) ist deshalb nicht erlaubt. Starten Sie entweder das Zitat (Norm alt) oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_alt = 0
                    End If
                Case "kh_zitat_lit_start"
                    If zitat_lit = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Literatur) Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Literatur) wurde schon gestartet. Das Starten eines weiteren Zitats (Literatur) ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder das letzte Zitat (Literatur) oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_lit = 1
                        zitat_lit_start = i
                    End If
                Case "kh_zitat_lit_stopp"
                    If zitat_lit = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Literatur) Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Literatur) wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Zitats (Literatur) ist deshalb nicht erlaubt. Starten Sie entweder das Zitat (Literatur) oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_lit = 0
                    End If
                Case "kh_zitat_mat_start"
                    If zitat_mat = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Material) Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Material) wurde schon gestartet. Das Starten eines weiteren Zitats (Material) ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder das letzte Zitat (Material) oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_mat = 1
                        zitat_mat_start = i
                    End If
                Case "kh_zitat_mat_stopp"
                    If zitat_mat = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Material) Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Material) wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Zitats (Material) ist deshalb nicht erlaubt. Starten Sie entweder das Zitat (Material) oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_mat = 0
                    End If
                Case "kh_zitat_neu_start"
                    If zitat_neu = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Norm neu) Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Norm neu) wurde schon gestartet. Das Starten eines weiteren Zitats (Norm neu) ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder das letzte Zitat (Norm neu) oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_neu = 1
                        zitat_neu_start = i
                    End If
                Case "kh_zitat_neu_stopp"
                    If zitat_neu = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Norm neu) Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Norm neu) wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Zitats (Norm neu) ist deshalb nicht erlaubt. Starten Sie entweder das Zitat (Norm neu) oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_neu = 0
                    End If
                Case "kh_zitat_unb_start"
                    If zitat_unb = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Unbekannt) Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Unbekannt) wurde schon gestartet. Das Starten eines weiteren Zitats (Unbekannt) ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder das letzte Zitat (Unbekannt) oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_unb = 1
                        zitat_unb_start = i
                    End If
                Case "kh_zitat_unb_stopp"
                    If zitat_unb = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Unbekannt) Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Zitat (Unbekannt) wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Zitats (Unbekannt) ist deshalb nicht erlaubt. Starten Sie entweder das Zitat (Unbekannt) oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        zitat_unb = 0
                    End If
                Case "kh_norm_altefassung_start"
                    If altefassung = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Alte Fassung Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Alte Fassung wurde schon gestartet. Das Starten einer weiteren Alte Fassung ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder die letzte Alte Fassung oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        altefassung = 1
                        altefassung_start = i
                    End If
                Case "kh_norm_altefassung_stopp"
                    If altefassung = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Alte Fassung Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Alte Fassung wurde noch nicht gestartet. Das Stoppen einer nicht gestarteten Alte Fassung ist deshalb nicht erlaubt. Starten Sie entweder die Alte Fassung oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        altefassung = 0
                    End If
                Case "kh_norm_anlage_start"
                    If anlage = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anlage Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anlage wurde schon gestartet. Das Starten einer weiteren Anlage ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder die letzte Anlage oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        anlage = 1
                        anlage_start = i
                    End If
                Case "kh_norm_anlage_stopp"
                    If anlage = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anlage Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anlage wurde noch nicht gestartet. Das Stoppen einer nicht gestarteten Anlage ist deshalb nicht erlaubt. Starten Sie entweder die Anlage oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        anlage = 0
                    End If
                Case "kh_norm_anlage_titel"
                    If anlage = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anlage Haupttitel fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anlage wurde noch nicht gestartet. Das Verwenden eines Anlagentitels ist nur innerhalb eines Anlagen-Blockes erlaubt. Starten Sie entweder die Anlage oder ersetzen Sie den aktuelle Format."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    End If
                Case "kh_norm_anlage_zaehler"
                    If anlage = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anlage Z|fffd|hler fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anlage wurde noch nicht gestartet. Das Verwenden eines Anlagez|fffd|hlers ist nur innerhalb eines Anlagen-Blockes erlaubt. Starten Sie entweder die Anlage oder ersetzen Sie den aktuelle Format."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    End If
                Case "kh_norm_anmerkung_einschub_start"
                    If anmerkung_einschub = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anmerkung-Einschub Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anmerkung-Einschub wurde schon gestartet. Das Starten einer weiteren Anmerkung ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder die letzte Anmerkung oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        anmerkung_einschub = 1
                        anmerkung_einschub_start = i
                    End If
                Case "kh_norm_anmerkung_einschub_stopp"
                    If anmerkung_einschub = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Anmerkung-Einschub Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Anmerkung-Einschub wurde noch nicht gestartet. Das Stoppen einer nicht gestarteten Anmerkung ist deshalb nicht erlaubt. Starten Sie entweder die Anmerkung oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        anmerkung_einschub = 0
                    End If
                Case "kh_norm_begruendung_start"
                    If begruendung = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Begr|fffd|ndung Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Begr|fffd|ndung wurde schon gestartet. Das Starten einer weiteren Begr|fffd|ndung ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder die letzte Begr|fffd|ndung oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        begruendung = 1
                        begruendung_start = i
                    End If
                Case "kh_norm_begruendung_stopp"
                    If begruendung = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Begr|fffd|ndung Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Begr|fffd|ndung wurde noch nicht gestartet. Das Stoppen einer nicht gestarteten Begr|fffd|ndung ist deshalb nicht erlaubt. Starten Sie entweder die Begr|fffd|ndung oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        begruendung = 0
                    End If
                Case "kh_norm_material_start"
                    If material = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Material Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Material wurde schon gestartet. Das Starten eines weiteren Materials ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder das letzte Material oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        material = 1
                        material_start = i
                    End If
                Case "kh_norm_material_stopp"
                    If material = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Material Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Material wurde noch nicht gestartet. Das Stoppen eines nicht gestarteten Materials ist deshalb nicht erlaubt. Starten Sie entweder das Material oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        material = 0
                    End If
                Case "kh_norm_vorschrift_start"
                    If vorschrift = 1 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Vorschrift Start fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Vorschrift wurde schon gestartet. Das Starten einer weiteren Vorschrift ist deshalb nicht erlaubt. Schlie|fffd|en Sie entweder die letzte Vorschrift oder entfernen Sie den aktuellen Start."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        vorschrift = 1
                        vorschrift_start = i
                    End If
                Case "kh_norm_vorschrift_stopp"
                    If vorschrift = 0 Then
                        kh_menu.kh_menu_fehlerlist.AddItem "Vorschrift Stopp fehlerhaft"
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = i
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der Block Vorschrift wurde noch nicht gestartet. Das Stoppen einer nicht gestarteten Vorschrift ist deshalb nicht erlaubt. Starten Sie entweder die Vorschrift oder entfernen Sie den aktuellen Stopp."
                        kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
                    Else
                        vorschrift = 0
                    End If
                Case Else
            End Select
        End If
next_para:
        ActiveDocument.UndoClear
        If i Mod 1 = 0 Then
            Label4.caption = "Absatzformate |fffd|berpr|fffd|fen (" + Str(i) + " /" + Str(max) + " )"
            DoEvents
            If bAbort Then Exit For
        End If
    Next apara
    Label4.caption = "Absatzformate |fffd|berpr|fffd|fen (" + Str(i) + " /" + Str(max) + " )"
    DoEvents
    If bAbort = False Then
        If kleindruck = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Kleindruck nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = kleindruck_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Kleindruck wurde nicht beendet. Schlie|fffd|en Sie entweder diesen Kleindruck oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If anmerkung = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Anmerkung nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = anmerkung_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Anmerkung wurde nicht beendet. Schlie|fffd|en Sie entweder diese Anmerkung oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If anmerkung_einschub = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Anmerkung-Einschub nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = anmerkung_einschub_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Anmerkung-Einschub wurde nicht beendet. Schlie|fffd|en Sie entweder diese Anmerkung oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If begruendung = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Begr|fffd|ndung nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = begruendung_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Begr|fffd|ndung wurde nicht beendet. Schlie|fffd|en Sie entweder diese Begr|fffd|ndung oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If vorschrift = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Vorschrift nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = vorschrift_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Vorschrift wurde nicht beendet. Schlie|fffd|en Sie entweder diese Vorschrift oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If altefassung = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Alte Fassung nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = altefassung_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Alte Fassung wurde nicht beendet. Schlie|fffd|en Sie entweder diese Alte Fassung oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If material = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Material nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = material_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Material wurde nicht beendet. Schlie|fffd|en Sie entweder dieses Material oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If zitat_neu = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Norm neu) nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = zitat_neu_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Zitat (Norm neu) wurde nicht beendet. Schlie|fffd|en Sie entweder dieses Zitat (Norm neu) oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If zitat_alt = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Norm alt) nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = zitat_alt_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Zitat (Norm alt) wurde nicht beendet. Schlie|fffd|en Sie entweder dieses Zitat (Norm alt) oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If zitat_mat = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Material) nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = zitat_mat_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Zitat (Material) wurde nicht beendet. Schlie|fffd|en Sie entweder dieses Zitat (Material) oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If zitat_lit = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Literatur) nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = zitat_lit_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Zitat (Literatur) wurde nicht beendet. Schlie|fffd|en Sie entweder dieses Zitat (Literatur) oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If zitat_unb = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Zitat (Unbekannt) nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = zitat_unb_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Zitat (Unbekannt) wurde nicht beendet. Schlie|fffd|en Sie entweder dieses Zitat (Unbekannt) oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If formel = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Formel nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = formel_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Formel wurde nicht beendet. Schlie|fffd|en Sie entweder diese Formel oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If beispiel = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Beispiel nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = beispiel_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Beispiel wurde nicht beendet. Schlie|fffd|en Sie entweder dieses Beispiel oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If anlage = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Anlage nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = anlage_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Anlage wurde nicht beendet. Schlie|fffd|en Sie entweder diese Anlage oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If kastenf = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Kasten (Fl|fffd|che) nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = kastenf_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Kasten (Fl|fffd|che) wurde nicht beendet. Schlie|fffd|en Sie entweder diesen Kasten (Fl|fffd|che) oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        If kastenr = 1 Then
            kh_menu.kh_menu_fehlerlist.AddItem "Kasten (Rand) nicht beendet"
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 1) = kastenr_start
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 2) = "Der letzte Block Kasten (Rand) wurde nicht beendet. Schlie|fffd|en Sie entweder diesen Kasten (Rand) oder entfernen Sie dessen Start."
            kh_menu.kh_menu_fehlerlist.list(kh_menu.kh_menu_fehlerlist.ListCount - 1, 3) = "para"
        End If
        CheckBox3.Value = 1
    End If
    bAbort = True
    
    Application.ScreenUpdating = True
    
    CommandButton1.caption = "Schlie|fffd|en"
End Sub


' InQuest injected base64 decoded content
' jZ M

INQUEST-PP=macro
