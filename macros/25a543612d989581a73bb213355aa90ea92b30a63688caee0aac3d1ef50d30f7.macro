Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Sub workbook_open()
' Makros m|fffd|ssen akzeptiert werden.


Worksheets("Beschreibung").Visible = True
Worksheets("|fffd|nderungshistorie").Visible = True
Worksheets("Verteilung").Visible = True
Worksheets("Makro").Visible = False
Worksheets("Beschreibung").Activate

End Sub


Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

'Nur Speichern als .xlsm-Datei zulassen und AAW_Number als Speichern_unter Name vorschlagen
   
   Dim AAW_Number As String
   Dim FName As Variant
   
   AAW_Number = Worksheets("Beschreibung").Cells(5, 26)
   
   'If AAW_Number = "" Then
   'MsgBox "Es konnte keine Arbeitsanweisungsnummer generiert werden. Bitte geben sie eine g|fffd|ltige Teilenummer ein. Speichern ohne Teilnummer nicht m|fffd|glich"
   'Exit Sub
   'End If
   
   If SaveAsUI Then
     'Den Excelvorgang abbrechen
     Cancel = True
     'Nach einem Namen fragen
     FName = Application.GetSaveAsFilename( _
     InitialFileName:="P:\Share\Produktion\Teilespezifische_Arbeitsanweisungen\" & AAW_Number, fileFilter:="Excel-Arbeitsmappe mit Makros (*.xlsm), *.xlsm")
       'Abbruch?
     If VarType(FName) = vbBoolean Then Exit Sub
     'Nein, dann selber speichern
     Application.EnableEvents = False
     Application.DisplayAlerts = False
     ThisWorkbook.SaveAs FName, xlOpenXMLWorkbookMacroEnabled, Local:=True
     Application.DisplayAlerts = True
     Application.EnableEvents = True
   End If

End Sub



Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

' Bei |fffd|nderung der Teilenummer Arbeitsanweisungsnummer generieren

Private Sub Worksheet_Change(ByVal Target As Range)
  If Target.Address(0, 0) = "G7" Then Call Arbeitsanweisungsnummer_aktualisieren
End Sub


Sub Arbeitsanweisungsnummer_aktualisieren()

Dim AAW_Number As String
Dim AAW_XXX As String
Dim Part_Number As String
Dim Pfad As String
Dim AAW_Number_alt As String

Pfad = "P:\Share\Produktion\Teilespezifische_Arbeitsanweisungen\"
'Pfad = "C:\Users\dtbok\Desktop\Teilespezifische Arbeitsanweisungen\"  ' Testpfad
Part_Number = Worksheets("Beschreibung").Cells(7, 7)
AAW_Number_alt = Worksheets("Beschreibung").Cells(5, 26)
AAW_XXX = "001" 'Initialisierung Z|fffd|hler

'Teilenummer / mit _ ersetzen
Part_Number = Replace(Part_Number, "/", "_")
'Teilenummer Leerzeichen l|fffd|schen
Part_Number = Replace(Part_Number, " ", "")

If ThisWorkbook.Name = AAW_Number_alt & ".xlsm" Then
AAW_XXX = Right(AAW_Number_alt, 3)
End If

AAW_Number = "AAW-" & Part_Number & "-" & AAW_XXX

Do While (Dir(Pfad & AAW_Number & ".xlsm") <> "" Or Dir(Pfad & AAW_Number & ".xlsx") <> "") And ThisWorkbook.Name <> AAW_Number & ".xlsm"
        AAW_XXX = AAW_XXX + 1
        AAW_XXX = Format(AAW_XXX, "000")
        AAW_Number = "AAW-" & Part_Number & "-" & AAW_XXX
Loop

Worksheets("Beschreibung").Unprotect

If Part_Number = "" Then
Worksheets("Beschreibung").Cells(5, 26) = ""

Else
Worksheets("Beschreibung").Cells(5, 26) = AAW_Number
End If

Worksheets("Beschreibung").Protect DrawingObjects:=False, AllowFormattingCells:=True

End Sub


Sub zus|fffd|tzliches_Blatt_einf|fffd|gen()

'Variablendeklaration
Dim n As Integer 'Z|fffd|hler f|fffd|r Seitenanzahl
Dim Printadresse As String 'Druckbereich
Dim i As Integer 'Z|fffd|hler Seitenumbr|fffd|che
Dim j As Integer 'Zahler f|fffd|r Spaltenbreiten


'Schreibschutz entfernen und Fehlermeldungen ausschalten
Worksheets("Beschreibung").Unprotect
Application.DisplayAlerts = False

'Anzahl der derzeitigen Seiten ermitteln
n = 0 'Initialisierung Seitenz|fffd|hler
Do Until Worksheets("Beschreibung").Cells(7, 30 * n + 1).Value = ""
n = n + 1
Loop

'Spaltenbreiten der neuen Spalten anpassen
For j = 1 To 30
  Columns(j + 30 * n).ColumnWidth = Columns(j).ColumnWidth
Next

'CopyPaste
Worksheets("Blankovorlage").Range("A1:AD73").Copy
Worksheets("Beschreibung").Paste Destination:=Range(Cells(1, n * 30 + 1), Cells(1, n * 30 + 1))
        
'Druckbereich festlegen
Printadresse = Worksheets("Beschreibung").Range(Cells(1, 1), Cells(73, n * 30 + 30)).Address
Worksheets("Beschreibung").PageSetup.PrintArea = Printadresse

'zus|fffd|tzliche Seitenumbr|fffd|che einf|fffd|gen
Do Until Worksheets("Beschreibung").VPageBreaks.Count >= n
Worksheets("Beschreibung").VPageBreaks.Add (Worksheets("Beschreibung").Range(Cells(1, n * 30 + 1), Cells(1, n * 30 + 1)))
Loop

'Seitenumbr|fffd|che Positionen festlegen
For i = 1 To n Step 1
Set Worksheets("Beschreibung").VPageBreaks(i).Location = Range(Cells(1, i * 30 + 1), Cells(1, i * 30 + 1))
Next i
     
'Formeln einf|fffd|gen
Worksheets("Beschreibung").Range(Cells(2, 30 * n + 26), Cells(3, 30 * n + 30)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Stand
Worksheets("Beschreibung").Range(Cells(5, 30 * n + 26), Cells(6, 30 * n + 30)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Nummer
Worksheets("Beschreibung").Range(Cells(7, 30 * n + 7), Cells(7, 30 * n + 13)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Teilenummer
Worksheets("Beschreibung").Range(Cells(7, 30 * n + 18), Cells(7, 30 * n + 26)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Abmessung
Worksheets("Beschreibung").Range(Cells(7, 30 * n + 29), Cells(7, 30 * n + 30)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Werkstoff
Worksheets("Beschreibung").Range(Cells(8, 30 * n + 1), Cells(8, 30 * n + 30)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Titel
Worksheets("Beschreibung").Range(Cells(73, 30 * n + 5), Cells(73, 30 * n + 13)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Erstellt
Worksheets("Beschreibung").Range(Cells(73, 30 * n + 17), Cells(73, 30 * n + 25)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Gepr|fffd|ft
Worksheets("Beschreibung").Range(Cells(73, 30 * n + 28), Cells(73, 30 * n + 30)).FormulaR1C1 = "=IF(RC[-30]="""","""",RC[-30])" 'Freigegeben

'Zellen auf gesperrt setzen
Worksheets("Beschreibung").Range(Cells(1, n * 30 + 1), Cells(8, n * 30 + 30)).Locked = True
Worksheets("Beschreibung").Range(Cells(73, n * 30 + 1), Cells(73, n * 30 + 30)).Locked = True

'Arbeitsblatt sperren und Fehlermeldungen wieder einschalten
Worksheets("Beschreibung").Protect DrawingObjects:=False, AllowFormattingCells:=True
Application.DisplayAlerts = True

End Sub

Sub Blatt_l|fffd|schen()

'Variablendeklaration
Dim n As Integer 'Z|fffd|hler f|fffd|r Seitenanzahl
Dim Abbrechen As Byte ' Wert Abbrechentaste


'Schreibschutz entfernen und Fehlermeldungen ausschalten
Worksheets("Beschreibung").Unprotect
Application.DisplayAlerts = False


'Anzahl der derzeitigen Seiten ermitteln
n = 0 'Initialisierung Seitenz|fffd|hler
Do Until Worksheets("Beschreibung").Cells(7, 30 * n + 1).Value = ""
n = n + 1
Loop

'Seitenzahl um eine reduzieren
n = n - 1


'Erste Seite soll nicht gel|fffd|scht werden
If n = 0 Then
MsgBox ("Eine Arbeitsanweisung sollte mindestens eine Seite enthalten. Die erste Seite kann nicht gel|fffd|scht werden.")
Exit Sub
End If

'Meldung, ob Seite wirklich gel|fffd|scht werden soll
Abbrechen = MsgBox("Achtung, Seite " & n + 1 & " und alle Inhalte werden gel|fffd|scht. Wollen sie fortfahren?", vbOKCancel, "Seite l|fffd|schen best|fffd|tigen")
If Abbrechen = 2 Then
Exit Sub
End If

'Seite l|fffd|schen
Worksheets("Beschreibung").Range(Cells(1, n * 30 + 1), Cells(73, n * 30 + 30)).EntireColumn.Delete


'Arbeitsblatt sperren und Fehlermeldungen wieder einschalten
Worksheets("Beschreibung").Protect DrawingObjects:=False, AllowFormattingCells:=True
Application.DisplayAlerts = True

End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
