Attribute VB_Name = "Basics"
Public Sub RegOcExCRA(ORI As Range, Optional ByVal MODU As String)
    nuv = ORI.Value

    ActiveSheet.Unprotect

    Range("grpT").EntireRow.Hidden = False
    If nuv > 16 Then        'mais de 16 parcelas de obra
        Range("grp01").EntireRow.Hidden = True
        Range("grp02").EntireRow.Hidden = True
        ActiveSheet.PageSetup.PrintArea = "AImp03"
        Calculate
    ElseIf nuv < 9 Then     'menos de 9 parcelas de obra
        Range("grp03").EntireRow.Hidden = True
        ActiveSheet.PageSetup.PrintArea = "AImp01"
        Calculate
    Else                    'entre 9 e 16 parcelas de obra
        Range("grp01").EntireRow.Hidden = True
        Range("grp04").EntireRow.Hidden = True
        ActiveSheet.PageSetup.PrintArea = "AImp02"
        Calculate
End If
    ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=False
End Sub
Sub Limpol()
    With Selection
        For Each celu In Selection
            If celu.MergeCells Then
                Range(celu.MergeArea.Address).Activate
                If (ActiveCell.Value <> "" And (ActiveCell.Interior.ColorIndex = 19 Or ActiveCell.Interior.ColorIndex = 20)) Then
'                If (ActiveCell.Interior.ColorIndex = 19 Or ActiveCell.Interior.ColorIndex = 20) Then
                    Range(ActiveCell.Address).Select
                    Selection.ClearContents
                End If
            End If
        Next celu
    End With
End Sub
Public Sub VeriAWP()
    Pwd = ""
    Typo = Cells(4, 1)
    If Typo = 1 Then Pwd = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    If ActiveSheet.ProtectContents = True Then
        ActiveSheet.Unprotect Password:=Crypt(Pwd)
    Else
        ActiveSheet.Protect Password:=Crypt(Pwd), _
        DrawingObjects:=False, _
        Contents:=True, _
        Scenarios:=False, _
        AllowFormattingCells:=True, _
        AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, _
        AllowSorting:=True, _
        AllowFiltering:=True
    End If
End Sub
Attribute VB_Name = "CjBotAlt"
Sub BotAlt()
Dim shp As Shape
'Nome do bot|fffd|o: (Q|C)(L)NrGrp,[0]NbTb.Nom;Indice^[EndRet]|Ponts

'os |fffd|tens entre parentesis s|fffd|o obrigat|fffd|rios; qdo digitados, n|fffd|o digitar os parentesis
'(Q|C): Q para bot|fffd|es quadrados (sem pontua|fffd||fffd|o), C para circulares (pontuados)
'(L): P-Pai (apaga os filhos); M-M|fffd|e (acende os filhos); F-Filho; O-|fffd|rf|fffd|o (independ.)
'(L): A-Alternativo(n|fffd|o obrigat|fffd|rio, pode ficar sem resposta no grupo)

'os |fffd|tens entre colchetes s|fffd|o opcionais; qdo e se digitados, n|fffd|o digitar os colchetes
'[0]: s|fffd| colocar o algarismo 0 se o grupo aceitar mais de uma resposta marcada
'[EndRet]: s|fffd| colocar o endere|fffd|o de retorno se for diferente do Nom (vide abaixo)

'os demais |fffd|tens s|fffd|o obrigat|fffd|rios:
'NrGrp: n|fffd|mero do grupo de bot|fffd|es (sequencial na planilha)
'NbTb: n|fffd|mero do bot|fffd|o atual, total de bot|fffd|es do grupo. ex. 11 pra 1 de 1, 35 pra 3 de 5
'Nom: nomenclatura do bot|fffd|o, endere|fffd|o onde se encontra o texto da resposta selecionada
'Indice: |fffd|ndice do bot|fffd|o, endere|fffd|o onde se encontra o texto da resposta selecionada
'[EndRet]|Ponts: EndRet para bot|fffd|es "Q", Pontua|fffd||fffd|o para bot|fffd|es "C"
'[EndRet]: endere|fffd|o de retorno, s|fffd| colocar se for diferente do da nomenclatura (Nom)
'Ponts: pontua|fffd||fffd|o, sempre com 3 d|fffd|gitos
'exemplos
'       QA12,034.T$23;C$23^C$24
'           QA12,034.L0C0;L0C-3^L1C2
'       CM17,12.Z$36;C$36^005
'           CM17,12.L1C0;L-1C-1^005
'       QO26,23.AA$47;C$47^
'           QO26,23.L12C1;L12C0^

    nb = ActiveSheet.Shapes(Application.Caller).Name    'nome do bot|fffd|o
    nw = ActiveSheet.Name                       'nome da planilha
'    ob = ActiveSheet.Shapes(Application.Caller).Fill.ForeColor.SchemeColor  'op|fffd||fffd|o do bot|fffd|o
    ob = ActiveSheet.Shapes(Application.Caller).Fill.Visible    'op|fffd||fffd|o do bot|fffd|o
'    MsgBox ob
    eb = ActiveSheet.Shapes(Application.Caller).TopLeftCell.AddressLocal    'endere|fffd|o do bot|fffd|o

    TrB = "B6:B" & Range("B1").Value

    vrg = InStr(nb, ",")                        '1a. divis|fffd|o
    pnt = InStr(nb, ".")                        '2a. divis|fffd|o
    smc = InStr(nb, ";")                        '3a. divis|fffd|o
    ccf = InStr(nb, "^")                        '4a. divis|fffd|o

    IdB = Left(nb, vrg - 1)                     'id completa do bot|fffd|o: (Q|C)(L)NrGrp
    IQC = Left(IdB, 1)                          'id Q ou C do bot|fffd|o
    IBL = Mid(IdB, 2, 1)                        'id @ do bot|fffd|o: P|M|F|O|A
    IBN = Mid(IdB, 3)                           'id # do bot|fffd|o: NrGrp

    TBI = Mid(nb, (vrg + 1), (pnt - vrg - 1))   'tipo do bot|fffd|o - inicial: NbTb
    BAt = Left(TBI, 1)                          'bot|fffd|o atual: Nb
    BTt = Right(TBI, 1)                         'bot|fffd|o total: Tb

    tbt = "one"
    If BAt = "0" Then
        BAt = Mid(TBI, 2, 1)
        tbt = "vary"
    End If 'tbt identifica de bot|fffd|o aceita mais de uma resposta correta: [0]

    DDd = Mid(nb, (pnt + 1), (smc - pnt - 1))   'desloc. de dados: Nom
    EDd = Dsl2End(DDd, eb)                      'endere|fffd|o de dados: Nom

    DIn = Mid(nb, (smc + 1), (ccf - smc - 1))   'desloc. de |fffd|ndice: Indice
    EIn = Dsl2End(DIn, eb)                      'endere|fffd|o de |fffd|ndice: Indice

    DRT = Mid(nb, (ccf + 1))                    'desloc. de retorno: [EndRet]

    If DRT = "" Or IsNumeric(DRT) Then          'endere|fffd|o de retorno: [EndRet]
        ERt = EDd
    Else
        ERt = Dsl2End(DRT, eb)
    End If 'se er for num|fffd|rico (tipo Ponts), a vari|fffd|vel n|fffd|o ser|fffd| necess|fffd|ria

    Select Case IBL
        Case "P"                                'Pai (oculta campos)
            For Each shp In ActiveSheet.Shapes  'seleciona shapes
                vg2 = InStr(shp.Name, ",")      'local da v|fffd|rgula
                If vg2 > 0 Then
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "F" & (IBN)) Then 'pertence ao grupo de shapes
                        OcBot (shp.Name)        'oculta bot|fffd|o
                    End If
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "M" & (IBN)) Then 'pertence ao grupo de shapes
                        ExBot (shp.Name)
                    End If
                End If
            Next shp

        Case "M"                                'M|fffd|e (exibe campos)
            For Each shp In ActiveSheet.Shapes  'seleciona shapes
                vg2 = InStr(shp.Name, ",")      'local da v|fffd|rgula
                If vg2 > 0 Then
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "F" & (IBN)) Then 'pertence ao grupo de shapes
                        ExBot (shp.Name)
                    End If
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "P" & (IBN)) Then 'pertence ao grupo de shapes
                        ExBot (shp.Name)
                    End If
                End If
            Next shp

        Case "G"                                'Gay (exibe/oculta campos)
            For Each shp In ActiveSheet.Shapes  'seleciona shapes
                vg2 = InStr(shp.Name, ",")      'local da v|fffd|rgula
                If vg2 > 0 Then
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "F" & (IBN)) Then 'pertence ao grupo de shapes
                        ExBot (shp.Name)
                    End If
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "P" & (IBN)) Then 'pertence ao grupo de shapes
                        ExBot (shp.Name)
                    End If
                End If
            Next shp

        Case "L"                                'L|fffd|sbica (exibe/oculta campos, inverso do Gay)
            For Each shp In ActiveSheet.Shapes  'seleciona shapes
                vg2 = InStr(shp.Name, ",")      'local da v|fffd|rgula
                If vg2 > 0 Then
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "F" & (IBN)) Then 'pertence ao grupo de shapes
                        ExBot (shp.Name)
                    End If
                    If Left(shp.Name, vg2 - 1) = _
                        (IQC & "P" & (IBN)) Then 'pertence ao grupo de shapes
                        ExBot (shp.Name)
                    End If
                End If
            Next shp

        Case Else                               'Orf|fffd|os e Filhos
            If tbt = "one" Then
                For Each shp In ActiveSheet.Shapes 'seleciona shapes
                    vg2 = InStr(shp.Name, ",")  'local da v|fffd|rgula
                    If vg2 > 0 Then
                        If Left(shp.Name, vg2 - 1) = _
                            (IQC & IBL & (IBN)) Then        'pertence ao grupo de shapes
                            ExBot (shp.Name)
                        End If
                    End If
                Next shp
            End If
    End Select

'    With ActiveSheet.Range("B6:B2000")
'        Set rFound = .Find(What:=Range(EIn).Value, After:=.Cells(1, 1), LookIn:=xlFormulas, LookAt:= _
'            xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
'            , SearchFormat:=False)
 '       If Not rFound Is Nothing Then
'            firstAddress = rFound.Address
'            Do
'                Range(rFound.AddressLocal).EntireRow.Hidden = True
'                Set rFound = .FindNext(rFound)
'            Loop While Not rFound Is Nothing And rFound.Address <> firstAddress
'        End If
'    End With

    EnA = "A" & Range(EIn).Row
    vra = Range(EnA).Value                      'valor resultado antigo
    If tbt = "one" Then                         'zera valor resultado de s|fffd| 1
        vra = 0                                 'resposta for certa
'        For Each shp In ActiveSheet.Shapes      'seleciona shapes
'            vg2 = InStr(shp.Name, ",")          'local da v|fffd|rgula
'            If vg2 > 0 Then
'                If (Mid(shp.Name, 2, 1) = "F" Or Mid(shp.Name, 2, 1) = "O" Or Mid(shp.Name, 2, 1) = "A") Then  'pertence ao grupo de shapes
'                    Range("A" & shp.TopLeftCell.Row).Value = 0
'                End If
'            End If
'        Next shp
    End If

    ActiveSheet.Shapes(nb).Select
    With Selection.ShapeRange.Fill.ForeColor        'alterna registro
        If ob = -1 Then                             'SE ESTIVER SELECIONADO
            With Selection.ShapeRange
                .Fill.Visible = msoFalse            'apaga shapes
                .Line.ForeColor.SchemeColor = 8     'mostra line
                .Line.Visible = msoTrue
            End With
            vrn = (2 ^ (BAt - 1)) * -1              'valor resultado novo
        Else
            With Selection.ShapeRange
                .Line.ForeColor.SchemeColor = 8     'mostra line
                .Fill.ForeColor.SchemeColor = 8     'preenche shapes
                .Fill.Visible = msoTrue
                .Fill.Solid
            End With
            vrn = 2 ^ (BAt - 1)                     'valor resultado novo
        End If
    End With

    vlg = vrn + vra                             'valor resultado a gravar
    If vlg > 0 Then
        Range(EnA).Value = vlg
    Else
        Range(EnA).Value = 0
    End If

    Range(ERt).Select
End Sub
Public Function OcBot(shp As String)                     'oculta bot|fffd|o
Attribute OcBot.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Shapes(shp).Select
    With Selection
        .ShapeRange.Fill.Visible = msoFalse             'apaga shapes
        .ShapeRange.Line.Visible = msoFalse             'apaga line

'        .ShapeRange.Fill.ForeColor.SchemeColor = 9      'apaga shapes
'        .ShapeRange.Line.ForeColor.SchemeColor = 9      'apaga line
    End With
End Function
Public Function ExBot(shp As String)                     'zera bot|fffd|o
Attribute ExBot.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Shapes(shp).Select
    With Selection
        .ShapeRange.Fill.Visible = msoFalse             'apaga shapes
'        .ShapeRange.Fill.ForeColor.SchemeColor = 9      'apaga shapes
        .ShapeRange.Line.ForeColor.SchemeColor = 8      'mostra line
        .ShapeRange.Line.Visible = msoTrue
    End With
End Function
Public Function PrBot(shp As String)                     'preenche bot|fffd|o
Attribute PrBot.VB_ProcData.VB_Invoke_Func = " \n14"
    ActiveSheet.Shapes(shp).Select
    With Selection
        .ShapeRange.Line.ForeColor.SchemeColor = 8      'mostra line
        .ShapeRange.Fill.ForeColor.SchemeColor = 8      'preenche shapes
        .ShapeRange.Fill.Visible = msoTrue
        .ShapeRange.Fill.Solid
'        .ShapeRange.Fill.ForeColor.SchemeColor = 8      'preenche shapes
'        .ShapeRange.Line.Visible = msoTrue
    End With
End Function
Public Function Dsl2End(Desloc, EndBas) 'Desloca elemento a partir de endere|fffd|o b|fffd|sico
Attribute Dsl2End.VB_ProcData.VB_Invoke_Func = " \n14"
    D1 = Mid(Desloc, 2, InStr(Desloc, "C") - 2)
    d2 = Mid(Desloc, InStr(Desloc, "C") + 1)
    Dsl2End = Range(EndBas).Offset(D1, d2).AddressLocal 'endere|fffd|o de |fffd|ndice: Indice
End Function
Attribute VB_Name = "EstaPasta_de_trabalho"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
'    ValOri = Sheets("RAE").Range("PerConc").Value
End Sub
Private Sub Workbook_SheetChange(ByVal Sh As Object, ByVal Target As Range)
        Calculate
    If Not Intersect(Target, Range("cronomes")) Is Nothing Then
        Calculate
    End If
    If Not Intersect(Target, Range("totacum")) Is Nothing Then
        Calculate
    End If
End Sub

Attribute VB_Name = "Funx"
Public Static Function Digiter(kr) 'transforma coluna de letra em n|fffd|mero
'USA Liner
Digiter = Range(Liner(kr)).Column
End Function
Public Static Function Liner(LIN) 'transf. n|fffd|m. da linha/letra da coluna em nome da linha/coluna
    Liner = LIN & ":" & LIN
End Function
Public Static Function Secter(Ini, Fin)
    Secter = Ini & ":" & Fin                     'transf. n|fffd|m. da linha em nome da linha
End Function
Public Static Function Letter(kr)
  If kr > 26 Then
    Letter = Chr(Int((kr - 1) / 26) + 64) & _
                   Chr(((kr - 1) Mod 26) + 65)
  Else
    Letter = Chr(kr + 64)
  End If
End Function
Public Function IsSheetPro(TargetSheet As Worksheet) As Boolean
    If TargetSheet.ProtectContents = True Then
        IsSheetPro = True
    Else
        IsSheetPro = False
    End If
End Function
Public Function Enco(ByVal V1 As Variant, ByVal OQ As String, Optional ByVal V2 As Variant)
    If IsMissing(V2) Then
        V2 = V1
    End If
    Ond = Secter(V1, V2)
    On Error Resume Next
    With ActiveSheet.Range(Ond)
        If IsNumeric(V1) Then                           'Onde |fffd| linha
            Set rFound = .Find(What:=OQ, After:=.Cells(1, 1), LookIn:=xlFormulas, LookAt:= _
                xlPart, SearchOrder:=xlByColumns, SearchDirection:=xlNext, MatchCase:=False _
                , SearchFormat:=False)
        Resp = Letter(rFound.Column)
        Else                                            'Onde |fffd| coluna
            Set rFound = .Find(What:=OQ, After:=.Cells(1, 1), LookIn:=xlFormulas, LookAt:= _
                xlPart, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False _
                , SearchFormat:=False)
        Resp = rFound.Row
        End If
    End With
    Enco = Resp
End Function
Public Function Separ(Interv As Variant)  'separa in|fffd|cio e fim do intervalo
'USA Letter
                                                    'Ender = Separ (Interv) 'Interv = |fffd|rea
                                                    'Inc = Ender(0)  'ponto inicial
                                                    'Fnl = Ender(1)  'ponto final
                                                    'KInc = Ender(2) 'coluna inicial
                                                    'LInc = Ender(3) 'linha inicial
                                                    'KFnl = Ender(4) 'coluna final
                                                    'LFnl = Ender(5) 'linha final
                                                    '     ou
                                                    'Ender = Separ (Interv) 'Interv = ponto
                                                    'Pto = Ender(0) 'ponto
                                                    'Klm = Ender(1) 'coluna
                                                    'Lna = Ender(2) 'linha
Dim MatrixWSA(6) As Variant
Dim MatrixWSP(3) As Variant
    On Error GoTo EhRange
    If IsError(CStr(Interv)) Then xis = 0  'Intervalo |fffd| String
        Interv = Range(Interv).Address(False, False)
        GoTo Continua
EhRange:  'Intervalo |fffd| Range ou Selection
        Set Interv = Interv
        Interv = Interv.Address(False, False)
Continua:
'    On Error GoTo EhCelula
'    If IsError(InStr(Interv, ":")) Then xis = 0  'Intervalo |fffd| |fffd|rea
    If InStr(Interv, ":") = 0 Then GoTo EhCelula  'Intervalo |fffd| |fffd|rea
        pp = InStr(Interv, ":")                  'divis|fffd|o
        e1 = Left(Interv, pp - 1)                '1o. elemento
        e2 = Mid(Interv, pp + 1)                 '2o. elemento
        MatrixWSA(0) = e1
        MatrixWSA(1) = e2
        MatrixWSA(2) = Letter(Range(e1).Column)
        MatrixWSA(3) = Range(e1).Row
        MatrixWSA(4) = Letter(Range(e2).Column)
        MatrixWSA(5) = Range(e2).Row
Separ = MatrixWSA()
        GoTo Mandabala
EhCelula:  'Intervalo |fffd| c|fffd|lula simples
        MatrixWSP(0) = Interv
        MatrixWSP(1) = Letter(Range(Interv).Column)
        MatrixWSP(2) = Range(Interv).Row
Separ = MatrixWSP()
Mandabala:
'    Ender = Separ(Selection)
'    Ender = Separ("d20:m34")
'    MsgBox (" Inc: " & Ender(0) & Chr(10) _
'            & " Fnl: " & Ender(1) & Chr(10) _
'            & "LInc: " & Ender(2) & Chr(10) _
'            & "KInc: " & Ender(3) & Chr(10) _
'            & "LFnl: " & Ender(4) & Chr(10) _
'            & "KFnl: " & Ender(5))
'Separ = MatrixWS()
End Function
Public Function Crypt(Optional ByVal Text As String = "xistos") As String
If Text = "xistos" Then GoTo Finis
If Text = "" Then GoTo Finis
Dim strTempChar As String
    For i = 1 To Len(Text)
        If Asc(Mid$(Text, i, 1)) < 128 Then
           strTempChar = Asc(Mid$(Text, i, 1)) + 128
        ElseIf Asc(Mid$(Text, i, 1)) > 128 Then
           strTempChar = Asc(Mid$(Text, i, 1)) - 128
        End If
        Mid$(Text, i, 1) = Chr(strTempChar)
    Next i
Finis:
If Text = "xistos" Then Text = ""
Crypt = Text
End Function
Attribute VB_Name = "Proposta"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub ComboBox1_Change()

End Sub

Private Sub Worksheet_Activate()
    If IsSheetPro(ActiveSheet) = True Then
        SIP = True
        ActiveSheet.Unprotect
    Else
        SIP = False
    End If

    Lim = Range("B3").Value - 1
    Range("B4").Select
        ActiveCell.FormulaLocal = "=CORRESP(M|fffd|XIMO(C6:C" & Lim & ");C6:C" & Lim & ";0)+7"
        Calculate
        Be4 = Lim
        On Error Resume Next
        Be4 = ActiveCell.Value
    Range("C4").Select
        ActiveCell.FormulaLocal = "=CORRESP(""D"";D6:D" & Lim & ";0)+7"
    Range("D4").Select
        ActiveCell.FormulaLocal = "=M|fffd|XIMO(C6:C" & Be4 & ")"
        Calculate
    Range("G42").Select

    If SIP = True Then
        ActiveSheet.Protect DrawingObjects:=False, Contents:=True, Scenarios:=False
        ActiveSheet.EnableSelection = xlUnlockedCells
    End If
    SIP = False
End Sub
Private Sub Worksheet_Change(ByVal Target As Range)
    
Dim tmpRng As Range
    If Target.Address(False, False) = Range("cronomes").Address(False, False) Then
    Calculate
        Call RegOcExCRA(Range("parpre")) 'aqui
        Range("cronomes").Select
    End If

    Set tmpRng = Intersect(Target, Range("cronomes"))
    If tmpRng Is Nothing Then
'    Faz nada
    Else
        If Range("cronomes").Value = "" Then
            Call RegOcExCRA(Range("parpre"))  'aqui
            Range("cronomes").Select
        End If
    End If

    Set tmpRng = Intersect(Target, Range("crono1"))
    If tmpRng Is Nothing Then Set tmpRng = Intersect(Target, Range("crono2"))
    If tmpRng Is Nothing Then Set tmpRng = Intersect(Target, Range("crono3"))

    If tmpRng Is Nothing Then
'    Faz nada
    Else
        If IsEmpty(Target) Then Exit Sub
        On Error GoTo Finis
        enderMod = Separ(Target.Address(False, False))
        enderAnt = Separ(Target.Offset(0, -1).MergeArea.Address(False, False))
        enderPos = Separ(Target.Offset(0, 4).MergeArea.Address(False, False))
        If Range(enderMod(0)).Value + Range(enderAnt(0)).Value > 100 Then
            MsgBox "O acumulado de cada item nunca pode somar mais que 100%!"
            Range(enderMod(0)).Value = 100 - Range(enderAnt(0)).Value
        End If
        If Range(enderMod(0)).Value + Range(enderAnt(0)).Value + Range(enderPos(0)).Value > 100 Then
            MsgBox "O acumulado de cada item nunca pode somar mais que 100%!"
            Range(enderPos(0)).Value = ""
        End If
    End If
Finis:
End Sub


INQUEST-PP=macro
