Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton5, 347, 7, MSForms, CommandButton"
Attribute VB_Control = "ixx3, 204, 8, MSForms, Image"
Attribute VB_Control = "ixx1, 202, 9, MSForms, Image"
Attribute VB_Control = "ikk14, 230, 10, MSForms, Image"
Attribute VB_Control = "ikk13, 229, 11, MSForms, Image"
Attribute VB_Control = "ikk12, 228, 12, MSForms, Image"
Attribute VB_Control = "ikk11, 227, 13, MSForms, Image"
Attribute VB_Control = "ikk10, 226, 14, MSForms, Image"
Attribute VB_Control = "ikk9, 225, 15, MSForms, Image"
Attribute VB_Control = "ikk8, 224, 16, MSForms, Image"
Attribute VB_Control = "ikk7, 223, 17, MSForms, Image"
Attribute VB_Control = "ikk6, 222, 18, MSForms, Image"
Attribute VB_Control = "ikk5, 221, 19, MSForms, Image"
Attribute VB_Control = "ikk4, 220, 20, MSForms, Image"
Attribute VB_Control = "ikk2, 218, 21, MSForms, Image"
Attribute VB_Control = "ixx14, 215, 22, MSForms, Image"
Attribute VB_Control = "ixx13, 214, 23, MSForms, Image"
Attribute VB_Control = "ixx12, 213, 24, MSForms, Image"
Attribute VB_Control = "ixx11, 212, 25, MSForms, Image"
Attribute VB_Control = "ixx10, 211, 26, MSForms, Image"
Attribute VB_Control = "ixx9, 210, 27, MSForms, Image"
Attribute VB_Control = "ixx8, 209, 28, MSForms, Image"
Attribute VB_Control = "ixx7, 208, 29, MSForms, Image"
Attribute VB_Control = "ixx6, 207, 30, MSForms, Image"
Attribute VB_Control = "ixx5, 206, 31, MSForms, Image"
Attribute VB_Control = "ixx4, 205, 32, MSForms, Image"
Attribute VB_Control = "ixx2, 203, 33, MSForms, Image"
Attribute VB_Control = "CommandButton3, 71, 34, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 70, 35, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 30, 36, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 29, 37, MSForms, CommandButton"
Attribute VB_Control = "ikk1, 217, 38, MSForms, Image"
Attribute VB_Control = "ikk3, 219, 39, MSForms, Image"

Private Sub CommandButton1_Click()
MsgBox "Uwaga! To jest wersja demonstracyjna, kt|fffd|ra nie zapisuje wszystkich danych do pliku JPK!", 16, "WERSJA DEMONSTRACYJNA"
UserForm4.Show
If JPKVAT = 1 Then
Walid
Else
Walid2
End If

NRPL:
Nplik = ThisWorkbook.Path & "\JPK_VAT_" & Range("P11") & "-" & Range("U11") & ".xml"
Wer = Application.GetSaveAsFilename(InitialFileName:=Nplik, FileFilter:="Pliki xml (*.xml), *.xml", Title:="Zapisz jako")
If Wer = False Then End
Nplik = Wer
Dim Npli As String
Npli = Mid(Nplik, Len(ThisWorkbook.Path) + 2)
If Mid(Nplik, Len(ThisWorkbook.Path) + 2) <> ZamZnaki(Npli) Then
MsgBox "Wprowadzona nazwa pliku: " & Mid(Nplik, Len(ThisWorkbook.Path) + 2) & vbCrLf & _
"zawiera|fffd|a niedozwolone znaki dla nazwy pliku JPK." & vbCrLf & _
"Nazwa pliku po korekcie: " & ZamZnaki(Npli), vbCritical, ""
End If
Nplik = ThisWorkbook.Path & "\" & ZamZnaki(Npli)
If Dir(Nplik) <> "" Then
Zap = MsgBox("Plik " & Dir(Nplik) & " ju|fffd| istnieje." & vbCrLf & _
"Czy chcesz go zmieni|fffd|?", 36, "Potwierdzenie zapisywania jako")
If Zap = 7 Then Kill Nplik: GoTo NRPL
End If

Zar = False
Zas = False
VATnext = False
Sheets("VAT-7").Select
Walida3

KorektaPodstawy xlOn
Doxml
Application.EnableEvents = True
Sheets("VAT-7").Select
Exit Sub

End Sub

Private Sub CommandButton2_Click()
Wydruk.Show
End Sub

Private Sub CommandButton3_Click()
ImportXMLa
ikk1.Visible = True
ixx1.Visible = True
Imfreshvat xlOn
End Sub

Private Sub CommandButton4_Click()
If ActiveWorkbook.Colors(15) = RGB(234, 234, 234) Then
    ActiveWorkbook.Colors(15) = RGB(255, 255, 255)
    ActiveWorkbook.Colors(16) = RGB(255, 255, 255)
    CommandButton4.Caption = "W|fffd||fffd|cz t|fffd|o"
Else
    ActiveWorkbook.Colors(15) = RGB(234, 234, 234)
    ActiveWorkbook.Colors(16) = RGB(191, 191, 191)
    CommandButton4.Caption = "Wy|fffd||fffd|cz t|fffd|o"
End If
End Sub

Private Sub CommandButton5_Click()
Usundane
ikk1.Visible = True
ixx1.Visible = True
Imfreshvat xlOn
End Sub


Private Sub Worksheet_Activate()
Imfreshvat xlOn
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
If ActiveWorkbook.Colors(19) = RGB(255, 255, 255) Then
ActiveWorkbook.Colors(19) = RGB(255, 255, 150)
End If
If [E18] = "" And Target.Row = 18 Then Fraza.Show
End Sub


Private Sub ikk1_Click()
ikk1.Visible = False
ixx1.Visible = True
ixx2.Visible = False
ikk2.Visible = True
[AG1] = 1
End Sub
Private Sub ikk2_Click()
ikk2.Visible = False
ixx2.Visible = True
ixx1.Visible = False
ikk1.Visible = True
[AG1] = 2
End Sub

Private Sub ikk3_Click()
ikk3.Visible = False
ixx3.Visible = True
ixx4.Visible = False
ikk4.Visible = True
[AG2] = 1
End Sub
Private Sub ikk4_Click()
ikk4.Visible = False
ixx4.Visible = True
ixx3.Visible = False
ikk3.Visible = True
[AG2] = 2
End Sub

Private Sub ixx5_Click()
ixx5.Visible = False
ikk5.Visible = True
[AG3] = 0
End Sub
Private Sub ikk5_Click()
ikk5.Visible = False
ixx5.Visible = True
ixx6.Visible = False
ikk6.Visible = True
ixx7.Visible = False
ikk7.Visible = True
ixx8.Visible = False
ikk8.Visible = True
[AG3] = 1
[AG4] = 0
[AG5] = 0
[AG6] = 0
End Sub
Private Sub ixx6_Click()
ixx6.Visible = False
ikk6.Visible = True
[AG4] = 0
End Sub
Private Sub ikk6_Click()
ikk6.Visible = False
ixx6.Visible = True
ixx5.Visible = False
ikk5.Visible = True
ixx7.Visible = False
ikk7.Visible = True
ixx8.Visible = False
ikk8.Visible = True
[AG4] = 1
[AG3] = 0
[AG5] = 0
[AG6] = 0
End Sub
Private Sub ixx7_Click()
ixx7.Visible = False
ikk7.Visible = True
[AG5] = 0
End Sub
Private Sub ikk7_Click()
ikk7.Visible = False
ixx7.Visible = True
ixx5.Visible = False
ikk5.Visible = True
ixx6.Visible = False
ikk6.Visible = True
ixx8.Visible = False
ikk8.Visible = True
[AG5] = 1
[AG4] = 0
[AG3] = 0
[AG6] = 0
End Sub
Private Sub ixx8_Click()
ixx8.Visible = False
ikk8.Visible = True
[AG6] = 0
End Sub
Private Sub ikk8_Click()
ikk8.Visible = False
ixx8.Visible = True
ixx5.Visible = False
ikk5.Visible = True
ixx7.Visible = False
ikk7.Visible = True
ixx6.Visible = False
ikk6.Visible = True
[AG6] = 1
[AG4] = 0
[AG5] = 0
[AG3] = 0
End Sub

Private Sub ixx9_Click()
ixx9.Visible = False
ikk9.Visible = True
[AG7] = 0
End Sub
Private Sub ikk9_Click()
ikk9.Visible = False
ixx9.Visible = True
[AG7] = 1
End Sub

Private Sub ixx10_Click()
ixx10.Visible = False
ikk10.Visible = True
[AG8] = 0
End Sub
Private Sub ikk10_Click()
ikk10.Visible = False
ixx10.Visible = True
[AG8] = 1
End Sub

Private Sub ixx11_Click()
ixx11.Visible = False
ikk11.Visible = True
[AG9] = 0
End Sub
Private Sub ikk11_Click()
ikk11.Visible = False
ixx11.Visible = True
[AG9] = 1
End Sub

Private Sub ixx12_Click()
ixx12.Visible = False
ikk12.Visible = True
[AG10] = 0
End Sub
Private Sub ikk12_Click()
ikk12.Visible = False
ixx12.Visible = True
[AG10] = 1
End Sub

Private Sub ixx13_Click()
ixx13.Visible = False
ikk13.Visible = True
[AG11] = 0
End Sub
Private Sub ikk13_Click()
ikk13.Visible = False
ixx13.Visible = True
[AG11] = 1
End Sub

Private Sub ixx14_Click()
ixx14.Visible = False
ikk14.Visible = True
[AG12] = 0
End Sub
Private Sub ikk14_Click()
ikk14.Visible = False
ixx14.Visible = True
[AG12] = 1
End Sub


Sub Imfreshvat(st)
'If ikk1.Visible = True And ixx1.Visible = True Then
Application.ScreenUpdating = False

If [AG1] = 1 Then
ikk1.Visible = False
ixx1.Visible = True
ixx2.Visible = False
ikk2.Visible = True
End If

If [AG1] = 2 Then
ikk2.Visible = False
ixx2.Visible = True
ixx1.Visible = False
ikk1.Visible = True
End If

If [AG2] = 0 Then
ikk3.Visible = True
ixx3.Visible = False
ixx4.Visible = False
ikk4.Visible = True
End If

If [AG2] = 1 Then
ikk3.Visible = False
ixx3.Visible = True
ixx4.Visible = False
ikk4.Visible = True
End If

If [AG2] = 2 Then
ikk4.Visible = False
ixx4.Visible = True
ixx3.Visible = False
ikk3.Visible = True
End If

If [AG3] = 0 Then
ikk5.Visible = True
ixx5.Visible = False
End If

If [AG3] = 1 Then
ikk5.Visible = False
ixx5.Visible = True
ixx6.Visible = False
ikk6.Visible = True
ixx7.Visible = False
ikk7.Visible = True
ixx8.Visible = False
ikk8.Visible = True
End If

If [AG4] = 0 Then
ikk6.Visible = True
ixx6.Visible = False
End If

If [AG4] = 1 Then
ikk6.Visible = False
ixx6.Visible = True
ixx5.Visible = False
ikk5.Visible = True
ixx7.Visible = False
ikk7.Visible = True
ixx8.Visible = False
ikk8.Visible = True
End If

If [AG5] = 0 Then
ikk7.Visible = True
ixx7.Visible = False
End If

If [AG5] = 1 Then
ikk7.Visible = False
ixx7.Visible = True
ixx5.Visible = False
ikk5.Visible = True
ixx6.Visible = False
ikk6.Visible = True
ixx8.Visible = False
ikk8.Visible = True
End If
 
If [AG6] = 0 Then
ikk8.Visible = True
ixx8.Visible = False
End If

If [AG6] = 1 Then
ikk8.Visible = False
ixx8.Visible = True
ixx5.Visible = False
ikk5.Visible = True
ixx7.Visible = False
ikk7.Visible = True
ixx6.Visible = False
ikk6.Visible = True
End If

If [AG7] = 0 Then
ikk9.Visible = True
ixx9.Visible = False
End If

If [AG7] = 1 Then
ikk9.Visible = False
ixx9.Visible = True
End If

If [AG8] = 0 Then
ikk10.Visible = True
ixx10.Visible = False
End If

If [AG8] = 1 Then
ikk10.Visible = False
ixx10.Visible = True
End If

If [AG9] = 0 Then
ikk11.Visible = True
ixx11.Visible = False
End If

If [AG9] = 1 Then
ikk11.Visible = False
ixx11.Visible = True
End If

If [AG10] = 0 Then
ikk12.Visible = True
ixx12.Visible = False
End If

If [AG10] = 1 Then
ikk12.Visible = False
ixx12.Visible = True
End If

If [AG11] = 0 Then
ikk13.Visible = True
ixx13.Visible = False
End If

If [AG11] = 1 Then
ikk13.Visible = False
ixx13.Visible = True
End If

If [AG12] = 0 Then
ikk14.Visible = True
ixx14.Visible = False
End If

If [AG12] = 1 Then
ikk14.Visible = False
ixx14.Visible = True
End If

'End If
End Sub





Attribute VB_Name = "Arkusz3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton6, 6, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 5, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 2, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 6, MSForms, CommandButton"
Attribute VB_Control = "CommandButton8, 10, 7, MSForms, CommandButton"
Private Sub CommandButton1_Click()
sh = 62
sk = 35
sd = 6
Zar = False
Zas = False
VATnext = False
FormatS
Walidacja
MsgBox "Sprawdzono dane z arkusza 'Sprzeda|fffd|' ", 64
Application.EnableEvents = True
End Sub

Private Sub CommandButton2_Click()
sh = 62
Zar = True
Zas = True
VATnext = True
ImportSCsv
Application.EnableEvents = True
End Sub

Private Sub CommandButton3_Click()
Application.ScreenUpdating = False
ActiveSheet.Unprotect
Range(Cells(4, 1), Cells(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row, 100)).Select
Selection.ClearContents
    With Selection.Font
        .Name = "Arial"
        .FontStyle = "Normalny"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Interior
        .Pattern = xlNone
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

Tabela (ActiveSheet.Name)
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
Cells(4, 1).Select
End Sub

Private Sub CommandButton4_Click()
Dim Frt As Boolean
Application.ScreenUpdating = False
Frt = False
On Error GoTo BRAK
If ActiveCell.Row < 4 Then MsgBox "Nie mo|fffd|na dodawa|fffd| wierszy w nag|fffd||fffd|wku tabeli.", 16, "": End
If ActiveCell.Row = 4 Then Range("A5").Select: Frt = True
ActiveSheet.Unprotect
Selection.EntireRow.Insert
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
If Frt = True Then
    Range("4:4").Copy
    Range("A5").PasteSpecial xlPasteAll
    Application.CutCopyMode = False
    Range("4:4").ClearContents
    Range("A4").Select
End If
Exit Sub
BRAK:
MsgBox "Nie mo|fffd|na doda|fffd| wiersza gdy|fffd| ostatni wiersz jest wype|fffd|niony.", 16, ""
End Sub

Private Sub CommandButton5_Click()
Application.ScreenUpdating = False
If ActiveCell.Row < 4 Then MsgBox "Nie mo|fffd|na usun|fffd||fffd| nag|fffd||fffd|wka tabeli.", 16, "": End
ActiveSheet.Unprotect
If Selection.Rows.Count < Rows.Count - 3 Then
    Selection.EntireRow.Delete
Else
    Range(Cells(5, 1), Cells(Rows.Count, 1)).EntireRow.Delete
    Cells(4, 1).EntireRow.Delete
End If

ActiveCell.Select
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
End Sub

Private Sub CommandButton6_Click()
VATnext = False
VATsign = -2
c = ActiveCell.Row
WerNIP (c)
End Sub

Private Sub CommandButton7_Click()
ActiveSheet.Unprotect
If Range("H4").ColumnWidth = 8 Then
Range("H4:AG4").ColumnWidth = 1
Else
Range("H4:AG4").ColumnWidth = 8
End If
ActiveSheet.Protect
End Sub

Private Sub CommandButton8_Click()
Kolumny.Show
End Sub
Attribute VB_Name = "Arkusz6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton7, 7, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton6, 6, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 5, 2, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 4, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 3, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 2, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 1, 6, MSForms, CommandButton"
Private Sub CommandButton1_Click()
sh = 18
sk = 11
sd = 6
Zar = False
Zas = False
VATnext = False
FormatZ
Walidacja
MsgBox "Sprawdzono dane z arkusza 'Zakupy'", 64
Application.EnableEvents = True
End Sub

Private Sub CommandButton2_Click()
sh = 15
Zar = True
Zas = True
VATnext = True
ImportZCsv
Application.EnableEvents = True
End Sub

Private Sub CommandButton3_Click()
Application.ScreenUpdating = False
ActiveSheet.Unprotect
Range(Cells(4, 1), Cells(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row, 100)).Select
Selection.ClearContents
    With Selection.Font
        .Name = "Arial"
        .FontStyle = "Normalny"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Interior
        .Pattern = xlNone
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

Tabela (ActiveSheet.Name)
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
Cells(4, 1).Select
End Sub

Private Sub CommandButton4_Click()
Dim Frt As Boolean
Application.ScreenUpdating = False
Frt = False
On Error GoTo BRAK
If ActiveCell.Row < 4 Then MsgBox "Nie mo|fffd|na dodawa|fffd| wierszy w nag|fffd||fffd|wku tabeli.", 16, "": End
If ActiveCell.Row = 4 Then Range("A5").Select: Frt = True
ActiveSheet.Unprotect
Selection.EntireRow.Insert
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
If Frt = True Then
    Range("4:4").Copy
    Range("A5").PasteSpecial xlPasteAll
    Application.CutCopyMode = False
    Range("4:4").ClearContents
    Range("A4").Select
End If
Exit Sub
BRAK:
MsgBox "Nie mo|fffd|na doda|fffd| wiersza gdy|fffd| ostatni wiersz jest wype|fffd|niony.", 16, ""
End Sub

Private Sub CommandButton5_Click()
Application.ScreenUpdating = False
If ActiveCell.Row < 4 Then MsgBox "Nie mo|fffd|na usun|fffd||fffd| nag|fffd||fffd|wka tabeli.", 16, "": End
ActiveSheet.Unprotect
If Selection.Rows.Count < Rows.Count - 3 Then
    Selection.EntireRow.Delete
Else
    Range(Cells(5, 1), Cells(Rows.Count, 1)).EntireRow.Delete
    Cells(4, 1).EntireRow.Delete
End If

ActiveCell.Select
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
End Sub

Private Sub CommandButton6_Click()
VATnext = False
VATsign = -2
c = ActiveCell.Row
WerNIP (c)
End Sub



Private Sub CommandButton7_Click()
Zakupy.Show
End Sub
Attribute VB_Name = "Bazy"
Option Private Module
Public Klaw, a, b, c, d, Baza, Baza2, Zeszyt
Public Wiersz, Kol, UkryteKOL
Dim Toop, Widt

Sub goEnter()
Dim NIP, Nazwa, Adres
Dok
Wiersz = ActiveCell.Rows(ActiveCell.Rows.Count).Row
Kol = ActiveCell.Columns(ActiveCell.Columns.Count).Column
Zeszyt = ActiveSheet.Name
If Zeszyt = "Zakupy" Or Zeszyt = "Sprzeda|fffd|" Then
If Kol = 3 And Cells(Wiersz, Kol) = "" Then
Baza2 = True
On Error GoTo Otw|fffd|rzBaza

Powr|fffd|tPoOtwarciu:
Toop = -19
Widt = 453
Application.ScreenUpdating = False
If Val(Application.Version) > 14 Then
Toop = 0
Widt = 443
Application.DisplayStatusBar = False
Application.DisplayFormulaBar = False
End If

Windows("_Info.xls").Activate
Sheets("A").Activate
Baza = "A"
UstawInfo xlOn
Windows("_Firmy.xls").Activate
Sheets("A").Activate
UstawBaza xlOn
Application.ScreenUpdating = True

Szukaj.Show
If a = 27 Then Exit Sub
If a = 36 Then Exit Sub
End If
End If
    
If ActiveSheet.Name = "A" Then
If Kol > 1 Then Cells(Wiersz, 1).Select
Kol = ActiveCell.Columns(ActiveCell.Columns.Count).Column
If Kol = 1 Then
NIP = Cells(Wiersz, 1)
Nazwa = Cells(Wiersz, 2)
Adres = Cells(Wiersz, 3)
If IsNumeric(Nazwa) And Nazwa <> Empty Then MsgBox "Nazwa firmy nie mo|fffd|e sk|fffd|ada|fffd| si|fffd| z samej cyfry, liczby. Dostaw liter|fffd|", vbCritical, "B|fffd||fffd|d": End

If Wiersz = 1 Then
If NIP = "" And Nazwa = "" And Adres = "" Then goEsc: End
Selection.EntireRow.Delete
Selection.EntireRow.Insert
Klaw = Nazwa
SzukajZnaku xlOn
Selection.EntireRow.Insert
Wiersz = ActiveCell.Rows(ActiveCell.Rows.Count).Row
Cells(Wiersz, 1) = NIP
Cells(Wiersz, 2) = Nazwa
Cells(Wiersz, 3) = Adres
End If

If Wiersz > 1 Then
ActiveWindow.ActivateNext
ActiveWindow.ActivateNext
Wiersz = ActiveCell.Rows(ActiveCell.Rows.Count).Row
If ActiveSheet.Name = "Zakupy" Then
Cells(Wiersz, 3) = NIP
Cells(Wiersz, 4) = Nazwa
Cells(Wiersz, 5).Select
ActiveWindow.WindowState = xlMaximized
End If
If ActiveSheet.Name = "Sprzeda|fffd|" Then
Cells(Wiersz, 3) = NIP
Cells(Wiersz, 4) = Nazwa
Cells(Wiersz, 5).Select
ActiveWindow.WindowState = xlMaximized

End If
End If
End If
End If
Application.DisplayStatusBar = True
Application.DisplayFormulaBar = True

Exit Sub

Otw|fffd|rzBaza:
Toop = -19
If Val(Application.Version) > 14 Then
Toop = 0
Application.DisplayStatusBar = False
Application.DisplayFormulaBar = False
End If

On Error Resume Next
If Dir(ThisWorkbook.Path & "\_Firmy.xls") = "_Firmy.xls" _
And Dir(ThisWorkbook.Path & "\_Info.xls") = "_Info.xls" Then
If Val(Application.Version) < 15 Then
    ActiveWindow.WindowState = xlNormal
    With ActiveWindow
    .Top = -19
    .Left = 0
    .Height = Application.UsableHeight + 19
    .Width = Application.UsableWidth
    End With
End If
Application.ScreenUpdating = False
Workbooks.Open Filename:=ThisWorkbook.Path & "\_Firmy.xls"
Sheets("A").Select
UstawBaza xlOn
Workbooks.Open Filename:=ThisWorkbook.Path & "\_Info.xls"
Sheets("A").Select
UstawInfo xlOn
Windows("_Firmy.xls").Activate

ActiveWindow.ActivateNext
ActiveWindow.ActivateNext
GoTo Powr|fffd|tPoOtwarciu
End If
End Sub

Sub goEsc()
Application.CutCopyMode = False
If ActiveSheet.Name = "A" Then
Wiersz = ActiveCell.Rows(ActiveCell.Rows.Count).Row
Cells(Wiersz, 1).Select
ActiveWindow.ActivateNext
ActiveWindow.ActivateNext
End If
ActiveWindow.WindowState = xlMaximized
Application.DisplayStatusBar = True
Application.DisplayFormulaBar = True

End Sub

Sub SzukajZnaku(stan)
On Error Resume Next
If Len(Klaw) = 1 Then
If Baza = "A" Then Application.GoTo Reference:="_" & UCase(Klaw)
ActiveCell.Offset(0, -1).Select
If Klaw = "0" Or Klaw = "1" Or Klaw = "2" Or _
Klaw = "3" Or Klaw = "4" Or Klaw = "5" Or _
Klaw = "6" Or Klaw = "7" Or Klaw = "8" Or _
Klaw = "9" Then
goEnter
Unload Szukaj
Exit Sub
End If
End If
Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
False, SearchFormat:=False)
b = rngCell.Row
Do
If StrComp(Mid(ActiveCell.Offset(0, 1).Value, 1, Len(Klaw)), Klaw, 1) = 0 Then Exit Do
If StrComp(Mid(ActiveCell.Offset(0, 1).Value, 1, Len(Klaw)), Klaw, 1) = -1 Then
ActiveCell.Offset(1, 0).Select
If ActiveCell.Row > b Then Exit Do
If StrComp(Mid(ActiveCell.Offset(0, 1).Value, 1, Len(Klaw)), Klaw, 1) = 1 Then Exit Do
Else
ActiveCell.Offset(-1, 0).Select
If StrComp(Mid(ActiveCell.Offset(0, 1).Value, 1, Len(Klaw)), Klaw, 1) = -1 Then Exit Do
End If
Loop
End Sub

Sub UstawBaza(st)
ActiveWindow.WindowState = xlNormal
With ActiveWindow
.Width = 485
.Height = 165
.Zoom = 89
.Top = Toop
.Left = 0
.DisplayHeadings = False
.DisplayOutline = False
.DisplayHorizontalScrollBar = False
.DisplayVerticalScrollBar = False
.DisplayWorkbookTabs = False
End With
End Sub

Sub UstawInfo(st)
ActiveWindow.WindowState = xlNormal
With ActiveWindow
.DisplayHeadings = False
.DisplayOutline = False
.DisplayHorizontalScrollBar = False
.DisplayVerticalScrollBar = False
.DisplayWorkbookTabs = False
.Width = Widt
.Height = 165
.Zoom = 89
.Top = Toop
.Left = 480.25
End With
End Sub

Sub Ponip()
NIP.Show
End
End Sub

Sub aa()
'Workbooks("_Firmy.xls") = xlMinimized
Windows("_Firmy.xls").WindowState = xlMinimized
End Sub
Attribute VB_Name = "Fraza"
Attribute VB_Base = "0{AFA1664E-5945-4A70-A6CF-10C830EC8E95}{D48F3864-E8CF-4F43-94CB-86B0220980D5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit
Dim Fraz() As Variant

Private Sub Anuluj_Click()
Unload Me
End Sub

Private Sub ComboBox1_Change()
With Me
.ComboBox1.DropDown
.ComboBox1.List = Filter(Fraz, .ComboBox1.Value, True, vbTextCompare)
End With
End Sub

Private Sub ComboBox1_Click()
ActiveCell = Me.ComboBox1.List
Unload Me
End Sub

Private Sub UserForm_Initialize()
With ActiveSheet
Fraz = Application.Transpose(.Range("AH1:AH" & .Cells(.Rows.Count, "AH").End(xlUp).Row).Value)
Me.ComboBox1.List = Fraz
End With
End Sub


Attribute VB_Name = "Funkcje"
Option Private Module
#If Win64 Then
Declare PtrSafe Function apiShowWindow Lib "user32" Alias "ShowWindow" _
            (ByVal hwnd As Long, ByVal nCmdSHow As Long) As Long
#Else
Declare Function apiShowWindow Lib "user32" Alias "ShowWindow" ( _
            ByVal hwnd As Long, ByVal nCmdSHow As Long) As Long
#End If
Const SW_SHOWMAXIMIZED = 3

Sub ShowWindow()
Dim IE As Object
    Set IE = CreateObject("InternetExplorer.Application")
    IE.Navigate Nplik
    apiShowWindow IE.hwnd, 3
End Sub

Public Function DATTO(ByVal Dat As String)
Dim Rok, Mc, Dz
  Rok = Right(Dat, 4)
  If Len(Dat) < 8 Then
  Mc = Mid(Dat, 2, 2)
  Dz = "0" & Left(Dat, 1)
  Else
  Mc = Mid(Dat, 3, 2)
  Dz = Left(Dat, 2)
  End If
DATTO = DateSerial(Rok, Mc, Dz)
End Function

Function UT(ByVal sStr As String)
If IsNumeric(sStr) Then sStr = Replace(Format(sStr, "0.00"), ",", ".")
If sStr = "" Then sStr = "0.00"
UT = sStr
End Function

Function UL(ByVal Nmr As Double)
If Nmr = 0 Then
UL = "0"
Else
UL = Round(Nmr, 0)
End If
End Function

Public Function ZN(str)
Dim Za As String, Zb As String
Za = Replace(str, "&", "&amp;")
Zb = Replace(Za, "<", "&lt;")
ZN = Replace(Zb, ">", "&gt;")
End Function

Function DATAA(ByVal Dat As String)
Dim Rok, Mc, Dz
  Rok = Right(Dat, 4)
  If Len(Dat) < 8 Then
  Mc = Mid(Dat, 2, 2)
  Dz = "0" & Left(Dat, 1)
  Else
  Mc = Mid(Dat, 3, 2)
  Dz = Left(Dat, 2)
  End If
DATAA = Rok & "-" & Mc & "-" & Dz
End Function


Public Function Base64_Encode(text As String) As String
    Dim arrData() As Byte
    arrData = StrConv(text, vbFromUnicode)
     
    Dim objXML As MSXML2.DOMDocument
    Dim objNode As MSXML2.IXMLDOMElement
     
    Set objXML = New MSXML2.DOMDocument
    Set objNode = objXML.createElement("b64")
     
    objNode.DataType = "bin.base64"
    objNode.nodeTypedValue = arrData
    Base64_Encode = objNode.text
     
    Set objNode = Nothing
    Set objXML = Nothing
End Function

Function XSDValid3(strXML As String) As Boolean
    Dim xmlDoc As Object
    Dim objSchema As Object
    Dim objErr As Object
    Dim Que As Integer
    Dim Wzor
    On Error GoTo handleCancel
    Application.EnableCancelKey = xlErrorHandler
    Application.StatusBar = "Pobiera schemat XSD z MF"
    
    Set objSchema = CreateObject("MSXML2.XMLSchemaCache.6.0")
    objSchema.Add "http://jpk.mf.gov.pl/wzor/2019/10/16/10167/", _
    "http://www.pit.waw.pl/xsd/Schemat_JPK_V7M(1)_v1-0.xsd"
   
handleCancel:
    If Abs(Err) > 18 Then
    MsgBox "Wyst|fffd|pi|fffd| problem z pobraniem schematu XSD." & vbCrLf & _
            "" & vbCrLf & vbCrLf & _
            "Mo|fffd|liwy brak dost|fffd|pu do strony Ministerstwa Finans|fffd|w", 64, ""
    Application.StatusBar = False
    End
    End If
    If Err = 18 Then
    MsgBox "Sprawdzanie zgodno|fffd|ci ze schematem XSD zosta|fffd|o przerwane.", 64, ""
    Application.StatusBar = False
    End
    End If
    
    Set xmlDoc = CreateObject("Msxml2.DOMDocument.6.0")
    With xmlDoc
        .setProperty "ProhibitDTD", False
        .async = False
        .validateOnParse = True
        .resolveExternals = False
        .Load strXML
        Set .Schemas = objSchema
    End With
               
    Set objErr = xmlDoc.Validate()
    If objErr.ErrorCode <> 0 Then
    Wzor = objErr.reason
    Que = MsgBox("B|fffd||fffd|d: " & Wzor & Chr(13) & Chr(13) & "Czy usun|fffd||fffd| b|fffd||fffd|dny plik:" & vbCrLf & Nplik, 36, "B|fffd||fffd|d")
    If Que = 6 Then Kill Nplik
    Application.StatusBar = False
    End
    Else
    MsgBox "Plik XML jest zgodny ze schematem JPK_V7M(1)_v1-0_14.xsd", 64, ""
    Application.StatusBar = False
    End If

End Function

Public Function Datsep(ByVal Dat As String)
For a = 1 To Len(Dat)
If Not IsNumeric(Mid(Dat, a, 1)) Then
Datsep = Mid(Dat, a, 1)
Exit For
End If
Next
End Function

Function CzyNIP(sNIP As String) As Boolean
Dim iWagi As Variant, i As Integer, iSumaKon As Integer
Application.Volatile
If Not IsNumeric(sNIP) Then CzyNIP = False: Exit Function
iWagi = Array(6, 5, 7, 2, 3, 4, 5, 6, 7)
If Len(sNIP) = 10 Then
For i = LBound(iWagi) To UBound(iWagi)
    iSumaKon = iSumaKon + (iWagi(i) * CInt(Mid(sNIP, i + 1, 1)))
Next i
iSumaKon = iSumaKon Mod 11
If iSumaKon = Right(sNIP, 1) Then
CzyNIP = True
Else
CzyNIP = False
End If
End If
If sNIP = Empty Then CzyNIP = True
End Function

Public Function CzyData(myDat)
If Not IsNumeric(myDat) Then CzyData = False
If IsDate(DATAA(myDat)) = True Then
    CzyData = True
Else
    CzyData = False
End If
End Function

Function ZamZnaki(wString As String) As String
Dim iCo As Integer
Dim tblZabr As Variant
Dim tblZam As Variant
tblZabr = Array("#", "%", "&", "*", ":", "< ", ">", "?", "/", "\", "{", "|", "}", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "(", ")", " ")
tblZam = Array("hash", "proc", "and", "", "", "", "", "", "", "", "", "", "", "a", "c", "e", "n", "l", "o", "s", "z", "z", "A", "C", "E", "N", "L", "O", "S", "Z", "Z", "(", ")", "")
For iCo = LBound(tblZabr) To UBound(tblZabr)
wString = Replace(wString, tblZabr(iCo), tblZam(iCo))
Next iCo
ZamZnaki = wString
End Function

Sub vbLeft()
If Not IsEmpty([A!a1]) And [A!a1] < Date Then MsgBox [A!a2], 16, "": [A!a1] = "O!o1": ThisWorkbook.Save: End
If Not IsEmpty([A!a1]) And Not IsDate([A!a1]) Then MsgBox [A!a2], 16, "": End
End Sub

Public Function DATAO(ByVal Dat As String)
Dim Rok, Mc, Dz
SEP = Datsep(Dat)
Rok = Right(Dat, Len(CStr(Dat)) - InStrRev(Dat, SEP))
Mc = Mid(Dat, InStr(1, Dat, SEP) + 1, InStrRev(Dat, SEP) - InStr(1, Dat, SEP) - 1)
Dz = Left(Dat, InStr(1, Dat, SEP) - 1)
If Len(CStr(Rok)) = 4 Then
DATAO = Rok & "-" & Mc & "-" & Dz
Else
DATAO = Dz & "-" & Mc & "-" & Rok
End If
End Function

Public Function DATTAO(ByVal Dat As String)
Dim Rok, Mc, Dz
SEP = Datsep(Dat)
Rok = Left(Dat, Len(CStr(Dat)) - InStr(Dat, SEP) - 1)
Mc = Mid(Dat, InStr(1, Dat, SEP) + 1, InStrRev(Dat, SEP) - InStr(1, Dat, SEP) - 1)
Dz = Right(Dat, 2)
DATTAO = Dz & "-" & Mc & "-" & Rok
End Function

Public Function DATTA(ByVal Dat As String)
Dim Rok, Mc, Dz
  Rok = Right(Dat, 4)
  If Len(Dat) < 8 Then
  Mc = Mid(Dat, 2, 2)
  Dz = "0" & Left(Dat, 1)
  Else
  Mc = Mid(Dat, 3, 2)
  Dz = Left(Dat, 2)
  End If
DATTA = Dz & "-" & Mc & "-" & Rok
End Function

Function Wrt(ByVal xCh As Object) As Object
Dim wez As Object
For Each wez In xCh.ChildNodes
If wez.NodeType = 3 Then
    Set Wrt = wez
    Exit For
End If
Next
End Function

Attribute VB_Name = "Kolumny"
Attribute VB_Base = "0{4509234F-B157-4848-9B66-6E80047043BF}{9A5860ED-C6CC-4C49-A0EE-C1E3E62E4905}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
CheckBox1.Value = False
CheckBox2.Value = False
CheckBox3.Value = False
CheckBox4.Value = False
CheckBox5.Value = False
CheckBox6.Value = False
CheckBox7.Value = False
CheckBox8.Value = False
CheckBox9.Value = False
CheckBox10.Value = False
CheckBox11.Value = False
CheckBox12.Value = False
CheckBox13.Value = False
CheckBox14.Value = False
CheckBox15.Value = False
CheckBox16.Value = False
CheckBox17.Value = False
CheckBox18.Value = False
End Sub

Private Sub CommandButton3_Click()
Box1.Value = False
Box2.Value = False
Box3.Value = False
Box4.Value = False
Box5.Value = False
Box6.Value = False
Box7.Value = False
Box8.Value = False
Box9.Value = False
Box10.Value = False
Box11.Value = False
Box12.Value = False
Box13.Value = False
Box14.Value = False
Box15.Value = False
Box16.Value = False
Box17.Value = False
Box18.Value = False
Box19.Value = False
Box20.Value = False
Box21.Value = False
Box22.Value = False
Box23.Value = False
Box24.Value = False
Box25.Value = False
Box26.Value = False
Box27.Value = False
Box28.Value = False
Box29.Value = False
End Sub

Private Sub CommandButton4_Click()
Application.ScreenUpdating = False
ActiveSheet.Unprotect

If Box1.Value = True Then
Columns(2).EntireColumn.Hidden = True
Else
Columns(2).EntireColumn.Hidden = False
End If
If Box2.Value = True Then
Columns(7).EntireColumn.Hidden = True
Else
Columns(7).EntireColumn.Hidden = False
End If
If Box3.Value = True Then
Columns(8).EntireColumn.Hidden = True
Else
Columns(8).EntireColumn.Hidden = False
End If
If Box4.Value = True Then
Columns(9).EntireColumn.Hidden = True
Else
Columns(9).EntireColumn.Hidden = False
End If
If Box5.Value = True Then
Columns(10).EntireColumn.Hidden = True
Else
Columns(10).EntireColumn.Hidden = False
End If
If Box6.Value = True Then
Columns(11).EntireColumn.Hidden = True
Else
Columns(11).EntireColumn.Hidden = False
End If
If Box7.Value = True Then
Columns(12).EntireColumn.Hidden = True
Else
Columns(12).EntireColumn.Hidden = False
End If
If Box8.Value = True Then
Columns(13).EntireColumn.Hidden = True
Else
Columns(13).EntireColumn.Hidden = False
End If
If Box9.Value = True Then
Columns(14).EntireColumn.Hidden = True
Else
Columns(14).EntireColumn.Hidden = False
End If
If Box10.Value = True Then
Columns(15).EntireColumn.Hidden = True
Else
Columns(15).EntireColumn.Hidden = False
End If
If Box11.Value = True Then
Columns(16).EntireColumn.Hidden = True
Else
Columns(16).EntireColumn.Hidden = False
End If
If Box12.Value = True Then
Columns(17).EntireColumn.Hidden = True
Else
Columns(17).EntireColumn.Hidden = False
End If
If Box13.Value = True Then
Columns(18).EntireColumn.Hidden = True
Else
Columns(18).EntireColumn.Hidden = False
End If
If Box14.Value = True Then
Columns(19).EntireColumn.Hidden = True
Else
Columns(19).EntireColumn.Hidden = False
End If
If Box15.Value = True Then
Columns(20).EntireColumn.Hidden = True
Else
Columns(20).EntireColumn.Hidden = False
End If
If Box16.Value = True Then
Columns(21).EntireColumn.Hidden = True
Else
Columns(21).EntireColumn.Hidden = False
End If
If Box17.Value = True Then
Columns(22).EntireColumn.Hidden = True
Else
Columns(22).EntireColumn.Hidden = False
End If
If Box18.Value = True Then
Columns(23).EntireColumn.Hidden = True
Else
Columns(23).EntireColumn.Hidden = False
End If
If Box19.Value = True Then
Columns(24).EntireColumn.Hidden = True
Else
Columns(24).EntireColumn.Hidden = False
End If
If Box20.Value = True Then
Columns(25).EntireColumn.Hidden = True
Else
Columns(25).EntireColumn.Hidden = False
End If
If Box21.Value = True Then
Columns(26).EntireColumn.Hidden = True
Else
Columns(26).EntireColumn.Hidden = False
End If
If Box22.Value = True Then
Columns(27).EntireColumn.Hidden = True
Else
Columns(27).EntireColumn.Hidden = False
End If
If Box23.Value = True Then
Columns(28).EntireColumn.Hidden = True
Else
Columns(28).EntireColumn.Hidden = False
End If
If Box24.Value = True Then
Columns(29).EntireColumn.Hidden = True
Else
Columns(29).EntireColumn.Hidden = False
End If
If Box25.Value = True Then
Columns(30).EntireColumn.Hidden = True
Else
Columns(30).EntireColumn.Hidden = False
End If
If Box26.Value = True Then
Columns(31).EntireColumn.Hidden = True
Else
Columns(31).EntireColumn.Hidden = False
End If
If Box27.Value = True Then
Columns(32).EntireColumn.Hidden = True
Else
Columns(32).EntireColumn.Hidden = False
End If
If Box28.Value = True Then
Columns(33).EntireColumn.Hidden = True
Else
Columns(33).EntireColumn.Hidden = False
End If
If Box29.Value = True Then
Columns(34).EntireColumn.Hidden = True
Else
Columns(34).EntireColumn.Hidden = False
End If

If CheckBox1.Value = True Then
Columns(35).EntireColumn.Hidden = True
Else
Columns(35).EntireColumn.Hidden = False
End If

If CheckBox2.Value = True Then
Columns(36).EntireColumn.Hidden = True
Columns(37).EntireColumn.Hidden = True
Else
Columns(36).EntireColumn.Hidden = False
Columns(37).EntireColumn.Hidden = False
End If

If CheckBox3.Value = True Then
Columns(38).EntireColumn.Hidden = True
Columns(39).EntireColumn.Hidden = True
Else
Columns(38).EntireColumn.Hidden = False
Columns(39).EntireColumn.Hidden = False
End If

If CheckBox4.Value = True Then
Columns(40).EntireColumn.Hidden = True
Columns(41).EntireColumn.Hidden = True
Else
Columns(40).EntireColumn.Hidden = False
Columns(41).EntireColumn.Hidden = False
End If

If CheckBox5.Value = True Then
Columns(42).EntireColumn.Hidden = True
Columns(43).EntireColumn.Hidden = True
Else
Columns(42).EntireColumn.Hidden = False
Columns(43).EntireColumn.Hidden = False
End If

If CheckBox6.Value = True Then
Columns(44).EntireColumn.Hidden = True
Columns(45).EntireColumn.Hidden = True
Else
Columns(44).EntireColumn.Hidden = False
Columns(45).EntireColumn.Hidden = False
End If

If CheckBox7.Value = True Then
Columns(46).EntireColumn.Hidden = True
Else
Columns(46).EntireColumn.Hidden = False
End If

If CheckBox8.Value = True Then
Columns(47).EntireColumn.Hidden = True
Else
Columns(47).EntireColumn.Hidden = False
End If

If CheckBox9.Value = True Then
Columns(48).EntireColumn.Hidden = True
Columns(49).EntireColumn.Hidden = True
Else
Columns(48).EntireColumn.Hidden = False
Columns(49).EntireColumn.Hidden = False
End If

If CheckBox10.Value = True Then
Columns(50).EntireColumn.Hidden = True
Columns(51).EntireColumn.Hidden = True
Else
Columns(50).EntireColumn.Hidden = False
Columns(51).EntireColumn.Hidden = False
End If

If CheckBox11.Value = True Then
Columns(52).EntireColumn.Hidden = True
Columns(53).EntireColumn.Hidden = True
Else
Columns(52).EntireColumn.Hidden = False
Columns(53).EntireColumn.Hidden = False
End If

If CheckBox12.Value = True Then
Columns(54).EntireColumn.Hidden = True
Columns(55).EntireColumn.Hidden = True
Else
Columns(54).EntireColumn.Hidden = False
Columns(55).EntireColumn.Hidden = False
End If

If CheckBox13.Value = True Then
Columns(56).EntireColumn.Hidden = True
Columns(57).EntireColumn.Hidden = True
Else
Columns(56).EntireColumn.Hidden = False
Columns(57).EntireColumn.Hidden = False
End If

If CheckBox14.Value = True Then
Columns(58).EntireColumn.Hidden = True
Else
Columns(58).EntireColumn.Hidden = False
End If

If CheckBox15.Value = True Then
Columns(59).EntireColumn.Hidden = True
Else
Columns(59).EntireColumn.Hidden = False
End If

If CheckBox16.Value = True Then
Columns(60).EntireColumn.Hidden = True
Else
Columns(60).EntireColumn.Hidden = False
End If

If CheckBox17.Value = True Then
Columns(61).EntireColumn.Hidden = True
Else
Columns(61).EntireColumn.Hidden = False
End If

If CheckBox18.Value = True Then
Columns(62).EntireColumn.Hidden = True
Else
Columns(62).EntireColumn.Hidden = False
End If

ActiveSheet.Protect
Unload Me
End Sub

Private Sub CommandButton5_Click()
Unload Me
End Sub

Private Sub MultiPage1_Change()

End Sub

Private Sub UserForm_Initialize()
Dim Box(62) As Boolean
For a = 1 To 62
If Columns(a).EntireColumn.Hidden = True Then
    Box(a) = True
Else
    Box(a) = False
End If
Next

Box1.Value = Box(2)
Box2.Value = Box(7)
Box3.Value = Box(8)
Box4.Value = Box(9)
Box5.Value = Box(10)
Box6.Value = Box(11)
Box7.Value = Box(12)
Box8.Value = Box(13)
Box9.Value = Box(14)
Box10.Value = Box(15)
Box11.Value = Box(16)
Box12.Value = Box(17)
Box13.Value = Box(18)
Box14.Value = Box(19)
Box15.Value = Box(20)
Box16.Value = Box(21)
Box17.Value = Box(22)
Box18.Value = Box(23)
Box19.Value = Box(24)
Box20.Value = Box(25)
Box21.Value = Box(26)
Box22.Value = Box(27)
Box23.Value = Box(28)
Box24.Value = Box(29)
Box25.Value = Box(30)
Box26.Value = Box(31)
Box27.Value = Box(32)
Box28.Value = Box(33)
Box29.Value = Box(34)

CheckBox1.Value = Box(35)
CheckBox2.Value = Box(36)
CheckBox3.Value = Box(38)
CheckBox4.Value = Box(40)
CheckBox5.Value = Box(42)
CheckBox6.Value = Box(44)
CheckBox7.Value = Box(46)
CheckBox8.Value = Box(47)
CheckBox9.Value = Box(48)
CheckBox10.Value = Box(50)
CheckBox11.Value = Box(52)
CheckBox12.Value = Box(54)
CheckBox13.Value = Box(56)
CheckBox14.Value = Box(58)
CheckBox15.Value = Box(59)
CheckBox16.Value = Box(60)
CheckBox17.Value = Box(61)
CheckBox18.Value = Box(62)
End Sub


Attribute VB_Name = "NIP"
Attribute VB_Base = "0{EFD71D6A-63C1-450C-A8B1-C987150B6274}{2E6588AE-3586-4DF3-98CA-E52F96E4FF7A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Option Explicit
Dim Fraz() As Variant

Private Sub Anuluj_Click()
Unload Me
End Sub

Private Sub ComboBox1_Change()
With Me
.ComboBox1.DropDown
.ComboBox1.List = Filter(Fraz, .ComboBox1.Value, True, vbTextCompare)
End With

End Sub

Private Sub ComboBox1_Click()
With ActiveSheet.Range("A2:A" & Cells(Rows.Count, "A").End(xlUp).Row)
    Set c = .Find(Me.ComboBox1.List, LookIn:=xlValues)
    If Not c Is Nothing Then
        Range(c.Address).Select
    End If
End With

Unload Me
End Sub

Private Sub UserForm_Initialize()
Dim i As Integer, j As Integer, Temp As String
With ActiveSheet
Fraz = Application.Transpose(.Range("A2:A" & .Cells(.Rows.Count, "A").End(xlUp).Row).Value)
Me.ComboBox1.List = Fraz
End With
End Sub


Attribute VB_Name = "Panstwo"
Attribute VB_Base = "0{2228BE18-2EE0-4458-8EC8-DDF2D7980CA6}{6E3FD9DC-A8B1-4F6A-9F22-B294F96656F0}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub CommandButton2_Click()
ActiveCell.Value = "PL"
ActiveCell.Offset(0, 1).Select
Unload Me
End Sub

Private Sub List1_Click()
ActiveCell.Value = Left(List1.Value, 10)
ActiveCell.Offset(0, 1).Select
Unload Me
End Sub

Private Sub UserForm_Initialize()
List1.RowSource = "Kraj"
List1.ColumnCount = 2
List1.BoundColumn = 1
End Sub

Attribute VB_Name = "ProgressBar"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private statusBarState As Boolean
Private enableEventsState As Boolean
Private screenUpdatingState As Boolean
Private Const NUM_BARS As Integer = 50
Private Const MAX_LENGTH As Integer = 255
Private BAR_CHAR As String
Private SPACE_CHAR As String

Private Sub Class_Initialize()
    statusBarState = Application.DisplayStatusBar
    enableEventsState = Application.EnableEvents
    screenUpdatingState = Application.ScreenUpdating
    BAR_CHAR = ChrW(9608)
    SPACE_CHAR = ChrW(9620)
    Application.DisplayStatusBar = True
    Application.ScreenUpdating = False
    Application.EnableEvents = False
End Sub

Private Sub Class_Terminate()
    Application.DisplayStatusBar = statusBarState
    Application.ScreenUpdating = screenUpdatingState
    Application.EnableEvents = enableEventsState
    Application.StatusBar = False
End Sub

Public Sub Update(ByVal Value As Long, _
                  Optional ByVal MaxValue As Long = 0, _
                  Optional ByVal Status As String = "", _
                  Optional ByVal DisplayPercent As Boolean = True)
Static Per
    
    If Value < 0 Or MaxValue < 0 Or (Value > 100 And MaxValue = 0) Then Exit Sub
    If MaxValue > 0 Then Value = WorksheetFunction.RoundUp((Value * 100) / MaxValue, 0)
    If Per = Value Then Exit Sub Else Per = Value
    Dim display As String
    display = Status & "  "
    display = display & String(Int(Value / (100 / NUM_BARS)), BAR_CHAR)
    display = display & String(NUM_BARS - Int(Value / (100 / NUM_BARS)), SPACE_CHAR)
    display = display & BAR_CHAR
    If DisplayPercent = True Then display = display & "  (" & Value & "%)  Esc - przerwij"
    If Len(display) > MAX_LENGTH Then display = Right(display, MAX_LENGTH)
DoEvents
    Application.StatusBar = display
End Sub


Attribute VB_Name = "Rodzaj"
Attribute VB_Base = "0{78CAE45C-13B5-4576-8099-0831D6862D1E}{1E8E904F-BE20-446D-ADB7-34E4F25ABA39}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Check1_Click()

End Sub


Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub OK_Click()
Dim Box(26) As Boolean
Box(1) = Check1.Value
Box(2) = Check2.Value
Box(3) = Check3.Value
Box(4) = Check4.Value
Box(5) = Check5.Value
Box(6) = Check6.Value
Box(7) = Check7.Value
Box(8) = Check8.Value
Box(9) = Check9.Value
Box(10) = Check10.Value
Box(11) = Check11.Value
Box(12) = Check12.Value
Box(13) = Check13.Value
Box(14) = Check14.Value
Box(15) = Check15.Value
Box(16) = Check16.Value
Box(17) = Check17.Value
Box(18) = Check18.Value
Box(19) = Check19.Value
Box(20) = Check20.Value
Box(21) = Check21.Value
Box(22) = Check22.Value
Box(23) = Check23.Value
Box(24) = Check24.Value
Box(25) = Check25.Value
Box(26) = Check26.Value
Unload Me
For a = 1 To 26
If Box(a) = True Then
Cells(ActiveCell.Row, a + 7) = 1
Else
Cells(ActiveCell.Row, a + 7).ClearContents
End If
Next
End Sub

Private Sub UserForm_Initialize()
Dim Box(26) As Boolean
For a = 1 To 26
If Cells(ActiveCell.Row, a + 7) = 1 Then
    Box(a) = True
Else
    Box(a) = False
End If
Next

Check1.Value = Box(1)
Check2.Value = Box(2)
Check3.Value = Box(3)
Check4.Value = Box(4)
Check5.Value = Box(5)
Check6.Value = Box(6)
Check7.Value = Box(7)
Check8.Value = Box(8)
Check9.Value = Box(9)
Check10.Value = Box(10)
Check11.Value = Box(11)
Check12.Value = Box(12)
Check13.Value = Box(13)
Check14.Value = Box(14)
Check15.Value = Box(15)
Check16.Value = Box(16)
Check17.Value = Box(17)
Check18.Value = Box(18)
Check19.Value = Box(19)
Check20.Value = Box(20)
Check21.Value = Box(21)
Check22.Value = Box(22)
Check23.Value = Box(23)
Check24.Value = Box(24)
Check25.Value = Box(25)
Check26.Value = Box(26)

End Sub

Attribute VB_Name = "System"
Option Private Module
Public Const LOCALE_SSHORTDATE As Long = &H1F
Public Const LOCALE_USER_DEFAULT As Long = &H400

#If VBA7 Then
    Public Declare PtrSafe Function GetLocaleInfo Lib "kernel32" Alias "GetLocaleInfoA" (ByVal lLocale As Long, _
    ByVal lLocaleType As Long, ByVal sLCData As String, ByVal lBufferLength As Long) As Long

    Public Declare PtrSafe Function SetLocaleInfo Lib "kernel32" Alias "SetLocaleInfoA" (ByVal Locale As Long, _
    ByVal LCType As Long, ByVal lpLCData As String) As Long
#Else
    Public Declare Function GetLocaleInfo Lib "kernel32" Alias "GetLocaleInfoA" (ByVal lLocale As Long, _
    ByVal lLocaleType As Long, ByVal sLCData As String, ByVal lBufferLength As Long) As Long
    
    Public Declare Function SetLocaleInfo Lib "kernel32" Alias "SetLocaleInfoA" (ByVal Locale As Long, _
    ByVal LCType As Long, ByVal lpLCData As String) As Long
#End If

Public KGT As String
Public TDS As String
Public JPKVAT

Sub DataSystemFormat()
Dim shortDateFormat As String
Dim lBuffSize As String
Dim sBuffer As String
Dim lRetGet As Long
Dim lRetSet As Long
Dim lngLocale As Long
Dim Zam As Integer

lBuffSize = 256
sBuffer = String$(lBuffSize, vbNullChar)
lRetGet = GetLocaleInfo(LOCALE_USER_DEFAULT, LOCALE_SSHORTDATE, sBuffer, lBuffSize)
If IsEmpty([A!a1]) Then [A!a1] = Date + 36661: ThisWorkbook.Save
If lRetGet > 0 Then shortDateFormat = Left$(sBuffer, lRetGet - 1)

If LCase(shortDateFormat) = "mm-dd-yyyy" Or LCase(shortDateFormat) = "mm/dd/yyyy" Then
Zam = MsgBox("W komputerze ustawiono ameryka|fffd|ski system daty (MM-dd-rrrr)," & vbCrLf & _
"przy kt|fffd|rym program nie b|fffd|dzie dzia|fffd|a|fffd| prawid|fffd|owo." & vbCrLf & vbCrLf & _
"Czy zmieni|fffd| ustawienie tej daty na polski (dd-MM-rrrr)?" & vbCrLf & vbCrLf & _
"(Zmiana daty - Panel sterowania/Region j|fffd|zyk/Ustawienia dodatkowe/Data kr|fffd|tka)", vbCritical + vbYesNo, "Ameryka|fffd|ska data systemowa")
End If

If LCase(shortDateFormat) = "yyyy-mm-dd" Or LCase(shortDateFormat) = "yyyy/mm/dd" Then
Zam = MsgBox("W komputerze ustawiono system daty Rok-miesi|fffd|c-dzie|fffd| (rrrr-MM-dd)," & vbCrLf & _
"przy kt|fffd|rym program mo|fffd|e nie dzia|fffd|a|fffd| prawid|fffd|owo." & vbCrLf & vbCrLf & _
"Czy zmieni|fffd| ustawienie tej daty na polski (dd-MM-rrrr)?" & vbCrLf & vbCrLf & _
"(Zmiana daty - Panel sterowania/Region j|fffd|zyk/Ustawienia dodatkowe/Data kr|fffd|tka)", vbCritical + vbYesNo, "Data systemowa")
End If

If Zam = 6 Then
    lRetSet = SetLocaleInfo(LOCALE_USER_DEFAULT, LOCALE_SSHORTDATE, "dd-MM-yyyy")
    MsgBox "Zmiana daty systemowej wymaga ponownego uruchomienia Excela", 64, "Zamykanie Excela"
    ThisWorkbook.Saved = True
    Application.Quit
    Application.ActiveWindow.Close SaveChanges:=False
    ActiveWorkbook.Close SaveChanges:=False
End If

End Sub

Sub ImportXMLa()
Dim DN() As Variant
Dim DA(23) As Variant
Dim b As Object
Dim a, c, d, e, x, y, z
Dim iw As Long, Siw As Long
Dim Nplik As String
Dim rngCell As Range
Dim xmlDoc As MSXML2.DOMDocument
Dim xmlNodeList As MSXML2.IXMLDOMNode
Dim xParent As MSXML2.IXMLDOMNode
Dim xParent2 As MSXML2.IXMLDOMNode
Dim xCh As MSXML2.IXMLDOMNode
Dim Chx As Object
Dim Col, Rov
Dim fa As String
Dim Zap As Boolean
Dim LWS As Long
Dim LWZ As Long
Dim ProgressBar As New ProgressBar

Application.EnableCancelKey = xlErrorHandler
Application.ScreenUpdating = False
On Error GoTo KONIEC
Sheets("Sprzeda|fffd|").Select
Tabela (ActiveSheet.Name)
    Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
    :=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
    False, SearchFormat:=False)
    Siw = rngCell.Row
Sheets("Zakupy").Select
Tabela (ActiveSheet.Name)
    Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
    :=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
    False, SearchFormat:=False)
    iw = rngCell.Row
    Sheets("VAT-7").Select

pra = Application.GetOpenFilename("Pliki xml (*.xml),*.xml", , "Otw|fffd|rz plik")
If pra = False Then Exit Sub
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Nplik = pra
Application.DisplayAlerts = False


tabl = Sheets("VAT-7").Range("AM1:AN62")
tabli = Sheets("VAT-7").Range("AO1:AP19")

    Set xmlDoc = New MSXML2.DOMDocument
    xmlDoc.async = False
    xmlDoc.validateOnParse = False

xmlDoc.Load (Nplik)

    Set xmlNodeList = xmlDoc.DocumentElement
    Set xParent = xmlNodeList.FirstChild
    Set xParent2 = xParent.FirstChild

Rov = 1
Col = 1

For Each xParent In xmlNodeList.ChildNodes
If xParent.BaseName = "SprzedazCtrl" Then
For Each xCh In xParent.ChildNodes
    If xCh.BaseName = "LiczbaWierszySprzedazy" Then
    LWS = CLng(xCh.text)
    If LWS + Siw > Rows.Count - 1 Then Importstop
    End If
Next xCh
End If

If xParent.BaseName = "ZakupCtrl" Then
For Each xCh In xParent.ChildNodes
    If xCh.BaseName = "LiczbaWierszyZakupow" Then
    LWZ = CLng(xCh.text)
    If LWZ + iw > Rows.Count - 1 Then Importstop
    End If
Next xCh
End If

If xParent.BaseName = "Naglowek" Then
For Each xCh In xParent.ChildNodes
        
        Select Case xCh.BaseName
        Case "KodFormularza"
        If xCh.text <> "JPK_VAT" Then
        MsgBox "Importowany XML ma kod systemowy " & xCh.text & " zamiast JPK_VAT" & vbCrLf & _
        "Import przerwany.", 16, ""
        GoTo KONIEC
        End If
        
        Case "WariantFormularza"
        If xCh.text <> "1" Then
        MsgBox "Importowany XML ma Wariant Formularza " & xCh.text & " zamiast 1" & vbCrLf & _
        "Import przerwany.", 16, ""
        GoTo KONIEC
        End If
        
        Case "CelZlozenia"
        [AG1] = xCh.text
        
        Case "KodUrzedu"
        tabel = Range("US")
        For c = 1 To UBound(tabel, 1)
            If tabel(c, 2) = xCh.text Then
            [E18] = tabel(c, 1)
            Exit For
            End If
        Next

        
        Case "DataWytworzeniaJPK"
        [V164] = xCh.text
        
        Case "Miesiac"
        [P11] = xCh.text
        
        If [P11] <> "" Then
        If xCh.text <> [P11] Then
            MsgBox "Importowany XML ma inny okres sprawozdawczy." & vbCrLf & _
            "Zawiera miesi|fffd|c " & xCh.text & " a winno by|fffd| " & [P11] & vbCrLf & _
            "Import przerwany.", 16, ""
            GoTo KONIEC
        End If
        Else
            If [P11] = "" Then [P11] = xCh.text
        End If
        
        Case "Rok"
        If [U11] <> "" Then
        If xCh.text <> [U11] Then
            MsgBox "Importowany XML ma inny okres sprawozdawczy." & vbCrLf & _
            "Zawiera rok " & xCh.text & " a winno by|fffd| " & [U11] & vbCrLf & _
            "Import przerwany.", 16, ""
            GoTo KONIEC
        End If
        Else
            If [U11] = "" Then [U11] = xCh.text
        End If
        
        Case "NazwaSystemu"
        If [D155] = "" Then [D155] = xCh.text
        
        End Select
Next xCh
End If

If xParent.BaseName = "Podmiot1" Then
For Each xParent2 In xParent.ChildNodes
If xParent2.BaseName = "OsobaNiefizyczna" Then
[AG2] = 1
For Each xCh In xParent2.ChildNodes
        Select Case xCh.BaseName
        Case "NIP"
        If [C7] <> "" And xCh.text <> [C7] Then
            Zap = MsgBox("Importowany XML ma NIP " & xCh.text & " zamiast " & [C7] & vbCrLf & vbCrLf & _
            "Czy pomimo tego importowa|fffd| dane?", 20, "")
            If Zap = 7 Then GoTo KONIEC
        Else
            If [C7] = "" Then [C7] = xCh.text
        End If
        Case "PelnaNazwa"
        If [E27] = "" Then [E27] = xCh.text
        Case "Email"
        If [D164] = "" Then [D164] = xCh.text
        Case "Telefon"
        If [X162] = "" Then [X162] = xCh.text
        End Select
Next xCh
End If
Next xParent2

For Each xParent2 In xParent.ChildNodes
If xParent2.BaseName = "OsobaFizyczna" Then
[AG2] = 2
For Each xCh In xParent2.ChildNodes
        Select Case xCh.BaseName
        Case "NIP"
        If [C7] <> "" And xCh.text <> [C7] Then
            Zap = MsgBox("Importowany XML ma NIP " & xCh.text & " zamiast " & [C7] & vbCrLf & vbCrLf & _
            "Czy pomimo tego importowa|fffd| dane?", 20, "")
            If Zap = 7 Then GoTo KONIEC
        Else
            If [C7] = "" Then [C7] = xCh.text
        End If
        Case "Nazwisko"
        If [E27] = "" Then [E27] = xCh.text
        Case "ImiePierwsze"
        If [E28] = "" Then [E28] = xCh.text
        Case "DataUrodzenia"
        If [E29] = "" Then [E29] = Replace(DATTAO(xCh.text), "-", "")
        Case "Email"
        If [D164] = "" Then [D164] = xCh.text
        Case "Telefon"
        If [X162] = "" Then [X162] = xCh.text
        End Select
Next xCh
End If
Next xParent2

End If

If xParent.BaseName = "Deklaracja" Then
For Each xParent2 In xParent.ChildNodes
If xParent2.BaseName = "PozycjeSzczegolowe" Then
For Each xCh In xParent2.ChildNodes
        Select Case xCh.BaseName
        Case "P_39"
        [Z86] = xCh.text
        Case "P_49"
        [Z107] = xCh.text
        Case "P_50"
        [Z110] = xCh.text
        Case "P_52"
        [Z116] = xCh.text
        Case "P_54"
        [Z121] = xCh.text
        
        Case "P_55"
        [AG3] = xCh.text
        Case "P_56"
        [AG4] = xCh.text
        Case "P_57"
        [AG5] = xCh.text
        Case "P_58"
        [AG6] = xCh.text
        Case "P_59"
        [AG7] = xCh.text
        Case "P_60"
        [U129] = xCh.text
        Case "P_61"
        [I131] = xCh.text
        Case "P_63"
        [AG8] = xCh.text
        Case "P_64"
        [AG9] = xCh.text
        Case "P_65"
        [AG10] = xCh.text
        Case "P_66"
        [AG11] = xCh.text
        Case "P_67"
        [AG12] = xCh.text
        Case "P_68"
        [T151] = xCh.text
        Case "P_69"
        [Z151] = xCh.text
        
        End Select
Next xCh
End If
Next xParent2

End If
Next xParent


Sheets("Sprzeda|fffd|").Select
Rov = 1
For Each xParent In xmlNodeList.ChildNodes
If xParent.BaseName = "SprzedazWiersz" Then
Call ProgressBar.Update(Rov, LWS, "Import sprzeda|fffd|y", True)
For Each xCh In xParent.ChildNodes
Set Chx = Wrt(xCh)
For m = 1 To UBound(tabl)
    If tabl(m, 2) = xCh.BaseName Then
    If Chx Is Nothing Then
    Cells(Rov + Siw, m) = xCh.text
    Else
    Cells(Rov + Siw, m) = Chx.data
    End If
    Exit For
    End If
Next
Next xCh
Rov = Rov + 1
End If
Next xParent
    
Sheets("Zakupy").Select
Rov = 1
For Each xParent In xmlNodeList.ChildNodes
If xParent.BaseName = "ZakupWiersz" Then
Call ProgressBar.Update(Rov, LWZ, "Import zakup|fffd|w", True)
For Each xCh In xParent.ChildNodes
Set Chx = Wrt(xCh)
For m = 1 To UBound(tabli)
    If tabli(m, 2) = xCh.BaseName Then
    If Chx Is Nothing Then
    Cells(Rov + iw, m) = xCh.text
    Else
    Cells(Rov + iw, m) = Chx.data
    End If
    Exit For
    End If
Next
Next xCh

Rov = Rov + 1
End If
Next xParent

Set xmlNodeList = Nothing
Set xmlDoc = Nothing

Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
FormatS
FormatZ
Sheets("Sprzeda|fffd|").Select
sh = 62
sk = 35
sd = 6
Walidacja
Sheets("Zakupy").Select
sh = 19
sk = 11
sd = 6
Walidacja
Sheets("VAT-7").Select
MsgBox "Import zako|fffd|czony", vbInformation, ""
Exit Sub

KONIEC:
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.StatusBar = False
If Err = 18 Then
   MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
    End
End If
If Err <> 0 Then MsgBox "B|fffd||fffd|d w importowanym pliku.", 64, ""
End Sub

Sub ImportSCsv()
Dim DN() As String
Dim b As Object
Dim rngCell As Range
Dim a, c, d, e, m, x, y, z
Dim Nplik As String, Pat As String
Dim LWS As Long
Dim POZ(62, 1)
Dim xmlDoc As MSXML2.DOMDocument
Dim xmlNodeList As MSXML2.IXMLDOMNode
Dim xParent As MSXML2.IXMLDOMNode
Dim xParent2 As MSXML2.IXMLDOMNode
Dim xCh As MSXML2.IXMLDOMNode
Dim Chx As Object
Dim Lastcol As Integer
Dim SEP As String
Dim ProgressBar As New ProgressBar
Dim Wjpk As String
Dim Ttl As Long

Wjpk = ActiveWindow.Caption
sh = 62
sk = 35
sd = 6
Application.OnKey "{F5}", "impDataTab"
Application.EnableCancelKey = xlErrorHandler
On Error GoTo PROBLEM: vbLeft
tabl = Sheets("VAT-7").Range("AM1:AN62")
Application.ScreenUpdating = False
pra = Application.GetOpenFilename()
If pra = False Then Exit Sub
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Nplik = pra
Pat = Mid(LCase(Nplik), InStrRev(Nplik, "."), 4)
Tabela (ActiveSheet.Name)
Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
False, SearchFormat:=False)
iw = rngCell.Row

If Pat = ".xml" Then
Set xmlDoc = New MSXML2.DOMDocument
xmlDoc.async = False
xmlDoc.validateOnParse = False
xmlDoc.Load (Nplik)
Set xmlNodeList = xmlDoc.DocumentElement
Set xParent = xmlNodeList.FirstChild

For Each xParent In xmlNodeList.ChildNodes
If xParent.BaseName = "SprzedazCtrl" Then
For Each xCh In xParent.ChildNodes
    If xCh.BaseName = "LiczbaWierszySprzedazy" Then
    LWS = CLng(xCh.text)
    If LWS + iw > Rows.Count - 1 Then Importstop
    End If
Next xCh
End If
Next xParent

Rov = 1
For Each xParent In xmlNodeList.ChildNodes
If xParent.BaseName = "SprzedazWiersz" Then
Call ProgressBar.Update(Rov, LWS, "Import sprzeda|fffd|y", True)
For Each xCh In xParent.ChildNodes
Set Chx = Wrt(xCh)
For m = 1 To UBound(tabl)
    If tabl(m, 2) = xCh.BaseName Then
    If Chx Is Nothing Then
    Cells(Rov + iw, m) = xCh.text
    Else
    Cells(Rov + iw, m) = Chx.data
    End If
    Exit For
    End If
Next
Next xCh
Rov = Rov + 1
End If
Next xParent
    
Set xmlNodeList = Nothing
Set xmlDoc = Nothing
    
If Cells(iw + 1, 1) <> "" Then
GoTo KONIEC
Else
Rov = MsgBox("W pliku " & Dir(Nplik) & " nie znaleziono potrzebnych danych." & vbCrLf & vbCrLf & _
"Czy otworzy|fffd| ten plik w arkuszu Excel w celu przeszukania danych?" & vbCrLf & vbCrLf & _
"Uwaga - du|fffd|e pliki mog|fffd| si|fffd| d|fffd|ugo |fffd|adowa|fffd|.", vbInformation + vbYesNo, "")
If Rov = 7 Then GoTo KONIEC
Workbooks.Add
    ActiveWorkbook.XmlImport URL:=Nplik, ImportMap:=Nothing, Overwrite:=True, Destination:=Range("$A$1")
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 62
    GoTo TEKST
End If
End If

If InStr(1, LCase(Nplik), ".xls") > 0 Then
    Workbooks.Open Nplik
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 62
GoTo TEKST
End If
If Pat = ".ods" Then
    Workbooks.Open Nplik
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 62
GoTo TEKST
End If
If Pat = ".dbf" Then
    Workbooks.Open Nplik
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 62
GoTo TEKST
End If

Ttl = 0

If Pat = ".csv" Or Pat = ".txt" Then
    Open Nplik For Input As #1
        Do Until EOF(1)
        Line Input #1, f
        Ttl = Ttl + 1
        If Ttl > Rows.Count - 1 Then Importstop
        Loop
    If InStr(1, f, Chr(9)) > 0 Then SEP = Chr(9)
    If InStr(1, f, ";") > 0 Then SEP = ";"
    Close #1


Open Nplik For Input As #1
w = 0
k = 0
Do Until EOF(1)
If IsEmpty(POZ(1, 1)) = True Then
Line Input #1, fa
k = k + 1
    For i = 1 To UBound(tabl)
         R = Split(fa, SEP)
        For a = 1 To UBound(R) + 1
        If tabl(i, 2) = R(a - 1) Then
            POZ(i, 1) = a
            Exit For
        End If
        Next a
    Next i
If k > 10 Then Exit Do
Else
Line Input #1, fa
R = Split(fa, SEP)
    If R(POZ(1, 1) - 1) <> "" Then
        w = w + 1
        If iw + w > Rows.Count - 1 Then Importstop
        Call ProgressBar.Update(w, Ttl, "Import danych", True)
        For i = 1 To UBound(tabl)
        If Not IsEmpty(POZ(i, 1)) Then
            If R(POZ(i, 1) - 1) <> "" Then Cells(w + iw, i) = "'" & R(POZ(i, 1) - 1)
        End If
        Next i
    End If
End If
Loop
Close #1

If IsEmpty(POZ(1, 1)) = False Then
GoTo KONIEC
Else
Open Nplik For Input As #1
w = 0
Workbooks.Add
Cells(1, 100) = Wjpk
Cells(1, 101) = 62
Do Until EOF(1)
    Line Input #1, fa
    R = Split(fa, SEP)
    w = w + 1
    Call ProgressBar.Update(w, Ttl, "Import danych", True)
    For k = 1 To UBound(R) + 1
        If R(k - 1) <> "" Then Cells(w, k) = "'" & R(k - 1)
    Next
Loop
Close #1
Application.StatusBar = False
GoTo TEKST
End If
End If

Workbooks.Open Nplik
On Error Resume Next
    Application.Dialogs(xlDialogTextToColumns).Show
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 62
On Error GoTo PROBLEM

Cells(1, 1).Select

TEKST:
Set b = Cells.Find(What:="LpSprzedazy", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByColumns, searchdirection:=xlNext, MatchCase:= _
False, SearchFormat:=False)

If b Is Nothing Then
Application.ScreenUpdating = True
    MsgBox "W otwartym pliku brak jest kolumny z nag|fffd||fffd|wkiem 'LpSprzedazy'" & vbCrLf & _
    "co uniemo|fffd|liwia automatyczne pobranie danych." & vbCrLf & vbCrLf & _
    "Zaznacz pierwsz|fffd| kom|fffd|rk|fffd| zakresu danych od lewej" & vbCrLf & _
    "i naci|fffd|nij klawisz funkcyjny F5" & vbCrLf & _
    "aby przenie|fffd||fffd| je do arkusza 'Sprzeda|fffd|'." & vbCrLf & vbCrLf & _
    "WA|fffd|NE! Przenoszone dane powinny mie|fffd| tyle samo kolumn.", 64, ""
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    End
Else
Lastcol = ActiveSheet.Cells(1, ActiveSheet.Columns.Count).End(xlToLeft).Column
For i = 1 To UBound(tabl)
    For a = 1 To Lastcol
    If tabl(i, 2) = Cells(b.Row, a) Then
        POZ(i, 1) = a
        Exit For
     End If
    Next a
Next i
End If

a = b.Column
e = b.Row
Set b = Columns(a).Find(What:="*", After:=Cells(e, a), LookIn:=xlValues, searchorder:=xlByColumns, searchdirection:=xlNext)
c = b.Row
Set b = Columns(a).Find(What:="*", LookIn:=xlValues, Lookat:=xlPart, searchorder:=xlByColumns, searchdirection:=xlPrevious)
d = b.Row
fi = d - c + 1
ReDim DN(fi, 62) As String

For x = 1 To fi
Call ProgressBar.Update(x, fi, "Kopiowanie danych", True)
    For k = 1 To 62
      If Not IsEmpty(POZ(k, 1)) Then
        If Cells(x + e, POZ(k, 1)) <> "" Then DN(x, k) = "'" & Cells(x + e, POZ(k, 1))
      End If
    Next
Next x

Application.DisplayAlerts = False
ActiveWorkbook.Close

Sheets("Sprzeda|fffd|").Select
Set b = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious)
z = b.Row
If x + z > Rows.Count - 1 Then Importstop

For x = 1 To d - c + 1
Call ProgressBar.Update(x, d - c + 1, "Wstawianie danych", True)
For y = 1 To 62
If DN(x, y) <> "" Then Cells(x + z, y) = DN(x, y)
Next y
Next x

KONIEC:
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
FormatS
Walidacja
MsgBox "Import zako|fffd|czony", vbInformation, ""
Exit Sub

PROBLEM:
Close #1
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.StatusBar = False
If Err = 18 Then
   MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
   End
End If
MsgBox "Wyst|fffd|pi|fffd| problem z importem danych ze wskazanego pliku", 64
End Sub

Sub ImportZCsv()
Dim DN() As String
Dim b As Object
Dim rngCell As Range
Dim a, c, d, e, m, x, y, z
Dim Nplik As String, Pat As String
Dim LWZ As Long
Dim POZ(19, 1)
Dim xmlDoc As MSXML2.DOMDocument
Dim xmlNodeList As MSXML2.IXMLDOMNode
Dim xParent As MSXML2.IXMLDOMNode
Dim xParent2 As MSXML2.IXMLDOMNode
Dim xCh As MSXML2.IXMLDOMNode
Dim Chx As Object
Dim Lastcol As Integer
Dim SEP As String
Dim Wjpk As String
Dim Ttl As Long
Dim ProgressBar As New ProgressBar

Wjpk = ActiveWindow.Caption
sh = 19
sk = 11
sd = 6

Application.OnKey "{F5}", "impDataTab"
Application.EnableCancelKey = xlErrorHandler
On Error GoTo PROBLEM: vbLeft
tabl = Sheets("VAT-7").Range("AO1:AP19")
Application.ScreenUpdating = False
pra = Application.GetOpenFilename()
If pra = False Then Exit Sub
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Nplik = pra
Pat = Mid(LCase(Nplik), InStrRev(Nplik, "."), 4)
Tabela (ActiveSheet.Name)
Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
False, SearchFormat:=False)
iw = rngCell.Row

If Pat = ".xml" Then
Set xmlDoc = New MSXML2.DOMDocument
xmlDoc.async = False
xmlDoc.validateOnParse = False
xmlDoc.Load (Nplik)
Set xmlNodeList = xmlDoc.DocumentElement
Set xParent = xmlNodeList.FirstChild

If xParent.BaseName = "ZakupCtrl" Then
For Each xCh In xParent.ChildNodes
    If xCh.BaseName = "LiczbaWierszyZakupow" Then
    LWZ = CLng(xCh.text)
    If LWZ + iw > Rows.Count - 1 Then Importstop
    End If
Next xCh
End If

Rov = 1
For Each xParent In xmlNodeList.ChildNodes
If xParent.BaseName = "ZakupWiersz" Then
Call ProgressBar.Update(Rov, LWZ, "Import zakup|fffd|w", True)
For Each xCh In xParent.ChildNodes
Set Chx = Wrt(xCh)
For m = 1 To UBound(tabl)
    If tabl(m, 2) = xCh.BaseName Then
    If Chx Is Nothing Then
    Cells(Rov + iw, m) = xCh.text
    Else
    Cells(Rov + iw, m) = Chx.data
    End If
    Exit For
    End If
Next
Next xCh

Rov = Rov + 1
End If
Next xParent

Set xmlNodeList = Nothing
Set xmlDoc = Nothing


If Cells(iw + 1, 1) <> "" Then
GoTo KONIEC
Else
Rov = MsgBox("W pliku " & Dir(Nplik) & " nie znaleziono potrzebnych danych." & vbCrLf & vbCrLf & _
"Czy otworzy|fffd| ten plik w arkuszu Excel w celu przeszukania danych?" & vbCrLf & vbCrLf & _
"Uwaga - du|fffd|e pliki mog|fffd| si|fffd| d|fffd|ugo |fffd|adowa|fffd|.", vbInformation + vbYesNo, "")
If Rov = 7 Then GoTo KONIEC
Workbooks.Add
    ActiveWorkbook.XmlImport URL:=Nplik, ImportMap:=Nothing, Overwrite:=True, Destination:=Range("$A$1")
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 19
    GoTo TEKST
End If
End If

If InStr(1, LCase(Nplik), ".xls") > 0 Then
    Workbooks.Open Nplik
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 19
GoTo TEKST
End If
If Pat = ".ods" Then
    Workbooks.Open Nplik
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 19
GoTo TEKST
End If
If Pat = ".dbf" Then
    Workbooks.Open Nplik
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 19
GoTo TEKST
End If

Ttl = 0

If Pat = ".csv" Or Pat = ".txt" Then
    Open Nplik For Input As #1
        Do Until EOF(1)
        Line Input #1, f
        Ttl = Ttl + 1
        If Ttl > Rows.Count - 1 Then Importstop
        Loop
    If InStr(1, f, Chr(9)) > 0 Then SEP = Chr(9)
    If InStr(1, f, ";") > 0 Then SEP = ";"
    Close #1


Open Nplik For Input As #1
w = 0
k = 0
Do Until EOF(1)
If IsEmpty(POZ(1, 1)) = True Then
Line Input #1, fa
k = k + 1
    For i = 1 To UBound(tabl)
         R = Split(fa, SEP)
        For a = 1 To UBound(R) + 1
        If tabl(i, 2) = R(a - 1) Then
            POZ(i, 1) = a
            Exit For
        End If
        Next a
    Next i
If k > 10 Then Exit Do
Else
Line Input #1, fa
R = Split(fa, SEP)
    If R(POZ(1, 1) - 1) <> "" Then
        w = w + 1
        If iw + w > Rows.Count - 1 Then Importstop
        Call ProgressBar.Update(w, Ttl, "Import danych", True)
        For i = 1 To UBound(tabl)
        If Not IsEmpty(POZ(i, 1)) Then
            If R(POZ(i, 1) - 1) <> "" Then Cells(w + iw, i) = "'" & R(POZ(i, 1) - 1)
        End If
        Next i
    End If
End If
Loop
Close #1

If IsEmpty(POZ(1, 1)) = False Then
GoTo KONIEC
Else
Open Nplik For Input As #1
w = 0
Workbooks.Add
Cells(1, 100) = Wjpk
Cells(1, 101) = 19
Do Until EOF(1)
    Line Input #1, fa
    R = Split(fa, SEP)
    w = w + 1
    Call ProgressBar.Update(w, Ttl, "Import danych", True)
    For k = 1 To UBound(R) + 1
        If R(k - 1) <> "" Then Cells(w, k) = "'" & R(k - 1)
    Next
Loop
Close #1
Application.StatusBar = False
GoTo TEKST
End If
End If

Workbooks.Open Nplik
On Error Resume Next
    Application.Dialogs(xlDialogTextToColumns).Show
    Cells(1, 100) = Wjpk
    Cells(1, 101) = 19
On Error GoTo PROBLEM

Cells(1, 1).Select

TEKST:
Set b = Cells.Find(What:="LpZakupu", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByColumns, searchdirection:=xlNext, MatchCase:= _
False, SearchFormat:=False)
If b Is Nothing Then
Application.ScreenUpdating = True
    MsgBox "W otwartym pliku brak jest kolumny z nag|fffd||fffd|wkiem 'LpZakupu'" & vbCrLf & _
    "co uniemo|fffd|liwia automatyczne pobranie danych." & vbCrLf & vbCrLf & _
    "Zaznacz pierwsz|fffd| kom|fffd|rk|fffd| zakresu danych od lewej" & vbCrLf & _
    "i naci|fffd|nij klawisz funkcyjny F5" & vbCrLf & _
    "aby przenie|fffd||fffd| je do arkusza 'Zakupy'." & vbCrLf & vbCrLf & _
    "WA|fffd|NE! Przenoszone dane powinny mie|fffd| tyle samo kolumn.", 64, ""
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    End
Else
Lastcol = ActiveSheet.Cells(1, ActiveSheet.Columns.Count).End(xlToLeft).Column
For i = 1 To UBound(tabl)
    For a = 1 To Lastcol
    If tabl(i, 2) = Cells(b.Row, a) Then
        POZ(i, 1) = a
        Exit For
     End If
    Next a
Next i
End If

a = b.Column
e = b.Row
Set b = Columns(a).Find(What:="*", After:=Cells(e, a), LookIn:=xlValues, searchorder:=xlByColumns, searchdirection:=xlNext)
c = b.Row
Set b = Columns(a).Find(What:="*", LookIn:=xlValues, Lookat:=xlPart, searchorder:=xlByColumns, searchdirection:=xlPrevious)
d = b.Row
fi = d - c + 1
ReDim DN(fi, 19) As String

For x = 1 To fi
Call ProgressBar.Update(x, fi, "Kopiowanie danych", True)
    For k = 1 To 19
      If Not IsEmpty(POZ(k, 1)) Then
        If Cells(x + e, POZ(k, 1)) <> "" Then DN(x, k) = "'" & Cells(x + e, POZ(k, 1))
      End If
    Next
Next x

Application.DisplayAlerts = False
ActiveWorkbook.Close

Sheets("Zakupy").Select
Set b = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious)
z = b.Row
If x + z > Rows.Count - 1 Then Importstop

For x = 1 To d - c + 1
Call ProgressBar.Update(x, d - c + 1, "Wstawianie danych", True)
For y = 1 To 19
If DN(x, y) <> "" Then Cells(x + z, y) = DN(x, y)
Next y
Next x

KONIEC:
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
FormatZ
Walidacja
MsgBox "Import zako|fffd|czony", vbInformation, ""
Exit Sub

PROBLEM:
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.StatusBar = False
If Err = 18 Then
   MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
   End
End If
MsgBox "Wyst|fffd|pi|fffd| problem z importem danych ze wskazanego pliku", 64
End Sub

Public Sub impDataTab()
Dim DM() As String
Dim Tcsv As String, Wjpk As String
Dim ProgressBar As New ProgressBar

Application.EnableCancelKey = xlErrorHandler
Application.ScreenUpdating = False
If ActiveSheet.Name = "Sprzeda|fffd|" Then End
If ActiveSheet.Name = "Zakupy" Then End
If ActiveSheet.Name = "JPK" Then End
If ActiveCell = "" Then MsgBox "Brak danych w zaznaczonej kom|fffd|rce.", 16, "": End
Tcsv = ActiveWindow.Caption
Wjpk = Cells(Rows.Count, Cells.SpecialCells(xlCellTypeLastCell).Column - 1).End(xlUp)
sh = Cells(Rows.Count, Cells.SpecialCells(xlCellTypeLastCell).Column).End(xlUp)

On Error GoTo Blad

a = ActiveCell.Column
c = ActiveCell.Row
Set b = Columns(a).Find(What:="*", LookIn:=xlValues, Lookat:=xlPart, searchorder:=xlByColumns, searchdirection:=xlPrevious)
d = b.Row

Range(ActiveCell, Cells(d, a + sh - 1)).Copy
Windows(Wjpk).Activate
If sh = 62 Then Sheets("Sprzeda|fffd|").Select
If sh = 19 Then Sheets("Zakupy").Select

Set b = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious)
    z = b.Row
If z + d > Rows.Count - 1 Then Importstop

Cells(z + 1, 1).PasteSpecial xlPasteValues
Application.CutCopyMode = False
[A4].Select
Windows(Tcsv).Close SaveChanges:=False

Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.ScreenUpdating = True
Application.OnKey "{F5}"

If sh = 62 Then
    FormatS
Else
    FormatZ
End If
Walidacja
MsgBox "Import zako|fffd|czony", vbInformation, ""
Exit Sub

Blad:
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.StatusBar = False
Application.OnKey "{F5}"
If Err = 18 Then
   MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
   End
End If
End Sub

Sub Importstop()
Close #1
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.StatusBar = False
MsgBox "Ilo|fffd||fffd| importowanych danych przekracza liczb|fffd| wolnych wierszy arkusza!", 16, "Import zatrzymany!"
End
End Sub

Sub Tabela(sht As String)
Dim Nrk As Integer
If sht = "Sprzeda|fffd|" Then
tabl = Sheets("VAT-7").Range("AM1:AN62")
Nrk = 34
End If
If sht = "Zakupy" Then
tabl = Sheets("VAT-7").Range("AO1:AP19")
Nrk = 10
End If
ActiveSheet.Unprotect
For a = 1 To UBound(tabl)
    Sheets(sht).Cells(3, a) = tabl(a, 2)
    If a > Nrk Then
        Sheets(sht).Cells(2, a) = "=SUM(R[2]C:R[1048574]C)" '65534
    End If
Next
Sheets(sht).Cells(2, 1) = "=COUNTA(R[2]C:R[1048574]C)" '65534
ActiveSheet.Protect
End Sub

Sub KorektaPodstawy(st)
Dim Pods
Dim Nal
Dim Licz
Pods = 0
Nal = 0
With Sheets("Sprzeda|fffd|")
Licz = .[A2]
For a = 4 To Licz + 3
If .Cells(a, 34) = 1 Then
Pods = Pods + .Cells(a, 35) + .Cells(a, 36) + .Cells(a, 38) + .Cells(a, 40) + .Cells(a, 42) + .Cells(a, 44) + .Cells(a, 46) + .Cells(a, 47) + .Cells(a, 48) + .Cells(a, 50) + .Cells(a, 52) + .Cells(a, 54) + .Cells(a, 56)
Nal = Nal + .Cells(a, 41) + .Cells(a, 43) + .Cells(a, 45) + .Cells(a, 49) + .Cells(a, 51) + .Cells(a, 53) + .Cells(a, 55) + .Cells(a, 57) + .Cells(a, 58) + .Cells(a, 59) + .Cells(a, 60) + .Cells(a, 61)
End If
Next
End With
Sheets("VAT-7").Range("T151") = Round(Pods, 1)
Sheets("VAT-7").Range("Z151") = Round(Nal, 1)
End Sub

Sub Usundane()
Application.ScreenUpdating = False
Application.EnableEvents = False
On Error Resume Next
Range("C7:T7,P11:X11,E18:AD18,E27:AD29,Z86:AD86,Z107:AD108,Z110:AD111,Z116:AD116,Z121:AD121,U129:AD129,I131:AD131,T151:AD151,D155:AD155,X162:AD162,D164:AD164").ClearContents
[AG1] = 1
Range("AG2:AG12").ClearContents
Sheets("Sprzeda|fffd|").Select
ActiveSheet.Unprotect
Range(Cells(4, 1), Cells(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row, 100)).Select
Selection.ClearContents
    With Selection.Font
        .Name = "Arial"
        .FontStyle = "Normalny"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
Cells(4, 1).Select
Tabela (ActiveSheet.Name)
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
Sheets("Zakupy").Select
ActiveSheet.Unprotect
Range(Cells(4, 1), Cells(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row, 100)).Select
Selection.ClearContents
    With Selection.Font
        .Name = "Arial"
        .FontStyle = "Normalny"
        .Size = 10
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
Cells(4, 1).Select
Tabela (ActiveSheet.Name)
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
Sheets("VAT-7").Select
Range("C7").Select
Application.EnableEvents = True
End Sub

Sub Dok()
If ActiveSheet.Name = "Sprzeda|fffd|" Then
If ActiveCell.Row > 3 Then
If ActiveCell.Column = 2 Then Panstwo.Show
End If
If ActiveCell.Column > 7 And ActiveCell.Column < 34 Then Rodzaj.Show
End If

If ActiveSheet.Name = "Zakupy" Then
If ActiveCell.Row > 3 Then
If ActiveCell.Column = 2 Then Panstwo.Show
If ActiveCell.Column = 8 Then Typdok.Show
End If
End If

End Sub

Sub asd()
Cells(1, 101).Select
End Sub

Attribute VB_Name = "Szukaj"
Attribute VB_Base = "0{71BCD7C8-FC73-4501-89AE-FEEA2382ABDA}{28B1B6E3-4F70-4E13-AF75-2F68B19EB843}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Option Explicit

Private Sub Box1_Change()
Klaw = Box1.text
SzukajZnaku xlOn
End Sub

Private Sub Box1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim naz, nazw, Wiersz, NIP, Nazwa, Adres, Zakup, VAT
On Error Resume Next
a = KeyCode
If a = 27 Then Unload Me 'Esc
If a = 13 Then 'Enter
        Unload Me
        goEnter
End If
If a = 9 Then 'Tab
        Unload Me
        Ponip
        Exit Sub
End If

If a = 38 Then ActiveCell.Offset(-1, 0).Select
If a = 40 Then ActiveCell.Offset(1, 0).Select
If a = 8 Then Box1.text = ""

If a = 33 Then
ActiveWindow.LargeScroll Down:=-1
ActiveCell.Offset(-11, 0).Select
End If

If a = 34 Then
ActiveWindow.LargeScroll Down:=1
ActiveCell.Offset(11, 0).Select
End If

If a = 45 Then 'Insert-36
        Range("A1").Select
        Unload Me
        If Range("A1") <> "" And Range("A2") <> "" And Range("A3") <> "" Then Selection.EntireRow.Insert
        End
End If

If a = 46 Then 'Delete
        Selection.EntireRow.Delete
        End
End If

If a = 37 Then
    Baza = ActiveSheet.Name
    Wiersz = ActiveCell.Rows(ActiveCell.Rows.Count).Row
BLDA:
    naz = InputBox("Wpisz cyfr|fffd|, kt|fffd|r|fffd| b|fffd|dzie wybierana firma: " & Chr(13) & Cells(Wiersz, 2), "Wybieranie cyfr|fffd|")
    If naz = "" Then GoTo BLDD
    nazw = Cells(Wiersz, 2)
    If naz <> Empty And Not IsNumeric(naz) Then
    MsgBox "Wpisz cyfr|fffd| od 0 do 9", 16, "B|fffd||fffd|d!"
    GoTo BLDA
    End If
    If naz < 0 Or naz > 9 Then
    MsgBox "Wpisz cyfr|fffd| od 0 do 9", 16, "B|fffd||fffd|d!"
    GoTo BLDA
    End If
    If naz <> "" Then
        Windows("_Info.xls").Activate
        If Baza = "A" Then
            Worksheets("A").Activate
        End If
        ActiveSheet.Unprotect
        Cells(naz + 1, 2) = nazw
        ActiveSheet.Protect
        Windows("_Firmy.xls").Activate
        If Baza = "A" Then
            naz = "_" & naz
            ActiveWorkbook.Names.Add Name:=naz, RefersToR1C1:=Selection
        End If
        Unload Me
        goEnter
    End If
End If
BLDD:
If a = 39 Then
    Unload Me
    ActiveCell.Offset(0, 1).Select
    If Baza = "A" Then
        naz = "_" & Left(ActiveCell, 1)
        ActiveWorkbook.Names.Add Name:=naz, RefersToR1C1:=Selection
    End If
    ActiveCell.Offset(0, -1).Select
    goEnter
End If
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_BeforePrint(Cancel As Boolean)
ActiveWorkbook.Colors(19) = RGB(255, 255, 255)
End Sub

Private Sub Workbook_Open()
DataSystemFormat
End Sub

Private Sub Workbook_Activate()
Application.OnKey "~", "goEnter"
Application.OnKey "{Enter}", "goEnter"
Application.OnKey "{Esc}", "goEsc"
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
Application.OnKey "~"
Application.OnKey "{Enter}"
Application.OnKey "{Esc}"
On Error Resume Next
Application.ScreenUpdating = False
Windows("_Info").WindowState = xlMinimized
Windows("_Firmy").WindowState = xlMinimized
Workbooks("_Info.xls").Close SaveChanges:=True
Workbooks("_Firmy.xls").Close SaveChanges:=True
End Sub




Attribute VB_Name = "Typdok"
Attribute VB_Base = "0{D57BAC6C-DAD0-4577-82A0-113D7FADE72F}{DD26E65D-4C44-4ECA-A782-54F921B6E1B6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub OK_Click()
KGT = ""
If Opt1 = True Then KGT = "MK"
If Opt2 = True Then KGT = "VAT_RR"
If Opt3 = True Then KGT = "WEW"
Unload Me
Cells(ActiveCell.Row, 8) = KGT
End Sub

Private Sub UserForm_Initialize()
If ActiveCell.Value = "MK" Then Opt1.Value = True
If ActiveCell.Value = "VAT_RR" Then Opt2.Value = True
If ActiveCell.Value = "WEW" Then Opt3.Value = True
End Sub
Attribute VB_Name = "UserForm4"
Attribute VB_Base = "0{B85BAAE0-6962-47C7-B58B-5FC5763A05A4}{6DEBDA68-AC01-43F7-9F40-7292AA56309A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
If OptionButton1.Value = True Then
JPKVAT = 1
Else
JPKVAT = 2
End If
Unload Me
End Sub

Private Sub CommandButton2_Click()
Unload Me
End
End Sub

Private Sub OptionButton1_Click()
JPKVAT = 1
End Sub

Private Sub OptionButton2_Click()
JPKVAT = 2
End Sub
Attribute VB_Name = "VIES"
Option Private Module
#If VBA7 Then
Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal milliseconds As Long)
#Else
Declare Sub Sleep Lib "kernel32" (ByVal milliseconds As Long)
#End If

Sub WerNIP(c)
Dim NIP, VIES, VAT, PR, a, b, d, e
If c < 4 Then Exit Sub
If VATnext = True Then Exit Sub
If Cells(c, 3) = "" Then Exit Sub
If UCase(Cells(c, 3)) = "BRAK" Then Exit Sub
If VATsign = 0 Then b = "ESC/Anuluj - pomi|fffd| sprawdzanie poprawno|fffd|ci numer|fffd|w VAT"
If Not IsNumeric(Left(Cells(c, 3), 2)) Then
VAT = Mid(Cells(c, 3), 3)
PR = Left(Cells(c, 3), 2)
d = "Wpisany numer '" & PR & VAT & "' r|fffd|ni si|fffd| od wzorca typu"

VIES = False

Select Case PR
Case "AT"
    If Len(VAT) <= 9 And IsNumeric(VAT) Then VIES = True
    NIP = "AT123456789"
Case "BE"
    If Len(VAT) <= 10 And IsNumeric(VAT) Then VIES = True
    NIP = "BE1234567890"
Case "BG"
    If Len(VAT) >= 9 And Len(VAT) < 14 And IsNumeric(VAT) Then VIES = True
    NIP = "BG1234567890"
Case "CY"
    If Len(VAT) <= 9 And IsNumeric(Mid(VAT, 1, 8)) And Not IsNumeric(Right(VAT, 1)) Then VIES = True
    NIP = "CY12345678X"
Case "CZ"
    If Len(VAT) > 7 And Len(VAT) < 11 And IsNumeric(VAT) Then VIES = True
    NIP = "CZ12345678 lub CZ123456789 lub CZ1234567890"
Case "DK"
    If Len(VAT) >= 8 And Len(VAT) < 11 And IsNumeric(VAT) Then VIES = True
    NIP = "DK12345678 lub DK1234567890"
Case "EE"
    If Len(VAT) >= 8 And Len(VAT) < 12 And IsNumeric(VAT) Then VIES = True
    NIP = "EE12345678 lub EE12345678901"
Case "FI"
    If Len(VAT) >= 8 And Len(VAT) < 12 And IsNumeric(Left(VAT, 6)) Then VIES = True
    NIP = "FI1234567-8 lub FI123456A789B"
Case "FR"
    If Len(VAT) >= 9 And Len(VAT) < 14 And IsNumeric(VAT) Then VIES = True
    NIP = "FR123456789 lub FR1234567890123"
Case "EL"
    If Len(VAT) <= 9 And IsNumeric(VAT) Then VIES = True
    NIP = "EL123456789"
Case "ES"
    If Len(VAT) <= 9 Then VIES = True
    NIP = "ESL1234567X lub ES12345678X"
Case "HR"
    If Len(VAT) <= 11 And IsNumeric(VAT) Then VIES = True
    NIP = "HR12345678901"
Case "NL"
    If Len(VAT) <= 12 Then VIES = True
    NIP = "NL123456789"
Case "IE"
    If Len(VAT) >= 8 Then VIES = True
    NIP = "IE1234567X lub IE1234567XX"
Case "LT"
    If Len(VAT) >= 9 And Len(VAT) <= 12 Then VIES = True
    NIP = "LT123456789 lub LT12345678901"
Case "LU"
    If Len(VAT) >= 8 And Len(VAT) < 14 And IsNumeric(VAT) Then VIES = True
    NIP = "LU12345678901 lub LU1234567890123"
Case "LV"
    If Len(VAT) <= 11 And IsNumeric(VAT) Then VIES = True
    NIP = "LV12345678901"
Case "MT"
    If Len(VAT) > 7 And Len(VAT) < 10 And IsNumeric(Left(VAT, 7)) Then VIES = True
    NIP = "MT1234567M lub MT123456789"
Case "DE"
    If Len(VAT) <= 11 And IsNumeric(VAT) Then VIES = True
    NIP = "DE123456789 lub DE12345678901"
Case "PL"
    If Len(VAT) = 10 And IsNumeric(VAT) Then VIES = True
    NIP = "PL1234567890"
Case "PT"
    If Len(VAT) <= 9 And IsNumeric(VAT) Then VIES = True
    NIP = "PT123456789"
Case "RO"
    If Len(VAT) >= 2 And Len(VAT) < 14 And IsNumeric(VAT) Then VIES = True
    NIP = "RO12 do RO123456789 lub RO1234567890123"
Case "SK"
    If Len(VAT) >= 9 And Len(VAT) < 11 And IsNumeric(VAT) Then VIES = True
    NIP = "SK123456789 lub SK1234567890"
Case "SI"
    If Len(VAT) <= 8 And IsNumeric(VAT) Then VIES = True
    NIP = "SI12345678"
Case "SE"
    If Len(VAT) <= 12 And IsNumeric(VAT) Then VIES = True
    NIP = "SE1234567890"
Case "HU"
    If Len(VAT) >= 8 And Len(VAT) < 12 And IsNumeric(VAT) Then VIES = True
    NIP = "HU1234567890 lub HU12345678901"
Case "GB"
    If Len(VAT) <= 12 And IsNumeric(VAT) Then VIES = True
    NIP = "GB1234567890"
Case "IT"
    If Len(VAT) <= 16 Then VIES = True
    NIP = "IT12345678901 lub ITABCDEF12G34J567H"
End Select

If VIES = False Then
    If NIP = Empty Then d = "Numer VAT '" & PR & VAT & "' nie odpowiada |fffd|adnemu wzorcowi UE oraz NIP."
    Application.GoTo Cells(c, 2)
    Application.ScreenUpdating = True
    VATnext = MsgBox(d & vbCrLf & NIP & vbCrLf & _
    "Czy sprawdzi|fffd| aktywno|fffd||fffd| VIES numeru " & PR & VAT & " na stronie" & vbCrLf & _
    "ec.europa.eu/taxation_customs/vies/?" & vbCrLf & vbCrLf & _
    b, 19 + VATsign, "Niepoprawny numer VAT")
    If VATnext = 6 Or VATnext = 1 Then
        Application.EnableEvents = True
        Application.StatusBar = False
        Application.Calculation = xlCalculationAutomatic
        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
        ActiveSheet.EnableSelection = xlNoRestrictions
        Cells(c, 2).Select: WeryfikacjaVIES (c)
        End
    End If
    If VATnext = 2 Then VATnext = True
    Else
        If VATsign = -2 Then Cells(c, 3).Select: WeryfikacjaVIES (c)
End If

Else
If Not CzyNIP(Cells(c, 3)) Then
    If VATsign = 0 Then e = "Czy chcesz go poprawi|fffd|?"
    Application.GoTo Cells(c, 3)
    Application.ScreenUpdating = True
    VATnext = MsgBox("Wpisany numer NIP '" & Cells(c, 3) & "' jest b|fffd||fffd|dny." & vbCrLf & _
    e & vbCrLf & vbCrLf & _
    b, 19 + VATsign, "B|fffd||fffd|dny NIP")
    If VATnext = 6 Then
        Application.EnableEvents = True
        Application.StatusBar = False
        Application.Calculation = xlCalculationAutomatic
        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
        ActiveSheet.EnableSelection = xlNoRestrictions
        Cells(c, 2).Select
        End
    End If
    If VATnext = 2 Then VATnext = True
    Else
    If VATsign = -2 Then Cells(c, 3).Select: WeryfikacjaNIP (c)
End If
End If

End Sub


Sub WeryfikacjaVIES(c)
Dim VATPL, VAT, PR
Dim Zaw As HTMLInputElement
Dim Kom As String

If Sheets("VAT-7").Range("C7") = "" Then
    MsgBox "Wpisz NIP podatnika", 16, ""
    Sheets("VAT-7").Select
    Range("C7").Select
    End
End If
VATPL = Sheets("VAT-7").Range("C7")

NOWY:
Application.EnableCancelKey = xlErrorHandler
On Error GoTo Wype|fffd|nijFormularz_Error

Cells(c, 3).Select
    VAT = Mid(Cells(c, 3), 3)
    PR = Left(Cells(c, 3), 2)
    
    Dim IE As Object
    Dim objHTMLDoc As Object
    Dim colForms As Object
    Const URL As String = "http://ec.europa.eu/taxation_customs/vies/"

    Set IE = CreateObject("InternetExplorer.Application")
    IE.Navigate URL
    IE.Visible = True
    apiShowWindow IE.hwnd, 3
    Do
         DoEvents
    Loop Until IE.readyState = 4
    Set objHTMLDoc = IE.document


    Set colForms = objHTMLDoc.forms(0)
    With colForms
        .memberStateCode.Value = PR
        .Number.Value = VAT
        .requesterMemberStateCode.Value = "PL"
        .requesterNumber.Value = VATPL
        .Check.Click
    End With

Wype|fffd|nijFormularz_Exit:
    On Error Resume Next
    Set IE = Nothing
    Set objHTMLDoc = Nothing
    Set colForms = Nothing
    Set Zaw = Nothing
        Application.EnableEvents = True
        Application.Calculation = xlCalculationAutomatic
        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
        ActiveSheet.EnableSelection = xlNoRestrictions
    End
    Exit Sub
Wype|fffd|nijFormularz_Error:
If Err = 18 Then MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
Resume Wype|fffd|nijFormularz_Exit
End Sub

Sub WeryfikacjaNIP(c)
Dim NIP
Dim IE As Object
Dim inputEL As HTMLInputElement
Dim IEField As HTMLInputElement
Dim Zaw As HTMLInputElement
Dim Kom As String

Const URL As String = "https://ppuslugi.mf.gov.pl/?link=VAT&"


NOWY:
Application.EnableCancelKey = xlErrorHandler
On Error GoTo Wype|fffd|nijFormularz_Error

Cells(c, 3).Select
NIP = Cells(c, 3)

    Set IE = CreateObject("InternetExplorer.Application")
    IE.Navigate URL
    IE.Visible = True
    apiShowWindow IE.hwnd, 3
    Do
       DoEvents
    Loop Until IE.readyState = 4

Do While IE.Busy
Sleep (100)
Loop

Sleep (700)
Do While inputEL Is Nothing
    Set inputEL = IE.document.getElementById("b-7")
Loop
inputEL.Value = NIP
IE.document.getElementById("b-8").Click

Wype|fffd|nijFormularz_Exit:
    On Error Resume Next
    Set IE = Nothing
    Set inputEL = Nothing
    Set Zaw = Nothing
        Application.EnableEvents = True
        Application.Calculation = xlCalculationAutomatic
        ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
        ActiveSheet.EnableSelection = xlNoRestrictions
    End
    Exit Sub
Wype|fffd|nijFormularz_Error:
If Err = 18 Then MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
Resume Wype|fffd|nijFormularz_Exit
End Sub










Attribute VB_Name = "Walidacj"
Option Private Module
Public sh As Integer
Public sk As Integer
Public sd As Integer
Public Zar As Boolean
Public Zas As Boolean
Public Const po = 42736
Public Const ko = 43434
Public SEP As String
Public VATsign, VATnext
Dim b As Long

Sub Walid()
Wal "c7"
Wal "p11"
Wal "u11"
Wal "e18"
Wal "e27"
If [AG1] = 2 Then
Wal "e28"
Wal "e29"
End If
If [AG7] = 1 Then
Wal "u129"
Wal "i131"
End If
If [AG7] = 0 And [U129] > 0 Then
MsgBox "Zaznacz kwadrat w poz. 59", 16, "Uwaga"
[U126].Select
End
End If


If [AG3] <> 0 Then Wal "z121"

If [Z121] > 0 Then
If [AG3] + [AG4] + [AG5] + [AG6] = 0 Then
MsgBox "Zaznacz kwadrat w poz. od 55 do 58", 16, "Uwaga"
[R123].Select
End
End If
End If




If [T151] + [Z151] <> 0 Then
If [AG12] = 0 Then
MsgBox "Zaznacz kwadrat w poz. 67", 16, "Uwaga"
[D140].Select
End
End If
End If

Wal "d155"
Wal "d162"
Wal "n162"
Wal "d164"

End Sub

Sub Walid2()
Wal "c7"
Wal "p11"
Wal "u11"
Wal "e18"
Wal "e27"
If [AG1] = 2 Then
Wal "e28"
Wal "e29"
End If
If [AG7] = 1 Then
Wal "u129"
Wal "i131"
End If
Wal "d155"
Wal "d162"
Wal "n162"
Wal "d164"

End Sub

Sub Walida3()
Application.ScreenUpdating = False

sh = 62
sk = 35
sd = 6
Sheets("Sprzeda|fffd|").Select
Walidacja
sh = 19
sk = 11
sd = 6
Sheets("Zakupy").Select
Walidacja
Sheets("VAT-7").Select
End Sub

Function Wal(Adr) 'Wal ""
If Range(Adr) = "" Then
Application.EnableEvents = False
Range(Adr).Select
w = Selection.Row
c = Selection.Column
Application.GoTo Cells(w - 5, 1)
Cells(w, c).Select
Application.EnableEvents = True
MsgBox "Uzupe|fffd|nij rubryk|fffd| " & Cells(w - 1, c), 16, "Uwaga"
End
End If
End Function

Sub Walidacja()
Dim a As Long
Dim myDat As String
Dim rngCell As Range
Dim Ro As Integer
Dim Za As Integer
Dim DA As Integer
Dim Dar As Integer
Dim Mo As Integer
Dim rol As Integer
Dim Jo, Jd
Dim ror As Integer
Dim Ldec As Boolean
Dim Zap As Integer
Dim ProgressBar As New ProgressBar

VATsign = 0
Application.EnableCancelKey = xlErrorHandler
'On Error GoTo POZYC
Application.ScreenUpdating = False
ActiveSheet.Unprotect
Range(Cells(4, 1), Cells(ActiveSheet.Cells.SpecialCells(xlCellTypeLastCell).Row, 1)).ClearContents
Tabela (ActiveSheet.Name)
Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
False, SearchFormat:=False)
b = rngCell.Row
If b < 4 Then
[A4].Select
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
Application.Calculation = xlCalculationAutomatic
Exit Sub
End If
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
If b = 4 Then [A4] = 1
If b = 5 Then [A4] = 1: [A5] = 2
If b > 5 Then
[A4] = 1: [A5] = 2: [A6] = 3
If b > 6 Then
Set SourceRange = Range("A5:A6")
Set fillRange = Range(Cells(5, 1), Cells(b, 1))
SourceRange.AutoFill Destination:=fillRange
End If
End If
Jo = 0
Jd = 0
If Sheets("VAT-7").Range("AK11") <> "" And IsNumeric(Sheets("VAT-7").Range("AK11")) Then Jo = DATTO(Sheets("VAT-7").Range("AK11"))
If Sheets("VAT-7").Range("AL11") <> "" And IsNumeric(Sheets("VAT-7").Range("AL11")) Then Jd = DATTO(Sheets("VAT-7").Range("AL11"))


For c = sk To sh
If Not IsNumeric(Cells(2, c)) Then
     MsgBox "Kwota sumy kolumny nie jest liczb|fffd|!", 16, "B|fffd||fffd|d"
     a = 2
     GoTo POZYC
End If
Next c

For a = 4 To b

Call ProgressBar.Update(a, b, "Sprawdzanie", True)
If IsNumeric(Left(Cells(a, 3), 1)) And InStr(1, Cells(a, 3), "-") Then Cells(a, 3) = Replace(Cells(a, 3), "-", "")
WerNIP (a)
On Error GoTo 0

c = 2
If InStr(1, Range("Kody"), Cells(a, 2), 1) = 0 Then
MsgBox "B|fffd||fffd|dny kod kraju w wierszu " & a, vbCritical, "Uwaga"
GoTo POZYC
End If

If ActiveSheet.Name = "Zakupy" Then
c = 8
If InStr(1, "MK,VAT_RR,WEW", Cells(a, 8), 1) = 0 Then
MsgBox "B|fffd||fffd|dne oznaczenie dowodu zakupu w wierszu " & a & vbCrLf & vbCrLf & _
"Winno by|fffd| MK, VAT_RR, WEW lub puste.", vbCritical, "Uwaga"
GoTo POZYC
End If
c = 9
If Cells(a, 9) <> "" And Cells(a, 9) <> 1 Then
MsgBox "Wpisano w polu " & Cells(a, 9) & vbCrLf & vbCrLf & _
"a winno by|fffd| 1 lub puste.", vbCritical, "Uwaga"
GoTo POZYC
End If
c = 10
If Cells(a, 10) <> "" And Cells(a, 10) <> 1 Then
MsgBox "Wpisano w polu " & Cells(a, 10) & vbCrLf & vbCrLf & _
"a winno by|fffd| 1 lub puste.", vbCritical, "Uwaga"
GoTo POZYC
End If
End If


If ActiveSheet.Name = "Sprzeda|fffd|" Then
For c = 8 To 34
If Cells(a, c) <> "" And Cells(a, c) <> 1 Then
MsgBox "Wpisano w polu " & Cells(a, c) & vbCrLf & vbCrLf & _
"a winno by|fffd| 1 lub puste.", vbCritical, "Uwaga"
GoTo POZYC
End If
Next
End If


For c = 3 To 6
On Error GoTo Stos

If Len(Trim(Cells(a, c))) = 0 Then
Application.GoTo Cells(a, c)
Application.ScreenUpdating = True
If c = 3 Then
    Zap = MsgBox("Brak obowi|fffd|zkowych danych '" & Replace(Cells(1, c), Chr(10), " ") & "' w wierszu " & a & vbCrLf & vbCrLf & _
        "Je|fffd|eli numer nie istnieje nale|fffd|y wpisa|fffd| 'BRAK'." & vbCrLf & vbCrLf & _
        "Czy wstawi|fffd| 'BRAK'?", 20, "Sprawdzanie poprawno|fffd|ci danych")
    If Zap = 6 Then Cells(a, c) = "BRAK": Application.ScreenUpdating = False
    If Zap = 7 Then GoTo POZYC
Else
    MsgBox "Brak obowi|fffd|zkowych danych '" & Cells(1, c) & "' w wierszu " & a, 16, "Sprawdzanie poprawno|fffd|ci danych"
    GoTo POZYC
End If
End If
Stos:
If Err = 18 Then GoTo POZYC
If Err <> 0 Then
    If c = 6 Or c = 7 Then
    MsgBox "B|fffd||fffd|dna data w wierszu " & a & ". Data powinna zawiera|fffd| kreski '-'", vbInformation, "Sprawdzanie poprawno|fffd|ci danych"
    Else
    MsgBox "B|fffd||fffd|dna warto|fffd||fffd| w wierszu " & a & " - " & Cells(1, c), vbInformation, "Sprawdzanie poprawno|fffd|ci danych"
    End If
    Cells(a, c).Select
    GoTo POZYC
End If
Next c
On Error GoTo POZYC
Ldec = False
For c = sk To sh
If Cells(a, c) <> 0 Or Cells(a, c) <> "" Then
If Not IsNumeric(Cells(a, c)) Then
     MsgBox "Wpisana warto|fffd||fffd| nie jest liczb|fffd|", 16, "B|fffd||fffd|dny wpis"
     GoTo POZYC
Else
     Ldec = True
End If
End If
Next c

If Ldec = False Then
If Zas = False Then
    c = sk
    Zap = MsgBox("Brak wpisanej kwoty w wierszu " & a & vbCrLf & _
    "Czy chcesz uzupe|fffd|ni|fffd|?" & vbCrLf & vbCrLf & "Anuluj/Esc - pomi|fffd| sprawdzanie", vbInformation + vbYesNoCancel, "Sprawdzanie poprawno|fffd|ci danych")
    If Zap = 2 Then Zas = True
    If Zap = 6 Then GoTo POZYC
End If
End If

For c = sd To sd + 1
If Cells(a, c) <> "" Then
myDat = Cells(a, c)
SEP = Datsep(myDat)
Mo = Mid(myDat, InStr(1, myDat, SEP) + 1, InStrRev(myDat, SEP) - InStr(1, myDat, SEP) - 1)
Dar = Right(myDat, Len(CStr(myDat)) - InStrRev(myDat, SEP))
DA = Left(myDat, InStr(1, myDat, SEP) - 1)
If Len(CStr(DA)) > Len(CStr(Dar)) Then Za = Dar: Dar = DA: DA = Za
myDat = DateSerial(Dar, Mo, DA)
    If IsDate(myDat) = False Then
    Cells(a, c).Select
    Application.ScreenUpdating = True
    MsgBox "Wpisana data jest b|fffd||fffd|dna", 16, "B|fffd||fffd|dna data"
    GoTo POZYC
    End If

If Mo > 12 Then
    Za = Mo: Mo = DA: DA = Za
    MsgBox "Stwierdzono dat|fffd| w formacie ameryka|fffd|skim MM-dd-rrrr" & vbCrLf & vbCrLf & _
    "Popraw dat|fffd|.", 33, "Problem z dat|fffd|"
    Cells(a, c).Select
    GoTo POZYC
End If

rol = 2000 + CDbl(DA)
ror = 2000 + CDbl(Dar)

If Len(CStr(DA)) < 3 And Len(CStr(Dar)) < 3 Then
    Zam = MsgBox("Wpisano dat|fffd|   " & myDat & "   bez 4-cyfrowego roku. Jak uzupe|fffd|ni|fffd| rok?" & vbCrLf & vbCrLf & _
    "Kliknij TAK dla pierwszej wersji    lub    NIE dla drugiej wersji" & vbCrLf & vbCrLf & _
    "TAK - " & rol & "    (" & DateSerial(rol, Mo, Dar) & ")" & vbCrLf & vbCrLf & _
    "NIE - " & ror & "    (" & DateSerial(ror, Mo, DA) & ")", 35, "Jaki rok")

    If Zam = 6 Then
    Cells(a, c) = DateSerial(rol, Mo, Dar)
    Zam = MsgBox("Czy uzupe|fffd|ni|fffd| wszystkie daty w ten sam spos|fffd|b?" & vbCrLf & vbCrLf & _
    "np.  " & myDat & "    (" & DateSerial(rol, Mo, DA) & ")", 36, "Jaki rok")
        If Zam = 6 Then DaiDar xlOn
    GoTo NAST
    End If
    
    If Zam = 7 Then
    Cells(a, c) = DateSerial(ror, Mo, DA)
    Zam = MsgBox("Czy uzupe|fffd|ni|fffd| wszystkie daty w ten sam spos|fffd|b?" & vbCrLf & vbCrLf & _
    "np.  " & myDat & "    (" & DateSerial(ror, Mo, DA) & ")", 36, "Jaki rok")
        If Zam = 6 Then DariDa xlOn
    GoTo NAST
    End If
    
    If Zam = 2 Then Cells(a, c).Select: GoTo POZYC
    GoTo NAST
End If
NAST:
If Cells(a, c) <> DateSerial(DatePart("yyyy", myDat), DatePart("m", myDat), DatePart("d", myDat)) Then Cells(a, c) = DateSerial(DatePart("yyyy", myDat), DatePart("m", myDat), DatePart("d", myDat))
If Zar = False Then
    If Jd <> 0 Then
    If Cells(a, c) > Jd Then
    Application.ScreenUpdating = True
    Application.GoTo Cells(a, c)
    Zap = MsgBox("Wpisana data wykracza poza okres sprawozdawczy" & vbCrLf & _
    "z arkusza JPK poz. 5 tj.  " & Jd & vbCrLf & vbCrLf & _
    "Czy ta data jest poprawna?" & vbCrLf & vbCrLf & _
    "ESC/Anuluj - pomi|fffd| sprawdzanie poprawno|fffd|ci dat", 19, "B|fffd||fffd|dna data")
    If Zap = 2 Then Zar = True
    If Zap = 7 Then GoTo POZYC
    End If
    End If
    
    If Jo <> 0 Then
    If Cells(a, c) < Jo Then
    Application.ScreenUpdating = True
    Application.GoTo Cells(a, c)
    Zap = MsgBox("Wpisana data jest poni|fffd|ej okresu sprawozdawczego" & vbCrLf & _
    "z arkusza JPK poz. 4 tj.  " & Jo & vbCrLf & _
    "Czy ta data jest poprawna?" & vbCrLf & vbCrLf & _
    "ESC/Anuluj - pomi|fffd| sprawdzanie poprawno|fffd|ci dat", 19, "B|fffd||fffd|dna data")
    If Zap = 2 Then Zar = True
    If Zap = 7 Then GoTo POZYC
    End If
    End If
End If
End If

Next c
Next a

[A4].Select
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
KorektaPodstawy xlOn
Exit Sub

POZYC:
On Error Resume Next
Application.GoTo Cells(a, c)
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
Application.StatusBar = False
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
If Err = 18 Then
    MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
Else
    MsgBox "Sprawdzanie przerwane." & vbCrLf & "Sprawd|fffd| poprawno|fffd||fffd| danych w zaznaczonej kom|fffd|rce", 64, ""
End If
End
End Sub


Sub DaiDar(s)
Dim a As Integer
Dim c As Integer
Dim DA As Integer
Dim Dar As Integer
Dim Mo As Integer
For a = 4 To b
For c = sd To sd + 1
myDat = Cells(a, c)
If Len(myDat) > 4 And Len(myDat) < 9 Then
Mo = Mid(myDat, InStr(1, myDat, SEP) + 1, InStrRev(myDat, SEP) - InStr(1, myDat, SEP) - 1)
Dar = Right(myDat, Len(CStr(myDat)) - InStrRev(myDat, SEP))
DA = Left(myDat, InStr(1, myDat, SEP) - 1)
Cells(a, c) = DateSerial(2000 + DA, Mo, Dar)
End If
Next c
Next a
End Sub

Sub DariDa(s)
Dim a As Integer
Dim c As Integer
Dim DA As Integer
Dim Dar As Integer
Dim Mo As Integer
For a = 4 To b
For c = sd To sd + 1
myDat = Cells(a, c)
If Len(myDat) > 4 And Len(myDat) < 9 Then
Mo = Mid(myDat, InStr(1, myDat, SEP) + 1, InStrRev(myDat, SEP) - InStr(1, myDat, SEP) - 1)
Dar = Right(myDat, Len(CStr(myDat)) - InStrRev(myDat, SEP))
DA = Left(myDat, InStr(1, myDat, SEP) - 1)
Cells(a, c) = DateSerial(2000 + Dar, Mo, DA)
End If
Next c
Next a
End Sub


Sub FormatS()
Dim Cent
Cent = xlCenter
Application.StatusBar = "Sprawdza format danych. Czekaj"
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets("Sprzeda|fffd|").Select
ActiveSheet.Unprotect

Columns("AI:BJ").Select
    Selection.Replace What:=".", Replacement:=",", Lookat:=xlPart, _
        searchorder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
DoEvents
For a = 35 To 62
Columns(a).Select
    Selection.TextToColumns Destination:=Cells(1, a), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
        :=Array(1, 1), TrailingMinusNumbers:=True
Next
DoEvents
    Columns("A:A").Select
    Selection.NumberFormat = "General"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

    Columns("B:C").Select
    Selection.NumberFormat = "@"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

    Columns("D:E").Select
    Selection.NumberFormat = "@"
    With Selection
        .HorizontalAlignment = xlLeft
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

    Columns("F:G").Select
    Selection.NumberFormat = "dd-mm-yyyy"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

    Columns("H:AH").Select
    Selection.NumberFormat = "General"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

    Columns("AI:BJ").Select
    Selection.NumberFormat = "#,##0.00"
    With Selection
        .HorizontalAlignment = xlRight
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False

    Rows("1:1").Select
    With Selection
        .HorizontalAlignment = Cent
    End With
    Selection.Locked = True
    Selection.FormulaHidden = False
    Rows("2:2").Select
    Selection.HorizontalAlignment = xlRight
    Selection.Locked = True
    Selection.FormulaHidden = False

    Rows("3:3").Select
    With Selection
        .HorizontalAlignment = Cent
        .VerticalAlignment = Cent
    End With
    Range("H3:AH3").HorizontalAlignment = xlLeft
    Selection.Locked = False
    Selection.FormulaHidden = False

Range("A4").Select
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
DoEvents
Application.StatusBar = False
End Sub

Sub FormatZ()
Dim Cent
Cent = xlCenter
Application.StatusBar = "Sprawdza format danych. Czekaj"
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.Calculation = xlCalculationManual
Sheets("Zakupy").Select
ActiveSheet.Unprotect

For a = 11 To 19
    Columns(a).Select
    Selection.Replace What:=".", Replacement:=",", Lookat:=xlPart, _
        searchorder:=xlByRows, MatchCase:=False, SearchFormat:=False, _
        ReplaceFormat:=False
    Selection.TextToColumns Destination:=Cells(1, a), DataType:=xlDelimited, _
        TextQualifier:=xlNone, ConsecutiveDelimiter:=False, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
        :=Array(1, 1), TrailingMinusNumbers:=True
Next
DoEvents
    Columns("A:A").Select
    Selection.NumberFormat = "General"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    Columns("B:c").Select
    Selection.NumberFormat = "@"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
    Columns("D:E").Select
    Selection.NumberFormat = "@"
    With Selection
        .HorizontalAlignment = xlLeft
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    Columns("F:G").Select
    Selection.NumberFormat = "dd-mm-yyyy"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    
    Columns("H").Select
    Selection.NumberFormat = "@"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    Columns("I:J").Select
    Selection.NumberFormat = "General"
    With Selection
        .HorizontalAlignment = Cent
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    Selection.FormulaHidden = False
    Columns("K:S").Select
    Selection.NumberFormat = "#,##0.00"
    With Selection
        .HorizontalAlignment = xlRight
        .ShrinkToFit = True
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
    Rows("1:1").Select
    With Selection
        .HorizontalAlignment = Cent
    End With
    Selection.Locked = True
    Selection.FormulaHidden = False
    Rows("2:2").Select
    Selection.HorizontalAlignment = xlRight
    Selection.Locked = True
    Selection.FormulaHidden = False
    
    Rows("3:3").Select
    With Selection
        .HorizontalAlignment = Cent
        .VerticalAlignment = Cent
    End With
    Selection.Locked = False
    Selection.FormulaHidden = False
Range("A4").Select
Application.EnableEvents = True
Application.Calculation = xlCalculationAutomatic
    ActiveSheet.Protect DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowInsertingRows:=True, AllowInsertingHyperlinks:=True, _
        AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True
    ActiveSheet.EnableSelection = xlNoRestrictions
DoEvents
Application.StatusBar = False
End Sub
Attribute VB_Name = "Wydruk"
Attribute VB_Base = "0{C3F730C7-B513-4506-905E-E1760B98ACA3}{0E7820D9-7243-47EE-BF2D-CD3037406C9D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton1_Click()
Opt2.Value = True
Application.SendKeys "{tab}{tab}{tab}~"
Application.Dialogs(xlDialogPrinterSetup).Show
End Sub

Private Sub OK_Click()
Dim a As Integer
Unload Me
If Opt1.Value = True Then
    For a = 1 To LStr Step 2
    ActiveWindow.SelectedSheets.PrintOut From:=a, To:=a
    Next
If LStr = 2 Then
MsgBox "W|fffd||fffd| odpowiednio kartk|fffd| do podajnika i drukuj drug|fffd| stron|fffd|", 64, "Drukuj formularz dwustronnie"
ActiveWindow.SelectedSheets.PrintOut From:=2, To:=2
Else
Wydruk2.Show
End If
End If
If Opt2.Value = True Then ActiveWindow.SelectedSheets.PrintOut
End Sub

Private Sub Anuluj_Click()
Unload Me
End Sub

Private Sub UserForm_Initialize()
ActiveWorkbook.Colors(19) = RGB(255, 255, 255)
If Val(Application.Version) > 11 Then
LStr = ActiveSheet.PageSetup.Pages.Count
Else
LStr = ExecuteExcel4Macro("get.document(50)")
End If
If LStr = 1 Then
Unload Me
ActiveWindow.SelectedSheets.PrintOut
End
End If
End Sub

Attribute VB_Name = "Wydruk2"
Attribute VB_Base = "0{DC5213DD-F913-4CA1-8C58-2A2AD4E57950}{B19831F7-E254-4515-97F4-4F196D28BB4D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

    
Private Sub OK_Click()
Dim a As Integer, b As Integer
Unload Me
b = 0
If LStr Mod 2 Then
    b = 1
    Range("B4").PrintOut
End If

If Opt1.Value = True Then
    For a = LStr - b To 2 Step -2
    ActiveWindow.SelectedSheets.PrintOut From:=a, To:=a
    Next
End If
If Opt2.Value = True Then
    For a = 2 To LStr - b Step 2
    ActiveWindow.SelectedSheets.PrintOut From:=a, To:=a
    Next
End If
End Sub

Private Sub Anuluj_Click()
Unload Me
End Sub

Private Sub UserForm_Click()

End Sub

Attribute VB_Name = "XML"
Option Private Module
Public LStr As Integer
Public eDek As Integer, ePod As Integer
Public Nplik As String


Sub Doxml()
Dim P(79)
Dim a As Long, b As Long, d As Long, Dpl, Wer
Dim c As Integer
Dim rngCell As Range
Dim PR As Object
Dim binaryStream As Object
Dim ProgressBar As New ProgressBar

Application.EnableCancelKey = xlErrorHandler
On Error GoTo KONIEC: vbLeft

Sheets("VAT-7").Select
Application.ScreenUpdating = False
[D37] = Now

P(1) = [C7]
P(2) = [E28] 'imie
P(3) = [E29] 'dataur
P(4) = [P11]
P(5) = [U11]
P(6) = [AG18]
P(7) = [AG1]
P(8) = [AG2]
P(9) = [E27]
P(10) = [T34]
P(11) = [T36]
P(12) = [T38]
P(13) = [T40]
P(14) = [T42]
P(15) = [T44]
P(16) = [Z44]
P(17) = [T46]
P(18) = [Z46]
P(19) = [T48]
P(20) = [Z48]
P(21) = [T50]
P(22) = [T52]
P(23) = [T54]
P(24) = [Z54]
P(25) = [T56]
P(26) = [Z56]
P(27) = [T58]
P(28) = [Z58]
P(29) = [T61]
P(30) = [Z61]
P(31) = [T63]
P(32) = [Z63]
P(33) = [Z65]
P(34) = [Z67]
P(35) = [Z76]
P(36) = [Z78]
P(37) = [T80]
P(38) = [Z80]
P(39) = [Z86]
P(40) = [S90]
P(41) = [Z90]
P(42) = [S92]
P(43) = [Z92]
P(44) = [Z95]
P(45) = [Z97]
P(46) = [Z99]
P(47) = [Z101]
P(48) = [Z103]
P(49) = [Z107]
P(50) = [Z110]
P(51) = [Z113]
P(52) = [Z116]
P(53) = [Z118]
P(54) = [Z121]
P(55) = [AG3]
P(56) = [AG4]
P(57) = [AG5]
P(58) = [AG6]
P(59) = [AG7]
P(60) = [U129]
P(61) = [I131]
P(62) = [Z133]
P(63) = [AG8]
P(64) = [AG9]
P(65) = [AG10]
P(66) = [AG11]
P(67) = [AG12]
P(68) = [T151]
P(69) = [Z151]
P(70) = [D155]
P(71) = [N157]
P(72) = [N158]
P(73) = [AA157]
P(74) = [AA158]
P(75) = [D162]
P(76) = [N162]
P(77) = [X162]
P(78) = [D164]
P(79) = CStr(Format(Now, "yyyy-MM-ddThh:mm:ss"))
Range("V164") = P(79)

Sheets("Sprzeda|fffd|").Select
Tabela (ActiveSheet.Name)
Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
False, SearchFormat:=False)
b = rngCell.Row
If b > 1 Then b = b - 1
Sheets("Zakupy").Select
Tabela (ActiveSheet.Name)
Set rngCell = Cells.Find(What:="*", After:=Cells(1, 1), LookIn:=xlFormulas, Lookat _
:=xlPart, searchorder:=xlByRows, searchdirection:=xlPrevious, MatchCase:= _
False, SearchFormat:=False)
d = rngCell.Row
If d > 1 Then d = d - 1
Sheets("VAT-7").Select
Set PR = CreateObject("ADODB.Stream")
PR.Open
PR.Position = 0
PR.Charset = "UTF-8"

PR.WriteText "<?xml version=""1.0"" encoding=""UTF-8""?>" & vbNewLine
PR.WriteText "<JPK xmlns=""http://jpk.mf.gov.pl/wzor/2019/10/16/10167/"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:etd=""http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2018/08/24/eD/DefinicjeTypy/"">" & vbNewLine

PR.WriteText "<Naglowek>" & vbNewLine
PR.WriteText "<KodFormularza kodSystemowy=""JPK_V7M (1)"" wersjaSchemy=""1-0"">JPK_VAT</KodFormularza>" & vbNewLine
PR.WriteText "<WariantFormularza>1</WariantFormularza>" & vbNewLine
PR.WriteText "<DataWytworzeniaJPK>" & P(79) & "</DataWytworzeniaJPK>" & vbNewLine
PR.WriteText "<NazwaSystemu>" & ZN(P(70)) & "</NazwaSystemu>" & vbNewLine
PR.WriteText "<CelZlozenia poz=""P_7"">" & P(7) & "</CelZlozenia>" & vbNewLine
PR.WriteText "<KodUrzedu>" & P(6) & "</KodUrzedu>" & vbNewLine
PR.WriteText "<Rok>" & P(5) & "</Rok>" & vbNewLine
PR.WriteText "<Miesiac>" & P(4) & "</Miesiac>" & vbNewLine
If JPKVAT = 1 Then
PR.WriteText "<KodFormularzaDekl kodPodatku=""VAT"" kodSystemowy=""VAT-7 (21)"" rodzajZobowiazania=""Z"" wersjaSchemy=""1-0E"">VAT-7</KodFormularzaDekl>" & vbNewLine
PR.WriteText "<WariantFormularzaDekl>21</WariantFormularzaDekl>" & vbNewLine
End If
PR.WriteText "</Naglowek>" & vbNewLine


PR.WriteText "<Podmiot1 rola=""Podatnik"">" & vbNewLine
If P(8) = 1 Then
PR.WriteText "<OsobaNiefizyczna>" & vbNewLine
PR.WriteText "<NIP>" & P(1) & "</NIP>" & vbNewLine
PR.WriteText "<PelnaNazwa>" & ZN(P(9)) & "</PelnaNazwa>" & vbNewLine
PR.WriteText "<Email>" & ZN(P(78)) & "</Email>" & vbNewLine
If P(77) <> "" Then PR.WriteText "<Telefon>" & ZN(P(77)) & "</Telefon>" & vbNewLine
PR.WriteText "</OsobaNiefizyczna>" & vbNewLine
Else
PR.WriteText "<OsobaFizyczna>" & vbNewLine
PR.WriteText "<etd:NIP>" & P(1) & "</etd:NIP>" & vbNewLine
PR.WriteText "<etd:ImiePierwsze>" & ZN(P(2)) & "</etd:ImiePierwsze>" & vbNewLine
PR.WriteText "<etd:Nazwisko>" & ZN(P(9)) & "</etd:Nazwisko>" & vbNewLine
PR.WriteText "<etd:DataUrodzenia>" & DATAA(P(3)) & "</etd:DataUrodzenia>" & vbNewLine
PR.WriteText "<Email>" & ZN(P(78)) & "</Email>" & vbNewLine
If P(77) <> "" Then PR.WriteText "<Telefon>" & ZN(P(77)) & "</Telefon>" & vbNewLine
PR.WriteText "</OsobaFizyczna>" & vbNewLine
End If
PR.WriteText "</Podmiot1>" & vbNewLine

If JPKVAT = 1 Then
PR.WriteText "<Deklaracja>" & vbNewLine
PR.WriteText "<PozycjeSzczegolowe>" & vbNewLine

For a = 10 To 69
Select Case a
Case 10, 21, 22, 33, 34, 35, 36, 39, 44 To 50, 52, 53, 62 To 69
If P(a) <> 0 Then PR.WriteText "<P_" & a & ">" & UL(P(a)) & "</P_" & a & ">" & vbNewLine

Case 11, 13
If P(a) <> "" Then
PR.WriteText "<P_" & a & ">" & UL(P(a)) & "</P_" & a & ">" & vbNewLine
If P(a + 1) <> 0 Then PR.WriteText "<P_" & a + 1 & ">" & UL(P(a + 1)) & "</P_" & a + 1 & ">" & vbNewLine
End If

Case 15, 17, 19, 23, 25, 27, 29, 31, 40, 42
If P(a) <> "" Or P(a + 1) <> "" Then
PR.WriteText "<P_" & a & ">" & UL(P(a)) & "</P_" & a & ">" & vbNewLine
PR.WriteText "<P_" & a + 1 & ">" & UL(P(a + 1)) & "</P_" & a + 1 & ">" & vbNewLine
End If

Case 37
If P(a + 1) <> "" Then
If P(a) <> 0 Then PR.WriteText "<P_" & a & ">" & UL(P(a)) & "</P_" & a & ">" & vbNewLine
PR.WriteText "<P_" & a + 1 & ">" & UL(P(a + 1)) & "</P_" & a + 1 & ">" & vbNewLine
End If

Case 51
PR.WriteText "<P_" & a & ">" & UL(P(a)) & "</P_" & a & ">" & vbNewLine

Case 54
If P(a) > 0 Then
PR.WriteText "<P_" & a & ">" & UL(P(a)) & "</P_" & a & ">" & vbNewLine
If P(a + 1) = 1 Then PR.WriteText "<P_" & a + 1 & ">" & UL(P(a + 1)) & "</P_" & a + 1 & ">" & vbNewLine
If P(a + 2) = 1 Then PR.WriteText "<P_" & a + 2 & ">" & UL(P(a + 2)) & "</P_" & a + 2 & ">" & vbNewLine
If P(a + 3) = 1 Then PR.WriteText "<P_" & a + 3 & ">" & UL(P(a + 3)) & "</P_" & a + 3 & ">" & vbNewLine
If P(a + 4) = 1 Then PR.WriteText "<P_" & a + 4 & ">" & UL(P(a + 4)) & "</P_" & a + 4 & ">" & vbNewLine
End If

Case 60
If P(a) > 0 Then
PR.WriteText "<P_" & a - 1 & ">" & UL(P(a - 1)) & "</P_" & a - 1 & ">" & vbNewLine
PR.WriteText "<P_" & a & ">" & UL(P(a)) & "</P_" & a & ">" & vbNewLine
PR.WriteText "<P_" & a + 1 & ">" & ZN(P(a + 1)) & "</P_" & a + 1 & ">" & vbNewLine
End If

End Select
Next

PR.WriteText "</PozycjeSzczegolowe>" & vbNewLine
PR.WriteText "<Pouczenia>1</Pouczenia>" & vbNewLine
PR.WriteText "</Deklaracja>" & vbNewLine

End If

'SPRZEDA|fffd|
If b > 3 Then
With Sheets("Sprzeda|fffd|")
For a = 4 To b
Call ProgressBar.Update(a, b, "Sprzeda|fffd| do XML", True)
PR.WriteText "<SprzedazWiersz>" & vbNewLine
PR.WriteText "<LpSprzedazy>" & ZN(.Cells(a, 1)) & "</LpSprzedazy>" & vbNewLine
If .Cells(a, 2) <> "" Then PR.WriteText "<KodKrajuNadaniaTIN>" & ZN(.Cells(a, 2)) & "</KodKrajuNadaniaTIN>" & vbNewLine
PR.WriteText "<NrKontrahenta>" & ZN(.Cells(a, 3)) & "</NrKontrahenta>" & vbNewLine
PR.WriteText "<NazwaKontrahenta>" & ZN(.Cells(a, 4)) & "</NazwaKontrahenta>" & vbNewLine
PR.WriteText "<DowodSprzedazy>" & ZN(.Cells(a, 5)) & "</DowodSprzedazy>" & vbNewLine
PR.WriteText "<DataWystawienia>" & DATAO(.Cells(a, 6)) & "</DataWystawienia>" & vbNewLine
If .Cells(a, 7) <> "" Then PR.WriteText "<DataSprzedazy>" & DATAO(.Cells(a, 7)) & "</DataSprzedazy>" & vbNewLine

If .Cells(a, 8) <> "" Then PR.WriteText "<GTU_01>" & UL(.Cells(a, 8)) & "</GTU_01>" & vbNewLine
If .Cells(a, 9) <> "" Then PR.WriteText "<GTU_02>" & UL(.Cells(a, 9)) & "</GTU_02>" & vbNewLine
If .Cells(a, 10) <> "" Then PR.WriteText "<GTU_03>" & UL(.Cells(a, 10)) & "</GTU_03>" & vbNewLine
If .Cells(a, 11) <> "" Then PR.WriteText "<GTU_04>" & UL(.Cells(a, 11)) & "</GTU_04>" & vbNewLine
If .Cells(a, 12) <> "" Then PR.WriteText "<GTU_05>" & UL(.Cells(a, 12)) & "</GTU_05>" & vbNewLine
If .Cells(a, 13) <> "" Then PR.WriteText "<GTU_06>" & UL(.Cells(a, 13)) & "</GTU_06>" & vbNewLine
If .Cells(a, 14) <> "" Then PR.WriteText "<GTU_07>" & UL(.Cells(a, 14)) & "</GTU_07>" & vbNewLine
If .Cells(a, 15) <> "" Then PR.WriteText "<GTU_08>" & UL(.Cells(a, 15)) & "</GTU_08>" & vbNewLine
If .Cells(a, 16) <> "" Then PR.WriteText "<GTU_09>" & UL(.Cells(a, 16)) & "</GTU_09>" & vbNewLine
If .Cells(a, 17) <> "" Then PR.WriteText "<GTU_10>" & UL(.Cells(a, 17)) & "</GTU_10>" & vbNewLine
If .Cells(a, 18) <> "" Then PR.WriteText "<GTU_11>" & UL(.Cells(a, 18)) & "</GTU_11>" & vbNewLine
If .Cells(a, 19) <> "" Then PR.WriteText "<GTU_12>" & UL(.Cells(a, 19)) & "</GTU_12>" & vbNewLine
If .Cells(a, 20) <> "" Then PR.WriteText "<GTU_13>" & UL(.Cells(a, 20)) & "</GTU_13>" & vbNewLine

If .Cells(a, 21) <> "" Then PR.WriteText "<SW>" & UL(.Cells(a, 21)) & "</SW>" & vbNewLine
If .Cells(a, 22) <> "" Then PR.WriteText "<EE>" & UL(.Cells(a, 22)) & "</EE>" & vbNewLine
If .Cells(a, 23) <> "" Then PR.WriteText "<TP>" & UL(.Cells(a, 23)) & "</TP>" & vbNewLine
If .Cells(a, 24) <> "" Then PR.WriteText "<TT_WNT>" & UL(.Cells(a, 24)) & "</TT_WNT>" & vbNewLine
If .Cells(a, 25) <> "" Then PR.WriteText "<TT_D>" & UL(.Cells(a, 25)) & "</TT_D>" & vbNewLine
If .Cells(a, 26) <> "" Then PR.WriteText "<MR_T>" & UL(.Cells(a, 26)) & "</MR_T>" & vbNewLine
If .Cells(a, 27) <> "" Then PR.WriteText "<MR_UZ>" & UL(.Cells(a, 27)) & "</MR_UZ>" & vbNewLine
If .Cells(a, 28) <> "" Then PR.WriteText "<I_42>" & UL(.Cells(a, 28)) & "</I_42>" & vbNewLine
If .Cells(a, 29) <> "" Then PR.WriteText "<I_63>" & UL(.Cells(a, 29)) & "</I_63>" & vbNewLine
If .Cells(a, 30) <> "" Then PR.WriteText "<B_SPV>" & UL(.Cells(a, 30)) & "</B_SPV>" & vbNewLine
If .Cells(a, 31) <> "" Then PR.WriteText "<B_SPV_DOSTAWA>" & UL(.Cells(a, 31)) & "</B_SPV_DOSTAWA>" & vbNewLine
If .Cells(a, 32) <> "" Then PR.WriteText "<B_MPV_PROWIZJA>" & UL(.Cells(a, 32)) & "</B_MPV_PROWIZJA>" & vbNewLine
If .Cells(a, 33) <> "" Then PR.WriteText "<MPP>" & UL(.Cells(a, 33)) & "</MPP>" & vbNewLine
If .Cells(a, 34) <> "" Then PR.WriteText "<KorektaPodstawyOpodt>" & UL(.Cells(a, 34)) & "</KorektaPodstawyOpodt>" & vbNewLine

If .Cells(a, 35) <> 0 Then PR.WriteText "<K_10>" & UT(.Cells(a, 35)) & "</K_10>" & vbNewLine
If .Cells(a, 36) <> 0 Then PR.WriteText "<K_11>" & UT(.Cells(a, 36)) & "</K_11>" & vbNewLine
If .Cells(a, 37) <> 0 Then PR.WriteText "<K_12>" & UT(.Cells(a, 37)) & "</K_12>" & vbNewLine
If .Cells(a, 38) <> 0 Then PR.WriteText "<K_13>" & UT(.Cells(a, 38)) & "</K_13>" & vbNewLine
If .Cells(a, 39) <> 0 Then PR.WriteText "<K_14>" & UT(.Cells(a, 39)) & "</K_14>" & vbNewLine
If Abs(.Cells(a, 40)) + Abs(.Cells(a, 41)) > 0 Then
    PR.WriteText "<K_15>" & UT(.Cells(a, 40)) & "</K_15>" & vbNewLine
    PR.WriteText "<K_16>" & UT(.Cells(a, 41)) & "</K_16>" & vbNewLine
End If
If Abs(.Cells(a, 42)) + Abs(.Cells(a, 43)) > 0 Then
    PR.WriteText "<K_17>" & UT(.Cells(a, 42)) & "</K_17>" & vbNewLine
    PR.WriteText "<K_18>" & UT(.Cells(a, 43)) & "</K_18>" & vbNewLine
End If
If Abs(.Cells(a, 44)) + Abs(.Cells(a, 45)) > 0 Then
    PR.WriteText "<K_19>" & UT(.Cells(a, 44)) & "</K_19>" & vbNewLine
    PR.WriteText "<K_20>" & UT(.Cells(a, 45)) & "</K_20>" & vbNewLine
End If
If .Cells(a, 46) <> 0 Then PR.WriteText "<K_21>" & UT(.Cells(a, 46)) & "</K_21>" & vbNewLine
If .Cells(a, 47) <> 0 Then PR.WriteText "<K_22>" & UT(.Cells(a, 47)) & "</K_22>" & vbNewLine
If Abs(.Cells(a, 48)) + Abs(.Cells(a, 49)) > 0 Then
    PR.WriteText "<K_23>" & UT(.Cells(a, 48)) & "</K_23>" & vbNewLine
    PR.WriteText "<K_24>" & UT(.Cells(a, 49)) & "</K_24>" & vbNewLine
End If
If Abs(.Cells(a, 50)) + Abs(.Cells(a, 51)) > 0 Then
    PR.WriteText "<K_25>" & UT(.Cells(a, 50)) & "</K_25>" & vbNewLine
    PR.WriteText "<K_26>" & UT(.Cells(a, 51)) & "</K_26>" & vbNewLine
End If
If Abs(.Cells(a, 52)) + Abs(.Cells(a, 53)) > 0 Then
    PR.WriteText "<K_27>" & UT(.Cells(a, 52)) & "</K_27>" & vbNewLine
    PR.WriteText "<K_28>" & UT(.Cells(a, 53)) & "</K_28>" & vbNewLine
End If
If Abs(.Cells(a, 54)) + Abs(.Cells(a, 55)) > 0 Then
    PR.WriteText "<K_29>" & UT(.Cells(a, 54)) & "</K_29>" & vbNewLine
    PR.WriteText "<K_30>" & UT(.Cells(a, 55)) & "</K_30>" & vbNewLine
End If
If Abs(.Cells(a, 56)) + Abs(.Cells(a, 57)) > 0 Then
    PR.WriteText "<K_31>" & UT(.Cells(a, 56)) & "</K_31>" & vbNewLine
    PR.WriteText "<K_32>" & UT(.Cells(a, 57)) & "</K_32>" & vbNewLine
End If
If .Cells(a, 58) <> 0 Then PR.WriteText "<K_33>" & UT(.Cells(a, 58)) & "</K_33>" & vbNewLine
If .Cells(a, 59) <> 0 Then PR.WriteText "<K_34>" & UT(.Cells(a, 59)) & "</K_34>" & vbNewLine
If .Cells(a, 60) <> 0 Then PR.WriteText "<K_35>" & UT(.Cells(a, 60)) & "</K_35>" & vbNewLine
If .Cells(a, 61) <> 0 Then PR.WriteText "<K_36>" & UT(.Cells(a, 61)) & "</K_36>" & vbNewLine
If .Cells(a, 62) <> 0 Then PR.WriteText "<SprzedazVAT_Marza>" & UT(.Cells(a, 62)) & "</SprzedazVAT_Marza>" & vbNewLine

PR.WriteText "</SprzedazWiersz>" & vbNewLine
Next a
End With

If P(71) > 0 Then
    PR.WriteText "<SprzedazCtrl>" & vbNewLine
    PR.WriteText "<LiczbaWierszySprzedazy>" & UL(P(71)) & "</LiczbaWierszySprzedazy>" & vbNewLine
    PR.WriteText "<PodatekNalezny>" & UT(P(72)) & "</PodatekNalezny>" & vbNewLine
    PR.WriteText "</SprzedazCtrl>" & vbNewLine
End If
End If

'ZAKUP
If d > 3 Then
With Sheets("Zakupy")
For a = 4 To d
Call ProgressBar.Update(a, d, "Zakupy do XML", True)
PR.WriteText "<ZakupWiersz>" & vbNewLine
PR.WriteText "<LpZakupu>" & ZN(.Cells(a, 1)) & "</LpZakupu>" & vbNewLine
If .Cells(a, 2) <> "" Then PR.WriteText "<KodKrajuNadaniaTIN>" & ZN(.Cells(a, 2)) & "</KodKrajuNadaniaTIN>" & vbNewLine
PR.WriteText "<NrDostawcy>" & ZN(.Cells(a, 3)) & "</NrDostawcy>" & vbNewLine
PR.WriteText "<NazwaDostawcy>" & ZN(.Cells(a, 4)) & "</NazwaDostawcy>" & vbNewLine
PR.WriteText "<DowodZakupu>" & ZN(.Cells(a, 5)) & "</DowodZakupu>" & vbNewLine
PR.WriteText "<DataZakupu>" & DATAO(.Cells(a, 6)) & "</DataZakupu>" & vbNewLine
If .Cells(a, 7) <> "" Then PR.WriteText "<DataWplywu>" & DATAO(.Cells(a, 7)) & "</DataWplywu>" & vbNewLine
If .Cells(a, 8) <> "" Then PR.WriteText "<DokumentZakupu>" & ZN(.Cells(a, 8)) & "</DokumentZakupu>" & vbNewLine

If .Cells(a, 9) <> "" Then PR.WriteText "<MPP>" & UL(.Cells(a, 9)) & "</MPP>" & vbNewLine
If .Cells(a, 10) <> "" Then PR.WriteText "<IMP>" & UL(.Cells(a, 10)) & "</IMP>" & vbNewLine

If Abs(.Cells(a, 11)) + Abs(.Cells(a, 12)) > 0 Then
    PR.WriteText "<K_40>" & UT(.Cells(a, 11)) & "</K_40>" & vbNewLine
    PR.WriteText "<K_41>" & UT(.Cells(a, 12)) & "</K_41>" & vbNewLine
End If
If Abs(.Cells(a, 13)) + Abs(.Cells(a, 14)) > 0 Then
    PR.WriteText "<K_42>" & UT(.Cells(a, 13)) & "</K_42>" & vbNewLine
    PR.WriteText "<K_43>" & UT(.Cells(a, 14)) & "</K_43>" & vbNewLine
End If
If .Cells(a, 15) <> 0 Then PR.WriteText "<K_44>" & UT(.Cells(a, 15)) & "</K_44>" & vbNewLine
If .Cells(a, 16) <> 0 Then PR.WriteText "<K_45>" & UT(.Cells(a, 16)) & "</K_45>" & vbNewLine
If .Cells(a, 17) <> 0 Then PR.WriteText "<K_46>" & UT(.Cells(a, 17)) & "</K_46>" & vbNewLine
If .Cells(a, 18) <> 0 Then PR.WriteText "<K_47>" & UT(.Cells(a, 18)) & "</K_47>" & vbNewLine
If .Cells(a, 19) <> 0 Then PR.WriteText "<ZakupVAT_Marza>" & UT(.Cells(a, 19)) & "</ZakupVAT_Marza>" & vbNewLine
PR.WriteText "</ZakupWiersz>" & vbNewLine
Next a
End With

If P(73) > 0 Then
    PR.WriteText "<ZakupCtrl>" & vbNewLine
    PR.WriteText "<LiczbaWierszyZakupow>" & UL(P(73)) & "</LiczbaWierszyZakupow>" & vbNewLine
    PR.WriteText "<PodatekNaliczony>" & UT(P(74)) & "</PodatekNaliczony>" & vbNewLine
    PR.WriteText "</ZakupCtrl>" & vbNewLine
End If
End If
PR.WriteText "</JPK>"

Set binaryStream = CreateObject("ADODB.Stream")
binaryStream.Type = 1
binaryStream.Mode = 3
binaryStream.Open
'Skip BOM bytes
PR.Position = 3
PR.CopyTo binaryStream
PR.flush
PR.Close
binaryStream.SaveToFile Nplik, 2
binaryStream.Close
Set PR = Nothing

Zam = MsgBox("Plik XML zapisany pod nazw|fffd|:" & vbCrLf & vbCrLf & Nplik & vbCrLf & vbCrLf & _
"Czy sprawdzi|fffd| poprawno|fffd||fffd| utworzonego pliku" & vbCrLf & "ze schematem XSD na stronie Ministerstwa Finans|fffd|w?" & vbCrLf & vbCrLf & _
"Je|fffd|eli sprawdzenie potrwa zbyt d|fffd|ugo przytrzymaj ESC aby przerwa|fffd|.", 68, "")
If Zam = 6 Then XSDValid3 (Nplik)

Exit Sub

KONIEC:
Application.StatusBar = False
If Err = 18 Then
   If Dir(Nplik) <> "" Then Kill Nplik
   MsgBox "Przerwano na |fffd|yczenie u|fffd|ytkownika.", 64, ""
Else
   If Dir(Nplik) <> "" Then Kill Nplik
   MsgBox "B|fffd||fffd|d. Zapis do pliku JPK przerwany.", 64, ""
End If
End Sub

Attribute VB_Name = "Zakupy"
Attribute VB_Base = "0{74B32ACD-765C-43F5-A325-E299A87884C7}{A62C83CE-C340-4C2F-8CED-2416E61CCF25}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
CheckBox1.Value = False
CheckBox2.Value = False
CheckBox3.Value = False
CheckBox4.Value = False
CheckBox5.Value = False
CheckBox6.Value = False
CheckBox7.Value = False
CheckBox8.Value = False
CheckBox9.Value = False
CheckBox10.Value = False
CheckBox11.Value = False
CheckBox12.Value = False
End Sub


Private Sub CommandButton4_Click()
Application.ScreenUpdating = False
ActiveSheet.Unprotect


If CheckBox1.Value = True Then
Columns(2).EntireColumn.Hidden = True
Else
Columns(2).EntireColumn.Hidden = False
End If

If CheckBox2.Value = True Then
Columns(7).EntireColumn.Hidden = True
Else
Columns(7).EntireColumn.Hidden = False
End If

If CheckBox3.Value = True Then
Columns(8).EntireColumn.Hidden = True
Else
Columns(8).EntireColumn.Hidden = False
End If

If CheckBox4.Value = True Then
Columns(9).EntireColumn.Hidden = True
Else
Columns(9).EntireColumn.Hidden = False
End If

If CheckBox5.Value = True Then
Columns(10).EntireColumn.Hidden = True
Else
Columns(10).EntireColumn.Hidden = False
End If

If CheckBox6.Value = True Then
Columns(11).EntireColumn.Hidden = True
Columns(12).EntireColumn.Hidden = True
Else
Columns(11).EntireColumn.Hidden = False
Columns(12).EntireColumn.Hidden = False
End If

If CheckBox7.Value = True Then
Columns(13).EntireColumn.Hidden = True
Columns(14).EntireColumn.Hidden = True
Else
Columns(13).EntireColumn.Hidden = False
Columns(14).EntireColumn.Hidden = False
End If

If CheckBox8.Value = True Then
Columns(15).EntireColumn.Hidden = True
Else
Columns(15).EntireColumn.Hidden = False
End If

If CheckBox9.Value = True Then
Columns(16).EntireColumn.Hidden = True
Else
Columns(16).EntireColumn.Hidden = False
End If

If CheckBox10.Value = True Then
Columns(17).EntireColumn.Hidden = True
Else
Columns(17).EntireColumn.Hidden = False
End If

If CheckBox11.Value = True Then
Columns(18).EntireColumn.Hidden = True
Else
Columns(18).EntireColumn.Hidden = False
End If

If CheckBox12.Value = True Then
Columns(19).EntireColumn.Hidden = True
Else
Columns(19).EntireColumn.Hidden = False
End If

ActiveSheet.Protect
Unload Me
End Sub

Private Sub CommandButton5_Click()
Unload Me
End Sub

Private Sub MultiPage1_Change()

End Sub

Private Sub UserForm_Initialize()
Dim Box(19) As Boolean
For a = 1 To 19
If Columns(a).EntireColumn.Hidden = True Then
    Box(a) = True
Else
    Box(a) = False
End If
Next

CheckBox1.Value = Box(2)
CheckBox2.Value = Box(7)
CheckBox3.Value = Box(8)
CheckBox4.Value = Box(9)
CheckBox5.Value = Box(10)
CheckBox6.Value = Box(11)
CheckBox7.Value = Box(13)
CheckBox8.Value = Box(15)
CheckBox9.Value = Box(16)
CheckBox10.Value = Box(17)
CheckBox11.Value = Box(18)
CheckBox12.Value = Box(19)
End Sub




' InQuest injected base64 decoded content
' .'3m

INQUEST-PP=macro
