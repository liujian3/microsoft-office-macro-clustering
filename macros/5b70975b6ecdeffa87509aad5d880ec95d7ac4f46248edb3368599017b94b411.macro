Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True




Attribute VB_Name = "Modul1"
Public Const Reg_Teilnehmer = "Participants"
Public Const Reg_Besprechungen = "Meetings"
Public Const Reg_Listen = "Lists"

Public Const Class_1d = "INTERN"
Public Const Class_2d = "STRENG VERTRAULICH"
Public Const Class_3d = "VERTRAULICH"
Public Const Class_4d = "KUNDENBEZOGEN"
Public Const Class_5d = "|fffd|ffentlich"
Public Const Class_1e = "INTERNAL"
Public Const Class_2e = "STRICTLY CONFIDENTIAL"
Public Const Class_3e = "CONFIDENTIAL"
Public Const Class_4e = "CUSTOMER RELATED"
Public Const Class_5e = "PUBLIC"

Public Const alle_AFd = "alle AF"
Public Const alle_AFe = "all OP"

Public Const Obj_Vorlage_d = "Vorlage_doc_d"
Public Const Link_dot_d = "C:\temp\Vorl_Prot_d.dot"
Public Const Obj_Vorlage_e = "Vorlage_doc_e"
Public Const Link_dot_e = "C:\temp\Vorl_Prot_e.dot"

Public Const Teilnehmer_Xd = "X"                     'Teilnehmer "X"
Public Const Teilnehmer_Zd = "Z"                     'Teilnehmer zeitweise "Z"
Public Const Teilnehmer_Vd = "V"                     'Verteiler "V"
Public Const Teilnehmer_Xe = "X"                     'Teilnehmer "X"
Public Const Teilnehmer_Ze = "P"                     'Teilnehmer zeitweise "Z"
Public Const Teilnehmer_Ve = "D"                     'Verteiler "V"

Public Const Erste_Zeile = 12

    Public Spalte_Name As Integer
    Public Spalte_Firma As Integer
    Public Spalte_Anwesend As Integer
    Public Zeile_Teilnehmer   As Integer
    
    'Spalten im Register OIL zuordnen
    Public Spalte_Aenderung   As Integer
    Public Spalte_Status   As Integer
    Public Spalte_Approved   As Integer
    Public Spalte_Abgeschl   As Integer
    Public Spalte_Ergebnis   As Integer
    Public Spalte_Erlbis   As Integer
    Public Spalte_ZusN   As Integer
    Public Spalte_ZusF   As Integer
    Public Spalte_Aktion   As Integer
    Public Spalte_Beschr As Integer
    Public Spalte_Bespr   As Integer
    Public Spalte_OP   As Integer
    Public Spalte_Kat   As Integer
    Public Spalte_Nr As Integer






Sub Besprechungsprotokoll_erstellen()
    init_OPL
    Select Case Range("Sprache").Value
    Case "Deutsch"
        UserForm1.Label1.Caption = "Besprechung:"
        UserForm1.CommandButton_Start.Caption = "Protokoll erzeugen"
    Case Else
        UserForm1.Label1.Caption = "Meeting:"
        UserForm1.CommandButton_Start.Caption = "create Meeting Minutes"
    End Select
    UserForm1.Show
    
    
    
End Sub

Private Sub init_OPL()
    Spalte_Name = 3
    Spalte_Firma = 4
    Spalte_Anwesend = 10
    Zeile_Teilnehmer = 5
    
    'Spalten im Register OIL zuordnen
    Spalte_Aenderung = Range("Aender").Cells.Column
    Spalte_Status = Range("Stat").Cells.Column
    Spalte_Approved = Range("DatGen").Cells.Column
    Spalte_Abgeschl = Range("DatAbge").Cells.Column
    Spalte_Ergebnis = Range("Ergebnis").Cells.Column
    Spalte_Erlbis = Range("Erlbis").Cells.Column
    Spalte_ZusN = Range("ZustN").Cells.Column
    Spalte_ZusF = Range("ZustF").Cells.Column
    Spalte_Aktion = Range("Aktion").Cells.Column
    Spalte_Beschr = Range("Beschr").Cells.Column
    Spalte_Bespr = Range("Bespr").Cells.Column
    Spalte_OP = Range("OP").Cells.Column
    Spalte_Kat = Range("Kat").Cells.Column
    Spalte_Nr = Range("No").Cells.Column
    
End Sub




Sub Besprechungsprotokoll_erstellen_aktion()

On Error GoTo Fehler_Code1

    Dim appWord As Object
    Set appWord = CreateObject("Word.Application")
    Dim docTest As Object
    Dim Fehler_Code As String
    
Fehler_Code = "Allg"
    
    Dim appExcel As Object
    Set appExcel = ActiveWorkbook.ActiveSheet
    
    
    State_1 = Range("Status1").Value  '"offen"
    State_2 = Range("Status2").Value  '"erledigt"
    State_3 = Range("Status3").Value  '"zur Info"
    State_4 = Range("Status4").Value  '"|fffd|berf|fffd|llig"
    State_5 = Range("Status5").Value  '"f|fffd|llig in 7 Tagen"
    State_6 = Range("Status6").Value  '"pending"
    State_7 = Range("Status7").Value  '"f|fffd|llig in 14 tagen"
    State_8 = Range("Status8").Value  '"pending seit 14 Tagen"
    
    Language = Left(Range("Sprache").Value, 1)
    
'Word Vorlage |fffd|ffnen
Fehler_Code = "Word"
    
    Select Case Language
    Case "D"
        Link_dot = Link_dot_d
        Obj_Vorlage = Obj_Vorlage_d
    Case "E"
        Link_dot = Link_dot_e
        Obj_Vorlage = Obj_Vorlage_e
    Case Else
        Link_dot = Link_dot_d
        Obj_Vorlage = Obj_Vorlage_d
    End Select
    
    
    If Dir(Link_dot) = "" Then
        Sheets(Reg_Listen).Select
        ActiveSheet.Shapes(Obj_Vorlage).Select
        
        With appWord
          Selection.Verb Verb:=xlPrimary
          Select Case Language
          Case "D"
            Set docTest = ActiveSheet.OLEObjects(1)
          Case "E"
            Set docTest = ActiveSheet.OLEObjects(2)
          End Select
          docTest.Object.SaveAs (Link_dot)
          docTest.Object.Close (wdDoNotSaveChanges)
        End With
    End If
    
    
    Set docTest = appWord.Documents.Add(Link_dot)
    
       
    appWord.Visible = True
    
    docTest.Activate
    
    
    ' Cursorposition speichern
    Seite = docTest.ActiveWindow.Selection.Information(wdActiveEndPageNumber)
    Zeile = docTest.ActiveWindow.Selection.Information(wdFirstCharacterLineNumber)
    Steps = docTest.ActiveWindow.Selection.Information(wdFirstCharacterColumnNumber) - 1
    
   
    'Cursor auf 1. Tabellenfeld navigieren
    docTest.ActiveWindow.Selection.MoveDown Unit:=wdLine, Count:=8
    
    
    Zeile_OIL = Erste_Zeile ' Erste Zeile OIL
    docTest.ActiveWindow.Selection.MoveLeft Unit:=wdCell
    
    
    
    
    
'Punkte der Besprechung zur Besprechungsvorlage hinzuf|fffd|gen
Fehler_Code = "Excel_OIL"
    
    appExcel.Activate
    
    Do Until Cells(Zeile_OIL, Spalte_Nr).Value = "EOF" Or Zeile_OIL = 20000
        If Cells(Zeile_OIL, Spalte_Bespr).Value = Range("Auswahl_Besprechung").Value Or _
           UCase(Cells(Zeile_OIL, Spalte_Aenderung).Value) = "X" And Len(Cells(Zeile_OIL, Spalte_Bespr).Value) > 8 Then
            docTest.ActiveWindow.Selection.MoveRight Unit:=wdCell
            docTest.ActiveWindow.Selection.TypeText Text:=Replace(CStr(Cells(Zeile_OIL, Spalte_Nr).Value), ",", ".")
            docTest.ActiveWindow.Selection.MoveRight Unit:=wdCell
            docTest.ActiveWindow.Selection.Font.Underline = True
            docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_Kat).Value
            If Cells(Zeile_OIL, Spalte_OP).Value <> alle_AFd And Cells(Zeile_OIL, Spalte_OP).Value <> alle_AFe Then
                docTest.ActiveWindow.Selection.TypeText Text:=" (" & Cells(Zeile_OIL, Spalte_OP).Value & ")"
            End If
            docTest.ActiveWindow.Selection.TypeText Text:=":"
            docTest.ActiveWindow.Selection.Font.Underline = False
            docTest.ActiveWindow.Selection.TypeParagraph
            'docTest.ActiveWindow.Selection.Paragraphs.Indent
            docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, 5).Value
            docTest.ActiveWindow.Selection.TypeParagraph
            If Cells(Zeile_OIL, Spalte_Aktion).Value <> "" Then
                If Cells(Zeile_OIL, Spalte_Status).Value <> State_3 Then
                    docTest.ActiveWindow.Selection.ParagraphFormat.LeftIndent = appWord.CentimetersToPoints(0.5)
                    docTest.ActiveWindow.Selection.ParagraphFormat.FirstLineIndent = appWord.CentimetersToPoints(-0.5)
                    docTest.ActiveWindow.Selection.InsertSymbol Font:="Wingdings", CharacterNumber:=-3872, Unicode:=True
                    docTest.ActiveWindow.Selection.TypeText Text:=" "
                End If
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_Aktion).Value
                docTest.ActiveWindow.Selection.TypeParagraph
            End If
            If Cells(Zeile_OIL, Spalte_Ergebnis).Value <> "" Then
                docTest.ActiveWindow.Selection.Font.Italic = True
                docTest.ActiveWindow.Selection.InsertSymbol Font:="Wingdings", CharacterNumber:=-3864, Unicode:=True
                docTest.ActiveWindow.Selection.TypeText Text:=" "
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_Ergebnis).Value
                docTest.ActiveWindow.Selection.Font.Italic = False
                docTest.ActiveWindow.Selection.TypeParagraph
            End If
            docTest.ActiveWindow.Selection.MoveRight Unit:=wdCell
            Select Case Cells(Zeile_OIL, Spalte_Status).Value
            Case State_3 'info
                docTest.ActiveWindow.Selection.TypeText Text:=State_3
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusF).Value
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusN).Value
            Case State_1, State_4, State_5, State_7  ' offen, f|fffd|llig in
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusF).Value
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusN).Value
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:=CStr(Cells(Zeile_OIL, Spalte_Erlbis).Value)
            Case State_6, State_8  'Pending
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusF).Value
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusN).Value
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.Font.Italic = True
                docTest.ActiveWindow.Selection.TypeText Text:=State_6
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:="(" & CStr(Cells(Zeile_OIL, Spalte_Abgeschl).Value) & ")"
                docTest.ActiveWindow.Selection.Font.Italic = False
                docTest.ActiveWindow.Selection.TypeParagraph
            Case State_2  'erledigt
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusF).Value
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:=Cells(Zeile_OIL, Spalte_ZusN).Value
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.Font.Italic = True
                docTest.ActiveWindow.Selection.TypeText Text:=State_2
                docTest.ActiveWindow.Selection.TypeParagraph
                docTest.ActiveWindow.Selection.TypeText Text:="(" & CStr(Cells(Zeile_OIL, Spalte_Approved).Value) & ")"
                docTest.ActiveWindow.Selection.Font.Italic = False
                docTest.ActiveWindow.Selection.TypeParagraph
            End Select
        End If
        Zeile_OIL = Zeile_OIL + 1
    Loop
    
       
    'Teilnerliste und Verteiler zusammenstellen
Fehler_Code = "Excel_Teiln"
       
    ReDim Extern(4)
    ReDim Teilnehmer_Extern(4)
    ReDim Teilnehmer_Extern_zw(4)
    ReDim Verteiler_Extern(4)
    
    Kunde = Range("Kunde").Value
    Anzahl_Extern = 0
    i = 1
    
    ' Teilnehmer-Spalte suchen
    Do Until Sheets(Reg_Teilnehmer).Cells(1, i).Value = Range("Auswahl_Besprechung").Value
        i = i + 1
    Loop
    
    ' Teilnehmer der richtigen Gruppe zuteilen
    For j = Zeile_Teilnehmer To 100
        Teiln_Name = Sheets(Reg_Teilnehmer).Cells(j, Spalte_Name)
        If Len(Teiln_Name) > 17 Then
            If InStr(Teiln_Name, " ") > 0 Then
                Teiln_Name = Left(Teiln_Name, InStr(Teiln_Name, " ") + 1) & "."
            End If
        End If
        Select Case UCase(Sheets(Reg_Teilnehmer).Cells(j, i).Value)
        Case Teilnehmer_Xd, Teilnehmer_Xe        ' Teilnehmer
            Select Case Sheets(Reg_Teilnehmer).Cells(j, Spalte_Firma).Value
            Case "GROB"
                If Teilnehmer_GROB = "" Then
                    Teilnehmer_GROB = Teiln_Name
                Else
                    Teilnehmer_GROB = Teilnehmer_GROB & "; " & Teiln_Name
                End If
            Case Kunde
                If Teilnehmer_Kunde = "" Then
                    Teilnehmer_Kunde = Teiln_Name
                Else
                    Teilnehmer_Kunde = Teilnehmer_Kunde & "; " & Teiln_Name
                End If
            Case Extern(1)
                    If Teilnehmer_Extern(1) = "" Then
                        Teilnehmer_Extern(1) = Teiln_Name
                    Else
                        Teilnehmer_Extern(1) = Teilnehmer_Extern(1) & "; " & Teiln_Name
                    End If
            Case Extern(2)
                    If Teilnehmer_Extern(2) = "" Then
                        Teilnehmer_Extern(2) = Teiln_Name
                    Else
                        Teilnehmer_Extern(2) = Teilnehmer_Extern(2) & "; " & Teiln_Name
                    End If
            Case Extern(3)
                    If Teilnehmer_Extern(3) = "" Then
                        Teilnehmer_Extern(3) = Teiln_Name
                    Else
                        Teilnehmer_Extern(3) = Teilnehmer_Extern(3) & "; " & Teiln_Name
                    End If
            Case Extern(4)
                    If Teilnehmer_Extern(4) = "" Then
                        Teilnehmer_Extern(4) = Teiln_Name
                    Else
                        Teilnehmer_Extern(4) = Teilnehmer_Extern(4) & "; " & Teiln_Name
                    End If
            Case Else
                Anzahl_Extern = Anzahl_Extern + 1
                Extern(Anzahl_Extern) = Sheets(Reg_Teilnehmer).Cells(j, Spalte_Firma).Value
                Teilnehmer_Extern(Anzahl_Extern) = Teiln_Name
            End Select
        Case Teilnehmer_Zd, Teilnehmer_Ze        ' Zeitweise Teilnehmer
            Select Case Sheets(Reg_Teilnehmer).Cells(j, Spalte_Firma).Value
            Case "GROB"
                If Teilnehmer_GROB_zw = "" Then
                    Teilnehmer_GROB_zw = Teiln_Name
                Else
                    Teilnehmer_GROB_zw = Teilnehmer_GROB_zw & "; " & Teiln_Name
                End If
            Case Kunde
                If Teilnehmer_Kunde_zw = "" Then
                    Teilnehmer_Kunde_zw = Teiln_Name
                Else
                    Teilnehmer_Kunde_zw = Teilnehmer_Kunde_zw & "; " & Teiln_Name
                End If
            Case Extern(1)
                If Teilnehmer_Extern_zw(1) = "" Then
                    Teilnehmer_Extern_zw(1) = Teiln_Name
                Else
                    Teilnehmer_Extern_zw(1) = Teilnehmer_Extern_zw(1) & "; " & Teiln_Name
                End If
            Case Extern(2)
                If Teilnehmer_Extern_zw(2) = "" Then
                    Teilnehmer_Extern_zw(2) = Teiln_Name
                Else
                    Teilnehmer_Extern_zw(2) = Teilnehmer_Extern_zw(2) & "; " & Teiln_Name
                End If
            Case Extern(3)
                If Teilnehmer_Extern_zw(3) = "" Then
                    Teilnehmer_Extern_zw(3) = Teiln_Name
                Else
                    Teilnehmer_Extern_zw(3) = Teilnehmer_Extern_zw(3) & "; " & Teiln_Name
                End If
            Case Extern(4)
                If Teilnehmer_Extern_zw(4) = "" Then
                    Teilnehmer_Extern_zw(4) = Teiln_Name
                Else
                    Teilnehmer_Extern_zw(4) = Teilnehmer_Extern_zw(4) & "; " & Teiln_Name
                End If
            Case Else
                Anzahl_Extern = Anzahl_Extern + 1
                Extern(Anzahl_Extern) = Sheets(Reg_Teilnehmer).Cells(j, Spalte_Firma).Value
                Teilnehmer_Extern_zw(Anzahl_Extern) = Teiln_Name
            End Select
        
        Case Teilnehmer_Vd, Teilnehmer_Ve        ' Verteiler
            Select Case Sheets(Reg_Teilnehmer).Cells(j, Spalte_Firma).Value
            Case "GROB"
                If Verteiler_GROB = "" Then
                    Verteiler_GROB = Teiln_Name
                Else
                    Verteiler_GROB = Verteiler_GROB & "; " & Teiln_Name
                End If
            Case Kunde
                If Verteiler_Kunde = "" Then
                    Verteiler_Kunde = Teiln_Name
                Else
                    Verteiler_Kunde = Verteiler_Kunde & "; " & Teiln_Name
                End If
            Case Extern(1)
                If Verteiler_Extern(1) = "" Then
                    Verteiler_Extern(1) = Teiln_Name
                Else
                    Verteiler_Extern(1) = Verteiler_Extern(1) & "; " & Teiln_Name
                End If
            Case Extern(2)
                If Verteiler_Extern(2) = "" Then
                    Verteiler_Extern(2) = Teiln_Name
                Else
                    Verteiler_Extern(2) = Verteiler_Extern(2) & "; " & Teiln_Name
                End If
            Case Extern(3)
                If Verteiler_Extern(3) = "" Then
                    Verteiler_Extern(3) = Teiln_Name
                Else
                    Verteiler_Extern(3) = Verteiler_Extern(3) & "; " & Teiln_Name
                End If
            Case Extern(4)
                If Verteiler_Extern(4) = "" Then
                    Verteiler_Extern(4) = Teiln_Name
                Else
                    Verteiler_Extern(4) = Verteiler_Extern(4) & "; " & Teiln_Name
                End If
            Case Else
                Anzahl_Extern = Anzahl_Extern + 1
                Extern(Anzahl_Extern) = Sheets(Reg_Teilnehmer).Cells(j, Spalte_Firma).Value
                Verteiler_Extern(Anzahl_Extern) = Teiln_Name
            End Select
        
        Case ""         ' nicht anwesend
        
        Case Else       ' Falscheingabe
            MsgBox ("Bei den Teilnehmern wurde ein falsches K|fffd|rzel verwendet" & vbCrLf & _
                    "The used appreviation of the attendence was incorrect!")
        End Select
    Next j
    
    
    Select Case Language
    Case "D"
        zeitweise = "zeitweise: "
    Case "E"
        zeitweise = "part time: "
    Case Else
        zeitweise = "part time: "
    End Select
    
    
       
    'Besprechungsteilnehmer als Dokumenteigenschaft in Dokument |fffd|bernehmen
Fehler_Code = "Word_Teiln"
       
    If Anzahl_Extern > 0 Then   'Sonstige Teilnehmer
        
        If Teilnehmer_GROB_zw = "" Then
            docTest.CustomDocumentProperties("Teilnehmer_3") = "GROB: " & vbCrLf & Replace(Teilnehmer_GROB, "; ", vbCrLf)
        Else
            docTest.CustomDocumentProperties("Teilnehmer_3") = "GROB: " & vbCrLf & Replace(Teilnehmer_GROB, "; ", vbCrLf) & vbCrLf & zeitweise & vbCrLf & Replace(Teilnehmer_GROB_zw, "; ", vbCrLf)
        End If
        If Teilnehmer_Kunde <> "" Then 'Kunde
            If Teilnehmer_Kunde_zw = "" Then
                docTest.CustomDocumentProperties("Teilnehmer_1") = Kunde & ": " & vbCrLf & Replace(Teilnehmer_Kunde, "; ", vbCrLf)
            Else
                docTest.CustomDocumentProperties("Teilnehmer_1") = Kunde & ": " & vbCrLf & Replace(Teilnehmer_Kunde, "; ", vbCrLf) & vbCrLf & zeitweise & vbCrLf & Replace(Teilnehmer_Kunde_zw, "; ", vbCrLf)
            End If
        End If
        
        For i = 1 To Anzahl_Extern
            If Teilnehmer_Extern(i) <> "" Then
                Teilnehmer_Sonstige = Teilnehmer_Sonstige & Extern(i) & ": " & vbCrLf & Replace(Teilnehmer_Extern(i), "; ", vbCrLf) & vbCrLf & Replace(Teilnehmer_Extern_zw(i), "; ", vbCrLf) & vbCrLf
            End If
        Next i
        If Teilnehmer_Sonstige <> "" Then
            docTest.CustomDocumentProperties("Teilnehmer_2") = vbNullString & Teilnehmer_Sonstige
        End If
    Else
        docTest.CustomDocumentProperties("Teilnehmer_3") = ""
        If Teilnehmer_GROB_zw = "" Then
            docTest.CustomDocumentProperties("Teilnehmer_1") = "GROB: " & vbCrLf & Replace(Teilnehmer_GROB, "; ", vbCrLf)
        Else
            docTest.CustomDocumentProperties("Teilnehmer_1") = "GROB: " & vbCrLf & Replace(Teilnehmer_GROB, "; ", vbCrLf) & vbCrLf & zeitweise & vbCrLf & Replace(Teilnehmer_GROB_zw, "; ", vbCrLf)
        End If
        If Teilnehmer_Kunde <> "" Then 'Kunde
            If Teilnehmer_Kunde_zw = "" Then
                docTest.CustomDocumentProperties("Teilnehmer_2") = Kunde & ": " & vbCrLf & Replace(Teilnehmer_Kunde, "; ", vbCrLf)
            Else
                docTest.CustomDocumentProperties("Teilnehmer_2") = Kunde & ": " & vbCrLf & Replace(Teilnehmer_Kunde, "; ", vbCrLf) & vbCrLf & zeitweise & vbCrLf & Replace(Teilnehmer_Kunde_zw, "; ", vbCrLf)
            End If
        End If
    End If
    
    
    '|fffd|berschriftseigenschaften als Dokumenteigenschaft in Dokument |fffd|bernehmen
        
    docTest.CustomDocumentProperties("Besprechungsthema") = Range("Projekt") & " - " & Sheets(Reg_Besprechungen).Range("Besprechungsthema").Value
    docTest.BuiltinDocumentProperties.Item(2) = Range("Projekt") & " - " & Sheets(Reg_Besprechungen).Range("Besprechungsthema").Value
    docTest.CustomDocumentProperties("Besprechungsdatum") = CStr(Sheets(Reg_Besprechungen).Range("Besprechungsdatum").Value)
    docTest.CustomDocumentProperties("Ort") = Sheets(Reg_Besprechungen).Range("Besprechungsort").Value
    docTest.CustomDocumentProperties("Klassifizierung") = Sheets(Reg_Besprechungen).Range("Klassifizierung").Value
    
    
    'Verteiler als Dokumenteigenschaft in Dokument |fffd|bernehmen
Fehler_Code = "Word_Header"
       
    Select Case Sheets(Reg_Besprechungen).Range("Klassifizierung").Value
    Case Class_4d, Class_5d, Class_4e, Class_5e
        Select Case Language
        Case "D"
            Verteiler = "Teilnehmer,"
        Case "E"
            Verteiler = "Participants,"
        Case Else
            Verteiler = "Teilnehmer,"
        End Select
        If Verteiler_GROB <> "" Then
            Verteiler_GROB = "GROB: " & vbCrLf & Replace(Verteiler_GROB, "; ", vbCrLf)
        End If
        If Verteiler_Kunde <> "" Then
            Verteiler_Kunde = Kunde & ": " & vbCrLf & Replace(Verteiler_Kunde, "; ", vbCrLf)
        End If
        If Anzahl_Extern > 0 Then
            For i = 1 To Anzahl_Extern
                If Verteiler_Extern(i) <> "" Then
                    Verteiler_Sonst = Extern(i) & ": " & vbCrLf & Replace(Verteiler_Extern(i), "; ", vbCrLf)
                End If
            Next i
        End If
    Case Class_1d, Class_1e
        Select Case Language
        Case "D"
            Verteiler = "Teilnehmer von GROB,"
        Case "E"
            Verteiler = "Participants of GROB,"
        Case Else
            Verteiler = "Teilnehmer von GROB,"
        End Select
        If Verteiler_GROB <> "" Then
            Verteiler_GROB = "GROB: " & vbCrLf & Replace(Verteiler_GROB, "; ", vbCrLf)
        End If
        If Verteiler_Kunde <> "" Then
            Verteiler_Kunde = Kunde & ": " & vbCrLf & Replace(Verteiler_Kunde, "; ", vbCrLf)
        End If
        If Anzahl_Extern > 0 Then
            For i = 1 To Anzahl_Extern
                If Verteiler_Extern(i) <> "" Then
                    Verteiler_Sonst = Extern(i) & ": " & vbCrLf & Replace(Verteiler_Extern(i), "; ", vbCrLf)
                End If
            Next i
        End If
    Case Class_3d, Class_2d, Class_3e, Class_2e
        Verteiler = ""
    End Select
    'MsgBox (Verteiler)
    
    docTest.CustomDocumentProperties("Verteiler") = Verteiler
    docTest.CustomDocumentProperties("Verteiler_GROB") = Verteiler_GROB
    docTest.CustomDocumentProperties("Verteiler_Kunde") = Verteiler_Kunde
    docTest.CustomDocumentProperties("Verteiler_Sonst") = Verteiler_Sonst
    
    'Felder aktualisieren
    
    docTest.ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
    docTest.ActiveWindow.Selection.WholeStory
    docTest.ActiveWindow.Selection.Fields.Update
    docTest.ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
    docTest.ActiveWindow.Selection.WholeStory
    docTest.ActiveWindow.Selection.Fields.Update
    docTest.ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
    docTest.ActiveWindow.Selection.WholeStory
    docTest.ActiveWindow.Selection.Rows.AllowBreakAcrossPages = False
    docTest.ActiveWindow.Selection.Fields.Update
    
    ' Gespeicherte Cursorposition setzen
    docTest.ActiveWindow.Selection.Goto What:=wdGoToPage, Count:=Seite
    docTest.ActiveWindow.Selection.MoveDown Unit:=wdLine, Count:=Zeile - 1
    docTest.ActiveWindow.Selection.MoveRight Unit:=wdCharacter, Count:=Steps
    
    Set docTest = Nothing
    Set appWord = Nothing
    
Exit Sub


Fehler_Code1:

docTest.Close (wdDoNotSaveChanges)
appWord.Quit


Select Case Fehler_Code
Case "Allg"
    MsgBox "Schwerwiegender allgemeiner Fehler! Die Initialisierung zur Ausleitung der Offenen-Punkte Liste konnte nicht durchgef|fffd|hrt werden!"
    MsgBox "Fatal Basic Error! The initialisation of the extraction could not be startet!"
Case "Word"
    MsgBox "Fehler beim |fffd|ffnen der Word-Vorlagedatei. Bitte pr|fffd|fen Sie das Vorhandensein des Ordners: 'c:\temp\'"
    MsgBox "Error at opening of the Word-Template. Please check, if the folowing folder exists: 'c:\temp\'"
Case "Excel_OIL"
    MsgBox "Eingabefehler in der Excel Zeile " & Zeile_OIL & " (Reiter 'OPL')." & vbCrLf & _
                "Bitte pr|fffd|fen Sie, ob folgende Werte in dieser Zeile eingetragen sind:" & vbCrLf & _
                "- Kategorie" & vbCrLf & _
                "- Beschreibung" & vbCrLf & _
                "- Zust|fffd|ndige Firma" & vbCrLf & _
                "- Zust|fffd|ndige Name" & vbCrLf & _
                "- Erledigen bis"
    MsgBox "Input-Error at the OPL List, See Excel row " & Zeile_OIL & " (Folder 'OIL')." & vbCrLf & _
                "PLease check, if following values are filled:" & vbCrLf & _
                "- Categorie" & vbCrLf & _
                "- Desciption" & vbCrLf & _
                "- Responsible Company" & vbCrLf & _
                "- Responsible Name" & vbCrLf & _
                "- To Do Until"
Case "Excel_Teiln"
    MsgBox "Eingabefehler in der Excel Zeile " & j & vbCrLf & " (Reiter 'Teilnehmer')."
    MsgBox "Input Error at the Excel row " & j & vbCrLf & " (Folder 'Participants')."
Case "Word_Teiln"
    MsgBox "Ausgabefehler Word: Teilnehmer konnten nicht eingetragen werden."
    MsgBox "Output Error Word: Participants could not be written."
Case "Word_Header"
    MsgBox "Ausgabefehler Word: Protokollkopf konnte nicht eingetragen werden."
    MsgBox "Output Error Word: Meeting minutes header could not be filled out."
End Select
    
Set docTest = Nothing
Set appWord = Nothing


End Sub


Sub OIL_neue_Zeile()
    'Aktuelle Zeile
    AktZ = ActiveCell.Row
    'Wenn Aktuelle Zeile im header dann abbruch
    If AktZ < Erste_Zeile Then Exit Sub
    'Neue Zeile einf|fffd|gen
    Rows(Erste_Zeile - 1).Select
    Selection.Copy
    Rows(AktZ + 1).Select
    Selection.Insert Shift:=xlDown
    Cells(AktZ + 1, 1).Select
    Application.CutCopyMode = False
    Rows(AktZ + 1).RowHeight = 12.75
End Sub
Attribute VB_Name = "Modul2"
Sub ttt1()
Attribute ttt1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' ttt1 Makro
'

'
    Rows("21:21").RowHeight = 12.75
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub CheckBox1_Click()

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

If Range("ChAend").Value <> True Then Exit Sub

Dim rngCell As Range
Dim bytColor As Byte

' Bereich der |fffd|berwacht wird
Set Target = Intersect(Target, Range("E10:L6000"))
If Target Is Nothing Then Exit Sub

For Each rngCell In Target

    Cells(rngCell.Row, 14).Value = "x"

Next rngCell
End Sub



Sub Reset_Aenderungen()
        
    aCellR = ActiveCell.Row
    aCellC = ActiveCell.Column
    
    Range("N10:N6000").Select
    Selection.ClearContents
    Cells(aCellR, aCellC).Select
    
End Sub

Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{D1C1BC15-87DA-4178-B754-586BE2DF378F}{1B4DB658-F5FB-4E4B-9BB4-F729B90E7B49}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton_Start_Click()
    Sheets(Reg_Besprechungen).Cells(2, 1).Value = ComboBox_Besprechung.Value
    UserForm1.Hide
    Unload UserForm1
    Besprechungsprotokoll_erstellen_aktion
End Sub

Private Sub UserForm_Activate()
    Zeile_Besprechung = 4
    Do Until Sheets(Reg_Besprechungen).Cells(Zeile_Besprechung, 1).Value = ""
        ComboBox_Besprechung.AddItem Sheets(Reg_Besprechungen).Cells(Zeile_Besprechung, 1).Value
        Zeile_Besprechung = Zeile_Besprechung + 1
    Loop
    If Not (IsError(Sheets(Reg_Besprechungen).Cells(2, 2).Value)) Then
        ComboBox_Besprechung.Value = Sheets(Reg_Besprechungen).Cells(2, 1).Value
    End If
End Sub



INQUEST-PP=macro
