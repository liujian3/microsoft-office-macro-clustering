Attribute VB_Name = "Arkusz1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 44, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
'Sub tworz_xml(magazyn As String)
On Error Resume Next

ilosc_suma = 0

'If magazyn = "CL" Then
'    iln_mag = "5900001263006"
'End If

'If magazyn = "T1" Then
    iln_mag = "5900001263007"
'End If

If Arkusz1.Cells(1, 4) = "" Then
 smg = MsgBox("Wpiszy nomer klijenta", vbCritical)
 Exit Sub
End If

If Arkusz1.Cells(4, 4) = "" Then
 smg = MsgBox("Wpiszy datu  zagruzki", vbCritical)
 Exit Sub
End If

If IsDate(Arkusz1.Cells(4, 4)) = False Then
 smg = MsgBox("Wpiszy datu zagruzki w sootwietstwujuszczej forme", vbCritical)
 Exit Sub
End If

If Arkusz1.Cells(4, 4) < Date Then
 smg = MsgBox("Data zagruzki nie mozet byt miensze czem data formirowanije zakaza", vbCritical)
 Exit Sub
End If


DataD = Date
data_rokD = Year(DataD)
data_mcD = Month(DataD)
data_dzD = Day(DataD)

DataJ = Date + 1
data_rokJ = Year(DataJ)
data_mcJ = Month(DataJ)
data_dzJ = Day(DataJ)


If Len(data_mcD) = 1 Then
    data_mcD = "0" & CStr(data_mcD)
End If

If Len(data_dzD) = 1 Then
    data_dzD = "0" & CStr(data_dzD)
End If

If Len(data_mcJ) = 1 Then
    data_mcJ = "0" & CStr(data_mcJ)
End If

If Len(data_dzJ) = 1 Then
    data_dzJ = "0" & CStr(data_dzJ)
End If

DataD = data_rokD & "-" & data_mcD & "-" & data_dzD

DataJ = data_rokJ & "-" & data_mcJ & "-" & data_dzJ



Set fs = CreateObject("Scripting.FileSystemObject")

ilnB = Arkusz1.Cells(1, 4)

If fs.FolderExists("c:\ECOD_ORD") = False Then
    fs.CreateFolder "c:\ECOD_ORD"
End If

xml_file = "ORD_" & Replace(Right(Date, 6), "-", "") & Replace(Time, ":", "")

If fs.FileExists("c:\ECOD_ORD\" & xml_file & ".xml") Then
    msg = MsgBox("Istnieje ju|fffd| plik zam|fffd|wienia z dzisiejsz|fffd| dat|fffd|. Czy chcesz go nadpisa|fffd|?", vbYesNo)
    If msg = 7 Then
        Exit Sub
    End If
End If

If Err.Number <> 0 Then
 MsgBox ("B|fffd||fffd|d: " & Err.Description)
 Exit Sub
End If

Set a = fs.CreateTextFile("C:\ECOD_ORD\" & xml_file & ".xml", True)
a.WriteLine ("<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "UTF-8" & Chr(34) & "?>")
a.WriteLine ("<Document-Order>")
a.WriteLine ("<Order-Header>")
a.WriteLine ("<OrderNumber>" & Arkusz1.Cells(3, 4) & "</OrderNumber>")
a.WriteLine ("<OrderDate>" & DataD & "</OrderDate>")
a.WriteLine ("<ExpectedDeliveryDate>" & Arkusz1.Cells(4, 4) & "</ExpectedDeliveryDate>")
a.WriteLine ("<ExpectedDeliveryTime />")
a.WriteLine ("<DocumentFunctionCode />")
a.WriteLine ("<Remarks></Remarks>")
a.WriteLine ("</Order-Header>")
a.WriteLine ("<Order-Parties>")
a.WriteLine ("<Buyer>")
a.WriteLine ("<ILN>" & ilnB & "</ILN>")
a.WriteLine ("<Name />")
a.WriteLine ("</Buyer>")
a.WriteLine ("<Seller>")
a.WriteLine ("<ILN>5900001263006</ILN>")
a.WriteLine ("<Name>TZMO</Name>")
a.WriteLine ("<CodeByBuyer />")
a.WriteLine ("</Seller>")
a.WriteLine ("<DeliveryPoint>")
a.WriteLine ("<ILN>" & ilnB & "</ILN>")
a.WriteLine ("<Name />")
a.WriteLine ("</DeliveryPoint>")
a.WriteLine ("<ShipFrom>")
a.WriteLine ("<ILN></ILN>")
a.WriteLine ("</ShipFrom>")
a.WriteLine ("</Order-Parties>")
a.WriteLine ("<Order-Lines>")

'W = 13
linia = 1
'Do Until Arkusz1.Cells(W, 2) = ""
For W = 12 To 2000
'Debug.Print Arkusz1.Cells(W, 2)

testVar = Arkusz1.Cells(W, 6)
numericCheck = IsNumeric(testVar)

If numericCheck = True Then

    If Arkusz1.Cells(W, 2) <> "" And testVar > 0 Then
    
    indexx = Arkusz1.Cells(W, 2)
        a.WriteLine ("<Line>")
        a.WriteLine ("<Line-Item>")
        a.WriteLine ("<LineNumber>" & linia & "</LineNumber>")
        a.WriteLine ("<EAN>" & indexx & "</EAN>")
        a.WriteLine ("<BuyerItemCode />")
        a.WriteLine ("<SupplierItemCode>" & indexx & "</SupplierItemCode>")
        a.WriteLine ("<ItemDescription />")
    '    a.WriteLine ("<ItemDescription>")
    '    a.WriteLine ("<![CDATA[ Dezodorant antyperspirant roll-on Kanion Gold]]>")
    '    a.WriteLine ("</ItemDescription>")
    
        ilosc = Arkusz1.Cells(W, 6)
        ilosc_suma = ilosc_suma + ilosc
        
        a.WriteLine ("<OrderedQuantity>" & ilosc & "</OrderedQuantity>")
        a.WriteLine ("<ItemType />")
        'a.WriteLine ("<OrderedUnitPacksize>1</OrderedUnitPacksize>")
        a.WriteLine ("<OrderedUnitPacksize />")
        a.WriteLine ("<UnitOfMeasure></UnitOfMeasure>")
        a.WriteLine ("<OrderedUnitNetPrice />")
        a.WriteLine ("</Line-Item>")
        a.WriteLine ("</Line>")
        linia = linia + 1
        
    Else
        Err.Clear
    End If

    
End If
    'W = W + 1
Next W

a.WriteLine ("</Order-Lines>")
a.WriteLine ("<Order-Summary>")
a.WriteLine ("<TotalLines>" & linia - 1 & "</TotalLines>")
a.WriteLine ("<TotalOrderedAmount>" & ilosc_suma & "</TotalOrderedAmount>")
a.WriteLine ("</Order-Summary>")
a.WriteLine ("</Document-Order>")

a.Close

If ilosc_suma = 0 Then
    MsgBox ("Summa  w zakazie sostawliaet 0")
    
    Set B = fs.GetFile("c:\ECOD_ORD\" & xml_file & ".xml")
        B.Delete

    Exit Sub
End If

do_przekodowania = "c:\ECOD_ORD\" & xml_file & ".xml"

wynik = kodowanie(CStr(do_przekodowania))

If wynik <> 1 Then
    MsgBox ("B|fffd||fffd|d kodowania pliku.")
    Exit Sub
End If


    If Err.Number <> 0 Then
        msg = MsgBox("Error: " & Err.Number & " - " & Err.Description, vbCritical)
    'Debug.Print t1
    Else
    
    MsgBox ("Fajl zakaza sozdan: " & Chr(10) & Chr(13) & _
    Chr(10) & Chr(13) & _
    "c:\ECOD_ORD\" & xml_file & ".xml")
    Call Shell("explorer.exe " & "c:\ECOD_ORD", vbNormalFocus)
    
    End If

End Sub
Attribute VB_Name = "Arkusz3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Arkusz6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Function kodowanie(file As String)

content = ReadFile(file)
out = writeOut(CStr(content), file)
RemoveBOM (file)

kodowanie = out

End Function



'Function saves cText in file, and returns 1 if successful, 0 if not
Public Function writeOut(cText As String, file As String) As Integer
'On Error GoTo errHandler
Dim fsT, tFilePath As String

tFilePath = file

'Create Stream object
Set fsT = CreateObject("ADODB.Stream")


'Specify stream type - we want To save text/string data.
fsT.Type = 2

'Specify charset For the source text data.
fsT.Charset = "utf-8"

'Open the stream And write binary data To the object
fsT.Open
fsT.WriteText cText

'Save binary data To disk
fsT.SaveToFile tFilePath, 2

GoTo finish

errHandler:
MsgBox (Err.Description)
writeOut = 0
Exit Function

finish:
writeOut = 1
End Function


Function ReadFile(sFilePathAndName)
   Dim sFileContents

   Set oFS = CreateObject("Scripting.FileSystemObject")

   If oFS.FileExists(sFilePathAndName) = True Then
       
      Set oTextStream = oFS.OpenTextFile(sFilePathAndName, 1)
       
      sFileContents = oTextStream.ReadAll
     
      oTextStream.Close

      Set oTextStream = Nothing
   
   End If
   
   Set oFS = Nothing

   ReadFile = sFileContents

End Function

' Removes the Byte Order Mark - BOM from a text file with UTF-8 encoding
' The BOM defines that the file was stored with an UTF-8 encoding.
Public Function RemoveBOM(filePath)
        
        ' Create a reader and a writer
                Dim writer, reader, fileSize
                Set writer = CreateObject("Adodb.Stream")
                Set reader = CreateObject("Adodb.Stream")
        
        ' Load from the text file we just wrote
                reader.Open
                reader.LoadFromFile filePath
        
        ' Copy all data from reader to writer, except the BOM
                writer.Mode = 3
                writer.Type = 1
                writer.Open
                reader.Position = 5
                reader.CopyTo writer, -1

        ' Overwrite file
                writer.SaveToFile filePath, 2
        
        ' Return file name
                RemoveBOM = filePath
        
        ' Kill objects
                Set writer = Nothing
                Set reader = Nothing

End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
