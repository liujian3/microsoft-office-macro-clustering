Attribute VB_Name = "Module1"
Sub CopyLif(U As Range)
    Dim n As Long, i As Integer, y As Integer, m As Integer
    Dim ra As Range, s As String, st As String, R As Range
    
    n = U.Value
    U.Value = ""
    
    s = ""
    st = ""
    i = 0
    y = 0
    
    Application.Goto Reference:="LIFNMTXT"
    Set R = Selection
    Set ra = R
    
    Range(ra.Offset(0, 1).Address).Select
    
    If Selection.MergeCells Then
        s = ActiveCell.FormulaR1C1
        st = Mid(s, 7, Len(s) - 7)
        i = CInt(st)
        y = ActiveCell.MergeArea.Cells.Count
    End If
    Selection.Copy
    Set ra = R
    Range(ra.Offset(0, 1).Address).Select
    Selection.Insert Shift:=xlToRight
    Application.CutCopyMode = False
    
    Set ra = R
    If y > 0 Then
        If y < n Then
            Range(ra.Offset(0, y + y).Address).Select
        Else
            Range(ra.Offset(0, n + y).Address).Select
        End If
        
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlContinuous
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    End If
    
    Range(ra.Offset(0, 1).Address).Select
    If y > 0 Then
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    Else
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlNone
            .Borders(xlEdgeTop).LineStyle = xlNone
            .Borders(xlEdgeBottom).LineStyle = xlNone
            .Borders(xlEdgeRight).LineStyle = xlNone
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlNone
        End With
    End If
    
    If Selection.MergeCells Then
        Selection.UnMerge
        Selection.Clear
    End If
    If y < n Then
        For m = 1 To n - y
            Set ra = R
            Range(ra.Offset(0, 1).Address).Select
            Selection.Insert Shift:=xlToRight
        Next m
    Else
        If y > n Then
            For m = 1 To y - n
                Set ra = R
                Range(ra.Offset(0, 1).Address).Select
                Selection.Delete Shift:=xlToLeft
            Next m
        End If
    End If
  
    Set ra = R
    Range(ra.Offset(0, 1).Address & ":" & ra.Offset(0, n).Address).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .MergeCells = True
    End With
    
    i = i + 1
    ActiveCell.FormulaR1C1 = "[LIFNM" & i & "]"

End Sub

Sub CopyCont(U As Range)
    Dim n As Long, i As Integer, y As Integer, m As Integer
    Dim ra As Range, s As String, st As String, R As Range
    
    n = U.Value
    U.Value = ""
    
    s = ""
    st = ""
    i = 0
    y = 0
    
    Application.Goto Reference:="LIFCONTTXT"
    Set R = Selection
    Set ra = R
    
    Range(ra.Offset(0, 1).Address).Select
    
    If Selection.MergeCells Then
        s = ActiveCell.FormulaR1C1
        st = Mid(s, 9, Len(s) - 9)
        i = CInt(st)
        y = ActiveCell.MergeArea.Cells.Count
    End If
    Selection.Copy
    Set ra = R
    Range(ra.Offset(0, 1).Address).Select
    Selection.Insert Shift:=xlToRight
    Application.CutCopyMode = False
    
    Set ra = R
    If y > 0 Then
        If y < n Then
            Range(ra.Offset(0, y + y).Address).Select
        Else
            Range(ra.Offset(0, n + y).Address).Select
        End If
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlContinuous
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    End If
    
    Range(ra.Offset(0, 1).Address).Select
    If y > 0 Then
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    Else
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlNone
            .Borders(xlEdgeTop).LineStyle = xlNone
            .Borders(xlEdgeBottom).LineStyle = xlNone
            .Borders(xlEdgeRight).LineStyle = xlNone
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlNone
        End With
    End If
    
    If Selection.MergeCells Then
        Selection.UnMerge
        Selection.Clear
    End If
    If y < n Then
        For m = 1 To n - y
            Set ra = R
            Range(ra.Offset(0, 1).Address).Select
            Selection.Insert Shift:=xlToRight
        Next m
    Else
        If y > n Then
            For m = 1 To y - n
                Set ra = R
                Range(ra.Offset(0, 1).Address).Select
                Selection.Delete Shift:=xlToLeft
            Next m
        End If
    End If
  
    Set ra = R
    Range(ra.Offset(0, 1).Address & ":" & ra.Offset(0, n).Address).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .MergeCells = True
    End With
    
    i = i + 1
    ActiveCell.FormulaR1C1 = "[LIFCONT" & i & "]"

End Sub

Sub CopyTxtSec(U As Range)
    Dim n As Long, i As Integer, y As Integer, m As Integer
    Dim ra As Range, s As String, st As String, R As Range
    
    n = U.Value
    U.Value = ""
    
    s = ""
    st = ""
    i = 0
    y = 0
    
    Application.Goto Reference:="HTXTSECTXT"
    Set R = Selection
    Set ra = R
    
    Range(ra.Offset(0, 1).Address).Select
    
    If Selection.MergeCells Then
        s = ActiveCell.FormulaR1C1
        st = Mid(s, 14, Len(s) - 14)
        i = CInt(st)
        y = ActiveCell.MergeArea.Cells.Count
    End If
    Selection.Copy
    Set ra = R
    Range(ra.Offset(0, 1).Address).Select
    Selection.Insert Shift:=xlToRight
    Application.CutCopyMode = False
    
    Set ra = R
    If y > 0 Then
        If y < n Then
            Range(ra.Offset(0, y + y).Address).Select
        Else
            Range(ra.Offset(0, n + y).Address).Select
        End If
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlContinuous
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    End If
    
    Range(ra.Offset(0, 1).Address).Select
    If y > 0 Then
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    Else
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlNone
            .Borders(xlEdgeTop).LineStyle = xlNone
            .Borders(xlEdgeBottom).LineStyle = xlNone
            .Borders(xlEdgeRight).LineStyle = xlNone
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlNone
        End With
    End If
    
    If Selection.MergeCells Then
        Selection.UnMerge
        Selection.Clear
    End If
    If y < n Then
        For m = 1 To n - y
            Set ra = R
            Range(ra.Offset(0, 1).Address).Select
            Selection.Insert Shift:=xlToRight
        Next m
    Else
        If y > n Then
            For m = 1 To y - n
                Set ra = R
                Range(ra.Offset(0, 1).Address).Select
                Selection.Delete Shift:=xlToLeft
            Next m
        End If
    End If
  
    Set ra = R
    Range(ra.Offset(0, 1).Address & ":" & ra.Offset(0, n).Address).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .MergeCells = True
    End With
    
    i = i + 1
    ActiveCell.FormulaR1C1 = "[HTXTSECTIONV" & i & "]"

End Sub

Sub CopyTabH(U As Range)
    Dim n As Long, i As Integer, y As Integer, m As Integer
    Dim ra As Range, s As String, st As String, R As Range
    
    n = U.Value
    U.Value = ""
    
    s = ""
    st = ""
    i = 0
    y = 0
    
    Application.Goto Reference:="TABH"
    Set R = Selection
        
    For m = 1 To n
        Set ra = R
        Range(ra.Offset(0, 1).Address).Select
        s = ActiveCell.FormulaR1C1
        If Not IsEmpty(ActiveCell.Value) Then
            st = Mid(s, 6, Len(s) - 6)
            i = CInt(st)
        End If
        
        Selection.Copy
        Set ra = R
        Range(ra.Offset(0, 1).Address).Select
        Selection.Insert Shift:=xlToRight
        Application.CutCopyMode = False
        
        Set ra = R
        Range(ra.Offset(0, 1).Address).Select
        With Selection
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlCenter
            .WrapText = True
            .Orientation = 0
            .AddIndent = False
            .IndentLevel = 0
            .ShrinkToFit = False
            .ReadingOrder = xlContext
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlContinuous
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
            .MergeCells = False
        End With
        
        i = i + 1
        ActiveCell.FormulaR1C1 = "[TABH" & i & "]"
    Next m
End Sub

Sub CopyTabP(U As Range)
    Dim n As Long, i As Integer, y As Integer, m As Integer
    Dim ra As Range, s As String, st As String, R As Range
    
    n = U.Value
    U.Value = ""
    
    s = ""
    st = ""
    i = 0
    y = 0
    
    Application.Goto Reference:="PREIS"
    Set R = Selection
        
    For m = 1 To n
        Set ra = R
        Range(ra.Offset(0, 1).Address).Select
        s = ActiveCell.FormulaR1C1
        If Not IsEmpty(ActiveCell.Value) Then
            st = Mid(s, 6, Len(s) - 6)
            i = CInt(st)
        End If
        
        Selection.Copy
        Set ra = R
        Range(ra.Offset(0, 1).Address).Select
        Selection.Insert Shift:=xlToRight
        Application.CutCopyMode = False
        
        Set ra = R
        Range(ra.Offset(0, 1).Address).Select
        With Selection
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlCenter
            .WrapText = True
            .Orientation = 0
            .AddIndent = False
            .IndentLevel = 0
            .ShrinkToFit = False
            .ReadingOrder = xlContext
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlContinuous
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
            .MergeCells = False
        End With
        
        i = i + 1
        ActiveCell.FormulaR1C1 = "[TABP" & i & "]"
    Next m
End Sub

Sub CopyBTxtSec(U As Range)
    Dim n As Long, i As Integer, y As Integer, m As Integer
    Dim ra As Range, s As String, st As String, R As Range
    
    n = U.Value
    U.Value = ""
    
    s = ""
    st = ""
    i = 0
    y = 0
    
    Application.Goto Reference:="BTXTSECTXT"
    Set R = Selection
    Set ra = R
    
    Range(ra.Offset(0, 1).Address).Select
    
    If Selection.MergeCells Then
        s = ActiveCell.FormulaR1C1
        st = Mid(s, 14, Len(s) - 14)
        i = CInt(st)
        y = ActiveCell.MergeArea.Cells.Count
    End If
    Selection.Copy
    Set ra = R
    Range(ra.Offset(0, 1).Address).Select
    Selection.Insert Shift:=xlToRight
    Application.CutCopyMode = False
    
    Set ra = R
    If y > 0 Then
        If y < n Then
            Range(ra.Offset(0, y + y).Address).Select
        Else
            Range(ra.Offset(0, n + y).Address).Select
        End If
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlContinuous
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    End If
    
    Range(ra.Offset(0, 1).Address).Select
    If y > 0 Then
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlContinuous
            .Borders(xlEdgeTop).LineStyle = xlContinuous
            .Borders(xlEdgeBottom).LineStyle = xlContinuous
            .Borders(xlEdgeRight).LineStyle = xlContinuous
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        End With
    Else
        With Selection
            .Borders(xlDiagonalDown).LineStyle = xlNone
            .Borders(xlDiagonalUp).LineStyle = xlNone
            .Borders(xlEdgeLeft).LineStyle = xlNone
            .Borders(xlEdgeTop).LineStyle = xlNone
            .Borders(xlEdgeBottom).LineStyle = xlNone
            .Borders(xlEdgeRight).LineStyle = xlNone
            .Borders(xlInsideVertical).LineStyle = xlNone
            .Borders(xlInsideHorizontal).LineStyle = xlNone
        End With
    End If
    
    If Selection.MergeCells Then
        Selection.UnMerge
        Selection.Clear
    End If
    If y < n Then
        For m = 1 To n - y
            Set ra = R
            Range(ra.Offset(0, 1).Address).Select
            Selection.Insert Shift:=xlToRight
        Next m
    Else
        If y > n Then
            For m = 1 To y - n
                Set ra = R
                Range(ra.Offset(0, 1).Address).Select
                Selection.Delete Shift:=xlToLeft
            Next m
        End If
    End If
  
    Set ra = R
    Range(ra.Offset(0, 1).Address & ":" & ra.Offset(0, n).Address).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .MergeCells = True
    End With
    
    i = i + 1
    ActiveCell.FormulaR1C1 = "[BTXTSECTIONV" & i & "]"

End Sub

Sub Finalize(R As Range)
    Dim InRow As Long, cell As Range, i As Long, y As Long
    Dim LArr() As String
    Dim LastRow As Long
    Dim LastCol As Integer, ra As Range
    Dim LnsCnt As Integer
    Dim m As Integer, n As Integer, z As Integer
    Dim waers As String
    
    LArr = Split(R.Value, ";", 2)
    i = LArr(0)
    y = LArr(1)
    
    With ActiveSheet
      LastCol = .Cells.Find(What:="*", _
                After:=.Range("A1"), _
                Lookat:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByColumns, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Column
      If LastCol < 19 Then
        LastCol = 19
      End If
    End With
    LastRow = Cells(Rows.Count, "O").End(xlUp).Row
    Range("O" & LastRow - 1).Select
    Set ra = Selection
    Range(ra.Offset(0, 0), ra.Offset(0, LastCol - 15).Address).Select
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .MergeCells = True
    End With
    
    For InRow = 1 To i
       LnsCnt = 0
       For Each cell In Range("A" & InRow & ":" & Cells(InRow, y).Address).Columns.Cells
          If Left(cell.Value, 5) = "ULINE" Or Left(cell.Value, 5) = "XLINE" Or Left(cell.Value, 5) = "ULINB" Then
            cell.Font.Underline = xlUnderlineStyleSingle
            cell.Font.Bold = True
            If Left(cell.Value, 5) = "XLINE" Then
                cell.Font.Color = RGB(255, 0, 0)
            End If
            If Left(cell.Value, 5) = "ULINB" Then
                cell.Font.Color = RGB(0, 90, 240)
            End If
            cell.Value = Right(cell.Value, Len(cell.Value) - 5)
            cell.Select
            With Selection.Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .ThemeColor = xlThemeColorDark2
            End With
            cell.NumberFormat = "#,##0.00"
          End If
          If Left(cell.Value, 5) = "ALINE" Or Left(cell.Value, 5) = "YLINE" Or Left(cell.Value, 5) = "ALINB" Then
            cell.Font.Underline = xlUnderlineStyleSingle
            cell.Font.Bold = True
            If Left(cell.Value, 5) = "YLINE" Then
                cell.Font.Color = RGB(255, 0, 0)
            End If
            If Left(cell.Value, 5) = "ALINB" Then
                cell.Font.Color = RGB(0, 90, 240)
            End If
            cell.Value = Right(cell.Value, Len(cell.Value) - 5)
            cell.NumberFormat = "#,##0.00"
          End If
          If Left(cell.Value, 5) = "ZLINE" Then
            cell.Font.Color = RGB(255, 0, 0)
            cell.Value = Right(cell.Value, Len(cell.Value) - 5)
            cell.NumberFormat = "#,##0.00"
          End If
          If Left(cell.Value, 4) = "NUMC" Then
            cell.Value = Right(cell.Value, Len(cell.Value) - 4)
            cell.NumberFormat = "#,##0.00"
          End If
          If Left(cell.Value, 8) = "CURRENCY" Then
            cell.Value = Mid(cell.Value, 9, Len(cell.Value) - 8)
            If cell.Value <> 0 Then
              waers = Left(cell.Value, 3)
              cell.Value = Mid(cell.Value, 4, Len(cell.Value) - 3)
              cell.NumberFormat = "#,##0.00 [$" & waers & "]"
            End If
          End If
          
          z = 0
          If cell.MergeCells And cell.Value <> Empty And cell.MergeArea.Rows.Count = 1 Then
             z = 10 * cell.MergeArea.Columns.Count
            If (Len(cell.Value) / z) > LnsCnt Then
             LnsCnt = Len(cell.Value) / z
            End If
          End If
       Next cell
       If LnsCnt <> 0 Then
         If LnsCnt > 25 Then
           LnsCnt = 25
         End If
         LnsCnt = LnsCnt + 1
         Rows(InRow).RowHeight = LnsCnt * 15
       End If
    Next InRow
    
    Cells.Select
    Selection.Font.Name = "Times New Roman"
    
    'Rows("11:" & LastRow).EntireRow.AutoFit
        
    Application.Goto Reference:="Z_ITOG"
    Selection.Clear
    
    'Range("D26:N26").Select
    'Selection.EntireRow.RowHeight = 30
    'Rows("30:30").Select
    'Selection.EntireRow.RowHeight = 65
    '|fffd||fffd||fffd|.32087->
    'Set ra = [O30]

    'LnsCnt = 0
    'With ActiveSheet
    '   LastCol = .Cells(30, .Columns.Count).End(xlToLeft).Column
    'End With

    'For Each cell In Range("O30:" & ra.Offset(0, LastCol).Address).Columns.Cells
    '  If (Len(cell.Value) / 20) > LnsCnt Then
    '    LnsCnt = Len(cell.Value) / 20
    '  End If
    'Next cell
    'LnsCnt = LnsCnt + 1
    'Rows("30:30").Select
    'Selection.EntireRow.RowHeight = LnsCnt * 15
        
    'Rows("31:31").Select
    'Selection.EntireRow.RowHeight = 30
    '<-
'''''''''''''''''''''''''''''''''''''

    Set ra = [O23]
                            
    Range("Q23:Q29").Select
    Selection.UnMerge
    With Selection
        .Borders(xlEdgeLeft).LineStyle = xlNone
        .Borders(xlEdgeTop).LineStyle = xlNone
        .Borders(xlEdgeBottom).LineStyle = xlNone
        .Borders(xlEdgeRight).LineStyle = xlNone
        .Borders(xlInsideVertical).LineStyle = xlNone
        .Borders(xlInsideHorizontal).LineStyle = xlNone
    End With
                            
    m = LastCol - 19
    If m < 0 Then
      m = 0
    End If
    For n = 1 To m
      Range("Q23:Q28").Select
      Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Next n
    
    Range("O23:" & ra.Offset(0, m).Address).Select
    Selection.UnMerge
    
    Range(ra.Offset(0, m + 2).Address, ra.Offset(0, m + 4).Address).Select
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Range(ra.Offset(1, m + 2).Address, ra.Offset(3, m + 4).Address).Select
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Range(ra.Offset(4, m + 2).Address, ra.Offset(4, m + 4).Address).Select
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    Range(ra.Offset(5, m + 2).Address, ra.Offset(6, m + 4).Address).Select
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
    Range(ra.Offset(-1, 2).Address, ra.Offset(-1, m + 4).Address).Select
    Selection.UnMerge
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
    End With
    
    Range("O23:" & ra.Offset(6, m + 1).Address).Select
    Selection.Merge
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = True
    End With
    
    Range("O23:" & ra.Offset(0, 1).Address).Select
    With Selection
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    End With
    
    Range("O28:S" & LastRow - 2).Select
    With Selection
      .Borders(xlDiagonalDown).LineStyle = xlNone
      .Borders(xlDiagonalUp).LineStyle = xlNone
      .Borders(xlEdgeLeft).LineStyle = xlContinuous
      .Borders(xlEdgeTop).LineStyle = xlContinuous
      .Borders(xlEdgeBottom).LineStyle = xlContinuous
      .Borders(xlEdgeRight).LineStyle = xlContinuous
      .Borders(xlInsideVertical).LineStyle = xlContinuous
      .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    End With
    
    Range("A1").Select
End Sub
Attribute VB_Name = "|fffd||fffd||fffd||fffd|1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' )^J)

INQUEST-PP=macro
