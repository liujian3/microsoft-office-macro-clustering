Attribute VB_Name = "Clear"
Sub Clear()
'
' clear Macro
' Macro recorded 5/21/98 by Practitioners Publishing Company
'
'
   
Msg = "Are you sure you want to clear all of the " & vbCrLf
Msg = Msg & "input items from all of the worksheets?"
Beep
ans = MsgBox(Msg, vbYesNo + vbQuestion + vbDefaultButton2, "PPC's Workpapers")

If ans = vbNo Then  ' User chose No.
    Exit Sub
End If
    
Application.ScreenUpdating = False
Sheet2.Select
Sheet2.HeadcountCB.Value = "Quarterly"
Range("ClearHead").ClearContents
Range("Headcount").Select
Sheet1.Select
Range("ClearSalaries").ClearContents
Range("YearEnd").Value = "=PPC_GetBalanceSheetDate()"
Range("Client").Value = "=PPC_GetClientName()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
Range("Salaries").Select
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Rollforward"
Sub Rollforward()
'
' Rollforward Macro
' Macro recorded 6/19/00 by Practitioners Publishing Company
'

'
Msg = "Prior period amounts will be replaced with the later" & vbCrLf
Msg = Msg & "period amounts. Do you want to continue?"
Beep
ans = MsgBox(Msg, vbYesNo + vbQuestion + vbDefaultButton1, "PPC's Workpapers")

If ans = vbNo Then  ' User chose No.
    Exit Sub
End If
    
Application.ScreenUpdating = False
Sheet2.Select
Range("Headcount").Select
Range("RollHeadPY").Copy
Range("RollHeadPY2").PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
Application.CutCopyMode = False
Range("RollHeadCY1").Copy
Range("RollHeadPY").PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
Application.CutCopyMode = False
Range("RollHeadCY2").Copy
Range("RollHeadCY3").PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
Application.CutCopyMode = False
Range("RollHeadCY4").ClearContents
Range("Headcount").Select
Sheet1.Select
Range(Range("WagesInputCY"), Range("WagesInputPY")).Copy
Range("WagesInputCY").Offset(0, 1).PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
Application.CutCopyMode = False
Range("BenefitsData").Select
Application.CutCopyMode = False
Selection.Copy
Range("BenefitsPY").Select
Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
    False, Transpose:=False
Range("WagesInputCY").ClearContents
Range("WagesMerit").ClearContents
Range("BenefitsCY").ClearContents

Range("YearEnd").Value = "=PPC_GetBalanceSheetDate()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True

Range("DatePrepared").ClearContents
Range("Preparer").ClearContents

Range("Salaries").Select
Application.ScreenUpdating = True

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub Worksheet_Activate()
'  Range("Salaries").Select
'End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "HeadcountCB, 2, 1, MSForms, ComboBox"
Private Sub HeadcountCB_Change()

Dim BegCell As Range
Set BegCell = ActiveCell

Application.ScreenUpdating = False
Range(Range("HeadInputBegCol"), Range("HeadInputEndCol")).ColumnWidth = 6
PageSetup.Orientation = xlLandscape
If HeadcountCB.Value = "Annual" Then
    Range(Range("HeadInputBegCol"), Range("HeadInputEndCol")).ColumnWidth = 9
    Range("HideColAnn").Columns.Hidden = True
    PageSetup.Orientation = xlPortrait
End If
If HeadcountCB.Value = "Semi-annual" Then
    Range(Range("HeadInputBegCol"), Range("HeadInputEndCol")).ColumnWidth = 9
    Range("HideColSemi").Columns.Hidden = True
    PageSetup.Orientation = xlPortrait
End If
If HeadcountCB.Value = "Quarterly" Then
    Range(Range("HeadInputBegCol"), Range("HeadInputEndCol")).ColumnWidth = 7
    Range("HideColQtr").Columns.Hidden = True
    PageSetup.Orientation = xlPortrait
End If
If BegCell.Columns.Hidden = False Then
    BegCell.Select
    Else
    Range("HeadInputBeg").Select
End If
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'Private Sub Worksheet_Activate()
'  Range("Analysis").Select
'End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
