Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 29, 0, MSForms, CommandButton"
Attribute VB_Control = "ComboBoxFactorNum, 21, 1, MSForms, ComboBox"
Option Explicit
Option Base 1
Option Compare Text

Private hasBeenInitialised As Boolean



Private Sub resizeCorrMatrix(numFactor As Integer)
    Dim asn$: asn = ActiveSheet.Name
    Dim domesticCurncyAddr$: domesticCurncyAddr = Range("NX_" & asn & "_M_DomesticCurrency").Address
    Dim foreignCurncyAddr$: foreignCurncyAddr = Range("NX_" & asn & "_M_ForeignCurrency").Address
    Dim anchor As Range: Set anchor = Range("NX_" & asn & "_M_CorrAnchor")

    
    Range("NX_" & asn & "_M_CorrAllData").Clear
    
    Dim i%, j%
    

    For i = 1 To numFactor
        anchor.Offset(0, i).Formula = "=" & foreignCurncyAddr & "&" & """" & " FACTOR" & CStr(i) & """"
        anchor.Offset(i, 0).Formula = "=" & foreignCurncyAddr & "&" & """" & " FACTOR" & CStr(i) & """"
    Next i

    
    For i = numFactor + 1 To 2 * numFactor
        anchor.Offset(0, i).Formula = "=" & domesticCurncyAddr & "&" & """" & " FACTOR" & CStr(i - numFactor) & """"
        anchor.Offset(i, 0).Formula = "=" & domesticCurncyAddr & "&" & """" & " FACTOR" & CStr(i - numFactor) & """"
    Next i
    
    anchor.Offset(0, 2 * numFactor + 1).Formula = "=" & foreignCurncyAddr & "&" & """" & "/" & """" & "&" & domesticCurncyAddr
    anchor.Offset(2 * numFactor + 1, 0).Formula = "=" & foreignCurncyAddr & "&" & """" & "/" & """" & "&" & domesticCurncyAddr
    
    For i = 1 To numFactor * 2 + 1
        anchor.Offset(i, i) = 1
        For j = i + 1 To numFactor * 2 + 1
            anchor.Offset(i, j) = 0
        Next j
    Next i
        

    Range(anchor.Offset(0, 0), anchor.Offset(numFactor * 2 + 1, numFactor * 2 + 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrAllData", RefersTo:=Selection
    
    
    Range(anchor.Offset(0, 1), anchor.Offset(0, numFactor * 2 + 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrColHeader", RefersTo:=Selection
    
    Range(anchor.Offset(1, 0), anchor.Offset(numFactor * 2 + 1, 0)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrRowHeader", RefersTo:=Selection
    
    Range(anchor.Offset(1, 1), anchor.Offset(numFactor * 2 + 1, numFactor * 2 + 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrData", RefersTo:=Selection
    
    anchor.Formula = "=nxlibmatrix(NX_" & asn & "_M_CorrColHeader,NX_" & asn & "_M_CorrRowHeader,NX_" & asn & "_M_CorrData," & """" & asn & ".Corr" & """" & ")"
    
    'Column Headings
    Call formatHeader(Range(anchor.Offset(0, 1), anchor.Offset(0, numFactor * 2 + 1)))
    'Row Headings
    Call formatHeader(Range(anchor.Offset(1, 0), anchor.Offset(numFactor * 2 + 1, 0)))
    'Data Range
    Call formatColorAndBorder(Range(anchor.Offset(1, 1), anchor.Offset(numFactor * 2 + 1, numFactor * 2 + 1)))
    'Anchor cell
    Call formatColorAndBorder(anchor)
    
End Sub

Private Sub CommandButton1_Click()
    If hasBeenInitialised = False Then Exit Sub
    Application.ScreenUpdating = False
    Select Case ComboBoxFactorNum.Text
    
        Case "1 Factor": resizeCorrMatrix 1
        Case "2 Factor": resizeCorrMatrix 2
        Case "3 Factor": resizeCorrMatrix 3
        Case "4 Factor": resizeCorrMatrix 4
        Case "5 Factor": resizeCorrMatrix 5
        Case "6 Factor": resizeCorrMatrix 6
        Case "7 Factor": resizeCorrMatrix 7
        Case "8 Factor": resizeCorrMatrix 8
        Case "9 Factor": resizeCorrMatrix 9
        Case "10 Factor": resizeCorrMatrix 10

        Case Else
            MsgBox "Fatal error in creating correlation matrix"
            Exit Sub
    End Select
    
    
       
    ActiveSheet.Calculate

End Sub

Private Sub Worksheet_Activate()
    
    ComboBoxFactorNum.Clear
    ComboBoxFactorNum.AddItem ("1 Factor")
    ComboBoxFactorNum.AddItem ("2 Factor")
    ComboBoxFactorNum.AddItem ("3 Factor")
    ComboBoxFactorNum.AddItem ("4 Factor")
    ComboBoxFactorNum.AddItem ("5 Factor")
    ComboBoxFactorNum.AddItem ("6 Factor")
    ComboBoxFactorNum.AddItem ("7 Factor")
    ComboBoxFactorNum.AddItem ("8 Factor")
    ComboBoxFactorNum.AddItem ("9 Factor")
    ComboBoxFactorNum.AddItem ("10 Factor")
    
    ComboBoxFactorNum.Text = "2 Factor"
    
    hasBeenInitialised = True

End Sub



''' Formatting Module

Private Sub formatHeader(tempRng As Range)
    tempRng.Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10040115
    End With
    With Selection.Font
        .ColorIndex = 2
        .Name = "Calibri"
        .Size = 11
    End With
    Cells(1, 1).Select
End Sub

Private Sub formatColorAndBorder(tempRng As Range)
    tempRng.Select
    
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ColorIndex = 2
    End With
    With Selection.Font
        .Name = "Calibri"
        .Size = 11
    End With

    Cells(1, 1).Select

End Sub



Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBoxCurrencyNum, 1, 0, MSForms, ComboBox"
Attribute VB_Control = "CommandButton1, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 3, 2, MSForms, CommandButton"
Option Explicit
Option Base 1
Option Compare Text

Private hasBeenInitialised As Boolean



Private Sub resizeCorrMatrix(numCurrency As Integer)
    Dim asn$: asn = ActiveSheet.Name
    Dim rngModelMapping As Range: Set rngModelMapping = Range("NX_" & asn & "_M_ModelMapping")
    Dim domesticCurncyAddr$: domesticCurncyAddr = Range("NX_" & asn & "_M_DomesticCurrency").Address
    Dim anchor As Range: Set anchor = Range("NX_" & asn & "_M_CorrAnchor")
    Range("NX_" & asn & "_M_CorrAllData").Clear
    
    anchor.Offset(0, 1).Formula = "=" & domesticCurncyAddr
    anchor.Offset(1, 0).Formula = "=" & domesticCurncyAddr
    
       
    Dim i%, j%
    For i = 2 To numCurrency
        anchor.Offset(0, i).Formula = "=" & rngModelMapping(i - 1, 1).Address
        anchor.Offset(i, 0).Formula = "=" & rngModelMapping(i - 1, 1).Address
    Next i
    
    For i = 1 To numCurrency - 1
        anchor.Offset(0, i + numCurrency).Formula = "=" & rngModelMapping(i, 1).Address & "&" & """" & "/" & """" & "&" & domesticCurncyAddr
        anchor.Offset(i + numCurrency, 0).Formula = "=" & rngModelMapping(i, 1).Address & "&" & """" & "/" & """" & "&" & domesticCurncyAddr
    Next i
    
    'Fill in the default matrix data

    For i = 1 To 2 * numCurrency - 1
        anchor.Offset(i, i) = 1
        For j = i + 1 To 2 * numCurrency - 1
            anchor.Offset(i, j) = 0
        Next j
    Next i
    
    
    Range(anchor.Offset(0, 0), anchor.Offset(numCurrency * 2 - 1, numCurrency * 2 - 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrAllData", RefersTo:=Selection
    'Column Headings
    Range(anchor.Offset(0, 1), anchor.Offset(0, numCurrency * 2 - 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrColHeader", RefersTo:=Selection
    Call formatHeader(Range("NX_" & asn & "_M_CorrColHeader"))
            
    'Row Headings
    Range(anchor.Offset(1, 0), anchor.Offset(numCurrency * 2 - 1, 0)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrRowHeader", RefersTo:=Selection
    Call formatHeader(Range("NX_" & asn & "_M_CorrRowHeader"))

    'Data Range
    Range(anchor.Offset(1, 1), anchor.Offset(numCurrency * 2 - 1, numCurrency * 2 - 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrData", RefersTo:=Selection
    Call formatColorAndBorder(Range(anchor.Offset(1, 1), anchor.Offset(numCurrency * 2 - 1, numCurrency * 2 - 1)))
    
    anchor.Formula = "=nxlibmatrix(NX_" & asn & "_M_CorrColHeader,NX_" & asn & "_M_CorrRowHeader,NX_" & asn & "_M_CorrData," & """" & asn & ".Corr" & """" & ")"
    
    Call formatColorAndBorder(anchor)

'    Cells(1, 1).Select
    

End Sub


Private Sub Resize(numCurrency As Integer)
    Dim asn$: asn = ActiveSheet.Name
    Dim modelMapping$: modelMapping = "NX_" & asn & "_M_ModelMapping"
    Range(modelMapping).Clear
    Range(Range(modelMapping).Cells(1, 1), Range(modelMapping).Cells(numCurrency - 1, 3)).Select
    ActiveWorkbook.Names.Add Name:=modelMapping, RefersTo:=Selection
    
    Dim tempRange As Range: Set tempRange = Range(modelMapping)
    formatColorAndBorder tempRange
  '  Call formatColorAndBorder(tempRange)
    addConditionalFormat tempRange
    
    Dim i%, j%
    For i = 1 To tempRange.Rows.Count
        For j = 1 To tempRange.Columns.Count
            Range(modelMapping).Cells(i, j) = "<LINK>"
        Next j
    Next i
    
    
    Call resizeCorrMatrix(numCurrency)
      

End Sub


Private Sub CreateModel()
    Dim asn$: asn = ActiveSheet.Name
    Dim rngModelMapping As Range: Set rngModelMapping = Range("NX_" & asn & "_M_ModelMapping")
    Dim numForeignCurrency%: numForeignCurrency = rngModelMapping.Rows.Count
    
    Dim rngForeignModel As Range: Set rngForeignModel = Range("NX_" & asn & "_M_ForeignModel")
    Dim rngFXModel As Range: Set rngFXModel = Range("NX_" & asn & "_M_FXModel")
    rngForeignModel.Formula = "=nxlibdata(" & """" & "ID" & """" & "," & Range(rngModelMapping.Cells(1, 2), rngModelMapping.Cells(numForeignCurrency, 2)).Address & "," & """" & "NCurrencyModel_Generic.ForeignModelData" & """" & ")"
    rngFXModel.Formula = "=nxlibdata(" & """" & "ID" & """" & "," & Range(rngModelMapping.Cells(1, 3), rngModelMapping.Cells(numForeignCurrency, 3)).Address & "," & """" & "NCurrencyModel_Generic.FXModelData" & """" & ")"
    
    ActiveSheet.Calculate
    

End Sub

Private Sub CommandButton1_Click()
    If hasBeenInitialised = False Then Exit Sub
    Application.ScreenUpdating = False
    Select Case ComboBoxCurrencyNum.Text
    
        Case "2 Currency": Resize 2
        Case "3 Currency": Resize 3
        Case "4 Currency": Resize 4
        Case "5 Currency": Resize 5
        Case "6 Currency": Resize 6
        Case "7 Currency": Resize 7
        Case "8 Currency": Resize 8
        Case "9 Currency": Resize 9
        Case "10 Currency": Resize 10

        Case Else
            MsgBox "Fatal error in creating correlation matrix"
            Exit Sub
    End Select
    
    
       
    ActiveSheet.Calculate

End Sub

Private Sub CommandButton2_Click()
    Call CreateModel
    
End Sub

Private Sub Worksheet_Activate()
    
    ComboBoxCurrencyNum.Clear
    ComboBoxCurrencyNum.AddItem ("2 Currency")
    ComboBoxCurrencyNum.AddItem ("3 Currency")
    ComboBoxCurrencyNum.AddItem ("4 Currency")
    ComboBoxCurrencyNum.AddItem ("5 Currency")
    ComboBoxCurrencyNum.AddItem ("6 Currency")
    ComboBoxCurrencyNum.AddItem ("7 Currency")
    ComboBoxCurrencyNum.AddItem ("8 Currency")
    ComboBoxCurrencyNum.AddItem ("9 Currency")
    ComboBoxCurrencyNum.AddItem ("10 Currency")
    
    ComboBoxCurrencyNum.Text = "2 Currency"
    
    hasBeenInitialised = True

End Sub

''' Formatting Module

Private Sub addConditionalFormat(tempRng As Range)
    tempRng.Select
    Selection.FormatConditions.Delete
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""<LINK>"""
    Selection.FormatConditions(1).Interior.ColorIndex = 3
        
    Cells(1, 1).Select
    

End Sub

Private Sub formatHeader(tempRng As Range)
    tempRng.Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10040115
    End With
    With Selection.Font
        .ColorIndex = 2
        .Name = "Calibri"
        .Size = 11
    End With
    Cells(1, 1).Select
End Sub

Private Sub formatColorAndBorder(tempRng As Range)
    tempRng.Select
    
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ColorIndex = 2
    End With
    With Selection.Font
        .Name = "Calibri"
        .Size = 11
    End With

    Cells(1, 1).Select

End Sub




Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "ComboBoxCurrencyNum, 1, 0, MSForms, ComboBox"
Attribute VB_Control = "CommandButton1, 2, 1, MSForms, CommandButton"
Attribute VB_Control = "CommandButton2, 3, 2, MSForms, CommandButton"
Attribute VB_Control = "ComboBoxFactorNum, 4, 3, MSForms, ComboBox"
Option Explicit
Option Base 1
Option Compare Text

Private hasBeenInitialised As Boolean



Private Sub resizeCorrMatrix(numCurrency As Integer, numFactor As Integer)
    Dim asn$: asn = ActiveSheet.Name
    Dim rngModelMapping As Range: Set rngModelMapping = Range("NX_" & asn & "_M_ModelMapping")
    Dim domesticCurncyAddr$: domesticCurncyAddr = Range("NX_" & asn & "_M_DomesticCurrency").Address
    Dim anchor As Range: Set anchor = Range("NX_" & asn & "_M_CorrAnchor")
    Range("NX_" & asn & "_M_CorrAllData").Clear
  
    Dim i%, j%
    For i = 1 To numCurrency
        For j = 1 To numFactor
            If i = 1 Then
                anchor.Offset(0, (i - 1) * numFactor + j).Formula = "=" & domesticCurncyAddr & "&" & """" & " FACTOR" & CStr(j) & """"
                anchor.Offset((i - 1) * numFactor + j, 0).Formula = "=" & domesticCurncyAddr & "&" & """" & " FACTOR" & CStr(j) & """"
            Else
                anchor.Offset(0, (i - 1) * numFactor + j).Formula = "=" & rngModelMapping(i - 1, 1).Address & "&" & """" & " FACTOR" & CStr(j) & """"
                anchor.Offset((i - 1) * numFactor + j, 0).Formula = "=" & rngModelMapping(i - 1, 1).Address & "&" & """" & " FACTOR" & CStr(j) & """"
            End If
        Next j
    Next i
    
    For i = numFactor * numCurrency + 1 To numFactor * numCurrency + (numCurrency - 1)
        anchor.Offset(0, i).Formula = "=" & rngModelMapping(i - numFactor * numCurrency, 1).Address & "&" & """" & "/" & """" & "&" & domesticCurncyAddr
        anchor.Offset(i, 0).Formula = "=" & rngModelMapping(i - numFactor * numCurrency, 1).Address & "&" & """" & "/" & """" & "&" & domesticCurncyAddr
    Next i
    
    'Fill in the default matrix data

    For i = 1 To numFactor * numCurrency + numCurrency - 1
        anchor.Offset(i, i) = 1
        For j = i + 1 To numFactor * numCurrency + numCurrency - 1
            anchor.Offset(i, j) = 0
        Next j
    Next i
    
    
    Range(anchor.Offset(0, 0), anchor.Offset(numFactor * numCurrency + numCurrency - 1, numFactor * numCurrency + numCurrency - 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrAllData", RefersTo:=Selection
    'Column Headings
    Range(anchor.Offset(0, 1), anchor.Offset(0, numFactor * numCurrency + numCurrency - 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrColHeader", RefersTo:=Selection
                
    'Row Headings
    Range(anchor.Offset(1, 0), anchor.Offset(numFactor * numCurrency + numCurrency - 1, 0)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrRowHeader", RefersTo:=Selection
    
    'Data Range
    Range(anchor.Offset(1, 1), anchor.Offset(numFactor * numCurrency + numCurrency - 1, numFactor * numCurrency + numCurrency - 1)).Select
    ActiveWorkbook.Names.Add Name:="NX_" & asn & "_M_CorrData", RefersTo:=Selection
        
    anchor.Formula = "=nxlibmatrix(NX_" & asn & "_M_CorrColHeader,NX_" & asn & "_M_CorrRowHeader,NX_" & asn & "_M_CorrData," & """" & asn & ".Corr" & """" & ")"
    
    Call formatHeader(Range("NX_" & asn & "_M_CorrColHeader"))
    Call formatHeader(Range("NX_" & asn & "_M_CorrRowHeader"))
    Call formatColorAndBorder(Range("NX_" & asn & "_M_CorrData"))
    Call formatColorAndBorder(anchor)

'    Cells(1, 1).Select
    

End Sub


Private Sub Resize(numCurrency As Integer, numFactor As Integer)
    Dim asn$: asn = ActiveSheet.Name
    Dim modelMapping$: modelMapping = "NX_" & asn & "_M_ModelMapping"
    Range(modelMapping).Clear
    Range(Range(modelMapping).Cells(1, 1), Range(modelMapping).Cells(numCurrency - 1, 3)).Select
    ActiveWorkbook.Names.Add Name:=modelMapping, RefersTo:=Selection
  
    Dim tempRange As Range: Set tempRange = Range(modelMapping)
    Call formatColorAndBorder(tempRange)
    Call addConditionalFormat(tempRange)
        
    Dim i%, j%
    For i = 1 To tempRange.Rows.Count
        For j = 1 To tempRange.Columns.Count
            Range(modelMapping).Cells(i, j) = "<LINK>"
        Next j
    Next i
        
    Call resizeCorrMatrix(numCurrency, numFactor)
      

End Sub


Private Sub CreateModel()
    Dim asn$: asn = ActiveSheet.Name
    Dim rngModelMapping As Range: Set rngModelMapping = Range("NX_" & asn & "_M_ModelMapping")
    Dim numForeignCurrency%: numForeignCurrency = rngModelMapping.Rows.Count
    
    Dim rngForeignModel As Range: Set rngForeignModel = Range("NX_" & asn & "_M_ForeignModel")
    Dim rngFXModel As Range: Set rngFXModel = Range("NX_" & asn & "_M_FXModel")
    rngForeignModel.Formula = "=nxlibdata(" & """" & "ID" & """" & "," & Range(rngModelMapping.Cells(1, 2), rngModelMapping.Cells(numForeignCurrency, 2)).Address & "," & """" & "NCurrencyModel_LMM.ForeignModelData" & """" & ")"
    rngFXModel.Formula = "=nxlibdata(" & """" & "ID" & """" & "," & Range(rngModelMapping.Cells(1, 3), rngModelMapping.Cells(numForeignCurrency, 3)).Address & "," & """" & "NCurrencyModel_LMM.FXModelData" & """" & ")"
    
    ActiveSheet.Calculate
    

End Sub

Private Sub CommandButton1_Click()
    If hasBeenInitialised = False Then Exit Sub
    Application.ScreenUpdating = False
    
    Dim numCurncy%, numFactor%
    Dim temp As Variant
    
    On Error GoTo ResizeMatrix_ErrorHander
    
    temp = Split(ComboBoxCurrencyNum.Text)
    numCurncy = CInt(temp(0))
    temp = Split(ComboBoxFactorNum.Text)
    numFactor = CInt(temp(0))
    
    On Error GoTo 0
    
    Call Resize(numCurncy, numFactor)
          
    ActiveSheet.Calculate
    Exit Sub

ResizeMatrix_ErrorHander:
    MsgBox "Fatal error in creating correlation matrix"
    Exit Sub
End Sub

Private Sub CommandButton2_Click()
    Call CreateModel
    
End Sub

Private Sub Worksheet_Activate()
    
    ComboBoxCurrencyNum.Clear
    ComboBoxCurrencyNum.AddItem ("2 Currency")
    ComboBoxCurrencyNum.AddItem ("3 Currency")
    ComboBoxCurrencyNum.AddItem ("4 Currency")
    ComboBoxCurrencyNum.AddItem ("5 Currency")
    ComboBoxCurrencyNum.AddItem ("6 Currency")
    ComboBoxCurrencyNum.AddItem ("7 Currency")
    ComboBoxCurrencyNum.AddItem ("8 Currency")
    ComboBoxCurrencyNum.AddItem ("9 Currency")
    ComboBoxCurrencyNum.AddItem ("10 Currency")
    ComboBoxCurrencyNum.Text = "2 Currency"
    
    ComboBoxFactorNum.Clear
    ComboBoxFactorNum.AddItem ("1 Factor")
    ComboBoxFactorNum.AddItem ("2 Factor")
    ComboBoxFactorNum.AddItem ("3 Factor")
    ComboBoxFactorNum.AddItem ("4 Factor")
    ComboBoxFactorNum.AddItem ("5 Factor")
    ComboBoxFactorNum.AddItem ("6 Factor")
    ComboBoxFactorNum.AddItem ("7 Factor")
    ComboBoxFactorNum.AddItem ("8 Factor")
    ComboBoxFactorNum.AddItem ("9 Factor")
    ComboBoxFactorNum.AddItem ("10 Factor")
    
    ComboBoxFactorNum.Text = "2 Factor"
    
    hasBeenInitialised = True

End Sub



''' Formatting Module

Private Sub addConditionalFormat(tempRng As Range)
    tempRng.Select
    Selection.FormatConditions.Delete
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""<LINK>"""
    Selection.FormatConditions(1).Interior.ColorIndex = 3
        
    Cells(1, 1).Select
    

End Sub

Private Sub formatHeader(tempRng As Range)
    tempRng.Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10040115
    End With
    With Selection.Font
        .ColorIndex = 2
        .Name = "Calibri"
        .Size = 11
    End With
    Cells(1, 1).Select
End Sub

Private Sub formatColorAndBorder(tempRng As Range)
    tempRng.Select
    
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ColorIndex = 2
    End With
    With Selection.Font
        .Name = "Calibri"
        .Size = 11
    End With

    Cells(1, 1).Select

End Sub




Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
