Attribute VB_Name = "Cls_Helper"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public WithEvents TxtGroup As MSForms.TextBox
Attribute TxtGroup.VB_VarHelpID = -1
Public WithEvents ButtonGroup As MSForms.CommandButton
Attribute ButtonGroup.VB_VarHelpID = -1
Public WithEvents ComboGroup As MSForms.ComboBox
Attribute ComboGroup.VB_VarHelpID = -1

Private Sub TxtGroup_GotFocus()

    'MsgBox "Validate " & TxtGroup.Name
    Form_BEA.lbl_hilfe.Caption = "Hallo" 'Index & Shift & Button & X & Y
End Sub

Private Sub ButtonGroup_Click()
    'MsgBox "Hello from " & ButtonGroup.Name
End Sub

Private Sub TxtGroup_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Form_BEA.lbl_hilfe.Caption = TxtGroup.Name

    Set Rng = Sheets("V_Helper").Range("A1:C100").find(TxtGroup.Name)
    If Rng Is Nothing Then
        Exit Sub
    End If

    Form_BEA.lbl_hilfe.Caption = Sheets("V_Helper").Range("C" & Rng.Row).Text
End Sub

Private Sub ComboGroup_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)

    Set Rng = Sheets("V_Helper").Range("A1:C100").find(ComboGroup.Name)
    If Rng Is Nothing Then
        Exit Sub
    End If

    'Form_BEA.lbl_hilfe.Caption = ComboGroup.Name & "Zeile: " & Rng.Row & "; Adresse: " & Rng.Address & Sheets("V_Helper").Range("C" & Rng.Row).Text
    Form_BEA.lbl_hilfe.Caption = Sheets("V_Helper").Range("C" & Rng.Row).Text

End Sub

Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Form_Main"
Attribute VB_Base = "0{0E22A343-D165-4AB8-A3FF-2A51D28A72A1}{7A0E77DE-518B-42D5-8312-51791CBA6CEE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Initialize()
    Label2.Caption = "Version: " & WBS_Version
End Sub

'--- Men|fffd|eintr|fffd|ge

Private Sub But_Menu_bea_Click()
    '--- Men|fffd| Berechnug bearbeiten
    '--- Einblenden der Tabellenbl|fffd|tter
    ActiveWorkbook.Worksheets("Zusammenfassung").Visible = True
    ActiveWorkbook.Worksheets("Harte Faktoren").Visible = True
    ActiveWorkbook.Worksheets("Weiche Faktoren").Visible = True
    
    
    '--- f|fffd|r alle Bl|fffd|tter mit Passwortschutz
    Stop
    Dim ws As Worksheet
    For Each ws In Worksheets
        ws.Protect userinterfaceonly:=True ', Password:="DeinPasswort" 'Passwort anpassen
        ws.EnableAutoFilter = True 'erm|fffd|glicht Autofilter
        ws.EnableOutlining = True 'erm|fffd|glicht Gruppierung/Gliederun
    Next ws
    
End Sub

Private Sub BUT_Close_Click()
    '--- Anwendung beenden
    '--- XXX Schlie|fffd|en Excel
    Unload Me
End Sub



Attribute VB_Name = "Form_Start"
Attribute VB_Base = "0{3D5F2367-E97E-46F1-85B2-8D244BFFEE5F}{B0A4B9E3-C6EF-47DA-BC7F-BDB508C16CAA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub UserForm_Activate()
    INIT
End Sub

Sub INIT()
    
    WBS_Version1 = Sheets("Harte Faktoren").Range("C4").Text
    Label2.Caption = "Version: " & WBS_Version1
    'Label1.Caption = "WBS" & Chr(13) & "Berechnung"
    
    For i = 2 To 10
        Wait_for_Time (0.15)
    Next
    Wait_for_Time (1)
    Label2.Visible = True
    
    Unload Me
    
    '--- Men|fffd| Berechnug bearbeiten
    '--- Einblenden der Tabellenbl|fffd|tter
    ActiveWorkbook.Worksheets("Zusammenfassung").Visible = True
    ActiveWorkbook.Worksheets("Harte Faktoren").Visible = True
    ActiveWorkbook.Worksheets("Weiche Faktoren").Visible = True
    
    
    '--- f|fffd|r alle Bl|fffd|tter mit Passwortschutz
    Dim ws As Worksheet
    For Each ws In Worksheets
        ws.Protect userinterfaceonly:=True, DrawingObjects:=True, Contents:=True, Scenarios:=True, Password:="HOWOGE_WBS"  'Passwort anpassen
        ws.EnableAutoFilter = True  'erm|fffd|glicht Autofilter
        ws.EnableOutlining = True   'erm|fffd|glicht Gruppierung/Gliederun
    Next ws
    
    HF_ButtonsEinf|fffd|gen
    Application.EnableEvents = True
End Sub

Sub Wait_for_Time(Dauer)
'--- Funktionssammlung
    Start = Timer
    Do While Timer < Start + Dauer
        DoEvents
    Loop
End Sub



Attribute VB_Name = "Mod_Buttons"
Sub HF_ButtonsEinf|fffd|gen()
    Dim neuerButton, iZeile%
    Application.ScreenUpdating = False
    
    Sheets("Harte Faktoren").Select
    '--- Erst alle Buttons L|fffd|schen
    For Each btn In Sheets("Harte Faktoren").Buttons
        btn.Delete
    Next
    Sheets("Harte Faktoren").Outline.ShowLevels RowLevels:=3
    Set neuerButton = ActiveSheet.Buttons.Add(0, ActiveSheet.Cells(2, "G").Top, 14, 13)
    neuerButton.OnAction = "HF_Bea"
    neuerButton.Caption = "+"
    
    '--- Zeilen durchlaufen und die Einf|fffd|ge und L|fffd|schbutton erstellen
    For iZeile% = 1 To 2000
        If Mid(ActiveSheet.Cells(iZeile%, "A").Text, 1, 2) = "A_" Then
            '--- Einf|fffd|gen Filterbutton
            Set neuerButton = ActiveSheet.Buttons.Add(0, ActiveSheet.Cells(iZeile%, "A").Top, 14, 13)
            neuerButton.OnAction = "HF_Filterbutton"
            neuerButton.Caption = "Y"
        End If
        
        If Mid(ActiveSheet.Cells(iZeile%, "A").Text, 1, 2) = "D_" Then
            '--- Einf|fffd|gen L|fffd|schbutton
            Set neuerButton = ActiveSheet.Buttons.Add(0, ActiveSheet.Cells(iZeile%, "A").Top, 14, 13)
            neuerButton.OnAction = "HF_L|fffd|schbutton"
            neuerButton.Caption = "-"
        End If
        
        If Mid(ActiveSheet.Cells(iZeile%, "A").Text, 1, 2) = "E_" Then
            '--- Einf|fffd|gen Einf|fffd|gebutton
            Set neuerButton = ActiveSheet.Buttons.Add(0, ActiveSheet.Cells(iZeile%, "A").Top, 14, 13)
            neuerButton.OnAction = "HF_Einf|fffd|gebutton"
            neuerButton.Caption = "+"
        End If
    Next iZeile%
    
    Sheets("Harte Faktoren").Outline.ShowLevels RowLevels:=2
    
    Sheets("Zusammenfassung").Select

    Application.ScreenUpdating = True
    

End Sub

Sub HF_Bea()
    Dim strPw As String
    strPw = "HOWOGE_WBS"
    If InputBoxDK("Bitte Passwort eingeben...", "--= HOWOGE WBS =--") <> strPw Then
        MsgBox "Falsches Passwort!", , "--= HOWOGE WBS =--"
        Exit Sub
    Else
        For Each ws In Worksheets
            ws.Unprotect strPw
        Next ws
       'MsgBox "Blattschutz aufgehoben!", , "--= HOWOGE WBS =--"
    End If
End Sub
 
Sub HF_L|fffd|schbutton()
    Application.ScreenUpdating = False
    Dim iZeile%
    '--- Merke Daten
    iZeile = ActiveSheet.Buttons(Application.Caller).TopLeftCell.Row
    
    '--- L|fffd|schen Zeile
    If Mid(ActiveSheet.Cells(iZeile% - 1, "A").Text, 1, 2) = "A_" Then
       '--- L|fffd|schbutton Hilfetext erweitern bei Erstzeile
       MsgBox "Die Erste Zeile kann nicht gel|fffd|scht werden.", , "--= HOWOGE WBS =--"
       Exit Sub
    End If
    
    If MsgBox("Sind Sie sicher?", vbYesNo + 256, "Zeile l|fffd|schen") = vbNo Then Exit Sub
    ActiveSheet.Buttons(Application.Caller).Delete
    Rows(iZeile).Delete
    
    '--- Anpassung Formeln Harte Faktoren
    
    
    '--- Anpassung Formeln Weiche Faktoren
    tmp_Bereich = "D_" & Mid(ActiveSheet.Cells(iZeile%, "A").Text, 3)

    '--- Ermitteln Erstwert und Letztwert
    For jZeile% = 1 To 2000
        If Mid(ActiveSheet.Cells(jZeile%, "A").Text, 1) = tmp_Bereich Then
            If tmp_von = 0 Then tmp_von = jZeile%
            tmp_bis = jZeile%
        End If
    Next
    
    '--- Formeln anpassen
    '--- Zimmertypen
    ActiveWorkbook.Worksheets("Weiche Faktoren").Select
    For jZeile% = 1 To 2000

        If ActiveSheet.Cells(jZeile%, "A").Text = "F_" & Mid(tmp_Bereich, 3) Then

            tmp_vonbis1 = "C" & tmp_von & ":G" & tmp_bis
            tmp_vonbis2 = "C" & tmp_von & ":C" & tmp_bis
            
        
            For kzeile% = 4 To 24
                ActiveWorkbook.Worksheets("Weiche Faktoren").Cells(jZeile%, kzeile%).Formula = _
                    "=IFERROR(INDEX('Harte Faktoren'!" & tmp_vonbis1 & ",MATCH(" & Cells(jZeile - 1, kzeile).Address(0, 0) & ",'Harte Faktoren'!" & tmp_vonbis2 & ",0),5),"""")"
            Next
        End If

    Next
    ActiveWorkbook.Worksheets("Harte Faktoren").Select
    Cells(iZeile, "B").Select
    Application.ScreenUpdating = True
    

 End Sub

Sub HF_Einf|fffd|gebutton()
    Dim neuerButton, iZeile%, jZeile%
    Application.ScreenUpdating = False

    
    'If MsgBox("Sind Sie sicher?", vbYesNo + 256, "Zeile einf|fffd|gen") = vbNo Then Exit Sub
    iZeile = ActiveSheet.Buttons(Application.Caller).TopLeftCell.Row
    
    '--- Zeile kopieren
    Rows(iZeile - 1 & ":" & iZeile - 1).Select
    Selection.Copy
    Selection.Insert Shift:=xlDown
    Application.CutCopyMode = False
    
    
    '--- Inhalte rausl|fffd|schen
    For jSpalte% = 2 To 100
        Cells(iZeile, jSpalte%).Select
        If Selection.Locked = False Then
            Selection.Formula = ""
        End If
    Next
    
    '--- Anpassung Formeln Harte Faktoren
    tmp_Bereich = "D_" & Mid(ActiveSheet.Cells(iZeile%, "A").Text, 3)

    '--- Ermitteln Erstwert und Letztwert
    For jZeile% = 1 To 2000
        If ActiveSheet.Cells(jZeile%, "A").Text = tmp_Bereich Then
            If tmp_von = 0 Then tmp_von = jZeile%
            tmp_bis = jZeile%
        End If
    Next
    
    '--- Formeln anpassen
    '--- Bereich Durchschnitt
    tmp_vonbis = "G" & tmp_von & ":G" & tmp_bis
    Cells(iZeile + 1, "G").Formula = "=Round(SUM(" & tmp_vonbis & ")/Count(" & tmp_vonbis & "),0.5)"
    
    '--- Formeln Zusammenfassung
    For jZeile% = 1 To 2000
        If ActiveSheet.Cells(jZeile%, "A").Text = "F_" & Mid(ActiveSheet.Cells(iZeile%, "A").Text, 3) Then
            
            '--- Spalte I Plan Anzahl
            tmp_vonbis1 = "G" & tmp_von & ":G" & tmp_bis
            tmp_vonbis2 = "B" & tmp_von & ":B" & tmp_bis
            Cells(jZeile%, "I").Formula = "=COUNT(" & tmp_vonbis1 & ")-COUNTIF(" & tmp_vonbis2 & ","""")"
            
            
            '--- Spalte M Plan WFL
            tmp_vonbis = "G" & tmp_von & ":G" & tmp_bis
            Cells(jZeile%, "M").Formula = "=SUM(" & tmp_vonbis & ")"

            '--- Spalte U Plan Anzahl gef|fffd|rdert
            tmp_vonbis = "AV" & tmp_von & ":AV" & tmp_bis
            Cells(jZeile%, "U").Formula = "=COUNTIF(" & tmp_vonbis & ",""ja"")"
            
            '--- Spalte T
            'tmp_vonbis = "AY" & tmp_von & ":AY" & tmp_bis
            'Cells(jZeile%, "T").Formula = "=COUNTIF(" & tmp_vonbis & ",""ja"")"
            
            '--- Spalte W
            tmp_vonbis1 = "AT" & tmp_von & ":AT" & tmp_bis
            tmp_vonbis2 = "G" & tmp_von & ":G" & tmp_bis
            Cells(jZeile%, "W").Formula = "=SUMIF(" & tmp_vonbis1 & ",""ja""," & tmp_vonbis2 & ")"

            '--- Spalte Y
            tmp_vonbis = "AS" & tmp_von & ":AS" & tmp_bis
            Cells(jZeile%, "Y").Formula = "=COUNTIF(" & tmp_vonbis & ",""ja"")"
        
            '--- Spalte AD
            tmp_vonbis = "AV" & tmp_von & ":AV" & tmp_bis
            Cells(jZeile%, "AD").Formula = "=COUNTIF(" & tmp_vonbis & ",""x"")"
        
            '--- Spalte AE
            tmp_vonbis1 = "AV" & tmp_von & ":AV" & tmp_bis
            tmp_vonbis2 = "G" & tmp_von & ":G" & tmp_bis
            Cells(jZeile%, "AE").Formula = "=SUMIF(" & tmp_vonbis1 & ",""ja""," & tmp_vonbis2 & ")"
        End If
    Next
    
    '--- Anpassung Formeln Weiche Faktoren
    tmp_Bereich = "D_" & Mid(ActiveSheet.Cells(iZeile%, "A").Text, 3)

    '--- Ermitteln Erstwert und Letztwert
    For jZeile% = 1 To 2000
        If Mid(ActiveSheet.Cells(jZeile%, "A").Text, 1) = tmp_Bereich Then
            If tmp_von = 0 Then tmp_von = jZeile%
            tmp_bis = jZeile%
        End If
    Next
    
    '--- Formeln anpassen
    '--- Zimmertypen
    ActiveWorkbook.Worksheets("Weiche Faktoren").Select
    For jZeile% = 1 To 2000

        If ActiveSheet.Cells(jZeile%, "A").Text = "F_" & Mid(tmp_Bereich, 3) Then

            tmp_vonbis1 = "C" & tmp_von & ":G" & tmp_bis
            tmp_vonbis2 = "C" & tmp_von & ":C" & tmp_bis
            
        
            For kzeile% = 4 To 24
                ActiveWorkbook.Worksheets("Weiche Faktoren").Cells(jZeile%, kzeile%).Formula = _
                    "=IFERROR(INDEX('Harte Faktoren'!" & tmp_vonbis1 & ",MATCH(" & Cells(jZeile - 1, kzeile).Address(0, 0) & ",'Harte Faktoren'!" & tmp_vonbis2 & ",0),5),"""")"
            Next
        End If

    Next
    ActiveWorkbook.Worksheets("Harte Faktoren").Select
    Cells(iZeile, "B").Select
    Application.ScreenUpdating = True
End Sub
Sub HF_Filterbutton()

    Application.ScreenUpdating = False
    Dim iZeile%
    '--- Merke Daten
    iZeile = ActiveSheet.Buttons(Application.Caller).TopLeftCell.Row
    tmp_Bereich = "D_" & Mid(ActiveSheet.Cells(iZeile%, "A").Text, 3)

    '--- Ermitteln Erstwert und Letztwert
    For jZeile% = 1 To 2000
        If Mid(ActiveSheet.Cells(jZeile%, "A").Text, 1) = tmp_Bereich Then
            If tmp_von = 0 Then tmp_von = jZeile%
            tmp_bis = jZeile%
        End If
    Next
    
    Range("B" & iZeile, "E" & tmp_bis).Select
    
    Selection.AutoFilter
    Range("A" & iZeile).Select

End Sub
Attribute VB_Name = "Mod_Main"
Global Const WBS_Version As String = "2.7.3"

Private Sub auto_open()
    Load Form_Start
    Form_Start.Show
End Sub

Sub Main()
    Load Form_Main
    Form_Main.Show
End Sub



Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Sub EnableEve()
    Application.EnableEvents = True
End Sub
Private Sub Worksheet_Change(ByVal Target As Excel.Range)

Dim Merkwert_neu As String
Dim Merkwert_alt As String

Application.EnableEvents = False

Select Case Mid(Cells(Range(Target.AddressLocal).Row, 1), 1, 2)

Case "V_"
    
    '--- Multizelleneingabe pr|fffd|fen
    If Target.count > 1 Then
        MsgBox "Bitte nur einzelne Zellen bearbeiten!"
        Target.ClearContent
        Application.EnableEvents = True
        Exit Sub
    End If

    '--- Duplikate pr|fffd|fen
    If Target <> "" Then
        '--- nicht dynamisch
        tmp_Merk = count(Target.Value, Range("D7:R15"))
        If tmp_Merk > 1 Then
            MsgBox "Wert bereits vorhanden!"
            Target.ClearContents

            Application.EnableEvents = True
            Exit Sub
        End If
             
        Set rngSuchBereich = Nothing
        Set BereichA = Nothing
    End If
    
    
    Merkwert_neu = Target
    Application.Undo
    Merkwert_alt = Range(Target.AddressLocal)
    Range(Target.AddressLocal) = Merkwert_neu
    
    tmp_Bereich = Mid(Cells(Range(Target.AddressLocal).Row + 1, 1), 3, 1)
    tmp_Zeile = Range(Target.AddressLocal).Row
    tmp_Spalte = Range(Target.AddressLocal).Column
    tmp_Nummer = Range(Target.AddressLocal).Column - 3

    '--- Keine Verarbeitung der ersten Spalte
    If tmp_Nummer = 1 Then
        '--- Werte umschreiben
        ersetze Merkwert_alt, Merkwert_neu, Worksheets("Harte Faktoren").Range("C40:C2000")
        Worksheets("Weiche Faktoren").Select
        Cells(tmp_Zeile, tmp_Spalte).Select
        Application.EnableEvents = True
        Exit Sub
    End If

    '--- pr|fffd|fen L|fffd|schung
    If Target = "" Then
        '--- L|fffd|schen
        SF_l|fffd|schen "D_" & tmp_Bereich & "_" & tmp_Nummer, tmp_Spalte, tmp_Zeile
        ersetze Merkwert_alt, Merkwert_neu, Worksheets("Harte Faktoren").Range("C40:C2000")
        Worksheets("Weiche Faktoren").Select
        Cells(tmp_Zeile, tmp_Spalte).Select
        Application.EnableEvents = True
        Exit Sub
    End If
    
    '--- pr|fffd|fen Einf|fffd|gen
    If Len(Target) > 0 Then
        For i = tmp_Spalte - 1 To 4 Step -1
        '--- Pr|fffd|fen welce Spalte davor gef|fffd|llt ist
            If ActiveSheet.Cells(tmp_Zeile, i).Text <> "" Then
                '--- einf|fffd|gen
                SF_einf|fffd|gen "D_" & tmp_Bereich & "_" & tmp_Nummer, "D_" & tmp_Bereich & "_" & i - 3, tmp_Spalte, tmp_Zeile, Target.AddressLocal
                Exit For
            End If
            '--- noch gar keine gef|fffd|llt
            '--- einf|fffd|gen
            If i = 4 Then
                SF_einf|fffd|gen "D_" & tmp_Bereich & "_" & tmp_Nummer, "D_" & tmp_Bereich & "_" & i - 3, tmp_Spalte, tmp_Zeile, Target.AddressLocal
                Exit For
            End If
        Next
        ersetze Merkwert_alt, Merkwert_neu, Worksheets("Harte Faktoren").Range("C40:C2000")
        Worksheets("Weiche Faktoren").Select
        Cells(tmp_Zeile, tmp_Spalte).Select
    End If
Case Else
    '--- alle anderen Zelleingaben
    Application.EnableEvents = True
    Exit Sub
End Select

Application.EnableEvents = True

End Sub

Sub SF_l|fffd|schen(Werte, Wert_Spalte, Wert_Zeile)
    '--- ausw|fffd|hlen aller Zeilen mit dem Datenwert und l|fffd|schen
    Application.ScreenUpdating = False
    For iZeile% = 1 To 5000
        If ActiveSheet.Cells(iZeile%, "A").Text = Werte Then
            Rows(iZeile & ":" & iZeile).Select
            Selection.Delete
        End If
    Next
    
    '--- Anpassen Punkteformel
        '--- entf|fffd|llt da Formel mit Leerzeile arbeiten kann
    
    '--- Ausgangszelle ausw|fffd|hlen
    Worksheets("Weiche Faktoren").Cells(Wert_Zeile, Wert_Spalte).Select
    Application.ScreenUpdating = True
End Sub


Sub SF_einf|fffd|gen(Werte, nach_Bereich, Wert_Spalte, Wert_Zeile, Merkwert)
    '--- ausw|fffd|hlen des Bereichs vor dem aktuellen und kopieren der Daten Zeilen mit dem Datenwert und l|fffd|schen Handeingaben
    Application.ScreenUpdating = False
    For iZeile% = 1 To 5000
        If ActiveSheet.Cells(iZeile%, "A").Text = nach_Bereich Then
            '---pr|fffd|fen ob schon vorhanden
            If ActiveSheet.Cells(iZeile% + 1, "A").Text <> Werte Then
            
                '--- Kopieren der Vorzeile
                Rows(iZeile & ":" & iZeile).Select
                Selection.Copy
                Rows(iZeile + 1 & ":" & iZeile + 1).Select
                Selection.Insert Shift:=xlDown
                Application.CutCopyMode = False
                '--- Werte der neuen Zeile anpassen
                Cells(iZeile% + 1, 1).Value = Werte
                Cells(iZeile% + 1, 2).Formula = "=" & Cells(Wert_Zeile, Wert_Spalte).Address(0, 0)
                Cells(iZeile% + 1, 4).Formula = "=" & Cells(Wert_Zeile + 1, Wert_Spalte).Address(0, 0)
                
                For jSpalte% = 2 To 100
                    Cells(iZeile% + 1, jSpalte%).Select
                    If Selection.Locked = False Then
                        Selection.Formula = ""
                    End If
                Next
            Else
                '--- Daten schon vorhanden
            End If
        End If
    Next
     
    '--- Anpassen Punkteformel
        '--- entf|fffd|llt da Formel mit Leerzeile arbeiten kann
    '--- Ausgangszelle ausw|fffd|hlen
    Worksheets("Weiche Faktoren").Cells(Wert_Zeile, Wert_Spalte).Select
    Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "mod_Funktionen"
Declare Function GetSystemMetrics Lib "user32" (ByVal nIndex As Long) As Long
Declare Function GetSysColor Lib "user32" (ByVal nIndex As Long) As Long
Private Declare Function CallNextHookEx Lib "user32" (ByVal hHook As Long, ByVal ncode As Long, ByVal wParam As Long, lParam As Any) As Long
Private Declare Function GetModuleHandle Lib "kernel32" Alias "GetModuleHandleA" (ByVal lpModuleName As String) As Long
Private Declare Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExA" (ByVal idHook As Long, ByVal lpfn As Long, ByVal hmod As Long, ByVal dwThreadId As Long) As Long
Private Declare Function UnhookWindowsHookEx Lib "user32" (ByVal hHook As Long) As Long
Private Declare Function SendDlgItemMessage Lib "user32" Alias "SendDlgItemMessageA" (ByVal hDlg As Long, ByVal nIDDlgItem As Long, ByVal wMsg As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
Private Declare Function GetClassName Lib "user32" Alias "GetClassNameA" (ByVal hwnd As Long, ByVal lpClassName As String, ByVal nMaxCount As Long) As Long
Private Declare Function GetCurrentThreadId Lib "kernel32" () As Long
Private Const EM_SETPASSWORDCHAR = &HCC
Private Const WH_CBT = 5
Private Const HCBT_ACTIVATE = 5
Private Const HC_ACTION = 0
Private hHook As Long


Sub Werte_ohne_Redundanzen_Kopieren()
    'Kopiert alle Werte der Spalte B EINMALIG nach Spalte C - ohne Redundanzen
    
    Dim lngZQ As Long, lngZZ As Long 'Zeilen-Variablen f|fffd|r Quelle/Ziel
    Dim lngSQ As Long, lngSZ As Long 'Spalten-Variablen f|fffd|r Quelle/Ziel
    
    lngSQ = 3 'Werte aus Quell-Spalte 2 = Spalte B
    lngSZ = 3 'Werte nach Ziel-Spalte 3 = Spalte C
    
    Sheets("Tabelle1").Columns(lngSZ).ClearContents 'Zielspalte zuvor l|fffd|schen !
    
    For lngZQ = 2 To 200 'Sheets("Harte Faktoren").Cells(Rows.Count, lngSQ).End(xlUp).Row
        'Per Z|fffd|HLENWENN() pr|fffd|fen, ob Wert bereits in ZIEL-Spalte vorhanden ist :
        If Application.CountIf(Columns(lngSZ), Sheets("Harte Faktoren").Cells(lngZQ, lngSQ)) = 0 Then
            'Wenn der Wert noch NICHT in der ZIEL-Spalte vorhanden ist :
            lngZZ = Cells(Rows.count, lngSZ).End(xlUp).Row + 1
            Sheets("Tabelle1").Cells(lngZZ, lngSZ) = Sheets("Harte Faktoren").Cells(lngZQ, lngSQ)
        End If
    Next
End Sub


Function Anzeigen_Vorgaben(janein As Boolean)
    
    Dim i
    Dim imax As Integer
    Dim FB_Blatt As String


    Anzeigen_Vorgaben = ""

    imax = ActiveWorkbook.Worksheets.count
    For i = 1 To imax
        FB_Blatt = ActiveWorkbook.Worksheets(i).Name
        
        If Mid(FB_Blatt, 1, 2) = "V_" Or Mid(FB_Blatt, 1, 2) = "D_" Then
            If janein = True Then
                ActiveWorkbook.Worksheets(i).Visible = True
            Else
                ActiveWorkbook.Worksheets(i).Visible = False
            End If
        End If

    Next

End Function


Function WorksheetEx(strNam As String) As Boolean
   On Error Resume Next
   WorksheetEx = ActiveWorkbook.Worksheets("MKAF_" & strNam).Index > 0
End Function



Public Function CreateToolTipLabel(objHostOLE As Object, sTTLText As String) As Boolean
    Dim objToolTipLbl As OLEObject
    Dim objOLE As OLEObject
    
    Const SM_CXSCREEN = 0
    Const COLOR_INFOTEXT = 23
    Const COLOR_INFOBK = 24
    Const COLOR_WINDOWFRAME = 6

    Application.ScreenUpdating = False

    For Each objOLE In ActiveSheet.OLEObjects
        If objOLE.Name = "TTL" Then objOLE.Delete
    Next objOLE

    '--- Erstellen eines label control
     Set objToolTipLbl = ActiveSheet.OLEObjects.Add(ClassType:="Forms.Label.1")

    '...and format it to look as a ToolTipWindow
     With objToolTipLbl
         .Top = objHostOLE.Top + objHostOLE.Height - 10
         .Left = objHostOLE.Left + objHostOLE.Width - 10
         .Object.Caption = sTTLText
         .Object.Font.Size = 8
         .Object.BackColor = GetSysColor(COLOR_INFOBK)
         .Object.BackStyle = 1
         .Object.BorderColor = GetSysColor(COLOR_WINDOWFRAME)
         .Object.BorderStyle = 1
         .Object.ForeColor = GetSysColor(COLOR_INFOTEXT)
         .Object.TextAlign = 1
         .Object.AutoSize = False
         .Width = GetSystemMetrics(SM_CXSCREEN)
         .Object.AutoSize = True
         .Width = .Width + 2
         .Height = .Height + 2
         .Name = "TTL"
     End With
    DoEvents
    Application.ScreenUpdating = True

     '--- L|fffd|schen des Tooltip nach 5 Sek
      Application.OnTime Now() + TimeValue("00:00:05"), "DeleteToolTipLabels"
    
End Function

Private Sub DeleteToolTipLabels()
    Dim objToolTipLbl As OLEObject
      For Each objToolTipLbl In ActiveSheet.OLEObjects
          If objToolTipLbl.Name = "TTL" Then objToolTipLbl.Delete
      Next objToolTipLbl
End Sub
 

 Public Function NewProc(ByVal lngCode As Long, ByVal wParam As Long, ByVal lParam As Long) As Long
 Dim RetVal
 Dim strClassName As String, lngBuffer As Long
 If lngCode < HC_ACTION Then
     NewProc = CallNextHookEx(hHook, lngCode, wParam, lParam)
     Exit Function
 End If
 strClassName = String$(256, " ")
 lngBuffer = 255
  If lngCode = HCBT_ACTIVATE Then
     RetVal = GetClassName(wParam, strClassName, lngBuffer)
         If Left$(strClassName, RetVal) = "#32770" Then
         SendDlgItemMessage wParam, &H1324, EM_SETPASSWORDCHAR, Asc("*"), &H0
         End If
  End If
 CallNextHookEx hHook, lngCode, wParam, lParam
 End Function

Public Function InputBoxDK(Prompt, Optional Title, Optional Default, Optional XPos, Optional YPos, Optional HelpFile, Optional Context) As String
Dim lngModHwnd As Long, lngThreadID As Long
    lngThreadID = GetCurrentThreadId
    lngModHwnd = GetModuleHandle(vbNullString)
    hHook = SetWindowsHookEx(WH_CBT, AddressOf NewProc, lngModHwnd, lngThreadID)
    InputBoxDK = InputBox(Prompt, Title, Default, XPos, YPos, HelpFile, Context)
    UnhookWindowsHookEx hHook
End Function

Function ersetze(find As String, neu As String, lookin As Range) As Long
   Dim cell As Range
   Dim count As Integer
   count = 0
   If find = "" Then Exit Function
   For Each cell In lookin
       If (cell.Value = find) Then
            count = count + 1 '//case sens
            Worksheets("Harte Faktoren").Range(cell.Address) = neu
       End If
   Next
   If count > 0 Then MsgBox "Es wurden " & count & " Datens|fffd|tze in Tabelle ''Harte Faktoren'' von ''" & find & "'' in ''" & neu & "'' umbenannt.", , "--= HOWOGE WBS =--"
End Function

Function count(find As String, lookin As Range) As Long
   Dim cell As Range
   For Each cell In lookin
       If (cell.Value = find) Then count = count + 1 '//case sens
   Next
End Function


INQUEST-PP=macro
