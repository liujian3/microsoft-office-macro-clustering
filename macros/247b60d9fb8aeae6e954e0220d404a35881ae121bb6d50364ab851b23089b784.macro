Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'**** MAINTENANCE CONSTANTS
Private Const ALL_ROWS = "5:146"
'**** MONTHLY CONSTANTS
'Monthly constants BOTH.
Private Const MONTHLY_ROWS_BOTH = "8:26"
'Monthly constants MKBL.
Private Const MONTHLY_ROWS_MKBL = "57:73"
'Monthly constants SB.
Private Const MONTHLY_ROWS_SB = "102:118"

'**** YEARLY CONSTANTS
'Yearly constants BOTH.
Private Const LAST_YEARLY_ROW_BOTH = 49
Private Const FIRST_YEARLY_ROW_BOTH = 31
Private Const TOP_YEARLY_REPORT_BOTH = 28
Private Const PADDING_ROWS_BOTH = 5

'Yearly constants MKBL.
Private Const LAST_YEARLY_ROW_MKBL = 96
Private Const FIRST_YEARLY_ROW_MKBL = 78
Private Const TOP_YEARLY_REPORT_MKBL = 75
Private Const PADDING_ROWS_MKBL = 3

'Yearly constants SB.
Private Const LAST_YEARLY_ROW_SB = 141
Private Const FIRST_YEARLY_ROW_SB = 123
Private Const TOP_YEARLY_REPORT_SB = 120
Private Const PADDING_ROWS_SB = 3

'**** UPDATE CONSTANTS
Private Const REPORT_TYPE_CELL = "$I$6"
Private Const FY_DISPLAY_CELL = "$G$6"
Private Const MONTHLY_DATA = "Monthly"
Private Const YEARLY_DATA = "Yearly"
Private Const BOTH_YEARLY_MONTHLY = "Both"
Private Const ALL_DATA = "All"
Private Const MAX_FY = "ReportMaxFY"
Private Const SELECTED_FY = "ReportFY"
Private Const CRITERIA_SHEET = "Criteria"
Private Const CRITERIA_REPORT_TYPE_CELL = "ReportType"
Private Const DATA_WS = "data"

'**** VARIABLES
Private ignoreEvents As Boolean


'*********************************************************************
'*********************************************************************
'********  START COPY SELECT AT THIS COMMENT  ************************
'*********************************************************************
'*********************************************************************

'********  CONSTANTS TO COPY TO YOUR MODULE OR WORKSHEET  ************
'********  PUBLISHING CONSTANTS  *************************************
Private Const PUBLISH_WS = "criteria"
Private Const NEW_FILENAME_CELL = "B21"
Private Const SEND_TO_CELL = "B17"
Private Const CC_CELL = "B18"
Private Const SEND_SUBJECT_CELL = "B19"
Private Const SEND_MESSAGE_CELL = "B20"
Private Const ADDRESS_DELIMITER = ","
Private Const PUBLISH_COMMAND = "publishMeCmd"
Private Const COMMAND_BUTTON_WS = "Composite"

'*********************************************************************
'********  THESE FUNCTIONS NEED TO BE COPIED TO EITHER:  *************
'********    1.  ONE OF YOUR MODULES                     *************
'********    2.  ONE OF YOUR WORKSHEETS                  *************
'********  THEN UNCOMMENT CODE                           *************
'*********************************************************************

Private Function publishMe() As Boolean
  On Error GoTo ErrHandler
  Dim saveAsFN As String, sendTo As String, cc As String
  Dim sendMessage As String, sendSubject As String

  '****  DRIVER FUNCTION, USED TO SAVE, CLEAN AND SEND WORKBOOK

  '**  Get needed Values for publishing workbook
  getPublishValues saveAsFN, sendTo, cc, sendMessage, sendSubject, ThisWorkbook.Name, _
    PUBLISH_WS, NEW_FILENAME_CELL, SEND_TO_CELL, CC_CELL, SEND_MESSAGE_CELL, _
    SEND_SUBJECT_CELL

  '**  SAVE DOCUMENT AS DOC TO BE PUBLISHED; PROTECTS ORIGINAL BY SAVING NOW
  saveAsPublishWorkbook saveAsFN, ThisWorkbook.Path, ThisWorkbook.Name

  '**  REMOVE DATA CONNECTIONS; USERS WON'T HAVE ACCESS TO THE DB'S
  removeDbConns ThisWorkbook.Name

  '**  CLEAN OUT DATA, REMOVE NAME AND DIRECTORY REFERENCES
  cleanUpStuff ThisWorkbook.Name, PUBLISH_WS, NEW_FILENAME_CELL, _
    SEND_TO_CELL, CC_CELL, SEND_MESSAGE_CELL, SEND_SUBJECT_CELL, _
    COMMAND_BUTTON_WS, PUBLISH_COMMAND
  ThisWorkbook.Worksheets(CRITERIA_SHEET).Visible = False
  ThisWorkbook.Worksheets(DATA_WS).Visible = False

  '**  ALL NECESSARY CHANGES HAVE BEEN MADE; SAVING YOUR WORK
  ThisWorkbook.Save

  '**  TIME TO SEND THE FILE
  If MsgBox("Do you want to Email the file?", vbYesNo, "Email file") = vbYes Then
    sendEmails sendTo, "", "", sendSubject, sendMessage, ThisWorkbook.FullName, ADDRESS_DELIMITER, False
    publishMe = True
  Else
    publishMe = False
  End If

  '** WOOHOO, YOU'RE DONE

  Exit Function
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description
End Function


Private Sub publishMeCmd_Click()
  On Error GoTo ErrHandler
  '****  CLICK EVENT CODE FOR PUBLISHING  ****************************
  '****  THIS IS CODE TO USE TO PUBLISH THE WORKBOOK  ****************
  '****  USE THE WHOLE EVENT ONLY IF YOUR BUTTON NAME  ***************
  '****  IS PUBLISHMECMD, OTHERWISE OMIT FIRST AND LAST LINE  ********
  If Not publishMe Then  'Call publishme function
    MsgBox "Closing the file now...but don't forget:  it won't go anywhere unless you send it!", vbOKOnly
  End If
  ThisWorkbook.Close

  Exit Sub
ErrHandler:
  MsgBox "An error occurred while publishing this workbook.  Error: " & Err.Description, vbCritical, "Publish Error"

End Sub


'*********************************************************************
'*********************************************************************
'********  END OF COPYING  -- DON'T GO PAST THESE COMMENTS  **********
'*********************************************************************
'*********************************************************************


Private Sub Worksheet_Activate()
  On Error GoTo ErrHandler
  'Sets flags to appropriate values for this event
  ignoreEvents = True
  
  wsActivatedRedraw Me.Name, FY_DISPLAY_CELL, REPORT_TYPE_CELL
  
  ignoreEvents = False
  
  Exit Sub
ErrHandler:
  
  MsgBox "Problems occurred while redrawing charts.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Activate"

End Sub

Private Sub Worksheet_Change(ByVal target As Range)
  On Error GoTo ErrHandler
  '**** Hides and displays year and month data.
  
  If ignoreEvents Then Exit Sub
  
  'Handle changes to report type cell and fy cell
  If wsChangedRedraw(Me.Name, target, _
    FY_DISPLAY_CELL, REPORT_TYPE_CELL) Then Me.Range("B2").Select
  
  Exit Sub
ErrHandler:
  MsgBox "A problem occurred while processing changes.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Change"
End Sub

Public Sub showAll(hideMe As Boolean)
  On Error Resume Next
  '**** SHOW ALL ROWS -- FOR MAINTENANCE, NOT USERS
  displayRange Me.Name, ALL_ROWS, hideMe
End Sub

Public Sub hideMonthly(hideMe As Boolean)
  On Error Resume Next
  displayRange Me.Name, MONTHLY_ROWS_BOTH, hideMe
  displayRange Me.Name, MONTHLY_ROWS_MKBL, hideMe
  displayRange Me.Name, MONTHLY_ROWS_SB, hideMe
End Sub

Public Sub hideYearly(hideMe As Boolean)
  '**** Hide Yearly data
  On Error Resume Next
  Dim rowsToShow As Integer

  rowsToShow = ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(MAX_FY).Value - _
    ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value + 1

  hideYearlyTable Me.Name, TOP_YEARLY_REPORT_BOTH, FIRST_YEARLY_ROW_BOTH, _
    LAST_YEARLY_ROW_BOTH, PADDING_ROWS_BOTH, rowsToShow, hideMe

    hideYearlyTable Me.Name, TOP_YEARLY_REPORT_MKBL, FIRST_YEARLY_ROW_MKBL, _
    LAST_YEARLY_ROW_MKBL, PADDING_ROWS_MKBL, rowsToShow, hideMe

  hideYearlyTable Me.Name, TOP_YEARLY_REPORT_SB, FIRST_YEARLY_ROW_SB, _
    LAST_YEARLY_ROW_SB, PADDING_ROWS_SB, rowsToShow, hideMe

End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'**** MAINTENANCE CONSTANTS
Private Const ALL_ROWS = "5:224"

'**** MONTHLY/BOTH CONSTANTS
Private Const MONTHLY_ROWS = "6:94"

'**** YEARLY CONSTANTS
Private Const BILLS_TOP_YEARLY_REPORT = 97
Private Const BILLS_FIRST_YEARLY_ROW = 101
Private Const BILLS_LAST_YEARLY_ROW = 119
Private Const BILLS_PADDING_ROWS = 2

Private Const NOTES_TOP_YEARLY_REPORT = 122
Private Const NOTES_FIRST_YEARLY_ROW = 126
Private Const NOTES_LAST_YEARLY_ROW = 144
Private Const NOTES_PADDING_ROWS = 2

Private Const TIPS_TOP_YEARLY_REPORT = 147
Private Const TIPS_FIRST_YEARLY_ROW = 151
Private Const TIPS_LAST_YEARLY_ROW = 169
Private Const TIPS_PADDING_ROWS = 2

Private Const BONDS_TOP_YEARLY_REPORT = 172
Private Const BONDS_FIRST_YEARLY_ROW = 176
Private Const BONDS_LAST_YEARLY_ROW = 194
Private Const BONDS_PADDING_ROWS = 2

Private Const SB_TOP_YEARLY_REPORT = 197
Private Const SB_FIRST_YEARLY_ROW = 201
Private Const SB_LAST_YEARLY_ROW = 219
Private Const SB_PADDING_ROWS = 2

'**** UPDATE CONSTANTS
Private Const REPORT_TYPE_CELL = "$I$3"
Private Const FY_DISPLAY_CELL = "$G$3"
Private Const MONTHLY_DATA = "Monthly"
Private Const YEARLY_DATA = "Yearly"
Private Const BOTH_YEARLY_MONTHLY = "Both"
Private Const ALL_DATA = "All"
Private Const MAX_FY = "ReportMaxFY"
Private Const SELECTED_FY = "ReportFY"
Private Const CRITERIA_SHEET = "Criteria"
Private Const CRITERIA_REPORT_TYPE_CELL = "ReportType"

'****  VARIABLES
Private ignoreEvents As Boolean

Private Sub Worksheet_Activate()
  On Error GoTo ErrHandler
  'Sets flags to appropriate values for this event
  ignoreEvents = True
  
  wsActivatedRedraw Me.Name, FY_DISPLAY_CELL, REPORT_TYPE_CELL
  
  ignoreEvents = False
  
  Exit Sub
ErrHandler:
  
  MsgBox "Problems occurred while redrawing charts.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Activate"

End Sub

Private Sub Worksheet_Change(ByVal target As Range)
  On Error GoTo ErrHandler
  '**** Hides and displays year and month data.
  
  If ignoreEvents Then Exit Sub
  
  'Handle changes to report type cell and fy cell
  If wsChangedRedraw(Me.Name, target, _
    FY_DISPLAY_CELL, REPORT_TYPE_CELL) Then Me.Range("B2").Select

  Exit Sub
ErrHandler:
  MsgBox "A problem occurred while processing changes.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Change"
End Sub

Public Sub showAll(hideMe As Boolean)
  On Error Resume Next
  '**** SHOW ALL ROWS -- FOR MAINTENANCE, NOT USERS
  displayRange Me.Name, ALL_ROWS, hideMe
End Sub

Public Sub hideMonthly(hideMe As Boolean)
  On Error Resume Next
  displayRange Me.Name, MONTHLY_ROWS, hideMe
End Sub

Public Sub hideYearly(hideMe As Boolean)
  '**** Hide Yearly data
  On Error Resume Next
  Dim hideThis As String, showThis As String
  Dim rowsToShow As Integer

  rowsToShow = ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(MAX_FY).Value - _
    ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value + 1

  'hide/show bills
  hideYearlyTable Me.Name, BILLS_TOP_YEARLY_REPORT, BILLS_FIRST_YEARLY_ROW, _
    BILLS_LAST_YEARLY_ROW, BILLS_PADDING_ROWS, rowsToShow, hideMe
  
  'hide/show notes
  hideYearlyTable Me.Name, NOTES_TOP_YEARLY_REPORT, NOTES_FIRST_YEARLY_ROW, _
    NOTES_LAST_YEARLY_ROW, NOTES_PADDING_ROWS, rowsToShow, hideMe

  'hide/show tips
  hideYearlyTable Me.Name, TIPS_TOP_YEARLY_REPORT, TIPS_FIRST_YEARLY_ROW, _
    TIPS_LAST_YEARLY_ROW, TIPS_PADDING_ROWS, rowsToShow, hideMe

  'hide/show bonds
  hideYearlyTable Me.Name, BONDS_TOP_YEARLY_REPORT, BONDS_FIRST_YEARLY_ROW, _
    BONDS_LAST_YEARLY_ROW, BONDS_PADDING_ROWS, rowsToShow, hideMe

  'hide/show bonds
  hideYearlyTable Me.Name, SB_TOP_YEARLY_REPORT, SB_FIRST_YEARLY_ROW, _
    SB_LAST_YEARLY_ROW, SB_PADDING_ROWS, rowsToShow, hideMe

End Sub
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'**** MAINTENANCE CONSTANTS
Private Const ALL_ROWS = "5:60"

'**** MONTHLY CONSTANTS
Private Const MONTHLY_ROWS = "6:23"

'**** YEARLY CONSTANTS
Private Const TOP_YEARLY_REPORT = 26
Private Const FIRST_YEARLY_ROW = 31
Private Const LAST_YEARLY_ROW = 49
Private Const PADDING_ROWS = 1


Private Const CRITERIA_DATA_DISPLAY = "I16"
'**** UPDATE CONSTANTS
Private Const REPORT_TYPE_CELL = "$I$3"
Private Const FY_DISPLAY_CELL = "$G$3"
Private Const MONTHLY_DATA = "Monthly"
Private Const YEARLY_DATA = "Yearly"
Private Const BOTH_YEARLY_MONTHLY = "Both"
Private Const ALL_DATA = "All"
Private Const MAX_FY = "ReportMaxFY"
Private Const SELECTED_FY = "ReportFY"
Private Const CRITERIA_SHEET = "Criteria"
Private Const CRITERIA_REPORT_TYPE_CELL = "ReportType"

'****  VARIABLES
Private ignoreEvents As Boolean


Private Sub Worksheet_Activate()
  On Error GoTo ErrHandler
  'Sets flags to appropriate values for this event
  ignoreEvents = True
  
  wsActivatedRedraw Me.Name, FY_DISPLAY_CELL, REPORT_TYPE_CELL
  
  ignoreEvents = False
  
  Exit Sub
ErrHandler:
  
  MsgBox "Problems occurred while redrawing charts.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Activate"

End Sub

Private Sub Worksheet_Change(ByVal target As Range)
  On Error GoTo ErrHandler
  '**** Hides and displays year and month data.
  
  If ignoreEvents Then Exit Sub
  
  'Handle changes to report type cell and fy cell
  If wsChangedRedraw(Me.Name, target, _
    FY_DISPLAY_CELL, REPORT_TYPE_CELL) Then Me.Range("B2").Select
    
  Exit Sub
ErrHandler:
  MsgBox "A problem occurred while processing changes.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Change"
End Sub

Public Sub showAll(hideMe As Boolean)
  On Error Resume Next
  '**** SHOW ALL ROWS -- FOR MAINTENANCE, NOT USERS
  displayRange Me.Name, ALL_ROWS, hideMe
End Sub

Public Sub hideMonthly(hideMe As Boolean)
  On Error Resume Next
  displayRange Me.Name, MONTHLY_ROWS, hideMe
End Sub

Public Sub hideYearly(hideMe As Boolean)
  '**** Hide Yearly data
  On Error Resume Next
  Dim hideThis As String, showThis As String
  Dim rowsToShow As Integer

  rowsToShow = ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(MAX_FY).Value - _
    ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value + 1

  hideYearlyTable Me.Name, TOP_YEARLY_REPORT, FIRST_YEARLY_ROW, _
    LAST_YEARLY_ROW, PADDING_ROWS, rowsToShow, hideMe
  
End Sub
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'**** UPDATE CONSTANTS OPTIONS
Private Const MONTHLY_DATA = "Monthly"
Private Const YEARLY_DATA = "Yearly"
Private Const BOTH_YEARLY_MONTHLY = "Both"
Private Const ALL_DATA = "All"  'USED FOR MAINTENANCE


'**** MAINTENANCE CONSTANTS
Private Const ALL_ROWS = "5:50"

'**** MONTHLY CONSTANTS
Private Const MONTHLY_ROWS = "7:23"

'**** YEARLY CONSTANTS
Private Const TOP_YEARLY_REPORT = 26
Private Const FIRST_YEARLY_ROW = 30
Private Const LAST_YEARLY_ROW = 48
Private Const PADDING_ROWS = 1

'**** UPDATE CONSTANTS
Private Const REPORT_TYPE_CELL = "$G$3"
Private Const FY_DISPLAY_CELL = "$E$3"
Private Const MAX_FY = "ReportMaxFY"
Private Const SELECTED_FY = "ReportFY"
Private Const CRITERIA_SHEET = "Criteria"
Private Const LAST_OUT_E_YEAR = 2010
Private Const OUT_E_NOTICE_ROW = "51:51"

'****  VARIABLES
Private ignoreEvents As Boolean


Private Sub Worksheet_Activate()
  On Error GoTo ErrHandler
  'Sets flags to appropriate values for this event
  ignoreEvents = True
  
  If wsActivatedRedraw(Me.Name, FY_DISPLAY_CELL, REPORT_TYPE_CELL) Then
    displayOutNotice
  End If
  
  ignoreEvents = False
  
  Exit Sub
ErrHandler:
  
  MsgBox "Problems occurred while redrawing charts.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Activate"

End Sub

Private Sub Worksheet_Change(ByVal target As Range)
  On Error GoTo ErrHandler
  '**** Hides and displays year and month data.
  Dim tReport As String, tYear As Integer, tarAdd As String
  tarAdd = target.Address
  
  If ignoreEvents Then Exit Sub

  'Handle changes to report type cell and fy cell
  If wsChangedRedraw(Me.Name, target, _
    FY_DISPLAY_CELL, REPORT_TYPE_CELL) Then

    displayOutNotice
    Me.Range(tarAdd).Select
  ElseIf (target.Address = FY_DISPLAY_CELL) Then
    displayOutNotice
    Me.Range(tarAdd).Select
  End If

  Exit Sub
ErrHandler:
  MsgBox "A problem occurred while processing changes.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Change"
End Sub

Public Sub showAll(hideMe As Boolean)
  On Error Resume Next
  '**** SHOW ALL ROWS -- FOR MAINTENANCE, NOT USERS
  displayRange Me.Name, ALL_ROWS, hideMe
End Sub

Public Sub hideMonthly(hideMe As Boolean)
  On Error Resume Next
  displayRange Me.Name, MONTHLY_ROWS, hideMe
End Sub

Public Sub hideYearly(hideMe As Boolean)
  '**** Hide Yearly data
  On Error Resume Next
  Dim hideThis As String, showThis As String
  Dim rowsToShow As Integer

  rowsToShow = ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(MAX_FY).Value - _
    ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value + 1

  hideYearlyTable Me.Name, TOP_YEARLY_REPORT, FIRST_YEARLY_ROW, _
    LAST_YEARLY_ROW, PADDING_ROWS, rowsToShow, hideMe

End Sub


Private Sub displayOutNotice()
  On Error Resume Next
  Dim tReport As String, tYear As Integer, hideMe As Boolean

  tReport = Me.Range(REPORT_TYPE_CELL).Value
  tYear = Me.Range(FY_DISPLAY_CELL).Value
  hideMe = Not ((tYear >= LAST_OUT_E_YEAR) Or (tReport = BOTH_YEARLY_MONTHLY) Or (tReport = YEARLY_DATA))
    
  displayRange Me.Name, OUT_E_NOTICE_ROW, hideMe
End Sub

Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'**** MAINTENANCE CONSTANTS
Private Const ALL_ROWS = "5:55"

'**** MONTHLY CONSTANTS
Private Const MONTHLY_ROWS = "6:23"

Private Const TOP_YEARLY_REPORT = 26
Private Const FIRST_YEARLY_ROW = 31
Private Const LAST_YEARLY_ROW = 49
Private Const PADDING_ROWS = 1

'**** UPDATE CONSTANTS
Private Const REPORT_TYPE_CELL = "$I$3"
Private Const FY_DISPLAY_CELL = "$G$3"
Private Const MONTHLY_DATA = "Monthly"
Private Const YEARLY_DATA = "Yearly"
Private Const BOTH_YEARLY_MONTHLY = "Both"
Private Const ALL_DATA = "All"
Private Const MAX_FY = "ReportMaxFY"
Private Const SELECTED_FY = "ReportFY"
Private Const CRITERIA_SHEET = "Criteria"
Private Const CRITERIA_REPORT_TYPE_CELL = "ReportType"

'**** VARIABLES
Private ignoreEvents As Boolean



Private Sub Worksheet_Activate()
  On Error GoTo ErrHandler
  'Sets flags to appropriate values for this event
  ignoreEvents = True
  
  wsActivatedRedraw Me.Name, FY_DISPLAY_CELL, REPORT_TYPE_CELL
  
  ignoreEvents = False
  
  Exit Sub
ErrHandler:
  
  MsgBox "Problems occurred while redrawing charts.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Activate"

End Sub

Private Sub Worksheet_Change(ByVal target As Range)
  On Error GoTo ErrHandler
  
  If ignoreEvents Then

  ElseIf (target.Address = REPORT_TYPE_CELL) Or (target.Address = FY_DISPLAY_CELL) Then
  
    'Handle changes to report type cell and fy cell
    wsChangedRedraw Me.Name, target, _
      FY_DISPLAY_CELL, REPORT_TYPE_CELL
    
    Me.Range("B2").Select
  End If
  Exit Sub
ErrHandler:
  MsgBox "A problem occurred while processing changes.  Error: " & Err.Description, vbExclamation, "" & Me.Name & " Change"
End Sub

Public Sub showAll(hideMe As Boolean)
  On Error Resume Next
  '**** SHOW ALL ROWS -- FOR MAINTENANCE, NOT USERS
  displayRange Me.Name, ALL_ROWS, hideMe
End Sub

Public Sub hideMonthly(hideMe As Boolean)
  On Error Resume Next
  displayRange Me.Name, MONTHLY_ROWS, hideMe
End Sub

Public Sub hideYearly(hideMe As Boolean)
  '**** Hide Yearly data
  On Error Resume Next
  Dim rowsToShow As Integer

  rowsToShow = ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(MAX_FY).Value - _
    ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value + 1

  hideYearlyTable Me.Name, TOP_YEARLY_REPORT, FIRST_YEARLY_ROW, _
    LAST_YEARLY_ROW, PADDING_ROWS, rowsToShow, hideMe

End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "displayUtilities"
Option Explicit
Public bUpdatingNow As Boolean

'**** UPDATE CONSTANTS
Private Const MONTHLY_DATA = "Monthly"
Private Const YEARLY_DATA = "Yearly"
Private Const BOTH_YEARLY_MONTHLY = "Both"
Private Const ALL_DATA = "All"  'USED FOR MAINTENANCE
Private Const MAX_FY = "ReportMaxFY"
Private Const SELECTED_FY = "ReportFY"
Private Const CRITERIA_SHEET = "Criteria"
Private Const CRITERIA_REPORT_TYPE_CELL = "ReportType"
Private Const REPORT_TYPE_POS = "ReportType"


Private Const COMP_SHEET = "Composite"
Private Const INTRAN_SHEET = "Incoming Transfers"
Private Const REDEMPTIONS_SHEET = "Redemptions"
Private Const SALES_SHEET = "Sales"
Private Const OUT_SHEET = "Outstanding"
'New format

Public Sub displayRange(forWks As String, thisRange As String, hideMe As Boolean)
  On Error Resume Next
  ThisWorkbook.Worksheets(forWks).Rows(thisRange).Select
  Selection.EntireRow.Hidden = hideMe
End Sub

Public Sub updateSelectedFY(toYear As Integer)
  On Error Resume Next
  If ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value <> toYear Then
    ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value = toYear
  End If

End Sub

Public Sub updateReportType(toReportType As String)
  On Error Resume Next
  If ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(REPORT_TYPE_POS).Value <> toReportType Then
    ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(REPORT_TYPE_POS).Value = toReportType
  End If

End Sub

Public Sub hideYearlyTable(onWKS As String, topReport As Integer, firstDataRow As Integer, _
  lastDataRow As Integer, reportPadding As Integer, numReportYears As Integer, _
  hideMe As Boolean)
  '**** Hide Yearly data
  On Error Resume Next
  Dim hideThis As String, showThis As String, maxDataRows As Integer

  'Determine which rows to show and which to hide
  If hideMe Then  'hide all
    hideThis = "" & topReport & ":" & (lastDataRow + reportPadding)
    numReportYears = 0
  Else 'show at least one row
    showThis = "" & topReport & ":" & (firstDataRow + numReportYears - 1)
    hideThis = "" & (firstDataRow + numReportYears) & ":" & (lastDataRow)
  End If
  maxDataRows = lastDataRow - firstDataRow + 1
      
  If numReportYears < maxDataRows Then  'mix of visible/not visible rows
    displayRange onWKS, hideThis, True  'Hide range of rows
  End If
  
  If numReportYears > 0 Then
    'Show headers plus data rows
    displayRange onWKS, showThis, False 'Show these rows
    'Show padding rows (may inlcude totals row
    displayRange onWKS, "" & (lastDataRow + 1) & ":" & (lastDataRow + reportPadding), False
  End If
End Sub

Public Function wsActivatedRedraw(wsName As String, _
  fyCell As String, reportCell As String) As Boolean
  On Error GoTo ErrHandler
  Dim changeMade As Boolean
  'Sets flags to appropriate values for this event
  changeMade = False

  With ThisWorkbook.Worksheets(wsName)
    'Check if Report Type Or FY have changed, update cell value
    If ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value <> .Range(fyCell).Value Then
      .Range(fyCell).Value = ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(SELECTED_FY).Value
      changeMade = True
    End If
  
    'Check if Report Type update cell value
    If ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(CRITERIA_REPORT_TYPE_CELL).Value <> .Range(reportCell).Value Then
      .Range(reportCell).Value = ThisWorkbook.Worksheets(CRITERIA_SHEET).Range(CRITERIA_REPORT_TYPE_CELL).Value
      changeMade = True
    End If
  
    'If a change has been made redraw
    If changeMade Then
      updateDisplay wsName, .Range(reportCell).Value
      .Range("B2").Select
    End If
  
    wsActivatedRedraw = changeMade
  End With
  Exit Function
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description

End Function

Public Function wsChangedRedraw(wsName As String, target As Range, _
  fyCell As String, reportCell As String) As Boolean
  On Error GoTo ErrHandler
  Dim tReport As String, redrawn As Boolean
  
  redrawn = False  'Indicate whether page was redrawn
  
  'Check what cell has been changed
  Select Case target.Address
  Case fyCell  'Fiscal year has changed
    
    updateSelectedFY Int(target.Value)
    tReport = ThisWorkbook.Worksheets(wsName).Range(reportCell).Value
    If (tReport = YEARLY_DATA) Or (tReport = BOTH_YEARLY_MONTHLY) Then
      'yearly data will be visible and have hidden rows, monthly/all has no hidden rows
      updateDisplay wsName, tReport
      redrawn = True
    End If

  Case reportCell 'report type has been changed
    'Report type changes require redraw of tables/rows
    updateReportType target.Value
    updateDisplay wsName, target.Value
    redrawn = True
  Case Else  'Nothing to see here, just move along

  End Select
  
  wsChangedRedraw = redrawn
  Exit Function
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description
End Function

Public Sub updateDisplay(wsName As String, actReport As String)
  '**** Hide data based upon user selection (monthly/yearly/both/all)
  On Error Resume Next
  With ThisWorkbook.Worksheets(wsName)

    Select Case actReport

    Case MONTHLY_DATA
      .hideMonthly False
      .hideYearly True

    Case YEARLY_DATA
      .hideMonthly True
      .hideYearly False

    Case BOTH_YEARLY_MONTHLY
      .hideMonthly False
      .hideYearly False

    Case ALL_DATA
      .showAll False

    End Select
    .Range("B2").Select
  End With
  Exit Sub
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description
End Sub
Attribute VB_Name = "emailUtility"
Option Explicit
'********  DATA UTILITY TOOLS *****************************
'**********************************************************
'****  TOOLBAR: TOOLS\REFERENCES  *************************
'****  LOTUS DOMINO OBJECT  *******************************
'****  END -- TOOLBAR: TOOLS\REFERENCES  ******************
'**********************************************************
'****  IMPORTS  *******************************************
'****  NONE  **********************************************
'****  END IMPORTS  ***************************************
'**********************************************************
'****  ADDITIONAL INSTRUCTIONS  ***************************
'**********************************************************



Public Function sendEmails(eTo As String, eCC As String, eBC As String, _
  eSubject As String, eBody As String, eAttachment As String, _
  delimiter As String, draft As Boolean) As Boolean

  On Error GoTo ErrHandler
  Dim db As Object, tSession As Object
  Dim doc As Object, toList() As String, rtf As Object
  Dim attachs() As String, i As Integer, iUpper As Integer, iLower As Integer

  Set tSession = CreateObject("Notes.NotesSession")
  Set db = tSession.GetDatabase("", "")
  db.OPENMAIL

  If db Is Nothing Then
    Exit Function
  End If

  'create doc and set preferences
  Set doc = db.CreateDocument()
  doc.Form = "Memo"

  toList = Split(eTo, delimiter)
  If UBound(toList) >= 0 Then doc.sendTo = toList
  toList = Split(eCC, delimiter)
  If UBound(toList) >= 0 Then doc.CopyTo = toList
  toList = Split(eBC, delimiter)
  If UBound(toList) >= 0 Then doc.blindcopyto = toList

  doc.Subject = eSubject

  doc.SaveMessageOnSend = True
  
  Set rtf = doc.CreateRichTextItem("body")
  rtf.AppendText eBody
  If (Len(Trim(eAttachment)) > 0) Then
    rtf.AddNewLine 2
    
    attachs = Split(eAttachment, delimiter)
    iLower = LBound(attachs, 1)
    iUpper = UBound(attachs, 1)
    For i = iLower To iUpper
      rtf.EmbedObject 1454, "", attachs(i), "body"
    Next i
    rtf.AddNewLine 2
  End If

  If draft Then
    doc.Save True, False
  Else
    doc.Send False
  End If

  Set rtf = Nothing
  Set doc = Nothing
  Set db = Nothing
  Set tSession = Nothing

sendEmails = True
  Exit Function
ErrHandler:
  
End Function

Private Function buildAddList(listNames As String, delimiter As String) As String()
  Dim tStr() As String
  tStr = Split(listNames, delimiter)
End Function
Attribute VB_Name = "publishMeUtility"
Option Explicit

''*********************************************************************
''*********************************************************************
''********  START COPY SELECT AT THIS COMMENT  ************************
''*********************************************************************
''*********************************************************************
'
''********  CONSTANTS TO COPY TO YOUR MODULE OR WORKSHEET  ************
''********  PUBLISHING CONSTANTS  *************************************
'Private Const PUBLISH_WS = "criteria"
'Private Const NEW_FILENAME_CELL = "J15"
'Private Const SEND_TO_CELL = "J16"
'Private Const CC_CELL = "B4"
'Private Const SEND_SUBJECT_CELL = "J17"
'Private Const SEND_MESSAGE_CELL = "J18"
'Private Const ADDRESS_DELIMITER = ","
'Private Const PUBLISH_COMMAND = "publishMeCmd"
'Private Const COMMAND_BUTTON_WS = "Summary"
'
''*********************************************************************
''********  THESE FUNCTIONS NEED TO BE COPIED TO EITHER:  *************
''********    1.  ONE OF YOUR MODULES                     *************
''********    2.  ONE OF YOUR WORKSHEETS                  *************
''********  THEN UNCOMMENT CODE                           *************
''*********************************************************************
'
'Private Function publishMe() As Boolean
'  On Error GoTo ErrHandler
'  Dim saveAsFN As String, sendTo As String, cc As String
'  Dim sendMessage As String, sendSubject As String
'
'  '****  DRIVER FUNCTION, USED TO SAVE, CLEAN AND SEND WORKBOOK
'
'  '**  Get needed Values for publishing workbook
'  getPublishValues saveAsFN, sendTo, cc, sendMessage, sendSubject, ThisWorkbook.Name, _
'    PUBLISH_WS, NEW_FILENAME_CELL, SEND_TO_CELL, CC_CELL, SEND_MESSAGE_CELL, _
'    SEND_SUBJECT_CELL
'
'  '**  SAVE DOCUMENT AS DOC TO BE PUBLISHED; PROTECTS ORIGINAL BY SAVING NOW
'  saveAsPublishWorkbook saveAsFN, ThisWorkbook.Path, ThisWorkbook.Name
'
'  '**  REMOVE DATA CONNECTIONS; USERS WON'T HAVE ACCESS TO THE DB'S
'  removeDbConns ThisWorkbook.Name
'
'  '**  CLEAN OUT DATA, REMOVE NAME AND DIRECTORY REFERENCES
'  cleanUpStuff ThisWorkbook.Name, PUBLISH_WS, NEW_FILENAME_CELL, _
'    SEND_TO_CELL, CC_CELL, SEND_MESSAGE_CELL, SEND_SUBJECT_CELL, _
'    COMMAND_BUTTON_WS, PUBLISH_COMMAND
'
'  '**  ALL NECESSARY CHANGES HAVE BEEN MADE; SAVING YOUR WORK
'  ThisWorkbook.Save
'
'  '**  TIME TO SEND THE FILE
'  If MsgBox("Do you want to Email the file?", vbYesNo, "Email file") = vbYes Then
'    sendEmails sendTo, "", "", sendSubject, sendMessage, ThisWorkbook.FullName, ADDRESS_DELIMITER, False
'    publishMe = True
'  Else
'    publishMe = False
'  End If
'
'  '** WOOHOO, YOU'RE DONE
'
'  Exit Function
'ErrHandler:
'  Err.Raise Err.Number, Err.Source, Err.Description
'End Function
'
'
'Private Sub publishMeCmd_Click()
'  On Error GoTo ErrHandler
'  '****  CLICK EVENT CODE FOR PUBLISHING  ****************************
'  '****  THIS IS CODE TO USE TO PUBLISH THE WORKBOOK  ****************
'  '****  USE THE WHOLE EVENT ONLY IF YOUR BUTTON NAME  ***************
'  '****  IS PUBLISHMECMD, OTHERWISE OMIT FIRST AND LAST LINE  ********
'  If Not publishMe Then  'Call publishme function
'    MsgBox "Closing the file now...but don't forget:  it won't go anywhere unless you send it!", vbOKOnly
'  End If
'  ThisWorkbook.Close
'
'  Exit Sub
'ErrHandler:
'  MsgBox "An error occurred while publishing this workbook.  Error: " & Err.Description, vbCritical, "Publish Error"
'
'End Sub
'
'
''*********************************************************************
''*********************************************************************
''********  END OF COPYING  -- DON'T GO PAST THESE COMMENTS  **********
''*********************************************************************
''*********************************************************************



'*********************************************************************
'********  THESE FUNCTIONS STAY HERE  ********************************
'*********************************************************************

'********   PULLING STARTING VALUES FROM WORKSHEET  ***********
Public Sub getPublishValues(saveAsFN As String, sendTo As String, cc As String, _
  sendMessage As String, sendSubject As String, useWorkbook As String, _
  useWorksheet As String, saveAsRange As String, sendToRange As String, ccRange As String, _
  sendMessageRange As String, sendSubjectRange As String)
  On Error GoTo ErrHandler
  
  '****  GET VALUES THAT WILL BE USED TO PUBLSH THE SUPPLIED WORKBOOK
  
  'For shorthand purposes only
  With Application.Workbooks(useWorkbook).Worksheets(useWorksheet)
    'Get the file name you want to use for publication.
    saveAsFN = .Range(saveAsRange).Value
    'Get the email addresses of who to send the doc to; comma delimited
    sendTo = .Range(sendToRange).Value
    cc = .Range(ccRange).Value
    'Get the message for the email, needs to be enough
    'to deteremine what and where to publish
    sendMessage = .Range(sendMessageRange).Value
    'Get the subject for the email
    sendSubject = .Range(sendSubjectRange).Value
    
  End With
  
  Exit Sub
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description

End Sub


'********  SAVING WORKBOOK  ***********************************
Public Sub saveAsPublishWorkbook(useFilename As String, usePath As String, _
  useWorkbook As String)
  On Error GoTo ErrHandler
  '****  SAVE THE WORKBOOK TO THE NAME IT WILL BE PUBLISHED UNDER
  '****  SAVED IN THE FORMAT AS THE ORIGINAL
  Dim fFileName As String

  '**  Get Full Filename to use for publishing
  fFileName = buildFullFileName(useFilename, usePath)

  '**  Save file with new name, assume excel file type
  Application.DisplayAlerts = False
  If UCase((Right(Trim(fFileName), 5))) = ".XLSX" Then
    Application.Workbooks(useWorkbook).SaveAs Filename:=fFileName, FileFormat:=XlFileFormat.xlOpenXMLWorkbook
  ElseIf UCase((Right(Trim(fFileName), 5))) = ".XLSM" Then
    Application.Workbooks(useWorkbook).SaveAs Filename:=fFileName, FileFormat:=XlFileFormat.xlOpenXMLWorkbookMacroEnabled
  ElseIf UCase((Right(Trim(fFileName), 4))) = ".XLS" Then
    Application.Workbooks(useWorkbook).SaveAs Filename:=fFileName, FileFormat:=XlFileFormat.xlExcel12
  End If
  Application.DisplayAlerts = True
  Exit Sub
ErrHandler:

  Err.Raise Err.Number, Err.Source, Err.Description

End Sub


'********  UTILITY FUNCTIONS  ************************************

Private Function buildFullFileName(useFilename As String, usePath As String) As String
  On Error GoTo ErrHandler
  '****  BUILD A FULL FILE NAME BASED ON PROVIDED INFORMATION
  Dim tPath As String

  tPath = Trim(usePath)
  
  If Len(tPath) > 0 Then 'Base path has been provided, Fix as needed
    'Fix for missing slash on the enc
    If (Right(tPath, 1) <> "\") Then tPath = tPath & "\"

  End If
  
  '** Build full filename including path
  buildFullFileName = tPath & Trim(useFilename)
  
  Exit Function
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description
End Function

Public Sub removeDbConns(useWorkbook As String)
  On Error GoTo ErrHandler
  '****  REMOVE DB CONNECTIONS, NOTE LINKS ARE NOT REMOVED
  Dim cnCount As Integer, i As Integer
  
  '**  Count connection, then loop thru removing Connections
  With Application.Workbooks(useWorkbook)
    'Get Number of Connections
    cnCount = .Connections.Count
    
    For i = 1 To cnCount  'Loop thru connections, always remove connection 1
      .Connections(1).Delete
    Next
  End With

  Exit Sub
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description
End Sub

Public Sub cleanUpStuff(useWorkbook As String, infoWorksheet As String, _
  saveAsRange As String, sendToRange As String, ccRange As String, _
  sendMessageRange As String, sendSubjectRange As String, _
  commandWS As String, pubCmdName As String)
  On Error GoTo ErrHandler
  '****  REMOVE ANY INFO THAT MIGHT RAISE SECURITY CONCERNS
  '****  NEXT REMOVE UNNEEDED OBJECTS
  
  'For shorthand purposes only  -- REMOVE INFO
  With Application.Workbooks(useWorkbook).Worksheets(infoWorksheet)
    'Remove file name, may have path info
    .Range(saveAsRange).Value = ""
    'Remove email addresses
    .Range(sendToRange).Value = ""
    .Range(ccRange).Value = ""
    'Remove standard email message
    .Range(sendMessageRange).Value = ""
    'Remove standare email subject
    .Range(sendSubjectRange).Value = ""
    
  End With

  ' REMOVE OBJECTS
  Application.Workbooks(useWorkbook).Worksheets(commandWS).OLEObjects(pubCmdName).Delete
  
  Exit Sub
ErrHandler:
  Err.Raise Err.Number, Err.Source, Err.Description
End Sub



INQUEST-PP=macro
