Attribute VB_Name = "CalendarFrm"
Attribute VB_Base = "0{D95BBA95-A2C0-4FDF-8E3E-55CB435F94B7}{7ABAD0B4-D7DB-4334-8B72-A5A21F1BA034}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Option Explicit
    Dim ThisDay As Date
    Dim ThisYear, ThisMth As Date
    Dim CreateCal As Boolean
    Dim i As Integer

Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub UserForm_INITIALIZE()
    Application.EnableEvents = False
    'starts the form on todays date
    ThisDay = VBA.DateTime.Date
    ThisMth = Application.WorksheetFunction.Text(ThisDay, "mm")
    ThisYear = Application.WorksheetFunction.Text(ThisDay, "yyyy")
    For i = 1 To 12
        CB_Mth.AddItem Application.WorksheetFunction.Text(DateSerial(Year(ThisDay), Month(ThisDay) + i, 0), "mmmm")
    Next
    CB_Mth.ListIndex = Application.WorksheetFunction.Text(ThisDay, "mm") - Application.WorksheetFunction.Text(ThisDay, "mm")
    For i = -20 To 50
        If i = 1 Then CB_Yr.AddItem Application.WorksheetFunction.Text((ThisDay), "yyyy") Else CB_Yr.AddItem _
            Application.WorksheetFunction.Text((DateAdd("yyyy", (i - 1), ThisDay)), "yyyy")
    Next
    CB_Yr.ListIndex = 21
    'Builds the calendar with todays date
    CalendarFrm.Width = CalendarFrm.Width
    CreateCal = True
    Call Build_Calendar
    Application.EnableEvents = True
End Sub
Private Sub CB_Mth_Change()
    'rebuilds the calendar when the month is changed by the user
    Build_Calendar
End Sub
Private Sub CB_Yr_Change()
    'rebuilds the calendar when the year is changed by the user
    Build_Calendar
End Sub
Private Sub Build_Calendar()
    'the routine that actually builds the calendar each time
    If CreateCal = True Then
    CalendarFrm.Caption = " " & CB_Mth.Value & " " & CB_Yr.Value
    'sets the focus for the todays date button
    CommandButton1.SetFocus
    For i = 1 To 42
        If i < Weekday((CB_Mth.Value) & "/1/" & (CB_Yr.Value)) Then
            Controls("D" & (i)).Caption = Application.WorksheetFunction.Text(DateAdd("d", (i - Weekday((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), _
                ((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), "d")
            Controls("D" & (i)).ControlTipText = Application.WorksheetFunction.Text(DateAdd("d", (i - Weekday((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), _
                ((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), "m/d/yy")
        ElseIf i >= Weekday((CB_Mth.Value) & "/1/" & (CB_Yr.Value)) Then
            Controls("D" & (i)).Caption = Application.WorksheetFunction.Text(DateAdd("d", (i - Weekday((CB_Mth.Value) _
                & "/1/" & (CB_Yr.Value))), ((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), "d")
            Controls("D" & (i)).ControlTipText = Application.WorksheetFunction.Text(DateAdd("d", (i - Weekday((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), _
                ((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), "m/d/yy")
        End If
        If Application.WorksheetFunction.Text(DateAdd("d", (i - Weekday((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), _
        ((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), "mmmm") = ((CB_Mth.Value)) Then
            If Controls("D" & (i)).BackColor <> &H80000016 Then Controls("D" & (i)).BackColor = &H80000018  '&H80000010
            Controls("D" & (i)).Font.Bold = True
        If Application.WorksheetFunction.Text(DateAdd("d", (i - Weekday((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), _
            ((CB_Mth.Value) & "/1/" & (CB_Yr.Value))), "m/d/yy") = Application.WorksheetFunction.Text(ThisDay, "m/d/yy") Then Controls("D" & (i)).SetFocus
        Else
            If Controls("D" & (i)).BackColor <> &H80000016 Then Controls("D" & (i)).BackColor = &H8000000F
            Controls("D" & (i)).Font.Bold = False
        End If
    Next
    End If
End Sub
Private Sub D1_Click()
    'this sub and the ones following represent the buttons for days on the form
    'retrieves the current value of the individual controltiptext and
    'places it in the active cell
    ActiveCell.Value = D1.ControlTipText
    Unload Me
    'after unload you can call a different userform to continue data entry
    'uncomment this line and add a userform named UserForm2
    'Userform2.Show
    
End Sub
Private Sub D2_Click()
    ActiveCell.Value = D2.ControlTipText
    Unload Me
    
End Sub
Private Sub D3_Click()
    ActiveCell.Value = D3.ControlTipText
    Unload Me
    
End Sub
Private Sub D4_Click()
    ActiveCell.Value = D4.ControlTipText
    Unload Me
    
End Sub
Private Sub D5_Click()
    ActiveCell.Value = D5.ControlTipText
    Unload Me
    
End Sub
Private Sub D6_Click()
    ActiveCell.Value = D6.ControlTipText
    Unload Me
    
End Sub
Private Sub D7_Click()
    ActiveCell.Value = D7.ControlTipText
    Unload Me
    
End Sub
Private Sub D8_Click()
    ActiveCell.Value = D8.ControlTipText
    Unload Me
    
End Sub
Private Sub D9_Click()
    ActiveCell.Value = D9.ControlTipText
    Unload Me
    
End Sub
Private Sub D10_Click()
    ActiveCell.Value = D10.ControlTipText
    Unload Me
    
End Sub
Private Sub D11_Click()
    ActiveCell.Value = D11.ControlTipText
    Unload Me
    
End Sub
Private Sub D12_Click()
    ActiveCell.Value = D12.ControlTipText
    Unload Me
    
End Sub
Private Sub D13_Click()
    ActiveCell.Value = D13.ControlTipText
    Unload Me
    
End Sub
Private Sub D14_Click()
    ActiveCell.Value = D14.ControlTipText
    Unload Me
    
End Sub
Private Sub D15_Click()
    ActiveCell.Value = D15.ControlTipText
    Unload Me
    
End Sub
Private Sub D16_Click()
    ActiveCell.Value = D16.ControlTipText
    Unload Me
    
End Sub
Private Sub D17_Click()
    ActiveCell.Value = D17.ControlTipText
    Unload Me
    
End Sub
Private Sub D18_Click()
    ActiveCell.Value = D18.ControlTipText
    Unload Me
    
End Sub
Private Sub D19_Click()
    ActiveCell.Value = D19.ControlTipText
    Unload Me
    
End Sub
Private Sub D20_Click()
    ActiveCell.Value = D20.ControlTipText
    Unload Me
    
End Sub
Private Sub D21_Click()
    ActiveCell.Value = D21.ControlTipText
    Unload Me
    
End Sub
Private Sub D22_Click()
    ActiveCell.Value = D22.ControlTipText
    Unload Me
    
End Sub
Private Sub D23_Click()
    ActiveCell.Value = D23.ControlTipText
    Unload Me
    
End Sub
Private Sub D24_Click()
    ActiveCell.Value = D24.ControlTipText
    Unload Me
    
End Sub
Private Sub D25_Click()
    ActiveCell.Value = D25.ControlTipText
    Unload Me
    
End Sub
Private Sub D26_Click()
    ActiveCell.Value = D26.ControlTipText
    Unload Me
    
End Sub
Private Sub D27_Click()
    ActiveCell.Value = D27.ControlTipText
    Unload Me
    
End Sub
Private Sub D28_Click()
    ActiveCell.Value = D28.ControlTipText
    Unload Me
    
End Sub
Private Sub D29_Click()
    ActiveCell.Value = D29.ControlTipText
    Unload Me
    
End Sub
Private Sub D30_Click()
    ActiveCell.Value = D30.ControlTipText
    Unload Me
    
End Sub
Private Sub D31_Click()
    ActiveCell.Value = D31.ControlTipText
    Unload Me
    
End Sub
Private Sub D32_Click()
    ActiveCell.Value = D32.ControlTipText
    Unload Me
    
End Sub
Private Sub D33_Click()
    ActiveCell.Value = D33.ControlTipText
    Unload Me
    
End Sub
Private Sub D34_Click()
    ActiveCell.Value = D34.ControlTipText
    Unload Me
    
End Sub
Private Sub D35_Click()
    ActiveCell.Value = D35.ControlTipText
    Unload Me
    
End Sub
Private Sub D36_Click()
    ActiveCell.Value = D36.ControlTipText
    Unload Me
    
End Sub
Private Sub D37_Click()
    ActiveCell.Value = D37.ControlTipText
    Unload Me
    
End Sub
Private Sub D38_Click()
    ActiveCell.Value = D38.ControlTipText
    Unload Me
    
End Sub
Private Sub D39_Click()
    ActiveCell.Value = D39.ControlTipText
    Unload Me
    
End Sub
Private Sub D40_Click()
    ActiveCell.Value = D40.ControlTipText
    Unload Me
    
End Sub
Private Sub D41_Click()
    ActiveCell.Value = D41.ControlTipText
    Unload Me
    
End Sub
Private Sub D42_Click()
    ActiveCell.Value = D42.ControlTipText
    Unload Me
    
End Sub




Attribute VB_Name = "Module1"
Public CalcState As Long
Public EventState As Boolean
Public PageBreakState As Boolean

Sub OptimizeCode_Begin()

Application.ScreenUpdating = False

EventState = Application.EnableEvents
Application.EnableEvents = False

CalcState = Application.Calculation
Application.Calculation = xlCalculationManual

PageBreakState = ActiveSheet.DisplayPageBreaks
ActiveSheet.DisplayPageBreaks = False


End Sub
Sub OptimizeCode_End()

ActiveSheet.DisplayPageBreaks = PageBreakState
Application.Calculation = CalcState
Application.EnableEvents = EventState
Application.ScreenUpdating = True

End Sub
Public Function GetRange(ByVal sListName As String) As String

Dim oListObject As ListObject
Dim wb As Workbook
Dim ws As Worksheet

Set wb = ThisWorkbook

For Each ws In wb.Sheets
    For Each oListObject In ws.ListObjects
        If oListObject.Name = sListName Then
            GetRange = "[" & ws.Name & "$" & Replace(oListObject.Range.Address, "$", "") & "]"
        Exit Function
        End If
    Next oListObject
Next ws


End Function

Sub argent()

Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource As Worksheet
Dim wsTarget, wsFormulas As Worksheet
Dim i, endrow As Integer

Dim ma_kh As Variant
Dim strSQL As String

Dim oListObject As ListObject

Call OptimizeCode_Begin
 
Set wsTarget = wb.Sheets("IDS")
  wsTarget.Range("O2:AA10000").Clear

strSQL = "Select SearchTerm,CustomerID,Name, ReconAcct,Note from " & GetRange("tbl_arlist") & ""

'strSQL = "Select * from tbl_arlist order by SearchTerm,Note desc  "
wsTarget.Range("M11").Value = strSQL

  
GetDataSQL "", strSQL, wsTarget.Range("O2"), 1, 1, 0
  
endrow = wsTarget.Cells(Rows.Count, "O").End(xlUp).Row
  
ThisWorkbook.Names.Add Name:="N_arlist", RefersTo:=wsTarget.Range("O2:S" & endrow)

  
  
  MsgBox ("Da cap nhat thanh cong")

  Call OptimizeCode_End
End Sub

Sub Capnhatdaily()

Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource As Worksheet
Dim wsTarget, wsFormulas As Worksheet
Dim i, endrow As Integer

Dim ma_kh As Variant
Dim strSQL As String
Call OptimizeCode_Begin
 
Set wsTarget = wb.Sheets("IDS")
  wsTarget.Range("G3:I10000").Clear


strSQL = "Select SearchTerm,CustomerID,Note from N_arlist where SearchTerm in (select distinct ArName from " & _
  " (select distinct n_data_cn.ArName from n_data_cn where n_data_cn.ArName is not null" & _
  " Union all " & _
  " select distinct n_data_tt.ArName from n_data_tt  where n_data_tt.ArName is not null )" & _
  " ) and CustomerID is not null order by SearchTerm asc  "
'wsTarget.Range("M11").Value = strSQL

  
GetDataSQL "", strSQL, wsTarget.Range("G2"), 1, 0, 0
  
endrow = wsTarget.Cells(Rows.Count, "G").End(xlUp).Row
  
   ThisWorkbook.Names.Add Name:="N_IDS_ARCODE", RefersTo:=wsTarget.Range("G1:G" & endrow)
 ThisWorkbook.Names.Add Name:="N_Custommer_info", RefersTo:=wsTarget.Range("G1:I" & endrow)

  
  
  MsgBox ("Da cap nhat thanh cong")

  Call OptimizeCode_End
End Sub



Sub sumary()

Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource As Worksheet
Dim wsTarget, wsFormulas As Worksheet
Dim startdate, enddate As Date
Dim ma_kh As Variant
Dim strSQL As String
Dim summary_F, chuky As Range
Dim endrow, i, startrow As Integer

Call OptimizeCode_Begin
 Set wsFormulas = wb.Sheets("Formulas")
 Set summary_F = wsFormulas.Range("F_summary")
 
Set wsTarget = wb.Sheets("Summary")

startdate = wsTarget.Range("Summary_startdate").Value

enddate = wsTarget.Range("Summary_enddate").Value

 wsTarget.Range("A11:H10000").Clear

strSQL = "select distinct ArName from " & _
  " (select distinct n_data_cn.ArName from n_data_cn where BookingDate <=" & CDbl(enddate) & "and  BookingDate >=" & CDbl(startdate) & _
  " Union all " & _
  " select distinct n_data_tt.ArName from n_data_tt  where PaidDate <=" & CDbl(enddate) & "and  PaidDate >=" & CDbl(startdate) & ")" & _
  " where ArName is not null order by ArName asc "
'wsTarget.Range("M11").Value = strSQL

  
GetDataSQL "", strSQL, wsTarget.Range("B11"), 1, 0, 1

endrow = wsTarget.Cells(Rows.Count, "B").End(xlUp).Row
summary_F.Copy


  wsTarget.Range("E11:H" & endrow).PasteSpecial xlPasteFormats
   wsTarget.Range("E11:H" & endrow).PasteSpecial xlPasteFormulas
 wsTarget.Range("B11:H" & endrow).Borders.LineStyle = xlContinuous
 
  MsgBox ("Da cap nhat thanh cong")

  Call OptimizeCode_End
Application.StatusBar = False
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub




Sub DebitNote()
Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource As Worksheet
Dim wsTarget, wsFormulas As Worksheet

Dim ma_kh, tempstring As Variant
Dim strSQL   As String
Dim targetRng, Rngtieudechitiet, tieudechitiet1, Rngtieudeall, Rngtieudeall1, chuky, Rng_Detbit_total As Range
Dim startrow, endrow, i As Integer
Set wsFormulas = wb.Sheets("Formulas")

Set Rngtieudechitiet = wsFormulas.Range("N_formulas_Debit_Detail")
Set tieudechitiet1 = wsFormulas.Range("N_formulas_Debit_Detail1")
Set Rngtieudeall = wsFormulas.Range("N_formulas_Debit_All")
Set Rngtieudeall1 = wsFormulas.Range("N_formulas_Debit_All1")

Set chuky = wsFormulas.Range("F_DEBITNOTE_CHUKY")


Set Rng_Detbit_total = wsFormulas.Range("f_Detbit_total")

Call OptimizeCode_Begin
 

startrow = 12
'Set wsSource = wb.Sh,eets("XNNL")

Set wsTarget = wb.Sheets("DebitNote")
 
ma_kh = wsTarget.Range("DebitNote_MaKH").Value
If ma_kh = "ALL" Then
ma_kh = "%"
End If

'xoa hien tai
 
wsTarget.Range("A11:M10000").Clear

  
  On Error Resume Next
  
 If ma_kh <> "%" Then
  'Set filter field
 strSQL = "select BookingDate,BookingNo,InvoiceNo,CDbl(debitamount),PaidDate,CDbl(paid),CDbl(blance),paidremarks,bookingremarks from (" & _
   " select  n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid " & _
  " ,-(iif(n_data_TT.CreditAmount is null,0,n_data_TT.CreditAmount) -iif(n_data_cn.CreditAmount is null ,0,n_data_cn.CreditAmount)) as blance,n_data_TT.Remarks as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_TT INNER JOIN  n_data_CN " & _
  " on n_data_CN.bookingno = n_data_TT.bookingno " & _
  " and n_data_cn.ArName=n_data_tt.ArName  WHERE n_data_tt.ArName =""" & ma_kh & """ " & _
  " Union all " & _
  " select n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , " & VBA.Chr(34) & VBA.Chr(34) & " as PaidDate ,0 as paid, " & _
  " n_data_cn.CreditAmount as blance," & VBA.Chr(34) & VBA.Chr(34) & " as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_cn " & _
  " where n_data_cn.ArName =""" & ma_kh & """ and  bookingno not in  ( select distinct n_data_tt.bookingno from n_data_TT  where n_data_tt.bookingno is not null )   " & _
  " Union all " & _
  "  select n_data_tt.BookingDate as BookingDate,n_data_tt.BookingNo as bookingno, """"  as InvoiceNo, 0 as debitamount , " & _
  "  n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid,-(n_data_TT.CreditAmount) as blance,n_data_TT.Remarks as paidremarks ,""""  as bookingremarks " & _
  " from n_data_TT " & _
  " where n_data_tt.ArName =""" & ma_kh & """ and  bookingno not in  ( select distinct n_data_CN.bookingno from n_data_CN where n_data_CN.bookingno is not null )) " & _
  "  order by  BookingDate , bookingno,PaidDate asc "
  Else
 strSQL = "select ArName, BookingDate,BookingNo,InvoiceNo,CDbl(debitamount),PaidDate,CDbl(paid),CDbl(blance),paidremarks,bookingremarks from " & _
  " (select n_data_cn.ArName,  n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid " & _
  " ,-(iif(n_data_TT.CreditAmount is null,0,n_data_TT.CreditAmount) -iif(n_data_cn.CreditAmount is null ,0,n_data_cn.CreditAmount)) as blance,n_data_TT.Remarks as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_TT INNER JOIN  n_data_CN " & _
  " on n_data_CN.bookingno = n_data_TT.bookingno " & _
  " and n_data_cn.ArName=n_data_tt.ArName " & _
  " Union all " & _
  " select n_data_cn.ArName,  n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , """" as PaidDate ,""0"" as paid, " & _
  " n_data_cn.CreditAmount as blance," & VBA.Chr(34) & VBA.Chr(34) & " as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_cn " & _
  " where  bookingno not in  ( select distinct n_data_tt.bookingno from n_data_TT  where n_data_tt.bookingno is not null ) " & _
  " Union all " & _
  "  select n_data_tt.ArName,  n_data_tt.BookingDate as BookingDate,n_data_tt.BookingNo as bookingno, """"  as InvoiceNo, 0 as debitamount , " & _
  "  n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid,-(n_data_TT.CreditAmount) as blance,n_data_TT.Remarks as paidremarks , """"  as bookingremarks " & _
  " from n_data_TT " & _
  " where  bookingno not in  ( select distinct n_data_CN.bookingno from n_data_CN where n_data_CN.bookingno is not null ))  where ArName like """ & ma_kh & """ order by ArName, BookingDate ,  bookingno,PaidDate asc "

 End If

'wsTarget.Range("M11").Value = strSQL
 
'MsgBox strSQL
'
 If ma_kh = "%" Then
 

Rngtieudeall.Copy
  wsTarget.Range("B" & (startrow - 1)).PasteSpecial xlPasteAll
   
 
GetDataSQL "", strSQL, wsTarget.Range("B" & startrow), 1, 0, 0

endrow = wsTarget.Cells(Rows.Count, "B").End(xlUp).Row

Rngtieudeall1.Copy

  wsTarget.Range("B" & startrow & ":K" & endrow).PasteSpecial xlPasteFormats

 Else
 
 Rngtieudechitiet.Copy
  wsTarget.Range("B" & (startrow - 1)).PasteSpecial xlPasteAll
   
 
GetDataSQL "", strSQL, wsTarget.Range("B" & startrow), 1, 0, 1

endrow = wsTarget.Cells(Rows.Count, "B").End(xlUp).Row

Rngtieudeall1.Copy

  wsTarget.Range("B" & startrow & ":K" & endrow).PasteSpecial xlPasteFormats

End If


      tempstring = wsTarget.Range("D12")
  'Xu ly trung  '
    For i = 13 To endrow



      If wsTarget.Range("D" & i) = tempstring Then
        wsTarget.Range("F" & i) = ""
       'MsgBox tempstring

      ElseIf wsTarget.Range("D" & i) <> tempstring Then
          tempstring = wsTarget.Range("D" & i)


      '    MsgBox "Moi " & tempstring
      End If

     wsTarget.Range("I" & i).Value = wsTarget.Range("F" & i).Value - wsTarget.Range("H" & i).Value

    Next i
    
    'wsTarget.Columns("F"). _
 NumberFormat = "$#,##0.00_);[Red]($#,##0.00)"
 Rng_Detbit_total.Copy
    wsTarget.Range("B" & (endrow + 1)).PasteSpecial xlPasteFormats

      wsTarget.Range("B" & endrow + 1).Value = "Total"
     wsTarget.Range("F" & endrow + 1).Formula = "=Sum(F12:F" & endrow & ")"
    wsTarget.Range("H" & endrow + 1).Formula = "=Sum(H12:H" & endrow & ")"
wsTarget.Range("I" & endrow + 1).Formula = "=Sum(I12:I" & endrow & ")"


    

    

    
    
    ' Copy chu ky vao
        chuky.Copy

      wsTarget.Range("C" & (endrow + 4)).PasteSpecial xlPasteValues

     'wsTarget.Range("B" & endrow & ":K" & endrow).Borders.LineStyle = xlContinuous
     
     'wsTarget.Range("A" & startrow & ":H" & endrow).Borders.LineStyle = xlContinuous


'' MsgBox Timer - t
'lo_temp.AutoFilter.ShowAllData
  Call OptimizeCode_End
End Sub
Sub DebitNoteAll()
Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource As Worksheet
Dim wsTarget, wsFormulas, wsids As Worksheet
Dim Arr As Variant
Dim ma_kh, tempstring As Variant
Dim strSQL   As String
Dim targetRng, Rngtieudechitiet, tieudechitiet1, Rngtieudeall, Rngtieudeall1, chuky, Rng_Detbit_total, RngArlist, Rngdebitall_header As Range
Dim startrow, endrow, i, j, k, arlistrow As Integer

Set wsFormulas = wb.Sheets("Formulas")
Set wsids = wb.Sheets("IDS")
Set wsTarget = wb.Sheets("DebitnoteAll")

Set Rngtieudechitiet = wsFormulas.Range("N_formulas_Debit_Detail")
Set tieudechitiet1 = wsFormulas.Range("N_formulas_Debit_Detail1")
Set Rngtieudeall = wsFormulas.Range("N_formulas_Debit_All")
Set Rngtieudeall1 = wsFormulas.Range("N_formulas_Debit_All1")
Set Rngdebitall_header = wsTarget.Range("N_debitall_header")



Set chuky = wsFormulas.Range("F_DEBITNOTE_CHUKY")

Set RngArlist = wsids.Range("N_Custommer_info")


Set Rng_Detbit_total = wsFormulas.Range("f_Detbit_total")

Call OptimizeCode_Begin
 
'
If (MsgBox("Do you want to update? Please wait some minutes! ", vbOKCancel)) = 1 Then
startrow = 12
'Set wsSource = wb.Sh,eets("XNNL")

'xoa hien tai
 
wsTarget.Range("A8:L10000").Clear
wsids.Range("J2:K10000").Clear
'MsgBox RngArlist.Rows.Count
'
ActiveSheet.ResetAllPageBreaks
Arr = RngArlist

'For i = 2 To RngArlist.Rows.Count

 strSQL = "select ArName, BookingDate,BookingNo,InvoiceNo,CDbl(debitamount) as debitamount ,PaidDate,CDbl(paid) as Paid,CDbl(blance) as blance ,paidremarks,bookingremarks from " & _
  " (select n_data_cn.ArName,  n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid " & _
  " ,-(iif(n_data_TT.CreditAmount is null,0,n_data_TT.CreditAmount) -iif(n_data_cn.CreditAmount is null ,0,n_data_cn.CreditAmount)) as blance,n_data_TT.Remarks as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_TT INNER JOIN  n_data_CN " & _
  " on n_data_CN.bookingno = n_data_TT.bookingno " & _
  " and n_data_cn.ArName=n_data_tt.ArName " & _
  " Union all " & _
  " select n_data_cn.ArName,  n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , """" as PaidDate ,""0"" as paid, " & _
  " n_data_cn.CreditAmount as blance," & VBA.Chr(34) & VBA.Chr(34) & " as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_cn " & _
  " where  bookingno not in  ( select distinct n_data_tt.bookingno from n_data_TT  where n_data_tt.bookingno is not null ) " & _
  " Union all " & _
  "  select n_data_tt.ArName,  n_data_tt.BookingDate as BookingDate,n_data_tt.BookingNo as bookingno, """"  as InvoiceNo, 0 as debitamount , " & _
  "  n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid,-(n_data_TT.CreditAmount) as blance,n_data_TT.Remarks as paidremarks , """"  as bookingremarks " & _
  " from n_data_TT " & _
  " where  bookingno not in  ( select distinct n_data_CN.bookingno from n_data_CN where n_data_CN.bookingno is not null )) order by ArName, BookingDate ,  bookingno,PaidDate asc "

'GetDataSQL "", strSQL, wsids.Range("U2"), 1, 0, 1


For i = 2 To RngArlist.Rows.Count

    ma_kh = Arr(i, 1)
  
If i <> 2 Then

Rngdebitall_header.Copy

  wsTarget.Range("B" & startrow).PasteSpecial xlPasteAll

    wsTarget.Range("B" & (startrow) & ":B" & (startrow + 100)).EntireRow.RowHeight = 18

startrow = startrow + 10
End If


' Lay ten cong ty
wsTarget.Range("B" & (startrow - 4)).Value = "Company Name: " & Arr(i, 3)
wsTarget.Range("B" & (startrow - 4)).Font.FontStyle = "Bold"

wsTarget.Range("B" & (startrow - 3)).Value = "Contact Person: "
wsTarget.Range("B" & (startrow - 3)).Font.FontStyle = "Bold"


wsTarget.Range("K" & (startrow - 4)).Value = "Customer Code :" & Arr(i, 1)
wsTarget.Range("K" & (startrow - 4)).Font.FontStyle = "Bold"

wsTarget.Range("I" & (startrow - 3)).Value = " As of: " & VBA.Format(VBA.Now, "mmm,dd,YYYY")
wsTarget.Range("I" & (startrow - 3)).Font.FontStyle = "Bold Italic"



' Tieu de dau
 Rngtieudechitiet.Copy
  wsTarget.Range("B" & (startrow - 1)).PasteSpecial xlPasteAll
    wsTarget.Range("B" & (startrow - 1)).EntireRow.RowHeight = 25


On Error Resume Next ''if error, the code will go on anyway


'GetDataSQL "", strSQL, wsTarget.Range("B" & startrow), 1, 0, 1
' lay thong tin tu ids
MSG wsids.Cells(Rows.Count, "U").End(xlUp).Row
For k = 2 To wsids.Cells(Rows.Count, "U").End(xlUp).Row


If wsids.Range("U" & k).Value = ma_kh Then
    wsTarget.Range("B" & startrow).Value = wsids.Range("U" & k).Value
    
     wsTarget.Range("C" & startrow).Value = wsids.Range("V" & k).Value
     wsTarget.Range("D" & startrow).Value = wsids.Range("W" & k).Value
     wsTarget.Range("E" & startrow).Value = wsids.Range("X" & k).Value
     wsTarget.Range("G" & startrow).Value = wsids.Range("Y" & k).Value
     wsTarget.Range("H" & startrow).Value = wsids.Range("Z" & k).Value
     wsTarget.Range("I" & startrow).Value = wsids.Range("A" & k).Value
     wsTarget.Range("J" & startrow).Value = wsids.Range("B" & k).Value
     wsTarget.Range("K" & startrow).Value = wsids.Range("C" & k).Value
     wsTarget.Range("L" & startrow).Value = wsids.Range("D" & k).Value
     wsTarget.Range("M" & startrow).Value = wsids.Range("E" & k).Value
     
End If
Next k


If Err.Number <> 0 Then
''error appeared
'MsgBox "fff"
  Rngtieudechitiet.Copy
  wsTarget.Range("B" & (startrow - 1)).PasteSpecial xlPasteAll
    wsTarget.Range("B" & (startrow - 1)).EntireRow.RowHeight = 25
  Rngtieudeall1.Copy

  wsTarget.Range("B" & startrow & ":K" & startrow).PasteSpecial xlPasteFormats
    wsTarget.Range("F" & startrow).Value = 0
    wsTarget.Range("H" & startrow).Value = 0
wsTarget.Range("I" & startrow).Value = 0
'   Rng_Detbit_total.Copy
'    wsTarget.Range("B" & (startrow + 1)).PasteSpecial xlPasteFormats
'
'      wsTarget.Range("B" & startrow + 1).Value = "Total"
'     wsTarget.Range("F" & startrow + 1).Value = 0
'    wsTarget.Range("H" & startrow + 1).Value = 0
'wsTarget.Range("I" & startrow + 1).Value = 0

End If




endrow = wsTarget.Cells(Rows.Count, "B").End(xlUp).Row


'Tieu de Chi tiet
Rngtieudeall1.Copy

  wsTarget.Range("B" & startrow & ":K" & endrow).PasteSpecial xlPasteFormats

 tempstring = wsTarget.Range("D" & startrow)
  'Xu ly trung  '
    For j = startrow + 1 To endrow

      If wsTarget.Range("D" & j) = tempstring Then
        wsTarget.Range("F" & j) = ""
       'MsgBox tempstring

      ElseIf wsTarget.Range("D" & j) <> tempstring Then
          tempstring = wsTarget.Range("D" & j)


      '    MsgBox "Moi " & tempstring
      End If

     wsTarget.Range("I" & j).Value = wsTarget.Range("F" & j).Value - wsTarget.Range("H" & j).Value

    Next j

    'wsTarget.Columns("F"). _
 NumberFormat = "$#,##0.00_);[Red]($#,##0.00)"

 Rng_Detbit_total.Copy
    wsTarget.Range("B" & (endrow + 1)).PasteSpecial xlPasteFormats

      wsTarget.Range("B" & endrow + 1).Value = "Total"
     wsTarget.Range("F" & endrow + 1).Formula = "=Sum(F" & endrow & ":F" & endrow & ")"
    wsTarget.Range("H" & endrow + 1).Formula = "=Sum(H" & endrow & ":H" & endrow & ")"
wsTarget.Range("I" & endrow + 1).Formula = "=Sum(I" & endrow & ":I" & endrow & ")"


On Error GoTo 0 ''no error, coming back to default conditions



    ' Copy chu ky vao
        chuky.Copy

      wsTarget.Range("C" & (endrow + 3)).PasteSpecial xlPasteValues


endrow = wsTarget.Cells(Rows.Count, "D").End(xlUp).Row
'Lay link


If (Round(endrow / 30, 0) * 30) < endrow Then
startrow = (Round(endrow / 30, 0) + 1) * 30 + 1
Else
startrow = (Round(endrow / 30, 0)) * 30
End If

'Tao namerange cho edit
wsids.Range("J" & (i)).Value = Arr(i, 1)
wsids.Range("K" & (i)).Value = Arr(i, 3)
'Tao link home
wsTarget.Cells(startrow, "L").Formula = "=HYPERLINK(""#DebitNoteAll!A1"",""HOME"")"

wsids.Range("L" & (i)).Value = "B" & startrow - 30

ActiveSheet.HPageBreaks.Add Before:=Cells(startrow, 1)

'MsgBox ActiveSheet.Cells.SpecialCells(xlCellTypeVisible).Rows(i).Row
Next i


ThisWorkbook.Names.Add Name:="N_ids_debitall_cus", RefersTo:=wsids.Range("j2:l" & wsids.Cells(Rows.Count, "J").End(xlUp).Row)

End If 'Thong bao

MsgBox "Succesful update!"
'lo_temp.AutoFilter.ShowAllData
  Call OptimizeCode_End
End Sub




Sub DebitNoteAll1()
Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource As Worksheet
Dim wsTarget, wsFormulas, wsids As Worksheet
Dim Arr As Variant
Dim ma_kh, tempstring As Variant
Dim strSQL   As String
Dim targetRng, Rngtieudechitiet, tieudechitiet1, Rngtieudeall, Rngtieudeall1, chuky, Rng_Detbit_total, RngArlist, Rngdebitall_header As Range
Dim startrow, endrow, i, j, arlistrow As Integer

Set wsFormulas = wb.Sheets("Formulas")
Set wsids = wb.Sheets("IDS")
Set wsTarget = wb.Sheets("DebitnoteAll")

Set Rngtieudechitiet = wsFormulas.Range("N_formulas_Debit_Detail")
Set tieudechitiet1 = wsFormulas.Range("N_formulas_Debit_Detail1")
Set Rngtieudeall = wsFormulas.Range("N_formulas_Debit_All")
Set Rngtieudeall1 = wsFormulas.Range("N_formulas_Debit_All1")
Set Rngdebitall_header = wsTarget.Range("N_debitall_header")



Set chuky = wsFormulas.Range("F_DEBITNOTE_CHUKY")

Set RngArlist = wsids.Range("N_Custommer_info")


Set Rng_Detbit_total = wsFormulas.Range("f_Detbit_total")

Call OptimizeCode_Begin
 
'
If (MsgBox("Do you want to update? Please wait some minutes! ", vbOKCancel)) = 1 Then
startrow = 12
'Set wsSource = wb.Sh,eets("XNNL")

'xoa hien tai
 
wsTarget.Range("A8:L10000").Clear
wsids.Range("J2:K10000").Clear
'MsgBox RngArlist.Rows.Count
'
ActiveSheet.ResetAllPageBreaks
Arr = RngArlist

'For i = 2 To RngArlist.Rows.Count

For i = 2 To 15


    ma_kh = Arr(i, 1)
    
   ' MsgBox ma_kh
 
 strSQL = "select BookingDate,BookingNo,InvoiceNo,CDbl(debitamount),PaidDate,CDbl(paid),CDbl(blance),paidremarks,bookingremarks from (" & _
   " select  n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid " & _
  " ,-(iif(n_data_TT.CreditAmount is null,0,n_data_TT.CreditAmount) -iif(n_data_cn.CreditAmount is null ,0,n_data_cn.CreditAmount)) as blance,n_data_TT.Remarks as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_TT INNER JOIN  n_data_CN " & _
  " on n_data_CN.bookingno = n_data_TT.bookingno " & _
  " and n_data_cn.ArName=n_data_tt.ArName  WHERE n_data_tt.ArName =""" & ma_kh & """ " & _
  " Union all " & _
  " select n_data_cn.BookingDate as BookingDate,n_data_cn.BookingNo as bookingno, n_data_cn.InvoiceNo as InvoiceNo, " & _
  " n_data_cn.CreditAmount as debitamount , " & VBA.Chr(34) & VBA.Chr(34) & " as PaidDate ,0 as paid, " & _
  " n_data_cn.CreditAmount as blance," & VBA.Chr(34) & VBA.Chr(34) & " as paidremarks ,n_data_cn.Remarks as bookingremarks " & _
  "  from n_data_cn " & _
  " where n_data_cn.ArName =""" & ma_kh & """ and  bookingno not in  ( select distinct n_data_tt.bookingno from n_data_TT  where n_data_tt.bookingno is not null )   " & _
  " Union all " & _
  "  select n_data_tt.BookingDate as BookingDate,n_data_tt.BookingNo as bookingno, """"  as InvoiceNo, 0 as debitamount , " & _
  "  n_data_TT.PaidDate as PaidDate ,n_data_TT.CreditAmount as paid,-(n_data_TT.CreditAmount) as blance,n_data_TT.Remarks as paidremarks ,""""  as bookingremarks " & _
  " from n_data_TT " & _
  " where n_data_tt.ArName =""" & ma_kh & """ and  bookingno not in  ( select distinct n_data_CN.bookingno from n_data_CN where n_data_CN.bookingno is not null )) " & _
  "  order by  BookingDate , bookingno,PaidDate asc "
'

If i <> 2 Then

Rngdebitall_header.Copy

  wsTarget.Range("B" & startrow).PasteSpecial xlPasteAll
     
    wsTarget.Range("B" & (startrow) & ":B" & (startrow + 100)).EntireRow.RowHeight = 18
 
startrow = startrow + 10
End If


' Lay ten cong ty
wsTarget.Range("B" & (startrow - 4)).Value = "Company Name: " & Arr(i, 3)
wsTarget.Range("B" & (startrow - 4)).Font.FontStyle = "Bold"

wsTarget.Range("B" & (startrow - 3)).Value = "Contact Person: "
wsTarget.Range("B" & (startrow - 3)).Font.FontStyle = "Bold"


wsTarget.Range("K" & (startrow - 4)).Value = "Customer Code :" & Arr(i, 1)
wsTarget.Range("K" & (startrow - 4)).Font.FontStyle = "Bold"

wsTarget.Range("I" & (startrow - 3)).Value = " As of: " & VBA.Format(VBA.Now, "mmm,dd,YYYY")
wsTarget.Range("I" & (startrow - 3)).Font.FontStyle = "Bold Italic"



' Tieu de dau
 Rngtieudechitiet.Copy
  wsTarget.Range("B" & (startrow - 1)).PasteSpecial xlPasteAll
    wsTarget.Range("B" & (startrow - 1)).EntireRow.RowHeight = 25
 

On Error Resume Next ''if error, the code will go on anyway
GetDataSQL "", strSQL, wsTarget.Range("B" & startrow), 1, 0, 1

If Err.Number <> 0 Then
''error appeared
'MsgBox "fff"
  Rngtieudechitiet.Copy
  wsTarget.Range("B" & (startrow - 1)).PasteSpecial xlPasteAll
    wsTarget.Range("B" & (startrow - 1)).EntireRow.RowHeight = 25
  Rngtieudeall1.Copy

  wsTarget.Range("B" & startrow & ":K" & startrow).PasteSpecial xlPasteFormats
    wsTarget.Range("F" & startrow).Value = 0
    wsTarget.Range("H" & startrow).Value = 0
wsTarget.Range("I" & startrow).Value = 0
'   Rng_Detbit_total.Copy
'    wsTarget.Range("B" & (startrow + 1)).PasteSpecial xlPasteFormats
'
'      wsTarget.Range("B" & startrow + 1).Value = "Total"
'     wsTarget.Range("F" & startrow + 1).Value = 0
'    wsTarget.Range("H" & startrow + 1).Value = 0
'wsTarget.Range("I" & startrow + 1).Value = 0

End If




endrow = wsTarget.Cells(Rows.Count, "B").End(xlUp).Row


'Tieu de Chi tiet
Rngtieudeall1.Copy

  wsTarget.Range("B" & startrow & ":K" & endrow).PasteSpecial xlPasteFormats

 tempstring = wsTarget.Range("D" & startrow)
  'Xu ly trung  '
    For j = startrow + 1 To endrow

      If wsTarget.Range("D" & j) = tempstring Then
        wsTarget.Range("F" & j) = ""
       'MsgBox tempstring

      ElseIf wsTarget.Range("D" & j) <> tempstring Then
          tempstring = wsTarget.Range("D" & j)


      '    MsgBox "Moi " & tempstring
      End If

     wsTarget.Range("I" & j).Value = wsTarget.Range("F" & j).Value - wsTarget.Range("H" & j).Value

    Next j

    'wsTarget.Columns("F"). _
 NumberFormat = "$#,##0.00_);[Red]($#,##0.00)"

 Rng_Detbit_total.Copy
    wsTarget.Range("B" & (endrow + 1)).PasteSpecial xlPasteFormats

      wsTarget.Range("B" & endrow + 1).Value = "Total"
     wsTarget.Range("F" & endrow + 1).Formula = "=Sum(F" & endrow & ":F" & endrow & ")"
    wsTarget.Range("H" & endrow + 1).Formula = "=Sum(H" & endrow & ":H" & endrow & ")"
wsTarget.Range("I" & endrow + 1).Formula = "=Sum(I" & endrow & ":I" & endrow & ")"


On Error GoTo 0 ''no error, coming back to default conditions



    ' Copy chu ky vao
        chuky.Copy

      wsTarget.Range("C" & (endrow + 3)).PasteSpecial xlPasteValues


endrow = wsTarget.Cells(Rows.Count, "D").End(xlUp).Row
'Lay link


If (Round(endrow / 30, 0) * 30) < endrow Then
startrow = (Round(endrow / 30, 0) + 1) * 30 + 1
Else
startrow = (Round(endrow / 30, 0)) * 30
End If

'Tao namerange cho edit
wsids.Range("J" & (i)).Value = Arr(i, 1)
wsids.Range("K" & (i)).Value = Arr(i, 3)
'Tao link home
wsTarget.Cells(startrow, "L").Formula = "=HYPERLINK(""#DebitNoteAll!A1"",""HOME"")"

wsids.Range("L" & (i)).Value = "B" & startrow - 30

ActiveSheet.HPageBreaks.Add Before:=Cells(startrow, 1)
  
'MsgBox ActiveSheet.Cells.SpecialCells(xlCellTypeVisible).Rows(i).Row
Next i


ThisWorkbook.Names.Add Name:="N_ids_debitall_cus", RefersTo:=wsids.Range("j2:l" & wsids.Cells(Rows.Count, "J").End(xlUp).Row)
End If 'Thong bao

MsgBox "Succesful update!"
'lo_temp.AutoFilter.ShowAllData
  Call OptimizeCode_End
End Sub


Function DocSo(ByVal Number, Optional ByVal Font = 1) As String
Dim myarray
Dim Str
Str = Format(Abs(Number), "000000000000000000")
Select Case Font
Case 1
myarray = Array("kh|fffd|ng ", "m" & VBA.ChrW(7897) & "t ", "hai ", "ba ", "b" & VBA.ChrW(7889) & "n ", "n" & VBA.ChrW(259) & "m ", "s|fffd|u ", "b" & VBA.ChrW(7843) & "y ", "t|fffd|m ", "ch|fffd|n ", "tri" & VBA.ChrW(7879) & "u, ", "ng|fffd|n, ", "t" & VBA.ChrW(7927) & ", ", "tri" & VBA.ChrW(7879) & "u, ", "ng|fffd|n, ", "", "tr" & VBA.ChrW(259) & "m ", "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i ", "kh|fffd|ng " & "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i" & " kh|fffd|ng ", "kh|fffd|ng " & "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i", "l" & VBA.ChrW(7867), "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i" & " kh|fffd|ng", "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i", "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i" & " n" & VBA.ChrW(259) & "m", "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i" & " l" & VBA.ChrW(259) & "m", "m" & VBA.ChrW(7897) & "t " & "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i", "m" & VBA.ChrW(432) & VBA.ChrW(7901) & "i", "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i" & " m" & VBA.ChrW(7897) & "t", "m" & VBA.ChrW(432) & VBA.ChrW(417) & "i" & " m" & VBA.ChrW(7889) & "t", "|fffd|m ")
Case 2
myarray = Array("kho|fffd|ng ", "mo|fffd|t ", "hai ", "ba ", "bo|fffd|n ", "na|fffd|m ", "sa|fffd|u ", "ba|fffd|y ", "ta|fffd|m ", "ch|fffd|n ", "trie|fffd|u, ", "nga|fffd|n, ", "ty|fffd|, ", "trie|fffd|u, ", "nga|fffd|n, ", "", "tra|fffd|m ", "m|fffd||fffd|i ", "kho|fffd|ng m|fffd||fffd|i kho|fffd|ng ", "kho|fffd|ng m|fffd||fffd|i", "le|fffd|", "m|fffd||fffd|i kho|fffd|ng", "m|fffd||fffd|i", "m|fffd||fffd|i na|fffd|m", "m|fffd||fffd|i la|fffd|m", "mo|fffd|t m|fffd||fffd|i", "m|fffd||fffd||fffd|i", "m|fffd||fffd|i mo|fffd|t", "m|fffd||fffd|i mo|fffd|t", "A|fffd|m ")
Case 3
myarray = Array("kh|fffd|ng ", "m|fffd|t ", "hai ", "ba ", "b|fffd|n ", "n|fffd|m ", "s|fffd|u ", "b|fffd|y ", "t|fffd|m ", "ch|fffd|n ", "tri|fffd|u, ", "ng|fffd|n, ", "t|fffd|, ", "tri|fffd|u, ", "ng|fffd|n, ", "", "tr|fffd|m ", "m|fffd||fffd|i ", "kh|fffd|ng m|fffd||fffd|i kh|fffd|ng ", "kh|fffd|ng m|fffd||fffd|i", "l|fffd|", "m|fffd||fffd|i kh|fffd|ng", "m|fffd||fffd|i", "m|fffd||fffd|i n|fffd|m", "m|fffd||fffd|i l|fffd|m", "m|fffd|t m|fffd||fffd|i", "m|fffd||fffd|i", "m|fffd||fffd|i m|fffd|t", "m|fffd||fffd|i m|fffd|t", "|fffd|m ")
End Select
If Str = "000000000000000000" Then
    DocSo = UCase(Left(myarray(0), 1)) & Trim(Mid(myarray(0), 2)) & "."
    Exit Function
End If
For i = 1 To Len(Str)
If Left(Str, i) <> 0 And Mid(Str, (Int((i + 2) / 3) - 1) * 3 + 1, 3) <> 0 Then
    DocSo = DocSo & myarray(Mid(Str, i, 1)) & myarray(-(9 + i / 3) * (i Mod 3 = 0) - (15 + i Mod 3) * (i Mod 3 <> 0))
ElseIf i = 9 And Mid(Str, 7, 3) = 0 And Left(Str, 6) <> 0 Then
    DocSo = DocSo & myarray(12)
End If
Next
DocSo = Trim(Replace(Replace(Replace(Replace(Replace(Replace(DocSo, myarray(18), myarray(15)), myarray(19), myarray(20)), myarray(21), myarray(22)), myarray(23), myarray(24)), myarray(25), myarray(26)), myarray(27), myarray(28)))
If Number < 0 Then
DocSo = myarray(29) & DocSo
End If
DocSo = Replace(UCase(Left(DocSo, 1)) & Mid(DocSo, 2) & ".", ",.", ".")
End Function

Sub Unhide_AllSheet() 'B? ?n t?t c? c|fffd|c Sheet
  Dim ws As Worksheet
  
  On Error Resume Next  'B? qua c|fffd|c l?i c|fffd| th? x?y ra
  'B? ?n c|fffd|c sheet
    For Each ws In Sheets
      ws.Visible = True
    Next
  'V|fffd| hi?u h|fffd|a  b?t k? l?i n|fffd|o x?y ra
  On Error GoTo 0
End Sub
Sub vecuoitrang()
ActiveSheet.Range("B30").End(xlDown).Select
End Sub

Sub test()
Dim ma_vtRng As Range
Set ma_vtRng = Sheets("TEMP").Range("F1:G5000")
  With ma_vtRng
 
        .AdvancedFilter Action:=xlFilterCopy, CopyToRange:=Sheets("TEMP").Range("BA1"), Unique:=True
        
    End With
End Sub


Function tiengviet(var As String)
Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource As Worksheet
Dim lo As ListObjects
Dim tiengvietrng As Range

Dim returnvalue As String

Set tiengvietrng = wb.Sheets("info").Range("info_tiengviet")
tiengviet = WorksheetFunction.VLookup(var, tiengvietrng, 2, 0)

'MsgBox tiengviet

End Function


Public Sub GetDataSQL(sourceFile As Variant, sql1 As String, _
                   TargetRange As Range, Header As Boolean, UseHeaderRow As Boolean, Rownumber As Boolean)
' 30-Dec-2007, working in Excel 2000-2007
' http://www.rondebruin.nl/ado.htm

Dim rsCon As Object
Dim rsData As Object
Dim szConnect As String
Dim szSQL As String
Dim lCount, rcount, oRecordCount As Long
   Dim myarray As Variant
   Dim returnedRows As Integer

If sourceFile = "" Then
  sourceFile = ThisWorkbook.FullName
End If


' Create the connection string.
If Header = False Then
    If Val(Application.Version) < 12 Then
        szConnect = "Provider=Microsoft.Jet.OLEDB.4.0;" & _
                    "Data Source=" & sourceFile & ";" & _
                    "Extended Properties=""Excel 8.0;HDR=No"";"
    Else
        szConnect = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                    "Data Source=" & sourceFile & ";" & _
                    "Extended Properties=""Excel 12.0;HDR=No"";"
    End If
Else
    If Val(Application.Version) < 12 Then
        szConnect = "Provider=Microsoft.Jet.OLEDB.4.0;" & _
                    "Data Source=" & sourceFile & ";" & _
                    "Extended Properties=""Excel 8.0;HDR=Yes"";"
    Else
        szConnect = "Provider=Microsoft.ACE.OLEDB.12.0;" & _
                    "Data Source=" & sourceFile & ";" & _
                    "Extended Properties=""Excel 12.0;HDR=Yes"";"
    End If
End If


On Error GoTo 0
'On Error GoTo SomethingWrong

Set rsCon = CreateObject("ADODB.Connection")
Set rsData = CreateObject("ADODB.Recordset")

rsCon.Open szConnect
rsData.Open sql1, rsCon, 0, 1, 1

    myarray = rsData.GetRows()
    
    returnedRows = UBound(myarray, 2) + 1

rsData.Close

rsData.Open sql1, rsCon, 0, 1, 1

' Check to make sure we received data and copy the data
If Not rsData.EOF Then
 
 If Rownumber = False Then
     ' MsgBox "vao day"
    
    If Header = False Then
        TargetRange.Cells(1, 1).CopyFromRecordset rsData
        
    Else
        'Add the header cell in each column if the last argument is True
        If UseHeaderRow Then
            For lCount = 0 To rsData.Fields.Count - 1
                TargetRange.Cells(1, 1 + lCount).Value = _
                rsData.Fields(lCount).Name
            Next lCount
            TargetRange.Cells(2, 1).CopyFromRecordset rsData
        Else
            TargetRange.Cells(1, 1).CopyFromRecordset rsData
        End If
    End If
    
 ElseIf Rownumber = True Then
   ' MsgBox "vao day"
     If Header = False Then
    
        TargetRange.Cells(2, 1).CopyFromRecordset rsData
        
          For rcount = 0 To returnedRows - 1
            TargetRange.Cells(1 + rcount, 1).Value = rcount + 1
          Next rcount
         
     Else
          For rcount = 0 To returnedRows - 1
            TargetRange.Cells(1 + rcount, 1).Value = rcount + 1

          Next rcount
             
        'Add the header cell in each column if the last argument is True
 
        If UseHeaderRow Then
            For lCount = 0 To rsData.Fields.Count - 1
                TargetRange.Cells(1, 2 + lCount).Value = _
                rsData.Fields(lCount).Name
            Next lCount
            TargetRange.Cells(2, 2).CopyFromRecordset rsData
        Else
            TargetRange.Cells(1, 2).CopyFromRecordset rsData
        End If
         '  MsgBox rcount
    End If
    
   End If
Else
    MsgBox "No records returned from : " & sourceFile, vbCritical
End If

' Clean up our Recordset object.
rsData.Close
Set rsData = Nothing
rsCon.Close
Set rsCon = Nothing
Exit Sub

SomethingWrong:
  '  MsgBox "The file name, Sheet name or Range is invalid of : " & sourceFile, _
   '        vbExclamation, "Error"
    On Error GoTo 0

End Sub

Attribute VB_Name = "Module2"
'Khai bao ban dau

Sub khaibaoxnnvl()


Application.ScreenUpdating = False
'Sheets("XNNL").Range("d1:e1").EntireColumn.Hidden = True
MsgBox ThisWorkbook.FullName


End Sub


Sub sbADOExample()
Dim sSQLQry As String
Dim ReturnArray

Dim Conn As New ADODB.Connection
Dim mrs As New ADODB.Recordset

Dim DBPath As String, sconnect As String

Dim wb As Workbook: Set wb = ThisWorkbook
Dim wsSource, wsTarge As Worksheet

Set wsSource = wb.Sheets("Sheet1")

Set wsTarget = wb.Sheets("Sheet2")



'DBPath = ThisWorkbook.FullName

DBPath = "C:\Users\Administrator.B3ZSLG0HM0ZEZFA\Google Drive\quanlykho\Temp\KhoTP2019.xlsm"


'You can provide the full path of your external file as shown below
'DBPath ="C:\InputData.xlsx"

'sconnect = "Provider=MSDASQL.1;DSN=Excel Files;DBQ=" & DBPath & ";HDR=Yes';"

'If any issue with MSDASQL Provider, Try the Microsoft.Jet.OLEDB:
sconnect = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & DBPath _
    & ";Extended Properties=""Excel 8.0;HDR=Yes;IMEX=1"";"

Conn.Open sconnect
    
    sSQLSting = "SELECT * From [XNNL$]" ' Your SQL Statement (Table Name= Sheet Name=[Sheet1$])
    
   ' mrs.Open sSQLSting, Conn
        '=>Load the Data into an array
        'ReturnArray = mrs.GetRows
                ''OR''
        '=>Paste the data into a sheet
        wsTarget.Range("A2").CopyFromRecordset mrs
    'Close Recordset
    mrs.Close

'Close Connection
Conn.Close

End Sub

Attribute VB_Name = "Module3"
Sub RectangleRoundedCorners18_Click()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "c_MaKH, 4, 0, MSForms, ComboBox"

Private Sub c_MaKH_Change()
Dim wb As Workbook: Set wb = ThisWorkbook
Dim cusInfo As Variant


Dim wsTarget, wsFormulas, wsarlist As Worksheet


Set wsTarget = wb.Sheets("DebitNote")

Set wsarlist = wb.Sheets("IDS")

 
wsTarget.Range("DebitNote_MaKH").Value = c_MaKH.Value


On Error Resume Next ''if error, the code will go on anyway
cusInfo = Application.WorksheetFunction.VLookup(c_MaKH.Value, wsarlist.Range("N_arlist"), 5, 0)

If Err.Number <> 0 Then
''error appeared
    MsgBox "Customer not found" ''optional, no need to do anything
Else
wsTarget.Range("N_debit_Company").Value = "Company Name: " & Application.WorksheetFunction.VLookup(c_MaKH.Value, wsarlist.Range("N_arlist"), 5, 0)

End If

On Error GoTo 0 ''no error, coming back to default conditions

'wsTarget.Range("N_debit_Company").Value = "Company Name: " & Application.WorksheetFunction.VLookup(c_MaKH.Value, wsarlist.Range("N_arlist"), 5, 0)

End Sub
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "cmdgoto, 3, 1, MSForms, CommandButton"
Attribute VB_Control = "ComboBox1, 2, 2, MSForms, ComboBox"

Private Sub c_MaKH_Change()
Dim wb As Workbook: Set wb = ThisWorkbook

Dim wsTarget, wsFormulas, wsarlist As Worksheet


Set wsTarget = wb.Sheets("DebitNote")

Set wsarlist = wb.Sheets("IDS")

 
wsTarget.Range("DebitNote_MaKH").Value = c_MaKH.Value

wsTarget.Range("N_debit_Company").Value = "Company Name: " & Application.WorksheetFunction.VLookup(c_MaKH.Value, wsarlist.Range("N_arlist"), 5, 0)

End Sub

Private Sub cmdgoto_Click()

Dim wb As Workbook: Set wb = ThisWorkbook
Dim ma_kh As Variant

Dim wsTarget, wsFormulas, wsarlist As Worksheet


Set wsTarget = wb.Sheets("DebitNoteALL")

ma_kh = wsTarget.Range("DebitNoteALL_MaKH").Value

If (MsgBox("Ban muon chuyen den ?", vbOKCancel)) = 1 Then
Application.Goto Reference:=wsTarget.Range("" & ma_kh & ""), Scroll:=True
End If
End Sub


Private Sub ComboBox1_Change()


Dim wb As Workbook: Set wb = ThisWorkbook

Dim wsTarget, wsFormulas, wsarlist As Worksheet


Set wsTarget = wb.Sheets("DebitNoteALL")

Set wsarlist = wb.Sheets("IDS")

 
wsTarget.Range("DebitNoteALL_MaKH").Value = ComboBox1.Value

End Sub



Private Sub CommandButton1_Click()

End Sub
Attribute VB_Name = "Sheet16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sothanhchu"
Public Function DocSo(chuyenso) As String
s09 = Array("", " M" & ChrW(7897) & "t", " hai", " ba", " b" & ChrW(7889) & "n", " n" & ChrW(259) & "m", " s" & ChrW(225) & "u", " b" & ChrW(7843) & "y", " t" & ChrW(225) & "m", " ch" & ChrW(237) & "n")
lop3 = Array("", " tri" & ChrW(7879) & "u", " ngh" & ChrW(236) & "n", " t" & ChrW(7927))
'Stop
If Trim(chuyenso) = "" Then
  DocSoUni = ""
ElseIf IsNumeric(chuyenso) = True Then
  If chuyenso < 0 Then dau = ChrW(226) & "m " Else dau = ""
  chuyenso = Application.WorksheetFunction.Round(Abs(chuyenso), 0)
  chuyenso = " " & chuyenso
  chuyenso = Replace(chuyenso, ",", "", 1)
  vt = InStr(1, chuyenso, "E")
  If vt > 0 Then
    sonhan = Val(Mid(chuyenso, vt + 1))
    chuyenso = Trim(Mid(chuyenso, 2, vt - 2))
    chuyenso = chuyenso & String(sonhan - Len(chuyenso) + 1, "0")
  End If
  chuyenso = Trim(chuyenso)
  sochuso = Len(chuyenso) Mod 9
  If sochuso > 0 Then chuyenso = String(9 - (sochuso Mod 12), "0") & chuyenso
  DocSo = ""
  i = 1
  lop = 1
  Do
    n1 = Mid(chuyenso, i, 1)
    n2 = Mid(chuyenso, i + 1, 1)
    n3 = Mid(chuyenso, i + 2, 1)
    baso = Mid(chuyenso, i, 3)
    i = i + 3
    If n1 & n2 & n3 = "000" Then
      If DocSo <> "" And lop = 3 And Len(chuyenso) - i > 2 Then s123 = " t" & ChrW(7927) Else s123 = ""
    Else
      If n1 = 0 Then
        If DocSo = "" Then s1 = "" Else s1 = " kh" & ChrW(244) & "ng tr" & ChrW(259) & "m"
      Else
        s1 = s09(n1) & " tr" & ChrW(259) & "m"
      End If
      If n2 = 0 Then
        If s1 = "" Or n3 = 0 Then
          s2 = ""
        Else
          s2 = " linh"
        End If
      Else
        If n2 = 1 Then s2 = " M" & ChrW(432) & ChrW(7901) & "i" Else s2 = s09(n2) & " m" & ChrW(432) & ChrW(417) & "i"
      End If
      If n3 = 1 Then
        If n2 = 1 Or n2 = 0 Then s3 = " M" & ChrW(7897) & "t" Else s3 = " m" & ChrW(7889) & "t"
      ElseIf n3 = 5 And n2 <> 0 Then
        s3 = " l" & ChrW(259) & "m"
      Else
        s3 = s09(n3)
      End If
      If i > Len(chuyenso) Then
        s123 = s1 & s2 & s3
      Else
        s123 = s1 & s2 & s3 & lop3(lop)
      End If
    End If
    lop = lop + 1
    If lop > 3 Then lop = 1
    DocSo = DocSo & s123
    If i > Len(chuyenso) Then Exit Do
  Loop
  If DocSo = "" Then DocSo = "kh" & ChrW(244) & "ng" Else DocSo = dau & Trim(DocSo)
Else
  DocSo = chuyenso
End If
End Function
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
Sheets("MENU").Activate


End Sub

Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{8E23A344-8703-4BF7-9CA4-F6C497968393}{6717C9CF-F510-4580-B5B2-A7FF8E6E5AC2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub BSButton1_OnClick()
Unload Me

End Sub

Private Sub loadtabpanel()

Dim node1 As BSTreeNode, node2 As BSTreeNode
Dim i As Long

BSTreeview1.Font.Size = 12
For i = 4 To 100
If Worksheets("controls").Cells(i, 2) <> "" Then

Set note1 = BSTreeview1.Items.Add(, "Key" & i, Worksheets("controls").Cells(i, 2))
note1.Bold = True
End If

If Worksheets("controls").Cells(i, 3) <> "" Then
Set note2 = BSTreeview1.Items.Add(note1, i, Worksheets("controls").Cells(i, 3))
End If
Next i
BSTreeview1.FullExpand

End Sub

Private Sub BSTaskPaneX1_OnVisible(ByVal View As Boolean)
    If Not View Then
        BSTimer1.Enabled = True
    End If

End Sub

Private Sub BSTimer1_OnTimer()
If Not BSTaskPaneX1.View Then
BSTaskPaneX1.View = True
BSTimer1.Enabled = False
End If

End Sub

Private Sub BSTreeview1_OnNodeClick(ByVal Node As BSAC.BSTreeNode)
Dim shName As String
 
If IsNumeric(Node.Key) = True Then

shName = Sheets("controls").Cells(Node.Key, 4).Value
If shName <> "" Then
On Error Resume Next
Sheets(shName).Select

End If

End If
End Sub

Private Sub UserForm_Activate()
BSTaskPaneX1.Create Me
BSTaskPaneX1.AutoColor = False
End Sub

Private Sub UserForm_Click()

End Sub

Private Sub UserForm_INITIALIZE()
'loadtabpanel

End Sub
Attribute VB_Name = "chonngay"
Sub Data_CN_start()
    Sheets("Data_CN").Range("DataCN_start").Select
    CalendarFrm.Show
End Sub
Sub Data_CN_end()
   Sheets("Data_CN").Range("DataCN_End").Select
    CalendarFrm.Show
End Sub


Sub Summary_date_start()
    Sheets("Summary").Range("Summary_startdate").Select
    CalendarFrm.Show
End Sub
Sub Summary_date_end()
   Sheets("Summary").Range("Summary_enddate").Select
    CalendarFrm.Show
End Sub

Sub SQ_start()
    Sheets("soquy").Range("RSQ_start").Select
    CalendarFrm.Show
End Sub
Sub SQ_end()
    Sheets("soquy").Range("RSQ_end").Select
    CalendarFrm.Show
End Sub

Sub modNXT_start()
    Sheets("nxt").Range("nxt_start").Select
    CalendarFrm.Show
End Sub
Sub modNXT_end()
    Sheets("nxt").Range("nxt_end").Select
    CalendarFrm.Show
End Sub


Sub XNNL_startdate()
    Sheets("XNNL").Range("XNNL_start").Select
    CalendarFrm.Show
End Sub
Sub XNNL_enddate()
    Sheets("XNNL").Range("XNNL_END").Select
    CalendarFrm.Show
End Sub

Sub xntk_startdate()
    Sheets("BCNXTK").Range("xntk_start").Select
    CalendarFrm.Show
End Sub
Sub xntk_endate()
    Sheets("BCNXTK").Range("xntk_end").Select
    CalendarFrm.Show
End Sub
Attribute VB_Name = "m_AutoFilterGUide"
Option Explicit

'This module contains examples for applying filters to
'different types of data and criteria.

  'The AutoFilter method is a member of the Range object.
  'It can be used in regular ranges and Excel Tables.
  'The following examples use an Excel Table, but can be
  'applied to a regular range.
  
  'The method has 5 optional parameters.
  'See this help article for more details.
  'LINK: https://msdn.microsoft.com/en-us/VBA/excel-vba/articles/range-autofilter-method-excel
  
  'The [Field] parameter is used to specify the column number within the range/Table
  'that the filter is applied to.
  
  'The [Criteria1] and [Criteria2] parameters are used to specify the filter criteria.
  'The requirements for the Criteria parameters differ for each Operator (filter type).
  
  'The [Operator] parameter determines the filter type.
  'See this page for a list of the 11 different enumerations
  'LINK: https://msdn.microsoft.com/en-us/VBA/excel-vba/articles/xlautofilteroperator-enumeration-excel
      
      'Constant            Val  Description
      'xlAnd               1    Logical AND of Criteria1 and Criteria2.
      'xlBottom10Items     4    Lowest-valued items displayed (number of items specified in Criteria1).
      'xlBottom10Percent   6    Lowest-valued items displayed (percentage specified in Criteria1).
      'xlFilterCellColor   8    Color of the cell
      'xlFilterDynamic     11   Dynamic filter
      'xlFilterFontColor   9    Color of the font
      'xlFilterIcon        10   Filter icon
      'xlFilterValues      7    Filter values
      'xlOr                2    Logical OR of Criteria1 or Criteria2.
      'xlTop10Items        3    Highest-valued items displayed (number of items specified in Criteria1).
      'xlTop10Percent      5    Highest-valued items displayed (percentage specified in Criteria1).

  'The [VisibleDropDown] parameter is used to display (True) or hide (False) the filter drop-down
  'icon for the column.  It is True by default.


Sub AutoFilter_Range()
'AutoFilter is a member of the Range object
  
  'Reference the entire range that the filters are applied to
  'AutoFilter turns filters on/off when no parameters are specified.
  Sheet1.Range("B3:G1000").AutoFilter
  
  'Fully qualified reference starting at Workbook level
  ThisWorkbook.Worksheets("AutoFilter Guide").Range("B3:G1000").AutoFilter

End Sub

Sub AutoFilter_Table()
'AutoFilters on Tables work the same way.

Dim lo As ListObject 'Excel Table

  'Set the ListObject (Table) variable
  Set lo = Sheet1.ListObjects(1)
  
  'AutoFilter is member of Range object
  'The parent of the Range object is the List Object
  lo.Range.AutoFilter
  
End Sub


Sub Clear_All_Filters_Range()

  'To Clear All Fitlers use the ShowAllData method for
  'for the sheet.  Add error handling to bypass error if
  'no filters are applied.  Does not work for Tables.
  On Error Resume Next
    Sheet1.ShowAllData
  On Error GoTo 0
  
End Sub

Sub Clear_Column_Filter_Range()
  
  'To clear the filter from a Single Column, specify the
  'Field number only and no other parameters
  Sheet1.Range("B3:G1000").AutoFilter Field:=4

End Sub

Sub Clear_All_Filters_Table()

Dim lo As ListObject
  
  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Clear All Filters for entire Table
  lo.AutoFilter.ShowAllData

End Sub

Sub Clear_All_Table_Filters_On_Sheet()

Dim lo As ListObject
  
  'Loop through all Tables on the sheet
  For Each lo In Sheet1.ListObjects
  
    'Clear All Filters for entire Table
    lo.AutoFilter.ShowAllData
    
  Next lo

End Sub

Sub Clear_Column_Filter_Table()

Dim lo As ListObject
  
  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Clear filter on Single Table Column
  'by specifying the Field parameter only
  lo.Range.AutoFilter Field:=4
  
End Sub

Sub Dynamic_Field_Number()
'Techniques to find and set the Field based on the column name.
  
Dim lo As ListObject
Dim iCol As Long
  
  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Set filter field column number
  iCol = lo.ListColumns("Product").Index
  
  'Use Match function for regular ranges
  'iCol = WorksheetFunction.Match("Product", Sheet1.Range("B3:F3"), 0)

  'Use the variable for the Field parameter
  lo.Range.AutoFilter Field:=iCol, Criteria1:="Product 3"

End Sub


Sub Blank_NonBlank_Cells_Filter()

Dim lo As ListObject
Dim iCol As Long

  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)

  'Set filter field
  iCol = lo.ListColumns("Product").Index
  
  'Blank cells - set equal to nothing
  lo.Range.AutoFilter Field:=iCol, Criteria1:="="
  
  'Non-blank cells - use NOT operator <>
  lo.Range.AutoFilter Field:=iCol, Criteria1:="<>"

End Sub


Sub AutoFilter_Text_Examples()
'Examples for filtering columns with TEXT

Dim lo As ListObject
Dim iCol As Long

  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)

  'Set filter field
  iCol = lo.ListColumns("Product").Index
  
  'Clear Filters
  lo.AutoFilter.ShowAllData
  
  'All lines starting with .AutoFilter are a continuation
  'of the with statement.
  With lo.Range
  
    'Single Item
    .AutoFilter Field:=iCol, Criteria1:="Product 2"
    
    '2 Criteria using Operator:=xlOr
    .AutoFilter Field:=iCol, _
                Criteria1:="Product 3", _
                Operator:=xlOr, _
                Criteria2:="Product 4"
    
    'More than 2 Criteria (list of items in an Array function)
    .AutoFilter Field:=iCol, _
                Criteria1:=Array("Product 4", "Product 5", "Product 7"), _
                Operator:=xlFilterValues
                        
    'Begins With - use asterisk as wildcard character at end of string
    .AutoFilter Field:=iCol, Criteria1:="Product*"
    
    'Ends With - use asterisk as wildcard character at beginning
    'of string
    .AutoFilter Field:=iCol, Criteria1:="*2"
    
    'Contains - wrap search text in asterisks
    .AutoFilter Field:=iCol, Criteria1:="*uct*"
    
    'Does not contain text
    'Start with Not operator <> and wrap search text in asterisks
    .AutoFilter Field:=iCol, Criteria1:="<>*8*"
    
    'Contains a wildcard character * or ?
    'Use a tilde ~ before the character to search for values with
    'wildcards
    .AutoFilter Field:=iCol, Criteria1:="Product 1~*"
  
  End With

End Sub


Sub AutoFilter_Number_Examples()
'Examples for filtering columns with NUMBERS
 
Dim lo As ListObject
Dim iCol As Long

  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Set filter field
   iCol = lo.ListColumns("Revenue").Index
   
  'Clear Filters
  lo.AutoFilter.ShowAllData

  With lo.Range
  
    'Single number - Use formatting that is visible in
    'filter drop-down menu
    .AutoFilter Field:=iCol, Criteria1:="$2,955.25"
    
    'Not equal to - Does not require number formatting to match
    .AutoFilter Field:=iCol, Criteria1:="<>2955.25"
    
    'Greater than or less than a number
    '(comparison operator < > = before number in Criteria1)
    .AutoFilter Field:=iCol, Criteria1:="<4000"
    
    'Between 2 numbers
    '(greater than or equal to 100 and less than 4000)
    .AutoFilter Field:=iCol, _
                Criteria1:=">=100", _
                Operator:=xlAnd, _
                Criteria2:="<4000"
    
    'Outside range (less than 100 OR greater than 4000)
    .AutoFilter Field:=iCol, _
                Criteria1:="<100", _
                Operator:=xlOr, _
                Criteria2:=">4000"
  
    'Top 10 items (Criteria1 is number of items)
    .AutoFilter Field:=iCol, _
                Criteria1:="10", _
                Operator:=xlTop10Items
    
    'Bottom 5 items (Criteria1 is number of items)
    .AutoFilter Field:=iCol, _
                Criteria1:="5", _
                Operator:=xlBottom10Items
    
    'Top 10 Percent (Criteria1 is number of items)
    .AutoFilter Field:=iCol, _
                Criteria1:="10", _
                Operator:=xlTop10Percent
    
    'Bottom 7 Percent
    .AutoFilter Field:=iCol, _
                Criteria1:="7", _
                Operator:=xlBottom10Percent
    
    'Above Average - Operator:=xlFilterDynamic
    .AutoFilter Field:=iCol, _
                Criteria1:=xlFilterAboveAverage, _
                Operator:=xlFilterDynamic
    
    'Below Average
    .AutoFilter Field:=iCol, _
                Criteria1:=xlFilterBelowAverage, _
                Operator:=xlFilterDynamic
    
  End With
  
End Sub


Sub AutoFilter_Date_Examples()
'Examples for filtering columns with DATES
 
Dim lo As ListObject
Dim iCol As Long

  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Set filter field
  iCol = lo.ListColumns("Date").Index
   
  'Clear Filters
  lo.AutoFilter.ShowAllData

  With lo.Range
      
    'Single Date - Use same date format that is applied to column
    .AutoFilter Field:=iCol, Criteria1:="=1/2/2014"
    
    'Before Date
    .AutoFilter Field:=iCol, Criteria1:="<1/31/2014"
    
    'After or equal to Date
    .AutoFilter Field:=iCol, Criteria1:=">=1/31/2014"
    
    'Date Range (between dates)
    .AutoFilter Field:=iCol, _
                        Criteria1:=">=1/1/2014", _
                        Operator:=xlAnd, _
                        Criteria2:="<=12/31/2015"
                      
End Sub
    
    
Sub AutoFilter_Multiple_Dates_Examples()
'Examples for filtering columns for multiple DATE TIME PERIODS
 
Dim lo As ListObject
Dim iCol As Long

  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Set filter field
  iCol = lo.ListColumns("Date").Index
   
  'Clear Filters
  lo.AutoFilter.ShowAllData

  With lo.Range

    'When filtering for multiple periods that are selected from
    'filter drop-down menu,use Operator:=xlFilterValues and
    'Criteria2 with a patterned Array.  The first number is the
    'time period.  Second number is the last date in the period.
    
    'First dimension of array is the time period group
      '0-Years
      '1-Months
      '2-Days
      '3-Hours
      '4-Minutes
      '5-Seconds
    
    
    'Multiple Years (2014 and 2016) use last day of the time
    'period for each array item
    .AutoFilter Field:=iCol, _
                Operator:=xlFilterValues, _
                Criteria2:=Array(0, "12/31/2014", 0, "12/31/2016")
    
    'Multiple Months (Jan, Apr, Jul, Oct in 2015)
    .AutoFilter Field:=iCol, _
                Operator:=xlFilterValues, _
                Criteria2:=Array(1, "1/31/2015", 1, "4/30/2015", 1, "7/31/2015", 1, "10/31/2015")
    
    'Multiple Days
    'Last day of each month: Jan, Apr, Jul, Oct in 2015)
    .AutoFilter Field:=iCol, _
                Operator:=xlFilterValues, _
                Criteria2:=Array(2, "1/31/2015", 2, "4/30/2015", 2, "7/31/2015", 2, "10/31/2015")
    
    'Set filter field
     iCol = lo.ListColumns("Date Time").Index
     
    'Clear Filters
    lo.AutoFilter.ShowAllData
    
    'Multiple Hours (All dates in the 11am hour on 1/10/2018
    'and 11pm hour on 1/20/2018)
    .AutoFilter Field:=iCol, _
                Operator:=xlFilterValues, _
                Criteria2:=Array(3, "1/10/2018 13:59:59", 3, "1/20/2018 23:59:59")
  
  End With
  
End Sub


Sub AutoFilter_Dates_in_Period_Examples()
'Examples for filtering columns for DATES IN PERIOD
'Date filters presets found in the Date Filters sub menu
 
Dim lo As ListObject
Dim iCol As Long

  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Set filter field
  iCol = lo.ListColumns("Date").Index
   
  'Clear Filters
  lo.AutoFilter.ShowAllData
  
  'Operator:=xlFilterDynamic
  'Criteria1:= one of the following enumerations
  
  ' Value Constant
  ' 1     xlFilterToday
  ' 2     xlFilterYesterday
  ' 3     xlFilterTomorrow
  ' 4     xlFilterThisWeek
  ' 5     xlFilterLastWeek
  ' 6     xlFilterNextWeek
  ' 7     xlFilterThisMonth
  ' 8     xlFilterLastMonth
  ' 9     xlFilterNextMonth
  ' 10    xlFilterThisQuarter
  ' 11    xlFilterLastQuarter
  ' 12    xlFilterNextQuarter
  ' 13    xlFilterThisYear
  ' 14    xlFilterLastYear
  ' 15    xlFilterNextYear
  ' 16    xlFilterYearToDate
  ' 17    xlFilterAllDatesInPeriodQuarter1
  ' 18    xlFilterAllDatesInPeriodQuarter2
  ' 19    xlFilterAllDatesInPeriodQuarter3
  ' 20    xlFilterAllDatesInPeriodQuarter4
  ' 21    xlFilterAllDatesInPeriodJanuary
  ' 22    xlFilterAllDatesInPeriodFebruray <-February is misspelled in Constant
  ' 23    xlFilterAllDatesInPeriodMarch
  ' 24    xlFilterAllDatesInPeriodApril
  ' 25    xlFilterAllDatesInPeriodMay
  ' 26    xlFilterAllDatesInPeriodJune
  ' 27    xlFilterAllDatesInPeriodJuly
  ' 28    xlFilterAllDatesInPeriodAugust
  ' 29    xlFilterAllDatesInPeriodSeptember
  ' 30    xlFilterAllDatesInPeriodOctober
  ' 31    xlFilterAllDatesInPeriodNovember
  ' 32    xlFilterAllDatesInPeriodDecember
      
  With lo.Range
    
    'All dates in January (across all years)
    .AutoFilter Field:=iCol, _
                Operator:=xlFilterDynamic, _
                Criteria1:=xlFilterAllDatesInPeriodJanuary

    'All dates in Q2 (across all years)
    .AutoFilter Field:=iCol, _
                Operator:=xlFilterDynamic, _
                Criteria1:=xlFilterAllDatesInPeriodQuarter2
  
  End With

End Sub


Sub AutoFilter_Color_Icon_Examples()
'Examples for filtering columns with COLORS and ICONS
 
Dim lo As ListObject
Dim iCol As Long

  'Set reference to the first Table on the sheet
  Set lo = Sheet1.ListObjects(1)
  
  'Set filter field
  iCol = lo.ListColumns("Product").Index
  
  'Clear Filters
  lo.AutoFilter.ShowAllData
  
  With lo.Range
  
    'Colors

    'Font and fill colors are set in Criteria 1.
    'The macro recorder gives us the RGB value.  RGB can also
    'be found in the More Colors menu on the Custom tab.
  
    'Filter for dark red cell fill color
    .AutoFilter Field:=iCol, _
                Criteria1:=RGB(192, 0, 0), _
                Operator:=xlFilterCellColor
      
    'Font Color for dark green
    .AutoFilter Field:=iCol, _
                Criteria1:=RGB(0, 97, 0), _
                Operator:=xlFilterFontColor
    
    
    'Icons
  
    'Set filter field
    iCol = lo.ListColumns("Icon").Index
          
    'Clear Filters
    lo.AutoFilter.ShowAllData
  
    'Filter for Icon (conditional formatting)
    .AutoFilter Field:=iCol, _
                Criteria1:=ThisWorkbook.IconSets(xl4CRV).Item(4), _
                Operator:=xlFilterIcon
        
    End With
    
End Sub



Attribute VB_Name = "m_FilterButtons"
Option Explicit

Sub Filter_Top_5()

Dim lo As ListObject
Dim iCol As Long

  Set lo = ActiveSheet.ListObjects(1)
  
  'Set filter field
  iCol = lo.ListColumns("Revenue").Index
  
  'Apply filters to a column (field)
  lo.Range.AutoFilter Field:=iCol, Criteria1:="5", Operator:=xlTop10Items
  
End Sub

Sub Filter_Bottom_5()

Dim lo As ListObject
Dim iCol As Long

  Set lo = ActiveSheet.ListObjects(1)
  
  'Clear filters
  'lo.AutoFilter.ShowAllData
  
  'Set filter field
  iCol = lo.ListColumns("Revenue").Index
  
  'Apply filters to a column (field)
  lo.Range.AutoFilter Field:=iCol, Criteria1:="5", Operator:=xlBottom10Items

End Sub

Sub Filter_Above_Average()

Dim lo As ListObject
Dim iCol As Long

  Set lo = ActiveSheet.ListObjects(1)
  
  'Set filter field
  iCol = lo.ListColumns("Revenue").Index
  
  'Apply filters to a column (field)
  lo.Range.AutoFilter Field:=5, Criteria1:=xlFilterAboveAverage, Operator:=xlFilterDynamic

End Sub

Sub Filter_Below_Average()

Dim lo As ListObject
Dim iCol As Long

  Set lo = ActiveSheet.ListObjects(1)

  'Set filter field
  iCol = lo.ListColumns("Revenue").Index
  
  'Apply filters to a column (field)
  lo.Range.AutoFilter Field:=5, Criteria1:=xlFilterBelowAverage, Operator:=xlFilterDynamic

End Sub

Sub Filter_Greater_Than_100()

Dim lo As ListObject
Dim iCol As Long

  Set lo = ActiveSheet.ListObjects(1)
   
  'Set filter field
  iCol = lo.ListColumns("Revenue").Index
  
  'Apply filters to a column (field)
  lo.Range.AutoFilter Field:=5, Criteria1:=">100", Operator:=xlFilterValues

End Sub

Sub Clear_All_Table_Filters()

Dim lo As ListObject

  Set lo = ActiveSheet.ListObjects("tbl_XNNL")

  'Clear all Table filters
  lo.AutoFilter.ShowAllData
    On Error Resume Next
  
End Sub

Sub Clear_Field_Filter_Revenue()

Dim lo As ListObject
Dim iCol As Long

  Set lo = ActiveSheet.ListObjects(1)

  'Set filter field
  iCol = lo.ListColumns("Revenue").Index
  
  'Clear filter from field (column)
  lo.Range.AutoFilter Field:=iCol

End Sub




INQUEST-PP=macro
