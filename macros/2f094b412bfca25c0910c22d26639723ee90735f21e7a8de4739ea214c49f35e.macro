Attribute VB_Name = "Module1"

Sub Sort_Click()
Attribute Sort_Click.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Sort_Click Macro
'

'
    ActiveWorkbook.Worksheets("6. Report").AutoFilter.Sort.SortFields.Clear
    ActiveWorkbook.Worksheets("6. Report").AutoFilter.Sort.SortFields.Add Key:= _
        Range("G7:G20"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption _
        :=xlSortNormal
    With ActiveWorkbook.Worksheets("6. Report").AutoFilter.Sort
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
End Sub
Attribute VB_Name = "Module4"
Option Explicit

Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hwnd As Long, _
ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, _
ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long

Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)




Sub Button1_Click()
Attribute Button1_Click.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim To_, CC_, BCC_, Subj As String
    Dim Msg As String, URL As String
    Dim objDoc As Object, objSel As Object, objOutlook As Object
    Dim i As Integer
    
    To_ = Range("'Email Generation (Hide)'!C3").Value
    CC_ = Range("'Email Generation (Hide)'!C4").Value
    BCC_ = Range("'Email Generation (Hide)'!C5").Value
    Subj = Range("'Email Generation (Hide)'!C6").Value
    Msg = Range("'Email Generation (Hide)'!C20").Value
    
    

    
    
    
    
    'Replace spaces with %20 (hex)
    'Subj = Application.WorksheetFunction.Substitute(Subj, " ", "%20")
    'Msg = Application.WorksheetFunction.Substitute(Msg, " ", "%20")
    
    'Replace carriage returns/line feeds with %0D%0A (hex)
    'Msg = Application.WorksheetFunction.Substitute(Msg, vbCr, "%0D%0A")
    'Msg = Application.WorksheetFunction.Substitute(Msg, vbCrLf, "%0D%0A")
    'Msg = Application.WorksheetFunction.Substitute(Msg, vbLf, "%0D%0A")
    
    URL = "mailto:" & To_ & "?subject=" & Subj & "&CC=" & CC_ & "&BCC=" & BCC_
    

    
    'Execute the URL (start the email client)
    ShellExecute 0&, vbNullString, URL, vbNullString, vbNullString, vbNormalFocus
    
    
    Sleep 400
    If objOutlook Is Nothing Then
        Set objOutlook = CreateObject("Outlook.Application")
    Else
        Set objOutlook = GetObject(, "Outlook.Application")
    End If
    '~~> Get a Word.Selection from the open Outlook item
    Set objDoc = objOutlook.ActiveInspector.WordEditor
    Set objSel = objDoc.Windows(1).Selection

    objDoc.Activate

    Sleep 300

        objSel.TypeText Msg
        
    Set objDoc = Nothing
    Set objSel = Nothing

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Label1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    Dim dblTop As Double
    Dim dblLeft As Double
 
    With Me.Label1
        dblTop = .Top + .Height
        dblLeft = .Left + .Width
    End With
 
    With Me.Shapes.AddCallout(msoCalloutOne, dblLeft, dblTop, 100, 30)
        .Visible = msoTrue
        With .TextFrame
            .Characters.Text = "Yo ho ho and a bottle of rum!"
            .HorizontalAlignment = xlHAlignCenter
            .VerticalAlignment = xlVAlignCenter
        End With
        Application.Wait Now + TimeSerial(0, 0, 1)
        .Delete
    End With
End Sub

Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet18"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 69, 0, MSForms, CommandButton"
Attribute VB_Control = "ComboBox2Y, 38, 1, MSForms, ComboBox"
Attribute VB_Control = "ComboBox2X, 37, 2, MSForms, ComboBox"
Attribute VB_Control = "CheckBox1, 13, 3, MSForms, CheckBox"
Attribute VB_Control = "Label1, 15, 4, MSForms, Label"
Attribute VB_Control = "Label2, 16, 5, MSForms, Label"
Attribute VB_Control = "Label3, 17, 6, MSForms, Label"
Attribute VB_Control = "Label4, 18, 7, MSForms, Label"
Attribute VB_Control = "Label5, 19, 8, MSForms, Label"
Attribute VB_Control = "Label6, 20, 9, MSForms, Label"
Attribute VB_Control = "Label7, 21, 10, MSForms, Label"
Attribute VB_Control = "Label8, 22, 11, MSForms, Label"
Attribute VB_Control = "Label9, 23, 12, MSForms, Label"
Attribute VB_Control = "Label10, 24, 13, MSForms, Label"
Attribute VB_Control = "Label11, 25, 14, MSForms, Label"
Attribute VB_Control = "Label12, 26, 15, MSForms, Label"
Attribute VB_Control = "Label13, 27, 16, MSForms, Label"
Attribute VB_Control = "ComboBox1X, 28, 17, MSForms, ComboBox"
Attribute VB_Control = "ComboBox1Y, 29, 18, MSForms, ComboBox"
Attribute VB_Control = "ComboBox4X, 32, 19, MSForms, ComboBox"
Attribute VB_Control = "ComboBox4Y, 33, 20, MSForms, ComboBox"
Attribute VB_Control = "ComboBox13X, 34, 21, MSForms, ComboBox"
Attribute VB_Control = "ComboBox13Y, 35, 22, MSForms, ComboBox"
Attribute VB_Control = "ComboBox3X, 39, 23, MSForms, ComboBox"
Attribute VB_Control = "ComboBox3Y, 41, 24, MSForms, ComboBox"
Attribute VB_Control = "ComboBox5X, 42, 25, MSForms, ComboBox"
Attribute VB_Control = "ComboBox5Y, 44, 26, MSForms, ComboBox"
Attribute VB_Control = "ComboBox6X, 45, 27, MSForms, ComboBox"
Attribute VB_Control = "ComboBox6Y, 46, 28, MSForms, ComboBox"
Attribute VB_Control = "ComboBox7X, 47, 29, MSForms, ComboBox"
Attribute VB_Control = "ComboBox7Y, 48, 30, MSForms, ComboBox"
Attribute VB_Control = "ComboBox8X, 49, 31, MSForms, ComboBox"
Attribute VB_Control = "ComboBox8Y, 50, 32, MSForms, ComboBox"
Attribute VB_Control = "ComboBox9X, 51, 33, MSForms, ComboBox"
Attribute VB_Control = "ComboBox9Y, 52, 34, MSForms, ComboBox"
Attribute VB_Control = "ComboBox10X, 53, 35, MSForms, ComboBox"
Attribute VB_Control = "ComboBox10Y, 54, 36, MSForms, ComboBox"
Attribute VB_Control = "ComboBox11X, 55, 37, MSForms, ComboBox"
Attribute VB_Control = "ComboBox11Y, 56, 38, MSForms, ComboBox"
Attribute VB_Control = "ComboBox12X, 57, 39, MSForms, ComboBox"
Attribute VB_Control = "ComboBox12Y, 58, 40, MSForms, ComboBox"
Attribute VB_Control = "CommandButton1, 60, 41, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 73, 42, MSForms, CommandButton"
    
Private Sub CheckBox1_Click()
    If CheckBox1.Value = True Then
        ActiveSheet.Shapes("Grid").Visible = True
        Else
        ActiveSheet.Shapes("Grid").Visible = False
    End If
End Sub

Private Sub ComboBox1X_Change()
    
    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 1
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label1.Left = Position_X
        
End Sub
Private Sub ComboBox1Y_Change()
        
    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 1


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label1.Top = Position_Y
    
End Sub

Private Sub ComboBox2X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 2
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label2.Left = Position_X

End Sub

Private Sub ComboBox2Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 2


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label2.Top = Position_Y

End Sub

Private Sub ComboBox3X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 3
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label3.Left = Position_X



End Sub

Private Sub ComboBox3Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 3


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label3.Top = Position_Y

End Sub

Private Sub ComboBox4X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 4
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label4.Left = Position_X


     
End Sub
Private Sub ComboBox4Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 4


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label4.Top = Position_Y

End Sub

Private Sub ComboBox5X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 5
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label5.Left = Position_X



End Sub

Private Sub ComboBox5Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 5


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label5.Top = Position_Y

End Sub
Private Sub ComboBox6X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 6
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label6.Left = Position_X



End Sub
Private Sub ComboBox6Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 6


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label6.Top = Position_Y

End Sub
Private Sub ComboBox7X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 7
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label7.Left = Position_X



End Sub
Private Sub ComboBox7Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 7


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label7.Top = Position_Y

End Sub
Private Sub ComboBox8X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 8
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label8.Left = Position_X



End Sub
Private Sub ComboBox8Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 8


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label8.Top = Position_Y

End Sub
Private Sub ComboBox9X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 9
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label9.Left = Position_X



End Sub
Private Sub ComboBox9Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 9


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label9.Top = Position_Y

End Sub
Private Sub ComboBox10X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 10
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label10.Left = Position_X



End Sub
Private Sub ComboBox10Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 10


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label10.Top = Position_Y

End Sub
Private Sub ComboBox11X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 11
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label11.Left = Position_X



End Sub
Private Sub ComboBox11Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 11


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label11.Top = Position_Y

End Sub
Private Sub ComboBox12X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 12
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label12.Left = Position_X



End Sub
Private Sub ComboBox12Y_Change()

    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 12


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label12.Top = Position_Y

End Sub

Private Sub ComboBox13X_Change()

    Dim X As Integer
       
    Dim Initial_X As Integer
    Dim Segment_X As Integer
    Dim Increment_X As Integer
    
    Dim Offset_X As Integer
    Dim Position_X As Integer
    
    X = 13
    
    
    Initial_X = Range("U5").Value
    Segment_X = Range("V5").Value
    Increment_X = Range("W5").Value

    
    
    Select Case X
        Case 1, 5, 9, 13
            Offset_X = 0
        Case 2, 6, 10
            Offset_X = Increment_X
        Case 3, 7, 11
            Offset_X = 2 * Increment_X
        Case 4, 8, 12
            Offset_X = 3 * Increment_X
    End Select
    
    Position_X = Initial_X + ((Range("Y8").Offset(X - 1, 0).Value - 1) * Segment_X) + Offset_X
    
    Range("U8").Offset(X - 1, 0) = Position_X
    
    Me.Label13.Left = Position_X
    
End Sub

Private Sub ComboBox13Y_Change()
        
    Dim Y As Integer
    
    Dim Initial_Y As Integer
    Dim Segment_Y As Integer
    Dim Increment_Y As Integer
    
    Dim Offset_Y As Integer
    Dim Position_Y As Integer
    
    
    Y = 13


    Initial_Y = Range("U6").Value
    Segment_Y = Range("V6").Value
    Increment_Y = Range("W6").Value
    
    Select Case Y
        Case 1, 2, 3, 4
            Offset_Y = 3 * Increment_Y
        Case 5, 6, 7, 8
            Offset_Y = 2 * Increment_Y
        Case 9, 10, 11, 12
            Offset_Y = Increment_Y
        Case 13
            Offset_Y = 0
    End Select
    
    
    Position_Y = Initial_Y - ((Range("Z8").Offset(Y - 1, 0).Value - 1) * Segment_Y) - Offset_Y
    
    Range("V8").Offset(Y - 1, 0) = Position_Y
    
    Me.Label13.Top = Position_Y

End Sub





Private Sub CommandButton1_Click()
    Dim i As Integer
    
    For i = 0 To 12
        Range("Y8").Offset(i, 0).Value = 1
        Range("Z8").Offset(i, 0).Value = 1
    Next i

End Sub



Private Sub CommandButton2_Click()

    Dim i As Integer
    
    For i = 0 To 12
        Range("Y8").Offset(i, 0).Value = 10
        Range("Z8").Offset(i, 0).Value = 10
    Next i

End Sub

Private Sub CommandButton3_Click()

    Dim i As Integer
    
    For i = 0 To 12
        Range("Y8").Offset(i, 0).Value = Range("Y8").Offset(i, 0).Value
        Range("Z8").Offset(i, 0).Value = Range("Z8").Offset(i, 0).Value
    Next i


End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
' Developed by Contextures Inc.
' www.contextures.com
Dim rngDV As Range
Dim oldVal As String
Dim newVal As String
If Target.Count > 1 Then GoTo exitHandler

On Error Resume Next
Set rngDV = Cells.SpecialCells(xlCellTypeAllValidation)
On Error GoTo exitHandler

If rngDV Is Nothing Then GoTo exitHandler

If Intersect(Target, rngDV) Is Nothing Then
   'do nothing
Else
  Application.EnableEvents = False
  newVal = Target.Value
  Application.Undo
  oldVal = Target.Value
  Target.Value = newVal
  If Target.Column = 31 Then
    If oldVal = "" Then
      'do nothing
      Else
      If newVal = "" Then
      'do nothing
      Else
'      Target.Value = oldVal _
'        & ", " & newVal
                On Error Resume Next
                Ar = Split(oldVal, ", ")
                strVal = ""
                For i = LBound(Ar) To UBound(Ar)
                    Debug.Print strVal
                    Debug.Print CStr(Ar(i))
                    If newVal = CStr(Ar(i)) Then
                        'do not include this item
                        strVal = strVal
                        lCount = 1
                    Else
                        strVal = strVal & CStr(Ar(i)) & ", "
                    End If
                Next i
                If lCount > 0 Then
                    Target.Value = Left(strVal, Len(strVal) - 2)
                    If i = 1 Then
                    Target.Value = ""
                    End If
                    
                Else
                    Target.Value = strVal & newVal
                End If


      End If
    End If
  End If
End If

exitHandler:
  Application.EnableEvents = True
End Sub










Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True




INQUEST-PP=macro
