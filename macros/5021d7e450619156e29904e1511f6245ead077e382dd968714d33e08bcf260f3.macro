Attribute VB_Name = "Clear_and_delete"
Sub ClearTable()
If MsgBox("Are you sure?", vbCritical + vbYesNo + vbQuestion, "Clear table") = vbNo Then Exit Sub Else
    Dim ws As Worksheet
    Dim counter As Integer
    Dim lastCol As Integer
    Dim lRow As Long
    Dim aCell As Range, rng1 As Range
    
    
    With ActiveSheet
        lastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column
    End With
    
    For c = 1 To lastCol - 9
On Error Resume Next
    
    '~~> Set this to the relevant worksheet
    Set ws = ThisWorkbook.Sheets("Vendor Template")

    With ws
        '~~> Find the cell which has the name
        Set aCell = .Cells(1, c).Find("*MDROCKS*")

        '~~> If the cell is found
        If Not aCell Is Nothing Then
            '~~> Get the last row in that column and check if the last row is > 1
            lRow = .Range(Split(.Cells(, aCell.Column).Address, "$")(1) & .Rows.Count).End(xlUp).Row
            If lRow > 599 Then
                '~~> Set your Range
                Set rng1 = .Range(aCell.Offset(599), .Cells(lRow, aCell.Column))

                '~~> This will give you the address
                rng1.ClearContents
            End If
        End If
    End With
Next c
End Sub

Sub DeleteRow()

If MsgBox("Are you sure?", vbCritical + vbYesNo + vbQuestion, "Delete selected rows") = vbNo Then Exit Sub Else

    ActiveSheet.Unprotect "vt"
    
    Selection.EntireRow.Delete
    
    ActiveSheet.Protect "vt", DrawingObjects:=False, Contents:=True, Scenarios:= _
        False, AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowInsertingColumns:=True, _
        AllowDeletingColumns:=True, AllowDeletingRows:=True, AllowSorting:=True, _
        AllowFiltering:=True
End Sub



Attribute VB_Name = "Form_sub"
Sub btn_CopyOptions_Click()
frmCopyForm.Show
End Sub
Attribute VB_Name = "Module1"
Sub Antiflicker(bParam As Boolean)

    Application.ScreenUpdating = bParam
    Application.DisplayAlerts = bParam
    Application.DisplayStatusBar = bParam
    Application.EnableEvents = bParam

End Sub

Sub CopyToMDT(iCountry As Integer)
Antiflicker False

    Dim my_FileName As Variant
    Dim ws As Worksheet
    Dim counter As Integer
    Dim lastCol As Integer
    Dim lRow As Long
    Dim aCell As Range, rng1 As Range, uCell As Range, emptyname As Range
    Dim aFlows As Variant
    Dim sFlow As Integer

'---------------

Range("PUORG_COUNTRY").FormulaR1C1 = iCountry
Range("KO18") = 1

Application.Calculation = xlCalculationManual

If MsgBox("Choose MDT upload file.", vbCritical + vbOKCancel + vbExclamation) = vbCancel Then Exit Sub Else

wbname = ActiveWorkbook.Name

my_FileName = Application.GetOpenFilename

If my_FileName <> False Then

Workbooks.Open Filename:=my_FileName

Else
Application.Calculation = xlCalculationAutomatic
Exit Sub

End If

'---------------

wbname2 = ActiveWorkbook.Name
ActiveWorkbook.Unprotect "rimi"

Workbooks(wbname).Activate
Sheets("Vendor Template").Select
Sheets("Vendor Template").Copy Before:=Workbooks(wbname2).Sheets(1)

'---------------

Sheets("Vendor Template").Select
    With ActiveSheet
        lastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column
    End With
Range(Cells(1, 1), Cells(1, 450)).EntireColumn.Hidden = False

'---------------

'm|fffd|rvien|fffd|bas
Range("Translate_units").Select
Selection.Replace What:="Gabals", Replacement:="Piece", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Vienetas", Replacement:="Piece", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="T|fffd|kk", Replacement:="Piece", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Kilograms", Replacement:="Kilogram", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kilogramas", Replacement:="Kilogram", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kilogramm", Replacement:="Kilogram", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Litrs", Replacement:="Liter", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Litras", Replacement:="Liter", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Liiter", Replacement:="Liter", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Metrs", Replacement:="Meter", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Metras", Replacement:="Meter", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Meeter", Replacement:="Meter", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="P|fffd|ru skaits", Replacement:="Number of Pairs", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Por|fffd| skai|fffd|ius", Replacement:="Number of Pairs", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Paaride arv", Replacement:="Number of Pairs", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="D-paka", Replacement:="D-Pack", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Pakuot|fffd|", Replacement:="D-Pack", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Transpordipakend", Replacement:="D-Pack", SearchOrder:=xlByRows, MatchCase:=False

'j|fffd|/n|fffd|
Range("Translate_YN").Select

Selection.Replace What:="J|fffd|", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Taip", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Jah", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="N|fffd|", Replacement:="No", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Ne", Replacement:="No", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Ei", Replacement:="No", SearchOrder:=xlByRows, MatchCase:=False

'alco
Range("Translate_alco").Select


Selection.Replace What:="Stiprin|fffd|ts pussauss", Replacement:="Fortified semi dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Pastiprintas pusiau sausas", Replacement:="Fortified semi dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kangenatud poolkuiv", Replacement:="Fortified semi dry", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Stiprin|fffd|ts pussalds", Replacement:="Fortified semi sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Pastiprintas pusiau saldus", Replacement:="Fortified semi sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kangendatud poolmagus", Replacement:="Fortified semi sweet", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Stiprin|fffd|ts salds", Replacement:="Fortified sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Pastiprintas saldus", Replacement:="Fortified sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kangendatud magus", Replacement:="Fortified sweet", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Stiprin|fffd|ts sauss", Replacement:="Fortified dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Pastiprintas sausas", Replacement:="Fortified dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kangendatud kuiv", Replacement:="Fortified dry", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Pussauss", Replacement:="Semi dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Pusiau sausas", Replacement:="Semi dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Poolkuiv", Replacement:="Semi dry", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Pussalds", Replacement:="Semi sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Pusiau saldus", Replacement:="Semi sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Poolmagus", Replacement:="Semi sweet", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Deserta", Replacement:="Dessert", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Desertinis", Replacement:="Dessert", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Dessert", Replacement:="Dessert", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Salds", Replacement:="Sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Saldus", Replacement:="Sweet", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Magus", Replacement:="Sweet", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Sauss", Replacement:="Dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Sausas", Replacement:="Dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kuiv", Replacement:="Dry", SearchOrder:=xlByRows, MatchCase:=False


Selection.Replace What:="Brut (Sparkling only)", Replacement:="Brut", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Brut (Tikai dzirksto|fffd|ais)", Replacement:="Brut", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Brut (Tik putojantis)", Replacement:="Brut", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Brut (ainult vahuvein)", Replacement:="Brut", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Extra Dry (Sparkling only)", Replacement:="Extra Dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Extra Dry (Tikai dzirksto|fffd|ais)", Replacement:="Extra Dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Extra Dry (Tik putojantis)", Replacement:="Extra Dry", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Extra Dry (ainult vahuvein)", Replacement:="Extra Dry", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Semi Sec (Sparkling only)", Replacement:="Semi sec", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Semi Sec (Tikai dzirksto|fffd|ais)", Replacement:="Semi sec", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Semi Sec (Tik putojantis)", Replacement:="Semi sec", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Semi Sec (ainult vahuvein)", Replacement:="Semi sec", SearchOrder:=xlByRows, MatchCase:=False

'
Selection.Replace What:="Sarkans", Replacement:="Red", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Raudonas", Replacement:="Red", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Punane", Replacement:="Red", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Balts", Replacement:="White", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Baltas", Replacement:="White", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Valge", Replacement:="White", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Roz|fffd|", Replacement:="Pink", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Rausvas", Replacement:="Pink", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Roosa", Replacement:="Pink", SearchOrder:=xlByRows, MatchCase:=False

'
Selection.Replace What:="Svaigs", Replacement:="Mild", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Gaivus", Replacement:="Mild", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="V|fffd|rske", Replacement:="Mild", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Fresh", Replacement:="Mild", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Maigs", Replacement:="More than average", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="|fffd|velnus", Replacement:="More than average", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Kerge", Replacement:="More than average", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Soft or mild", Replacement:="More than average", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Arom|fffd|tisks", Replacement:="Average", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Aromatingas", Replacement:="Average", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Aromaatne", Replacement:="Average", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Aromatic", Replacement:="Average", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Intens|fffd|vs", Replacement:="Strong", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Intensyvus", Replacement:="Strong", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Intensiivne", Replacement:="Strong", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Intense", Replacement:="Strong", SearchOrder:=xlByRows, MatchCase:=False

Selection.Replace What:="Aug|fffd|ains", Replacement:="Fruitful", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Vaisinis", Replacement:="Fruitful", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="Puuviljane", Replacement:="Fruitful", SearchOrder:=xlByRows, MatchCase:=False

'Wine
'Range("DJ6:DZ1000").Select

'Selection.Replace What:="S", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="G", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="H", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="I", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="J", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="K", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="L", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="M", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="N", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="O", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="P", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="R", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="T", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="U", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="V", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="W", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False
'Selection.Replace What:="X", Replacement:="Yes", SearchOrder:=xlByRows, MatchCase:=False

'GPAIS
Range("Translate_GPAIS").Select

Selection.Replace What:="01. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="02. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="03. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="04. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="05. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="06. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="07. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="08. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="09. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="10. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="11. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:="12. ", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False

'Electronic equipment
Range("Translate_eleq").Select

Selection.Replace What:=" HOUSE: Temperature change equipment", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" HOUSE: Screens, monitors, eqp.  >100 cm2", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" HOUSE: Lamps", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" HOUSE: Large equip. (dimensions >50cm)", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" HOUSE: Small equip. (dimensions <50 cm)", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" HOUSE: Small IT/Tele equip. (dim. <50cm)", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" NON-HS: Temperature change equipment", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" NON-HS: Screens, monitors, eqp.  >100 cm2", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" NON-HS: Lamps", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" NON-HS: Large equip. (dimensions >50cm)", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" NON-HS: Small equip. (dimensions <50 cm)", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False
Selection.Replace What:=" NON-HS: Small IT/Tele equip.(dim. <50cm)", Replacement:="", SearchOrder:=xlByRows, MatchCase:=False


'---------------

Sheets("Assortment").Select
    With ActiveSheet
        uLastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column
    End With

For u = 4 To uLastCol


Sheets("Assortment").Select
               
Set uCell = Cells(1, u)

For c = 1 To lastCol

On Error Resume Next

'---------------

Sheets("Vendor Template").Select
        Set aCell = Cells(1, c).Find(uCell, LookIn:=xlValues, LookAt:=xlPart)

        If Not aCell Is Nothing Then

            lRow = Range(Split(Cells(, aCell.Column).Address, "$")(1) & Rows.Count).End(xlUp).Row
            If lRow > 599 Then

                Set rng1 = Range(aCell.Offset(599), Cells(lRow, aCell.Column))

                rng1.Copy
                
                Sheets("Assortment").Select
                
                Cells(6, u).Select
                
                Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False

c = lastCol
                
                
            End If
        End If
    Next c
Next u

'---------------

For u = 4 To uLastCol

Sheets("Assortment").Select

Set uCell = Cells(4, u)


aFlows = Array(31, 67, 68, 69, 246, 247)

For c = LBound(aFlows) To UBound(aFlows)
sFlow = aFlows(c)

On Error Resume Next


Sheets("Vendor Template").Select
        Set aCell = Cells(598, sFlow).Find(uCell, LookAt:=xlWhole, MatchCase:=True)

        If Not aCell Is Nothing Then

            lRow = Range(Split(Cells(, aCell.Column).Address, "$")(1) & Rows.Count).End(xlUp).Row
            If lRow > 599 Then

                Set rng1 = Range(aCell.Offset(2), Cells(lRow, aCell.Column))

                rng1.Copy

                Sheets("Assortment").Select

                Cells(6, u).Select

                Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False

            End If
        End If
    Next c
Next u
'---------------


Workbooks(wbname).Activate
Sheets("Vendor Template").Select
Cells(600, 5).Select
Selection.Copy

Workbooks(wbname2).Activate
Sheets("Vendor").Select
Cells(7, 4).Select
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False


Workbooks(wbname).Activate
Sheets("Vendor Template").Select


Workbooks(wbname2).Activate
Sheets("Vendor").Select

Worksheets("Vendor Template").Delete
ActiveWorkbook.Protect "rimi"

MsgBox ("Copy done")


Application.Calculation = xlCalculationAutomatic
Antiflicker True
End Sub

Sub CopyToAMD()
Antiflicker False

    Dim my_FileName As Variant
    Dim ws As Worksheet
    Dim counter As Integer
    Dim lastCol As Integer
    Dim lastRow As Long
    Dim lRow As Long
    Dim aCell As Range, rng1 As Range, uCell As Range

'---------------

If MsgBox("Choose AMD form.", vbCritical + vbOKCancel + vbExclamation) = vbCancel Then Exit Sub Else

wbname = ActiveWorkbook.Name

my_FileName = Application.GetOpenFilename

If my_FileName <> False Then

Workbooks.Open Filename:=my_FileName

Else
Exit Sub

End If

'---------------

wbname2 = ActiveWorkbook.Name
ActiveWorkbook.Unprotect "amd"

Workbooks(wbname).Activate
Sheets("Vendor Template").Select
Sheets("Vendor Template").Copy Before:=Workbooks(wbname2).Sheets(1)

'---------------

Sheets("Vendor Template").Select
    With ActiveSheet
        lastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column
    End With
Range(Cells(1, 1), Cells(1, 450)).EntireColumn.Hidden = False
Range("PUORG_COUNTRY") = 4

Sheets("RIMI_AMD").Select
    With ActiveSheet
        uLastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column
    End With

'---------------

Application.Calculation = xlCalculationManual

lastRow = ActiveSheet.Range("A1:OK2000").Find(What:="*", LookIn:=xlValues, SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row

For u = 2 To uLastCol

Sheets("RIMI_AMD").Select

Set uCell = Cells(1, u)

For c = 1 To lastCol

On Error Resume Next

'---------------

Sheets("Vendor Template").Select
        Set aCell = Cells(1, c).Find(uCell, LookIn:=xlValues)

        If Not aCell Is Nothing Then

            lRow = Range(Split(Cells(, aCell.Column).Address, "$")(1) & Rows.Count).End(xlUp).Row
            If lRow > 599 Then

                Set rng1 = Range(aCell.Offset(599), Cells(lRow, aCell.Column))

                rng1.Copy
                
                Sheets("RIMI_AMD").Select
                
                Cells(lastRow + 1, u).Select
                
                Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False

c = lastCol
                
                
            End If
        End If
    Next c
Next u

'---------------

Worksheets("Vendor Template").Delete
Sheets("RIMI_AMD").Select
ActiveWorkbook.Protect "amd"
MsgBox ("Copy done")

Application.Calculation = xlCalculationAutomatic
Antiflicker True
End Sub


Sub CopyFromVT()
Antiflicker False

'wbname = current vt
'wbname2 = old vt

    Dim my_FileName As Variant
    Dim ws As Worksheet
    Dim counter As Integer
    Dim lastCol As Integer
    Dim lRow As Long
    Dim aCell As Range, rng1 As Range, uCell As Range, emptyname As Range

'---------------

If MsgBox("Choose Vendor template file.", vbCritical + vbOKCancel + vbExclamation) = vbCancel Then Exit Sub Else

wbname = ActiveWorkbook.Name

my_FileName = Application.GetOpenFilename

If my_FileName <> False Then

Workbooks.Open Filename:=my_FileName

Else
Exit Sub

End If

'---------------

wbname2 = ActiveWorkbook.Name

Workbooks(wbname).Activate
ActiveWorkbook.Unprotect "vt"

Workbooks(wbname2).Activate
Sheets("Vendor Template").Select
Sheets("Vendor Template").Copy Before:=Workbooks(wbname).Sheets(1)

'---------------

Sheets("Vendor Template").Select
    With ActiveSheet
        lastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column - 9
    End With
Range(Cells(1, 1), Cells(1, 450)).EntireColumn.Hidden = False
Range("PUORG_COUNTRY") = 4


Sheets("Vendor Template (2)").Select
    With ActiveSheet
        uLastCol = .Cells(1, .Columns.Count).End(xlToLeft).Column - 9
    End With
Range(Cells(1, 1), Cells(1, 450)).EntireColumn.Hidden = False
Range("PUORG_COUNTRY") = 4


'---------------


Application.Calculation = xlCalculationManual

For u = 1 To uLastCol

Sheets("Vendor Template").Select

                
Set uCell = Cells(1, u)

For c = 1 To lastCol

On Error Resume Next

'---------------


Sheets("Vendor Template (2)").Select
        If uCell.FormulaR1C1 = "FORMULA" Then GoTo skip
        
        Set aCell = Cells(1, c).Find(uCell, LookIn:=xlValues)
        
        If Not aCell Is Nothing Then

            lRow = Range(Split(Cells(, aCell.Column).Address, "$")(1) & Rows.Count).End(xlUp).Row
            If lRow > 599 Then

                Set rng1 = Range(aCell.Offset(599), Cells(lRow, aCell.Column))

                rng1.Copy
                
                Sheets("Vendor Template").Select
                
                Cells(600, u).Select
                
                Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
    :=False, Transpose:=False

c = lastCol
                           

            End If
        End If
skip:
    Next c
Next u

'---------------

Workbooks(wbname2).Activate
Workbooks(wbname2).Close False


Workbooks(wbname).Activate
Worksheets("Vendor Template (2)").Delete
Sheets("Vendor Template").Select
Range("A2").Select
ActiveWorkbook.Protect "vt"

MsgBox ("Copy done")

Application.Calculation = xlCalculationAutomatic
Antiflicker True
End Sub


Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
 
Attribute VB_Name = "frmCopyForm"
Attribute VB_Base = "0{B8F774E0-D902-4C42-BBAB-2C2E2ED927DF}{48055A1D-AB82-4196-9EF1-F58E024C5F70}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btn_CopyMDT_LV_Click()
frmCopyForm.Hide
Module1.CopyToMDT 1 ' 1 = EE | 2 = LV | 3= LT
End Sub

Private Sub btn_CopyMDT_EE_Click()
frmCopyForm.Hide
Module1.CopyToMDT 2 ' 1 = EE | 2 = LV | 3= LT
End Sub

Private Sub btn_CopyMDT_LT_Click()
frmCopyForm.Hide
Module1.CopyToMDT 3 ' 1 = EE | 2 = LV | 3= LT
End Sub

Private Sub btn_CopyToAMD_Click()
frmCopyForm.Hide
Module1.CopyToAMD
End Sub

Private Sub btn_CopyFromVT_Click()
frmCopyForm.Hide
Module1.CopyFromVT
End Sub

Private Sub btn_CopyFromVTold_Click()
frmCopyForm.Hide
Module1.CopyFromVTold
End Sub


INQUEST-PP=macro
