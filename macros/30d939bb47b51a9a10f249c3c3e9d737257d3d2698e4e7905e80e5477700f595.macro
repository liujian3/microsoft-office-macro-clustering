Attribute VB_Name = "A_MAIN"
'**********************************************************************************************
'**                                                                                          **
'**  OPEN ORDER TOOL Version 2                                                               **
'**                                                                                          **
'**  Note: This program is a rewrite of the Open Order Tool Version 1 made by Ryan Jiskoot.  **
'**                                                                                          **
'**  Main rewrite made by Frank Hauge, January-February 2019.                                **
'**  Publisher: OneSubsea                                                                    **
'**                                                                                          **
'**  Latest Major Revision:    FH, 21-FEB-2019                                               **
'**                                                                                          **
'**********************************************************************************************

Option Explicit

Public FileLocs, StartDocName, DocName
Public wb1 As Workbook      'Used to reference ThisWorkbook
Public ws1 As Worksheet     'Used to reference Thisworkbook.Worksheet("Controller")
Public tb1 As ListObject    'Used to reference Thisworkbook.Worksheets("Controller").ListObjects("TblController")

Public ListSep As String    'Container for List seperator (formula seperator)
Public DecSep As String     'Container for Decimal seperator
Public ThouSep As String    'Container for Thousand seperator

''Public xlApp1 As Excel.Application
''Public xlApp2 As Excel.Application

Sub Collector1()
    Set wb1 = ThisWorkbook
    Set ws1 = wb1.Worksheets("Controller")
    
    'Retrive system symbol settings
    DecSep = Application.International(xlDecimalSeparator)
    ThouSep = Application.International(xlThousandsSeparator)
    ListSep = Application.International(xlListSeparator)
    
    Application.IgnoreRemoteRequests = True
'    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
'    Application.Visible = False
    Application.EnableEvents = False
    
    'START: Checking decimal settings
    Dim DecimalTest As String
    Dim DecimalRefID As Range       'Used for returning Range(row) of Reference
    Dim DecimalRefRow As Long       'Used for collecting row number from above Range
    Dim DecimalRefColumn As Long
    
''    'Clean files from last session - Moved to vb.net code
''    If Len(Dir("C:\SAP\ZRTC_PO_EXPED.xlsx")) <> 0 Then
''        SetAttr ("C:\SAP\ZRTC_PO_EXPED.xlsx"), vbNormal
''        Kill ("C:\SAP\ZRTC_PO_EXPED.xlsx")
''    End If
''    If Len(Dir("C:\SAP\ZRTC_PO_EXPED2.xlsx")) <> 0 Then
''        SetAttr ("C:\SAP\ZRTC_PO_EXPED2.xlsx"), vbNormal
''        Kill ("C:\SAP\ZRTC_PO_EXPED2.xlsx")
''    End If
''    If Len(Dir("C:\SAP\exportCURR.xlsx")) <> 0 Then
''        SetAttr ("C:\SAP\exportCURR.xlsx"), vbNormal
''        Kill ("C:\SAP\exportCURR.xlsx")
''    End If
''    If Len(Dir("C:\SAP\exportCURR2.xlsx")) <> 0 Then
''        SetAttr ("C:\SAP\exportCURR2.xlsx"), vbNormal
''        Kill ("C:\SAP\exportCURR2.xlsx")
''    End If

    'Find Tabel row of DataType
    Set DecimalRefID = ws1.[TblController[DataType]].Find(What:="SAP N format")
    DecimalRefRow = DecimalRefID.Row '- (ThisWorkbook.Worksheets("COntroller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
        
    Debug.Print DecimalRefRow & ":" & DecimalRefColumn
    'Dim testvalue As String: testvalue = ThisWorkbook.Worksheets("Controller").[TblController[DataValue]].Rows(DecimalRefRow).Text 'For testing only
    
    If ThisWorkbook.Worksheets("Controller").[TblController[DataValue]].Rows(DecimalRefRow).Text = "1 234 567,89" Then
        If Application.International(xlDecimalSeparator) = "." Then
            DecimalTest = MsgBox("The Users SAP decimal seperator and Excel/System decimal seperator do not match. Please correct before running", vbCritical + vbMsgBoxSetForeground, "Warning Message")
             
            Exit Sub
        End If
    End If
        
    If ThisWorkbook.Worksheets("Controller").[TblController[DataValue]].Rows(DecimalRefRow).Text = "1.234.567,89" Then
        If Application.International(xlDecimalSeparator) = "." Then
             DecimalTest = MsgBox("The Users SAP decimal seperator and Excel/System decimal seperator do not match. Please correct before running.", vbCritical + vbMsgBoxSetForeground, "Warning Message")
            Exit Sub
        End If
    End If
    
    If ThisWorkbook.Worksheets("Controller").[TblController[DataValue]].Rows(DecimalRefRow).Text = "1,234,567.89" Then
        If Not Application.International(xlDecimalSeparator) = "." Then
             DecimalTest = MsgBox("The Users SAP decimal seperator and Excel/System decimal seperator do not match. Please correct before running", vbCritical + vbMsgBoxSetForeground, "Warning Message")
            Exit Sub
        End If
    End If
    'END: Checking decimal setting

    'Call Sub Procedures for Retriving SAP Raw Data, Correct Rows and Columns, Format Dates and Tidy output
    Call ZRTC_PO_EXPED_DOWN             'Review Completed - OK, FH, 10.Jan.2019, update 07.FEB.2019 with new download sequence.
    Call TidyImportData                 'Review Completed - OK, FH, 11.Jan.2019
    Call FormatDates                    'Review Completed - OK, FH, 07.Feb.2019
    Call ColorFormat                    'Review Completed - OK, FH , 08.FEB.2019
    
    Sheets("Controller").Visible = False
    
    'Call additional Sub Routines
    Call Overview_setup                 'Review Completed - OK, FH , 08.FEB.2019
    Call PrintPDF                       'Review Completed - OK, FH , 15.FEB.2019
    
    'Add PO Value in USD
    Call Add_USD
    
    'Call Optional SubRoutines Based on App Tickboxes
    'Insert Routine for handing options
    Call OptionsHandling
    
    'Final formating ZRTC_PO_EXPED Sheet
    Sheets("ZRTC_PO_EXPED").Select
    With ActiveWorkbook.Sheets("ZRTC_PO_EXPED").Tab     'Set tab color Black
        .Color = 0
        .TintAndShade = 0
    End With
    Columns("AC:AC").Select                             'Hide "PO Confirmed" (1/0) column
    Selection.EntireColumn.Hidden = True
    Range("A1").Select                                  'Force sheet view to upper right corner
        
    'Final App View and Setting Tidy Up
    Sheets("Currency").Visible = False
    Sheets("TempData").Visible = False
    Sheets("Overview").Select
    
    ThisWorkbook.Activate
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.DisplayFormulaBar = False
    ActiveWindow.DisplayHeadings = False
    Application.DisplayAlerts = True
    Application.IgnoreRemoteRequests = False
    
    '*** DO NOT REFRESH ALL -> This will break Analysis Pivots if Analysis has not been ran.
    'ActiveWorkbook.RefreshAll
    'ActiveWorkbook.RefreshAll
    
    'Close Excel instance opened by SAP
    On Error Resume Next
    'Dim xlApp As Excel.Application
    'Set xlApp = GetObject("C:\SAP\ZRTC_PO_EXPED.xlsx").Application
    'xlApp.Workbooks("ZRTC_PO_EXPED.xlsx").Close
    'xlApp.Quit
    
''    If xlApp2 Is Nothing Then
''        'Set xlApp = GetObject("C:\SAP\ZRTC_PO_EXPED.xlsx").Application   'This will Excel from SAP
''        xlApp1.Visible = True
''        xlApp1.Workbook("ZRTC_PO_EXPED.xlsx").Close
''        xlApp1.Quit
''    Else
''        xlApp1.Visible = True
''        xlApp2.Visible = True
''        xlApp1.Workbooks("ZRTC_PO_EXPED.xlsx").Close
''        xlApp2.Workbooks("exportCURR.XLSX").Close
''        xlApp1.Quit
''        'xlApp2.Quit
''    End If
        
    On Error GoTo 0
    
    
    Application.Visible = True
    Application.WindowState = xlMaximized
    
    ThisWorkbook.Activate
    SetForegroundWindow ActiveWorkbook.Application.hWnd
    
End Sub

Sub OptionsHandling()
    'Routine for handling the Options to Open Order Report
    Dim AddSchRefID As Range            'Used for returning Range(row) of Reference
    Dim AddSchRefRow As String          'Used for collecting row number from above Range
    Dim AddItemTextRefID As Range       'Used for returning Range(row) of Reference
    Dim AddItemTextRefRow As String     'Used for collecting row number from above Range
    Dim AddAnalyseRefID As Range        'Used for returning Range(row) of Reference
    Dim AddAnalyseRefRow As String      'Used for collecting row number from above Range
    Dim AddStatDateRefID As Range        'Used for returning Range(row) of Reference
    Dim AddStatDateRefRow As String      'Used for collecting row number from above Range
    
    Dim SchDateOption As Long, ItemTextOption As Long, AnalyseOption As Long, StatDateOption As Long
    
    '*** Add Schedule Date Option ***
    'Find Tabel row of DataType
    Set AddSchRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Add SchDate")
    AddSchRefRow = AddSchRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    SchDateOption = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(AddSchRefRow)
    
    'Find Tabel row of DataType
    Set AddItemTextRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Add ItemText")
    AddItemTextRefRow = AddItemTextRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    ItemTextOption = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(AddItemTextRefRow)
    
    'Find Tabel row of DataType
    Set AddAnalyseRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Analyse Report")
    AddAnalyseRefRow = AddAnalyseRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    AnalyseOption = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(AddAnalyseRefRow)
    
    'Find Tabel row of DataType
    Set AddStatDateRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Add NewStatdate")
    AddStatDateRefRow = AddStatDateRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    StatDateOption = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(AddStatDateRefRow)
    
    
    If SchDateOption = 1 Then
        Call DelivDateAdd
    End If
    
    If ItemTextOption = 1 Then
        Call ItemTextAdd
    End If
    
    If StatDateOption = 1 Then
        Call AddNewStatDate
    End If
    
    If AnalyseOption = 1 Then
        Call AnalysisMc
    End If
    
End Sub



Function NewestFile(Directory, FileSpec)
    ' Returns the name of the most recent file in a Directory
    ' That matches the FileSpec (e.g., "*.xls").
    ' Returns an empty string if the directory does not exist or
    ' it contains no matching files
    Dim filename As String
    Dim MostRecentFile As String
    Dim MostRecentDate As Date
    If Right(Directory, 1) <> "\" Then Directory = Directory & "\"

    filename = Dir(Directory & FileSpec, 0)
    If filename <> "" Then
        MostRecentFile = filename
        MostRecentDate = FileDateTime(Directory & filename)
        Do While filename <> ""
            If FileDateTime(Directory & filename) > MostRecentDate Then
                 MostRecentFile = filename
                 MostRecentDate = FileDateTime(Directory & filename)
             End If
             filename = Dir
        Loop
    End If
    NewestFile = MostRecentFile
End Function


Function wsExists(wksName As String) As Boolean
    '-------------------------------------------------------------------------------------------
    '       Function: This will tell you if the sheet exists therefore can write if statements
    '-------------------------------------------------------------------------------------------
    On Error Resume Next
    wsExists = CBool(Len(Worksheets(wksName).Name) > 0)
End Function


Sub Add_USD()
    ' Checked - Passed - 25.10.2017 - RAJ
    ' On Error GoTo errwait
    ' Converts price and standardises to USD only used for Anaylsis

    Dim coll As Long
    Dim POCurrType As String
    
        
    'Application.Visible = True
    'Application.Wait (Now + TimeValue("00:00:01"))
''    Worksheets("Currency").QueryTables(1).Refresh ' BackgroundQuery:=False
    'Application.Wait (Now + TimeValue("00:00:06"))
    'If Err.Number <> 0 Then
    'errwait:
    '    Application.Wait (Now + TimeValue("00:00:01")) 'Ask Excel to wait for 1 second
    '    Err.Clear
    '    Resume
    'End If
    
    Call SAP_SE16N_TCURR_TABLE              'Pulls SE16N table TCURR for Currency in PO_EXPED report to USD
    Call Copy_TCURR_Data                    'Copy data from SAP file and places in Worksheet "Currency"
        
    On Error GoTo decimalissue
    
    'Variable "coll" used for offsetting column based on Schedule Line Delivery Date being included or not.
    If Application.CountIf(Rows(1), "Deliv. Date") > 0 Then
        coll = 1                                            ' coll=1, Sched.Line Del. Date added
    Else
        coll = 0                                            ' coll=0, no Sched.Line Del. Date
    End If
    
    Dim ER, ER2, a, b As Long
    ER = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(Rows.Count, 2).End(xlUp).Row            'end row calculation for QM10 sheet column 1
    ER2 = ThisWorkbook.Sheets("Currency").Cells(Rows.Count, 1).End(xlUp).Row
    
    For b = 7 To ER2
        ThisWorkbook.Sheets("Currency").Cells(b, 8).Value = ThisWorkbook.Sheets("Currency").Cells(b, 7).Value
    Next
    
'Not applicable for new TCURR download using xlsx
''    Sheets("ZRTC_PO_EXPED").Select
''    Columns(19).ColumnWidth = 11
''    Range(ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(2, 19 + coll), ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(ER, 19 + coll)).NumberFormat = ThisWorkbook.Sheets("Controller").Cells(54, 2)
''
''    If Application.International(xlDecimalSeparator) = "," Then
''        For b = 7 To ER2
''            If Application.International(xlThousandsSeparator) = "." Then
''                ThisWorkbook.Sheets("Currency").Cells(b, 8).Value = Replace(ThisWorkbook.Sheets("Currency").Cells(b, 8).Value, ".", ",")
''            End If
'''' Not applicable: USD to Curr Conversion Rate Column
''''            If ThisWorkbook.Sheets("Currency").Cells(b, 3).Value > 1000000 Then
''''                ThisWorkbook.Sheets("Currency").Cells(b, 3).Value = ThisWorkbook.Sheets("Currency").Cells(b, 3).Value / 1000000
''''            End If
''            If ThisWorkbook.Sheets("Currency").Cells(b, 8).Value > 1000000 Then
''                ThisWorkbook.Sheets("Currency").Cells(b, 8).Value = ThisWorkbook.Sheets("Currency").Cells(b, 8).Value / 1000000
''            End If
''        Next b
''    End If
    
''Old web page curr rate table obsolete. Now using TCURR from SE16N
''    For a = 2 To ER
''        For b = 3 To ER2
''            If ThisWorkbook.Sheets("Currency").Cells(b, 1).Value = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 18 + coll).Value Then
''                ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 19 + coll).Value = (ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 17 + coll).Value * ThisWorkbook.Sheets("Currency").Cells(b, 4).Value) * (ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 16 + coll).Value)
''            End If
''        Next b
''    Next a
    
    'Calculate PO Line USD value as "qty * unit price PO curr * Pocurr to USD rate from TCURR"
    For a = 2 To ER
        POCurrType = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 19 + coll).Text
        If POCurrType = "USD" Then
            ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 20).Value = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 18).Value * (ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 17).Value)
        Else
            For b = 7 To ER2
                If ThisWorkbook.Sheets("Currency").Cells(b, 1).Value = POCurrType Then
                    ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 20 + coll).Value = (ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 18 + coll).Value * ThisWorkbook.Sheets("Currency").Cells(b, 8).Value) * (ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 17 + coll).Value)
                    b = ER2     'Force end for loop when Curr found
                End If
            Next b
        End If
    Next a

    'Format Total Value (USD)column Number format
    ThisWorkbook.Worksheets("ZRTC_PO_EXPED").Columns(20 + coll).EntireColumn.Select
    Selection.NumberFormat = ThisWorkbook.Worksheets("Controller").Cells(Worksheets("Controller").[TblController[DataType]].Find(What:="Number Layout").Row, 2).Text
    
decimalissue:
    If Err.Number <> 0 Then
''        Sheets("Currency").Columns("D:D").TextToColumns Destination:=Range("C1"), DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo:=Array(1, 1), DecimalSeparator:=".", TrailingMinusNumbers:=True
''        Sheets("Currency").Columns("H:H").TextToColumns Destination:=Range("D1"), DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo:=Array(1, 1), DecimalSeparator:=".", TrailingMinusNumbers:=True
''
        Err.Clear
        Resume Next
    End If
    
''Move to above for loop to avoid looping twise
''    For a = 2 To ER
''         If ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 18).Value = "USD" Then ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 19).Value = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 17).Value * (ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 16).Value)
''    Next a
   
End Sub
Attribute VB_Name = "B_ZRTC_PO_EXPED"
Option Explicit
Public SapGuiAuto, SAP_APP, Connection, session, Wscript


Sub ZRTC_PO_EXPED_DOWN()
    
    ' Checked 10.Jan.2019 - Works - FH
    ' Revision 08.Feb.2019 - FH - Added P.Org to end og Layout and saved as global layout "/OSS-OOR2". Sub SetLayout() obsolete.
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Controller")
    ws.Activate
    
    Dim msgValue
    
    'Check for and delete duplicates of target files
    Dim FPath1 As String            'Target output path
    Dim FName1 As String            'Target output filename
    
    FPath1 = "C:\SAP"               'Set target output path
    FName1 = "ZRTC_PO_EXPED.xlsx"   'Set target output filename
    Dim FNameLocation As String: FNameLocation = FPath1 & "\" & FName1
    
    If Len(Dir(FNameLocation)) <> 0 Then
        SetAttr FNameLocation, vbNormal
        Kill FNameLocation
    End If
        
    '-------------------------------
    ' Download Open Order Report from SAP
    
    '****************************
    '* Open connection with SAP *
    '****************************
    On Error GoTo SAPMISTAKE
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject SAP_APP, "on"
    End If
    
    'Run T-Code
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/nzrtc_po_exped"
    session.findById("wnd[0]").sendVKey 0
     
    On Error GoTo SAPMISTAKE2
     
    '*****************************************
    '* Enter/Setup report parameters/filters *
    '*****************************************
      
    '*** Enter PGrps ***
    Dim i As Long
    Dim PGrRefID As Range                   'Used for returning Range(row) of Reference
    Dim PGrRefRow As String                 'Used for collecting row number from above Range
    Dim PGrTestString: PGrTestString = ""   'For checking if all PGr are Blank
    Dim PGr As Variant                      'For pasting single value or range of values into SAP
    
    'Find Tabel row of DataType
    Set PGrRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="PGrp1")
    PGrRefRow = PGrRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    Dim testvalue As String: testvalue = ws.[TblController[DataValue]].Rows(PGrRefRow).Text 'For testing only
    
    For i = PGrRefRow To (PGrRefRow + 15)
        PGrTestString = PGrTestString & ws.[TblController[DataValue]].Rows(i).Text
    Next
    
    'Find Range for PGr Input to SAP
    If PGrTestString = "" Then
        Set PGrRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="PGrAll")
        PGrRefRow = PGrRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)    'minus table header row...
        
        PGr = ws.[TblController[DataValue]].Cells(PGrRefRow).Text
        session.findById("wnd[0]/usr/ctxtS_EKGRP-LOW").Text = PGr
    Else
        Set PGr = Range(ws.[TblController[DataValue]].Cells(PGrRefRow), ws.[TblController[DataValue]].Cells(PGrRefRow + 15))
        
        PGrTestString = Left(PGrTestString, 3)
        session.findById("wnd[0]/usr/ctxtS_EKGRP-LOW").Text = PGrTestString      'Initial input required to access multiple input
        
        session.findById("wnd[0]/usr/btn%_S_EKGRP_%_APP_%-VALU_PUSH").setFocus   'SetFocus Multiple Input Valuation Area/Plants
        session.findById("wnd[0]/usr/btn%_S_EKGRP_%_APP_%-VALU_PUSH").press      'Click button
        'Copy PGr data from Excel Sheet to clipboard
        ThisWorkbook.Worksheets("Controller").Activate
        PGr.Select
        Selection.Copy
        'Insert PGr data from Excel Sheet into SAP from Clipboard
        session.findById("wnd[1]/tbar[0]/btn[16]").press                                'Delete initial input on line 1 auto selected
        session.findById("wnd[1]/tbar[0]/btn[24]").press                                'Paste from Clipboard Plant data copied from SAP
        session.findById("wnd[1]/tbar[0]/btn[0]").press                                 'Check input button
        session.findById("wnd[1]/tbar[0]/btn[8]").press                                 'Transfer data button
    
    End If
    
    
    '*** Enter POrg ***
    
    '*** Clear Range for Purchasing Org Input to SAP ***
    session.findById("wnd[0]/usr/ctxtS_EKORG-LOW").setFocus
    session.findById("wnd[0]/usr/ctxtS_EKORG-LOW").caretPosition = 0
    session.findById("wnd[0]/usr/ctxtS_EKORG-LOW").showContextMenu
    session.findById("wnd[0]/usr").selectContextMenuItem "DELSCTX"
    
    Dim POrgRefID As Range                 'Used for returning Range(row) of Reference
    Dim POrgRefRow As String               'Used for collecting row number from above Range
    Dim POrgTestString As String           'For checking if all PGr are Blank
    Dim POrg As Variant                    'For pasting single value or range of values into SAP
    
    'Find Tabel row of DataType
    Set POrgRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="POrg1")
    POrgRefRow = POrgRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    'Dim testvalue As String:
    testvalue = ws.[TblController[DataValue]].Rows(POrgRefRow).Text 'For testing only
    
    For i = POrgRefRow To (POrgRefRow + 7)
        POrgTestString = POrgTestString & ws.[TblController[DataValue]].Rows(i).Text
    Next
    
    'Find Range for Plant Input to SAP
    If POrgTestString = "" Then
        Set POrgRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="POrgAll")
        POrgRefRow = POrgRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)    'minus table header row...
        
        POrg = ws.[TblController[DataValue]].Cells(POrgRefRow).Text
        session.findById("wnd[0]/usr/ctxtS_EKORG-LOW").Text = POrg
    Else
        'Set POrg = Range(ws.[TblController[DataValue]].Cells(POrgRefRow), ws.[TblController[DataValue]].Cells(POrgRefRow + 7))

        session.findById("wnd[0]/usr/btn%_S_EKORG_%_APP_%-VALU_PUSH").setFocus   'SetFocus Multiple Input Valuation Area/Plants
        session.findById("wnd[0]/usr/btn%_S_EKORG_%_APP_%-VALU_PUSH").press      'Click button
        'Copy Plant data from Excel Sheet to clipboard
        Set POrg = Range(ws.[TblController[DataValue]].Cells(POrgRefRow), ws.[TblController[DataValue]].Cells(POrgRefRow + 7))
        POrg.Select
        Selection.Copy
        'Insert Plant data from Excel Sheet into SAP from Clipboard
        session.findById("wnd[1]/tbar[0]/btn[24]").press                                'Paste from Clipboard Plant data copied from SAP
        session.findById("wnd[1]/tbar[0]/btn[0]").press                                 'Check input button
        session.findById("wnd[1]/tbar[0]/btn[8]").press                                 'Transfer data button
    
    End If
    
    
    '*** Enter Plants ***
    'Dim i As Long
    Dim PlantRefID As Range                 'Used for returning Range(row) of Reference
    Dim PlantRefRow As String               'Used for collecting row number from above Range
    Dim PlantTestString As String           'For checking if all PGr are Blank
    Dim Plant As Variant                    'For pasting single value or range of values into SAP
    
    'Find Tabel row of DataType
    Set PlantRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Plant1")
    PlantRefRow = PlantRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    'Dim testvalue As String:
    testvalue = ws.[TblController[DataValue]].Rows(PlantRefRow).Text 'For testing only
    
    For i = PlantRefRow To (PlantRefRow + 7)
        PlantTestString = PlantTestString & ws.[TblController[DataValue]].Rows(i).Text
    Next
    
    'Find Range for Plant Input to SAP
    If PlantTestString = "" Then
        Set PlantRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="PlantAll")
        PlantRefRow = PlantRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)    'minus table header row...
        
        Plant = ws.[TblController[DataValue]].Cells(PlantRefRow).Text
        session.findById("wnd[0]/usr/ctxtS_WERKS-LOW").Text = Plant
    Else
        'Set Plant = Range(ws.[TblController[DataValue]].Cells(PlantRefRow), ws.[TblController[DataValue]].Cells(PlantRefRow + 7))

        session.findById("wnd[0]/usr/btn%_S_WERKS_%_APP_%-VALU_PUSH").setFocus   'SetFocus Multiple Input Valuation Area/Plants
        session.findById("wnd[0]/usr/btn%_S_WERKS_%_APP_%-VALU_PUSH").press      'Click button
        'Copy Plant data from Excel Sheet to clipboard
        Set Plant = Range(ws.[TblController[DataValue]].Cells(PlantRefRow), ws.[TblController[DataValue]].Cells(PlantRefRow + 7))
        Plant.Select
        Selection.Copy
        'Insert Plant data from Excel Sheet into SAP from Clipboard
        session.findById("wnd[1]/tbar[0]/btn[24]").press                                'Paste from Clipboard Plant data copied from SAP
        session.findById("wnd[1]/tbar[0]/btn[0]").press                                 'Check input button
        session.findById("wnd[1]/tbar[0]/btn[8]").press                                 'Transfer data button
    
    End If
            
    '*** Enter Purchasing Document Type ***
    session.findById("wnd[0]/usr/btn%_S_BSART_%_APP_%-VALU_PUSH").press
    session.findById("wnd[1]/usr/tabsTAB_STRIP/tabpNOSV").Select                'Select exclude single values
    session.findById("wnd[1]/usr/tabsTAB_STRIP/tabpNOSV/ssubSCREEN_HEADER:SAPLALDB:3030/tblSAPLALDBSINGLE_E/ctxtRSCSEL_255-SLOW_E[1,0]").Text = "AN"
    session.findById("wnd[1]/tbar[0]/btn[8]").press
    
    '*** Enter other parameters ***
    session.findById("wnd[0]/usr/chkP_GR_PR").Selected = True       'Exclude GR Processing time selected
    session.findById("wnd[0]/usr/txtP_HITS").Text = "999999"        'Enter max number of hits
    
    
    '*** Enter Vendor Codes ***
    'Dim i As Long
    Dim VendorRefID As Range       'Used for returning Range(row) of Reference
    Dim VendorRefRow As String     'Used for collecting row number from above Range
    Dim VendorTestString           'For checking if all Vendors are Blank
    Dim Vendor As Variant          'For pasting single value or range of values into SAP
    Dim ManualVendorRefID As Range       'Used for returning Range(row) of Reference
    Dim ManualVendorRefRow As String     'Used for collecting row number from above Range
    
    'Find Tabel row of DataType
    Set ManualVendorRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Manual Vendor Entry")
    ManualVendorRefRow = ManualVendorRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    'Find Tabel row of DataType
    Set VendorRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Vendor1")
    VendorRefRow = VendorRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    'Dim testvalue As String:
    testvalue = ws.[TblController[DataValue]].Rows(VendorRefRow).Text 'For testing only
    
    For i = VendorRefRow To (VendorRefRow + 15)
        VendorTestString = VendorTestString & ws.[TblController[DataValue]].Rows(i).Text
    Next
      
    If ws.[TblController[DataValue]].Rows(ManualVendorRefRow).Text = "1" Then
        MsgBox "Please manually enter your vendor codes into SAP, then press OK." & vbNewLine & "(Note: Additional report parameters may also be edited).", vbInformation + vbMsgBoxSetForeground
    Else
        'Find Range for Vendor Input to SAP
        If VendorTestString = "" Then
            'Do Nothing
        Else
            Set Vendor = Range(ws.[TblController[DataValue]].Cells(VendorRefRow), ws.[TblController[DataValue]].Cells(VendorRefRow + 7))
    
            session.findById("wnd[0]/usr/btn%_S_LIFNR_%_APP_%-VALU_PUSH").setFocus   'SetFocus Multiple Input Valuation Area/Plants
            session.findById("wnd[0]/usr/btn%_S_LIFNR_%_APP_%-VALU_PUSH").press      'Click button
            'Copy PGr data from Excel Sheet to clipboard
            Vendor.Select
            Selection.Copy
            'Insert PGr data from Excel Sheet into SAP from Clipboard
            session.findById("wnd[1]/tbar[0]/btn[24]").press                                'Paste from Clipboard Plant data copied from SAP
            session.findById("wnd[1]/tbar[0]/btn[0]").press                                 'Check input button
            session.findById("wnd[1]/tbar[0]/btn[8]").press                                 'Transfer data button
        
        End If
    End If
    
    '*** Run Report/Execute ***
    session.findById("wnd[0]/tbar[1]/btn[8]").press
    
    On Error Resume Next
    
    
    '*****************************************
    '* Set-up layout and download report     *
    '*****************************************
    
    '*** Setup Report Layout ***
    session.findById("wnd[0]/tbar[1]/btn[33]").press        'Choose standard layout
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").currentCellRow = -1
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectColumn "VARIANT"
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").contextMenu
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectContextMenuItem "&FIND"
    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "/OSS-OOR2"                                                         'Enter Layout name to find
    session.findById("wnd[2]/tbar[0]/btn[0]").press                                                                             'Execute Find
    session.findById("wnd[2]/tbar[0]/btn[12]").press                                                                            'Close Find Window
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").clickCurrentCell  'Hit Enter -> Use found layout
    
    
''    'Obsolete with Global variant "/OSS-OOR2"
''    'If procedure can not find layout in above process, then call "Set_Layout" procedure to create specific layout
''    If Err <> 0 Then
''        session.findById("wnd[1]/tbar[0]/btn[12]").press
''        Call Set_Layout
''        Err.Clear
''    End If
    
'Old version:
''    '*** Save List file as Spreadsheet ***
''    session.findById("wnd[0]/tbar[1]/btn[45]").press                                                                        'Save list in file
''    session.findById("wnd[1]/usr/subSUBSCREEN_STEPLOOP:SAPLSPO5:0150/sub:SAPLSPO5:0150/radSPOPLI-SELFLAG[1,0]").Select      'Select Spreadsheet
''    session.findById("wnd[1]/tbar[0]/btn[0]").press                                                                         'Continue/Execute/Confirm
''    'New pop-up
''    session.findById("wnd[1]/usr/ctxtDY_PATH").Text = "C:\SAP\"                     'Enter Path/Directory
''    session.findById("wnd[1]/usr/ctxtDY_FILENAME").Text = "ZRTC_PO_EXPED.xls"       'Enter File Name
''    session.findById("wnd[1]/tbar[0]/btn[0]").press                                 'Confirm/Create file
''    'Script waits while file is saved
    
'New version:
    'Save sequence: -> List -> Export -> Spreadsheet -> Spreadsheet Format XLSX... (no Windows Native Windows will appear).
    session.findById("wnd[0]/mbar/menu[0]/menu[3]/menu[1]").Select
    session.findById("wnd[1]/usr/radRB_OTHERS").setFocus
    session.findById("wnd[1]/usr/radRB_OTHERS").Select
    session.findById("wnd[1]/usr/cmbG_LISTBOX").setFocus
    session.findById("wnd[1]/usr/cmbG_LISTBOX").Key = "10"
    session.findById("wnd[1]/tbar[0]/btn[0]").press
    session.findById("wnd[1]/usr/ctxtDY_PATH").Text = "C:\SAP\"
    session.findById("wnd[1]/usr/ctxtDY_FILENAME").Text = "ZRTC_PO_EXPED.xlsx"
    session.findById("wnd[1]/usr/ctxtDY_FILENAME").caretPosition = 10
    session.findById("wnd[1]/tbar[0]/btn[0]").press
    
    'Go back to SAP main page
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/n"
    session.findById("wnd[0]").sendVKey 0
    
    On Error GoTo 0
    
    On Error GoTo SAPMISTAKE2
'*************************************************
'* Section with special error handling preedures *
'*************************************************

'Error handling type "resume on line where error was detected"  if user confirms OK, else end procedure
SAPMISTAKE:
    If Err.Number <> 0 Then
        msgValue = MsgBox("An error has occured when trying to populate the SAP GUI. Please make sure SAP GUI is open then press OK", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
        If msgValue = vbOK Then
            Err.Clear
            Resume
        Else
            End
        End If
    End If
    
'Error handling type "resume on next line from where error was detected"  if user confirms OK, else end procedure
SAPMISTAKE2:
    If Err.Number <> 0 Then
        msgValue = MsgBox("An error has occured when trying to populate the SAP GUI. Please review populated information in open transaction ZRTC_PO_EXPED, correct if required. Press OK to continue once actioned.", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
        If msgValue = vbOK Then
            Err.Clear
            Resume Next
        Else
            End
        End If
    End If

ExitSub:

End Sub



'''***********************************************************************************************************************************************************************************
'''   The remainder of the sheet is obsolete with the new xlsx file download format
'''***********************************************************************************************************************************************************************************
''
''Sub Set_Layout()
''    'Obsolete, not required using global "/OSS-OOR2" setup.
''
''    'This Sub runs if default report layout for ZRTC_PO_EXPED report table can not be found. This sub then manually
''    'set-up the required columns in the required order. Then return to ZRTC_PO_EXPED_DOWN for downloading file as spreadsheet.
''
''    '****************************
''    '* Open connection with SAP *
''    '****************************
''    If Not IsObject(SAP_APP) Then
''       Set SapGuiAuto = GetObject("SAPGUI")
''       Set SAP_APP = SapGuiAuto.GetScriptingEngine
''    End If
''    If Not IsObject(Connection) Then
''       Set Connection = SAP_APP.Children(0)
''    End If
''    If Not IsObject(session) Then
''       Set session = Connection.Children(0)
''    End If
''    If IsObject(WScript) Then
''       WScript.ConnectObject session, "on"
''       WScript.ConnectObject SAP_APP, "on"
''    End If
''
''    session.findById("wnd[0]").maximize
''    session.findById("wnd[0]/tbar[1]/btn[32]").press
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER2_LAYO/shellcont/shell").currentCellRow = 4
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER2_LAYO/shellcont/shell").SelectAll
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_FL_SING").press
''
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Item Category"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Plant"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Vendor"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Vendor Name"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Purchasing Document"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Item"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Purchasing Group"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Material"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Material Description"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Document Date"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Statistical Delivery Date"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Confirmtion Delivery Date"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Sch.Line Delv.Date"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "MRP Reschedule Date"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Open Quantity"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Order Quantity"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Net Order Price"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Currency"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Delivery Text"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "PO Exception Message"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "VIM Work Item Description"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Requisitioner Name"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "SUS PO Response Text"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Confirmation Reference"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "Unit"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/cntlCONTAINER1_LAYO/shellcont/shell").pressToolbarButton "&FIND"
''    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "MRP Exception Message"
''    session.findById("wnd[2]/usr/cmbGS_SEARCH-SEARCH_ORDER").Key = "0"
''    session.findById("wnd[2]/usr/chkGS_SEARCH-EXACT_WORD").Selected = True
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[2]").Close
''    session.findById("wnd[1]/usr/tabsG_TS_ALV/tabpALV_M_R1/ssubSUB_DYN0510:SAPLSKBH:0620/btnAPP_WL_SING").press
''
''    ' Save new layout
''    session.findById("wnd[1]/tbar[0]/btn[5]").press
''    session.findById("wnd[2]/usr/tabsG50_TABSTRIP/tabpTAB_D0501/ssubD0505_SUBSCREEN:SAPLSLVC_DIALOG:0501/txtLTDX-VARIANT").Text = "OSS-OOR"
''    session.findById("wnd[2]/usr/tabsG50_TABSTRIP/tabpTAB_D0501/ssubD0505_SUBSCREEN:SAPLSLVC_DIALOG:0501/txtLTDXT-TEXT").Text = "OneSubsea-Open Order Report"
''    session.findById("wnd[2]/tbar[0]/btn[0]").press
''    session.findById("wnd[1]/tbar[0]/btn[0]").press
''
''End Sub
''
''Sub laoyout()       'Test of setup layout procedure
''
''    '****************************
''    '* Open connection with SAP *
''    '****************************
''    If Not IsObject(SAP_APP) Then
''       Set SapGuiAuto = GetObject("SAPGUI")
''       Set SAP_APP = SapGuiAuto.GetScriptingEngine
''    End If
''    If Not IsObject(Connection) Then
''       Set Connection = SAP_APP.Children(0)
''    End If
''    If Not IsObject(session) Then
''       Set session = Connection.Children(0)
''    End If
''    If IsObject(WScript) Then
''       WScript.ConnectObject session, "on"
''       WScript.ConnectObject SAP_APP, "on"
''    End If
''    On Error Resume Next
''       session.findById("wnd[0]").maximize
''        session.findById("wnd[0]/tbar[1]/btn[33]").press
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").currentCellRow = -1
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectColumn "VARIANT"
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").contextMenu
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cmbG51_USPEC_LBOX").SetFocus
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cmbG51_USPEC_LBOX").Key = "X"
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").currentCellRow = -1
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectColumn "VARIANT"
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").contextMenu
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectContextMenuItem "&FILTER"
''        session.findById("wnd[2]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = "OSS-OOR"
''        session.findById("wnd[2]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN002-LOW").Text = ""
''        session.findById("wnd[2]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 7
''        session.findById("wnd[2]/tbar[0]/btn[0]").press
''
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectedRows = "0"
''        session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").clickCurrentCell
''        If Err <> 0 Then
''            session.findById("wnd[1]/tbar[0]/btn[12]").press
''            Call Set_Layout
''            Err.Clear
''        End If
''
''End Sub


Attribute VB_Name = "C_SAP_DATA_SETUP"
Option Explicit
Public SAPExcelFound As Boolean


Sub TidyImportData()
' Checked 25.10.17 - Works -RAJ
' Revision 09/11/2018 - FH: Removing added columns due to "|" used in string. Based on issue found for A739.
' Revision 11/01/2019 - FH: Sub Tidy_2 included into Import_Tidy, new sub called TidyImportData. Rewrite for relative references of cells and workbooks.
' Revision 07/02/2019 - FH: Updated to download as xlsx from SAP and removing main Tidy operations due to errors in ealier xls file used.
'---------------------------------------------------------------------------------
'*********************************************************************************
'* Clean import errors from SAP xls-file generated from the ZRTC_PO_EXPED report *
'*********************************************************************************
    
    Dim FirstRow, ER, rw, i As Long
    Dim a As Variant
    Dim OOOR(), NOOR(), DOOR() As Variant
    Dim wb As Workbook, ws As Worksheet, ws2 As Worksheet
    Dim j As Long: j = 0
    
    Dim objFSO As Object
    Set objFSO = CreateObject("Scripting.FileSystemObject")
    'First parameter: original location\file Second parameter: new location\file
    
    On Error GoTo NoReportFound
    objFSO.CopyFile "C:\SAP\ZRTC_PO_EXPED.xlsx", "C:\SAP\ZRTC_PO_EXPED2.xlsx"
    GoTo ReportFound
    
NoReportFound:
    MsgBox "No SAP report file found. Please verify that there are open records on the parameters the report has been executed with and run tool again.", vbMsgBoxSetForeground
    ThisWorkbook.Activate
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.DisplayFormulaBar = False
    ActiveWindow.DisplayHeadings = False
    'Application.DisplayAlerts = True
    Application.IgnoreRemoteRequests = False
    'Application.Visible = True
    ThisWorkbook.Close
    
ReportFound:
    On Error GoTo 0
    
    'Import Open Order Report to this Workbook
     
    Set wb = ThisWorkbook               'ThisWB replaces specific file name "Open_Order_Reporter_REV10.xlsm" for improved change management
    wb.Activate
    Workbooks.Open filename:="C:\SAP\ZRTC_PO_EXPED2.xlsx", Local:=True
    
    Workbooks("ZRTC_PO_EXPED2.xlsx").Activate
    Worksheets("Sheet1").Name = "ZRTC_PO_EXPED"
    Sheets("ZRTC_PO_EXPED").Select
    Sheets("ZRTC_PO_EXPED").Move Before:=wb.Sheets(1)       'ThisWB replaces: Workbooks("Open_Order_Reporter_REV10.xlsm").Sheets(1)
             
    wb.Activate
    
    Sheets("ZRTC_PO_EXPED").Select
    Rows("1:1").Select
    Selection.ClearFormats                                  'Remove header formating from SAP xlsx file.
    
    Set ws = wb.Sheets("ZRTC_PO_EXPED")
    Set ws2 = wb.Sheets("Controller")
    
    'Find New End Row
    ER = ws.Cells(Rows.Count, 2).End(xlUp).Row

    
    'Review Conf. Date and Intercompany Vendors
    For rw = 2 To ER
        
        'If mssing Conf. Delivery Date then set equal to Schedule Line Delivery Date
        'and flag intercompany lines due to special confirmation date handling
        'Note: SAP rawdata file columns reference
        If ws.Cells(rw, 12).Value = "" Then                     'If Conf. Delivery Date "".(Delivery Date merging with Conf Date)
            
            'Create Black Mark when no Confirmed date
            Range("L" & rw).Select
            With Selection.Interior
                .Color = vbBlack                'Black Background
                .TintAndShade = 0
''                .PatternColorIndex = xlAutomatic
''                .ThemeColor = xlThemeColorAccent2
''                .TintAndShade = 0.599963377788629
            End With
            Selection.Font.Color = vbWhite      'White Font
            
            ws.Cells(rw, 12).Value = ws.Cells(rw, 13).Value     'Then Conf. Delivery Date = Sch.Line Delivery Date
            ws.Cells(rw, 30).Value = 0                          '"0"= not confirmed

''            If Left(ws.Cells(rw, 5), 2) = "47" Then             'Find intercompany POs and flag that this is not due to an incorrect setting
''                With ws.Cells(rw, 12).Interior                  'will move in next step hence why offset
''                    .Color = 9664346                            'Blue Grey Background
''                    .TintAndShade = 0
''                End With
''            End If
        Else
            ws.Cells(rw, 30).Value = 1                          '"1" = confirmed
        End If
        
''        'Handling of lines with exception message "Cancel process" - Note: SAP rawdata file columns reference
''        If ws.Cells(rw, 26).Value = "Cancel process" Then
''            With ws.Cells(rw, 11).Interior
''                .Pattern = xlSolid
''                .PatternColorIndex = xlAutomatic
''                .ThemeColor = xlThemeColorLight1                'Colour set to "Black"
''                .PatternTintAndShade = 0
''            End With
''            With ws.Cells(rw, 12).Interior
''                .Pattern = xlSolid
''                .PatternColorIndex = xlAutomatic
''                .ThemeColor = xlThemeColorLight1                'Colour set to "Black"
''                .PatternTintAndShade = 0
''            End With
''            With ws.Cells(rw, 14).Interior
''                .Pattern = xlSolid
''                .PatternColorIndex = xlAutomatic
''                .ThemeColor = xlThemeColorLight1                'Colour set to "Black"
''                .PatternTintAndShade = 0
''            End With
''        End If

    Next rw
    
    'Deleting columns "SUS PO Ref", "Conf Reference" and "OUn"
    ws.Columns(23).Delete
    ws.Columns(23).Delete
    ws.Columns(23).Delete
       
    'Convert Report to Range using Arrays
    ER = ws.Cells(Rows.Count, 2).End(xlUp).Row          'end row calculation for report sheet column 1
    OOOR = Range(ws.Cells(1, 1), ws.Cells(ER, 27))      'Contains Original OOR values (origina version)
    NOOR = Range(ws.Cells(1, 1), ws.Cells(ER, 29))      'Contains New OOR Values (modified version)
    DOOR = Range(ws.Cells(1, 1), ws.Cells(ER, 3))       'Contains PO-LineItem and PlantCode
    
    'Change layout and add in formulas
    For rw = 1 To ER
        DOOR(rw, 1) = OOOR(rw, 5) & "-" & OOOR(rw, 6)       'DOOR Column 1 is PO-LineItem from OOOR
        NOOR(rw, 5) = OOOR(rw, 5) & "-" & OOOR(rw, 6)       'NOOR Column 5 Is PO-LineItem from OOOR
        NOOR(rw, 6) = OOOR(rw, 7)                           'Shifting all columns on to left as LineItem is no longer used- OOR(7) is PGr
        NOOR(rw, 7) = OOOR(rw, 25)                          'PGr Description
        NOOR(rw, 8) = OOOR(rw, 8)
        NOOR(rw, 9) = OOOR(rw, 9)
        NOOR(rw, 10) = OOOR(rw, 10)
        NOOR(rw, 11) = OOOR(rw, 11)         'Stat.Date
        NOOR(rw, 12) = OOOR(rw, 12)         'Conf.Date
        DOOR(rw, 2) = OOOR(rw, 13)
        NOOR(rw, 13) = "=IF(RC[-1]-TODAY()<-10000," & Chr(34) & "N/A" & Chr(34) & ",RC[-1]-TODAY())"                                        'Confirmed Date - Today()
        NOOR(rw, 14) = OOOR(rw, 14)         'MRP Date
        NOOR(rw, 15) = "=IF(RC[-1]-TODAY()<-10000," & Chr(34) & Chr(34) & ",IF(RC[-3]<>0,RC[-1]-RC[-3]," & Chr(34) & "XX" & Chr(34) & "))"  'MRP Date - Conf.date
        NOOR(rw, 16) = OOOR(rw, 15)
        NOOR(rw, 17) = OOOR(rw, 16)
        NOOR(rw, 18) = OOOR(rw, 17)
        NOOR(rw, 19) = OOOR(rw, 18)
        NOOR(rw, 20) = ""                   'Add open space for input
        NOOR(rw, 21) = ""                   'Add open space for input
        NOOR(rw, 22) = ""                   'Add open space for input
        NOOR(rw, 23) = OOOR(rw, 19)         'Delivery Text
        NOOR(rw, 24) = OOOR(rw, 20)         'PO Ex Msg Text
        NOOR(rw, 25) = OOOR(rw, 23)         'MRP EX MSG added in ver2.
        NOOR(rw, 26) = OOOR(rw, 21)         'VIM
        NOOR(rw, 27) = OOOR(rw, 22)         'Requsitioner
        NOOR(rw, 28) = OOOR(rw, 24)         'P.Org Column added in ver2.
        NOOR(rw, 29) = OOOR(rw, 27)         'Confirmed / Not confirmed PO ID (1/0)
        DOOR(rw, 3) = OOOR(rw, 26)          'Item Text
    Next rw
    
    'Insert array back into range
    Range(ws.Cells(1, 1), ws.Cells(ER, 29)) = NOOR                                                      'Export array to Sheet "ZRTc_PO_EXPED"
    Dim CtrlPODocCol, CtrlSchLineCol As Long
    Dim CtrlItemText As String
    CtrlPODocCol = ws2.[TblController[Purchasing Document-Item]].Column
    CtrlSchLineCol = ws2.[TblController[Sch.Line Delv.Date]].Column
    CtrlItemText = ws2.[TblController[Item Text]].Column
    
    Range(ws2.Cells(1, ws2.[TblController[Purchasing Document-Item]].Column), ws2.Cells(ER, ws2.[TblController[Item Text]].Column)) = DOOR  'Export array to Sheet "Controller"
    
'***************************************
' Old Tidy_2 starts here
' Checked 25.10.17 - Works -RAJ
' Format Data as Table and fix formating
'***************************************
    wb.Activate
    
    'Push Standard Header Name into all Header Cells
    Sheets("ZRTC_PO_EXPED").Cells(1, 1) = "I"
    Sheets("ZRTC_PO_EXPED").Cells(1, 2) = "Plant"
    Sheets("ZRTC_PO_EXPED").Cells(1, 3) = "Vendor"
    Sheets("ZRTC_PO_EXPED").Cells(1, 4) = "Vendor Name"
    Sheets("ZRTC_PO_EXPED").Cells(1, 5) = "Purch.Doc.-Item"
    Sheets("ZRTC_PO_EXPED").Cells(1, 6) = "PGr"
    Sheets("ZRTC_PO_EXPED").Cells(1, 7) = "PGr Description"
    Sheets("ZRTC_PO_EXPED").Cells(1, 8) = "Material"
    Sheets("ZRTC_PO_EXPED").Cells(1, 9) = "Material Description"
    Sheets("ZRTC_PO_EXPED").Cells(1, 10) = "Doc. Date"
    Sheets("ZRTC_PO_EXPED").Cells(1, 11) = "Stat.Delv."
    Sheets("ZRTC_PO_EXPED").Cells(1, 12) = "Conf Del D"
    Sheets("ZRTC_PO_EXPED").Cells(1, 13) = "Days Due"
    Sheets("ZRTC_PO_EXPED").Cells(1, 14) = "Resch.date"
    Sheets("ZRTC_PO_EXPED").Cells(1, 15) = "Days to MRP"
    Sheets("ZRTC_PO_EXPED").Cells(1, 16) = "Open Qty"
    Sheets("ZRTC_PO_EXPED").Cells(1, 17) = "Order Qty"
    Sheets("ZRTC_PO_EXPED").Cells(1, 18) = "Net Price"
    Sheets("ZRTC_PO_EXPED").Cells(1, 19) = "Crcy"
    Sheets("ZRTC_PO_EXPED").Cells(1, 20) = "Total Price (USD)"
    Sheets("ZRTC_PO_EXPED").Cells(1, 21) = "New Conf.Date"
    Sheets("ZRTC_PO_EXPED").Cells(1, 22) = "New Status"
    Sheets("ZRTC_PO_EXPED").Cells(1, 23) = "Delivery Text"
    Sheets("ZRTC_PO_EXPED").Cells(1, 24) = "PO Exception Message"
    Sheets("ZRTC_PO_EXPED").Cells(1, 25) = "MRP Exception Message"
    Sheets("ZRTC_PO_EXPED").Cells(1, 26) = "VIM Work I"
    Sheets("ZRTC_PO_EXPED").Cells(1, 27) = "Requisitioner Name"
    Sheets("ZRTC_PO_EXPED").Cells(1, 28) = "P.Org"
    Sheets("ZRTC_PO_EXPED").Cells(1, 29) = "Confirmed PO"

    'Prepare further processing.Define Table Area
    ws.Select
    ER = ws.Cells(Rows.Count, 2).End(xlUp).Row                                                                  'End row calculation for report sheet column 2
    ActiveSheet.ListObjects.Add(xlSrcRange, Range(Cells(1, 1), Cells(ER, 29)), , xlYes).Name = "OOR_Report"     'Format data as ExcelTable with Name OOR_Report
    
    'Set equal row height in all of table OOR_Report
    Range("OOR_Report").RowHeight = 15
    
    'Format Columns with Numbers
    'Note: Custom Number Format reads "," as the grouping symbol and "." as the decimal seperator regardless of Regional settings on Computer
    Columns(13).NumberFormat = "0"              'Days Due
    Columns(15).NumberFormat = "0"              'Days to MRP
    Columns(16).NumberFormat = "#,##0.00"       'Open Qty   (changed from "#,##0.000" due to 1000 mix up).
    Columns(17).NumberFormat = "#,##0.00"       'Order Qty  (changed from "#,##0.000" due to 1000 mix up).
    Columns(18).NumberFormat = "#,##0.00"       'Net Price
    Columns(20).NumberFormat = "#,##0.00"       'Total Price (USD)
    Columns(29).NumberFormat = "0"              'Confirmed ID
    'Columns(19).EntireColumn.Select: Selection.NumberFormat = ws2.Cells(ws2.[TblController[DataType]].Find(What:="Number Layout").Row, 2).Text
    
    'Setup of decimals
    Dim DeciRefID As Range       'Used for returning Range(row) of Reference
    Dim DeciRefRow As String     'Used for collecting row number from above Range
    
    'Find Tabel row of DataType
    Set DeciRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="SAP N format")
    DeciRefRow = DeciRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    'Format Open Qty and Order Qty to text to avoid issues on qty with a factor of thousand
    'ThisWorkbook.Sheets("ZRTC_PO_EXPED").Columns("P:Q").Select
    'Selection.NumberFormat = "@"
    
    'Format Columns with Text
    'Note: ONly text formating, not backgrounds or conditional formating
    Columns("V:X").EntireColumn.Select
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlTop
        .WrapText = True
    End With
    
    'Center Headers for Material Description, New Status, Delivery Text and PO Exception Message columns
    ws.Cells(1, 9).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    ws.Cells(1, 22).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    
    ws.Cells(1, 23).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    
    ws.Cells(1, 24).Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
        
    'Auto Spread/witdh to all columns
    Cells.Select                                'Selects all cells in sheet
    Cells.EntireColumn.AutoFit
    
    
    'Additional Column formating
    Sheets("ZRTC_PO_EXPED").Select
    
    'Center Selected Columns
    Columns("A:B").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    Columns("F:F").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    ActiveWindow.SmallScroll ToRight:=2
    
    Columns("G:I").Select
    With Selection
        .HorizontalAlignment = xlLeft
    End With

    Columns("J:Q").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'Tidy Column headers
    Rows("1:1").Select
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Selection.RowHeight = 33
    
    
    'Manually control column width
    Columns(1).ColumnWidth = 2
    Columns(2).ColumnWidth = 6
    Columns(3).ColumnWidth = 9
    Columns(4).ColumnWidth = 35
    Columns(5).ColumnWidth = 14
    Columns(6).ColumnWidth = 6
    Columns(7).ColumnWidth = 16            'PGr Description
    Columns(8).ColumnWidth = 14
    Columns(9).ColumnWidth = 32             'Material description
    Columns(10).ColumnWidth = 12
    Columns(11).ColumnWidth = 12
    Columns(12).ColumnWidth = 12
    Columns(13).ColumnWidth = 6
    Columns(14).ColumnWidth = 12
    Columns(15).ColumnWidth = 6
    Columns(16).ColumnWidth = 6
    Columns(17).ColumnWidth = 6
    Columns(18).ColumnWidth = 11            'Net Price
    Columns(19).ColumnWidth = 6
    Columns(20).ColumnWidth = 11            'Total Price (USD)
    Columns(21).ColumnWidth = 12            'New Conf.Date
    Columns(22).ColumnWidth = 45            'New Status
    Columns(23).ColumnWidth = 40            'Delivery Text
    Columns(24).ColumnWidth = 40            'PO Ex Msg Text
    Columns(25).ColumnWidth = 16            'MRP ex Msg Text
    Columns(26).ColumnWidth = 12            'VIM
    Columns(27).ColumnWidth = 24            'Requsitioner Name
    Columns(28).ColumnWidth = 7
    Columns(29).ColumnWidth = 7
    
End Sub


Sub FormatDates()
'' Checked 25.10.17 - Works -RAJ
'' Updated with relative references to Controller tab 07.02.2019 - FH
' ----------------------------------------------------------------
' Fuction: Sets up the Date Formats for the Macro (it formats to the orginal date set in SAP then converts to chosen layout in Excel
'-----------------------------------------------------------------
    Dim ER, e, ws1 As Worksheet
    Dim a As Variant
    Dim Rng As Variant
    Dim c As Variant
    Dim d, t As String
    
    
    ER = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(Rows.Count, 2).End(xlUp).Row ' end row calculation for QM10 sheet column 1
    Set ws1 = ThisWorkbook.Sheets("ZRTC_PO_EXPED")
    ws1.Select
    
    Dim DateRefID As Range       'Used for returning Range(row) of Reference
    Dim DateRefRow As String     'Used for collecting row number from above Range
    
    'Find Tabel row of DataType
    Set DateRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Date Layout Wanted")
    DateRefRow = DateRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    'Identifying "e-value" based on country code and date format
    If Application.International(xlCountrySetting) = "49" Then              '49 equals Germany
        If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow).Text = "dd/mm/yyyy" Then e = 1
        If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow).Text = "mm/dd/yyyy" Then e = 2
        If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow).Text = "yyyy/mm/dd" Then e = 5
    Else
    'If Application.International(xlDecimalSeparator) = "." Then
        If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow).Text = "dd/mm/yyyy" Then e = 4
        If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow).Text = "mm/dd/yyyy" Then e = 3
        If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow).Text = "yyyy/mm/dd" Then e = 5
    End If
    
    a = Application.International(xlCountrySetting)


'Are these really needed ?? (FH - commented out 2019.03.08)
''    'Doc. Date column
''    Columns(9).Select
''    Selection.TextToColumns Destination:=Range("I1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, e), TrailingMinusNumbers:=True
''
''    'Stat. Date column
''    Columns(10).Select
''    Selection.TextToColumns Destination:=Range("J1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, e), TrailingMinusNumbers:=True
''
''    'Conf. Delivery Date column
''    Columns(11).Select
''    Selection.TextToColumns Destination:=Range("K1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, e), TrailingMinusNumbers:=True
''
''    '(MRP) Reschedule date column
''    Columns(13).Select
''    Selection.TextToColumns Destination:=Range("M1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, e), TrailingMinusNumbers:=True
    
    'Stat. and Conf Date columns
    Range(ws1.Cells(2, 10), ws1.Cells(ER, 12)).Select
        Selection.NumberFormat = Sheets("Controller").Cells(DateRefRow + 1, 2)
    
    '(MRP) Reschedule Date column
    Range(ws1.Cells(2, 14), ws1.Cells(ER, 14)).Select
        Selection.NumberFormat = Sheets("Controller").Cells(DateRefRow + 1, 2)

'Not required with xlsx import format
''    'Range handles Doc Date, Stat.Date and Conf. Del Date
''    Set Rng = Range(Cells(2, 9), Cells(ER, 11))
''    For Each c In Rng.Cells
''        If c.Value <> "" Then c.Value = CDate(c.Value)
''    Next c
''
''    'Range handles (MRP) Rescheduel Date
''    Set Rng = Range(Cells(2, 13), Cells(ER, 13))
''    For Each c In Rng.Cells
''        If c.Value <> "" Then c.Value = CDate(c.Value)
''    Next c
        
'Duplicate from above
''    'Range handles Doc Date, Stat.Date and Conf. Del Date
''    Range(ws1.Cells(2, 9), ws1.Cells(ER, 11)).Select
''        Selection.NumberFormat = Sheets("Controller").Cells(12, 2)
''
''    'Range handles (MRP) Rescheduel Date
''    Range(ws1.Cells(2, 13), ws1.Cells(ER, 13)).Select
''        Selection.NumberFormat = Sheets("Controller").Cells(12, 2)
    

        
        
'Are these really needed ?? (FH - commented out 2019.03.08)
''    'Checking system setting vs. app settings provided and assign d and t if not aligned.
''    If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DeciRefRow).Text = "1,234,567.89" And Application.International(xlDecimalSeparator) = "." And Application.International(xlThousandsSeparator) = "," Then
''        Exit Sub
''    ElseIf ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DeciRefRow).Text = "1,234,567.89" Then
''        d = "."
''        t = ","
''    End If
''    If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DeciRefRow).Text = "1 234 567,89" And Application.International(xlDecimalSeparator) = "," And Application.International(xlThousandsSeparator) = " " Then
''        Exit Sub
''    ElseIf ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DeciRefRow).Text = "1 234 567,89" Then
''        d = ","
''        t = " "
''    End If
''    If ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DeciRefRow).Text = "1.234.567,89" And Application.International(xlDecimalSeparator) = "," And Application.International(xlThousandsSeparator) = "." Then
''        Exit Sub
''    ElseIf ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DeciRefRow).Text = "1.234.567,89" Then
''        d = ","
''        t = "."
''    End If
''
''    'Open Qty
''    Columns(15).Select
''    Selection.TextToColumns Destination:=Range("O1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, 1), DecimalSeparator:=d, ThousandsSeparator:=t, _
''        TrailingMinusNumbers:=True
''
''    'Order Qty
''    Columns(16).Select
''    Selection.TextToColumns Destination:=Range("P1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, 1), DecimalSeparator:=d, ThousandsSeparator:=t, _
''        TrailingMinusNumbers:=True
''
''    'Net Price
''    Columns(17).Select
''    Selection.TextToColumns Destination:=Range("Q1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, 1), DecimalSeparator:=d, ThousandsSeparator:=t, _
''        TrailingMinusNumbers:=True
''
''    'Price USD
''    Columns(18).Select
''    Selection.TextToColumns Destination:=Range("Q1"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, 1), DecimalSeparator:=d, ThousandsSeparator:=t, _
''        TrailingMinusNumbers:=True

    'Find Tabel row of DataType
''    Dim DateRefID As Range
''    Dim DateRefRow As Long
        
    Set DateRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Date Layout Wanted")
    DateRefRow = DateRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    Range("OOR_Report[New Conf.Date]").NumberFormat = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow)

End Sub
 
 
Sub ColorFormat()
' added after review with Matt D - calculates number of confirmed and cancelled looking at colours set up in cells
    Dim ER, rw As Long

    '---------------------------------------------------
    ' Add in conditional formatting
    '--------------------------------------------------

    'Create colour scale to Reports
    '.Color = 5287756       'Green
    '.Color = 3792077       'Lime
    '.Color = 508415        'Amber/Yellow
    '.Color = 3556340       'Red
    '.Color = 9664346       'Blue Grey Background
    '.Color = vbBlack       'Black
    '.Color = vbWhite       'White
    
    'Create colour scale for "Days Due" Columns
    Range("OOR_Report[Days to MRP]").Select
    Selection.FormatConditions.AddColorScale ColorScaleType:=3
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    Selection.FormatConditions(1).ColorScaleCriteria(1).Type = xlConditionValueNumber
    Selection.FormatConditions(1).ColorScaleCriteria(1).Value = -3
    With Selection.FormatConditions(1).ColorScaleCriteria(1).FormatColor
        .Color = 3556340    'Red
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).ColorScaleCriteria(2).Type = xlConditionValueNumber
    Selection.FormatConditions(1).ColorScaleCriteria(2).Value = 0
    With Selection.FormatConditions(1).ColorScaleCriteria(2).FormatColor
        .Color = 5287756    'Green
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).ColorScaleCriteria(3).Type = xlConditionValueNumber
    Selection.FormatConditions(1).ColorScaleCriteria(3).Value = 45
    With Selection.FormatConditions(1).ColorScaleCriteria(3).FormatColor
        .Color = 508415     'Amber/Yellow
        .TintAndShade = 0
    End With
    

    Range("OOR_Report[Days Due]").Select
    Selection.FormatConditions.AddColorScale ColorScaleType:=3
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    Selection.FormatConditions(1).ColorScaleCriteria(1).Type = xlConditionValueNumber
    Selection.FormatConditions(1).ColorScaleCriteria(1).Value = -3                               'If value less than value
    With Selection.FormatConditions(1).ColorScaleCriteria(1).FormatColor
        .Color = 3556340    'Red
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).ColorScaleCriteria(2).Type = xlConditionValueNumber
    Selection.FormatConditions(1).ColorScaleCriteria(2).Value = 0                              'If value less than this but above Crit(1) value
    With Selection.FormatConditions(1).ColorScaleCriteria(2).FormatColor
        .Color = 508415     'Amber/Yellow
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).ColorScaleCriteria(3).Type = xlConditionValueNumber
    Selection.FormatConditions(1).ColorScaleCriteria(3).Value = 45                              'If value less than this but above Crit(1) value
    With Selection.FormatConditions(1).ColorScaleCriteria(3).FormatColor
        .Color = 5287756    'Green
        .TintAndShade = 0
    End With
    
    '****************************************************************************
    'Formattign with formulas depending on List separator dictating formula setup
    
    If ListSep = "," Then
        'Formlas with "," as list separator
    
        'Create colour coding on "Stat.Delv." for late to contract or early
        '*** Inserted in reverse order of priority ***
        Range("OOR_Report[Stat.Delv.]").Select
            
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($K2<=$N2,1,0)"                    'Green if Stat. Delv <= Resch.date
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 5287756    'Green
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($K2<TODAY()-3,1,0)"               'Red if Stat. Delv > Today + 3
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 508415     'Amber/Yellow
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = True
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($K2<$L2,1,0)"                     'Red if Stat. Delv <= Conf. Del D
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 508415     'Amber/Yellow
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
         
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($Y2=""Cancel process"",1,0)"      'Black if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        'Create colour coding on "Conf Del D" for late to contract or early
        '*** Inserted in reverse order of priority ***
        Range("OOR_Report[Conf Del D]").Select
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($L2<=$K2,1,0)"                     'Red if Stat. Delv < Conf. Del D
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 5287756    'Green
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($N2<$L2,IF($N2="""",0,1),0)"        'Red if Conf Del D > Resch.date
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 508415     'Amber/Yellow
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($L2<TODAY()-3,1,0)"               'Red if Stat. Delv > Today + 3
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 3556340    'Red
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF(Left($E2,2)=""47"",1,0)"          'Blue-Grey if Intercompany (Conf. date not valid/blank)
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 9664346                            'Blue Grey Background
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = True
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($AC2=0,1,0)"                    'Black if not confirmed"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        With Selection.FormatConditions(1).Font
            .Color = vbWhite                            'White
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($Y2=""Cancel process"",1,0)"      'Black if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        With Selection.FormatConditions(1).Font
            .Color = vbWhite                            'White
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        'Create colour coding on "Resch. Date" for late to contract or early
        '*** Inserted in reverse order of priority ***
        Range("OOR_Report[Resch.date]").Select
            
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($N2<TODAY()-3,1,0)"             'Red if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 3556340    'Red
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($N2="""",1,0)"                    'Transparent if ""
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Font
            'Do Nothing - Transparent without overwriting table color scheme.
        End With
        Selection.FormatConditions(1).StopIfTrue = True
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($Y2=""Cancel process"",1,0)"    'Black if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = True

    Else
        'Formulas with ";" as List separator
        'Create colour coding on "Stat.Delv." for late to contract or early
        '*** Inserted in reverse order of priority ***
        Range("OOR_Report[Stat.Delv.]").Select
            
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($K2<=$N2;1;0)"                    'Green if Stat. Delv <= Resch.date
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 5287756    'Green
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($K2<TODAY()-3;1;0)"               'Red if Stat. Delv > Today + 3
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 508415     'Amber/Yellow
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = True
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($K2<$L2;1;0)"                     'Red if Stat. Delv <= Conf. Del D
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 508415     'Amber/Yellow
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
         
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($Y2=""Cancel process"";1;0)"      'Black if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        'Create colour coding on "Conf Del D" for late to contract or early
        '*** Inserted in reverse order of priority ***
        Range("OOR_Report[Conf Del D]").Select
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($L2<=$K2;1;0)"                     'Red if Stat. Delv < Conf. Del D
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 5287756    'Green
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($N2<$L2;IF($N2="""";0;1);0)"        'Red if Conf Del D > Resch.date
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 508415     'Amber/Yellow
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($L2<TODAY()-3;1;0)"               'Red if Stat. Delv > Today + 3
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 3556340    'Red
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF(Left($E2;2)=""47"";1;0)"          'Blue-Grey if Intercompany (Conf. date not valid/blank)
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 9664346                            'Blue Grey Background
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = True
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($AC2=0;1;0)"                    'Black if not confirmed"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        With Selection.FormatConditions(1).Font
            .Color = vbWhite                            'White
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($Y2=""Cancel process"";1;0)"      'Black if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        With Selection.FormatConditions(1).Font
            .Color = vbWhite                            'White
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
    
        'Create colour coding on "Resch. Date" for late to contract or early
        '*** Inserted in reverse order of priority ***
        Range("OOR_Report[Resch.date]").Select
            
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($N2<TODAY()-3;1;0)"             'Red if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = 3556340    'Red
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = False
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($N2="""";1;0)"                    'Transparent if ""
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Font
            'Do Nothing - Transparent without overwriting table color scheme.
        End With
        Selection.FormatConditions(1).StopIfTrue = True
        
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=IF($Y2=""Cancel process"";1;0)"    'Black if Cancel Process"
        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
        With Selection.FormatConditions(1).Interior
            .Color = vbBlack                            'Black
            .TintAndShade = 0
        End With
        Selection.FormatConditions(1).StopIfTrue = True

        
    End If
    
    'End list separator dependet conditional formatting
    '**************************************************
    
    '*** Change Header Color ***
    Range("OOR_Report[I]").Select                           'Nedded to release previouse selection
    Range("OOR_Report[[#Headers],[I]]").Select
    Range(Selection, Selection.End(xlToRight)).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 13987603    'Voss Blue R: 19, G: 111, B: 213
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
        
    '*** Table Font Setup ***
    
    Range("OOR_Report[[#Headers],[I]]").Select
    ActiveCell.EntireColumn.Select                      'Replaces "xlDown" as this stops when a blank appears in the column. This however selects the whole column, also outside table.
    Range(Selection, Selection.End(xlToRight)).Select
    'Range(Selection, Selection.End(xlDown)).Select     'See comment above
    With Selection.Font
        .Name = "Arial Narrow"
        .Size = 10
        .Bold = False
    End With
        
    Range("OOR_Report[[#Headers],[I]]").Select
    Range(Selection, Selection.End(xlToRight)).Select
    With Selection.Font
        .Bold = True
    End With
    
    
    'Add color to "New Status" column
    Range("OOR_Report[New Status]").Interior.Color = 10092543
    
    'Conditional formatting of "New Conf. Date"
    Range("OOR_Report[New Conf.Date]").Select
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$L2<$U2"
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent6       'Orange
        .TintAndShade = 0.599993896298105
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$L2>$U2"
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorAccent4       'Purple
        .TintAndShade = 0.599993896298105
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$U2=" & Chr(34) & Chr(34)
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 10092543                       'Yellow
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
    On Error GoTo NorwegianIssue 'Changes formula if error. Replaces "," with ";" in formula.
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=AND($U2>=($L2-14),$U2<=($L2+4))"
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 10092543                       'Yellow
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
NorwegianIssue:
    If Err.Number <> 0 Then
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=AND($U2>=($L2-14);$U2<=($L2+4))"
        Err.Clear
        Resume Next
    End If
    
End Sub

 
Sub Overview_setup()
' Checked 25.10.2017 - RAJ
' Set up the overview page with formulas
' Rechecked Column header so there is no issue
    
    Dim vResult As Long
    Dim vResultt As Long
    Dim ER As Long
    Dim rw As Long
    
 
    ThisWorkbook.Sheets("Overview").Select

    ' Add quantity overview - entering formulaes into sheet
    Range("B4").Select
    ActiveCell.Formula = "=SUMIF(OOR_Report[Days Due],""<""&-3, OOR_Report[Open Qty])"    'OLD: "=SUMIF(OOR_Report[Days Due]," & Chr(34) & "<" & Chr(34) & "&-3, OOR_Report[Open Qty])"
    
''    Application.DisplayAlerts = True
''    Application.EnableEvents = True
''    Application.Visible = True
    Range("C4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY()),DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY()),DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("D4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+1,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+1,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("E4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+2,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+2,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("F4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+3,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+3,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("G4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+4,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+4,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("H4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+5,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+5,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("I4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+6,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+6,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("J4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+7,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+7,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("K4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+8,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+8,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("L4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+9,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+9,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("M4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+10,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+10,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
    Range("N4").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+11,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+11,DAY(TODAY())))))*(OOR_Report[Open Qty]))"
     
    ' Add price overview - entering formulaes into sheet
    Range("B8").Select
    ActiveCell.Formula = "=SUMIF(OOR_Report[Days Due],""<""&-3, OOR_Report[Total Price (USD)])"     'OLD    "=SUMIF(OOR_Report[Days Due]," & Chr(34) & "<" & Chr(34) & "&-3,OOR_Report[Total Price (USD)])"
    Range("C8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY()),DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY()),DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("D8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+1,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+1,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("E8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+2,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+2,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("F8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+3,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+3,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("G8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+4,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+4,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("H8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+5,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+5,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("I8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+6,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+6,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("J8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+7,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+7,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("K8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+8,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+8,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("L8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+9,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+9,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("M8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+10,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+10,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    Range("N8").Select
    ActiveCell.Formula = "=SUMPRODUCT((MONTH(OOR_Report[Conf Del D])=(MONTH(DATE(YEAR(TODAY()),MONTH(TODAY())+11,DAY(TODAY()))))) *  (YEAR(OOR_Report[Conf Del D])=(YEAR(DATE(YEAR(TODAY()),MONTH(TODAY())+11,DAY(TODAY()))))) *(OOR_Report[Total Price (USD)]))"
    ' Change format of currency
    Range("B8:O8").Select
    
        
    ' Setup of decimals
    Dim CurrRefID As Range       'Used for returning Range(row) of Reference
    Dim CurrRefRow As String     'Used for collecting row number from above Range
    
    'Find Tabel row of DataType
    Set CurrRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Number Layout")
    CurrRefRow = CurrRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    Selection.NumberFormat = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(CurrRefRow)


    'Add total calcs
    Range("O4").Select
    ActiveCell.Formula = "=SUMIF((OOR_Report[Conf Del D]),"">""&EOMONTH(TODAY(),11),(OOR_Report[Open Qty]))"
    Range("O8").Select
    ActiveCell.Formula = "=SUMIF((OOR_Report[Conf Del D]),"">""&EOMONTH(TODAY(),11),(OOR_Report[Total Price (USD)]))"

    
    ' Add info on dates against MRP
    Range("R3").Select
    ActiveCell.Formula = "=COUNTIF((OOR_Report[Days to MRP]),"">30"")"
    Range("R4").Select
    ActiveCell.Formula = "=COUNTIF((OOR_Report[Days to MRP]),""<-7"")"
    Range("R5").Select
    ActiveCell.Formula = "=R12"
    
    ER = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(Rows.Count, 2).End(xlUp).Row ' end row calculation for QM10 sheet column 1

    ' Tranfer equation across to calc late to stat
    Range(Sheets("Overview").Cells(2, 20), Sheets("Overview").Cells(ER, 20)).Formula = "=OOR_Report[@[Stat.Delv.]]-OOR_Report[@[Conf Del D]]"

    ' Add formulas for late to stat
    Range("R9").Select
    ActiveCell.Formula = "=COUNTIF(T:T,"">=""&-3)"
    Range("R10").Select
    ActiveCell.Formula = "=COUNTIF(T:T,"">14"" )"
    Range("R11").Select
    ActiveCell.Formula = "=COUNTIF(T:T,""<-3"")"
    Range("R12").Select
    ActiveCell.Formula = "=COUNT(T:T)"
    Range("R15").Select
    ActiveCell.Formula = "=COUNTIF(OOR_Report[Days Due],""<""&-3)"
    
    Range("R16").Select
    ActiveCell.Formula = "=COUNTIF(OOR_Report[Confirmed PO],0)"
    Range("R17").Select
    ActiveCell.Formula = "=COUNTIF(OOR_Report[MRP Exception Message],""Cancel process"")"
    
''    vResult = 0: vResultt = 0
''    For rw = 2 To ER
''        If ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(rw, 11).Interior.ColorIndex = ThisWorkbook.Sheets("Overview").Cells(16, 18).Interior.ColorIndex Then
''            vResult = vResult + 1       'Number of Conf.Dates with red'ish color
''        End If
''        If ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(rw, 11).Interior.ColorIndex = ThisWorkbook.Sheets("Overview").Cells(17, 18).Interior.ColorIndex Then
''            vResultt = vResultt + 1     'Number of Conf.Dates with black color
''        End If
''    Next rw
''
''    ThisWorkbook.Sheets("Overview").Cells(16, 18) = vResult
''    ThisWorkbook.Sheets("Overview").Cells(17, 18) = vResultt
    
    'Split Overview Pivot CashIndex from OTD Analysis Pivot CashIndex
    ThisWorkbook.Sheets("Pivotter").Activate
    ThisWorkbook.Sheets("Pivotter").Range("AI2").Select
    Call SelPTNewCache
    ThisWorkbook.Sheets("Pivotter").Activate
    ActiveSheet.PivotTables("PivotTableDD").PivotCache.Refresh
    'Set PivotUSD CacheIndex = PivotDD CacheIndex
    ThisWorkbook.Sheets("Pivotter").Range("AR2").Select
    ActiveCell.PivotTable.CacheIndex = ActiveSheet.PivotTables("PivotTableDD").CacheIndex
    ActiveSheet.PivotTables("PivotTableUSD").PivotCache.Refresh
    
    
    ThisWorkbook.Sheets("Overview").Activate
    ThisWorkbook.Sheets("Overview").Cells(1, 1).Select      'Set focus top left corner

End Sub

Sub CheckBox1_Click()
    'SubProcedure for Overview sheet CheckBox toggeling On Time Delivery Lines to include or exclude Early Deliveries
    
    Application.ScreenUpdating = False
    
    If ActiveSheet.CheckBoxes("Check Box 1").Value = 1 Then
        Range("R10").Select
        ActiveCell.FormulaR1C1 = "N/A"
        Range("S10").Select
        ActiveCell.FormulaR1C1 = "N/A"
        Range("R9").Select
        ActiveCell.FormulaR1C1 = "=COUNT(C[2])-R[2]C"
    Else
        Range("R10").Select
        ActiveCell.FormulaR1C1 = "=COUNTIF(C[2],"">14"" )"
        Range("S10").Select
        ActiveCell.FormulaR1C1 = "=RC[-1]/R[2]C[-1]"
        Range("R9").Select
        ActiveCell.FormulaR1C1 = "=COUNT(C[2])-R[2]C-R[1]C"
    End If
    Application.ScreenUpdating = True
End Sub

 
Sub AnalysisMc()
    '07.03.2019 - Update for "Option Explicit" - FH
    '25.10.2017 - Checked - Passed - RAJ
    'Used to create information needed for pivot tables and to refresh all data to make sure it works
    
    Application.DisplayAlerts = False
    Application.AlertBeforeOverwriting = False
    Application.ScreenUpdating = False
    
    Dim nme As Name
    Dim i As Long
    Dim a As Long
    Dim ER As Long, EC As Long
    
    
    ThisWorkbook.Worksheets("ZRTC_PO_EXPED").Select
    
    On Error Resume Next

    'Shows pivot table
    Sheets("Analysis").Visible = True
    Sheets("ZRTC_PO_EXPED").Select

    'Create new columns
    ER = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(Rows.Count, 2).End(xlUp).Row                'end row calculation for sheet column 2
    EC = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(1, Columns.Count).End(xlToLeft).Column      'end coloumn calculation for sheet row 1
    Cells(1, EC + 1).Value = "Early to Stat Date"
    Cells(1, EC + 2).Value = "Late to Stat Date"
    Cells(1, EC + 3).Value = "On Time to Stat Date"
    Cells(1, EC + 4).Value = "Early to MRP"
    Cells(1, EC + 5).Value = "Late to MRP"
    Cells(1, EC + 6).Value = "On Time to MRP"

    'Populates columns
    Range(Cells(2, EC + 1), Cells(ER, EC + 1)).FormulaR1C1 = "=IFERROR(IF([@[Conf Del D]]<>0,IF([@[Stat.Delv.]]-Today()>14,1,0),""""),"""")" ' Org - Cur Date
    Range(Cells(2, EC + 2), Cells(ER, EC + 2)).FormulaR1C1 = "=IFERROR(IF([@[Conf Del D]]<>0,IF([@[Stat.Delv.]]-Today()<-3,1,0),""""),"""")"
    Range(Cells(2, EC + 3), Cells(ER, EC + 3)).FormulaR1C1 = "=IF([@[Early to Stat Date]]=0,IF([@[Late to Stat Date]]=0,1,""""),"""")"
    Range(Cells(2, EC + 4), Cells(ER, EC + 4)).FormulaR1C1 = "=IFERROR(IF([@[Resch.date]]<>0,IF([@[Days to MRP]]>30,1,0),""""),"""")" ' MRP - Cur Date
    Range(Cells(2, EC + 5), Cells(ER, EC + 5)).FormulaR1C1 = "=IFERROR(IF([@[Resch.date]]<>0,IF([@[Days to MRP]]<-3,1,0),""""),"""")"
    Range(Cells(2, EC + 6), Cells(ER, EC + 6)).FormulaR1C1 = "=IF(AND([@[Early to MRP]]="""",[@[Late to MRP]]=""""),IF([@[MRP Exception Message]]="""",1,""""),"""")"
    
    
''    Range(Sheets("Overview").Cells(2, 20), Sheets("Overview").Cells(ER, 20)).FormulaR1C1 = "=OOR_Report[@[Stat.Delv.]]-OOR_Report[@[Conf Del D]]"
   
'    ActiveWorkbook.Names.Add Name:="OOR_Report", RefersToR1C1:= "=OFFSET('ZRTC_PO_EXPED'!R1C1,0,0,COUNTA('ZRTC_PO_EXPED'!A1),COUNTA('OZRTC_PO_EXPED'!AE1))"
'    ActiveWorkbook.Names("OOR_Report").Comment = ""
    
    'Go to graph table
    Sheets("Analysis").Select
    
    'Add vendor to report sheet if only single vendor, else misc
    ER = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(Rows.Count, 2).End(xlUp).Row ' end row calculation for QM10 sheet column 1
    For a = 3 To ER
        If ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(2, 3).Value <> ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 3).Value Then
            ActiveSheet.Shapes.Range(Array("TextBox 4")).Select
            Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Vendor: Misc"
            a = ER
        Else
            ActiveSheet.Shapes.Range(Array("TextBox 4")).Select
            Selection.ShapeRange(1).TextFrame2.TextRange.Characters.Text = "Vendor: " & ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(2, 4).Value
        End If
    Next a
    
    'Hide Pivot data required
    Sheets("ZRTC_PO_EXPED").Select
    Columns(EC + 1).EntireColumn.Hidden = True
    Columns(EC + 2).EntireColumn.Hidden = True
    Columns(EC + 3).EntireColumn.Hidden = True
    Columns(EC + 4).EntireColumn.Hidden = True
    Columns(EC + 5).EntireColumn.Hidden = True
    Columns(EC + 6).EntireColumn.Hidden = True
    Sheets("ZRTC_PO_EXPED").Cells(1, 1).Select
    
    Sheets("Analysis").Select
    ActiveWorkbook.RefreshAll
    ActiveWorkbook.RefreshAll
    Sheets("Pivotter").Visible = True
    ActiveSheet.PivotTables("PivotTable2").PivotSelect "'Conf Del D'[All]", xlLabelOnly, xlFirstRow, True
    Sheets("Pivotter").Range("B14").Select
    Selection.Group Start:=True, End:=True, Periods:=Array(False, False, False, False, True, False, True)
    
    Sheets("Analysis").Select
'    ActiveSheet.ChartObjects("Chart 14").Activate
'    ActiveChart.Axes(xlValue, xlSecondary).Select
'    ActiveChart.Axes(xlValue, xlSecondary).MaximumScale = 1
'    ActiveSheet.ChartObjects("Chart 15").Activate
'    ActiveChart.Axes(xlValue, xlSecondary).Select
'    ActiveChart.Axes(xlValue, xlSecondary).MaximumScale = 1
'    ActiveSheet.ChartObjects("Chart 18").Activate
'    ActiveChart.Axes(xlValue, xlSecondary).Select
'    ActiveChart.Axes(xlValue, xlSecondary).MaximumScale = 1
'    ActiveSheet.ChartObjects("Chart 17").Activate
'    ActiveChart.Axes(xlValue, xlSecondary).Select
'    ActiveChart.Axes(xlValue, xlSecondary).MaximumScale = 1
    
    Sheets("Pivotter").Visible = False
    
    
    'Refresh everything
    ActiveWorkbook.RefreshAll
    
    Application.DisplayAlerts = True
    Application.AlertBeforeOverwriting = True
    Application.ScreenUpdating = True
    ThisWorkbook.Worksheets("Analysis").Activate
    
    ActiveSheet.Range("A1:W101").Select 'set range zoom
    ActiveWindow.Zoom = True
    
    ActiveSheet.Range("A1").Select
End Sub

'***************************************************
' Sub required to close Excel Window opened by SAP
' when downloading ZRTC_PO_EXPED as XLSX file
'***************************************************

Sub GetSAPXLSXWindow()
    Dim xlsx_hWnd As Long
    Dim SM_Res As Long
    
    Const WM_SYSCOMMAND = &H112
    Const SC_CLOSE = &HF060
    Const WM_DESTROY = &H2
    Const WM_CLOSE = &H10
    
    xlsx_hWnd = FindWindow("XLMAIN", "ZRTC_PO_EXPED.xlsx - Excel")
    If Not xlsx_hWnd = 0 Then SAPExcelFound = True
    SetForegroundWindow (xlsx_hWnd)
    SM_Res = SendMessage(xlsx_hWnd, WM_DESTROY, 0, 0)
    'SM_Res = SendMessage(xlsx_hWnd, WM_SYSCOMMAND, SC_CLOSE, 0)
    
    xlsx_hWnd = FindWindow("XLMAIN", "ZRTC_PO_EXPED2.xlsx - Excel")
    SM_Res = SendMessage(xlsx_hWnd, WM_SYSCOMMAND, SC_CLOSE, 0)
        
End Sub


Attribute VB_Name = "D_PrintPDF"
Option Explicit

Sub PDFcreator()
    'Action from "Analysis Sheet" Ribbon Button
    ' CreateObject("WScript.Shell").specialfolders ("Desktop")
    ' --------------------------------------------------------------------------------------
    '       Function: Turns report to PDF
    ' --------------------------------------------------------------------------------------
    Dim ER As Long, a As Long
    Dim Title As String, Name As String
    Dim dateing As String
    Dim filename1 As String
    
    ER = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(Rows.Count, 1).End(xlUp).Row ' end row calculation for QM10 sheet column
    
    For a = 3 To ER
        If ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(2, 3).Value <> ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(a, 3).Value Then
            Title = "Misc"
        Else
            Title = ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(2, 3).Value
        End If
    Next a
    
    dateing = Format(Date, ("dd-mm-yyyy"))
    Name = InputBox(Prompt:="Please enter your name preference for the report;", Title:="Enter your Report Name", Default:=Title)
    
    On Error GoTo Lee
    
    If Not Name = "" Then
        filename1 = CreateObject("WScript.Shell").specialfolders("Desktop")
    End If
       
Lee:
    If Err <> 0 Then
        filename1 = "\\cam\fldrrdr\LEE\" & Environ$("username") & "\Desktop\" & Name & Chr(32) & dateing & ".pdf"
    Else
        ThisWorkbook.Sheets("Analysis").ExportAsFixedFormat Type:=xlTypePDF, filename:=filename1, Quality:=xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=True
    End If
    
End Sub

Sub PrintPDF()
'-------------------------------------------------------------------------------------------------
' Function: Print layout - Setting Up Printer Layout/Settings at creation of Report
'---------------------------------------------------------------------------------------------------
    Dim a As String
    Dim b As String
    Dim c As String
        
    a = "Vendor: " & ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(2, 4).Text
    b = "Date: " & Date
    c = "User: " & Environ$("username")
    
    Application.PrintCommunication = False
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$1:$1"
        .PrintTitleColumns = ""
    End With
    Application.PrintCommunication = True
    
    ActiveSheet.PageSetup.PrintArea = ""
    Application.PrintCommunication = False
    With ActiveSheet.PageSetup
        .LeftHeader = c
        .CenterHeader = a
        .RightHeader = b
        .LeftMargin = Application.InchesToPoints(0.236220472440945)
        .RightMargin = Application.InchesToPoints(0.236220472440945)
        .TopMargin = Application.InchesToPoints(0.748031496062992)
        .BottomMargin = Application.InchesToPoints(0.748031496062992)
        .HeaderMargin = Application.InchesToPoints(0.31496062992126)
        .FooterMargin = Application.InchesToPoints(0.31496062992126)
        .PrintComments = xlPrintSheetEnd
''        .PrintQuality = 600           'Commented out (FH). Confirmed to cause errors on some systems.
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4          'Added for test
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
''        .Zoom = 100                   'Originally False(FH), compilier request number between 10 and 400.
        .FitToPagesWide = 1
        .FitToPagesTall = False
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
    End With
    
    Application.PrintCommunication = True

End Sub
Attribute VB_Name = "E_Currency"
Option Explicit



'********************************************
'* RUN SAP REPORT "/NSE16N" and Table TCURR *
'********************************************

Public SAPxlsxClosed As Boolean

Sub SAP_SE16N_TCURR_TABLE()
    
'    Application.DisplayAlerts = False 'disables alerts
'    Application.ScreenUpdating = False 'disables "video" of macro recording
'    Application.EnableEvents = False 'disables all functions running while running the program. calculations dones after completion. stops loops and improves run time.
'    Application.Visible = False 'Hides the workbook from the computer, does not show as open.
            
    Dim ConstNOHITS As Long
    Dim i As Long
    Dim j As Long
       
    ConstNOHITS = 1000
  
    'Create temporary Sheet for Currency Codes to paste into SAP for running the TCURR table lookup
    Dim TempSheet As String
    TempSheet = "TempData"
    
    
    Dim ws_temp_check As Worksheet
    
    'Check for existing sheets "TempData" and deletes these
    For Each ws_temp_check In ThisWorkbook.Worksheets
        If ws_temp_check.Name = TempSheet Then
            ws_temp_check.Delete
        End If
    Next ws_temp_check
        
    'Creates sheet "TempData" and populates and organizes data
    Application.ThisWorkbook.Activate
    ThisWorkbook.Sheets.Add.Name = TempSheet
    Sheets("TempData").Visible = False
    ThisWorkbook.Worksheets(TempSheet).Range("A1") = Date
      
    'Date used as input in SAP
    Dim CurrValidFrom As String
    Dim Year_YYYY, Month_MM, Day_DD As String
    Dim SAPDFormat As String: SAPDFormat = ThisWorkbook.Worksheets("Controller").Cells(57, 2).Text
        
    ThisWorkbook.Worksheets(TempSheet).Activate
    Year_YYYY = Year(Date)
    If Month(Date) < 10 Then
        Month_MM = "0" & Month(Date)
    Else
        Month_MM = Month(Date)
    End If
        
    If Day(Date) < 10 Then
        Day_DD = "0" & Day(Date)
    Else
        Day_DD = Day(Date)
    End If
    
    Select Case SAPDFormat
    Case "DD.MM.YYYY"
        CurrValidFrom = "01" & "." & Month_MM & "." & Year_YYYY
    Case "MM/DD/YYYY"
        CurrValidFrom = Month_MM & "/" & "01" & "/" & Year_YYYY
    Case "MM-DD-YYYY"
        CurrValidFrom = Month_MM & "-" & "01" & "-" & Year_YYYY
    Case "YYYY.MM.DD"
        CurrValidFrom = Year_YYYY & "." & Month_MM & "." & "01" 'Day_DD
    Case "YYYY/MM/DD"
        CurrValidFrom = Year_YYYY & "/" & Month_MM & "/" & "01" 'Day_DD
    Case "YYYY-MM-DD"
        CurrValidFrom = Year_YYYY & "-" & Month_MM & "-" & "01" 'Day_DD
    End Select
        
    Debug.Print CurrValidFrom
    
    'Copying all currencies in PO Exped Report
    ThisWorkbook.Sheets("ZRTC_PO_EXPED").Range("OOR_Report[Crcy]").Copy ThisWorkbook.Sheets("TempData").Range("C1")    'Currency in column C
    
    Sheets("TempData").Activate
    ActiveSheet.Range("C:C").RemoveDuplicates Columns:=1, Header:=xlNo  'Removes duplicates in column C
    Selection.Range("C:C").SpecialCells(xlCellTypeBlanks).Delete        'Deletes blank cells with xlUp in coluymn C
    
    'TCURR table data ready for use. Procedure completed.
           
    ' Define Output DataFile
    Dim wbk As Workbook
    
    'Target path for copy of mhtml file from SAP to xlsx file. Save to defined path for further handling
    Dim FPath2 As String
    Dim FName2 As String
    
    FPath2 = "C:\SAP"
    FName2 = "exportCURR.xlsx"
    
    Dim DirFile2 As String
    DirFile2 = FPath2 & "\" & FName2
    Debug.Print DirFile2
    
    If Len(Dir(DirFile2)) <> 0 Then
        SetAttr DirFile2, vbNormal
        Kill DirFile2
    End If
    
    Dim wbTemp As Workbook  'for referencing "exportCURR.xlsx" workbook later
    
    'Check if target file already exists, if then delete before rename
    
    For Each wbk In Workbooks
        If wbk.Name = FName2 Then wbk.Close
    Next
    
        
'*******************************************************************************************************************
'*  No loop running report only once,                                                                              *
'*  result in exportCURR.xlsx                                                                                      *
'*                                                                                                                 *
'*******************************************************************************************************************
            
    Application.Wait (Now + TimeValue("00:00:01"))
       
    'Connect to SAP (Application must be open) to be able to run script commands
    'Note: not sure if If-End statements are required for the initial setup
    Dim SAPApp, SapGuiAuto, SAPCon, session, Wscript
    
    If Not IsObject(SAPApp) Then
       Set SapGuiAuto = GetObject("SAPGUI")         'Get the SAP GUI Scripting object
       Set SAPApp = SapGuiAuto.GetScriptingEngine   'Get the currently running SAP GUI
    End If
    If Not IsObject(SAPCon) Then
       Set SAPCon = SAPApp.Children(0)              'Get the first system that is currently connected
    End If
    If Not IsObject(session) Then
       Set session = SAPCon.Children(0)             'Get the first session (window) on that connection
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject Application, "on"
    End If
     
    'Return to main window
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/N"
    session.findById("wnd[0]").sendVKey 0
    
    'Enter Transaction code
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/NSE16N"    'Enter transacation code
    session.findById("wnd[0]").sendVKey 0                       'Run/Enter
    
    '***************************
    'Parameter Selection
    '***************************
    On Error GoTo StartWebCurr
    
    session.findById("wnd[0]/usr/ctxtGD-TAB").Text = "TCURR"                        'Enter table name
    session.findById("wnd[0]/usr/ctxtGD-VARIANT").Text = ""                         'Enter Layout variant
    session.findById("wnd[0]/usr/txtGD-MAX_LINES").Text = ConstNOHITS               'Enter max number of hits

    session.findById("wnd[0]/usr/txtGD-MAX_LINES").setFocus                         'SetFocus Max Lines window
    session.findById("wnd[0]/usr/txtGD-MAX_LINES").caretPosition = 6
    session.findById("wnd[0]").sendVKey 0                                           'Press Enter
    'session.findById("wnd[1]/tbar[0]/btn[0]").press                                 'Confirms pop-up window with warning on high number of hits
    
    session.findById("wnd[0]/usr/tblSAPLSE16NSELFIELDS_TC/btnPUSH[4,2]").setFocus   'SetFocus Multiple Input From Currency
    session.findById("wnd[0]/usr/tblSAPLSE16NSELFIELDS_TC/btnPUSH[4,2]").press      'Click button
    'Copy plant data from Excel Sheet to clipboard
    ThisWorkbook.Sheets("TempData").Range("C1").CurrentRegion.Copy
    'Insert plant data from Excel Sheet into SAP from Clipboard
    session.findById("wnd[1]/tbar[0]/btn[24]").press                                'Paste from Clipboard Plant data copied from SAP
    session.findById("wnd[1]/tbar[0]/btn[0]").press                                 'Check input button
    session.findById("wnd[1]/tbar[0]/btn[8]").press                                 'Transfer data button
    
    session.findById("wnd[0]/usr/tblSAPLSE16NSELFIELDS_TC/ctxtGS_SELFIELDS-LOW[2,3]").Text = "USD"          'Enter to currency
    
    session.findById("wnd[0]/usr/tblSAPLSE16NSELFIELDS_TC/ctxtGS_SELFIELDS-LOW[2,1]").Text = "M"            'Exchange Rate Type
    
    session.findById("wnd[0]/usr/tblSAPLSE16NSELFIELDS_TC/ctxtGS_SELFIELDS-LOW[2,4]").Text = CurrValidFrom  'Enter currency valid from date
    
    'Run Report
    session.findById("wnd[0]/tbar[1]/btn[8]").press                                 'Run/Execute/Online
        
    On Error GoTo 0
    
    '**********************************
    'Report Setup Completed
    '**********************************

    'Select Layout
    session.findById("wnd[0]/usr/cntlRESULT_LIST/shellcont/shell").pressToolbarContextButton "&MB_VARIANT"                                  'Select Choose layout button
    session.findById("wnd[0]/usr/cntlRESULT_LIST/shellcont/shell").selectContextMenuItem "&LOAD"                                            'Select Load layout from dropdown
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectColumn "VARIANT"        'Select Layout column
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").contextMenu                   'Menu
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").selectContextMenuItem "&FIND" 'Select Find from menu
    session.findById("wnd[2]/usr/txtGS_SEARCH-VALUE").Text = "/OSS-OOR2"        'Search for "/OSS-OOR2" in Layout column
    session.findById("wnd[2]/tbar[0]/btn[0]").press                             'Execute
    session.findById("wnd[2]/tbar[0]/btn[12]").press                            'Close seach window
    session.findById("wnd[1]/usr/ssubD0500_SUBSCREEN:SAPLSLVC_DIALOG:0501/cntlG51_CONTAINER/shellcont/shell").clickCurrentCell
    'session.findById("wnd[1]/tbar[0]/btn[0]").press                             'Select "found" layout variant
    
    '**********************************
    'Save Report using -> List -> Export -> Spreadsheet
    '**********************************
    
    'Save sequence: -> List -> Export -> Spreadsheet -> Spreadsheet Format XLSX... (no Windows Native Windows will appear).
    On Error Resume Next
    session.findById("wnd[0]/usr/cntlRESULT_LIST/shellcont/shell").pressToolbarContextButton "&MB_EXPORT"       'Click Export button
    session.findById("wnd[0]/usr/cntlRESULT_LIST/shellcont/shell").selectContextMenuItem "&XXL"                 'Select export as Spreadsheet
    session.findById("wnd[1]/usr/radRB_OTHERS").setFocus
    session.findById("wnd[1]/usr/radRB_OTHERS").Select
    session.findById("wnd[1]/usr/cmbG_LISTBOX").setFocus
    session.findById("wnd[1]/usr/cmbG_LISTBOX").Key = "10"
    session.findById("wnd[1]/tbar[0]/btn[0]").press
    session.findById("wnd[1]/usr/ctxtDY_PATH").Text = "C:\SAP"
    session.findById("wnd[1]/usr/ctxtDY_FILENAME").Text = "exportCURR.XLSX"
    session.findById("wnd[1]/usr/ctxtDY_FILENAME").caretPosition = 10
    session.findById("wnd[1]/tbar[0]/btn[0]").press
    On Error GoTo 0
    
    '**********************************
    ' Save As procedure complete
    '**********************************
    
    'Go back to SAP main page
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/n"
    session.findById("wnd[0]").sendVKey 0
    
    'Check if target file is successfully saved, then proceed
    'DirFile2 = FPath2 & "\" & FName2 as defined earlier is the "exportPOEX.xlsx" file
    Debug.Print DirFile2
    
    Dim bFileFound As Boolean: bFileFound = False
    Do
        If Len(Dir(DirFile2)) <> 0 Then
            bFileFound = True
        End If
    Loop Until bFileFound
    
'    Debug.Print "File Found"
'
'    Dim k As Long: k = 0
'    SAPExcelFound = False
'    Do
'        Call GetCURRXLSXWindow
'
'        k = k + 1
'        If k > 20 Then
'            SAPExcelFound = True
'        End If
'    Loop Until SAPExcelFound
    
    Dim objFSO As Object
    Set objFSO = CreateObject("Scripting.FileSystemObject")
    'First parameter: original location\file Second parameter: new location\file
    objFSO.CopyFile "C:\SAP\exportCURR.XLSX", "C:\SAP\exportCURR2.XLSX"
           
''    Application.Wait (Now + TimeValue("00:00:03"))
''
''    SAPxlsxClosed = False
''
''    Do                                      'SAPApp, SapGuiAuto, SAPCon, session, Wscript
''        Application.Wait (Now + TimeValue("00:00:01"))
''        Call CloseSAPCURRxlsx                                 'CloseSAPxlsx() is running window.close method on "exportPOEX.XLSX" window.
''
''    Loop Until SAPxlsxClosed = True
''
''    'Application.Wait (Now + TimeValue("00:00:01"))
    
    '**********************************
    ' Save As XLSX file procedure complete
    '**********************************
    
           
    '**********************************
    ' Save As XLSX file procedure complete
    '**********************************
       
    'Reactivate this workbook
    'Windows.Application.ThisWorkbook.Sheets(TempSheet).Delete
    
'    Application.DisplayAlerts = True 'enables alerts
'    Application.ScreenUpdating = True 'ensables "video" of macro recording
'    Application.EnableEvents = True 'enables all functions running while running the program. calculations dones after completion. stops loops and improves run time.
'    Application.Visible = True 'Unhides the workbook from the computer.

'**********************************
' Retrive report and save as xlsx procedure complete
'**********************************

    GoTo SubCompleted

'**********************************
' Alternative procedure if no access to TCURR
'**********************************
StartWebCurr:
    session.findById("wnd[1]/tbar[0]/btn[0]").press              'Run/Enter in pop-up wnidow to remove error message "not access to table" in SAP
    
    '*** Set WebCurr parameter in Controller Sheet ***
    Dim WebCurrRefID As Range                 'Used for returning Range(row) of Reference
    Dim WebCurrRefRow As String               'Used for collecting row number from above Range
    Dim WebCurr As Variant                    'For pasting single value or range of values into SAP
    
    'Find Tabel row of DataType
    Set WebCurrRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="WebCurr")
    WebCurrRefRow = WebCurrRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    ThisWorkbook.Worksheets("Controller").[TblController[DataValue]].Cells(WebCurrRefRow) = "1"
    
    Resume SubCompleted

SubCompleted:

End Sub
 
 
'*******************************
'* COPY DATA FROM EXPORT.XLSX TO MAIN EXCEL SHEET
'*******************************

Sub Copy_TCURR_Data()
    
''    On Error Resume Next
''    'Dim xlApp2 As Excel.Application
''    Set xlApp2 = GetObject("C:\SAP\exportCURR.XLSX").Application     'This will close Excel from SAP
''    'Set xlApp2 = GetObject("C:\SAP\ZRTC_PO_EXPED.xlsx").Application  'This will close Excel from SAP
''    xlApp2.Visible = False
''    On Error GoTo 0
    
    'Application.DisplayAlerts = False 'enables alerts
    'Application.ScreenUpdating = True 'ensables "video" of macro recording
    'Application.EnableEvents = True 'enables all functions running while running the program. calculations dones after completion. stops loops and improves run time.
    'Application.Visible = True 'Unhides the workbook from the computer.
    'Application.Calculation = xlAutomatic
            
    Dim SheetName1 As String: SheetName1 = "Currency"
    Dim SheetName2 As String: SheetName2 = "WebCurr"
    Dim wbTemp As Workbook
    Dim wbMain As Workbook: Set wbMain = ThisWorkbook
    
    Dim EndRowTemp As Long
    Dim NewEndRowMain As Long
    Dim OldEndRowMain As Long
    Dim EndColumnMain As String
    Dim DelRangeMain As String
    
    '*** Get WebCurr parameter in Controller Sheet ***
    Dim WebCurrRefID As Range                 'Used for returning Range(row) of Reference
    Dim WebCurrRefRow As String               'Used for collecting row number from above Range
    Dim WebCurr As Variant                    'For pasting single value or range of values into SAP
    
    'Find Tabel row of DataType
    Set WebCurrRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="WebCurr")
    WebCurrRefRow = WebCurrRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    If ThisWorkbook.Worksheets("Controller").[TblController[DataValue]].Cells(WebCurrRefRow) = "1" Then
        '**********************
        '* Retrive data from web address
        '**********************
        ThisWorkbook.Worksheets("WebCurr").Activate
        ActiveWorkbook.Connections("Query - Table 0").Refresh
        
        EndRowTemp = wbMain.Worksheets(SheetName2).Cells(Rows.Count, 1).End(xlUp).Row       'From column 1 looks from bottom to find last/end row
        NewEndRowMain = EndRowTemp + 5
        OldEndRowMain = wbMain.Worksheets(SheetName1).Cells(Rows.Count, 1).End(xlUp).Row + 1 'From column 1 looks from bottom to find last/end rowEndRowMain + 2
        EndColumnMain = "A"                                                                           'Return RowNumber, Not Row ID: wbMain.Worksheets("Rawdata_Po_Exped").Cells(3, Columns.Count).End(xlToLeft).Column
        DelRangeMain = "A" & NewEndRowMain + 1 & ":" & EndColumnMain & OldEndRowMain
        
        Debug.Print DelRangeMain
        
        '*** Start paste WebCurr data to Currency Sheet columns ***
        
            ThisWorkbook.Sheets("WebCurr").Activate
            Range("A2").Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            
            ThisWorkbook.Sheets("Currency").Activate
            Range("A7").Select
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Range("B7").Select
            Range(Selection, Selection.End(xlDown)).Select
            Application.CutCopyMode = False
            Selection.ClearContents
            Range("C7").Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.ClearContents
            
            ThisWorkbook.Sheets("WebCurr").Activate
            Range("C2").Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.Copy
            
            ThisWorkbook.Sheets("Currency").Activate
            Range("D7").Select
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Range("E7").Select
            Range(Selection, Selection.End(xlDown)).Select
            Application.CutCopyMode = False
            Selection.ClearContents
            Range("F7").Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.ClearContents
            
            ThisWorkbook.Sheets("WebCurr").Activate
            Range("C2").Select
            Selection.Copy
            
            ThisWorkbook.Sheets("Currency").Activate
            Range("F7").Select
            Range(Selection, Selection.End(xlDown)).Select
            Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        
        '*** End paste WebCurr data to Currency Sheet columns ***

        
        If OldEndRowMain > NewEndRowMain Then
            wbMain.Sheets(SheetName1).Activate
            wbMain.Sheets(SheetName1).Range(DelRangeMain).Select
            Selection.EntireRow.Delete
            'wbMain.Sheets(SheetName1).Range(DelRangeMain).Delete xlUp   'Deletes old rows below new rows inserted to sheet
        End If
        
        
    Else
        
        '**********************
        '* Copy Data from TCURR excel sheet
        '**********************
        'Call GetCURRXLSXWindow 'Close SAP opened Excel Window
        
        Workbooks.Open ("C:\SAP\exportCURR2.xlsx")
        Set wbTemp = Workbooks("exportCURR2.xlsx")
        
        EndRowTemp = wbTemp.Worksheets("Sheet1").Cells(Rows.Count, 1).End(xlUp).Row       'From column 1 looks from bottom to find last/end row
        NewEndRowMain = EndRowTemp + 5
        OldEndRowMain = wbMain.Worksheets(SheetName1).Cells(Rows.Count, 1).End(xlUp).Row + 1 'From column 1 looks from bottom to find last/end rowEndRowMain + 2
        EndColumnMain = "A"                                                                           'Return RowNumber, Not Row ID: wbMain.Worksheets("Rawdata_Po_Exped").Cells(3, Columns.Count).End(xlToLeft).Column
        DelRangeMain = "A" & NewEndRowMain + 1 & ":" & EndColumnMain & OldEndRowMain
        
        Debug.Print DelRangeMain
        
        wbTemp.Sheets("Sheet1").Range("A1").CurrentRegion.Copy wbMain.Sheets(SheetName1).Range("A7")
        
        wbMain.Sheets(SheetName1).Range("A7").EntireRow.Delete          'Deletes inserted Header Row from Export xlsx in Rawdata_Po_Exped
        
        If OldEndRowMain > NewEndRowMain Then
            wbMain.Sheets(SheetName1).Activate
            wbMain.Sheets(SheetName1).Range(DelRangeMain).Select
            Selection.EntireRow.Delete
            'wbMain.Sheets(SheetName1).Range(DelRangeMain).Delete xlUp   'Deletes old rows below new rows inserted to sheet
        End If
        
        wbTemp.Close    'Close "exportCURR.xlsx"
    
    End If
    
        
    '****************************************
    '* Start Format Data in Destination Sheet
    '****************************************
    Dim FormatEndRow As Long: FormatEndRow = NewEndRowMain
    
    'Column A and C: Format as Text
    wbMain.Sheets(SheetName1).Activate
    Range("A7:C" & FormatEndRow).Select
    Selection.NumberFormat = "@"
    Selection.HorizontalAlignment = xlCenter
    
    'Column D: Format as Numbers (forced by multiply by 1 in Cell D5
    wbMain.Sheets(SheetName1).Activate
    Range("D5").Select
    Selection.Copy
    Range("D7:D" & FormatEndRow).Select
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlMultiply
   'Column D: Format as Accounting with 2 decimals and no currency and Autofit width
    wbMain.Sheets(SheetName1).Activate
    Range("D7:D" & FormatEndRow).Select
    Selection.NumberFormat = "_(* #,##0.0000_);_(* (#,##0.0000);_(* ""-""??_);_(@_)"
    Columns("D:D").EntireColumn.AutoFit
    Selection.HorizontalAlignment = xlCenter
    
    'Column E: Format as Date
    wbMain.Sheets(SheetName1).Activate
    Range("E7:F" & FormatEndRow).Select
    Selection.NumberFormat = "m/d/yyyy"
    Selection.HorizontalAlignment = xlCenter
    
    'Column F: Format as Number with 0 decimals
    wbMain.Sheets(SheetName1).Activate
    Range("F7:F" & FormatEndRow).Select
    Selection.NumberFormat = "#,##0"
    Selection.HorizontalAlignment = xlCenter
        
    'wbTemp.Close           'Close "exportCURR.xlsx"
        
    'Call GetCURRXLSXWindow 'Close SAP opened Excel Window
    
    '****************************************
    '* End Format Data in Destination Sheet
    '****************************************
       
End Sub


Sub CloseSAPCURRxlsx()
    On Error GoTo SAPxlsxCloseErr

            Call GetCURRXLSXWindow
            SAPxlsxClosed = True
        
        GoTo CloseSAPxlsxEnd
        
SAPxlsxCloseErr:
        Resume CloseSAPxlsxEnd
        
CloseSAPxlsxEnd:
    On Error GoTo 0
End Sub


Sub GetCURRXLSXWindow()
    Dim xlsx_hWnd As Long
    Dim SM_Res As Long
    
    Const WM_SYSCOMMAND = &H112
    Const SC_CLOSE = &HF060
    Const WM_DESTROY = &H2
    Const WM_CLOSE = &H10
    
    xlsx_hWnd = FindWindow("XLMAIN", "exportCURR.XLSX - Excel")
    If Not xlsx_hWnd = 0 Then SAPExcelFound = True
    SM_Res = SendMessage(xlsx_hWnd, WM_SYSCOMMAND, SC_CLOSE, 0)
    
    xlsx_hWnd = FindWindow("XLMAIN", "exportCURR2.XLSX - Excel")
    SM_Res = SendMessage(xlsx_hWnd, WM_SYSCOMMAND, SC_CLOSE, 0)
    
End Sub


Attribute VB_Name = "F_SAP_Upload_To_ME22N"
Option Explicit

Dim rw As Long
Dim lol As String, delvdate As String

Sub POtextUp()
    'Update PO Item Text, PO Confirmation Date and Confirmation Qty.
    '07.03.2019 - Update - FH - SAP Date selection changed.
    
    Dim ST As Long, ER As Long
    Dim msgValue As Long
    Dim Cntrll As Long, conttrol As Long
    Dim PO As String
    Dim POnum As String, lineitem As String
    Dim Numb As Long
    Dim Curr As String, newt As String
    Dim ddd As String
    Dim refer As String
    Dim ConfErrCounter As Long
    Dim NewConfDate As Date
    Dim NewConfQty As String
    
    
    ST = Selection.Row
    ER = Selection.Row + Selection.Rows.Count - 1
    
    On Error GoTo Mssg
    
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject SAP_APP, "on"
    End If
    
    'To go into the transaction
    session.findById("wnd[0]").maximize
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
    session.findById("wnd[0]").sendVKey 0
    
    
Mssg:
    If Err.Number <> 0 Then
        msgValue = MsgBox("An error has occured when trying to populate the SAP GUI. Please make sure SAP GUI is open then press OK", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
        If msgValue = vbOK Then
            Err.Clear
            Resume
        Else
            Exit Sub
        End If
    End If
    'Runs well till now
    
    delvdate = 0
    Cntrll = 0                  'Used for control of updating the first PO Line
    conttrol = 0                'Used when update several lines onto same PO
    
    On Error GoTo SAPMISTAKE
    
    ThisWorkbook.Activate
    'Look through the selected PO Lines/Excel Sheet Rows
    For rw = ST To ER
        ConfErrCounter = 0
        
        PO = ThisWorkbook.Worksheets("ZRTC_PO_EXPED").[OOR_Report[Purch.Doc.-Item]].Rows(rw - 1).Text           'Range([OOR_Report[Purch.Doc.-Item]]).Rows(rw - 1)
        POnum = Left(ThisWorkbook.Worksheets("ZRTC_PO_EXPED").[OOR_Report[Purch.Doc.-Item]].Rows(rw - 1), 10)   'Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1), 10)
        Numb = Len(ThisWorkbook.Worksheets("ZRTC_PO_EXPED").[OOR_Report[Purch.Doc.-Item]].Rows(rw - 1))         'Len(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1))
        lineitem = Right(PO, Numb - 11)
        
        NewConfDate = ThisWorkbook.Worksheets("ZRTC_PO_EXPED").[OOR_Report[New Conf.Date]].Rows(rw - 1)         'Range("OOR_Report[New Conf.Date]").Rows(rw - 1)
        NewConfQty = ThisWorkbook.Worksheets("ZRTC_PO_EXPED").[OOR_Report[Open Qty]].Rows(rw - 1).Text          'Range("OOR_Report[Open Qty]").Rows(rw - 1).Text
        
        
        'Dont re-open PO if not required
        If Cntrll <> 0 Then                                                                         'Stops pulling line on first loop
            If Not POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 2), 10) Then         'Compares previous row PO number
                'If new PO num from previouse line then go into PO adjustment
                'This start Save process for previouse PO.
                
                'Delete the previouse PO message
                Call VersionChg                                                                     'Delete the PO message
                If Left(Range("OOR_Report[Vendor]").Rows(rw - 1), 1) <> "V" Then Call DeletePO      'Find intercompany and stop delete PO step
                
                'Save previouse PO
                session.findById("wnd[0]/tbar[0]/btn[3]").press
                session.findById("wnd[0]/tbar[0]/btn[11]").press                                    'This saves PO
                
                
                'Open New PO
                session.findById("wnd[0]/tbar[1]/btn[17]").press
                session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                session.findById("wnd[1]").sendVKey 0
                
                'Expand all tabs to process new PO
                session.findById("wnd[0]").sendVKey 29
                session.findById("wnd[0]").sendVKey 28
                session.findById("wnd[0]").sendVKey 27
                delvdate = 0
                conttrol = 0
            End If
        Else
            'Open new PO Number
            session.findById("wnd[0]/tbar[1]/btn[17]").press
            session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
            session.findById("wnd[1]").sendVKey 0
                
            'Used to setup layout of GUI to standard format
            session.findById("wnd[0]").sendVKey 29
            session.findById("wnd[0]").sendVKey 28
            session.findById("wnd[0]").sendVKey 27
        End If

        Err.Clear
        
        
        'If Lineitem is not the first line on PO, then filter/locate the correct PO/Req line item
        If lineitem <> 10 Then
            Call picktype
            'lol = Sheets("Controller").Cells(1, 3).Value
            
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").setFocus
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").caretPosition = 0
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/btnEDITFILTER").press
            session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = lineitem
            session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 2
            session.findById("wnd[1]").sendVKey 0
            
            Call picktype
            'lol = Sheets("Controller").Cells(1, 3).Value
            
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").setFocus
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
        End If
        
        
        Call picktype
        'lol = Sheets("Controller").Cells(1, 3).Value
        
        
        'Update Delivery Text with latest line from "New Status"
        If Not Range("OOR_Report[New Status]").Rows(rw - 1) = "" Then
            'Open Texts Tab
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21").Select
            
            Call picktype
            'lol = Sheets("Controller").Cells(1, 3).Value
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/cntlTEXT_TYPES_0200/shell").selectedNode = "F04"
                        
            'Code below is the Delivery note text
            Curr = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/subEDITOR:SAPLMMTE:0201/cntlTEXT_EDITOR_0201/shellcont/shell").Text
            
            'New text to add
            newt = "EXP " & Format(Date, "dd.mmm.yy") & " - " & Range("OOR_Report[New Status]").Rows(rw - 1) & " - " & Environ("USERNAME") & " ~" & Chr(13) & Curr
            
            'Insert text (newt) into SAP
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/subEDITOR:SAPLMMTE:0201/cntlTEXT_EDITOR_0201/shellcont/shell").Text = newt
        End If
        
        
        'Selecting correct number format for SAP entry:
        'If Sheets("Controller").Cells(11, 2).Value = "dd/mm/yyyy" Then ddd = "dd.mm.yyyy"
        'If Sheets("Controller").Cells(11, 2).Value = "mm/dd/yyyy" Then ddd = "mm/dd/yyyy"
        
        'Find Tabel row of DataType
        Dim SAPDateFormatID As Range       'Used for returning Range(row) of Reference
        Dim SAPDateFormatRow As String     'Used for collecting row number from above Range
        
        Set SAPDateFormatID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="SAP Date Format")
        SAPDateFormatRow = SAPDateFormatID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
        
        'Pick SAP Date Format
        ddd = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(SAPDateFormatRow).Text
        
        
        'Start changing confirmation date process
        If Not Range("OOR_Report[New Conf.Date]").Rows(rw - 1) = "" Then
            Call picktype
            'lol = Sheets("Controller").Cells(1, 3).Value
            
            'Open "Confirmations" tab
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23").Select
            
            Call picktype
            'lol = Sheets("Controller").Cells(1, 3).Value
            
            'If new confirmation confirmation category[CC] is "", then add in "AB" in CC.
            If session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/ctxtEKES-EBTYP[0,0]").Text = "" Then
                session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/ctxtEKES-EBTYP[0,0]").Text = "AB"
            End If
            
            'Code below used to leave orginal comment and generate new comment
            refer = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/txtEKES-XBLNR[5,0]").Text
            If InStr(refer, "~") Then
                refer = Left(refer, InStr(refer, "~") - 1) & "~ ND: " & Environ$("username")
            ElseIf InStr(refer, "ACC:") Or InStr(refer, "ACC.") Then
                refer = Left(refer, 16) & "~ ND: " & Environ$("username")
            Else
                refer = refer & "OD: " & Environ$("username") & "~"
            End If
            refer = Left(refer, 35)                 'Max Length 35 Characthers
            
            'Update Confirmation Tab information
            On Error GoTo ErrorHandlingConfBlock
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/ctxtRM06E-LPEIN[1,0]").Text = "D"
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/ctxtRM06E-EEIND[2,0]").Text = Format(NewConfDate, ddd)     'Format(Range("OOR_Report[New Conf.Date]").Rows(rw - 1), ddd) ' deli date
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/txtEKES-MENGE[4,0]").Text = NewConfQty                     'Range("OOR_Report[Open Qty]").Rows(rw - 1) ' qty
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/txtEKES-XBLNR[5,0]").Text = refer                          'Insert comment
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/ctxtEKES-ERDAT[6,0]").Text = Format(Date, ddd)             'Insert Date updated (today)
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/ctxtEKES-ERDAT[6,0]").setFocus
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT23/ssubTABSTRIPCONTROL1SUB:SAPLMEVIEWS:1101/subSUB2:SAPLMEGUI:1332/subSUB0:SAPLEINB:0300/tblSAPLEINBTC_0300/ctxtEKES-ERDAT[6,1]").caretPosition = 10
            session.findById("wnd[0]").sendVKey 0
            session.findById("wnd[0]").sendVKey 0
            session.findById("wnd[0]").sendVKey 0
            session.findById("wnd[0]").sendVKey 0
            
            GoTo End_ErrorHandlingConfBlock
            
ErrorHandlingConfBlock:                                 'Erro handling block introduced to handle warnings when Conf. Date is not in line with Schedule Date
            session.findById("wnd[0]").sendVKey 0
            session.findById("wnd[0]").sendVKey 0
            session.findById("wnd[0]").sendVKey 0
            session.findById("wnd[0]").sendVKey 0
            
            ConfErrCounter = ConfErrCounter + 1
            If ConfErrCounter > 8 Then
                GoTo SAPMISTAKE
            Else
                Resume Next
            End If
End_ErrorHandlingConfBlock:

            Err.Clear
            On Error GoTo SAPMISTAKE
            session.findById("wnd[0]").sendVKey 0
    
            
            'Update Schedule Line Delivery Date if "New Sch.Del.Date" is added to table
            'Note: Sub also contains update New Stat.Date routine if New Stat.Date enableded/inclded.
            If Application.CountIf(Rows(1), "New Sch.Del.Date") > 0 Then
                If Not Range("OOR_Report[New Sch.Del.Date]").Rows(rw - 1) = "" Then
                    delvdate = 1
                    Call DelivDaty
                End If
            End If
            
            
        End If
        Cntrll = 1

    Next
    
    'Start Save process for last PO.
                
    'Delete the PO message for last PO
    Call VersionChg
    If Left(Range("OOR_Report[Vendor]").Rows(rw - 1), 1) <> "V" Then Call DeletePO 'Find intercompany and stop delete PO step
    
    'Save Last PO
    On Error Resume Next
    session.findById("wnd[0]/tbar[0]/btn[11]").press ' This saves PO
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/tbar[0]/btn[0]").press

    Exit Sub    'Only Error handling below this point
    
SAPMISTAKE:
    If Err.Number <> 0 Then
        If conttrol = 0 Then        'If 1st PO line to be opened by macro???
            Call testty
            conttrol = 1
            Err.Clear
            Resume
        Else
            msgValue = MsgBox("An error has occured when trying to populate PO: " & PO & " within the SAP GUI." & vbNewLine & "Clicking OK will re-open current PO and restart where error in the process occured. Please review populated information and action window pop up, correct if required. Press OK to continue once actioned.", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
            If msgValue = vbOK Then
                Err.Clear
                
                'Re-run transaction
                session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
                session.findById("wnd[0]").sendVKey 0
                'Re-open PO
                session.findById("wnd[0]/tbar[1]/btn[17]").press
                session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                session.findById("wnd[1]").sendVKey 0
                'Expand all tabs
                session.findById("wnd[0]").sendVKey 29
                session.findById("wnd[0]").sendVKey 28
                session.findById("wnd[0]").sendVKey 27
                
                'If Lineitem is not the first line on PO, then re-open/filter/locate the correct PO/Req line item
                'Added to this Sub by FH, 03.May.2019
                If lineitem <> 10 Then
                    Call picktype
                    'lol = Sheets("Controller").Cells(1, 3).Value
                    
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").setFocus
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").caretPosition = 0
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/btnEDITFILTER").press
                    session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = lineitem
                    session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 2
                    session.findById("wnd[1]").sendVKey 0
                    
                    Call picktype
                    'lol = Sheets("Controller").Cells(1, 3).Value
                    
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").setFocus
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
                End If
                
                'Restart where error occured.
                Resume Next
            Else
                Exit Sub        'If Cancel button then Exit Sub.
            End If
            conttrol = 0        'Sub will never reach this point as above calls Resume, Resume Next or Exit Sub.
        End If
    End If

End Sub

Sub VersionChg()

    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject SAP_APP, "on"
    End If
    
    'Adds new version
    If delvdate = 1 Then
        Call picktype
        session.findById("wnd[0]").sendVKey 26
        Call picktype
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17").Select
        Call picktype
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17/ssubTABSTRIPCONTROL2SUB:SAPLMEDCMV:0100/cntlDCMGRIDCONTROL1/shellcont/shell").pressToolbarButton "&MEDCMCREATE"
        Call picktype
        
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17/ssubTABSTRIPCONTROL2SUB:SAPLMEDCMV:0100/cntlDCMGRIDCONTROL1/shellcont/shell").modifyCheckbox 0, "REVOK", True
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17/ssubTABSTRIPCONTROL2SUB:SAPLMEDCMV:0100/cntlDCMGRIDCONTROL1/shellcont/shell").modifyCell 0, "RSCOD", "0005"
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17/ssubTABSTRIPCONTROL2SUB:SAPLMEDCMV:0100/cntlDCMGRIDCONTROL1/shellcont/shell").modifyCell 0, "TXZ01", "OOR Deliv. Date Update"
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17/ssubTABSTRIPCONTROL2SUB:SAPLMEDCMV:0100/cntlDCMGRIDCONTROL1/shellcont/shell").modifyCell 0, "CRNAM", Environ("USERNAME")
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17/ssubTABSTRIPCONTROL2SUB:SAPLMEDCMV:0100/cntlDCMGRIDCONTROL1/shellcont/shell").currentCellColumn = "CRNAM"
    
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB1:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1102/tabsHEADER_DETAIL/tabpTABHDT17/ssubTABSTRIPCONTROL2SUB:SAPLMEDCMV:0100/cntlDCMGRIDCONTROL1/shellcont/shell").pressEnter
        delvdate = 0
    End If

End Sub

Sub DeletePO()
    'Script clicks Message button in ME22N and deletes new lines(in process) in this matrix.
    'The New Lines are the only available to be deleted so the script will try to delete all.
    
    Dim rww As Long     'Row counter for message window
    Dim a As String     'String capturing the value in the Output Type column
    
    
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject SAP_APP, "on"
    End If
        ' Removes message auto generation
    
    On Error GoTo Actioned
        session.findById("wnd[0]/tbar[1]/btn[21]").press
        session.findById("wnd[0]/usr/tblSAPDV70ATC_NAST3").getAbsoluteRow(0).Selected = True
    
    For rww = 0 To 1000
        a = session.findById("wnd[0]/usr/tblSAPDV70ATC_NAST3/ctxtDNAST-KSCHL[1," & rww & "]").Text
        If Not a <> "" Then Exit Sub            'If Output Type is "" then last line has been found and exit sub is actioned, else continue.
        
        'Trying to delete line (only possible for new), if error goto "Actioned".
        session.findById("wnd[0]/usr/tblSAPDV70ATC_NAST3/ctxtDNAST-KSCHL[1," & rww & "]").Text = ""             'Deleting content, forcing error if not new.
        session.findById("wnd[0]/usr/tblSAPDV70ATC_NAST3/lblDV70A-STATUSICON[0," & rww & "]").setFocus
        session.findById("wnd[0]/usr/tblSAPDV70ATC_NAST3/lblDV70A-STATUSICON[0," & rww & "]").caretPosition = 0
        session.findById("wnd[0]/tbar[1]/btn[18]").press
        session.findById("wnd[1]/tbar[0]/btn[0]").press
        rww = rww - 1                           'if line deleted substract 1 from rww as 1 is added at the end to keep looking at the same line number
                
        If Err.Number <> 0 Then                 'Skips this if Delete line was a success; that is Err.Number = 0
Actioned:
            Err.Clear
            rww = rww + 1
            a = session.findById("wnd[0]/usr/tblSAPDV70ATC_NAST3/ctxtDNAST-KSCHL[1," & rww + 1 & "]").Text
            If Not a <> "" Then Exit Sub        'If Output Type is "" then last line has been found and exit sub is actioned, else continue.
            Resume                              'If previous line error, try next starting at .Text = "", trying to delete Output Type, for new line.
        End If
    
    Next rww

End Sub

Sub testty()
    '
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject SAP_APP, "on"
    End If
    
    On Error Resume Next
    
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/tbar[0]/btn[0]").press                 'Enter
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/tbar[0]/btn[0]").press                 'Enter
    session.findById("wnd[0]/tbar[1]/btn[17]").press                'Open Other PO/Select Document to Open
End Sub

Sub DelivDaty()
    
    Dim ddd As String
    Dim statdate As String
    
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject SAP_APP, "on"
    End If
    
    On Error Resume Next
    
    'Selecting correct number format for SAP entry:
    'If Sheets("Controller").Cells(11, 2).Value = "dd/mm/yyyy" Then ddd = "dd.mm.yyyy"
    'If Sheets("Controller").Cells(11, 2).Value = "mm/dd/yyyy" Then ddd = "mm/dd/yyyy"
    
    'Find Tabel row of DataType
    Dim SAPDateFormatID As Range       'Used for returning Range(row) of Reference
    Dim SAPDateFormatRow As String     'Used for collecting row number from above Range
    
    Set SAPDateFormatID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="SAP Date Format")
    SAPDateFormatRow = SAPDateFormatID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    'Pick SAP Date Format
    ddd = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(SAPDateFormatRow).Text
    
       
    ' Change Deliv Date
    If Range("OOR_Report[New Sch.Del.Date]") <> "" Then
        Call picktype
        'Open "Delivery Schedule" tab
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7").Select
        Call picktype
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
        Call picktype
        '"statdate" = Current Stat.Del.Date in Delivery Schedule tab
        statdate = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-SLFDT[5,0]").Text
        'Enter new Schedule Line Delivery Date  into Delivery Date cell
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-EEIND[2,0]").Text = Format(Range("OOR_Report[New Sch.Del.Date]").Rows(rw - 1), ddd)
        
        session.findById("wnd[0]").sendVKey 0
        session.findById("wnd[0]").sendVKey 0
        session.findById("wnd[0]").sendVKey 0
        session.findById("wnd[0]").sendVKey 0
        
        
        'Update Stat. Date in Delivery Schedule if "New Stat.Delv.Date" is added to table
        If Application.CountIf(Rows(1), "New Stat.Delv.Date") > 0 Then
            If Not Range("OOR_Report[New Stat.Delv.Date]").Rows(rw - 1) = "" Then
                'If new stat.date provided then enter new stat.date
                session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-SLFDT[5,0]").Text = Format(Range("OOR_Report[New Stat.Delv.Date]").Rows(rw - 1), ddd)
            Else
                'If not new stat.date Re-enter current stat date into Stat.Del.Date cell
                session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-SLFDT[5,0]").Text = statdate
            End If
        End If
            
        
    End If


End Sub

Sub picktype()
    
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject Application, "on"
    End If

    On Error Resume Next
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0010/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0010"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0011/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0011"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0012/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0012"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0013/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0013"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0014/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0014"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0015/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0015"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0016/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0016"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0017/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0017"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0018/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0018"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0019/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0019"
    Err.Clear
    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:0020/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
    If Err = 0 Then lol = "0020"
    
    Sheets("Controller").Cells(1, 3).Value = lol
End Sub

Sub POtextDown()
    
    Dim ST As Long, ER As Long, rw As Long
    Dim msgValue As Long
    Dim Cntrll As Long, conttrol As Long
    Dim PO As String
    Dim POnum As String, lineitem As String
    Dim Numb As Long
    Dim Curr As String
        
    ST = Selection.Row
    ER = Selection.Row + Selection.Rows.Count - 1
    
    On Error GoTo Mssg
    
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject Application, "on"
    End If
    
    session.findById("wnd[0]").maximize
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme23n"
    session.findById("wnd[0]").sendVKey 0
        
Mssg:
    If Err <> 0 Then
        MsgBox ("Sorry, something has gone wrong with the program. Please make sure you have logged into SAP, else wait and try again later."), vbMsgBoxSetForeground
        Exit Sub
    End If
        
    Cntrll = 0 ' Used when update several lines onto same PO
     
    
    
    For rw = ST To ER
        On Error Resume Next
    
    
        PO = Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1)
        POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1), 10)
        Numb = Len(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1))
        lineitem = Right(PO, Numb - 11)
        ' Dont re-open PO if not required
        If Cntrll <> 0 Then ' Stops pulling line on first loop
            If Not POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 2), 10) Then
                ' Go into PO adjustment
                session.findById("wnd[0]/tbar[1]/btn[17]").press
                session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                session.findById("wnd[1]").sendVKey 0
                
                ' Expand all tabs
                session.findById("wnd[0]").sendVKey 29
                session.findById("wnd[0]").sendVKey 28
                session.findById("wnd[0]").sendVKey 27
            End If
        Else
                session.findById("wnd[0]/tbar[1]/btn[17]").press
                session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                session.findById("wnd[1]").sendVKey 0
                
                                ' Expand all tabs
                session.findById("wnd[0]").sendVKey 29
                session.findById("wnd[0]").sendVKey 28
                session.findById("wnd[0]").sendVKey 27
        End If
        
        On Error Resume Next
        Err.Clear
    
        If lineitem <> 10 Then
            ' Filter to the correct PO / Req line item
            Call picktype
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").setFocus
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").caretPosition = 0
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/btnEDITFILTER").press
            session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = lineitem
            session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 2
            session.findById("wnd[1]").sendVKey 0
            Call picktype
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").setFocus
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
        End If
        
        Call picktype
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21").Select
        Call picktype
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/cntlTEXT_TYPES_0200/shell").selectedNode = "F04"
    
        'Code below is the Delivery note text
        Curr = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/subEDITOR:SAPLMMTE:0201/cntlTEXT_EDITOR_0201/shellcont/shell").Text
        Range("OOR_Report[Delivery Text]").Rows(rw - 1) = Curr ' New text to add
        Range("OOR_Report[Delivery Text]").Rows(rw - 1).Replace What:=Chr(13), Replacement:=Chr(10), LookAt:=xlPart, SearchOrder:=xlByRows, MatchCase:=True
        ' Insert text (newt) into SAP
        
        Cntrll = 1
    Next

End Sub

Sub POexecUp()

    Dim ST As Long, ER As Long, rw As Long
    Dim msgValue As Long
    Dim Cntrll As Long, conttrol As Long
    Dim PO As String
    Dim POnum As String, lineitem As String
    Dim Numb As Long
    Dim Curr As String, newt As String

    ST = Selection.Row
    ER = Selection.Row + Selection.Rows.Count - 1
    
    On Error GoTo Mssg
    
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject Application, "on"
    End If
    
    ' To go into the transaction
    session.findById("wnd[0]").maximize
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
    session.findById("wnd[0]").sendVKey 0
        
Mssg:
    If Err.Number <> 0 Then
        msgValue = MsgBox("An error has occured when trying to populate the SAP GUI. Please make sure SAP GUI is open then press OK", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
        If msgValue = vbOK Then
            Err.Clear
            Resume
        Else
            Exit Sub
        End If
    End If
    'Runs well till now
        
    Cntrll = 0 ' Used when update several lines onto same PO
    
    On Error GoTo SAPMISTAKE
    
    'Look through the selected rows
    For rw = ST To ER
        
        PO = Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1)
        POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1), 10)
        Numb = Len(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1))
        lineitem = Right(PO, Numb - 11)
        ' Dont re-open PO if not required
        If Cntrll <> 0 Then         'Stops pulling line on first loop
            If Not POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 2), 10) Then ' Compares previous row PO number
                ' Go into PO adjustment
                
                ' delete the PO message
                If Left(Range("OOR_Report[Vendor]").Rows(rw - 1), 1) <> "V" Then Call DeletePO ' Find intercompany and stop delete PO step
                
                session.findById("wnd[0]/tbar[0]/btn[11]").press ' This saves PO
                
                session.findById("wnd[0]/tbar[1]/btn[17]").press
                session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                session.findById("wnd[1]").sendVKey 0
                ' Expand all tabs
                session.findById("wnd[0]").sendVKey 29
                session.findById("wnd[0]").sendVKey 28
                session.findById("wnd[0]").sendVKey 27
                conttrol = 0
            End If
        Else
            session.findById("wnd[0]/tbar[1]/btn[17]").press
            session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
            session.findById("wnd[1]").sendVKey 0
            
            ' Used to setup layout of GUI to standard format
            session.findById("wnd[0]").sendVKey 29
            session.findById("wnd[0]").sendVKey 28
            session.findById("wnd[0]").sendVKey 27
        End If

        Err.Clear
    
        If lineitem <> 10 Then
            ' Filter to the correct PO / Req line item
            Call picktype
            lol = Sheets("Controller").Cells(1, 3).Value
            
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").setFocus
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").caretPosition = 0
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/btnEDITFILTER").press
            session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = lineitem
            session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 2
            session.findById("wnd[1]").sendVKey 0
            Call picktype
            lol = Sheets("Controller").Cells(1, 3).Value
            
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").setFocus
            session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
        End If
    
        Call picktype
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21").Select
        Call picktype
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/cntlTEXT_TYPES_0200/shell").selectedNode = "F14"
    
        'Code below is the Delivery note text
        Curr = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/subEDITOR:SAPLMMTE:0201/cntlTEXT_EDITOR_0201/shellcont/shell").Text
        'New text to add
        newt = Range("OOR_Report[PO Exception Message]").Rows(rw - 1)
        'Insert text (newt) into SAP
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/subEDITOR:SAPLMMTE:0201/cntlTEXT_EDITOR_0201/shellcont/shell").Text = newt
        
        Cntrll = 1
        
    Next
    
    'delete the PO message
    If Left(Range("OOR_Report[Vendor]").Rows(rw - 1), 1) <> "V" Then Call DeletePO ' Find intercompany and stop delete PO step
    
    On Error Resume Next
    session.findById("wnd[0]/tbar[0]/btn[11]").press ' This saves PO
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/tbar[0]/btn[0]").press
    
    Exit Sub

SAPMISTAKE:
    If Err.Number <> 0 Then
        If conttrol = 0 Then
            Call testty
            conttrol = 1
            Err.Clear
            Resume
        Else
            msgValue = MsgBox("An error has occured when trying to populate the SAP GUI. Please review populated information and action window pop up, correct if required. Press OK to continue once actioned.", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
            If msgValue = vbOK Then
                Err.Clear
                session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
                session.findById("wnd[0]").sendVKey 0
                session.findById("wnd[0]/tbar[1]/btn[17]").press
                session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                session.findById("wnd[1]").sendVKey 0
                ' Expand all tabs
                session.findById("wnd[0]").sendVKey 29
                session.findById("wnd[0]").sendVKey 28
                session.findById("wnd[0]").sendVKey 27
                Resume Next
            Else
                Exit Sub
            End If
            conttrol = 0
        End If
    End If
    
End Sub

Sub StatDateUp()
    'Upload new "Stat.Delv.Date" only
    
    Dim ST As Long, ER As Long, rw As Long
    Dim msgValue As Long
    Dim Cntrll As Long, conttrol As Long
    Dim PO As String
    Dim POnum As String, lineitem As String
    Dim Numb As Long
    Dim Curr As String, newt As String
    Dim cl As Long
    Dim alwed As Long
    Dim statdate As Long
    Dim ConfDelD As Long
    Dim ddd As String
    
    ST = Selection.Row
    ER = Selection.Row + Selection.Rows.Count - 1
    
    On Error GoTo Mssg
    
    If Not IsObject(SAP_APP) Then
       Set SapGuiAuto = GetObject("SAPGUI")
       Set SAP_APP = SapGuiAuto.GetScriptingEngine
    End If
    If Not IsObject(Connection) Then
       Set Connection = SAP_APP.Children(0)
    End If
    If Not IsObject(session) Then
       Set session = Connection.Children(0)
    End If
    If IsObject(Wscript) Then
       Wscript.ConnectObject session, "on"
       Wscript.ConnectObject Application, "on"
    End If

    'To go into the transaction
    session.findById("wnd[0]").maximize
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
    session.findById("wnd[0]").sendVKey 0
        
Mssg:
    If Err.Number <> 0 Then
        msgValue = MsgBox("An error has occured when trying to populate the SAP GUI. Please make sure SAP GUI is open then press OK", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
        If msgValue = vbOK Then
            Err.Clear
            Resume
        Else
            Exit Sub
        End If
    End If
         
    delvdate = 0
    Cntrll = 0 ' Used when update several lines onto same PO
    On Error GoTo SAPMISTAKE
    
    'Look through the selected rows
    For rw = ST To ER
        cl = 0
        alwed = 0
        PO = Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1)
        POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1), 10)
        Numb = Len(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 1))
        lineitem = Right(PO, Numb - 11)
        
        
            
        statdate = Range("OOR_Report[Stat.Delv.]").Rows(rw - 1)
        ConfDelD = Range("OOR_Report[Conf Del D]").Rows(rw - 1)
    
        If Range("OOR_Report[New Stat.Delv.Date]").Rows(rw - 1).Value <> "" Then                        'If no date don't run update on PO Line
            If Range("OOR_Report[Conf Del D]").Rows(rw - 1).Interior.ColorIndex = ThisWorkbook.Sheets("Overview").Cells(16, 18).Interior.ColorIndex _
                Or Range("OOR_Report[New Stat.Delv.Date]").Rows(rw - 1).Value <= Range("OOR_Report[Resch.date]").Rows(rw - 1).Value _
                Or Range("OOR_Report[Stat.Delv.]").Rows(rw - 1).Value >= Range("OOR_Report[New Stat.Delv.Date]").Rows(rw - 1).Value Then alwed = 1
            ' Code above checks a - Is there a confirmed date if not action. b - is the new date before MRP date if so action. c - Is the new date before the orginal date if so action.
            
            If Application.CountIf(Rows(1), "New Sch.Del.Date") > 0 Then cl = 2                         'Accounts for additional data added
            
            'If alwed <> 1 And ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(rw - 1, 22 + cl) = "" Then     'Note if Sch.Delv.Date is active this will be offset.
             If alwed <> 1 And Range("OOR_Report[New Status]").Rows(rw - 1) = "" Then
                MsgBox "Program cannot update Stat.Delv.Date for line: " & rw & " due to PO line either being; Confirmed, Later than Orginal Stat, or Later than MRP Date without New Status text added. Please manually update if still required.", vbInformation + vbMsgBoxSetForeground, "WARNING!!"
                session.findById("wnd[0]/tbar[0]/btn[11]").press ' This saves PO
                Exit Sub
            Else
                
                If Cntrll <> 0 Then ' Stops pulling line on first loop
                    
                    'Don't re-open PO if not required
                    If Not POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(rw - 2), 10) Then ' Compares previous row PO number
                        'Go into PO adjustment
                        'Call VersionChg
                        'delete the PO message
                        If Left(Range("OOR_Report[Vendor]").Rows(rw - 1), 1) <> "V" Then Call DeletePO ' Find intercompany and stop delete PO step
                            
                        session.findById("wnd[0]/tbar[0]/btn[3]").press
                        session.findById("wnd[0]/tbar[0]/btn[11]").press ' This saves PO
                        
                        session.findById("wnd[0]/tbar[1]/btn[17]").press
                        session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                        session.findById("wnd[1]").sendVKey 0
                        'Expand all tabs
                        session.findById("wnd[0]").sendVKey 29
                        session.findById("wnd[0]").sendVKey 28
                        session.findById("wnd[0]").sendVKey 27
                        delvdate = 0
                        conttrol = 0
                        
                    End If
                Else
                    session.findById("wnd[0]/tbar[1]/btn[17]").press
                    session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                    session.findById("wnd[1]").sendVKey 0
                    
                    ' Used to setup layout of GUI to standard format
                    session.findById("wnd[0]").sendVKey 29
                    session.findById("wnd[0]").sendVKey 28
                    session.findById("wnd[0]").sendVKey 27
                End If
        
         
                Err.Clear
    
    
                If lineitem <> 10 Then
                    ' Filter to the correct PO / Req line item
                    Call picktype
                    'lol = Sheets("Controller").Cells(1, 3).Value
                    
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").setFocus
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").caretPosition = 0
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/btnEDITFILTER").press
                    session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = lineitem
                    session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 2
                    session.findById("wnd[1]").sendVKey 0
                    Call picktype
                    'lol = Sheets("Controller").Cells(1, 3).Value
                    
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").setFocus
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
                End If
    
                Call picktype
                'lol = Sheets("Controller").Cells(1, 3).Value
                
                
                'Selecting correct number format for SAP entry:
                'If Sheets("Controller").Cells(11, 2).Value = "dd/mm/yyyy" Then ddd = "dd.mm.yyyy"
                'If Sheets("Controller").Cells(11, 2).Value = "mm/dd/yyyy" Then ddd = "mm/dd/yyyy"
                
                'Find Tabel row of DataType
                Dim SAPDateFormatID As Range       'Used for returning Range(row) of Reference
                Dim SAPDateFormatRow As String     'Used for collecting row number from above Range
                
                Set SAPDateFormatID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="SAP Date Format")
                SAPDateFormatRow = SAPDateFormatID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
                
                'Pick SAP Date Format
                ddd = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(SAPDateFormatRow).Text

        
                Call picktype
                session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7").Select
                Call picktype
                session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
                Call picktype
               ' delivdate = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-SLFDT[2,0]").Text
                delvdate = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-EEIND[2,0]").Text
                session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-SLFDT[5,0]").Text = Format(Range("OOR_Report[New Stat.Delv.Date]").Rows(rw - 1), ddd)
                
                session.findById("wnd[0]").sendVKey 0
                session.findById("wnd[0]").sendVKey 0
                session.findById("wnd[0]").sendVKey 0
                session.findById("wnd[0]").sendVKey 0
                
                session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT7/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1320/tblSAPLMEGUITC_1320/ctxtMEPO1320-EEIND[2,0]").Text = delvdate
    
                If alwed <> 1 Then
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21").Select
                    Call picktype
                    'lol = Sheets("Controller").Cells(1, 3).Value
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/cntlTEXT_TYPES_0200/shell").selectedNode = "F04"
                    ' Code below is the Delivery note text
                    Curr = session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/subEDITOR:SAPLMMTE:0201/cntlTEXT_EDITOR_0201/shellcont/shell").Text
                    ' New text to add
                    newt = "EXP " & Format(Date, "dd.mmm.yy") & " - " & Range("OOR_Report[New Status]").Rows(rw - 1) & " - " & Environ("USERNAME") & " ~" & Chr(13) & Curr
                    ' Insert text (newt) into SAP
                    session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/subEDITOR:SAPLMMTE:0201/cntlTEXT_EDITOR_0201/shellcont/shell").Text = newt
                End If
            End If
        End If
    
        Cntrll = 1
    
    Next
    
    Call VersionChg
    
    If Left(Range("OOR_Report[Vendor]").Rows(rw - 1), 1) <> "V" Then Call DeletePO ' Find intercompany and stop delete PO step
    'delete the PO message
    
    On Error Resume Next
    session.findById("wnd[0]/tbar[0]/btn[11]").press ' This saves PO
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/usr/btnSPOP-VAROPTION1").press
    session.findById("wnd[1]/tbar[0]/btn[0]").press
    
    Exit Sub
    
SAPMISTAKE:
    If Err.Number <> 0 Then
        If conttrol = 0 Then
            Call testty
            conttrol = 1
            Err.Clear
            Resume
        Else
            msgValue = MsgBox("An error has occured when trying to populate PO: " & PO & " within the SAP GUI. Please review populated information and action window pop up, correct if required. Press OK to continue once actioned.", vbOKCancel + vbCritical + vbMsgBoxSetForeground, "Warning Message")
            If msgValue = vbOK Then
                Err.Clear
                session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
                session.findById("wnd[0]").sendVKey 0
                session.findById("wnd[0]/tbar[1]/btn[17]").press
                session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
                session.findById("wnd[1]").sendVKey 0
                ' Expand all tabs
                session.findById("wnd[0]").sendVKey 29
                session.findById("wnd[0]").sendVKey 28
                session.findById("wnd[0]").sendVKey 27
                Resume Next
            Else
                Exit Sub
            End If
            conttrol = 0
        End If
    End If
    
End Sub
Attribute VB_Name = "G_RibbonControls"
'Option Explicit

Sub Split_Vendors(control As IRibbonControl)
    'Reviewed and tested with updates: FH, 2019-03-19
    Application.ScreenUpdating = False
    
    Dim ven, ven2, Namess
    Dim EndRow As Long
    Dim MBText As String
      
    On Error GoTo DunDun

    'Sheets("ZRTC_PO_EXPED").Range("C2:C65536").AdvancedFilter Action:=xlFilter  'Copy, CopyToRange:=Sheets("Controller").Range("AQ1"), Unique:=True
    
    Range("OOR_Report").AutoFilter
        
        Dim i As Long
        Dim VendorRefID As Range       'Used for returning Range(row) of Reference
        Dim VendorRefRow As String     'Used for collecting row number from above Range
        Dim VendorTestString           'For checking if all Vendors are Blank
        Dim Vendor As Variant          'For pasting single value or range of values into SAP
        Dim ManualVendorRefID As Range       'Used for returning Range(row) of Reference
        Dim ManualVendorRefRow As String     'Used for collecting row number from above Range
        Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("Controller")
                        
        'Find Tabel row of DataType
        Set VendorRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Vendor1")
        VendorRefRow = VendorRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
        
        For i = VendorRefRow To (VendorRefRow + 15)
            VendorTestString = VendorTestString & ws.[TblController[DataValue]].Rows(i).Text
        Next
        
        If VendorTestString = "" Then
            MsgBox "This function may only be used when Vendor Codes has been provided as input before running the report.", vbInformation + vbMsgBoxSetForeground, "WARNING!!"
            Exit Sub
        End If
        
    For ven2 = VendorRefRow + 1 To VendorRefRow + 15 + 1
        
        ven = Sheets("Controller").Cells(ven2, 2).Value
        
        If ven = "" Then
           GoTo NextVen2
           'Next ven2
        End If
        Sheets("ZRTC_PO_EXPED").Select
        ActiveSheet.ListObjects("OOR_Report").Range.AutoFilter Field:=3, Criteria1:=ven
        
        ThisWorkbook.Sheets("ZRTC_PO_EXPED").Range("D1").Select
        Selection.End(xlDown).Select  ').Select.Text
        Namess = Left(Selection.Text, 30)
        
        For i = 1 To Worksheets.Count
            If Worksheets(i).Name = Namess Then
                MBText = "Sheet """ & Namess & """ already exits. The ""Split Suppliers into Sheets"" function will terminate."
                MsgBox MBText, vbInformation + vbMsgBoxSetForeground, "WARNING!!"
            End If
        Next i
        
        EndRow = Selection.Row
        Sheets.Add.Name = Namess
        
        Sheets("ZRTC_PO_EXPED").Select
        Range("A1", "A" & EndRow).Select                    'Replaces "xlDown" as this stops when a blank appears in the column. This however selects the whole column, also outside table.
        Range(Selection, Selection.End(xlToRight)).Select
        'Range(Selection, Selection.End(xlDown)).Select
        Selection.Copy
            
''        Range("C1").Select
''        Selection.End(xlDown).Select
''        Namess = Selection
''        If Namess = "" Then Next ven2
''
''        Sheets("ZRTC_PO_EXPED").Select
''        ActiveSheet.ListObjects("OOR_Report").Range.AutoFilter Field:=3, Criteria1:=ven
''        Range("A1").Select
''        Range(Selection, Selection.End(xlToRight)).Select
''        Range(Selection, Selection.End(xlDown)).Select
''        Selection.Copy

        
        
        ThisWorkbook.Sheets(Namess).Activate
        Range("A1").PasteSpecial Paste:=xlPasteColumnWidths, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Range("A1").PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        ActiveSheet.Paste
        
        ActiveSheet.ListObjects.Add(xlSrcRange, Selection, xlYes).Name = "OOR_Report_" & ven
NextVen2:
    Namess = ""
    Next ven2

    Application.CutCopyMode = False
    Sheets("ZRTC_PO_EXPED").Activate
    'ActiveSheet.ListObjects("OOR_Report").Range.AutoFilter Field:=1
    ActiveSheet.ListObjects("OOR_Report").AutoFilter.ShowAllData
    Range("A1").Select
    Application.ScreenUpdating = True
    
    
    Exit Sub

DunDun:
    Application.CutCopyMode = False
    Sheets("ZRTC_PO_EXPED").Activate
    'ActiveSheet.ListObjects("OOR_Report").Range.AutoFilter Field:=1
    ActiveSheet.ListObjects("OOR_Report").AutoFilter.ShowAllData
    Range("A1").Select
    Application.ScreenUpdating = True
    
End Sub

'Callback for customButton4 onAction
Sub POtextUp1(control As IRibbonControl)
    
    If Sheets("ZRTC_PO_EXPED").FilterMode = True Then 'autofilter is 'on'
      msgValue = MsgBox("Your filter is active when running upload feature. The report will upload any data selected including in hidden regions. Would you still like to continue?", vbYesNo + vbCritical + vbMsgBoxSetForeground, "Warning Message")
        If msgValue = vbYes Then
            Call POtextUp
        End If
    Else
        Call POtextUp
    End If

End Sub


'Callback for customButton1 onAction
Sub LoopingPO(control As IRibbonControl)
    Call POtextDown
End Sub


Sub PDFcreator1(control As IRibbonControl)

    Dim AddAnalyseRefID As Range        'Used for returning Range(row) of Reference
    Dim AddAnalyseRefRow As String      'Used for collecting row number from above Range
    
    Dim AnalyseOption As Long
    
    'Find Tabel row of DataType
    Set AddAnalyseRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Analyse Report")
    AddAnalyseRefRow = AddAnalyseRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    AnalyseOption = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(AddAnalyseRefRow)
    
    If AnalyseOption = 1 Then
        MsgBox "Analysis already performed. Please re-run report if new analysis is required", vbMsgBoxSetForeground
    Else
        Call AnalysisMc
        Call PDFcreator
        ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(AddAnalyseRefRow).Value = 1
        ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(AddAnalyseRefRow).NumberFormat = "@"
    End If

End Sub



'Callback for CustomButton2 onAction
Sub Collector(control As IRibbonControl)
    If ThisWorkbook.Sheets("Controller").Cells(2, 3).Value = 1 Then
        ThisWorkbook.Sheets("Controller").Cells(2, 3).Value = 0
        Exit Sub
    End If
    If ThisWorkbook.Sheets("Controller").Cells(2, 3).Value = 0 Then
        ThisWorkbook.Sheets("Controller").Cells(2, 3).Value = 1
        Exit Sub
    End If
End Sub


Sub POExUp(control As IRibbonControl)
    ' If Sheets("ZRTC_PO_EXPED").Cells(1, 11).Value = "Deliv. Date" Then
    msgValue1 = MsgBox("This function will replace the PO Exception Message with what has been entered in this report. Do you wish to continue?", vbYesNo + vbCritical + vbMsgBoxSetForeground, "Warning Message")
    If msgValue1 = vbYes Then
        If Sheets("ZRTC_PO_EXPED").FilterMode = True Then 'autofilter is 'on'
          msgValue = MsgBox("Your filter is active when running upload feature. The report will upload any data selected including in hidden regions. Would you still like to continue?", vbYesNo + vbCritical + vbMsgBoxSetForeground, "Warning Message")
            If msgValue = vbYes Then
                Call POexecUp
            End If
        Else
            Call POexecUp
        End If
    End If
    ' End If
End Sub



'Callback for customButton onAction
Sub Add_USDD(control As IRibbonControl)
    Application.DisplayAlerts = False                    'disables alerts
    
    ThisWorkbook.Worksheets("ZRTC_PO_EXPED").Activate
    Call Add_USD
    
    Application.DisplayAlerts = True                   'disables alerts
End Sub


Sub UpStatDatee(control As IRibbonControl)
    ThisWorkbook.Worksheets("ZRTC_PO_EXPED").Activate
    
    If Application.CountIf(Rows(1), "New Stat.Delv.Date") <> 0 Then
       Call StatDateUp
    Else
       MsgBox "Cannot update Stat.Delv.Date till New Stat.Delv.Date Column is created (See button ADD NEW STAT.DATE).", vbInformation + vbMsgBoxSetForeground, "WARNING!!"
    End If
End Sub


Sub AddNewStatDatee(control As IRibbonControl)
    'Reviewed with minor updates: FH, 2019-03-19
    Dim StopStatDate As Long
       
    ThisWorkbook.Worksheets("ZRTC_PO_EXPED").Activate
    
    Application.ScreenUpdating = False
    If Application.CountIf(Rows(1), "New Stat.Delv.Date") = 0 Then
        'Warning message
        StopStatDate = MsgBox("Please note that if adding ""New Stat.Date"" to the report before adding ""Sch.Del.Date"" you will not beable to add ""Sch.Del.Date"" later.", "App Warning", vbOKCancel, vbMsgBoxSetForeground)
        If StopStatDate = vbCancel Then
            ExitSub
        End If
        
        Call AddNewStatDate
''        Sheets("ZRTC_PO_EXPED").Select
''        Columns("K:K").Select
''        Application.CutCopyMode = False
''        Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
''
''        Range("OOR_Report[[#Headers],[Column1]]").Select
''        ActiveCell.FormulaR1C1 = "New Stat.Delv"
''
''        'Implementing Doc.Date formats to new column
''        Range("OOR_Report[Doc. Date]").Select
''        Selection.Copy
''        Range("K2").Select
''        Selection.PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
''
''        Range("OOR_Report[New Stat.Delv]").Select
''        With Selection.Interior
''            .Pattern = xlSolid
''            .PatternColorIndex = xlAutomatic
''            .Color = 10092543                   'Yellow Background
''            .TintAndShade = 0
''            .PatternTintAndShade = 0
''        End With
    Else
        MsgBox "New Statisticsl Delivery Date already added to report", vbMsgBoxSetForeground
    End If
    Application.ScreenUpdating = True
End Sub

'Callback for customButton onAction
Sub DelivDateAddd(control As IRibbonControl)
    'Reviewed with minor updates: FH, 2019-03-19
    ThisWorkbook.Worksheets("ZRTC_PO_EXPED").Activate
    
    If Application.CountIf(Rows(1), "Sch.Del.Date") = 0 Then
        If Application.CountIf(Rows(1), "New Stat.Delv.Date") = 0 Then ' prevent a mis alignment
            Application.ScreenUpdating = False
                Call DelivDateAdd
            Application.ScreenUpdating = True
        Else
             MsgBox "Not able run ""Add Sch.Del.Date"" after running ""Add New Stat.Delv.Date.""", vbInformation + vbMsgBoxSetForeground, "WARNING!!"
        End If
    Else
        MsgBox "The ""Add Deliv.Date"" function has already been completed.", vbInformation + vbMsgBoxSetForeground, "WARNING!!"
    End If
End Sub

Sub DelivDateAdd()
    'Function adds Schedule Line Delivery Date to OOR output
    'Function may be ran from report controls or when generating the report
    'Reviewed with minor updates: FH, 2019-03-19
    
    Dim ER As Long, ER2 As Long
    Dim ws As Worksheet, ws2 As Worksheet
    
    Set ws = ThisWorkbook.Sheets("ZRTC_PO_EXPED")
    Set ws2 = ThisWorkbook.Sheets("Controller")
    ER = ws.Cells(Rows.Count, 5).End(xlUp).Row
    ER2 = ws2.Cells(Rows.Count, 6).End(xlUp).Row
    
    ws.Select
    
    'Adds a new column for Delivery Date ("Schedule Line delivery Date")
    Columns("L:L").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("OOR_Report[[#Headers],[Column1]]").FormulaR1C1 = "Sch.Del.Date"

    Range("OOR_Report[Sch.Del.Date]").Select
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With

    Selection.FormatConditions.Delete

''    Range("OOR_Report[Days to MRP]").Select
    
    'Adds new column to enter "New Delivery Date" in column 21
    Columns("V:V").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("OOR_Report[[#Headers],[Column1]]").FormulaR1C1 = "New Sch.Del.Date"
    
''    Selection.ListObject.ListColumns.Add Position:=22
''    Range("OOR_Report[[#Headers],[Column1]]").Select
''    ActiveCell.FormulaR1C1 = "New Sch.Del.Date"
    
    Range("OOR_Report[New Sch.Del.Date]").Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10092543                   'Yellow Background
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.ColumnWidth = 12
   
''    Range("OOR_Report[New Conf.Date]").Select
''    With Selection.Interior
''        .Pattern = xlNone
''        .TintAndShade = 0
''        .PatternTintAndShade = 0
''    End With
''    Selection.ColumnWidth = 12
    
'*** This sequence works but is slow (1 hour for 20,000 lines)
''''    'Look up Schedule Line Delivery Date kept in Controller Sheet vs. PO.Doc-Item from ZRTC_PO_EXPED
''''    For rw = 2 To ER
''''        For rw2 = 2 To ER2
''''            If ws.Cells(rw, 5).Value = ws2.Cells(rw2, 6).Value Then
''''                ws.Cells(rw, 12).Value = ws2.Cells(rw2, 7).Value
''''
''''                'Format according to Confirmed / Cancel count background colour used in Overview Sheet
''''                If ThisWorkbook.Sheets("ZRTC_PO_EXPED").Cells(rw, 13).Interior.ColorIndex = ThisWorkbook.Sheets("Overview").Cells(14, 18).Interior.ColorIndex Then
''''                    ws.Cells(rw, 12).Select
''''                    With Selection.Interior
''''                        .Pattern = xlSolid
''''                        .PatternColorIndex = xlAutomatic
''''                        .Color = 508415
''''                        .TintAndShade = 0
''''                        .PatternTintAndShade = 0
''''                    End With
''''                End If
''''                rw2 = ER2
''''            End If
''''        Next rw2
''''    Next rw
                
'*** Alternaative sequence based on adding VLOOKUP to table
    ws.Select
    Range("L2").Select
    ActiveCell.Formula = "=VLOOKUP([@[Purch.Doc.-Item]],TblController[[Purchasing Document-Item]:[Sch.Line Delv.Date]],2,FALSE)"
'*** Overwrite formulae with value
    Range("L2").Select
    Range(Selection, Selection.End(xlDown)).Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    ActiveSheet.Paste
    Application.CutCopyMode = False
    Range("OOR_Report[[#Headers],[Sch.Del.Date]]").Select
            
''    If Application.International(xlDecimalSeparator) = "." Then
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "dd/mm/yyyy" Then e = 4
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "mm/dd/yyyy" Then e = 3
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "yyyy/mm/dd" Then e = 5
''    End If
''
''    If Application.International(xlDecimalSeparator) = "," Then
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "dd/mm/yyyy" Then e = 1
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "mm/dd/yyyy" Then e = 2
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "yyyy/mm/dd" Then e = 5
''    End If
''        If Application.International(xlCountrySetting) = "55" Then
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "dd/mm/yyyy" Then e = 4
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "mm/dd/yyyy" Then e = 3
''        If ThisWorkbook.Sheets("Controller").Cells(11, 2) = "yyyy/mm/dd" Then e = 5
''    End If
''
''    Range("OOR_Report[Deliv. Date]").Select
''    Selection.TextToColumns Destination:=Range("K2"), DataType:=xlDelimited, _
''        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=False, Tab:=True, _
''        Semicolon:=False, Comma:=False, Space:=False, Other:=False, FieldInfo _
''        :=Array(1, e), TrailingMinusNumbers:=True
    
    Set DateRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Date Layout Wanted")
    DateRefRow = DateRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    Range("OOR_Report[Sch.Del.Date]").NumberFormat = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow)
    Range("OOR_Report[New Sch.Del.Date]").NumberFormat = ThisWorkbook.Sheets("Controller").[TblController[DataValue]].Rows(DateRefRow)

''    '---------------------------------------------------
''    ' Add in conditional formatting
''    '--------------------------------------------------
''    'Create colour scale to days to MRP
''    Range("OOR_Report[Days to MRP]").Select
''        Selection.FormatConditions.AddColorScale ColorScaleType:=3
''        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''        Selection.FormatConditions(1).ColorScaleCriteria(1).Type = xlConditionValueNumber
''        Selection.FormatConditions(1).ColorScaleCriteria(1).Value = -20
''    With Selection.FormatConditions(1).ColorScaleCriteria(1).FormatColor
''        .Color = 7039480
''        .TintAndShade = 0
''    End With
''    Selection.FormatConditions(1).ColorScaleCriteria(2).Type = xlConditionValueNumber
''    Selection.FormatConditions(1).ColorScaleCriteria(2).Value = 0
''    With Selection.FormatConditions(1).ColorScaleCriteria(2).FormatColor
''        .Color = 8711167
''        .TintAndShade = 0
''    End With
''    Selection.FormatConditions(1).ColorScaleCriteria(3).Type = xlConditionValueNumber
''    Selection.FormatConditions(1).ColorScaleCriteria(3).Value = 40
''    With Selection.FormatConditions(1).ColorScaleCriteria(3).FormatColor
''        .Color = 8109667
''        .TintAndShade = 0
''    End With
''
''    'Create colour scale for Due Date
''    Range("OOR_Report[Days Due]").Select
''        Selection.FormatConditions.AddColorScale ColorScaleType:=3
''        Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''        Selection.FormatConditions(1).ColorScaleCriteria(1).Type = xlConditionValueNumber
''        Selection.FormatConditions(1).ColorScaleCriteria(1).Value = 0
''    With Selection.FormatConditions(1).ColorScaleCriteria(1).FormatColor
''        .Color = 7039480
''        .TintAndShade = 0
''    End With
''    Selection.FormatConditions(1).ColorScaleCriteria(2).Type = xlConditionValueNumber
''    Selection.FormatConditions(1).ColorScaleCriteria(2).Value = 30
''    With Selection.FormatConditions(1).ColorScaleCriteria(2).FormatColor
''        .Color = 8711167
''        .TintAndShade = 0
''    End With
''    Selection.FormatConditions(1).ColorScaleCriteria(3).Type = xlConditionValueHighestValue
''    With Selection.FormatConditions(1).ColorScaleCriteria(3).FormatColor
''        .Color = 8109667
''        .TintAndShade = 0
''    End With
''
''    'Create colour coding on Stat date for late to contract or early
''    Range("OOR_Report[Stat.Delv.]").Select
''    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$J2<$L2-4"
''    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''    With Selection.FormatConditions(1).Interior
''        .PatternColorIndex = xlAutomatic
''        .ThemeColor = xlThemeColorAccent2
''        .TintAndShade = 0.599963377788629
''    End With
''    Selection.FormatConditions(1).StopIfTrue = False
''    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$J2<TODAY()-3"
''    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''    With Selection.FormatConditions(1).Interior
''        .PatternColorIndex = xlAutomatic
''        .ThemeColor = xlThemeColorAccent2
''        .TintAndShade = 0.599963377788629
''    End With
''    Selection.FormatConditions(1).StopIfTrue = False
''    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$J2<$N2"
''    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''    With Selection.FormatConditions(1).Interior
''        .PatternColorIndex = xlAutomatic
''        .ThemeColor = xlThemeColorAccent3
''        .TintAndShade = 0.599963377788629
''    End With
''    Selection.FormatConditions(1).StopIfTrue = False
''
''    'Create Red mark when no Confirmed date
''    Range("OOR_Report[Conf Del D]").Select
''    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$L2=" & Chr(34) & Chr(34)
''    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''    With Selection.FormatConditions(1).Interior
''        .PatternColorIndex = xlAutomatic
''        .ThemeColor = xlThemeColorAccent2
''        .TintAndShade = 0.599963377788629
''    End With
''    Selection.FormatConditions(1).StopIfTrue = False
''
''    Range("OOR_Report[New Conf.Date]").Select
''    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$L2<$V2"
''    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''    With Selection.FormatConditions(1).Interior
''        .PatternColorIndex = xlAutomatic
''        .ThemeColor = xlThemeColorAccent6
''        .TintAndShade = 0.599993896298105
''    End With
''    Selection.FormatConditions(1).StopIfTrue = False
''    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$L2>$V2"
''    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''    With Selection.FormatConditions(1).Interior
''        .PatternColorIndex = xlAutomatic
''        .ThemeColor = xlThemeColorAccent4
''        .TintAndShade = 0.599993896298105
''    End With
''    Selection.FormatConditions(1).StopIfTrue = False
''    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=$V2=" & Chr(34) & Chr(34)
''    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
''    With Selection.FormatConditions(1).Interior
''        .PatternColorIndex = xlAutomatic
''        .Color = 10092543
''        .TintAndShade = 0
''    End With
''    Selection.FormatConditions(1).StopIfTrue = False
    
    
    On Error GoTo NorwegianIssue ' Changes formula
    Range("OOR_Report[New Conf.Date]").Select
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=AND($V2>=($L2-14),$V2<=($L2+4))"
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 10092543
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    
NorwegianIssue:                 'Formula split "," vs ";"
    If Err.Number <> 0 Then
        Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=AND($V2>=($L2-14);$V2<=($L2+4))"
        Err.Clear
        Resume Next
    End If
    
End Sub


Sub AddNewStatDate()
    'Function adds New Stat Date Column to OOR output
    'Function may be ran from report controls or when generating the report
    'Reviewed with minor updates: FH, 2019-03-19
    
    Dim ER As Long
    Dim ws As Worksheet, ws2 As Worksheet
    Dim EC As Long, NewStatDateColumn As Long
    
    Set ws = ThisWorkbook.Sheets("ZRTC_PO_EXPED")
    Set ws2 = ThisWorkbook.Sheets("Controller")
    ER = ws.Cells(Rows.Count, 5).End(xlUp).Row
    
    Dim DateRefID As Range       'Used for returning Range(row) of Reference
    Dim DateRefRow As String     'Used for collecting row number from above Range
    
    'Find Tabel row of DataType
    Set DateRefID = ThisWorkbook.Worksheets("Controller").[TblController[DataType]].Find(What:="Date Layout Wanted")
    DateRefRow = DateRefID.Row - (ThisWorkbook.Worksheets("Controller").[TblController[[#Headers],[DataType]]].Row)   'minus table header row...
    
    
    ws.Select
    
    'Adds a new column for New Stat. Date
    EC = ws.Cells(1, Columns.Count).End(xlToLeft).Column            'ws is the worksheet and 1 is the row to look in.
    For i = EC To 1 Step -1                                         'Step -1 to go in reverse order
        If ws.Cells(1, i).Value = "Stat.Delv." Then       'Inser new Column in were PO Exception Message is now
            NewStatDateColumn = i + 1
            i = 1
        End If
    Next i
    
    Columns(NewStatDateColumn).Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("OOR_Report[[#Headers],[Column1]]").FormulaR1C1 = "New Stat.Delv.Date"


    Range("OOR_Report[New Stat.Delv.Date]").Select
    With Selection
        .NumberFormat = Sheets("Controller").Cells(DateRefRow + 1, 2)
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
    End With
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 10092543                   'Yellow Background
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    Selection.FormatConditions.Delete
        
    Columns(NewStatDateColumn).ColumnWidth = 12
    
End Sub


Sub ItemTextAdd()
    'Function adds Item Text to OOR output
    'Function may be ran from report controls or when generating the report
    'Created: FH, 2019-04-25, Based on add AddDelivDate sub
    
    Dim ER As Long, ER2 As Long
    Dim ws As Worksheet, ws2 As Worksheet
    Dim EC As Long, ItemTextColumn As Long
    
    Set ws = ThisWorkbook.Sheets("ZRTC_PO_EXPED")
    Set ws2 = ThisWorkbook.Sheets("Controller")
    ER = ws.Cells(Rows.Count, 5).End(xlUp).Row
    ER2 = ws2.Cells(Rows.Count, 6).End(xlUp).Row
    
    ws.Select
    
    'Adds a new column for Delivery Date ("Schedule Line delivery Date")
    EC = ws.Cells(1, Columns.Count).End(xlToLeft).Column            'ws is the worksheet and 1 is the row to look in.
    For i = EC To 1 Step -1                                         'Step -1 to go in reverse order
        If ws.Cells(1, i).Value = "PO Exception Message" Then       'Inser new Column in were PO Exception Message is now
            ItemTextColumn = i
            i = 1
        End If
    Next i
    
    Columns(ItemTextColumn).Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Range("OOR_Report[[#Headers],[Column1]]").FormulaR1C1 = "Item Text"

    Range("OOR_Report[Item Text]").Select
    With Selection
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlTop
        .WrapText = True
    End With
    Columns(ItemTextColumn).ColumnWidth = 40                        'ItemTextColumn
    
    'Look up Schedule Line Delivery Date kept in Controller Sheet vs. PO.Doc-Item from ZRTC_PO_EXPED
    For rw = 2 To ER
        For rw2 = 2 To ER2
            If ws.Cells(rw, 5).Value = ws2.Cells(rw2, 6).Value Then
                ws.Cells(rw, ItemTextColumn).Value = ws2.Cells(rw2, 8).Value
                rw2 = ER2
            End If
        Next rw2
    Next rw
    
End Sub
Attribute VB_Name = "SAP_Functions"
Dim lol


'This Module contains functions for Opening ME22N or MD04 when doubleclicking PO Lines in the ZRTC_PO_EXPED sheet.
'The code calling/running these SubProcedures is stored in the code section for "ThisWorkbook"

Sub POrun()

 If Not IsObject(App) Then
   Set SapGuiAuto = GetObject("SAPGUI")
   Set App = SapGuiAuto.GetScriptingEngine
End If
If Not IsObject(Connection) Then
   Set Connection = App.Children(0)
End If
If Not IsObject(session) Then
   Set session = Connection.Children(0)
End If
If IsObject(Wscript) Then
   Wscript.ConnectObject session, "on"
   Wscript.ConnectObject App, "on"
End If


session.findById("wnd[0]").maximize

ST = Selection.Row
PO = Range("OOR_Report[Purch.Doc.-Item]").Rows(ST - 1)
POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(ST - 1), 10)
Numb = Len(Range("OOR_Report[Purch.Doc.-Item]").Rows(ST - 1))
lineitem = Right(PO, Numb - 11)

session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
session.findById("wnd[0]").sendVKey 0

session.findById("wnd[0]/tbar[1]/btn[17]").press
session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
session.findById("wnd[1]").sendVKey 0

On Error Resume Next

If lineitem <> 10 Then
    ' Filter to the correct PO / Req line item
        Call picktype
        lol = Sheets("Controller").Cells(1, 3).Value
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211").Columns.elementAt(1).Selected = True
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").setFocus
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/tblSAPLMEGUITC_1211/txtMEPO1211-EBELP[1,0]").caretPosition = 0
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB2:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1211/btnEDITFILTER").press
        session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").Text = lineitem
        session.findById("wnd[1]/usr/ssub%_SUBSCREEN_FREESEL:SAPLSSEL:1105/ctxt%%DYN001-LOW").caretPosition = 2
        session.findById("wnd[1]").sendVKey 0
        Call picktype
        lol = Sheets("Controller").Cells(1, 3).Value
        
'        session.findById("wnd[0]").sendVKey 29
'        session.findById("wnd[0]").sendVKey 28
'        session.findById("wnd[0]").sendVKey 27

        Call picktype
        lol = Sheets("Controller").Cells(1, 3).Value
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").setFocus
        session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB1:SAPLMEGUI:6000/cmbDYN_6000-LIST").Key = "   1"
End If

Call picktype
lol = Sheets("Controller").Cells(1, 3).Value
session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21").Select
Call picktype
lol = Sheets("Controller").Cells(1, 3).Value
session.findById("wnd[0]/usr/subSUB0:SAPLMEGUI:" & lol & "/subSUB3:SAPLMEVIEWS:1100/subSUB2:SAPLMEVIEWS:1200/subSUB1:SAPLMEGUI:1301/subSUB2:SAPLMEGUI:1303/tabsITEM_DETAIL/tabpTABIDT21/ssubTABSTRIPCONTROL1SUB:SAPLMEGUI:1329/subTEXTS:SAPLMMTE:0200/cntlTEXT_TYPES_0200/shell").selectedNode = "F04"
End Sub

Sub POrun2()

 If Not IsObject(App) Then
   Set SapGuiAuto = GetObject("SAPGUI")
   Set App = SapGuiAuto.GetScriptingEngine
End If
If Not IsObject(Connection) Then
   Set Connection = App.Children(0)
End If
If Not IsObject(session) Then
   Set session = Connection.Children(0)
End If
If IsObject(Wscript) Then
   Wscript.ConnectObject session, "on"
   Wscript.ConnectObject App, "on"
End If

ST = Selection.Row
POnum = Left(Range("OOR_Report[Purch.Doc.-Item]").Rows(ST - 1), 10)



session.findById("wnd[0]/tbar[0]/okcd").Text = "/nme22n"
session.findById("wnd[0]").sendVKey 0

session.findById("wnd[0]/tbar[1]/btn[17]").press
session.findById("wnd[1]/usr/subSUB0:SAPLMEGUI:0003/ctxtMEPO_SELECT-EBELN").Text = POnum
session.findById("wnd[1]").sendVKey 0

End Sub



Sub MD04run()

If Not IsObject(App) Then
   Set SapGuiAuto = GetObject("SAPGUI")
   Set App = SapGuiAuto.GetScriptingEngine
End If
If Not IsObject(Connection) Then
   Set Connection = App.Children(0)
End If
If Not IsObject(session) Then
   Set session = Connection.Children(0)
End If
If IsObject(Wscript) Then
   Wscript.ConnectObject session, "on"
   Wscript.ConnectObject App, "on"
End If

ST = Selection.Row
PrtNo = Sheets("ZRTC_PO_EXPED").Cells(ST, 8)
Plant = Sheets("ZRTC_PO_EXPED").Cells(ST, 2)

session.findById("wnd[0]/tbar[0]/okcd").Text = "/nmd04"
session.findById("wnd[0]").sendVKey 0
session.findById("wnd[0]/usr/tabsTAB300/tabpF01/ssubINCLUDE300:SAPMM61R:0301/ctxtRM61R-MATNR").Text = PrtNo
session.findById("wnd[0]/usr/tabsTAB300/tabpF01/ssubINCLUDE300:SAPMM61R:0301/ctxtRM61R-WERKS").Text = Plant
session.findById("wnd[0]").sendVKey 0
session.findById("wnd[0]").sendVKey 5
session.findById("wnd[0]/usr/tabsTABTC/tabpTB05").Select

End Sub





Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


Private Sub Workbook_SheetBeforeDoubleClick(ByVal Sh As Object, ByVal Target As Range, Cancel As Boolean)
    If ActiveSheet.Name = "ZRTC_PO_EXPED" Then
        On Error Resume Next
        If Target.Column = 5 Then
            If ThisWorkbook.Sheets("Controller").Cells(2, 3).Value = 1 Then
                Call POrun
            Else
                Call POrun2
            End If
        End If
        
        If Target.Column = 8 Then Call MD04run
    End If
End Sub
Attribute VB_Name = "Z_API_Functions"
Option Explicit

Public Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As Long) As Integer

Public Declare Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As Integer

Public Declare Function SetForegroundWindow Lib "user32" (ByVal hWnd As Long) As Long

Public Declare Function GetWindowText Lib "user32" Alias "GetWindowTextA" (ByVal hWnd As Long, ByVal lpString As String, ByVal cch As Long) As Long



'Added Functions

Function ShowCacheIndex(rngPT As Range) As Long
'Returns Pivot table Cache Index Number
  ShowCacheIndex = rngPT.PivotTable.CacheIndex
End Function

Sub SelPTNewCache()
'Creates a new cache for an existing Pivot
    Dim wsTemp As Worksheet
    Dim pt As PivotTable
    
    On Error Resume Next
    Set pt = ActiveCell.PivotTable
    
    If pt Is Nothing Then
        MsgBox "Active cell is not in a pivot table"
    Else
        Set wsTemp = Worksheets.Add
        
        ActiveWorkbook.PivotCaches.Create( _
            SourceType:=xlDatabase, _
            SourceData:=pt.SourceData).CreatePivotTable _
            TableDestination:=wsTemp.Range("A3"), _
            TableName:="PivotTableTemp"
        
        pt.CacheIndex = wsTemp.PivotTables(1).CacheIndex
        
        'Application.DisplayAlerts = False
        wsTemp.Delete
        'Application.DisplayAlerts = True
    End If
    
exitHandler:
        Set pt = Nothing

End Sub


' InQuest injected base64 decoded content
' *'~*
' HMz5!
' x)br

INQUEST-PP=macro
