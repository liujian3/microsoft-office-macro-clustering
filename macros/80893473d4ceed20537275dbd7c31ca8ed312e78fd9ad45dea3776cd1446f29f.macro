Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Hauptmen|fffd|"
Attribute VB_Base = "0{20DD9D95-C77C-4FF5-836C-176A1160B4F3}{9977D9CB-39B9-4159-86BC-EB654B1E6CB4}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'##### "X" - Verhindert die Verwendung der Windows-Schaltfl|fffd|che Schlie|fffd|en #####
Private Sub UserForm_QueryClose _
 (Cancel As Integer, CloseMode As Integer)
 If CloseMode = vbFormControlMenu Then

 MsgBox "Bitte Formular nur |fffd|ber die vorgesehene Schaltfl|fffd|che beenden"
 Cancel = True
  End If
End Sub

'Darstellung der "Userform" in Vollbild
'Frame1 = der Rahmen, dessen Inhalt der in die Fenster-Mitte zentriert wird !!!

Private Sub UserForm_Activate()

Application.WindowState = xlMaximized
Me.Width = Application.Width
Me.Height = Application.Height

Frame1.Top = (Me.Height - Frame1.Height) / 2
Frame1.Left = (Me.Width - Frame1.Width) / 2
Frame1.Width = Frame1.Width * Application.Width / Me.Width

End Sub


Private Sub UserForm_Initialize()

''Anpassen der "Userform" an Bildschirm-Gr|fffd||fffd|e
Dim a As Control
Dim faktor_h, faktor_w As Integer
faktor_h = Application.Height / Hauptmen|fffd|.Height
faktor_w = Application.Height / Hauptmen|fffd|.Width
Hauptmen|fffd|.Width = Application.Width
Hauptmen|fffd|.Height = Application.Height
Hauptmen|fffd|.Left = 0
Hauptmen|fffd|.Top = 0
For Each a In Controls
  a.Top = a.Top * faktor_h
  a.Left = a.Left * faktor_w
  a.Height = a.Height * faktor_h
  a.Width = a.Width * faktor_w
Next

End Sub


'##### PRODUKTION #####
Private Sub cbProduktion_Click()
Hauptmen|fffd|.Hide
Produktion.Show
End Sub

'##### Messraum #####
Private Sub cbMessraum_Click()
Hauptmen|fffd|.Hide
Messraum.Show
End Sub

'##### ENDE -Button #####
Private Sub cbEnde_Click()
Unload Hauptmen|fffd|
End Sub

Attribute VB_Name = "Messraum"
Attribute VB_Base = "0{A3483BD8-2627-4880-AEA3-FCF9E653823E}{E29A5DCA-F243-4EA9-8F17-E44931D56288}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'Option Explicit
'##### Makro f|fffd|r die Bereitstellungsliste Messraum, geschrieben von Gunnard Stefan am 21.06.2014 #####

'##### Abbruch-Button #####
Private Sub Abbruch_Click()
Unload Me
Hauptmen|fffd|.Show
End Sub


'########## |fffd|NDERN ##########
Private Sub |fffd|ndern_Click()

If QStart.Value = "" Then
    MsgBox "Bitte geben Sie den Zeitpunkt an, an dem mit der Pr|fffd|fung des Bauteils begonnen wurde!"
    QStart.SetFocus
    Exit Sub
End If

'Plausibilit|fffd|tspr|fffd|fung der Zeitstempel

'Vergleiche Bereitstellung zu Start Messung
If Me.QStart.Value < Me.Bereitstellungszeitpunkt.Value Then
    MsgBox "Q-Start-Zeitpunkt kann nicht vor dem Zeitpunkt Bereitstellung liegen!" & vbCrLf & "" & vbCrLf & "Bitte Zeitpunkt Q-Start (Datum und Uhrzeit) pr|fffd|fen und korrigieren!"
    QStart.SetFocus
    Exit Sub
End If



'Vergleiche QStart zu QEnde
If Me.QEnde.Value < Me.QStart.Value Then
    MsgBox "Zeitpunkt Q-Ende kann nicht vor dem Zeitpunkt Q-Start liegen!" & vbCrLf & "" & vbCrLf & "Bitte Zeitpunkte (Datum und Uhrzeit) |fffd|berpr|fffd|fen und korrigieren!"
    QEnde.SetFocus
    Exit Sub
End If

'Pflichtfelder definieren
If OP.Value = "" Then
    MsgBox "Bitte geben Sie die OP an!"
    OP.SetFocus
    Exit Sub
End If

If Messprogramm.Value = "" Then
    MsgBox "Bitte geben Sie an, mit welchem Messprogramm dieses Bauteil gemessen wurde!"
    Messprogramm.SetFocus
    Exit Sub
End If


    
If Pr|fffd|fergebnis.Value = "" Then
    MsgBox "Bitte geben Sie das Pr|fffd|fergebnis an"
    Pr|fffd|fergebnis.SetFocus
    Exit Sub
End If

If Ma|fffd|nahmen.Value = "" Then
    MsgBox "Bitte w|fffd|hlen Sie erforderliche Ma|fffd|nahmen aus"
    Ma|fffd|nahmen.SetFocus
    Exit Sub
End If

'############## Abfrage ob SNr Erstteil nach Korrektur leer ist ################

If Korrektur.Value = True And Erstteil.Value = "" Then
    MsgBox "Bitte geben Sie die SNr. vom Erstteil nach Korrektur an!"
    Erstteil.SetFocus
    Exit Sub
End If

If QMA.Value = "" Then
    MsgBox "Bitte geben Sie Ihre Personalnummer ein!"
    QMA.SetFocus
    Exit Sub
End If

'ScrollBar1 = Auswahl der zu |fffd|ndernden Datenzeile
we = Me.ScrollBar1.Value
Me.ScrollBar1 = we
'auslesen der zu |fffd|ndernden Datenfelder (we = Nr.+aus Spalte = in Textfeld)

Cells(we, 9) = Me.QMA
Cells(we, 10) = Me.QStart
Cells(we, 11) = Me.QEnde

Cells(we, 20) = Me.OP

Cells(we, 21) = Me.Messprogramm
Cells(we, 23) = Me.Pr|fffd|fergebnis
Cells(we, 24) = Me.Ma|fffd|nahmen

Cells(we, 26) = Me.Bemerkungen
Cells(we, 37) = Me.Erstteil

  '===== Zustand der Checkbox(en) |fffd|ndern setzen =====

'Cells(we, 25) = Me.SAP
If SAP.Value = True Then
Cells(we, 25) = "JA"
Else
Cells(we, 25) = ""
End If

'Cells(we, 36) = Me.Korrektur
If Ma|fffd|nahmen.Value = "Korrektur erforderlich" And Korrektur.Value = True Then
Cells(we, 36) = "JA"
ElseIf Ma|fffd|nahmen.Value = "Korrektur erforderlich" And Korrektur.Value = False Then
Cells(we, 36) = ""
Else
Cells(we, 36) = "---"
End If

'Cells(we, 38) = Me.KorErfolgreich
If KorErfolgreich.Value = False Then
Cells(we, 38) = "n.i.O."
ElseIf KorErfolgreich.Value = True Then
Cells(we, 38) = "i.O."
Else
Cells(we, 38) = "???"
End If

'Cells(we, 22) = Me.Oberfl|fffd|chen
If Oberfl|fffd|chen.Value = True Then
Cells(we, 22) = "JA"
Else
Cells(we, 22) = ""
End If

ActiveSheet.Calculate

MsgBox "Eingaben erfolgreich gespeichert!"

Unload Me
Messraum.Show
'Hauptmen|fffd|.Show
ActiveWorkbook.Save


End Sub


Private Sub Pr|fffd|fergebnis_Change()
    If Me.Pr|fffd|fergebnis = "Bauteil n.i.O." Then
    SAPUnterbrechung.Visible = True
    Else
    SAPUnterbrechung.Visible = False
    End If
End Sub
   
'######## Checkbox bei Klick f|fffd|rben ########
Private Sub Korrektur_Click()

If Korrektur Then
  Korrektur.BackColor = &HFF00&
Else
  Korrektur.BackColor = &HFF&
End If

End Sub
'########### i.O./n.i.O.-Umschaltbutton ############
Private Sub KorErfolgreich_Click()

If KorErfolgreich Then
  KorErfolgreich.BackColor = &HFF00&
  KorErfolgreich.Caption = "i.O."
Else
  KorErfolgreich.BackColor = &HFF&
  KorErfolgreich.Caption = "n.i.O."
End If


End Sub

Private Sub Oberfl|fffd|chen_Click()

If Oberfl|fffd|chen Then
  Oberfl|fffd|chen.BackColor = &HFF00&
Else
  Oberfl|fffd|chen.BackColor = &H8000000F
End If

End Sub



Private Sub SAP_Click()

If SAP Then
  SAP.BackColor = &HFF00&
Else
  SAP.BackColor = &H8000000F
End If

End Sub


'#############################################################################
Private Sub key_down()
Dim Hx As Integer


    If KeyCode = vbKeyReturn Then
        wee = Me.Nr.Text
        
        Me.Nr = Cells(wee, 1)
        Me.Projekt = Cells(wee, 2)
        Me.SNr = Cells(wee, 3)
        Me.Typ = Cells(wee, 4)
        
        Me.Pr|fffd|fgrund = Cells(wee, 8)
        Me.QMA = Cells(wee, 9)
        
        Me.QStart = Cells(wee, 10)
        Me.QEnde = Cells(wee, 11)
        
        Me.FTOP = Cells(wee, 12)
        Me.FTMaschine = Cells(wee, 13)
        Me.FTSpindel = Cells(wee, 14)
        Me.FTPalette = Cells(wee, 15)
        Me.FTSpannplatz = Cells(wee, 16)
        Me.FTLage = Cells(wee, 17)
        
        
        Me.OP = Cells(wee, 20)
        
        Me.Messprogramm = Cells(wee, 21)
        Me.Pr|fffd|fergebnis = Cells(wee, 23)
        Me.Ma|fffd|nahmen = Cells(wee, 24)
        
        
        Me.Bemerkungen = Cells(wee, 26)
        Me.Erstteil = Cells(wee, 37)
        
        '=====  Zustand der Checkbox(en) zur|fffd|ckrufen =====
        'Me.SAP = Cells(wee, 25)
        If Cells(wee, 25) = "JA" Then
        SAP.Value = True
        ElseIf Cells(wee, 25) = "" Then
        SAP.Value = False
        End If
        
        'Me.Korrektur = Cells(wee, 36)
        If Cells(wee, 36) = "JA" Then
        Korrektur.Value = True
        ElseIf Cells(wee, 36) = "" Then
        Korrektur.Value = False
        End If
        
        'Me.Oberfl|fffd|chen = Cells(wee, 22)
        If Cells(wee, 22) = "JA" Then
        Oberfl|fffd|chen.Value = True
        ElseIf Cells(wee, 22) = "" Then
        Oberfl|fffd|chen.Value = False
        End If
        
        '=====  Zustand des Umschaltfeldes zur|fffd|ckrufen =====
        'Me.KorErfolgreich = Cells(wee, 38)
        If Cells(wee, 38) = "JA" Then
        KorErfolgreich.Locked = True
        ElseIf Cells(wee, 38) = "" Then
        KorErfolgreich.Locked = False
        End If
        
        
        
        
        'Textbox vorbelegt mit verstrichener Liegezeit
        Me.Zeit = Format(Now, "hh:mm")
        Me.bereitgestellt = Format(Cells(wee, 7), "hh:mm")
        
        'VLZ = Format(CDate(Zeit) - CDate(bereitgestellt), "hh:mm")
        
        If Me.QEnde <> "" Then
        VLZ.Visible = False
        Label26.Visible = False
        Label27.Visible = False
        Label29.Visible = False
        bereitgestellt.Visible = False
        Zeit.Visible = False
        End If
        
        If Me.QEnde = "" Then
        VLZ.Visible = True
        Label26.Visible = True
        Label27.Visible = True
        Label29.Visible = True
        bereitgestellt.Visible = True
        Zeit.Visible = True
        VLZ = Format(CDate(Zeit) - CDate(bereitgestellt), "hh:mm")
        End If
        
        'Feld "Suche" leeren
        Me.Suche = ""
    End If
    'KeyCode = Empty
End Sub


'#############################################################################
Private Sub key_press()
    Dim n As Integer
    If Chr(KeyAscii.Value) >= 0 And Chr(KeyAscii.Value) <= 9 Then
        Me.Nr = Me.Nr & Int(Chr(KeyAscii.Value))
    End If

End Sub
'*********************************************************************
' Name                 :    ComboBox1_DropButtonClick (============= Korrekturen ==============)
' Description          :    Offene Korrekturen werden in das Formular |fffd|bertragen
' Author               :    Gunnard Stefan
' Created              :    27.08.14
Private Sub cmbKorrekturen_Change()

On Error GoTo err_cmbKorrekturen_Change

    If Me.cmbKorrekturen.TextLength > 0 Then
        Me.ScrollBar1.Value = cmbKorrekturen.Column(0, cmbKorrekturen.ListIndex) + 1
    End If

Exit Sub
err_cmbKorrekturen_Change:
    Call MsgBox("Laufzeitfehler: " & Err.Description, vbCritical)
End Sub
'*********************************************************************
' Name                 :    ComboBox1_DropButtonClick
' Description          :    Daten werden in das Formular |fffd|bertragen
' Author               :    Gunnard Stefan
' Created              :    27.08.14
Private Sub cmbFehlendeMessung_Change()

On Error GoTo err_cmbFehlendeMessung_Change

    If Me.cmbFehlendeMessung.TextLength > 0 Then
        Me.ScrollBar1.Value = cmbFehlendeMessung.Column(0, cmbFehlendeMessung.ListIndex) + 1
    End If

Exit Sub
err_cmbFehlendeMessung_Change:
    Call MsgBox("Laufzeitfehler: " & Err.Description, vbCritical)
End Sub
'*********************************************************************
' Name                 :    ComboBox1_DropButtonClick (============= Korrekturen ==============)
' Description          :    offene Korrekturen werden geladen
' Author               :    Gunnard Stefan
' Created              :    27.08.14
Private Sub cmbKorrekturen_DropButtonClick()
Dim i As Integer, pos As Integer
Dim strTemp As String, strTxt As String
Dim workSh As Worksheet
Dim b_ok As Boolean


On Error GoTo err_cmbKorrekturen_DropButtonClick

    Set workSh = Sheets(1)
    Me.cmbKorrekturen.Clear
    i = 2
    b_ok = False
    Me.cmbKorrekturen.ColumnWidths = "40;100;100;100;120;180;80"

    Do
        If Len(workSh.Cells(i, 36).Text) <= 0 Or IsEmpty(workSh.Cells(i, 24)) Then
            Debug.Print workSh.Cells(i, 1).Text
            Me.cmbKorrekturen.AddItem workSh.Cells(i, 1).Text
            Me.cmbKorrekturen.Column(1, cmbKorrekturen.ListCount - 1) = workSh.Cells(i, 2).Text
            Me.cmbKorrekturen.Column(2, cmbKorrekturen.ListCount - 1) = workSh.Cells(i, 3).Text
            Me.cmbKorrekturen.Column(3, cmbKorrekturen.ListCount - 1) = workSh.Cells(i, 4).Text
            Me.cmbKorrekturen.Column(4, cmbKorrekturen.ListCount - 1) = workSh.Cells(i, 7).Text
            Me.cmbKorrekturen.Column(5, cmbKorrekturen.ListCount - 1) = workSh.Cells(i, 8).Text
            Me.cmbKorrekturen.Column(6, cmbKorrekturen.ListCount - 1) = workSh.Cells(i, 24).Text
            b_ok = True
        End If
        i = i + 1
    Loop While Not IsEmpty(workSh.Cells(i, 1))
    
    If Not b_ok Then
        Call MsgBox("Keine Korrekturen offen!", vbInformation)
    End If

Exit Sub
err_cmbKorrekturen_DropButtonClick:
    Call MsgBox("Laufzeitfehler: " & Err.Description, vbCritical)
End Sub


'*********************************************************************
' Name                 :    ComboBox1_DropButtonClick
' Description          :    Nicht gemessene Datens|fffd|tze werden geladen
' Author               :    Gunnard Stefan
' Created              :    27.08.14
Private Sub cmbFehlendeMessung_DropButtonClick()
Dim i As Integer, pos As Integer
Dim strTemp As String, strTxt As String
Dim workSh As Worksheet
Dim b_ok As Boolean


On Error GoTo err_cmbFehlendeMessung_DropButtonClick

    Set workSh = Sheets(1)
    Me.cmbFehlendeMessung.Clear
    i = 2
    b_ok = False
    Me.cmbFehlendeMessung.ColumnWidths = "50;110;110;115;150;170;50"

    Do
        If Len(workSh.Cells(i, 23).Text) <= 0 Or IsEmpty(workSh.Cells(i, 23)) Then 'IsEmpty(workSh.Cells(i, 23)) Then
            Debug.Print workSh.Cells(i, 1).Text
            Me.cmbFehlendeMessung.AddItem workSh.Cells(i, 1).Text
            Me.cmbFehlendeMessung.Column(1, cmbFehlendeMessung.ListCount - 1) = workSh.Cells(i, 2).Text
            Me.cmbFehlendeMessung.Column(2, cmbFehlendeMessung.ListCount - 1) = workSh.Cells(i, 3).Text
            Me.cmbFehlendeMessung.Column(3, cmbFehlendeMessung.ListCount - 1) = workSh.Cells(i, 4).Text
            Me.cmbFehlendeMessung.Column(4, cmbFehlendeMessung.ListCount - 1) = workSh.Cells(i, 7).Text
            Me.cmbFehlendeMessung.Column(5, cmbFehlendeMessung.ListCount - 1) = workSh.Cells(i, 8).Text
            Me.cmbFehlendeMessung.Column(6, cmbFehlendeMessung.ListCount - 1) = workSh.Cells(i, 28).Text
            b_ok = True
        End If
        i = i + 1
    Loop While Not IsEmpty(workSh.Cells(i, 1))
    
    If Not b_ok Then
        Call MsgBox("Keine fehlenden Messungen", vbInformation)
    End If

Exit Sub
err_cmbFehlendeMessung_DropButtonClick:
    Call MsgBox("Laufzeitfehler: " & Err.Description, vbCritical)
End Sub







Private Sub Nr_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim Hx As Integer

On Error GoTo err_Nr_KeyUP

    If KeyCode = vbKeyReturn Then
        ScrollBar1.Max = Sheets("Bereitstellungsliste").Range("B2").CurrentRegion.Rows.Count
        
        If IsNumeric(Me.Nr.Text) Then
            If Int(Me.Nr.Text) > 0 Then
                If Int(ScrollBar1.Max) >= Int(Me.Nr.Text + 1) Then
                    Me.ScrollBar1.Value = Int(Me.Nr.Text + 1)
                Else
                    Me.Nr.Text = Empty
                    Call MsgBox("Wert au|fffd|erhalb des Wertebereichs", vbInformation)
                End If
            Else
                Me.Nr.Text = Empty
            End If
        Else
            Me.Nr.Text = Empty
        End If
    End If
                
                
                
    Exit Sub
err_Nr_KeyUP:
    Call MsgBox("Laufzeitfehler: " & Err.Description, vbCritical)

End Sub


Private Sub QEJetzt_Click()
QEnde = Now
End Sub


Private Sub QSJetzt_Click()
QStart = Now
End Sub





'Nummer mit der ScrollBar1 f|fffd|r die zu |fffd|ndernden Datenzeile ausw|fffd|hlen
Private Sub ScrollBar1_Change()

'Maximum der Bildlaufleiste
    numberrows = Sheets("Bereitstellungsliste").Range("B2").CurrentRegion.Rows.Count
    ScrollBar1.Max = numberrows
    
    
    wee = Me.ScrollBar1.Value
    
    If wee > numberrows Then
        Me.Nr = Empty
        Exit Sub
    End If
    
    Me.Nr = Cells(wee, 1)
    Me.Projekt = Cells(wee, 2)
    Me.SNr = Cells(wee, 3)
    Me.Typ = Cells(wee, 4)
    
    Me.Pr|fffd|fgrund = Cells(wee, 8)
    Me.Bereitstellungszeitpunkt = Cells(wee, 7)
    Me.QMA = Cells(wee, 9)
    Me.QStart = Cells(wee, 10)
    Me.QEnde = Cells(wee, 11)
    
    Me.FTOP = Cells(wee, 12)
    Me.FTMaschine = Cells(wee, 13)
    Me.FTSpindel = Cells(wee, 14)
    Me.FTPalette = Cells(wee, 15)
    Me.FTSpannplatz = Cells(wee, 16)
    Me.FTLage = Cells(wee, 17)
    
    
    Me.OP = Cells(wee, 20)
    
   
    Me.Messprogramm = Cells(wee, 21)
    Me.Pr|fffd|fergebnis = Cells(wee, 23)
    Me.Ma|fffd|nahmen = Cells(wee, 24)
    
    
    Me.Bemerkungen = Cells(wee, 26)
    Me.Erstteil = Cells(wee, 37)
    
    '=====  Zustand der Checkbox(en) zur|fffd|ckrufen =====
    'Me.SAP = Cells(wee, 25)
    If Cells(wee, 25) = "JA" Then
    SAP.Value = True
    ElseIf Cells(wee, 25) = "" Then
    SAP.Value = False
    End If
    
    'Me.Korrektur = Cells(wee, 36)
    If Cells(wee, 36) = "JA" Then
    Korrektur.Value = True
    ElseIf Cells(wee, 36) = "" Then
    Korrektur.Value = False
    End If
    
    'Me.Oberfl|fffd|chen = Cells(wee, 22)
    If Cells(wee, 22) = "JA" Then
    Oberfl|fffd|chen.Value = True
    ElseIf Cells(wee, 22) = "" Then
    Oberfl|fffd|chen.Value = False
    End If
    
'=====  Zustand des Umschaltfeldes zur|fffd|ckrufen =====
    'Me.KorErfolgreich = Cells(wee, 38)
    If Cells(wee, 38) = "i.O." Then
    KorErfolgreich.Locked = True
    ElseIf Cells(wee, 38) = "n.i.O." Then
    KorErfolgreich.Locked = False
    End If
    
    'Textbox vorbelegt mit der verstrichenen Liegezeit
    Me.Zeit = Format(Now, "hh:mm")
    Me.bereitgestellt = Format(Cells(wee, 7), "hh:mm")
    
    'VLZ = Format(CDate(Zeit) - CDate(bereitgestellt), "hh:mm")
    
    If Me.QEnde <> "" Then
    VLZ.Visible = False
    Label26.Visible = False
    Label27.Visible = False
    Label29.Visible = False
    bereitgestellt.Visible = False
    Zeit.Visible = False
    End If
    
    If Me.QEnde = "" Then
    VLZ.Visible = True
    Label26.Visible = True
    Label27.Visible = True
    Label29.Visible = True
    bereitgestellt.Visible = True
    Zeit.Visible = True
    VLZ = Format(CDate(Zeit) - CDate(bereitgestellt), "hh:mm")
    End If
    

    
    'Feld "Suche" leeren
    'Me.Suche = ""
        

    'Me.Nr.SetFocus
    Me.Nr.SelStart = 0
    Me.Nr.SelLength = Len(Me.Nr.Text)

End Sub



Private Sub Suche_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)

End Sub

Private Sub Suche_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
Dim i As Integer, pos As Integer
Dim strTemp As String, strTxt As String
Dim workSh As Worksheet
Dim b_ok As Boolean



Exit Sub
On Error GoTo err_Suche_KeyUp

    Set workSh = Sheets(1)
    
    If KeyCode = vbKeyReturn Then
        Me.Suchen.SetFocus
        Call Suchen_Click
    End If
    
    
    
Exit Sub
err_Suche_KeyUp:
    Call MsgBox("Laufzeitfehler: " & Err.Description, vbCritical)
    
Exit Sub
    i = 2
    b_ok = False
    strTxt = Trim(Me.Suche.Text)
    Do
        If strTxt = workSh.Cells(i, 3).Text Then
            Me.ScrollBar1.Value = i
            b_ok = True
            Exit Do
        End If
        i = i + 1
    Loop While Not IsEmpty(workSh.Cells(i, 3))
    
    If Not b_ok Then
        Call MsgBox("Serialnummer nicht gefunden", vbInformation)
    End If
    
End Sub

'============ Suchfeld ==============

Private Sub Suchen_Click()
Dim i As Integer, pos As Integer
Dim strTemp As String, strTxt As String
Dim workSh As Worksheet
Dim b_ok As Boolean


On Error GoTo err_Suchen_Click

    Set workSh = Sheets(1)
    

    i = 2
    b_ok = False
    strTxt = Trim(Me.Suche.Text)
    Do
        If strTxt = workSh.Cells(i, 3).Text Then
            Me.ScrollBar1.Value = i
            b_ok = True
            Exit Do
        End If
        i = i + 1
    Loop While Not IsEmpty(workSh.Cells(i, 3))
    
    If Not b_ok Then
        Call MsgBox("Serialnummer nicht gefunden", vbInformation)
    End If
    
    Me.Suche.SetFocus
    Me.Suche.SelStart = 0
    Me.Suche.SelLength = Len(Me.Suche.Text)


Exit Sub
err_Suchen_Click:
    Call MsgBox("Laufzeitfehler: " & Err.Description, vbCritical)
    

Exit Sub
'###################################################################
With Sheets("Bereitstellungsliste")
  If Not .Range("A:A").Find(What:=Me.Suche) Is Nothing Then

    
    
    Me.Projekt = .Range("A:A").Find(What:=Me.Suche).Offset(0, 1)
    Me.SNr = .Range("A:A").Find(What:=Me.Suche).Offset(0, 2)
    Me.Typ = .Range("A:A").Find(What:=Me.Suche).Offset(0, 3)
    
    Me.Pr|fffd|fgrund = .Range("A:A").Find(What:=Me.Suche).Offset(0, 7)
    
    Me.QMA = .Range("A:A").Find(What:=Me.Suche).Offset(0, 8)
    
    Me.QStart = .Range("A:A").Find(What:=Me.Suche).Offset(0, 9)
    Me.QEnde = .Range("A:A").Find(What:=Me.Suche).Offset(0, 10)
    
    Me.FTOP = .Range("A:A").Find(What:=Me.Suche).Offset(0, 11)
    Me.FTMaschine = .Range("A:A").Find(What:=Me.Suche).Offset(0, 12)
    Me.FTSpindel = .Range("A:A").Find(What:=Me.Suche).Offset(0, 13)
    Me.FTPalette = .Range("A:A").Find(What:=Me.Suche).Offset(0, 14)
    Me.FTSpannplatz = .Range("A:A").Find(What:=Me.Suche).Offset(0, 15)
    Me.FTLage = .Range("A:A").Find(What:=Me.Suche).Offset(0, 16)
     
    Me.OP = .Range("A:A").Find(What:=Me.Suche).Offset(0, 19)
    Me.Messprogramm = .Range("A:A").Find(What:=Me.Suche).Offset(0, 20)
    
    Me.Pr|fffd|fergebnis = .Range("A:A").Find(What:=Me.Suche).Offset(0, 22)
    Me.Ma|fffd|nahmen = .Range("A:A").Find(What:=Me.Suche).Offset(0, 23)
    
    Me.Bemerkungen = .Range("A:A").Find(What:=Me.Suche).Offset(0, 25)
    Me.VLZ = .Range("A:A").Find(What:=Me.Suche).Offset(0, 27)
    Me.Erstteil = .Range("A:A").Find(What:=Me.Suche).Offset(0, 36)

'=====  Zustand der Checkbox(en) zur|fffd|ckrufen =====
'Me.SAP = .Range("A:A").Find(What:=Me.Suche).Offset(0, 24)
If .Range("A:A").Find(What:=Me.Suche).Offset(0, 24) = "JA" Then
SAP.Value = True
ElseIf .Range("A:A").Find(What:=Me.Suche).Offset(0, 24) = "" Then
SAP.Value = False
End If

'Me.Korrektur = .Range("A:A").Find(What:=Me.Suche).Offset(0, 36)
If .Range("A:A").Find(What:=Me.Suche).Offset(0, 36) = "JA" Then
Korrektur.Value = True
ElseIf .Range("A:A").Find(What:=Me.Suche).Offset(0, 36) = "" Then
Korrektur.Value = False
End If

'Me.Oberfl|fffd|chen = .Range("A:A").Find(What:=Me.Suche).Offset(0, 21)
If .Range("A:A").Find(What:=Me.Suche).Offset(0, 21) = "JA" Then
Oberfl|fffd|chen.Value = True
ElseIf .Range("A:A").Find(What:=Me.Suche).Offset(0, 21) = "" Then
Oberfl|fffd|chen.Value = False
End If


'################# Zustand Umschaltfeld zur|fffd|ckrufen #####################

'Me.KorErfolgreich = .Range("A:A").Find(What:=Me.Suche).Offset(0, 37)
If .Range("A:A").Find(What:=Me.Suche).Offset(0, 37) = "i.O." Then
KorErfolgreich.Locked = True
ElseIf .Range("A:A").Find(What:=Me.Suche).Offset(0, 37) = "n.i.O." Then
KorErfolgreich.Locked = False
End If


   
 'Textbox vorbelegt mit der verstrichenen Liegezeit
Me.Zeit = Format(Now, "hh:mm")
Me.bereitgestellt = Format(.Range("A:A").Find(What:=Me.Suche).Offset(0, 6), "hh:mm")
VLZ = Format(CDate(Zeit) - CDate(bereitgestellt), "hh:mm")
     
     
 If Me.QEnde <> "" Then
VLZ.Visible = False
Label26.Visible = False
Label27.Visible = False
Label29.Visible = False
bereitgestellt.Visible = False
Zeit.Visible = False
End If

If Me.QEnde = "" Then
VLZ.Visible = True
Label26.Visible = True
Label27.Visible = True
Label29.Visible = True
bereitgestellt.Visible = True
Zeit.Visible = True
VLZ = Format(CDate(Zeit) - CDate(bereitgestellt), "hh:mm")
End If

    
    'Feld Nr leeren
    Me.Nr = ""
    
  End If
End With
End Sub


'Darstellung der "Userform" in Vollbild
'Frame1 = der Rahmen, dessen Inhalt der in die Fenster-Mitte zentriert wird !!!

Private Sub UserForm_Activate()

Application.WindowState = xlMaximized
Me.Width = Application.Width
Me.Height = Application.Height

Frame1.Top = (Me.Height - Frame1.Height) / 2
Frame1.Left = (Me.Width - Frame1.Width) / 2
Frame1.Width = Frame1.Width * Application.Width / Me.Width

End Sub

'Checkbox "Korrektur erledigt" nur einblenden wenn Auswahl Korrektur erforderlich"
Private Sub Ma|fffd|nahmen_Change()

If Ma|fffd|nahmen.Value = "Korrektur erforderlich" Then Korrektur.Visible = True

If Korrektur.Visible = True Then Label47.Visible = True
If Korrektur.Visible = True Then Erstteil.Visible = True
If Korrektur.Visible = True Then KorErfolgreich.Visible = True

If Korrektur.Visible = True Then Korrektur.BackColor = &HFF&
If KorErfolgreich.Visible = True Then KorErfolgreich.BackColor = &HFF&
If Ma|fffd|nahmen.Value <> "Korrektur erforderlich" Then Korrektur.Visible = False

End Sub





Private Sub UserForm_Initialize()

Korrektur.Visible = False
SAPUnterbrechung.Visible = False
Label47.Visible = False
Erstteil.Visible = False
KorErfolgreich.Visible = False
KorErfolgreich.Caption = "n.i.O."

'Anpassen der "Userform" an Bildschirm-Gr|fffd||fffd|e
Dim a As Control
Dim faktor_h, faktor_w As Integer
faktor_h = Application.Height / Messraum.Height
faktor_w = Application.Height / Messraum.Width
Messraum.Width = Application.Width
Messraum.Height = Application.Height
Messraum.Left = 0
Messraum.Top = 0
For Each a In Controls
  a.Top = a.Top * faktor_h
  a.Left = a.Left * faktor_w
  a.Height = a.Height * faktor_h
  a.Width = a.Width * faktor_w
Next


' ===== alle ComboBoxen hier rein! =====

QMA.List = Sheets("Hilfsdaten").Range("D2:D15").Value
Pr|fffd|fergebnis.List = Sheets("Hilfsdaten").Range("E2:E5").Value
Ma|fffd|nahmen.List = Sheets("Hilfsdaten").Range("F2:F6").Value
Messprogramm.List = Sheets("Hilfsdaten").Range("K2:K6").Value

End Sub


'##### "X" - Verhindert die Verwendung der Windows-Schaltfl|fffd|che Schlie|fffd|en #####
Private Sub UserForm_QueryClose _
 (Cancel As Integer, CloseMode As Integer)
 If CloseMode = vbFormControlMenu Then

 MsgBox "Bitte Formular nur |fffd|ber die vorgesehene Schaltfl|fffd|che beenden"
 Cancel = True
  End If
End Sub

Attribute VB_Name = "Modul1"
Option Explicit

Sub Haupt()
Hauptmen|fffd|.Show
End Sub
Attribute VB_Name = "Modul2"
Sub SchichtProtokoll()
'
' PivotTabelle aktualisieren und Filter aus "Bemerkungen" entfernen'

With ActiveSheet.PivotTables("PivotTable1").PivotFields("Bemerkungen")
        .PivotItems("").Visible = True
    End With

Range("D1").Select
    ActiveSheet.PivotTables("PivotTable1").PivotCache.Refresh
    
    
    
End Sub
Sub Drucken()

'keine leere Zeilen in der Spalte Bemerkungen
    With ActiveSheet.PivotTables("PivotTable1").PivotFields("Bemerkungen")
        .PivotItems("").Visible = False
    End With


' Drucken Makro
    Range("A1").Select
    ActiveWindow.SelectedSheets.PrintOut Copies:=1, Collate:=True, _
        IgnorePrintAreas:=False


'leere Zeilen in der Spalte "Bemerkungen" einblenden

    With ActiveSheet.PivotTables("PivotTable1").PivotFields("Bemerkungen")
        .PivotItems("").Visible = True
    End With


End Sub


Attribute VB_Name = "Modul3"
'Sub Email_send()
'Set objOutlook = CreateObject("Outlook.Application")
'Set objMail = objOutlook.CreateItem(0)
'
'With objMail
'
'    .To = "empf|fffd|nger@email.de"
'    .cc = "g.stefan@weber-automotive.com; g.stefan@weber-automotive.com"
'    .Subject = "Porsche - Korrekturanweisung"
'
'    .Body = "F|fffd|r folgendes Ger|fffd|t wurde ein Toner bestellt." & Chr(13) & "F|fffd|r folgendes Ger|fffd|t wurde ein Toner bestellt."
'
'
'        'Nachricht zur Kontrolle anzeigen
'    .Display
'
'        'Oder direkt senden
'        '.Send
'
'End With
'End Sub

'Excel-Sheet als Anhang via Email versenden
'Sub Excel_Sheet_via_Outlook_Senden()
'    Dim MyMessage As Object, MyOutApp As Object
'    Dim SavePath As String
'    Dim AWS As String
'    SavePath = "D:" '"E:\Eigene Dateien"
'    'Kopiert aktuelles Sheet in eine neue Mappe
'    'welche nur diese Tabelle enth|fffd|lt
'    ActiveSheet.Copy
'    'Speichert die Datei unter dem Tabellennamen und einem Zeitstempel
'    ActiveWorkbook.SaveAs SavePath & "\" & ActiveSheet.Name & "_" & Format(Now, "ddmmyyyy_hhmm") & ".xlsx"
'    'Mappenname wird an Variable |fffd|bergeben und anschliessend gleich geschlossen
'    With ActiveWorkbook
'        AWS = .FullName
'        .Close
'    End With
'    'InitializeOutlook = True
'    Set MyOutApp = CreateObject("Outlook.Application")
'    'Nachrichtenobject erstellen
'    Set MyMessage = MyOutApp.CreateItem(0)
'    With MyMessage
'        .To = "irgendwer@Irgenwo.de"
'        .Cc = "irgendwer@Irgenwo.de"
'        .Subject = "Test-Email von Excel2000 " & Date & Time
'        'Hier wird die tempor|fffd|r gespeicherte Datei als Attachment zugef|fffd|gt
'        .Attachments.Add AWS
'
'        'Hier wird eine normale Text Mail erstellt
'        .body = "Das ist ein Test" & Chr(13) & "Bitte ignorieren"
'
'        'Hier wird die HTML Mail erstellt
'        '.HTMLBody = "Das ist ein Test." & vbCrLf & "Bitte ignorieren."
'
'        'Hier wird die Mail nochmals angezeigt
'        .Display
'
'        'Hier wird die Mail gleich in den Postausgang gelegt
'        '.Send
'
'        'Hier wird die tempor|fffd|re Datei wieder gel|fffd|scht
'
'        Kill AWS
'    End With
'    MyOutApp.Quit
'    Set MyOutApp = Nothing
'    Set MyMessage = Nothing
'End Sub

'Markierter Bereich als Email versnden


Option Explicit

Sub Sende_Markierter_Bereich_Aus_Excel()
    'Ohne Select geht es in diesem Fall nicht :-))
    'Sendet den aktuell markierten Bereich
    With Selection
        'Das anzeigen der Envelope Commandbar ist unabdingbar
        'Hier wird EXCEL selbst als "Mail-Client" verwendet.
        ActiveWorkbook.EnvelopeVisible = True
        'Nun werden die Adressen vergeben
        With ActiveSheet.MailEnvelope
            
            .Item.To = "g.stefan@weber-automotive.com; t.ziel@weber-automotive.com"
            .Item.Cc = "g.stefan@weber-automotive.com"
            
            'Der Betreff
            .Item.Subject = "Porsche-Korrekturanweisung"
            
            'Dies ist der "Body"-Text
            .Introduction = "Sehr geehrter Linienf|fffd|hrer," & Chr(13) & "" & Chr(13) & "bei der |fffd|berpr|fffd|fung der von Ihnen vorgestellten Bauteile, wurden Abweichungen festgestellt. Details entnehmen Sie bitte aus der u.a. Tabelle." & Chr(13) & "" & Chr(13) & "Bitte leiten Sie unverz|fffd|glich entsprechende Korrekturma|fffd|nahmen ein und stellen Sie dem Messraum anschlie|fffd|end das Erstteil nach Korrektur zur Freigabe vor." & Chr(13) & "" & Chr(13) & "Mit freundlichen Gr|fffd||fffd|en," & Chr(13) & "Ihr Messraum"
            
            '.Item.Display
            '.Item.Send
        End With
    End With
    ActiveWorkbook.EnvelopeVisible = True
End Sub
Attribute VB_Name = "Produktion"
Attribute VB_Base = "0{E450120A-5C6F-402F-A9D4-E6788B449D46}{0788C4AC-CE08-4575-9596-D0A4ED44B5D9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
'##### Makro f|fffd|r die Bereitstellungsliste Messraum, geschrieben von Gunnard Stefan am 21.06.2014 #####

'##### Abbruch-Button #####
Private Sub Abbruch_Click()
Unload Me
Hauptmen|fffd|.Show
End Sub



'########## NEU ##########
Private Sub Neu_Click()

'Pflichtfelder definieren
If Projekt.Value = "" Then
    MsgBox "Bitte w|fffd|hlen Sie das Projekt aus!"
    Projekt.SetFocus
    Exit Sub
End If

'If FTMaschine.Value = "" Then
'    MsgBox "Bitte geben Sie die Fertigungsmaschine an!"
'    FTMaschine.SetFocus
'    Exit Sub
'End If

If SNr.Value = "" Then
    MsgBox "Bitte geben Sie die Serialnummer des Bauteils an!"
    SNr.SetFocus
    Exit Sub
End If

If Typ.Value = "" Then
    MsgBox "Bitte geben Sie den Typ der Bauteils an!"
    Typ.SetFocus
    Exit Sub
End If

If Pr|fffd|fgrund.Value = "" Then
    MsgBox "Bitte w|fffd|hlen Sie den Pr|fffd|fgrund aus!"
    Pr|fffd|fgrund.SetFocus
    Exit Sub
End If

If PMA.Value = "" Then
    MsgBox "Bitte geben Sie Ihre Personalnummer an!"
    PMA.SetFocus
    Exit Sub
End If

If Fertigungszeitpunkt.Value = "" Then
    MsgBox "Bitte geben Sie das Fertigungszeitpunkt an!"
    Fertigungszeitpunkt.SetFocus
    Exit Sub
End If

'Plausibilit|fffd|tspr|fffd|fung der Zeitstempel - Vergleiche Fertigungszeitpunkt zum Zeitpunkt Bereitstellung
If Me.Bereitstellungszeitpunkt.Value < Me.Fertigungszeitpunkt.Value Then
    MsgBox "ACHTUNG:" & vbCrLf & "Der Fertigungszeitpunkt kann nicht sp|fffd|ter sein als jetzt!" & vbCrLf & "" & vbCrLf & "Bitte Fertigungszeitpunkt (Datum und Uhrzeit) pr|fffd|fen und korrigieren!"
    Fertigungszeitpunkt.SetFocus
    Exit Sub
End If



With Sheets("Bereitstellungsliste")
  If .Cells(Rows.Count, 1).End(xlUp) = "Nr" Then
  'die erste Spalte muss mit einer Nr. beginnen --> wird autom. fortlaufend durchnummeriert.
  'Wichtig! die Nr. 1 muss bereits in der Spalte eingetragen sein - ansonsten Fehlermeldung!
  .Cells(Rows.Count, 1).End(xlUp).Offset(1, 0) = 1
    Else
  .Cells(Rows.Count, 1).End(xlUp).Offset(1, 0) = .Cells(Rows.Count, 1).End(xlUp) + 1
    End If
  'Me.Nr = .Cells(Rows.Count, 1).End(xlUp) '= schreibt die fortlaufende Nummer in die Spalte A (wenn gew|fffd|nscht)
  
  
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 1) = Me.Projekt
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 2) = Me.SNr
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 3) = Me.Typ
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 4) = Me.PMA
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 5) = Me.Fertigungszeitpunkt
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 6) = Me.Bereitstellungszeitpunkt
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 7) = Me.Pr|fffd|fgrund
  
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 11) = Me.FTOP
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 12) = Me.FTMaschine
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 13) = Me.FTSpindel
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 14) = Me.FTPalette
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 15) = Me.FTSpannplatz
  .Cells(Rows.Count, 1).End(xlUp).Offset(0, 16) = Me.FTLage
  
End With

MsgBox "Bauteil wurde |fffd|bernommen!"

Unload Me
Hauptmen|fffd|.Show
ActiveWorkbook.Save


End Sub

'===== alle abh|fffd|ngige ComboBoxen (Werk und Projekt) hier rein! =====


Private Sub Projekt_Change()

' Variablen deklarieren
Dim iSpalte As Integer                                                  ' aktuelle Spalte
Dim iZiel As Integer                                                    ' letzte gef|fffd|llte zelle in aktueller Spalte
Dim rng As String                                                       ' Range f|fffd|r Spaltendefinition

' "Typ"-ComboBox in Abh|fffd|ngikeit von "Projekt"-ComboBox f|fffd|llen
iSpalte = Projekt.ListIndex + 2                                         ' aktuelle Spalte definieren
rng = Chr(iSpalte + 64) & "65536"                                       ' Range definieren
iZiel = Worksheets("Projekt").Range(rng).End(xlUp).Row                  ' letzte gef|fffd|llte Zelle in aktueller Spalte
Typ.Clear                                                               ' alte Inhalte l|fffd|schen

If Range(Worksheets("Projekt").Cells(2, iSpalte), Worksheets("Projekt").Cells(iZiel, iSpalte)).Count < 2 Then
    Typ.AddItem (Range(Worksheets("Projekt").Cells(2, iSpalte), _
        Worksheets("Projekt").Cells(iZiel, iSpalte)).Value)
Else
    Typ.List = Range(Worksheets("Projekt").Cells(2, iSpalte), _
    Worksheets("Projekt").Cells(iZiel, iSpalte)).Value                     ' neue Liste einlesen
End If
'(... |fffd|ber die 2 aus "...Cells(2, iSpalte)" kann die Spalten|fffd|berschrift ausgeblendet werden

'Projektbezogen ausblenden
'===== Projekt: AMG V8 =====
If Projekt.Value = "AMG V8" Then
    
    LFTOP.Visible = True
    LFTSpannung.Visible = False
    FTOP.Visible = True
    
    LFTMaschine.Visible = False
    FTMaschine.Visible = False
    
    LFTSpindel.Visible = False
    FTSpindel.Visible = False
    
    LFTPalette.Visible = False
    FTPalette.Visible = False
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

'===== Projekt: Aston Martin =====
If Projekt.Value = "Aston Martin" Then
    
    LFTOP.Visible = False
    LFTSpannung.Visible = True
    FTOP.Visible = True
    
    LFTMaschine.Visible = False
    FTMaschine.Visible = False
    
    LFTSpindel.Visible = False
    FTSpindel.Visible = False
    
    LFTPalette.Visible = False
    FTPalette.Visible = False
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

'===== Projekt: Bosch =====
If Projekt.Value = "Bosch" Then
    
    LFTOP.Visible = False
    LFTSpannung.Visible = True
    FTOP.Visible = True
    
    LFTMaschine.Visible = False
    FTMaschine.Visible = False
    
    LFTSpindel.Visible = False
    FTSpindel.Visible = False
    
    LFTPalette.Visible = False
    FTPalette.Visible = False
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

'===== Projekt: Daimler =====
If Projekt.Value = "Daimler" Then
    
    LFTOP.Visible = False
    LFTSpannung.Visible = True
    FTOP.Visible = True
    
    LFTMaschine.Visible = False
    FTMaschine.Visible = False
    
    LFTSpindel.Visible = False
    FTSpindel.Visible = False
    
    LFTPalette.Visible = True
    FTPalette.Visible = True
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

'===== Projekt: Getrag =====
If Projekt.Value = "Getrag" Then
    
    LFTOP.Visible = False
    LFTSpannung.Visible = True
    FTOP.Visible = True
    
    LFTMaschine.Visible = True
    FTMaschine.Visible = True
    
    LFTSpindel.Visible = False
    FTSpindel.Visible = False
    
    LFTPalette.Visible = False
    FTPalette.Visible = False
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

'===== Projekt: KoVOMo =====
If Projekt.Value = "KoVOMo" Then
    
    LFTOP.Visible = True
    LFTSpannung.Visible = False
    FTOP.Visible = True
    
    LFTMaschine.Visible = True
    FTMaschine.Visible = True
    
    LFTSpindel.Visible = False
    FTSpindel.Visible = False
    
    LFTPalette.Visible = False
    FTPalette.Visible = False
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

'===== Projekt: MAN =====
If Projekt.Value = "MAN" Then
    
    LFTOP.Visible = False
    LFTSpannung.Visible = True
    FTOP.Visible = True
    
    LFTMaschine.Visible = True
    FTMaschine.Visible = True
    
    LFTSpindel.Visible = True
    FTSpindel.Visible = True
    
    LFTPalette.Visible = True
    FTPalette.Visible = True
    
    LFTSpannplatz.Visible = True
    FTSpannplatz.Visible = True
    
    LFTLage.Visible = True
    FTLage.Visible = True

End If

'===== Projekt: MTU =====
If Projekt.Value = "MTU" Then
    
    LFTOP.Visible = False
    LFTSpannung.Visible = True
    FTOP.Visible = True
    
    LFTMaschine.Visible = True
    FTMaschine.Visible = True
    
    LFTSpindel.Visible = True
    FTSpindel.Visible = True
    
    LFTPalette.Visible = True
    FTPalette.Visible = True
    
    LFTSpannplatz.Visible = True
    FTSpannplatz.Visible = True
    
    LFTLage.Visible = True
    FTLage.Visible = True

End If

'===== Projekt: Porsche V6T =====
If Projekt.Value = "Porsche V6T" Then
    
    LFTOP.Visible = True
    LFTSpannung.Visible = False
    FTOP.Visible = True
    
    LFTMaschine.Visible = True
    FTMaschine.Visible = True
    
    LFTSpindel.Visible = True
    FTSpindel.Visible = True
    
    LFTPalette.Visible = True
    FTPalette.Visible = True
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

'===== Projekt: VW =====
If Projekt.Value = "VW" Then
    
    LFTOP.Visible = False
    LFTSpannung.Visible = True
    FTOP.Visible = True
    
    LFTMaschine.Visible = True
    FTMaschine.Visible = True
    
    LFTSpindel.Visible = False
    FTSpindel.Visible = False
    
    LFTPalette.Visible = True
    FTPalette.Visible = True
    
    LFTSpannplatz.Visible = False
    FTSpannplatz.Visible = False
    
    LFTLage.Visible = False
    FTLage.Visible = False

End If

End Sub


'Darstellung der "Userform" in Vollbild

'Frame1 = der Rahmen, dessen Inhalt der in die Fenster-Mitte zentriert wird !!!
Private Sub UserForm_Activate()

' ComboBox Projekt mit definierten Inhalten f|fffd|llen
Projekt.List = Worksheets("Projekt").Range("A1", "A" & _
Worksheets("Projekt").Range("A65536").End(xlUp).Row).Value         ' Liste an Combobox |fffd|bergeben


Application.WindowState = xlMaximized
Me.Width = Application.Width
Me.Height = Application.Height

Frame1.Top = (Me.Height - Frame1.Height) / 2
Frame1.Left = (Me.Width - Frame1.Width) / 2
Frame1.Width = Frame1.Width * Application.Width / Me.Width

End Sub


Private Sub UserForm_Initialize()

'Anpassen der "Userform" an Bildschirm-Gr|fffd||fffd|e
Dim a As Control
Dim faktor_h, faktor_w As Integer
faktor_h = Application.Height / Produktion.Height
faktor_w = Application.Height / Produktion.Width
Produktion.Width = Application.Width
Produktion.Height = Application.Height
Produktion.Left = 0
Produktion.Top = 0
For Each a In Controls
  a.Top = a.Top * faktor_h
  a.Left = a.Left * faktor_w
  a.Height = a.Height * faktor_h
  a.Width = a.Width * faktor_w
Next


'Textbox vorbelegt mit Bereitstellungsdatum
Produktion.Bereitstellungszeitpunkt.Text = Now 'Sheets("Hilfsdaten").Range("J2").Value

' ===== alle ComboBoxen hier rein! =====

'Projekt.List = Sheets("Hilfsdaten").Range("A2:A15").Value
Pr|fffd|fgrund.List = Sheets("Hilfsdaten").Range("C2:C6").Value
Fertigungszeitpunkt.List = Sheets("Hilfsdaten").Range("J2:J3").Value
'Typ.List = Sheets("Hilfsdaten").Range("B2:B28").Value

End Sub




'##### "X" - Verhindert die Verwendung der Windows-Schaltfl|fffd|che Schlie|fffd|en #####
Private Sub UserForm_QueryClose _
 (Cancel As Integer, CloseMode As Integer)
 If CloseMode = vbFormControlMenu Then

 MsgBox "Bitte Formular nur |fffd|ber die vorgesehene Schaltfl|fffd|che beenden"
 Cancel = True
  End If
End Sub
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

' InQuest injected base64 decoded content
' -zYn
' 3z+i

INQUEST-PP=macro
