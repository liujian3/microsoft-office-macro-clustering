Attribute VB_Name = "Anschlag"
Sub Anschl|fffd|ge_z|fffd|hlen()
'
' Anschl|fffd|ge_z|fffd|hlen Makro

WordBasic.StartOfDocument



While WordBasic.AtEndOfDocument() <> -1
    WordBasic.CharRight 1, 1

    x = Asc(WordBasic.[Selection$]())

        Select Case x
            Case 13
                n = n + 1
            Case 11, 33, 34, 36 To 42, 47, 58, 59, 61 To 93, 95, 123 To 125, 128, 132, 147, 167, 176, 178, 179, 181, 196, 214, 220, 232 To 235, 241
                n = n + 2
            Case Else
                n = n + 1
        End Select

    WordBasic.CharRight
WordBasic.PrintStatusBar Str(n - 0) + " Anschl|fffd|ge gez|fffd|hlt"
Wend


' Makro aufgezeichnet am 17.02.2002 von Christian Franke
'
End Sub
Attribute VB_Name = "NewMacros"
Sub Korrektur_gesperrt()
Attribute Korrektur_gesperrt.VB_Description = "Makro aufgezeichnet am 20.01.2010 von Schule"
Attribute Korrektur_gesperrt.VB_ProcData.VB_Invoke_Func = "Normal.NewMacros.Korrektur_gesperrt"
'
' Korrektur_gesperrt Makro
' Makro aufgezeichnet am 26.11.2011 von Christian Franke
'
    x$ = Environ("USERNAME")

' Pfad f|fffd|r Windows 7
    Documents.Add Template:= _
        "C:\Users\" + x$ + "\AppData\Roaming\Microsoft\Templates\TuNix.dot" _
        , NewTemplate:=False, DocumentType:=0
        
' Pfad f|fffd|r Windows XP
'    Documents.Add Template:= _
'        "C:\Dokumente und Einstellungen\" + x$ + "\Anwendungsdaten\Microsoft\Vorlagen\TuNix.dot" _
'        , NewTemplate:=False, DocumentType:=0
End Sub
Attribute VB_Name = "Tastschr22S"


Sub Minuten10_22S()
' hier wird die Zwischenablage geleert
 Selection.TypeText Text:="Die Zwischenablage wird geleert!"
    Selection.WholeStory
    Selection.Delete Unit:=wdCharacter, Count:=1
    Selection.WholeStory
    Selection.Copy

'hier wird der gesamte Text in Courier New, 12pt formatiert
Selection.WholeStory
WordBasic.FormatFont Points:=12, Bold:=0, Font:="Courier New"

' hier werden die Seitenr|fffd|nder automatisch eingestellt
    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(1.69)
        .BottomMargin = CentimetersToPoints(2)
        .LeftMargin = CentimetersToPoints(2.41)
        .RightMargin = CentimetersToPoints(2)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.25)
        .FooterDistance = CentimetersToPoints(1.25)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
    End With


' hier werden die Absatzformate automatisch eingestellt
    With Selection.ParagraphFormat
        .LeftIndent = CentimetersToPoints(0)
        .RightIndent = CentimetersToPoints(0)
        .SpaceBefore = 0
        .SpaceBeforeAuto = False
        .SpaceAfter = 0
        .SpaceAfterAuto = False
        .LineSpacingRule = wdLineSpaceSingle
        .Alignment = wdAlignParagraphLeft
        .WidowControl = True
        .KeepWithNext = False
        .KeepTogether = False
        .PageBreakBefore = False
        .NoLineNumber = False
        .Hyphenation = True
        .FirstLineIndent = CentimetersToPoints(0)
        .OutlineLevel = wdOutlineLevelBodyText
        .CharacterUnitLeftIndent = 0
        .CharacterUnitRightIndent = 0
        .CharacterUnitFirstLineIndent = 0
        .LineUnitBefore = 0
        .LineUnitAfter = 0
    End With


' hier wird die Silbentrennung ausgeschalten
    With ActiveDocument
        .AutoHyphenation = False
        .HyphenateCaps = True
        .HyphenationZone = CentimetersToPoints(0.75)
        .ConsecutiveHyphensLimit = 0
    End With


' hier wird das Dokument als leere Seite gespeichert
ActiveDocument.Save


' hier wird die Startzeit sekundengenau geschrieben
Selection.WholeStory
WordBasic.FormatFont Points:=12, Bold:=1, Font:="Courier New"
MsgBox " Start der 10-Minuten-Abschrift"
WordBasic.Insert "Testbeginn: "
Selection.InsertDateTime DateTimeFormat:="dd.MM.yyyy HH:mm:ss", _
        InsertAsField:=False

Selection.TypeParagraph
Selection.MoveRight Unit:=wdCharacter, Count:=1, Extend:=wdExtend
WordBasic.FormatFont Bold:=0, Font:="Courier New"
Selection.TypeParagraph

' hier wird die aktuelle Systemzeit einzelnen speicherbereichen zugewiesen
MerkStunde = Hour(Time)
MerkMinute = Minute(Time)
MerkSekunde = Second(Time)
Merkzeit = Time

' hier wird die Zeit eingestellt
Endezeit = Merkzeit + TimeValue("00:10:00")
Application.OnTime When:=Now + TimeValue("00:10:00"), _
    Name:="tastschr22S.signal22S"

End Sub
Sub Signal22S()

' hier wird die Endezeit sekundengenau geschrieben
Selection.EndKey Unit:=wdStory
WordBasic.InsertPara
WordBasic.InsertPara
WordBasic.FormatFont Bold:=1, Font:="Courier New"
WordBasic.Insert "Testende: "

Selection.InsertDateTime DateTimeFormat:="dd.MM.yyyy HH:mm:ss", _
 InsertAsField:=False
    Selection.TypeParagraph
    

'hier wird der gesamte Text in Courier New 12pt formatiert
    Selection.HomeKey Unit:=wdStory
    Selection.MoveDown Unit:=wdLine, Count:=2
    Selection.EndKey Unit:=wdStory, Extend:=wdExtend
    Selection.MoveUp Unit:=wdLine, Count:=2, Extend:=wdExtend
    With Selection.Font
        .Name = "Courier New"
        .Size = 12
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
        .UnderlineColor = wdColorAutomatic
        .StrikeThrough = False
        .DoubleStrikeThrough = False
        .Outline = False
        .Emboss = False
        .Shadow = False
        .Hidden = False
        .SmallCaps = False
        .AllCaps = False
        .Color = wdColorAutomatic
        .Engrave = False
        .Superscript = False
        .Subscript = False
        .Spacing = 0
        .Scaling = 100
        .Position = 0
        .Kerning = 0
        .Animation = wdAnimationNone
    End With
    Selection.EndKey Unit:=wdStory
    
  
' hier werden die Seitenr|fffd|nder automatisch eingestellt
    With ActiveDocument.PageSetup
        .LineNumbering.Active = False
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(1.69)
        .BottomMargin = CentimetersToPoints(2)
        .LeftMargin = CentimetersToPoints(2.41)
        .RightMargin = CentimetersToPoints(2)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.25)
        .FooterDistance = CentimetersToPoints(1.25)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .FirstPageTray = wdPrinterDefaultBin
        .OtherPagesTray = wdPrinterDefaultBin
        .SectionStart = wdSectionNewPage
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .GutterPos = wdGutterPosLeft
    End With
    
' hier wird die Silbentrennung ausgeschalten
    With ActiveDocument
        .AutoHyphenation = False
        .HyphenateCaps = True
        .HyphenationZone = CentimetersToPoints(0.75)
        .ConsecutiveHyphensLimit = 0
    End With
  
  
' hier wird eine Aufforderung zum Z|fffd|hlen der Anschl|fffd|ge eingeblendet
Start:
If WordBasic.MsgBox("Deine Zeit ist um. Klicke nun auf OK, um mit dem Z|fffd|hlen zu beginnen!" + Chr(13) + Chr(13) + "In der Statusleiste kannst du die Zahl deiner Anschl|fffd|ge sehen!", "Anschl|fffd|ge z|fffd|hlen", 273) = 0 Then GoTo Start

' hier werden die Anschl|fffd|ge gez|fffd|hlt
WordBasic.StartOfDocument

While WordBasic.AtEndOfDocument() <> -1
    WordBasic.CharRight 1, 1

    x = Asc(WordBasic.[Selection$]())

        Select Case x
            Case 13
                n = n + 1
            Case 11, 33, 34, 36 To 42, 47, 58, 59, 61 To 93, 95, 123 To 125, 128, 132, 147, 167, 176, 178, 179, 181, 196, 214, 220, 232 To 235, 241
                n = n + 2
            Case Else
                n = n + 1
        End Select

    WordBasic.CharRight
WordBasic.PrintStatusBar Str(n - 73) + " Anschl|fffd|ge gez|fffd|hlt"
Wend




WordBasic.EndOfDocument
WordBasic.FormatTabs Position:="2,5 cm", DefTabs:="1,25 cm", Set:=1
WordBasic.FormatTabs Position:="8 cm", DefTabs:="1,25 cm", Set:=1
WordBasic.FormatTabs Position:="12 cm", DefTabs:="1,25 cm", Set:=1

WordBasic.ViewZoom AutoFit:=1

' hier wird zur Eingabe des Namens und der Klasse aufgefordert
WordBasic.BeginDialog 320, 144, "Anschlagzahl:" + Str(n - 73)
    WordBasic.GroupBox 10, 1, 300, 65, ""
    WordBasic.TextBox 80, 14, 220, 18, "Name"
    WordBasic.TextBox 80, 37, 80, 18, "klasse"
    WordBasic.PushButton 10, 81, 300, 44, "Name und Klasse richtig eingegeben", "Definierbar1"
    WordBasic.Text 20, 18, 46, 13, "Name:", "Text1"
    WordBasic.Text 20, 40, 52, 13, "Klasse:", "Text2"
WordBasic.EndDialog
Dim Wimmerchen As Object: Set Wimmerchen = WordBasic.CurValues.UserDialog
Schaltfl|fffd|che = WordBasic.Dialog.UserDialog(Wimmerchen)
While Wimmerchen.Name = "" Or Wimmerchen.Klasse = ""
    WordBasic.MsgBox "Eingabe nicht vollst|fffd|ndig!", "Fehler", 16
    WordBasic.Dialog.UserDialog Wimmerchen
Wend


' hier werden die Angaben am Ende des Dokumentes geschrieben
' WordBasic.FormatFont Points:=12, Bold:=0, Font:="Arial"
Selection.Font.Name = "Arial"
Selection.Font.Size = 12
' Selection.Font.Bold = wdToggle
WordBasic.InsertPara
WordBasic.InsertPara
WordBasic.Insert "Name:"
WordBasic.Insert Chr(9)
WordBasic.Insert Wimmerchen.Name

WordBasic.InsertPara
WordBasic.Insert "Klasse:"
WordBasic.Insert Chr(9)
WordBasic.Insert Wimmerchen.Klasse
WordBasic.Insert Chr(9)
WordBasic.Insert "Fehler:          _________________"
WordBasic.InsertPara
WordBasic.Insert "Datum:"
WordBasic.Insert Chr(9)
WordBasic.InsertDateTime
WordBasic.Insert Chr(9)
WordBasic.Insert "Anschl|fffd|ge: "
WordBasic.Insert Chr(9)
WordBasic.Insert WordBasic.[LTrim$](Str(n - 73))
WordBasic.InsertPara
WordBasic.InsertPara
WordBasic.Insert Chr(9)
WordBasic.Insert Chr(9)
WordBasic.Insert "Fehlerprozent:"


'hier wird der Dateiname und der Pfad in die Fu|fffd|zeile geschrieben
If ActiveWindow.View.SplitSpecial <> wdPaneNone Then
    ActiveWindow.Panes(2).Close
End If
If ActiveWindow.ActivePane.View.Type = wdNormalView Or ActiveWindow. _
    ActivePane.View.Type = wdOutlineView Then
    ActiveWindow.ActivePane.View.Type = wdPrintView
End If
ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
If Selection.HeaderFooter.IsHeader = True Then
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageFooter
Else
    ActiveWindow.ActivePane.View.SeekView = wdSeekCurrentPageHeader
End If
Selection.TypeParagraph
Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
    "FILENAME  \p ", PreserveFormatting:=True
With Selection.Borders(wdBorderTop)
    .LineStyle = Options.DefaultBorderLineStyle
    .LineWidth = Options.DefaultBorderLineWidth
    .Color = Options.DefaultBorderColor
End With
Selection.WholeStory
With Selection.Font
    .Name = "Arial"
    .Size = 6
End With
ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument





' hier werden die Angaben am Anfang des Dokumentes geschrieben
WordBasic.StartOfDocument
WordBasic.FormatTabs Position:="12 cm", DefTabs:="1,25 cm", Set:=1
WordBasic.FormatFont Points:=18, Bold:=1, Font:="Arial"
WordBasic.Insert "10-Minuten-Abschrift"
WordBasic.Insert Chr(9)
WordBasic.FormatFont Points:=12, Bold:=0, Font:="Arial"
WordBasic.Insert "Note:"
WordBasic.InsertPara
WordBasic.InsertPara

' hier wird das Dokument f|fffd|r die Eingabe gesperrt
WordBasic.ToolsProtectDocument DocumentPassword:="huch", Type:=2

' hier wird das Dokument mit allen Angaben gespeichert
ActiveDocument.Save

' hier wird das Dokument ausgedruckt
Application.PrintOut , Range:=wdPrintAllDocument, Item:= _
wdPrintDocumentContent, Copies:=1, Pages:="", PageType:=wdPrintAllPages, _
Collate:=True, PrintToFile:=False, PrintZoomColumn:=0, _
PrintZoomRow:=0, PrintZoomPaperWidth:=0, PrintZoomPaperHeight:=0
ende:

WordBasic.WaitCursor 0

' hier wird das Dokument geschlossen
'ActiveDocument.Close (SaveChanges)

' hier wird die Standard-Symbolleiste wieder eingeblendet
'CommandBars("Standard").Visible = True

End Sub






Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "0{00020906-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisDocument1"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub Document_New()
  Call meinKeyBackspaceAufMakroTuNixLegen
End Sub
'
Private Sub Document_Open()
  Call meinKeyBackspaceAufMakroTuNixLegen
End Sub
'
Private Sub Document_Close()
  Call meinKeyBackspaceAufMakroTuNixLoeschen
End Sub
'
Function meinKeyBackspaceAufMakroTuNixLegen()
  'Funktion verbindet die BackSpace-Taste mit der Function TuNix
  'Gilt nur im aktiven Dokument
  CustomizationContext = ActiveDocument
  'Global = CustomizationContext = NormalTemplate
  '
  'vorsorglich Shortcut l|fffd|schen
  FindKey(BuildKeyCode(Arg1:=wdKeyBackspace)).Clear
  FindKey(BuildKeyCode(Arg1:=wdKeyDelete)).Clear
  '
  'Backspace-Taste mit dem Makro TuNix verbinden
  KeyBindings.Add _
    KeyCode:=BuildKeyCode(Arg1:=wdKeyBackspace), _
    KeyCategory:=wdKeyCategoryMacro, Command:="Tunix"
  '
  'Entfernen-Taste mit dem Makro TuNix verbinden
  KeyBindings.Add _
    KeyCode:=BuildKeyCode(Arg1:=wdKeyDelete), _
    KeyCategory:=wdKeyCategoryMacro, Command:="Tunix"
End Function
'
Function meinKeyBackspaceAufMakroTuNixLoeschen()
  'Funktion hebt die Verbindung der BackSpace-Taste zu der Funktion TuNix auf
  CustomizationContext = ActiveDocument
  '
  'Shortcut aufl|fffd|sen/l|fffd|schen
  FindKey(BuildKeyCode(Arg1:=wdKeyBackspace)).Clear
  FindKey(BuildKeyCode(Arg1:=wdKeyDelete)).Clear
End Function
'
Sub Tunix()
  WordBasic.MsgBox String(5, 32) & "R|fffd|ck- und Entfernen-Taste gesperrt!", -8
End Sub



' InQuest injected base64 decoded content
' zPhw$

INQUEST-PP=macro
