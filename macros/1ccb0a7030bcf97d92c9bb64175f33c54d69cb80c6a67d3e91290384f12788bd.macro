Attribute VB_Name = "CWchartExec"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public WithEvents sht As Worksheet
Attribute sht.VB_VarHelpID = -1

Private ChartNum As Integer
Private FormulaSheet As Variant
Private FormulaCellRow As Variant
Private FormulaCellCol As Variant
Private ChartTop As Variant
Private ChartLeft As Variant
Private ChartWidth As Variant
Private ChartHeight As Variant
Private ChartType As String
Private DataSource As Range
Private SignalSource As Range
Private WindowSize As Integer

Private ChartName As String
Private ScrollName As String

'|fffd||fffd||fffd||fffd|"H5"|fffd||138||fffd||2bd||fffd||fffd||5ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||5a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||43a||fffd||fffd||fffd|
Function getRowCol(excelColRow As String) As Variant
    excelColRow = UCase(excelColRow)
    '|fffd||fffd||fffd||fffd||fffd||fffd||138|
    If Asc(Mid(excelColRow, 2, 1)) >= 65 Then
        col2 = Asc(Mid(excelColRow, 2, 1)) - Asc("A") + 1
        col1 = Asc(Mid(excelColRow, 1, 1)) - Asc("A") + 1
        retCol = col1 * 26 + col2
        strlen = Len(excelColRow)
        strRow = Right(excelColRow, strlen - 2)
        retRow = val(strRow)
    '|4bb||fffd||fffd||fffd||fffd||138|
    Else
        retCol = Asc(Mid(excelColRow, 1, 1)) - Asc("A") + 1
        strlen = Len(excelColRow)
        strRow = Right(excelColRow, strlen - 1)
        retRow = val(strRow)
    End If
        
    getRowCol = Array(retRow, retCol)
End Function

'|fffd||fffd||fffd||fffd|"A5:H10"|fffd||138||fffd||2bd||fffd||fffd||5ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||421||fffd||fffd||fffd||2bc||fffd||421||fffd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function getStartEnd(Area As String) As Variant
    Dim StartCell As String
    Dim EndCell As String
    
    Dim StartRow As Integer
    Dim StartCol As Integer
    Dim EndRow As Integer
    Dim EndCol As Integer
    
    start_end = Split(Area, ":")
    StartCell = start_end(0)
    EndCell = start_end(1)
      
    StartRow = getRowCol(StartCell)(0)
    StartCol = getRowCol(StartCell)(1)
    EndRow = getRowCol(EndCell)(0)
    EndCol = getRowCol(EndCell)(1)
    
    getStartEnd = Array(StartRow, StartCol, EndRow, EndCol)
End Function

Function makeOffsetSeriesStr(sheetName As String, StartRow As Integer, StartCol As Integer, size As Integer)
   tmpStr = "=OFFSET(" & sheetName & "!R" & str(StartRow) & "C" & str(StartCol) & "," & FormulaSheet.name & "!R" & str(255 + ChartNum) & "C255,0," & size & ",1)"
   makeOffsetSeriesStr = Replace(tmpStr, " ", "")
   'makeOffsetSeriesStr = Format("=OFFSET(%s!R%dC%d,%s!R1C7,0,%d,1", [sheetName,startRow, startCol, sheetName, size])
End Function

Function makeOffsetSeriesStrFew(sheetName As String, StartRow As Integer, StartCol As Integer, size As Integer)
   tmpStr = "=OFFSET(" & sheetName & "!R" & str(StartRow) & "C" & str(StartCol) & "," & "0,0," & size & ",1)"
   makeOffsetSeriesStrFew = Replace(tmpStr, " ", "")
End Function

Function makeChartName(sheetName As String, longString As String)
    totalLen = Len(longString)
    sheetNameLen = Len(sheetName)
    makeChartName = Right(longString, totalLen - sheetNameLen - 1)
End Function


'|fffd||fffd||fffd||fffd||37c|
Private Sub candle(DataSource_ As Range, SignalSource_ As Range, size_ As Integer)
    Dim DataStartRow As Integer
    Dim DataStartCol As Integer
    Dim DataEndRow As Integer
    Dim DataEndCol As Integer
    
    Dim SignalStartRow As Integer
    Dim SignalStartCol As Integer
    Dim SignalEndRow As Integer
    Dim SignalEndCol As Integer

    chart_num = chart_num + 1
    
    DataStartRow = DataSource.Row
    DataStartCol = DataSource.Column
    DataEndRow = DataStartRow + DataSource.Rows.Count - 1
    DataEndCol = DataStartCol + DataSource.Columns.Count - 1
    
    If Not SignalSource_ Is Nothing Then
        SignalStartRow = SignalSource_.Row
        SignalStartCol = SignalSource_.Column
        SignalEndRow = SignalStartRow + SignalSource_.Rows.Count - 1
        SignalEndCol = SignalStartCol + SignalSource_.Columns.Count - 1
    End If
   
    Max = Application.WorksheetFunction.Max(DataSource.Worksheet.Range(DataSource.Worksheet.Cells(DataStartRow, DataStartCol + 1), DataSource.Worksheet.Cells(DataEndRow, DataEndCol)))
    Min = Application.WorksheetFunction.Min(DataSource.Worksheet.Range(DataSource.Worksheet.Cells(DataStartRow, DataStartCol + 1), DataSource.Worksheet.Cells(DataEndRow, DataEndCol)))
    Margin = (Max - Min) / 10

    ScrollName = " "
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|size|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If DataEndRow - DataStartRow >= size_ Then
        FormulaSheet.ScrollBars.Add(ChartLeft, ChartTop + ChartHeight, ChartWidth, 15).Select
        With Selection
             .Value = 0
             .Min = 0
             .Max = (DataEndRow - DataStartRow - size_ + 1)
             .SmallChange = (size_ / 10)
             .LargeChange = 10
             .LinkedCell = FormulaSheet.name & "!$IU$" & Format(255 + ChartNum)         '$IU$256|fffd||fffd|$IU$257 ...
             .Display3DShading = True
         End With
         ScrollName = Selection.name
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||138||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd|
    If DataEndRow - DataStartRow < size_ Then
            FormulaSheet.Names.Add name:="date" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol, DataSource.Rows.Count)
        
            FormulaSheet.Names.Add name:="open" & Format(ChartNum), RefersToR1C1:= _
                 makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol + 1, DataSource.Rows.Count)
        
            FormulaSheet.Names.Add name:="high" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol + 2, DataSource.Rows.Count)
        
            FormulaSheet.Names.Add name:="loww" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol + 3, DataSource.Rows.Count)
        
             FormulaSheet.Names.Add name:="close" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol + 4, DataSource.Rows.Count)
     Else
        
            FormulaSheet.Names.Add name:="date" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol, size_)
        
            FormulaSheet.Names.Add name:="open" & Format(ChartNum), RefersToR1C1:= _
                 makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol + 1, size_)
        
            FormulaSheet.Names.Add name:="high" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol + 2, size_)
        
            FormulaSheet.Names.Add name:="loww" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol + 3, size_)
        
            FormulaSheet.Names.Add name:="close" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol + 4, size_)
     End If
        
    '|fffd||fffd||fffd||fffd||fffd||17a||175||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd|
    If Not SignalSource_ Is Nothing Then
        For i = 0 To SignalSource_.Columns.Count - 1
            If SignalSource_.Rows.Count < size_ Then
                FormulaSheet.Names.Add name:="signal" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                    makeOffsetSeriesStrFew(SignalSource_.Worksheet.name, SignalStartRow, SignalStartCol + i, DataSource.Rows.Count)
            Else
                FormulaSheet.Names.Add name:="signal" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                    makeOffsetSeriesStr(SignalSource_.Worksheet.name, SignalStartRow, SignalStartCol + i, size_)
            End If
        Next i
    End If
   
    '|fffd||fffd||fffd||fffd||37c||fffd||fffd|---|fffd||fffd||fffd||fffd||37c|
    FormulaSheet.Shapes.AddChart(, ChartLeft, ChartTop, ChartWidth, ChartHeight).Select
    ChartName = makeChartName(FormulaSheet.name, Selection.Parent.name)
    
    '|27e||fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd|
    Count = ActiveChart.SeriesCollection.Count
    For i = 1 To Count
        ActiveChart.SeriesCollection(1).Delete
    Next i
    
    '|fffd||fffd||fffd||3f5||fffd||fffd|
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(1).Values = "=" & FormulaSheet.name & "!open" & Format(ChartNum)
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(2).Values = "=" & FormulaSheet.name & "!high" & Format(ChartNum)
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(3).Values = "=" & FormulaSheet.name & "!loww" & Format(ChartNum)
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(4).Values = "=" & FormulaSheet.name & "!close" & Format(ChartNum)

    ActiveChart.SeriesCollection(4).XValues = "=" & FormulaSheet.name & "!date" & Format(ChartNum)

    ActiveChart.ChartType = xlStockOHLC
    
    With ActiveChart.ChartGroups(1)
    .UpBars.Interior.Color = RGB(176, 23, 31)
    .DownBars.Interior.Color = RGB(48, 128, 20)
    End With
    
    ActiveChart.Axes(xlValue).MinimumScale = Min
    ActiveChart.Axes(xlValue).MaximumScale = Max

    
    '|fffd||fffd||fffd||fffd||fffd||17a||175||fffd|
    If Not SignalSource_ Is Nothing Then
        For i = 0 To SignalSource_.Columns.Count - 1
            ActiveChart.SeriesCollection.NewSeries
            ActiveChart.SeriesCollection(5 + i).Values = "=" & FormulaSheet.name & "!signal" & Format(i) & Format(ChartNum)
            ActiveChart.SeriesCollection(5 + i).Select
            ActiveChart.SeriesCollection(5 + i).AxisGroup = 2
            ActiveChart.SeriesCollection(5 + i).Select
            ActiveChart.SeriesCollection(5 + i).AxisGroup = 1
            ActiveChart.SeriesCollection(5 + i).Select
            Selection.MarkerStyle = 3
        Next i
    End If
        
    ActiveChart.Legend.Select
    Selection.Delete
    
End Sub

'|fffd||fffd||5f4||37c|
Private Sub bar(DataSource_ As Range, SignalSource_ As Range, size_ As Integer)
    Dim DataStartRow As Integer
    Dim DataStartCol As Integer
    Dim DataEndRow As Integer
    Dim DataEndCol As Integer
    
    Dim SignalStartRow As Integer
    Dim SignalStartCol As Integer
    Dim SignalEndRow As Integer
    Dim SignalEndCol As Integer

    DataStartRow = DataSource.Row
    DataStartCol = DataSource.Column
    DataEndRow = DataStartRow + DataSource.Rows.Count - 1
    DataEndCol = DataStartCol + DataSource.Columns.Count - 1
    
    If Not SignalSource_ Is Nothing Then
        SignalStartRow = SignalSource_.Row
        SignalStartCol = SignalSource_.Column
        SignalEndRow = SignalStartRow + SignalSource_.Rows.Count - 1
        SignalEndCol = SignalStartCol + SignalSource_.Columns.Count - 1
    End If
   
    Max = Application.WorksheetFunction.Max(DataSource.Worksheet.Range(DataSource.Worksheet.Cells(DataStartRow, DataStartCol + 1), DataSource.Worksheet.Cells(DataEndRow, DataEndCol)))
    Min = Application.WorksheetFunction.Min(DataSource.Worksheet.Range(DataSource.Worksheet.Cells(DataStartRow, DataStartCol + 1), DataSource.Worksheet.Cells(DataEndRow, DataEndCol)))
    Margin = (Max - Min) / 10
    
    ScrollName = " "
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|size|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If DataEndRow - DataStartRow >= size_ Then
        FormulaSheet.ScrollBars.Add(ChartLeft, ChartTop + ChartHeight, ChartWidth, 15).Select
        With Selection
             .Value = 0
             .Min = 0
             .Max = (DataEndRow - DataStartRow - size_ + 1)
             .SmallChange = (size_ / 10)
             .LargeChange = 10
             .LinkedCell = FormulaSheet.name & "!$IU$" & Format(255 + ChartNum)         '$IU$256|fffd||fffd|$IU$257 ...
             .Display3DShading = True
         End With
         ScrollName = Selection.name
    End If
    
    '|fffd||fffd||fffd||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd|
    If DataEndRow - DataStartRow < size_ Then
            FormulaSheet.Names.Add name:="date" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol, DataSource.Rows.Count)
        
            FormulaSheet.Names.Add name:="value" & Format(ChartNum), RefersToR1C1:= _
                 makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol + 1, DataSource.Rows.Count)
                 
     Else
        
            FormulaSheet.Names.Add name:="date" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol, size_)
        
            FormulaSheet.Names.Add name:="value" & Format(ChartNum), RefersToR1C1:= _
                 makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol + 1, size_)
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||17a||175||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd|
    If Not SignalSource_ Is Nothing Then
        For i = 0 To SignalSource_.Columns.Count - 1
            If SignalSource_.Rows.Count < size_ Then
                FormulaSheet.Names.Add name:="signal" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                    makeOffsetSeriesStrFew(SignalSource_.Worksheet.name, SignalStartRow, SignalStartCol + i, DataSource.Rows.Count)
            Else
                FormulaSheet.Names.Add name:="signal" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                    makeOffsetSeriesStr(SignalSource_.Worksheet.name, SignalStartRow, SignalStartCol + i, size_)
            End If
        Next i
    End If
   
    '|fffd||fffd||fffd||fffd||37c||fffd||fffd|---|fffd||fffd||5f4||37c|
    FormulaSheet.Shapes.AddChart(, ChartLeft, ChartTop, ChartWidth, ChartHeight).Select
    ChartName = makeChartName(FormulaSheet.name, Selection.Parent.name)

    '|27e||fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd|
    Count = ActiveChart.SeriesCollection.Count
    For i = 1 To Count
        ActiveChart.SeriesCollection(1).Delete
    Next i
    
    '|fffd||fffd||fffd||3f5||fffd||fffd|
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(1).Values = "=" & FormulaSheet.name & "!value" & Format(ChartNum)
    ActiveChart.SeriesCollection(1).XValues = "=" & FormulaSheet.name & "!date" & Format(ChartNum)
    ActiveChart.ChartType = xlColumnClustered
    
    ActiveChart.Axes(xlValue).MinimumScale = 0
    ActiveChart.Axes(xlValue).MaximumScale = Max
    'ActiveChart.Axes(xlValue).TickLabels.NumberFormatLocal = "##0.000"
    ActiveChart.Axes(xlCategory).CategoryType = xlCategoryScale
    
    '|fffd||fffd||fffd||fffd||fffd||17a||175||fffd|
    If Not SignalSource_ Is Nothing Then
        For i = 0 To SignalSource_.Columns.Count - 1
            ActiveChart.SeriesCollection.NewSeries
            ActiveChart.SeriesCollection(2 + i).Values = "=" & FormulaSheet.name & "!signal" & Format(i) & Format(ChartNum)
            ActiveChart.SeriesCollection(2 + i).ChartType = xlXYScatter
            ActiveChart.SeriesCollection(2 + i).Select
            Selection.MarkerStyle = 3
        Next i
    End If
    
    ActiveChart.Legend.Select
    Selection.Delete
    
End Sub

'|fffd||fffd||fffd||fffd||37c|
Private Sub line(DataSource_ As Range, SignalSource_ As Range, size_ As Integer)
    Dim DataStartRow As Integer
    Dim DataStartCol As Integer
    Dim DataEndRow As Integer
    Dim DataEndCol As Integer
    
    Dim SignalStartRow As Integer
    Dim SignalStartCol As Integer
    Dim SignalEndRow As Integer
    Dim SignalEndCol As Integer

    DataStartRow = DataSource.Row
    DataStartCol = DataSource.Column
    DataEndRow = DataStartRow + DataSource.Rows.Count - 1
    DataEndCol = DataStartCol + DataSource.Columns.Count - 1
    
    If Not SignalSource_ Is Nothing Then
        SignalStartRow = SignalSource_.Row
        SignalStartCol = SignalSource_.Column
        SignalEndRow = SignalStartRow + SignalSource_.Rows.Count - 1
        SignalEndCol = SignalStartCol + SignalSource_.Columns.Count - 1
    End If
    
    'Data|fffd||430||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||423||fffd||4aa||fffd||fffd||225|
    DataColCount = DataEndCol - DataStartCol
    SignalColCount = SignalEndCol - SignalStartCol + 1
   
    On Error Resume Next
    Max = Application.WorksheetFunction.Max(DataSource.Worksheet.Range(DataSource.Worksheet.Cells(DataStartRow, DataStartCol + 1), DataSource.Worksheet.Cells(DataEndRow, DataEndCol)))
    Min = Application.WorksheetFunction.Min(DataSource.Worksheet.Range(DataSource.Worksheet.Cells(DataStartRow, DataStartCol + 1), DataSource.Worksheet.Cells(DataEndRow, DataEndCol)))
    Margin = (Max - Min) / 10
    
    ScrollName = " "
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|size|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If DataEndRow - DataStartRow >= size_ Then
        FormulaSheet.ScrollBars.Add(ChartLeft, ChartTop + ChartHeight, ChartWidth, 15).Select
        With Selection
             .Value = 0
             .Min = 0
             .Max = (DataEndRow - DataStartRow - size_ + 1)
             .SmallChange = (size_ / 10)
             .LargeChange = 10
             .LinkedCell = FormulaSheet.name & "!$IU$" & Format(255 + ChartNum)         '$IU$256|fffd||fffd|$IU$257 ...
             .Display3DShading = True
         End With
         ScrollName = Selection.name
    End If
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd|
    If DataEndRow - DataStartRow < size_ Then
            FormulaSheet.Names.Add name:="date" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol, DataSource.Rows.Count)
    Else
            FormulaSheet.Names.Add name:="date" & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol, size_)
    End If
         
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd|
    If DataEndRow - DataStartRow < size_ Then
        For i = 0 To DataColCount - 1
            FormulaSheet.Names.Add name:="value" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStrFew(DataSource.Worksheet.name, DataStartRow, DataStartCol + 1 + i, DataSource.Rows.Count)
        Next i
    Else
        For i = 0 To DataColCount - 1
            FormulaSheet.Names.Add name:="value" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                makeOffsetSeriesStr(DataSource.Worksheet.name, DataStartRow, DataStartCol + 1 + i, size_)
        Next i
    End If
            
    '|fffd||fffd||fffd||fffd||fffd||17a||175||fffd||3f5||fffd||fffd||fffd||fffd||fffd||fffd|
    If Not SignalSource_ Is Nothing Then
        For i = 0 To SignalSource_.Columns.Count - 1
            If SignalSource_.Rows.Count < size_ Then
                FormulaSheet.Names.Add name:="signal" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                    makeOffsetSeriesStrFew(SignalSource_.Worksheet.name, SignalStartRow, SignalStartCol + i, DataSource.Rows.Count)
            Else
                FormulaSheet.Names.Add name:="signal" & Format(i) & Format(ChartNum), RefersToR1C1:= _
                    makeOffsetSeriesStr(SignalSource_.Worksheet.name, SignalStartRow, SignalStartCol + i, size_)
            End If
        Next i
    End If
               
   
    '|fffd||fffd||fffd||fffd||37c||fffd||fffd|---|fffd||fffd||fffd||fffd||37c|
    FormulaSheet.Shapes.AddChart(, ChartLeft, ChartTop, ChartWidth, ChartHeight).Select
    ChartName = makeChartName(FormulaSheet.name, Selection.Parent.name)
    
    '|27e||fffd||fffd||fffd||536||fffd||fffd||fffd||fffd||fffd||3f5||fffd||fffd|
    Count = ActiveChart.SeriesCollection.Count
    For i = 1 To Count
        ActiveChart.SeriesCollection(1).Delete
    Next i
    
    ActiveChart.ChartType = xlLine
    ActiveChart.Axes(xlValue).MinimumScaleIsAuto = True
    ActiveChart.Axes(xlValue).MaximumScaleIsAuto = True
'   ActiveChart.Axes(xlValue).MajorUnit = Int((Max - Min) / 5)
    ActiveChart.Axes(xlCategory).CategoryType = xlCategoryScale
        
    On Error Resume Next
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For i = 1 To DataColCount
        ActiveChart.SeriesCollection.NewSeries
        '|52d||fffd||fffd||fffd||137||fffd||2bd|
        'ActiveChart.SeriesCollection(i).Values = "=" & FormulaSheet.name & "!" & Replace("value" & str(i - 1), " ", "")
        
        '|fffd||fffd||fffd||fffd||ff||fffd||fffd||3f5||fffd||436||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        para2 = FormulaSheet.name & "!date" & Format(ChartNum)
        para3 = FormulaSheet.name & "!value" & Format(i - 1) & Format(ChartNum)
        para4 = Format(i)
        formulaStr = "=SERIES(," & para2 & "," & para3 & "," & para4 & ")"
        ActiveChart.SeriesCollection(i).Formula = formulaStr
        ActiveChart.SeriesCollection(i).MarkerStyle = xlMarkerStyleNone  '|fffd||fffd||fffd||7f5||fffd||fffd||7b1||fffd||fffd|
    Next i
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    ActiveChart.SeriesCollection(1).XValues = "=" & FormulaSheet.name & "!date"
    
    '|fffd||fffd||fffd||fffd||fffd||17a||175||fffd|
    If Not SignalSource_ Is Nothing Then
        For i = 1 To SignalColCount
            ActiveChart.SeriesCollection.NewSeries
            ActiveChart.SeriesCollection(DataColCount + i).Values = "=" & FormulaSheet.name & "!signal" & Format(i - 1) & Format(ChartNum)
            ActiveChart.SeriesCollection(DataColCount + i).ChartType = xlXYScatter
            ActiveChart.SeriesCollection(DataColCount + i).Select
            Selection.MarkerStyle = 3
        Next i
    End If
    
    ActiveChart.Legend.Select
    Selection.Delete
    
End Sub

Public Sub setPara(chart_num As Integer, FormulaSheet_ As Variant, Row_ As Variant, Col_ As Variant, ChartType_ As String, DataSource_ As Range, SignalSource_ As Range, WindowSize_ As Integer)
    ChartNum = chart_num
    Set FormulaSheet = FormulaSheet_
    ChartType = ChartType_
    Set DataSource = DataSource_
    Set SignalSource = SignalSource_
    WindowSize = WindowSize_
    
    FormulaCellRow = Row_
    FormulaCellCol = Col_
    
    ChartTop = FormulaSheet.Range(FormulaSheet.Cells(1, 1), FormulaSheet.Cells(Row_, Col_)).Height
    If Col_ > 1 Then
        ChartLeft = FormulaSheet.Range(FormulaSheet.Cells(1, 1), FormulaSheet.Cells(Row_, Col_ - 1)).Width
    Else
        ChartLeft = 0
    End If
        
    '|fffd||fffd|20|fffd||fffd||fffd||fffd||52a||fffd||63b3f||fffd|10|fffd||fffd||fffd||fffd||52a||fffd||fffd|
    ChartHeight = FormulaSheet.Range(FormulaSheet.Cells(Row_ + 1, Col_), FormulaSheet.Cells(Row_ + 20, Col_ + 9)).Height
    ChartWidth = FormulaSheet.Range(FormulaSheet.Cells(Row_ + 1, Col_), FormulaSheet.Cells(Row_ + 20, Col_ + 9)).Width
    
End Sub

Function IsChange()
    Dim strFormula As String
    Dim strComment As String
    
    '|fb||fffd||fffd||fffd||fffd||5e2|
    If FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).Comment Is Nothing Then
        IsChange = True
        Exit Function
    End If
    
    strFormula = FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).Formula
    strComment = FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).Comment.Text
    commentArray = Split(strComment, ";")
    
    '|fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|wchart|fffd||fffd||fffd||fffd|
    If "WCHART" <> commentArray(0) Then
        '|27e||fffd||fffd||fffd||fffd||5e2|
        FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).ClearComments
        IsChange = True
        Exit Function
    End If
    
    '|fffd||fffd||5e2||fffd||fffd||4e6||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||2f8||131||fffd|
    If strFormula <> commentArray(1) Then
        '|27e||fffd||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5e2|
        On Error Resume Next
        FormulaSheet.ChartObjects(commentArray(2)).Activate
        Selection.Cut
        FormulaSheet.Shapes(commentArray(3)).Select
        Selection.Cut
        FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).ClearComments
        
        IsChange = True
        Exit Function
    End If
    
    IsChange = False
End Function

Private Sub sht_Change(ByVal Target As Range)
    Dim strComment As String
    On Error GoTo ren
    Set wchartExeObj.sht = Nothing
    Set wchartExeObj = Nothing
       
    If IsChange() = True Then
        If ChartType = "candle" Then
           Call candle(DataSource, SignalSource, WindowSize)
        ElseIf ChartType = "bar" Then
           Call bar(DataSource, SignalSource, WindowSize)
        ElseIf ChartType = "line" Then
           Call line(DataSource, SignalSource, WindowSize)
        'tick|37c||4b2||2b9||fffd||fffd||fffd||fffd||fffd||fffd||37c|
        ElseIf ChartType = "tick" Then
           Call line(DataSource, SignalSource, WindowSize)
        End If
        
        '|fffd||fffd||fffd||fffd|wchart|5e2||fffd||fffd|
        strComment = "WCHART;"
        strComment = strComment + FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).Formula
        strComment = strComment + ";"
        strComment = strComment + ChartName
        strComment = strComment + ";"
        strComment = strComment + ScrollName
        FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).AddComment
        FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).Comment.Visible = False
        FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).Comment.Text Text:=strComment
        
        '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        FormulaSheet.Cells(FormulaCellRow, FormulaCellCol).Select
        With Selection.Font
            .Color = -16776961
            .Bold = True
        End With
    End If
ren:
End Sub





Attribute VB_Name = "NewFunc"
Public chart_num As Integer

#If Win64 Then
    Public Declare PtrSafe Function WindFunc Lib "WDF.dll" _
      (FuncCode As String, ParamCount As Long, XY As Long, Param1 As Variant, Optional Param2 As Variant = Null, Optional Param3 As Variant = Null, _
      Optional Param4 As Variant = Null, Optional Param5 As Variant = Null, Optional Param6 As Variant = Null, Optional Param7 As Variant = Null, _
      Optional Param8 As Variant = Null, Optional Param9 As Variant = Null, Optional Param10 As Variant = Null, Optional Param11 As Variant = Null) As Variant
      
    Public Declare PtrSafe Function WindBCHZFunc Lib "WDF.dll" (Param1 As Variant, Param2 As Variant, Param3 As Variant, Param4 As Variant, Param5 As Variant) As Variant
    
    Public Declare PtrSafe Function SafeWindCode Lib "WDF.dll" (Code As Variant, CodeType As String) As Variant

    Public Declare PtrSafe Function WindHisQuote Lib "WDF.dll" (param As Variant) As Variant

    Public Declare PtrSafe Function TD_ Lib "WDF.dll" (DealDate As Date) As Variant

    Public Declare PtrSafe Function BatchWindFuncsAPI Lib "WDF.dll" (AFuncDatas As Variant) As Variant

    Public Declare PtrSafe Function WindEDB Lib "WDF.dll" (data As String) As Variant

    '|fffd||fffd||5b5||fffd||fffd||fffd||fffd|
    Public Declare PtrSafe Function WindWsd Lib "WDF.dll" (param As Variant) As Variant

    Public Declare PtrSafe Function WindWSI Lib "WDF.dll" (CodeType As String) As Variant

    Public Declare PtrSafe Function WindWST Lib "WDF.dll" (CodeType As String) As Variant

    Public Declare PtrSafe Function WindWsx Lib "WDF.dll" (Subfunc As Long, param As Variant) As Variant
    
    Public Declare PtrSafe Function WindWfr Lib "WDF.dll" (param As Variant) As Variant

    '|fffd||fffd||fffd||fffd||4bd||fffd||fffd||5f4||fffd||fffd||fffd|
    Public Declare PtrSafe Function To_TradeCodeAPI Lib "WDF.dll" (ShortName As String) As Variant

    '|fffd||fffd||fffd||fffd||fffd|WindCode
    Public Declare PtrSafe Function To_WindCodeAPI Lib "WDF.dll" (ShortName As String) As Variant

    Public Declare PtrSafe Function IsAStock Lib "WDF.dll" (CodeType As String) As Variant

    Public Declare PtrSafe Function IsIndStock Lib "WDF.dll" (CodeType As String) As Variant

    '|fffd||1f7||fffd|A|fffd||27b||fffd||5b8||fffd||fffd||fffd||fffd|
    Public Declare PtrSafe Function IsAorIndexStock Lib "WDF.dll" (CodeType As String) As Variant
    
    '|fffd||1f7||fffd||6f9||fffd|
    Public Declare PtrSafe Function IsHKStock Lib "WDF.dll" (CodeType As String) As Variant

    '|fffd||fffd||fffd||fffd||fffd|WindCode|fffd||fffd||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||fffd||fffd||433||fffd|
    Public Declare PtrSafe Function To_WindCodeOMKTAPI Lib "WDF.dll" (ShortName As String, Optional Market As String) As Variant

    'RemoveTabChar
    Public Declare PtrSafe Function RemoveTabChar Lib "WDF.dll" (str As Variant) As Variant

#Else
    Public Declare Function WindFunc Lib "WDF.dll" _
      (FuncCode As String, ParamCount As Long, XY As Long, Param1 As Variant, Optional Param2 As Variant = Null, Optional Param3 As Variant = Null, _
      Optional Param4 As Variant = Null, Optional Param5 As Variant = Null, Optional Param6 As Variant = Null, Optional Param7 As Variant = Null, _
      Optional Param8 As Variant = Null, Optional Param9 As Variant = Null, Optional Param10 As Variant = Null, Optional Param11 As Variant = Null) As Variant
 
    Public Declare Function WindBCHZFunc Lib "WDF.dll" (Param1 As Variant, Param2 As Variant, Param3 As Variant, Param4 As Variant, Param5 As Variant) As Variant
 
    Public Declare Function SafeWindCode Lib "WDF.dll" (Code As Variant, CodeType As String) As Variant

    Public Declare Function WindHisQuote Lib "WDF.dll" (param As Variant) As Variant

    Public Declare Function TD_ Lib "WDF.dll" (DealDate As Date) As Variant

    Public Declare Function BatchWindFuncsAPI Lib "WDF.dll" (AFuncDatas As Variant) As Variant

    Public Declare Function WindEDB Lib "WDF.dll" (data As String) As Variant

    '|fffd||fffd||5b5||fffd||fffd||fffd||fffd|
    Public Declare Function WindWsd Lib "WDF.dll" (param As Variant) As Variant

    Public Declare Function WindWSI Lib "WDF.dll" (CodeType As String) As Variant

    Public Declare Function WindWST Lib "WDF.dll" (CodeType As String) As Variant

    Public Declare Function WindWsx Lib "WDF.dll" (Subfunc As Long, param As Variant) As Variant
    
    Public Declare Function WindWfr Lib "WDF.dll" (param As Variant) As Variant

    '|fffd||fffd||fffd||fffd||4bd||fffd||fffd||5f4||fffd||fffd||fffd|
    Public Declare Function To_TradeCodeAPI Lib "WDF.dll" (ShortName As String) As Variant

    '|fffd||fffd||fffd||fffd||fffd|WindCode
    Public Declare Function To_WindCodeAPI Lib "WDF.dll" (ShortName As String) As Variant

    Public Declare Function IsAStock Lib "WDF.dll" (CodeType As String) As Variant

    Public Declare Function IsIndStock Lib "WDF.dll" (CodeType As String) As Variant

    '|fffd||1f7||fffd|A|fffd||27b||fffd||5b8||fffd||fffd||fffd||fffd|
    Public Declare Function IsAorIndexStock Lib "WDF.dll" (CodeType As String) As Variant
    
    '|fffd||1f7||fffd||6f9||fffd|
    Public Declare Function IsHKStock Lib "WDF.dll" (CodeType As String) As Variant

    '|fffd||fffd||fffd||fffd||fffd|WindCode|fffd||fffd||fffd||fffd||461||fffd||fffd||fffd||fffd||fffd||fffd||fffd||433||fffd|
    Public Declare Function To_WindCodeOMKTAPI Lib "WDF.dll" (ShortName As String, Optional Market As String) As Variant

    'RemoveTabChar
    Public Declare Function RemoveTabChar Lib "WDF.dll" (str As Variant) As Variant
#End If

Private Type GUID
        Data1   As Long
        Data2   As Long
        Data3   As Long
        Data4(8)   As Byte
End Type

#If Win64 Then
    Private Declare PtrSafe Function CoCreateGuid Lib "ole32.dll " (pguid As GUID) As Long
    Private Declare PtrSafe Function StringFromGUID2 Lib "ole32.dll " (rguid As Any, ByVal lpstrClsId As LongPtr, ByVal cbMax As Long) As Long
#Else
    Private Declare Function CoCreateGuid Lib "ole32.dll " (pguid As GUID) As Long
    Private Declare Function StringFromGUID2 Lib "ole32.dll " (rguid As Any, ByVal lpstrClsId As Long, ByVal cbMax As Long) As Long
#End If

'Wchart|5b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public wchartExeObj

'|221|GUID|fffd||fffd|
'|fffd||fffd||fffd||fffd|:
'|fffd||fffd||fffd||fffd||5b5|:STRING,|4bb||fffd||fffd|GUID|fffd||fffd|.
Private Function GetGUIDCode() As String
    Dim uGUID     As GUID
    Dim sGUID     As String
    Dim bGUID()     As Byte
    Dim lLen     As Long
    Dim RetVal     As Long
    
    lLen = 40
    bGUID = String(lLen, 0)
    CoCreateGuid uGUID     '|fffd||47d||1e79||5ea||fffd||fffd||3aa||4bb||fffd||fffd||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||5b7||fffd||fffd||fffd|
    RetVal = StringFromGUID2(uGUID, bGUID(0), lLen)
    sGUID = bGUID
    If (Asc(Mid$(sGUID, RetVal, 1)) = 0) Then RetVal = RetVal - 1
    GetGUIDCode = Left$(sGUID, RetVal)
End Function

Sub AutoCalcSetBtnClick()
  Dim dg As Dialog
  Set dg = Application.Dialogs(xlDialogOptionsCalculation)
  dg.Show
End Sub


Function SafeWindCodeMacro(Code As Variant, CodeType As String) As Variant
    SafeWindCodeMacro = SafeWindCode(Code, CodeType)
End Function

Function BatchWindFuncs(AFuncDatas As Variant) As Variant
    BatchWindFuncs = BatchWindFuncsAPI(AFuncDatas)
End Function

Function IsStockA(stock As String) As Variant
  IsStockA = IsAStock(stock)
End Function
Function IsStockAorIndex(stock As String) As Variant
  IsStockAorIndex = IsAorIndexStock(stock)
End Function

Function IsStockHK(stock As String) As Variant
  IsStockHK = IsHKStock(stock)
End Function

Function IsStockInd(stock As String) As Variant
  IsStockInd = IsIndStock(stock)
End Function

Function To_WindCodeOMKT(stock As String, Optional Market As String) As Variant
    To_WindCodeOMKT = To_WindCodeOMKTAPI(stock, Market)
End Function
            
            
'|221||fffd||fffd||237||fffd||131||fffd||fffd||fffd|
Function GetValidCurType(Optional CurType As Variant) As String
On Error Resume Next
  If (IsMissing(CurType) Or IsEmpty(CurType) Or IsNull(CurType)) Then
    GetValidCurType = "CUR=O"
  ElseIf VarType(CurType) = vbString Then
    If CurType = "" Then
      GetValidCurType = "CUR=O"
    Else
      GetValidCurType = LCase(CurType)
    End If
  End If
'Dim sCurType As String
'  GetValidCurType = "BB"
'  If (IsMissing(CurType) Or IsEmpty(CurType) Or IsNull(CurType)) Then
'      GetValidCurType = "BB"
'  ElseIf VarType(CurType) = vbString Then
'    If InStr(1, Trim(CurType), "cur", 1) = 1 Then
'      sCurType = Mid(Trim(CurType), InStr(1, Trim(CurType), "=", 1) + 1, Len(Trim(CurType)) - InStr(1, Trim(CurType), "=", 1))
'    End If
'  End If
'
'  If LCase(sCurType) = "original" Or LCase(sCurType) = "o" Then
'    GetValidCurType = "BB"
'  Else
'    GetValidCurType = sCurType
'  End If
    
End Function
            
Function GetValidCode(CodeValue As Variant, CodeType As String) As String
On Error Resume Next
Dim i As Integer
Dim s As String


s = CStr(CodeValue)
s = RemoveTabChar(s)
s = UCase(s)

'|fffd||fffd||fffd|.HKS/.HKZ / .SHN /.SZN|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2d26||fffd||fffd|
If (InStr(s, ".HKS") > 0 Or InStr(s, ".HKZ") > 0 Or InStr(s, ".SHN") > 0 Or InStr(s, ".SZN") > 0) Then
    s = Left(s, Len(s) - 1)
End If

'|fffd||fffd||fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||47e||fffd||fffd||fffd|windCode|fffd||fffd||5b1||fffd||4f7||fffd||fffd||fffd|
If InStr(s, ".") > 0 Then
  GetValidCode = s
  Exit Function
End If

If Len(s) > 0 Then
  '|fffd||6f9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|4|3bb||fffd||fffd||1f0||fffd||6cb9|0
  If CodeType = "HKS" Then
    If Len(s) >= 4 Or Not IsNumeric(s) Then
      GetValidCode = s & ".HK"
    Else
      If val(s) <> 0 Then
        For i = 1 To 4 - Len(s)
          s = "0" & s
        Next i
        GetValidCode = s & ".HK"
      End If
    End If
    Exit Function
  End If

 '|fffd||fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|6|3bb||fffd||fffd||1f0||fffd||6cb9|0
  If Len(s) >= 6 Or Not IsNumeric(s) Then
    GetValidCode = s & "^" & CodeType
  Else
    If val(s) <> 0 Then
      For i = 1 To 6 - Len(s)
        s = "0" & s
      Next i
      GetValidCode = s & "^" & CodeType
    End If
  End If
End If

End Function

Function GetRptDateNew(AYear As Variant, AQ As Variant) As String
    Dim TempYear As String
    Dim TempDate As String
    If TypeName(AYear) = "String" Then
        TempYear = AYear
    ElseIf TypeName(AYear) = "Range" Then
        If AYear.Count = 1 Then
            TempYear = AYear.Text
        Else
          GetRptDateNew = ""
        End If
    End If
    
    If TypeName(AQ) = "String" Then
        TempDate = AQ
    ElseIf TypeName(AQ) = "Range" Then
        If AYear.Count = 1 Then
            TempDate = AQ.Text
        Else
          GetRptDateNew = ""
        End If
    End If
    If TempYear = "" Or TempDate = "" Then
        GetRptDateNew = ""
    Else

        If TempDate = "|4bb||fffd||fffd||fffd||fffd|" Or TempDate = "|fffd||fffd||4bb||fffd||fffd||fffd||fffd|" Then
            GetRptDateNew = TempYear + "-03-31"
        ElseIf TempDate = "|fffd||431||fffd|" Or TempDate = "|fffd||6b6||fffd||fffd||fffd||fffd||fffd|" Then
            GetRptDateNew = TempYear + "-06-30"
        ElseIf TempDate = "|fffd||fffd||fffd||fffd||fffd||fffd|" Or TempDate = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
            GetRptDateNew = TempYear + "-09-30"
        ElseIf TempDate = "|fffd||ac68|" Or TempDate = "|fffd||fffd||fffd||13c||fffd||fffd||fffd|" Then
            GetRptDateNew = TempYear + "-12-31"
        Else
            GetRptDateNew = ""
        End If
    End If

End Function

Function EDB()
    Dim cell As Range
    Set cell = Application.Caller
    
On Error GoTo Handler
    Dim str As String
    str = cell.Comment.Text
    EDB = WindEDB(str)
    Exit Function
Handler:
    EDB = WindEDB("")
End Function

Function Date2Year(ADate As Variant) As String
    Date2Year = Left(Format(GetValidDate(ADate), "yyyymmdd"), 4)
End Function

Function Date2MMDD(ADate As Variant) As String
    Date2MMDD = Right(Format(GetValidDate(ADate), "yyyymmdd"), 4)
End Function


Function Date2RptType(ADate As Variant) As Integer
    Dim DateStr As String
    DateStr = Mid(Format(GetValidDate(ADate), "yyyymmdd"), 5, 4)
    
    If DateStr = "0331" Then
        Date2RptType = 1
    ElseIf DateStr = "0630" Then
        Date2RptType = 2
    ElseIf DateStr = "0930" Then
        Date2RptType = 3
    ElseIf DateStr = "1231" Then
        Date2RptType = 4
    Else
        Date2RptType = 0
    End If
End Function

Function ComType2ComName(ComType As Integer) As String
    
    Select Case ComType
       Case 1
                ItemStr = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a4||22f|"
       Case 2
                ItemStr = "|fffd||fffd||329||fffd||fffd||fffd||fffd||5a4||22f|"
       Case 3
                ItemStr = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a4||22f|"
       Case 4
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 5
                ItemStr = "|fffd||fffd||368||5a4||22f|"
       Case 6
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 7
                ItemStr = "|fffd||fffd||fffd||5a4||22f|"
       Case 8
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 9
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 10
                ItemStr = "|fffd||fffd||4b5||5a4||22f|"
       Case 11
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 12
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 13
                ItemStr = "|fffd||fffd||329||5a4||22f|"
       Case 14
                ItemStr = "|1bd||fffd||fffd||5a4||22f|"
       Case 15
                ItemStr = "|fffd||fffd||fffd||17d||fffd||376||5a4||22f|"
       Case 16
                ItemStr = "|fffd||fffd||376||5a4||22f|"
       Case 17
                ItemStr = "|fffd||439||fffd||fffd||fffd||fffd||fffd||5a4||22f|"
       Case 18
                ItemStr = "|fffd||3fa||fffd||5a4||22f|"
       Case 19
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 21
                ItemStr = "|fffd||fffd||329||fffd||fffd||fffd||fffd||5a4||22f|"
       Case 22
                ItemStr = "|fffd||fffd||534||5a4||22f|"
       Case 23
                ItemStr = "|fffd||bd||fffd||5a4||22f|"
       Case 24
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 25
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 26
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 27
                ItemStr = "|fffd||3de2||5a4||22f|"
       Case 28
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 29
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 30
                ItemStr = "|fffd||fffd||52a||5a4||22f|"
       Case 31
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 32
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 33
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 34
                ItemStr = "|fffd||1b8||fffd||5a4||22f|"
       Case 35
                ItemStr = "|fffd||fffd||368||5a4||22f|"
       Case 36
                ItemStr = "|fffd||fffd||36c||5a4||22f|"
       Case 37
                ItemStr = "|fffd||b0||fffd||5a4||22f|"
       Case 38
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 39
                ItemStr = "|fffd||fffd||778||5a4||22f|"
       Case 40
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 41
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 42
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 43
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 44
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 45
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 46
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 47
                ItemStr = "|fffd||fffd||2a2||5a4||22f|"
       Case 48
                ItemStr = "|fffd||fffd||329||5a4||22f|"
       Case 49
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 50
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 51
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 52
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 53
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 54
                ItemStr = "|fffd||fffd||52a||5a4||22f|"
       Case 55
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 56
                ItemStr = "|fffd||3fe||fffd||5a4||22f|"
       Case 57
                ItemStr = "|fffd||fffd||b3||5a4||22f|"
       Case 58
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 59
                ItemStr = "|fffd||fffd||fffd||177||fffd||fffd||fffd||5a4||22f|"
       Case 60
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 61
                ItemStr = "|27d||fffd||fffd||5a4||22f|"
       Case 62
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 63
                ItemStr = "|fffd||fffd||fffd||5a4||22f|"
       Case 64
                ItemStr = "|fffd||fffd||2b1||fffd||fffd||5a4||22f|"
       Case 65
                ItemStr = "|fffd||174||fffd||5a4||22f|"
       Case 66
                ItemStr = "|4e2||fffd||fffd||5a4||22f|"
       Case 67
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 68
                ItemStr = "|fffd||fffd||fffd||fffd||fffd||fffd||368||5a4||22f|"
       Case 69
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 70
                ItemStr = "|fffd||fffd||52d||5a4||22f|"
       Case 71
                ItemStr = "|fffd||43d||fffd||5a4||22f|"
       Case 72
                ItemStr = "|fffd||fffd||fffd||fffd||5be||fffd||fffd||fffd||fffd|"
       Case 73
                ItemStr = "|fffd||fffd||4bb||fffd||fffd||4b5|"
       Case 74
                ItemStr = "|fffd||7fb||fffd||5a4||22f|"
       Case 75
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 76
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 77
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 78
                ItemStr = "|fffd||fc3a||5a4||22f|"
       Case 79
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 80
                ItemStr = "|fffd||fffd||fffd||fffd||5a4||22f|"
       Case 81
                ItemStr = "|126||fffd||fffd||fffd||fffd||368|"
       Case 82
                ItemStr = "|23a||fffd||fffd||5a4||22f|"
       Case 83
                ItemStr = "|32b||1bd||fffd||fffd||5a4||22f|"
       Case 84
                ItemStr = "|536||fffd||fffd||5a4||22f|"
       Case 85
                ItemStr = "|fffd||43a||fffd||5a4||22f|"
    End Select

    ComType2ComName = ItemStr
    
End Function

Function ConvIndtype(IndType As Integer) As Integer
    Select Case IndType
       Case 1
                ItemStr = 13
       Case 2
                ItemStr = 1
       Case 3
                ItemStr = 22
       Case 4
                ItemStr = 18
       Case 5
                ItemStr = 6
       Case 6
                ItemStr = 12
       Case 7
                ItemStr = 21
       Case 8
                ItemStr = 17
       Case 9
                ItemStr = 4
       Case 10
                ItemStr = 11
       Case 11
                ItemStr = 7
       Case 12
                ItemStr = 20
       Case 13
                ItemStr = 15
       Case 14
                ItemStr = 3
       Case 15
                ItemStr = 8
       Case 16
                ItemStr = 9
       Case 17
                ItemStr = 19
       Case 18
                ItemStr = 14
       Case 19
                ItemStr = 10
       Case 20
                ItemStr = 5
       Case 21
                ItemStr = 16
       Case 22
                ItemStr = 2
       Case 23
                ItemStr = 23
    End Select

    ConvIndtype = ItemStr
    
End Function

' |5a7||fffd||fffd|WindCode|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function WindCodeVals(WindCode As Variant, CodeType As String) As Variant
On Error Resume Next
Dim codes As Variant
Dim CellCount As Long

  If TypeName(WindCode) = "Range" Then
    CellCount = WindCode.Count
    
    If CellCount = 1 Then
        WindCodeVals = GetValidCode(Trim(WindCode(1)), CodeType)
    Else
        ReDim codes(1 To CellCount)
        
        For i = 1 To CellCount
          codes(i) = GetValidCode(Trim(WindCode(i)), CodeType)
        Next i
        WindCodeVals = codes
    End If
  Else
    If TypeName(WindCode) = "String" Then
      WindCodeVals = GetValidCode(Trim(WindCode), CodeType)
          WindCodeVals = Left(WindCodeVals, 50)
    Else
      If TypeName(WindCode) = "Integer" Then
        WindCodeVals = GetValidCode(WindCode, CodeType)
      Else
        If TypeName(WindCode) = "Double" Then
          WindCodeVals = GetValidCode(WindCode, CodeType)
        Else
          WindCodeVals = WindCode
        End If
      End If
    End If
  End If
End Function

Function WindCodeXY(WindCode As Variant) As Variant
    
  WindCodeXY = 1
    
  If TypeName(WindCode) = "Range" Then
    If WindCode.Columns.Count = 1 Then
      WindCodeXY = 2
    Else
      WindCodeXY = 1
    End If
  Else
    WindCodeXY = 1
  End If

End Function

'|221||fffd||fffd||237||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd|
Function GetValidDate(Optional DatePara As Variant, Optional ADefDate As Variant) As Date
On Error Resume Next
Dim s As String
Dim LDate As Date

  GetValidDate = -1
  
  If (IsMissing(ADefDate) Or IsEmpty(ADefDate) Or IsNull(ADefDate)) Then
    LDate = Date
  Else
    LDate = ADefDate
  End If

  If (IsMissing(DatePara) Or IsEmpty(DatePara) Or IsNull(DatePara)) Then
      GetValidDate = LDate
  ElseIf IsDate(DatePara) Then
'    If DateValue(DatePara) <= DateValue("1900-1-1") Then
'      GetValidDate = Date
'    Else
      GetValidDate = DatePara
'    End If
  ElseIf VarType(DatePara) = vbString Then
    If DatePara = "" Then
      GetValidDate = LDate
    ElseIf IsDate(Left(DatePara, 4) & "-" & Mid(DatePara, 5, 2) & "-" & Mid(DatePara, 7, 2)) Then
      GetValidDate = CDate(Left(DatePara, 4) & "-" & Mid(DatePara, 5, 2) & "-" & Mid(DatePara, 7, 2))
    End If
  ElseIf VarType(DatePara) = vbDouble Then
    s = CStr(DatePara)
    If IsDate(Left(s, 4) & "-" & Mid(s, 5, 2) & "-" & Mid(s, 7, 2)) Then
      GetValidDate = CDate(Left(s, 4) & "-" & Mid(s, 5, 2) & "-" & Mid(s, 7, 2))
    Else
      GetValidDate = CDate(DatePara)
    End If
  End If
End Function

'|221||fffd||fffd||237||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd|new(|fffd||fffd||fffd||fffd||fffd||435||fffd||1f0||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||5b1||fffd||4f7||fffd||fffd||37f||fffd||5b5|)
Function GetValidDate_New(Optional DatePara As Variant, Optional ADefDate As Variant) As Variant
On Error Resume Next
Dim s As String
Dim LDate As Date

  GetValidDate_New = -1
  
  If (IsMissing(ADefDate) Or IsEmpty(ADefDate) Or IsNull(ADefDate)) Then
    LDate = Date
  Else
    LDate = ADefDate
  End If

  If (IsMissing(DatePara) Or IsEmpty(DatePara) Or IsNull(DatePara)) Then
      GetValidDate_New = ""
  ElseIf IsDate(DatePara) Then
'    If DateValue(DatePara) <= DateValue("1900-1-1") Then
'      GetValidDate = Date
'    Else
      GetValidDate_New = CDate(DatePara)
'    End If
  ElseIf VarType(DatePara) = vbString Then
    If DatePara = "" Then
      GetValidDate_New = ""
    ElseIf IsDate(Left(DatePara, 4) & "-" & Mid(DatePara, 5, 2) & "-" & Mid(DatePara, 7, 2)) Then
      GetValidDate_New = CDate(Left(DatePara, 4) & "-" & Mid(DatePara, 5, 2) & "-" & Mid(DatePara, 7, 2))
    End If
  ElseIf VarType(DatePara) = vbDouble Then
    s = CStr(DatePara)
    If IsDate(Left(s, 4) & "-" & Mid(s, 5, 2) & "-" & Mid(s, 7, 2)) Then
      GetValidDate_New = CDate(Left(s, 4) & "-" & Mid(s, 5, 2) & "-" & Mid(s, 7, 2))
    Else
      GetValidDate_New = CDate(DatePara)
    End If
  End If
End Function

'|221||fffd||fffd||237||fffd||fffd|double|fffd||fffd||fffd||fffd||5b5|
Function GetValidDBL(Optional ParaValue As Variant, Optional ADefValue As Variant) As Double
On Error Resume Next
Dim lValue As Double

  If (IsMissing(ParaValue) Or IsEmpty(ParaValue) Or IsNull(ParaValue)) Then
    lValue = CDbl(ADefValue)
  Else
    lValue = CDbl(ParaValue)
  End If
  GetValidDBL = lValue

End Function

'|221||fffd||fffd||237||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||6a3||fffd||fffd||fffd||3aa||fffd||563||fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||6b5||fffd||1f0||fffd||fffd||fffd||6ba||fffd||fffd||1bc||fffd||fffd||fffd|
Function GetValidAfterDate(Optional DatePara As Variant, Optional AFDay As Integer = 7) As Date
On Error Resume Next
Dim s As String

  If (IsMissing(DatePara) Or IsEmpty(DatePara) Or IsNull(DatePara)) Then
      GetValidAfterDate = Date + AFDay
  ElseIf IsDate(DatePara) Then
'    If DateValue(DatePara) <= DateValue("1900-1-1") Then
'      GetValidDate = Date
'    Else
      GetValidAfterDate = DatePara
'    End If
  ElseIf VarType(DatePara) = vbString Then
    If DatePara = "" Then
      GetValidAfterDate = Date + AFDay
    ElseIf IsDate(Left(DatePara, 4) & "-" & Mid(DatePara, 5, 2) & "-" & Mid(DatePara, 7, 2)) Then
      GetValidAfterDate = CDate(Left(DatePara, 4) & "-" & Mid(DatePara, 5, 2) & "-" & Mid(DatePara, 7, 2))
    End If
  ElseIf VarType(DatePara) = vbDouble Then
    s = CStr(DatePara)
    If IsDate(Left(s, 4) & "-" & Mid(s, 5, 2) & "-" & Mid(s, 7, 2)) Then
      GetValidAfterDate = CDate(Left(s, 4) & "-" & Mid(s, 5, 2) & "-" & Mid(s, 7, 2))
    Else
      GetValidAfterDate = CDate(DatePara)
    End If
  End If
End Function

'|221||fffd||fffd||763||fffd||fffd||7b2||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||1f0||fffd||fffd|
Function GetYear(Optional YearValue As Integer) As Integer
    If (IsMissing(YearValue) Or IsEmpty(YearValue) Or IsNull(YearValue)) Then
      GetYear = Year(Date)
    ElseIf YearValue = 0 Then
      GetYear = Year(Date)
    Else
      GetYear = YearValue
    End If
End Function

Function GetParaStr(param As Variant) As String
Dim i As Integer
Dim j As Integer
Dim str As String
Dim MyRange As Range
Dim TmpRange As Range

If TypeName(param) = "String" Then
  GetParaStr = param
End If

If TypeName(param) = "Range" Then
  Set MyRange = param
  str = "["
  
  For i = 1 To MyRange.Rows.Count
    For j = 1 To MyRange.Columns.Count
      Set TmpRange = MyRange.Cells(i, j)
      str = str & TmpRange.Value & ","
    Next j
  Next i
  str = Left(str, Len(str) - 1)
  GetParaStr = str & "]"
  End If

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'|fffd||fffd||fffd||6bc||fffd||fffd||3eaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||52d||2bc||fffd||fffd||fffd||6a1||fffd||fffd||fffd||5b5||fffd||37c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||38ec|Type_ 0|fffd||fffd|1|fffd||fffd|2|fffd||5b1||fffd||fffd||4e6||fffd||fffd||fffd||fffd||fffd||fffd||135||fffd||fffd||563||fffd||fffd||fffd||fffd||fffd||129|
Function S_Cal_Date(ADate As Variant, Optional N_ As Integer = 0, Optional PERIOD_ As String = "w", Optional TYPE_ As Integer = 0) As Date
  Dim LDate As Date
  Dim LIntDate As Date
  Dim LPeriod As String
  
  LDate = GetValidDate(ADate)
  If N_ = -1 And LCase(PERIOD_) = "s" And TYPE_ = 2 Then
    S_Cal_Date = DateSerial(Year(LDate), 6, 30)
  Else
    Select Case LCase(PERIOD_)
      Case "w"
               LPeriod = "ww"
      Case "m"
               LPeriod = "m"
      Case "q"
               LPeriod = "q"
      Case "y"
               LPeriod = "YYYY"
      Case "d"
               LPeriod = "d"
    End Select
    
    LIntDate = DateAdd(LPeriod, N_, LDate)
    
    If TYPE_ = 0 Then
      S_Cal_Date = LIntDate
    ElseIf TYPE_ = 1 Then
      If LCase(PERIOD_) = "w" Then
        S_Cal_Date = DateAdd("d", -(Weekday(LIntDate) - 2), LIntDate)
      ElseIf LCase(PERIOD_) = "m" Then
        S_Cal_Date = DateSerial(Year(LIntDate), Month(LIntDate), 1)
      ElseIf LCase(PERIOD_) = "y" Then
        S_Cal_Date = DateSerial(Year(LIntDate), 1, 1)
      End If
    ElseIf TYPE_ = 2 Then
      If LCase(PERIOD_) = "w" Then
        S_Cal_Date = DateAdd("d", 6 - Weekday(LIntDate), LIntDate)
      ElseIf LCase(PERIOD_) = "m" Then
        S_Cal_Date = DateAdd("m", 1, DateSerial(Year(LIntDate), Month(LIntDate), 1)) - 1
      ElseIf LCase(PERIOD_) = "y" Then
        S_Cal_Date = DateSerial(Year(LIntDate), 12, 31)
      End If
    End If
  End If
    
End Function

'|fffd||fffd||fffd||fffd||fffd||6ba||fffd||fffd||fffd||fffd||fffd||fffd||fffd||772||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||232||fffd||fffd||fffd|
Function S_Report_Date(Optional N_ As Integer = 0, Optional TYPE_ As Integer = 4) As Date
  Dim LYear As Integer
  
  LYear = Year(Now()) + N_
  Select Case TYPE_
      Case 1
             S_Report_Date = DateSerial(LYear, 3, 31)
      Case 2
             S_Report_Date = DateSerial(LYear, 6, 30)
      Case 3
             S_Report_Date = DateSerial(LYear, 9, 30)
      Case 4
             S_Report_Date = DateSerial(LYear, 12, 31)
  End Select

End Function

'|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd||fffd| S_trade_date,|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||1ba||fffd||fffd||7fa||fffd||fffd||2fc||fffd||fffd||fffd||fffd||4bd||fffd||fffd||fffd||fffd||fffd|
Function S_trade_date(WINDCODE_ As Variant, Optional ADate As Variant, Optional N_ As Integer = 0) As Variant
  S_trade_date = WindFunc("S_trade_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(ADate), N_, Null, Null, Null)
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'----------HisQuote|fffd||fffd|C++|fffd||434||fffd||fffd||fffd|18|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||775||fffd|
Function HisQuote(WINDCODE_ As Variant, IndexList_ As Variant, Optional TimeType_ As String = "1", Optional StartTime_ As Variant, _
    Optional EndTime_ As Variant, Optional PeriValue_ As Integer = -1, Optional PeriType_ As String = "M", _
    Optional ExportType_ As Integer = 1, Optional CodeType_ As Integer = 2, Optional DisDateType_ As Integer = 1, _
    Optional DateAsc_ As Integer = 1, Optional IndexInRow_ As Integer = 1, Optional IsParam_ As Integer = 1, _
    Optional IndexPeri_ As Integer = 1, Optional QuanType_ As Integer = 1, Optional PriceType_ As Integer = 1, _
    Optional ToPoint_ As String, Optional outDate As Integer = 3) As Variant
  Dim ValArray(17) As Variant
  ValArray(0) = GetParaStr(WINDCODE_)
  ValArray(1) = GetParaStr(IndexList_)
  ValArray(2) = TimeType_
  ValArray(3) = GetParaStrEx(StartTime_)
  ValArray(4) = GetParaStrEx(EndTime_)
  ValArray(5) = PeriValue_
  ValArray(6) = PeriType_
  ValArray(7) = ExportType_
  ValArray(8) = CodeType_
  ValArray(9) = DisDateType_
  ValArray(10) = DateAsc_
  ValArray(11) = IndexInRow_
  ValArray(12) = IsParam_
  ValArray(13) = IndexPeri_
  ValArray(14) = QuanType_
  ValArray(15) = PriceType_
  ValArray(16) = outDate
  ValArray(17) = ToPoint_
  
  HisQuote = WindHisQuote(ValArray)
End Function

Function WSD_HisQuote(WINDCODE_ As Variant, IndexList_ As Variant, Optional Param1 As String = "param1 = hello", Optional Param2 As String = "Param2 = hello", _
    Optional Param3 As String = "Param3 = hello", Optional Param4 As String = "Param4 = hello", Optional Param5 As String = "Param5 = hello" _
    , Optional Param6 As String = "Param6 = hello", Optional Param7 As String = "Param7 = hello", Optional Param8 As String = "Param8 = hello" _
    , Optional Param9 As String = "Param9 = hello", Optional Param10 As String = "Param10 = hello", Optional Param11 As String = "Param11 = hello" _
    , Optional Param12 As String = "Param12 = hello", Optional Param13 As String = "Param13 = hello", Optional Param14 As String = "Param14 = hello" _
    , Optional Param15 As String = "Param15 = hello", Optional Param16 As String = "Param16 = hello", Optional Param17 As String = "Param17 = hello" _
    , Optional Param18 As String = "Param18 = hello", Optional Param19 As String = "Param19 = hello", Optional Param20 As String = "Param20 = hello") As Variant

    Dim ValArray(21) As Variant
    ValArray(0) = GetParaStr(WINDCODE_)
    ValArray(1) = GetParaStr(IndexList_)
    ValArray(2) = Param1
    ValArray(3) = Param2
    ValArray(4) = Param3
    ValArray(5) = Param4
    ValArray(6) = Param5
    ValArray(7) = Param6
    ValArray(8) = Param7
    ValArray(9) = Param8
    ValArray(10) = Param9
    ValArray(11) = Param10
    ValArray(12) = Param11
    ValArray(13) = Param12
    ValArray(14) = Param13
    ValArray(15) = Param14
    ValArray(16) = Param15
    ValArray(17) = Param16
    ValArray(18) = Param17
    ValArray(19) = Param18
    ValArray(20) = Param19
    ValArray(21) = Param20
    WSD_HisQuote = WindWsd(ValArray)
End Function

Function WSI_OLD(WINDCODE_ As Variant, IndexList_ As Variant, Optional Paramset As Variant)
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Subfunc = 1
    
    ValArray(0) = GetParaStr(WINDCODE_)
    ValArray(1) = GetParaStr(IndexList_)
    ValArray(2) = Paramset
    WSI_OLD = WindWsx(Subfunc, ValArray)
End Function


Function WST_OLD(WINDCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Subfunc = 2
    
    ValArray(0) = GetParaStr(WINDCODE_)
    ValArray(1) = GetParaStr(IndexList_)
    ValArray(2) = Paramset
    WST_OLD = WindWsx(Subfunc, ValArray)
End Function

Function WSI(ParamArray Args())
    Dim pos As Integer
    Dim val As String
    
    For pos = LBound(Args) To UBound(Args)
        If (pos = 0) Then
            val = GetParaStrEx(Args(pos))
        ElseIf pos > 0 And pos < 4 Then
            val = val + Chr(7) + GetParaStrEx(Args(pos))
        Else
            val = val + Chr(7) + Args(pos)
        End If
    Next
    
   WSI = WindWSI(val)
End Function

Function WST(ParamArray Args())
    Dim pos As Integer
    Dim val As String
    
    For pos = LBound(Args) To UBound(Args)
        If (pos = 0) Then
            val = GetParaStrEx(Args(pos))
        ElseIf pos = 1 Then
            val = val + Chr(7) + GetParaStrEx(Args(pos))
        ElseIf pos = 2 Then
            val = val + Chr(7) + GetParaStrEx(Args(pos))
        ElseIf pos = 3 Then
            val = val + Chr(7) + GetParaStrEx(Args(pos))
        Else
            val = val + Chr(7) + Args(pos)
        End If
    Next
    
   WST = WindWST(val)
End Function

Function IsHorizola(isHorizola_ As Variant) As Boolean
   Dim pos As Integer
   Dim temp As String
   temp = isHorizola_
   pos = Len(temp)
   If (isHorizola_ = "") Then
     IsHorizola = True
   Else
     If (Mid(temp, pos, 1) = "H") Then
        IsHorizola = True
     Else
         If (Mid(temp, pos, 1) = "h") Then
            IsHorizola = True
         End If
         IsHorizola = False
     End If
   End If
   
  
End Function

Function GetParamByKey(param_ As Variant, key_ As String) As Variant
Dim lenth As Integer
lenth = Len(key_)

 myType = TypeName(param_)
        If myType = "String" Then
            GetParamByKey = param_
        ElseIf myType = "Variant()" Then
            Dim i As Integer
            
            For i = LBound(param_, 1) To UBound(param_, 1)
                If UCase(Mid(param_(i), 1, lenth)) = UCase(key_) Then
                   GetParamByKey = param_(i)
                End If
            Next
           
        End If
End Function

Function WSD(WINDCODE_ As Variant, IndexList_ As Variant, StartDate_ As Variant, EndDate_ As Variant, ParamArray Paramset())
    Dim ValArray(4) As Variant
    Dim Subfunc As Long
    Dim WindCode As String
    Dim index As String
  
    WindCode = GetParaStrEx(WINDCODE_)
    index = GetParaStrEx(IndexList_)
    Subfunc = 3
    
    ValArray(0) = GetParaStr(WindCode)
    ValArray(1) = GetParaStr(index)
    ValArray(2) = GetParaStrEx(StartDate_)
    ValArray(3) = GetParaStrEx(EndDate_)
  
    ValArray(4) = Paramset
    WSD = WindWsx(Subfunc, ValArray)
End Function

Function WPD(PRODUCTCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Dim ProductCode As String
    Dim index As String
  
    ProductCode = GetParaStrEx(PRODUCTCODE_)
    index = GetParaStrEx(IndexList_)
    Subfunc = 19
    
    ValArray(0) = GetParaStr(ProductCode)
    ValArray(1) = GetParaStr(index)
    ValArray(2) = Paramset
    WPD = WindWsx(Subfunc, ValArray)
End Function

Function WPS(PRODUCTCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Dim ProductCode As String
    Dim index As String
  
    ProductCode = GetParaStrEx(PRODUCTCODE_)
    index = GetParaStrEx(IndexList_)
    Subfunc = 20
    
    ValArray(0) = GetParaStr(ProductCode)
    ValArray(1) = GetParaStr(index)
    ValArray(2) = Paramset
    WPS = WindWsx(Subfunc, ValArray)
End Function

Function WSS(WINDCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(2) As Variant
    Dim Subfunc As Long
    Dim WindCode As String
    Dim index As String

    WindCode = GetParaStrEx(WINDCODE_)
    index = GetParaStrEx(IndexList_)
    Subfunc = 4
    
    ValArray(0) = GetParaStr(WindCode)
    ValArray(1) = GetParaStr(index)
    ValArray(2) = Paramset
    WSS = WindWsx(Subfunc, ValArray)
End Function

Function BBQ(WINDCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(2) As Variant
    Dim Subfunc As Long
    Dim WindCode As String
    Dim index As String

    WindCode = GetParaStrEx(WINDCODE_)
    index = GetParaStrEx(IndexList_)
    Subfunc = 21
    
    ValArray(0) = GetParaStr(WindCode)
    ValArray(1) = GetParaStr(index)
    ValArray(2) = Paramset
    BBQ = WindWsx(Subfunc, ValArray)
End Function

Function WSR(WINDCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Subfunc = 6
    
    ValArray(0) = GetParaStr(WINDCODE_)
    ValArray(1) = GetParaStr(IndexList_)
    ValArray(2) = Paramset
    WSR = WindWsx(Subfunc, ValArray)
End Function

Function WSV(WINDCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Subfunc = 7
    
    ValArray(0) = GetParaStr(WINDCODE_)
    ValArray(1) = GetParaStr(IndexList_)
    ValArray(2) = Paramset
    WSV = WindWsx(Subfunc, ValArray)
End Function

Function WEQS(WINDCODE_ As Variant, Optional IndexList_ As Variant = False, Optional Paramset As Variant = True, Optional RowCol As Variant = "")
    Dim ValArray(4) As Variant
    Dim Subfunc As Long
    Subfunc = 8
    
    ValArray(0) = GetParaStrEx(WINDCODE_)
    ValArray(1) = IndexList_
    ValArray(2) = RowCol
    ValArray(3) = Paramset
    WEQS = WindWsx(Subfunc, ValArray)
End Function

Function TDays(StartDate_ As Variant, EndDate_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Subfunc = 9
    
    ValArray(0) = GetParaStrEx(StartDate_)
    If ValArray(0) = "" Then
        ValArray(0) = GetValidDate_New(StartDate_)
        If TypeName(ValArray(0)) <> "String" Then
            ValArray(0) = CStr(ValArray(0))
        End If
    End If
    
    ValArray(1) = GetParaStrEx(EndDate_)
    If ValArray(1) = "" Then
        ValArray(1) = GetValidDate_New(EndDate_)
        If TypeName(ValArray(1)) <> "String" Then
            ValArray(1) = CStr(ValArray(1))
        End If
    End If
    
    Dim hasValue As Boolean
    hasValue = False
    
    Dim index As Integer
    index = 0
    For Each param In Paramset
        hasValue = True
        If TypeName(param) <> "String" Then
            param = CStr(param)
            Paramset(index) = param
            index = index + 1
        End If
    Next
    
    If hasValue = True Then
        ValArray(2) = Paramset
    Else
        Dim tmpArray(0) As Variant
        ValArray(2) = tmpArray
    End If
   
    TDays = WindWsx(Subfunc, ValArray)
End Function

Function TDaysOffset(RefDate_ As Variant, ParamArray Paramset())
    Dim ValArray(2) As Variant
    Dim Subfunc As Long
    Subfunc = 10
    
    ValArray(0) = GetParaStrEx(RefDate_)
    If ValArray(0) = "" Then
        ValArray(0) = GetValidDate_New(RefDate_)
        If TypeName(ValArray(0)) <> "String" Then
            ValArray(0) = CStr(ValArray(0))
        End If
    End If
    
    Dim hasValue As Boolean
    hasValue = False
    
    Dim index As Integer
    index = 0
    For Each param In Paramset
        hasValue = True
        If TypeName(param) <> "String" Then
            param = CStr(param)
            Paramset(index) = param
            index = index + 1
        End If
    Next
    
    If hasValue Then
        ValArray(1) = Paramset
    Else
        Dim tmpArray(0) As Variant
        ValArray(1) = tmpArray
    End If
    
    TDaysOffset = WindWsx(Subfunc, ValArray)
End Function

Function TDaysCount(StartDate_ As Variant, EndDate_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Subfunc = 11
    
    ValArray(0) = GetParaStrEx(StartDate_)
    If ValArray(0) = "" Then
        ValArray(0) = GetValidDate_New(StartDate_)
        If TypeName(ValArray(0)) <> "String" Then
            ValArray(0) = CStr(ValArray(0))
        End If
    End If
    
    ValArray(1) = GetParaStrEx(EndDate_)
    If ValArray(1) = "" Then
        ValArray(1) = GetValidDate_New(EndDate_)
        If TypeName(ValArray(1)) <> "String" Then
            ValArray(1) = CStr(ValArray(1))
        End If
    End If
    
    Dim hasValue As Boolean
    hasValue = False
    
    Dim index As Integer
    index = 0
    For Each param In Paramset
        hasValue = True
        If TypeName(param) <> "String" Then
            param = CStr(param)
            Paramset(index) = param
            index = index + 1
        End If
    Next
    
    If hasValue Then
        ValArray(2) = Paramset
    Else
        Dim tmpArray(0) As Variant
        ValArray(2) = tmpArray
    End If
    
    TDaysCount = WindWsx(Subfunc, ValArray)
End Function

Function PePbBands(WINDCODE_ As Variant, ParamArray Paramset())
    Dim ValArray(2) As Variant
    Dim Subfunc As Long
    Subfunc = 12
    
    ValArray(0) = GetParaStr(WINDCODE_)
    ValArray(1) = Paramset
    PePbBands = WindWsx(Subfunc, ValArray)
End Function
Function PePbBandsGlobal(WINDCODE_ As Variant, ParamArray Paramset())
    Dim ValArray(2) As Variant
    Dim Subfunc As Long
    Subfunc = 18
    
    ValArray(0) = GetParaStr(WINDCODE_)
    ValArray(1) = Paramset
    PePbBandsGlobal = WindWsx(Subfunc, ValArray)
End Function

Function WSET(VIEWNAME_ As Variant, ParamArray Paramset())
    Dim ValArray(2) As Variant
    Dim Subfunc As Long
    Subfunc = 15
    
    ValArray(0) = GetParaStr(VIEWNAME_)
    ValArray(1) = Paramset
    WSET = WindWsx(Subfunc, ValArray)
End Function

Function ConcatenateRange(ByVal cellRange As Range, Optional ByVal Separator As String)
    FirstCell = True
    myRangeValues = cellRange.Value
    For Each theCell In myRangeValues
        If FirstCell Then
            ConcatenateRange = theCell
        Else
            ConcatenateRange = ConcatenateRange & Separator & theCell
        End If
        FirstCell = False
    Next
End Function

Function WPF(ProductName_ As Variant, VIEWNAME_ As Variant, ParamArray Paramset())
    Dim ValArray(3) As Variant
    Dim Subfunc As Long
    Subfunc = 16
    
    ValArray(0) = GetParaStr(ProductName_)
    ValArray(1) = GetParaStr(VIEWNAME_)
    ValArray(2) = Paramset
    WPF = WindWsx(Subfunc, ValArray)
End Function

Function WChart(ChartType_ As String, DataSource_ As Range, Optional SignalSource_ As Range, Optional WindowSize_ As Integer = 50)
    WChart = "Wind|fffd||fffd||476|"
    
    Set FormulaSheet = Application.ThisCell.Worksheet
    Row = Application.ThisCell.Row
    col = Application.ThisCell.Column
       
    chart_num = chart_num + 1
    
    Set wchartExeObj = New CWchartExec
    Call wchartExeObj.setPara(chart_num, FormulaSheet, Row, col, ChartType_, DataSource_, SignalSource_, WindowSize_)
    Set wchartExeObj.sht = ActiveSheet
End Function


'|221||1f0||fffd||1b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,TD
Function TD(Optional DEALDATE_ As Variant) As Variant
  TD = TD_(GetValidDate(DEALDATE_))
End Function

'''|fffd||fffd||1b1|'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'|5a4||22f||fffd||fffd||fffd|,S_Info_Name
Function S_Info_Name(WINDCODE_ As Variant) As Variant
  S_Info_Name = WindFunc("S_Info_Name", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||5f4||fffd||fffd||fffd|,S_Info_Code
Function S_Info_Code(WINDCODE_ As Variant) As Variant
  S_Info_Code = WindFunc("S_Info_Code", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'Wind|fffd||fffd||fffd||fffd|,S_Info_WindCode
Function S_Info_WindCode(WINDCODE_ As Variant) As Variant
  S_Info_WindCode = WindFunc("S_Info_WindCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd|,S_Info_CompName
Function S_Info_CompName(WINDCODE_ As Variant) As Variant
  S_Info_CompName = WindFunc("S_Info_CompName", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd|s_info_industry
Function s_info_industry(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1, Optional Standard_ As Integer = 1) As Variant
  s_info_industry = WindFunc("s_info_industry", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, Standard_, Null, Null, Null, Null)
End Function

'|5a4||fffd||fffd||fffd||fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,S_Info_Industry_CSRC
Function S_Info_Industry_CSRC(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Info_Industry_CSRC = WindFunc("S_Info_Industry_CSRC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, Null, Null, Null, Null)
End Function

'|5a4||fffd||fffd||fffd||fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,S_Info_Industry_CSRCCode
Function S_Info_Industry_CSRCCode(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Info_Industry_CSRCCode = WindFunc("S_Info_Industry_CSRCCode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,S_Info_Industry_GICS
Function S_Info_Industry_GICS(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Info_Industry_GICS = WindFunc("S_Info_Industry_GICS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,S_Info_Industry_GICSCode
Function S_Info_Industry_GICSCode(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Info_Industry_GICSCode = WindFunc("S_Info_Industry_GICSCode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5|-|4e2||fffd||fffd|,S_Info_Industry_GICSEng
Function S_Info_Industry_GICSEng(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Info_Industry_GICSEng = WindFunc("S_Info_Industry_GICSEng", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_ + 4, Null, Null, Null, Null)
End Function

'|531||fffd||fffd||fffd||fffd||fffd||fffd|,S_Info_Employee
Function S_Info_Employee(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Info_Employee = WindFunc("S_Info_Employee", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd||5a4||22f||4bb||fffd||fffd|,S_Info_RelatedSecurity
Function S_Info_RelatedSecurity(WINDCODE_ As Variant) As Variant
  S_Info_RelatedSecurity = WindFunc("S_Info_RelatedSecurity", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||739||271||fffd|,S_Share_Total
Function S_Share_Total(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_Total = WindFunc("S_Share_Total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_Total) <> vbString Then
        S_Share_Total = S_Share_Total / UnitVal_
    End If
End Function

'|fffd||fffd||368|A|fffd||fffd|,S_Share_LiqA
Function S_Share_LiqA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_LiqA = WindFunc("S_Share_LiqA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_LiqA) <> vbString Then
        S_Share_LiqA = S_Share_LiqA / UnitVal_
    End If
End Function

'|fffd||fffd||368|B|fffd||fffd|,S_Share_LiqB
Function S_Share_LiqB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_LiqB = WindFunc("S_Share_LiqB", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_LiqB) <> vbString Then
        S_Share_LiqB = S_Share_LiqB / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||439||fffd|,S_Share_H
Function S_Share_H(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_H = WindFunc("S_Share_H", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_H) <> vbString Then
        S_Share_H = S_Share_H / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||3fc||fffd|,S_Share_TotalOTC
Function S_Share_TotalOTC(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_TotalOTC = WindFunc("S_Share_TotalOTC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_TotalOTC) <> vbString Then
        S_Share_TotalOTC = S_Share_TotalOTC / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd|,S_Share_Oversea
Function S_Share_Oversea(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_Oversea = WindFunc("S_Share_Oversea", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_Oversea) <> vbString Then
        S_Share_Oversea = S_Share_Oversea / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|A|fffd||fffd|,S_Share_RestrictedA
Function S_Share_RestrictedA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_RestrictedA = WindFunc("S_Share_RestrictedA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_RestrictedA) <> vbString Then
        S_Share_RestrictedA = S_Share_RestrictedA / UnitVal_
    End If
End Function

'A|fffd||27a||3fc||fffd|,S_Share_TotalA
Function S_Share_TotalA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_TotalA = WindFunc("S_Share_TotalA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_TotalA) <> vbString Then
        S_Share_TotalA = S_Share_TotalA / UnitVal_
    End If
End Function

'B|fffd||27a||3fc||fffd|,S_Share_TotalB
Function S_Share_TotalB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_TotalB = WindFunc("S_Share_TotalB", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_TotalB) <> vbString Then
        S_Share_TotalB = S_Share_TotalB / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|A|fffd||fffd|,S_Share_OTCA
Function S_Share_OTCA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_OTCA = WindFunc("S_Share_OTCA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_OTCA) <> vbString Then
        S_Share_OTCA = S_Share_OTCA / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|B|fffd||fffd|,S_Share_OTCB
Function S_Share_OTCB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_OTCB = WindFunc("S_Share_OTCB", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_OTCB) <> vbString Then
        S_Share_OTCB = S_Share_OTCB / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||27a||3fc||fffd|,S_Share_TotalTradable
Function S_Share_TotalTradable(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_TotalTradable = WindFunc("S_Share_TotalTradable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_TotalTradable) <> vbString Then
        S_Share_TotalTradable = S_Share_TotalTradable / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||27a||3fc||fffd|,S_Share_TotalRestricted
Function S_Share_TotalRestricted(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_TotalRestricted = WindFunc("S_Share_TotalRestricted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_TotalRestricted) <> vbString Then
        S_Share_TotalRestricted = S_Share_TotalRestricted / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|A|fffd||fffd|(|fffd||fffd||3f8|),S_Share_RestrictedA_Detailed
Function S_Share_RestrictedA_Detailed(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Select Case TYPE_
        Case 1
            S_Share_RestrictedA_Detailed = WindFunc("s_share_rtd_state", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 2
            S_Share_RestrictedA_Detailed = WindFunc("s_share_rtd_statejur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 3
            S_Share_RestrictedA_Detailed = WindFunc("s_share_rtd_domesjur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 4
            S_Share_RestrictedA_Detailed = WindFunc("s_share_rtd_inst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 5
            S_Share_RestrictedA_Detailed = WindFunc("s_share_rtd_domesnp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 6
            S_Share_RestrictedA_Detailed = WindFunc("s_share_rtd_frgnjur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 7
            S_Share_RestrictedA_Detailed = WindFunc("s_share_rtd_frgnnp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    End Select
End Function

'|fffd||fffd||fffd||fffd|B|fffd||fffd|,S_Share_RestrictedB
Function S_Share_RestrictedB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_RestrictedB = WindFunc("S_Share_RestrictedB", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_RestrictedB) <> vbString Then
        S_Share_RestrictedB = S_Share_RestrictedB / UnitVal_
    End If
End Function

'|fffd||278||fffd||1f0||fffd||fffd||fffd||fffd||368||fffd||fffd|,S_Share_NonTradable
Function S_Share_NonTradable(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Share_NonTradable = WindFunc("S_Share_NonTradable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Share_NonTradable) <> vbString Then
        S_Share_NonTradable = S_Share_NonTradable / UnitVal_
    End If
End Function

'|fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|,S_Holder_Name
Function S_Holder_Name(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Holder_Name = WindFunc("S_Holder_Name", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,S_Holder_Quantity
Function S_Holder_Quantity(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Holder_Quantity = WindFunc("S_Holder_Quantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Holder_Quantity) <> vbString Then
        S_Holder_Quantity = S_Holder_Quantity / UnitVal_
    End If
End Function

'|fffd||fffd||276||fffd||fffd||5b9||271||fffd||fffd||fffd|,S_Holder_Pct
Function S_Holder_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Holder_Pct = WindFunc("S_Holder_Pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0||2ae||fffd||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,S_Holder_Top10Quantity
Function S_Holder_Top10Quantity(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Holder_Top10Quantity = WindFunc("S_Holder_Top10Quantity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Holder_Top10Quantity) <> vbString Then
        S_Holder_Top10Quantity = S_Holder_Top10Quantity / UnitVal_
    End If
End Function

'|1f0||2ae||fffd||fffd||276||fffd||fffd||5b9||271||fffd||fffd||fffd||fffd||3fc||fffd|,S_Holder_Top10Pct
Function S_Holder_Top10Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Holder_Top10Pct = WindFunc("S_Holder_Top10Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||276||fffd||fffd||fffd||fffd||fffd|,S_Holder_LiqName
Function S_Holder_LiqName(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Holder_LiqName = WindFunc("S_Holder_LiqName", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,S_Holder_LiqQuantity
Function S_Holder_LiqQuantity(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Holder_LiqQuantity = WindFunc("S_Holder_LiqQuantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Holder_LiqQuantity) <> vbString Then
        S_Holder_LiqQuantity = S_Holder_LiqQuantity / UnitVal_
    End If
End Function

'|1f0||2ae||fffd||fffd||fffd||fffd||368||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,S_Holder_Top10LiqQuantity
Function S_Holder_Top10LiqQuantity(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Holder_Top10LiqQuantity = WindFunc("S_Holder_Top10LiqQuantity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Holder_Top10LiqQuantity) <> vbString Then
        S_Holder_Top10LiqQuantity = S_Holder_Top10LiqQuantity / UnitVal_
    End If
End Function

'|fffd||276||fffd||fffd||fffd||fffd||fffd|,S_Holder_Num
Function S_Holder_Num(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Holder_Num = WindFunc("S_Holder_Num", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_Holder_Num) <> vbString Then
        S_Holder_Num = S_Holder_Num / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||33c||fffd|,S_DQ_Close
Function S_DQ_Close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_DQ_Close = WindFunc("S_DQ_Close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,S_DQ_Open
Function S_DQ_Open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_DQ_Open = WindFunc("S_DQ_Open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|,S_DQ_High
Function S_DQ_High(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_DQ_High = WindFunc("S_DQ_High", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|,S_DQ_Low
Function S_DQ_Low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_DQ_Low = WindFunc("S_DQ_Low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0||fffd||fffd||fffd||33c||fffd|,S_DQ_PreClose
Function S_DQ_PreClose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_DQ_PreClose = WindFunc("S_DQ_PreClose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,S_DQ_AvgPrice
Function S_DQ_AvgPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_DQ_AvgPrice = WindFunc("S_DQ_AvgPrice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_DQ_AvgPrice) <> vbString Then
        S_DQ_AvgPrice = S_DQ_AvgPrice / UnitVal_
    End If
End Function

'|fffd||1f5||fffd|,S_DQ_Change
Function S_DQ_Change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_DQ_Change = WindFunc("S_DQ_Change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_DQ_Change) <> vbString Then
        S_DQ_Change = S_DQ_Change / UnitVal_
    End If
End Function

'|fffd||1f5||fffd||fffd||fffd|,S_DQ_PctChange
Function S_DQ_PctChange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_DQ_PctChange = WindFunc("S_DQ_PctChange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|,S_DQ_Volume
Function S_DQ_Volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_DQ_Volume = WindFunc("S_DQ_Volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_DQ_Volume) <> vbString Then
        S_DQ_Volume = S_DQ_Volume / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|,S_DQ_Amount
Function S_DQ_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_DQ_Amount = WindFunc("S_DQ_Amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_DQ_Amount) <> vbString Then
        S_DQ_Amount = S_DQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,S_DQ_Turn
Function S_DQ_Turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_DQ_Turn = WindFunc("S_DQ_Turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,S_PQ_Close
Function S_PQ_Close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_PQ_Close = WindFunc("S_PQ_Close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|,S_PQ_Open
Function S_PQ_Open(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_PQ_Open = WindFunc("S_PQ_Open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,S_PQ_High
Function S_PQ_High(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_PQ_High = WindFunc("S_PQ_High", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,S_PQ_Low
Function S_PQ_Low(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_PQ_Low = WindFunc("S_PQ_Low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,S_PQ_PreClose
Function S_PQ_PreClose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_PQ_PreClose = WindFunc("S_PQ_PreClose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,S_PQ_AvgPrice
Function S_PQ_AvgPrice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_PQ_AvgPrice = WindFunc("S_PQ_AvgPrice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(S_PQ_AvgPrice) <> vbString Then
        S_PQ_AvgPrice = S_PQ_AvgPrice / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,S_PQ_Change
Function S_PQ_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_PQ_Change = WindFunc("S_PQ_Change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(S_PQ_Change) <> vbString Then
        S_PQ_Change = S_PQ_Change / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,S_PQ_PctChange
Function S_PQ_PctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  S_PQ_PctChange = WindFunc("S_PQ_PctChange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,S_PQ_Volume
Function S_PQ_Volume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_PQ_Volume = WindFunc("S_PQ_Volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(S_PQ_Volume) <> vbString Then
        S_PQ_Volume = S_PQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,S_PQ_Amount
Function S_PQ_Amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_PQ_Amount = WindFunc("S_PQ_Amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(S_PQ_Amount) <> vbString Then
        S_PQ_Amount = S_PQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,S_PQ_AvgVolume
Function S_PQ_AvgVolume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_PQ_AvgVolume = WindFunc("S_PQ_AvgVolume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(S_PQ_AvgVolume) <> vbString Then
        S_PQ_AvgVolume = S_PQ_AvgVolume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,S_PQ_AvgAmount
Function S_PQ_AvgAmount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_PQ_AvgAmount = WindFunc("S_PQ_AvgAmount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(S_PQ_AvgAmount) <> vbString Then
        S_PQ_AvgAmount = S_PQ_AvgAmount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4efb||fffd||fffd||fffd||fffd|,S_PQ_Turn
Function S_PQ_Turn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  S_PQ_Turn = WindFunc("S_PQ_Turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_PQ_AvgTurn
Function S_PQ_AvgTurn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  S_PQ_AvgTurn = WindFunc("S_PQ_AvgTurn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,S_PQ_RelPctChange
Function S_PQ_RelPctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_PQ_RelPctChange = WindFunc("S_PQ_RelPctChange", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||4f7b||fffd||fffd||fffd||fffd||fffd||fffd|,S_PQ_TradeDays
Function S_PQ_TradeDays(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  S_PQ_TradeDays = WindFunc("S_PQ_TradeDays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||4ef||fffd||fffd|(PE),S_Val_PE
Function S_Val_PE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Dim ItemStr As Integer
    
    Select Case TYPE_
        Case 1
                ItemStr = 10
        Case 2
                ItemStr = 9
        Case 3
                ItemStr = 11
        Case 4
                ItemStr = 2
        Case 5
                ItemStr = 7
        Case 6
                ItemStr = 3
        Case 7
                ItemStr = 4
        Case 8
                ItemStr = 5
        Case 9
                ItemStr = 8
    End Select
  S_Val_PE = WindFunc("S_Val_PE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), ItemStr, Null, Null, Null)
End Function

'|fffd||fffd||4ef||fffd||fffd|(PE,TTM),S_Val_PE_TTM
Function S_Val_PE_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Val_PE_TTM = WindFunc("S_Val_PE_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|PCF(|fffd||fffd||4ea||fffd||5bd||fffd||fffd||fffd|,TTM),S_Val_PCF_OCFTTM
Function S_Val_PCF_OCFTTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Val_PCF_OCFTTM = WindFunc("S_Val_PCF_OCFTTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|PCF(|fffd||5bd||fffd||fffd||fffd||fffd||fffd|,TTM),S_Val_PCF_NCFTTM
Function S_Val_PCF_NCFTTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Val_PCF_NCFTTM = WindFunc("S_Val_PCF_NCFTTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PS,TTM),S_Val_PS_TTM
Function S_Val_PS_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Val_PS_TTM = WindFunc("S_Val_PS_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||4ef||fffd||fffd|(PE),S_Val_EstPE
Function S_Val_EstPE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional RPTYEAR_ As Integer) As Variant
  S_Val_EstPE = WindFunc("S_Val_EstPE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), GetYear(RPTYEAR_), Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||4ef||fffd||fffd|(PE,|fffd||fffd||fffd||fffd||524||fffd||fffd|),S_Val_EstPE_New
Function S_Val_EstPE_New(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_Val_EstPE_New = WindFunc("S_Val_EstPE_New", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||4ef||fffd||fffd|(PE,|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),S_Val_EstPE_FTM
Function S_Val_EstPE_FTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Val_EstPE_FTM = WindFunc("S_Val_EstPE_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||2b7|PEG,S_Val_PEG
Function S_Val_PEG(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Val_PEG = WindFunc("S_Val_PEG", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|524||fffd||fffd|PEG,S_Val_EstPEG
Function S_Val_EstPEG(WINDCODE_ As Variant, Optional RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Val_EstPEG = WindFunc("S_Val_EstPEG", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetYear(RPTYEAR_), GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|fffd||43e||fffd||fffd||fffd|(PB,|fffd||fffd||fffd||fffd|),S_Val_PB_New
Function S_Val_PB_New(WINDCODE_ As Variant) As Variant
  S_Val_PB_New = WindFunc("S_Val_PB_New", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF,|fffd||fffd||4ea||fffd||5bd||fffd||fffd||fffd|),S_Val_PCF_OCF
Function S_Val_PCF_OCF(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Val_PCF_OCF = WindFunc("S_Val_PCF_OCF", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF,|fffd||5bd||fffd||fffd||fffd||fffd||fffd|),S_Val_PCF_NCF
Function S_Val_PCF_NCF(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Val_PCF_NCF = WindFunc("S_Val_PCF_NCF", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5b5|(|5a4||fffd||fffd||fffd||fffd||3de8|),S_Val_MV2
Function S_Val_MV2(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_MV2 = WindFunc("S_Val_MV2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_MV2) <> vbString Then
        S_Val_MV2 = S_Val_MV2 / UnitVal_
    End If
End Function

'A|fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||fffd||6f9||fffd|),S_Val_AShrMarketValue2
Function S_Val_AShrMarketValue2(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_AShrMarketValue2 = WindFunc("S_Val_AShrMarketValue2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_AShrMarketValue2) <> vbString Then
        S_Val_AShrMarketValue2 = S_Val_AShrMarketValue2 / UnitVal_
    End If
End Function

'B|fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||fffd||6f9||fffd|,|fffd||fffd||fffd||5f1||fffd||fffd||fffd|),S_Val_BShrMarketValue4
Function S_Val_BShrMarketValue4(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_BShrMarketValue4 = WindFunc("S_Val_BShrMarketValue4", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_BShrMarketValue4) <> vbString Then
        S_Val_BShrMarketValue4 = S_Val_BShrMarketValue4 / UnitVal_
    End If
End Function

'B|fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||fffd||6f9||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd||fffd|),S_Val_BShrMarketValue3
Function S_Val_BShrMarketValue3(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_BShrMarketValue3 = WindFunc("S_Val_BShrMarketValue3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_BShrMarketValue3) <> vbString Then
        S_Val_BShrMarketValue3 = S_Val_BShrMarketValue3 / UnitVal_
    End If
End Function

'|fffd||fffd||228||fffd||fffd||5b5|,S_Val_EV
Function S_Val_EV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_EV = WindFunc("S_Val_EV", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_EV) <> vbString Then
        S_Val_EV = S_Val_EV / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|)(EV1),S_Val_EV1
Function S_Val_EV1(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_EV1 = WindFunc("S_Val_EV1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_EV1) <> vbString Then
        S_Val_EV1 = S_Val_EV1 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||5b5|(|fffd||7b3||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|)(EV2),S_Val_EV2
Function S_Val_EV2(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_EV2 = WindFunc("S_Val_EV2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_EV2) <> vbString Then
        S_Val_EV2 = S_Val_EV2 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||fffd|(EV2/EBITDA),S_Val_EVtoEBITDA
Function S_Val_EVtoEBITDA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Val_EVtoEBITDA = WindFunc("S_Val_EVtoEBITDA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||43e||fffd||fffd||fffd|(PB),S_Val_PB
Function S_Val_PB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Dim ItemStr As Integer
    Select Case TYPE_
        Case 1
                ItemStr = 10
        Case 2
                ItemStr = 9
        Case 3
                ItemStr = 11
        Case 4
                ItemStr = 2
        Case 5
                ItemStr = 3
        Case 6
                ItemStr = 4
        Case 7
                ItemStr = 5
        Case 8
                ItemStr = 8
    End Select
  
  S_Val_PB = WindFunc("S_Val_PB", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), ItemStr, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF),S_Val_PCF
Function S_Val_PCF(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Dim ItemStr As Integer
    
    Select Case TYPE_
        Case 1
                ItemStr = 10
        Case 2
                ItemStr = 9
        Case 3
                ItemStr = 11
        Case 4
                ItemStr = 2
        Case 5
                ItemStr = 7
        Case 6
                ItemStr = 3
        Case 7
                ItemStr = 4
        Case 8
                ItemStr = 5
        Case 9
                ItemStr = 8
    End Select
  S_Val_PCF = WindFunc("S_Val_PCF", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), ItemStr, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PS),S_Val_PS
Function S_Val_PS(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Dim ItemStr As Integer
    Select Case TYPE_
        Case 1
                ItemStr = 10
        Case 2
                ItemStr = 9
        Case 3
                ItemStr = 11
        Case 4
                ItemStr = 2
        Case 5
                ItemStr = 7
        Case 6
                ItemStr = 3
        Case 7
                ItemStr = 4
        Case 8
                ItemStr = 5
        Case 9
                ItemStr = 8
    End Select
  
  S_Val_PS = WindFunc("S_Val_PS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), ItemStr, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5b5|,S_Val_MV
Function S_Val_MV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_MV = WindFunc("S_Val_MV", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_MV) <> vbString Then
        S_Val_MV = S_Val_MV / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5b5|3,S_Val_MV3
Function S_Val_MV3(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Val_MV3 = WindFunc("S_Val_MV3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||368|A|fffd||fffd||fffd||fffd||5b5|,S_Val_AShrMarketValue
Function S_Val_AShrMarketValue(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_AShrMarketValue = WindFunc("S_Val_AShrMarketValue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_AShrMarketValue) <> vbString Then
        S_Val_AShrMarketValue = S_Val_AShrMarketValue / UnitVal_
    End If
End Function

'|fffd||fffd||368|B|fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||fffd|),S_Val_BShrMarketValue
Function S_Val_BShrMarketValue(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_BShrMarketValue = WindFunc("S_Val_BShrMarketValue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_BShrMarketValue) <> vbString Then
        S_Val_BShrMarketValue = S_Val_BShrMarketValue / UnitVal_
    End If
End Function

'|fffd||fffd||368|B|fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||5f1||fffd||fffd||fffd|),S_Val_BShrMarketValue2
Function S_Val_BShrMarketValue2(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Val_BShrMarketValue2 = WindFunc("S_Val_BShrMarketValue2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_Val_BShrMarketValue2) <> vbString Then
        S_Val_BShrMarketValue2 = S_Val_BShrMarketValue2 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd|(|fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|),S_Val_DividendYield
Function S_Val_DividendYield(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional RPTYEAR_ As Integer) As Variant
  S_Val_DividendYield = WindFunc("S_Val_DividendYield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), GetYear(RPTYEAR_), Null, Null, Null)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Risk_AvgReturn
Function S_Risk_AvgReturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Select Case TYPE_
        Case 1
            S_Risk_AvgReturn = WindFunc("s_risk_avgreturnr100", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 2
            S_Risk_AvgReturn = WindFunc("s_risk_avgreturnr24", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 3
            S_Risk_AvgReturn = WindFunc("s_risk_avgreturnr60", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    End Select
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|,S_Risk_Stdev
Function S_Risk_Stdev(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Select Case TYPE_
        Case 1
            S_Risk_Stdev = WindFunc("S_Risk_Stdevr100", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 2
            S_Risk_Stdev = WindFunc("s_risk_stdevr24", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 3
            S_Risk_Stdev = WindFunc("s_risk_stdevr60", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    End Select
End Function

'Beta|5b5|,S_Risk_Beta
Function S_Risk_Beta(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Select Case TYPE_
        Case 1
            S_Risk_Beta = WindFunc("s_risk_betar100", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 2
            S_Risk_Beta = WindFunc("s_risk_betar24", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 3
            S_Risk_Beta = WindFunc("s_risk_betar60", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    End Select
End Function

'Beta|5b5|(|fffd||536||fffd||fffd||fffd|),S_Risk_Beta_Custom
Function S_Risk_Beta_Custom(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, PERIOD_ As Integer, CalcType_ As Integer, INDEX_ As String) As Variant
  S_Risk_Beta_Custom = WindFunc("S_Risk_Beta", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), PERIOD_, CalcType_, INDEX_)
End Function

'Treynor(|fffd||fffd||fffd||fffd|),s_risk_treynor
Function s_risk_treynor(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  s_risk_treynor = WindFunc("s_risk_treynor", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'Jensen(|fffd||fffd||fffd||fffd|),s_risk_jensen
Function s_risk_jensen(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  s_risk_jensen = WindFunc("s_risk_jensen", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'Jensen(|fffd||aeef|)(|fffd||fffd||fffd||fffd|),s_risk_jenseny
Function s_risk_jenseny(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  s_risk_jenseny = WindFunc("s_risk_jenseny", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'07|fffd||fffd||fffd||fffd||71a31||fffd||fffd||fffd||fffd||fffd||fffd|,S_Stm07_IS
Function S_Stm07_IS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  On Error Resume Next
  S_Stm07_IS = WindFunc("S_Stm07_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_Stm07_IS) <> vbString Then
        S_Stm07_IS = S_Stm07_IS / UnitVal_
    End If
End Function

'07|fffd||fffd||fffd||fffd||71a31||fffd||fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|,S_Stm07_BS
Function S_Stm07_BS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  On Error Resume Next
  S_Stm07_BS = WindFunc("S_Stm07_BS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_Stm07_BS) <> vbString Then
        S_Stm07_BS = S_Stm07_BS / UnitVal_
    End If
End Function

'07|fffd||fffd||fffd||fffd||71a31||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Stm07_CS
Function S_Stm07_CS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  On Error Resume Next
  S_Stm07_CS = WindFunc("S_Stm07_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_Stm07_CS) <> vbString Then
        S_Stm07_CS = S_Stm07_CS / UnitVal_
    End If
End Function

'07|fffd||fffd||fffd||fffd||71a31||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QStm07_IS
Function S_QStm07_IS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_QStm07_IS = WindFunc("S_QStm07_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_QStm07_IS) <> vbString Then
        S_QStm07_IS = S_QStm07_IS / UnitVal_
    End If
End Function

'07|fffd||fffd||fffd||fffd||71a31||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QStm07_CS
Function S_QStm07_CS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_QStm07_CS = WindFunc("S_QStm07_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_QStm07_CS) <> vbString Then
        S_QStm07_CS = S_QStm07_CS / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|52d||2bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd|,S_Stm_IS
Function S_Stm_IS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Stm_IS = WindFunc("S_Stm_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_Stm_IS) <> vbString Then
        S_Stm_IS = S_Stm_IS / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|52d||2bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|,S_Stm_BS
Function S_Stm_BS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Stm_BS = WindFunc("S_Stm_BS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_Stm_BS) <> vbString Then
        S_Stm_BS = S_Stm_BS / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|52d||2bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Stm_CS
Function S_Stm_CS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Stm_CS = WindFunc("S_Stm_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_Stm_CS) <> vbString Then
        S_Stm_CS = S_Stm_CS / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd|,S_QStm_IS
Function S_QStm_IS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_QStm_IS = WindFunc("S_QStm_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_QStm_IS) <> vbString Then
        S_QStm_IS = S_QStm_IS / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QStm_CS
Function S_QStm_CS(WINDCODE_ As Variant, ITEMSCODE_ As String, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_QStm_CS = WindFunc("S_QStm_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_QStm_CS) <> vbString Then
        S_QStm_CS = S_QStm_CS / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||fffd||fffd||fffd|,S_FA_EPS_basic
Function S_FA_EPS_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EPS_basic = WindFunc("S_FA_EPS_basic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|3e1||fffd||fffd|,S_FA_EPS_diluted
Function S_FA_EPS_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EPS_diluted = WindFunc("S_FA_EPS_diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||fffd||129||fffd||271||fffd||32f||fffd||fffd|,S_FA_EPS_diluted2
Function S_FA_EPS_diluted2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EPS_diluted2 = WindFunc("S_FA_EPS_diluted2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||fffd||fffd||b9||271||fffd||32f||fffd||fffd|,S_FA_EPS_adjust
Function S_FA_EPS_adjust(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EPS_adjust = WindFunc("S_FA_EPS_adjust", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS(TTM),S_FA_EPS_TTM
Function S_FA_EPS_TTM(WINDCODE_ As Variant) As Variant
  S_FA_EPS_TTM = WindFunc("S_FA_EPS_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|BPS,S_FA_BPS
Function S_FA_BPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_BPS = WindFunc("S_FA_BPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|BPS-|fffd||fffd||fffd||b9||271||fffd||32f||fffd||fffd|,S_FA_BPS_adjust
Function S_FA_BPS_adjust(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_BPS_adjust = WindFunc("S_FA_BPS_adjust", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|BPS(|fffd||fffd||fffd||b9||fffd||fffd||fffd|),S_FA_BPS_new
Function S_FA_BPS_new(WINDCODE_ As Variant) As Variant
  S_FA_BPS_new = WindFunc("S_FA_BPS_new", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_OCFPS
Function S_FA_OCFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OCFPS = WindFunc("S_FA_OCFPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_OCFPS_TTM
Function S_FA_OCFPS_TTM(WINDCODE_ As Variant) As Variant
  S_FA_OCFPS_TTM = WindFunc("S_FA_OCFPS_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_GRPS
Function S_FA_GRPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_GRPS = WindFunc("S_FA_GRPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,S_FA_ORPS
Function S_FA_ORPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ORPS = WindFunc("S_FA_ORPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(TTM),S_FA_ORPS_TTM
Function S_FA_ORPS_TTM(WINDCODE_ As Variant) As Variant
  S_FA_ORPS_TTM = WindFunc("S_FA_ORPS_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd|,S_FA_SurplusCapitalPS
Function S_FA_SurplusCapitalPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_SurplusCapitalPS = WindFunc("S_FA_SurplusCapitalPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||4ef||fffd||e6b||fffd||fffd|,S_FA_surplusreservePS
Function S_FA_surplusreservePS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_surplusreservePS = WindFunc("S_FA_surplusreservePS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||3b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_UndistributedPS
Function S_FA_UndistributedPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_UndistributedPS = WindFunc("S_FA_UndistributedPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_RetainedPS
Function S_FA_RetainedPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_RetainedPS = WindFunc("S_FA_RetainedPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_CFPS
Function S_FA_CFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_CFPS = WindFunc("S_FA_CFPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_CFPS_TTM
Function S_FA_CFPS_TTM(WINDCODE_ As Variant) As Variant
  S_FA_CFPS_TTM = WindFunc("S_FA_CFPS_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|,S_FA_EBITPS
Function S_FA_EBITPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EBITPS = WindFunc("S_FA_EBITPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd|EBITDA,s_fa_ebitdaps
Function s_fa_ebitdaps(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_ebitdaps = WindFunc("s_fa_ebitdaps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'EBITDA/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_fa_ebitdatosales
Function s_fa_ebitdatosales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_ebitdatosales = WindFunc("s_fa_ebitdatosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'EBITDA/|fffd||fffd||3e2||56e||fffd||fffd|,s_fa_ebitdatointerestdebt
Function s_fa_ebitdatointerestdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_ebitdatointerestdebt = WindFunc("s_fa_ebitdatointerestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_fa_ocftosales
Function s_fa_ocftosales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_ocftosales = WindFunc("s_fa_ocftosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_fa_YOYCF
Function s_fa_YOYCF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_YOYCF = WindFunc("s_fa_YOYCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_fa_yoy_assets
Function s_fa_yoy_assets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_yoy_assets = WindFunc("s_fa_yoy_assets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_fa_yoy_equity
Function s_fa_yoy_equity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_yoy_equity = WindFunc("s_fa_yoy_equity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_fa_yoyassets
Function s_fa_yoyassets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_yoyassets = WindFunc("s_fa_yoyassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_fa_yoyequity
Function s_fa_yoyequity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_yoyequity = WindFunc("s_fa_yoyequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||738||fffd||56e|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_fa_yoydebt
Function s_fa_yoydebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_fa_yoydebt = WindFunc("s_fa_yoydebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_qfa_yoyocf
Function s_qfa_yoyocf(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_qfa_yoyocf = WindFunc("s_qfa_yoyocf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||5bd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_qfa_yoycf
Function s_qfa_yoycf(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_qfa_yoycf = WindFunc("s_qfa_yoycf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_qfa_yoyasset
Function s_qfa_yoyasset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_qfa_yoyasset = WindFunc("s_qfa_yoyasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_qfa_yoyequity
Function s_qfa_yoyequity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_qfa_yoyequity = WindFunc("s_qfa_yoyequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||738||fffd||56e|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_qfa_yoydebt
Function s_qfa_yoydebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_qfa_yoydebt = WindFunc("s_qfa_yoydebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|ff||fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_qfa_yoyeps
Function s_qfa_yoyeps(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_qfa_yoyeps = WindFunc("s_qfa_yoyeps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|3b4||fffd||fffd|3|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||be34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_est_cagr_sales
Function s_est_cagr_sales(WINDCODE_ As Variant) As Variant
  s_est_cagr_sales = WindFunc("s_est_cagr_sales", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|3b4||fffd||fffd|3|fffd||afbb||fffd||fffd||fffd||f8d3a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_est_cagr_np
Function s_est_cagr_np(WINDCODE_ As Variant) As Variant
  s_est_cagr_np = WindFunc("s_est_cagr_np", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|13f||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),s_rating_targetprice
Function s_rating_targetprice(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rating_targetprice = WindFunc("s_rating_targetprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
    If VarType(s_rating_targetprice) <> vbString Then
        s_rating_targetprice = s_rating_targetprice / UnitVal_
    End If
End Function
'|fffd||6fa||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),s_wrating_avg
Function s_wrating_avg(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_wrating_avg = WindFunc("s_wrating_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|13f||fffd||fffd||fffd|(MAX),s_rating_targetprice_max
Function s_rating_targetprice_max(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rating_targetprice_max = WindFunc("s_rating_targetprice_max", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
    If VarType(s_rating_targetprice_max) <> vbString Then
        s_rating_targetprice_max = s_rating_targetprice_max / UnitVal_
    End If
End Function

'|13f||fffd||fffd||fffd|(MIN),s_rating_targetprice_min
Function s_rating_targetprice_min(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rating_targetprice_min = WindFunc("s_rating_targetprice_min", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
    If VarType(s_rating_targetprice_min) <> vbString Then
        s_rating_targetprice_min = s_rating_targetprice_min / UnitVal_
    End If
End Function

'(|fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_mfd_inflow
Function s_mfd_inflow(WINDCODE_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_inflow = WindFunc("s_mfd_inflow", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
    If VarType(s_mfd_inflow) <> vbString Then
        s_mfd_inflow = s_mfd_inflow / UnitVal_
    End If
End Function

'(|fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_inflowrate
Function s_mfd_inflowrate(WINDCODE_ As Variant, DATE_ As Variant) As Variant
  s_mfd_inflowrate = WindFunc("s_mfd_inflowrate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
End Function

'(|fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_inflowvolume
Function s_mfd_inflowvolume(WINDCODE_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_inflowvolume = WindFunc("s_mfd_inflowvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
    If VarType(s_mfd_inflowvolume) <> vbString Then
        s_mfd_inflowvolume = s_mfd_inflowvolume / UnitVal_
    End If
End Function

'(|fffd||fffd|)|fffd||fffd||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_mfd_inflow_open
Function s_mfd_inflow_open(WINDCODE_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_inflow_open = WindFunc("s_mfd_inflow_open", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
    If VarType(s_mfd_inflow_open) <> vbString Then
        s_mfd_inflow_open = s_mfd_inflow_open / UnitVal_
    End If
End Function

'(|fffd||fffd|)|3b2||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_mfd_inflow_close
Function s_mfd_inflow_close(WINDCODE_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_inflow_close = WindFunc("s_mfd_inflow_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
    If VarType(s_mfd_inflow_close) <> vbString Then
        s_mfd_inflow_close = s_mfd_inflow_close / UnitVal_
    End If
End Function

'(|fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_periodmfd_inflow
Function s_periodmfd_inflow(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_periodmfd_inflow = WindFunc("s_periodmfd_inflow", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_periodmfd_inflow) <> vbString Then
        s_periodmfd_inflow = s_periodmfd_inflow / UnitVal_
    End If
End Function

'(|fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_periodmfd_inflowrate
Function s_periodmfd_inflowrate(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  s_periodmfd_inflowrate = WindFunc("s_periodmfd_inflowrate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'(|fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_periodmfd_inflowvolume
Function s_periodmfd_inflowvolume(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_periodmfd_inflowvolume = WindFunc("s_periodmfd_inflowvolume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_periodmfd_inflowvolume) <> vbString Then
        s_periodmfd_inflowvolume = s_periodmfd_inflowvolume / UnitVal_
    End If
End Function

'(|fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_periodmfd_inflow_open
Function s_periodmfd_inflow_open(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_periodmfd_inflow_open = WindFunc("s_periodmfd_inflow_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_periodmfd_inflow_open) <> vbString Then
        s_periodmfd_inflow_open = s_periodmfd_inflow_open / UnitVal_
    End If
End Function

'(|fffd||fffd||fffd||fffd|)|3b2||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_periodmfd_inflow_close
Function s_periodmfd_inflow_close(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_periodmfd_inflow_close = WindFunc("s_periodmfd_inflow_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_periodmfd_inflow_close) <> vbString Then
        s_periodmfd_inflow_close = s_periodmfd_inflow_close / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,s_mfd_buyamt
Function s_mfd_buyamt(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_buyamt = WindFunc("s_mfd_buyamt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
    If VarType(s_mfd_buyamt) <> vbString Then
        s_mfd_buyamt = s_mfd_buyamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,s_mfd_sellamt
Function s_mfd_sellamt(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_sellamt = WindFunc("s_mfd_sellamt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
    If VarType(s_mfd_sellamt) <> vbString Then
        s_mfd_sellamt = s_mfd_sellamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,s_mfd_buyvol
Function s_mfd_buyvol(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_buyvol = WindFunc("s_mfd_buyvol", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
    If VarType(s_mfd_buyvol) <> vbString Then
        s_mfd_buyvol = s_mfd_buyvol / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,s_mfd_ellvol
Function s_mfd_sellvol(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_mfd_sellvol = WindFunc("s_mfd_sellvol", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
    If VarType(s_mfd_sellvol) <> vbString Then
        s_mfd_sellvol = s_mfd_sellvol / UnitVal_
    End If
End Function

'|ff||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|,S_FA_FCFFPS
Function S_FA_FCFFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_FCFFPS = WindFunc("S_FA_FCFFPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||279||276||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|,S_FA_FCFEPS
Function S_FA_FCFEPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_FCFEPS = WindFunc("S_FA_FCFEPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_Extraordinary
Function S_FA_Extraordinary(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_Extraordinary = WindFunc("S_FA_Extraordinary", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_Extraordinary) <> vbString Then
        S_FA_Extraordinary = S_FA_Extraordinary / UnitVal_
    End If
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|,S_FA_DeductedProfit
Function S_FA_DeductedProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_DeductedProfit = WindFunc("S_FA_DeductedProfit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_DeductedProfit) <> vbString Then
        S_FA_DeductedProfit = S_FA_DeductedProfit / UnitVal_
    End If
End Function

'|eb||fffd||fffd|,S_FA_GrossMargin
Function S_FA_GrossMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_GrossMargin = WindFunc("S_FA_GrossMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_GrossMargin) <> vbString Then
        S_FA_GrossMargin = S_FA_GrossMargin / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_OperateIncome
Function S_FA_OperateIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_OperateIncome = WindFunc("S_FA_OperateIncome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_OperateIncome) <> vbString Then
        S_FA_OperateIncome = S_FA_OperateIncome / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_InvestIncome
Function S_FA_InvestIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_InvestIncome = WindFunc("S_FA_InvestIncome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_InvestIncome) <> vbString Then
        S_FA_InvestIncome = S_FA_InvestIncome / UnitVal_
    End If
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|EBIT,S_FA_EBIT
Function S_FA_EBIT(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_EBIT = WindFunc("S_FA_EBIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_EBIT) <> vbString Then
        S_FA_EBIT = S_FA_EBIT / UnitVal_
    End If
End Function

'|3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|EBITDA,S_FA_EBITDA
Function S_FA_EBITDA(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_EBITDA = WindFunc("S_FA_EBITDA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_EBITDA) <> vbString Then
        S_FA_EBITDA = S_FA_EBITDA / UnitVal_
    End If
End Function

'|22b||fffd||fffd||376||fffd||fffd||fffd||2b1||fffd|,S_FA_InvestCapital
Function S_FA_InvestCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_InvestCapital = WindFunc("S_FA_InvestCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_InvestCapital) <> vbString Then
        S_FA_InvestCapital = S_FA_InvestCapital / UnitVal_
    End If
End Function

'|4ea||fffd||fffd||fffd||2b1||fffd|,S_FA_WorkingCapital
Function S_FA_WorkingCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_WorkingCapital = WindFunc("S_FA_WorkingCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_WorkingCapital) <> vbString Then
        S_FA_WorkingCapital = S_FA_WorkingCapital / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||2b1||fffd|,S_FA_NetWorkingCapital
Function S_FA_NetWorkingCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_NetWorkingCapital = WindFunc("S_FA_NetWorkingCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_NetWorkingCapital) <> vbString Then
        S_FA_NetWorkingCapital = S_FA_NetWorkingCapital / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,S_FA_TangibleAsset
Function S_FA_TangibleAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_TangibleAsset = WindFunc("S_FA_TangibleAsset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_TangibleAsset) <> vbString Then
        S_FA_TangibleAsset = S_FA_TangibleAsset / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_RetainedEarnings
Function S_FA_RetainedEarnings(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_RetainedEarnings = WindFunc("S_FA_RetainedEarnings", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_RetainedEarnings) <> vbString Then
        S_FA_RetainedEarnings = S_FA_RetainedEarnings / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||56e||fffd||fffd|,S_FA_InterestDebt
Function S_FA_InterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_InterestDebt = WindFunc("S_FA_InterestDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_InterestDebt) <> vbString Then
        S_FA_InterestDebt = S_FA_InterestDebt / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd|,S_FA_NetDebt
Function S_FA_NetDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_NetDebt = WindFunc("S_FA_NetDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_NetDebt) <> vbString Then
        S_FA_NetDebt = S_FA_NetDebt / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||56e|,S_FA_ExInterestDebt_current
Function S_FA_ExInterestDebt_current(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_ExInterestDebt_current = WindFunc("S_FA_ExInterestDebt_current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_ExInterestDebt_current) <> vbString Then
        S_FA_ExInterestDebt_current = S_FA_ExInterestDebt_current / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,S_FA_ExInterestDebt_noncurrent
Function S_FA_ExInterestDebt_noncurrent(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_ExInterestDebt_noncurrent = WindFunc("S_FA_ExInterestDebt_noncurrent", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_ExInterestDebt_noncurrent) <> vbString Then
        S_FA_ExInterestDebt_noncurrent = S_FA_ExInterestDebt_noncurrent / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|FCFF,S_FA_FCFF
Function S_FA_FCFF(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_FCFF = WindFunc("S_FA_FCFF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_FCFF) <> vbString Then
        S_FA_FCFF = S_FA_FCFF / UnitVal_
    End If
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|FCFE,S_FA_FCFE
Function S_FA_FCFE(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_FCFE = WindFunc("S_FA_FCFE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_FCFE) <> vbString Then
        S_FA_FCFE = S_FA_FCFE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bc||fffd||fffd||fffd||fffd||6fe||fffd||fffd||fffd||32f||fffd||fffd|,S_FA_DA
Function S_FA_DA(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_DA = WindFunc("S_FA_DA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_FA_DA) <> vbString Then
        S_FA_DA = S_FA_DA / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_GR_TTM
Function S_FA_GR_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_GR_TTM = WindFunc("S_FA_GR_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_FA_GR_TTM) <> vbString Then
        S_FA_GR_TTM = S_FA_GR_TTM / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||733||271||fffd|(TTM),S_FA_GC_TTM
Function S_FA_GC_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_GC_TTM = WindFunc("S_FA_GC_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_GC_TTM) <> vbString Then
        S_FA_GC_TTM = S_FA_GC_TTM / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),S_FA_OR_TTM
Function S_FA_OR_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_OR_TTM = WindFunc("S_FA_OR_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_FA_OR_TTM) <> vbString Then
        S_FA_OR_TTM = S_FA_OR_TTM / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||271||fffd|-|fffd||1fd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_cost_TTM
Function S_FA_cost_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_cost_TTM = WindFunc("S_FA_cost_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_cost_TTM) <> vbString Then
        S_FA_cost_TTM = S_FA_cost_TTM / UnitVal_
    End If
End Function

'|4ea||4b5||5a7||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_expense_TTM
Function S_FA_expense_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_expense_TTM = WindFunc("S_FA_expense_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_expense_TTM) <> vbString Then
        S_FA_expense_TTM = S_FA_expense_TTM / UnitVal_
    End If
End Function

'|eb||fffd||fffd|(TTM),S_FA_grossmargin_TTM
Function S_FA_grossmargin_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_grossmargin_TTM = WindFunc("S_FA_grossmargin_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_grossmargin_TTM) <> vbString Then
        S_FA_grossmargin_TTM = S_FA_grossmargin_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|(TTM),S_FA_OperateExpense_TTM
Function S_FA_OperateExpense_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_OperateExpense_TTM = WindFunc("S_FA_OperateExpense_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_OperateExpense_TTM) <> vbString Then
        S_FA_OperateExpense_TTM = S_FA_OperateExpense_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_AdminExpense_TTM
Function S_FA_AdminExpense_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_AdminExpense_TTM = WindFunc("S_FA_AdminExpense_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_AdminExpense_TTM) <> vbString Then
        S_FA_AdminExpense_TTM = S_FA_AdminExpense_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_FinaExpense_TTM
Function S_FA_FinaExpense_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_FinaExpense_TTM = WindFunc("S_FA_FinaExpense_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_FinaExpense_TTM) <> vbString Then
        S_FA_FinaExpense_TTM = S_FA_FinaExpense_TTM / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|(TTM),S_FA_Impairment_TTM
Function S_FA_Impairment_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_Impairment_TTM = WindFunc("S_FA_Impairment_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_Impairment_TTM) <> vbString Then
        S_FA_Impairment_TTM = S_FA_Impairment_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_OperateIncome_TTM
Function S_FA_OperateIncome_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_OperateIncome_TTM = WindFunc("S_FA_OperateIncome_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_OperateIncome_TTM) <> vbString Then
        S_FA_OperateIncome_TTM = S_FA_OperateIncome_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_InvestIncome_TTM
Function S_FA_InvestIncome_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_InvestIncome_TTM = WindFunc("S_FA_InvestIncome_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_InvestIncome_TTM) <> vbString Then
        S_FA_InvestIncome_TTM = S_FA_InvestIncome_TTM / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),S_FA_OP_TTM
Function S_FA_OP_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_OP_TTM = WindFunc("S_FA_OP_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_OP_TTM) <> vbString Then
        S_FA_OP_TTM = S_FA_OP_TTM / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd|(TTM),S_FA_NonOperateProfit_TTM
Function S_FA_NonOperateProfit_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_NonOperateProfit_TTM = WindFunc("S_FA_NonOperateProfit_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_NonOperateProfit_TTM) <> vbString Then
        S_FA_NonOperateProfit_TTM = S_FA_NonOperateProfit_TTM / UnitVal_
    End If
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(TTM),S_FA_EBIT_TTM
Function S_FA_EBIT_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_EBIT_TTM = WindFunc("S_FA_EBIT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_EBIT_TTM) <> vbString Then
        S_FA_EBIT_TTM = S_FA_EBIT_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),S_FA_EBT_TTM
Function S_FA_EBT_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_EBT_TTM = WindFunc("S_FA_EBT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_EBT_TTM) <> vbString Then
        S_FA_EBT_TTM = S_FA_EBT_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_Profit_TTM
Function S_FA_Profit_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_Profit_TTM = WindFunc("s_fa_profit_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_FA_Profit_TTM) <> vbString Then
        S_FA_Profit_TTM = S_FA_Profit_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_NetProfit_TTM
Function S_FA_NetProfit_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_NetProfit_TTM = WindFunc("S_FA_NetProfit_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_FA_NetProfit_TTM) <> vbString Then
        S_FA_NetProfit_TTM = S_FA_NetProfit_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|(TTM),S_FA_SalesCashIn_TTM
Function S_FA_SalesCashIn_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_SalesCashIn_TTM = WindFunc("S_FA_SalesCashIn_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_SalesCashIn_TTM) <> vbString Then
        S_FA_SalesCashIn_TTM = S_FA_SalesCashIn_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_OperateCashFlow_TTM
Function S_FA_OperateCashFlow_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_OperateCashFlow_TTM = WindFunc("s_fa_operatecashflow_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_FA_OperateCashFlow_TTM) <> vbString Then
        S_FA_OperateCashFlow_TTM = S_FA_OperateCashFlow_TTM / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_InvestCashFlow_TTM
Function S_FA_InvestCashFlow_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_InvestCashFlow_TTM = WindFunc("S_FA_InvestCashFlow_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_InvestCashFlow_TTM) <> vbString Then
        S_FA_InvestCashFlow_TTM = S_FA_InvestCashFlow_TTM / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_FinanceCashFlow_TTM
Function S_FA_FinanceCashFlow_TTM(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_FinanceCashFlow_TTM = WindFunc("S_FA_FinanceCashFlow_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_FinanceCashFlow_TTM) <> vbString Then
        S_FA_FinanceCashFlow_TTM = S_FA_FinanceCashFlow_TTM / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_CashFlow_TTM
Function S_FA_CashFlow_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_CashFlow_TTM = WindFunc("s_fa_cashflow_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_FA_CashFlow_TTM) <> vbString Then
        S_FA_CashFlow_TTM = S_FA_CashFlow_TTM / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||73c||fffd|(MRQ),S_FA_Asset_MRQ
Function S_FA_Asset_MRQ(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_Asset_MRQ = WindFunc("S_FA_Asset_MRQ", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_Asset_MRQ) <> vbString Then
        S_FA_Asset_MRQ = S_FA_Asset_MRQ / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||3fc||fffd|(MRQ),S_FA_Debt_MRQ
Function S_FA_Debt_MRQ(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_Debt_MRQ = WindFunc("S_FA_Debt_MRQ", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_Debt_MRQ) <> vbString Then
        S_FA_Debt_MRQ = S_FA_Debt_MRQ / UnitVal_
    End If
End Function

'|fffd||276||fffd||228||fffd||fffd|(MRQ),S_FA_TotalEquity_MRQ
Function S_FA_TotalEquity_MRQ(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_TotalEquity_MRQ = WindFunc("S_FA_TotalEquity_MRQ", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_TotalEquity_MRQ) <> vbString Then
        S_FA_TotalEquity_MRQ = S_FA_TotalEquity_MRQ / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|(MRQ),S_FA_Equity_MRQ
Function S_FA_Equity_MRQ(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_FA_Equity_MRQ = WindFunc("S_FA_Equity_MRQ", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_FA_Equity_MRQ) <> vbString Then
        S_FA_Equity_MRQ = S_FA_Equity_MRQ / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|(|fffd||fffd||fffd||b9||fffd||fffd||fffd|),S_FA_Equity_New
Function S_FA_Equity_New(WINDCODE_ As Variant) As Variant
  S_FA_Equity_New = WindFunc("S_FA_Equity_New", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE,S_FA_ROE
Function S_FA_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROE = WindFunc("S_FA_ROE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE-|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ROE_deducted
Function S_FA_ROE_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROE_deducted = WindFunc("S_FA_ROE_deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ROE_Avg
Function S_FA_ROE_Avg(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROE_Avg = WindFunc("S_FA_ROE_Avg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROA,S_FA_ROA
Function S_FA_ROA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROA = WindFunc("S_FA_ROA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROA,S_FA_ROA2
Function S_FA_ROA2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROA2 = WindFunc("S_FA_ROA2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|ROIC,S_FA_ROIC
Function S_FA_ROIC(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROIC = WindFunc("S_FA_ROIC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ROIC_yearly
Function S_FA_ROIC_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROIC_yearly = WindFunc("S_FA_ROIC_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ROA_yearly
Function S_FA_ROA_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROA_yearly = WindFunc("S_FA_ROA_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ROA2_yearly
Function S_FA_ROA2_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROA2_yearly = WindFunc("S_FA_ROA2_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|,S_FA_NetProfitMargin
Function S_FA_NetProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_NetProfitMargin = WindFunc("S_FA_NetProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|,S_FA_GrossProfitMargin
Function S_FA_GrossProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_GrossProfitMargin = WindFunc("S_FA_GrossProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6f3||271||fffd||fffd||fffd|,S_FA_COGStoSales
Function S_FA_COGStoSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_COGStoSales = WindFunc("S_FA_COGStoSales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6bc||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ExpensetoSales
Function S_FA_ExpensetoSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ExpensetoSales = WindFunc("S_FA_ExpensetoSales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ProfittoGR
Function S_FA_ProfittoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ProfittoGR = WindFunc("S_FA_ProfittoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_OPtoGR
Function S_FA_OPtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OPtoGR = WindFunc("S_FA_OPtoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_EBITtoGR
Function S_FA_EBITtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EBITtoGR = WindFunc("S_FA_EBITtoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||733||271||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_GCtoGR
Function S_FA_GCtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_GCtoGR = WindFunc("S_FA_GCtoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_OperateExpensetoGR
Function S_FA_OperateExpensetoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OperateExpensetoGR = WindFunc("S_FA_OperateExpensetoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_AdminExpensetoGR
Function S_FA_AdminExpensetoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_AdminExpensetoGR = WindFunc("S_FA_AdminExpensetoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_FinaExpensetoGR
Function S_FA_FinaExpensetoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_FinaExpensetoGR = WindFunc("S_FA_FinaExpensetoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_ImpairtoGR
Function S_FA_ImpairtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ImpairtoGR = WindFunc("S_FA_ImpairtoGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(TTM),S_FA_ROE_TTM
Function S_FA_ROE_TTM(WINDCODE_ As Variant) As Variant
  S_FA_ROE_TTM = WindFunc("S_FA_ROE_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROA(TTM),S_FA_ROA_TTM
Function S_FA_ROA_TTM(WINDCODE_ As Variant) As Variant
  S_FA_ROA_TTM = WindFunc("S_FA_ROA_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROA(TTM),S_FA_ROA2_TTM
Function S_FA_ROA2_TTM(WINDCODE_ As Variant) As Variant
  S_FA_ROA2_TTM = WindFunc("S_FA_ROA2_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_NetProfitMargin_TTM
Function S_FA_NetProfitMargin_TTM(WINDCODE_ As Variant) As Variant
  S_FA_NetProfitMargin_TTM = WindFunc("S_FA_NetProfitMargin_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|(TTM),S_FA_GrossProfitMargin_TTM
Function S_FA_GrossProfitMargin_TTM(WINDCODE_ As Variant) As Variant
  S_FA_GrossProfitMargin_TTM = WindFunc("S_FA_GrossProfitMargin_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6bc||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_ExpensetoSales_TTM
Function S_FA_ExpensetoSales_TTM(WINDCODE_ As Variant) As Variant
  S_FA_ExpensetoSales_TTM = WindFunc("S_FA_ExpensetoSales_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_ProfittoGR_TTM
Function S_FA_ProfittoGR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_ProfittoGR_TTM = WindFunc("S_FA_ProfittoGR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_OPtoGR_TTM
Function S_FA_OPtoGR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_OPtoGR_TTM = WindFunc("S_FA_OPtoGR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||733||271||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_GCtoGR_TTM
Function S_FA_GCtoGR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_GCtoGR_TTM = WindFunc("S_FA_GCtoGR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_OperateExpensetoGR_TTM
Function S_FA_OperateExpensetoGR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_OperateExpensetoGR_TTM = WindFunc("S_FA_OperateExpensetoGR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_AdminExpensetoGR_TTM
Function S_FA_AdminExpensetoGR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_AdminExpensetoGR_TTM = WindFunc("S_FA_AdminExpensetoGR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_FinaExpensetoGR_TTM
Function S_FA_FinaExpensetoGR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_FinaExpensetoGR_TTM = WindFunc("S_FA_FinaExpensetoGR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_ImpairtoGR_TTM
Function S_FA_ImpairtoGR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_ImpairtoGR_TTM = WindFunc("S_FA_ImpairtoGR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||68ef||fffd||fffd||fffd||fffd||fffd||736||fffd|,S_FA_OperateIncometoEBT
Function S_FA_OperateIncometoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OperateIncometoEBT = WindFunc("S_FA_OperateIncometoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||68ef||fffd||fffd||fffd||fffd||fffd||736||fffd|,S_FA_InvestIncometoEBT
Function S_FA_InvestIncometoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_InvestIncometoEBT = WindFunc("S_FA_InvestIncometoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||e8ef||fffd||fffd||fffd||fffd||fffd||736||fffd|,S_FA_NonOperateProfittoEBT
Function S_FA_NonOperateProfittoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_NonOperateProfittoEBT = WindFunc("S_FA_NonOperateProfittoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||2f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|,S_FA_TaxtoEBT
Function S_FA_TaxtoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_TaxtoEBT = WindFunc("S_FA_TaxtoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||e3bfe||fffd||fffd||fffd||fffd||fffd|,S_FA_DeductedProfittoProfit
Function S_FA_DeductedProfittoProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_DeductedProfittoProfit = WindFunc("S_FA_DeductedProfittoProfit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||68ef||fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),S_FA_OperateIncometoEBT_TTM
Function S_FA_OperateIncometoEBT_TTM(WINDCODE_ As Variant) As Variant
  S_FA_OperateIncometoEBT_TTM = WindFunc("S_FA_OperateIncometoEBT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||68ef||fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),S_FA_InvestIncometoEBT_TTM
Function S_FA_InvestIncometoEBT_TTM(WINDCODE_ As Variant) As Variant
  S_FA_InvestIncometoEBT_TTM = WindFunc("S_FA_InvestIncometoEBT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||e8ef||fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),S_FA_NonOperateProfittoEBT_TTM
Function S_FA_NonOperateProfittoEBT_TTM(WINDCODE_ As Variant) As Variant
  S_FA_NonOperateProfittoEBT_TTM = WindFunc("S_FA_NonOperateProfittoEBT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,S_FA_SalesCashIntoOR
Function S_FA_SalesCashIntoOR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_SalesCashIntoOR = WindFunc("S_FA_SalesCashIntoOR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||4ea||4b5||fffd||fffd||fffd||fffd|,S_FA_OCFtoOR
Function S_FA_OCFtoOR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OCFtoOR = WindFunc("S_FA_OCFtoOR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_OCFtoOperateIncome
Function S_FA_OCFtoOperateIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OCFtoOperateIncome = WindFunc("S_FA_OCFtoOperateIncome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b1||fffd||5a7||fffd||fffd||fffd||fffd||fffd||6fe||27a||fffd||32f||fffd||fffd|,S_FA_CapitalizedtoDA
Function S_FA_CapitalizedtoDA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_CapitalizedtoDA = WindFunc("S_FA_CapitalizedtoDA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(TTM),S_FA_SalesCashIntoOR_TTM
Function S_FA_SalesCashIntoOR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_SalesCashIntoOR_TTM = WindFunc("S_FA_SalesCashIntoOR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||4ea||4b5||fffd||fffd||fffd||fffd|(TTM),S_FA_OCFtoOR_TTM
Function S_FA_OCFtoOR_TTM(WINDCODE_ As Variant) As Variant
  S_FA_OCFtoOR_TTM = WindFunc("S_FA_OCFtoOR_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),S_FA_OCFtoOperateIncome_TTM
Function S_FA_OCFtoOperateIncome_TTM(WINDCODE_ As Variant) As Variant
  S_FA_OCFtoOperateIncome_TTM = WindFunc("S_FA_OCFtoOperateIncome_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|,S_FA_DebtToAssets
Function S_FA_DebtToAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_DebtToAssets = WindFunc("S_FA_DebtToAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|228||fffd||fffd||fffd||fffd||fffd|,S_FA_AssetsToEquity
Function S_FA_AssetsToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_AssetsToEquity = WindFunc("S_FA_AssetsToEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,S_FA_CAtoAssets
Function S_FA_CAtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_CAtoAssets = WindFunc("S_FA_CAtoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,S_FA_NCAtoAssets
Function S_FA_NCAtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_NCAtoAssets = WindFunc("S_FA_NCAtoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,S_FA_TangibleAssetstoAssets
Function S_FA_TangibleAssetstoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_TangibleAssetstoAssets = WindFunc("S_FA_TangibleAssetstoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||68ef||22b||fffd||fffd||376||fffd||fffd||fffd||2b1||fffd|,S_FA_EquitytoTotalCapital
Function S_FA_EquitytoTotalCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EquitytoTotalCapital = WindFunc("S_FA_EquitytoTotalCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||56e||fffd||fffd||22b||fffd||fffd||376||fffd||fffd||fffd||2b1||fffd|,S_FA_InterestDebttoTotalCapital
Function S_FA_InterestDebttoTotalCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_InterestDebttoTotalCapital = WindFunc("S_FA_InterestDebttoTotalCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|,S_FA_CurrentDebttoDebt
Function S_FA_CurrentDebttoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_CurrentDebttoDebt = WindFunc("S_FA_CurrentDebttoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|,S_FA_LongDebtoDebt
Function S_FA_LongDebtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_LongDebtoDebt = WindFunc("S_FA_LongDebtoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_Current
Function S_FA_Current(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_Current = WindFunc("S_FA_Current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||676||fffd||fffd||fffd||fffd||fffd|,S_FA_Quick
Function S_FA_Quick(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_Quick = WindFunc("S_FA_Quick", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||676||fffd||fffd||fffd||fffd||fffd|,S_FA_CashRatio
Function S_FA_CashRatio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_CashRatio = WindFunc("S_FA_CashRatio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|(|fffd||fffd||56e||fffd||3fc||1a3||fffd||fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|),S_FA_DebtToEquity
Function S_FA_DebtToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_DebtToEquity = WindFunc("S_FA_DebtToEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||68ef||fffd||fffd||56e||fffd||3fc||fffd|,S_FA_EquitytoDebt
Function S_FA_EquitytoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EquitytoDebt = WindFunc("S_FA_EquitytoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||68ef||fffd||fffd||3e2||56e||fffd||fffd|,S_FA_EquitytoInterestDebt
Function S_FA_EquitytoInterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EquitytoInterestDebt = WindFunc("S_FA_EquitytoInterestDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|,S_FA_TangibleAssettoDebt
Function S_FA_TangibleAssettoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_TangibleAssettoDebt = WindFunc("S_FA_TangibleAssettoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||3e2||56e||fffd||fffd|,S_FA_TangibleAssettoInterestDebt
Function S_FA_TangibleAssettoInterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_TangibleAssettoInterestDebt = WindFunc("S_FA_TangibleAssettoInterestDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd|,S_FA_TangibleAssettoNetDebt
Function S_FA_TangibleAssettoNetDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_TangibleAssettoNetDebt = WindFunc("S_FA_TangibleAssettoNetDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||e3bf8||fffd||56e||fffd||3fc||fffd|,S_FA_EBITDAtoDebt
Function S_FA_EBITDAtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EBITDAtoDebt = WindFunc("S_FA_EBITDAtoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||56e||fffd||3fc||fffd|,S_FA_OCFtoDebt
Function S_FA_OCFtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OCFtoDebt = WindFunc("S_FA_OCFtoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||3e2||56e||fffd||fffd|,S_FA_OCFtoInterestDebt
Function S_FA_OCFtoInterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OCFtoInterestDebt = WindFunc("S_FA_OCFtoInterestDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||fffd||fffd||fffd||fffd||56e|,S_FA_OCFtoShortDebt
Function S_FA_OCFtoShortDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OCFtoShortDebt = WindFunc("S_FA_OCFtoShortDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||56e||fffd||fffd|,S_FA_OCFtoNetDebt
Function S_FA_OCFtoNetDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_OCFtoNetDebt = WindFunc("S_FA_OCFtoNetDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||47b||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|(EBIT|fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|),S_FA_EBITtoInterest
Function S_FA_EBITtoInterest(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EBITtoInterest = WindFunc("S_FA_EBITtoInterest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd|,S_FA_LongDebttoWorkingCapital
Function S_FA_LongDebttoWorkingCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_LongDebttoWorkingCapital = WindFunc("S_FA_LongDebttoWorkingCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|,S_FA_Turndays
Function S_FA_Turndays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_Turndays = WindFunc("S_FA_Turndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5ea||fffd||fffd||fffd||fffd|,S_FA_InvTurndays
Function S_FA_InvTurndays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_InvTurndays = WindFunc("S_FA_InvTurndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||5ea||fffd||fffd||fffd||fffd|,S_FA_ARTurnDays
Function S_FA_ARTurnDays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ARTurnDays = WindFunc("S_FA_ARTurnDays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5ea||fffd||fffd|,S_FA_InvTurn
Function S_FA_InvTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_InvTurn = WindFunc("S_FA_InvTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||5ea||fffd||fffd|,S_FA_ARTurn
Function S_FA_ARTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ARTurn = WindFunc("S_FA_ARTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|,S_FA_CATurn
Function S_FA_CATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_CATurn = WindFunc("S_FA_CATurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|,S_FA_FATurn
Function S_FA_FATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_FATurn = WindFunc("S_FA_FATurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|,S_FA_AssetsTurn
Function S_FA_AssetsTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_AssetsTurn = WindFunc("S_FA_AssetsTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|,S_FA_YoYEPS_Basic
Function S_FA_YoYEPS_Basic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYEPS_Basic = WindFunc("S_FA_YoYEPS_Basic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|3e1||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|,S_FA_YoYEPS_Diluted
Function S_FA_YoYEPS_Diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYEPS_Diluted = WindFunc("S_FA_YoYEPS_Diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|,S_FA_YoYOCFPS
Function S_FA_YoYOCFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYOCFPS = WindFunc("S_FA_YoYOCFPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd| |fffd||fffd|,S_FA_YoYOP
Function S_FA_YoYOP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYOP = WindFunc("S_FA_YoYOP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd| |fffd||fffd|,S_FA_YoYEBT
Function S_FA_YoYEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYEBT = WindFunc("S_FA_YoYEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|,S_FA_YoYNetProfit
Function S_FA_YoYNetProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYNetProfit = WindFunc("S_FA_YoYNetProfit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|-|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|,S_FA_YoYNetProfit_deducted
Function S_FA_YoYNetProfit_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYNetProfit_deducted = WindFunc("S_FA_YoYNetProfit_deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|,S_FA_YoYOCF
Function S_FA_YoYOCF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYOCF = WindFunc("S_FA_YoYOCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|32f||fffd||fffd|) |fffd||fffd|,S_FA_YoYROE
Function S_FA_YoYROE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYROE = WindFunc("S_FA_YoYROE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd| |fffd||fffd|,S_FA_YoYBPS
Function S_FA_YoYBPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YoYBPS = WindFunc("S_FA_YoYBPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||be34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_fa_cagr_TR
Function s_fa_cagr_TR(WINDCODE_ As Variant, Year_ As Integer, Optional N_ As Integer = 3) As Variant
  s_fa_cagr_TR = WindFunc("s_fa_cagr_TR", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, N_)
End Function

'|fffd||fffd||fffd||fffd||fffd||f8d3a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_fa_cagr_netprofit
Function s_fa_cagr_netprofit(WINDCODE_ As Variant, Year_ As Integer, Optional N_ As Integer = 3) As Variant
  s_fa_cagr_netprofit = WindFunc("s_fa_cagr_netprofit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, N_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_GR
Function S_Growth_GR(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_GR = WindFunc("S_Growth_GR", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|4ea||4b5||fffd||733||271||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_GC
Function S_Growth_GC(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_GC = WindFunc("S_Growth_GC", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_OR
Function S_Growth_OR(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_OR = WindFunc("S_Growth_OR", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_OP
Function S_Growth_OP(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_OP = WindFunc("S_Growth_OP", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_OperateIncome
Function S_Growth_OperateIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_OperateIncome = WindFunc("S_Growth_OperateIncome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_InvestIncome
Function S_Growth_InvestIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_InvestIncome = WindFunc("S_Growth_InvestIncome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_EBT
Function S_Growth_EBT(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_EBT = WindFunc("S_Growth_EBT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_Profit
Function S_Growth_Profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_Profit = WindFunc("S_Growth_Profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_NetProfit
Function S_Growth_NetProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_NetProfit = WindFunc("S_Growth_NetProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|-|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_NetProfit_deducted
Function S_Growth_NetProfit_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_NetProfit_deducted = WindFunc("S_Growth_NetProfit_deducted", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_OCF
Function S_Growth_OCF(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_OCF = WindFunc("S_Growth_OCF", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||73c||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_assets
Function S_Growth_assets(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_assets = WindFunc("S_Growth_assets", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||276||fffd||228||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_TotalEquity
Function S_Growth_TotalEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_TotalEquity = WindFunc("S_Growth_TotalEquity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_equity
Function S_Growth_equity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_equity = WindFunc("S_Growth_equity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_ProfittoSales
Function S_Growth_ProfittoSales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_ProfittoSales = WindFunc("S_Growth_ProfittoSales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (N|fffd||fffd|, |fffd||fffd|),S_Growth_ROE
Function S_Growth_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  S_Growth_ROE = WindFunc("S_Growth_ROE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||3f8|,S_StmNote_Inv
Function S_StmNote_Inv(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_StmNote_Inv = WindFunc("S_StmNote_Inv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
    If VarType(S_StmNote_Inv) <> vbString Then
        S_StmNote_Inv = S_StmNote_Inv / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|4e6||fffd||fffd||fffd||2bf||fffd||fffd||fffd||3f8|,S_StmNote_AR
Function S_StmNote_AR(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_StmNote_AR = WindFunc("S_StmNote_AR", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_StmNote_AR) <> vbString Then
        S_StmNote_AR = S_StmNote_AR / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||2b2||fffd||fffd||fffd||5b5||5fc||fffd||fffd||fffd||fffd||3f8|,S_StmNote_Reserve
Function S_StmNote_Reserve(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional DataItem_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_StmNote_Reserve = WindFunc("S_StmNote_Reserve", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, DataItem_, Null, Null)
    If VarType(S_StmNote_Reserve) <> vbString Then
        S_StmNote_Reserve = S_StmNote_Reserve / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f8|,S_StmNote_FinExp
Function S_StmNote_FinExp(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_StmNote_FinExp = WindFunc("S_StmNote_FinExp", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(S_StmNote_FinExp) <> vbString Then
        S_StmNote_FinExp = S_StmNote_FinExp / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||2f0||2f0||fffd||fffd|,S_StmNote_Tax
Function S_StmNote_Tax(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_StmNote_Tax = WindFunc("S_StmNote_Tax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_StmNote_Guarantee
Function S_StmNote_Guarantee(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_StmNote_Guarantee = WindFunc("S_StmNote_Guarantee", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
    If VarType(S_StmNote_Guarantee) <> vbString Then
        S_StmNote_Guarantee = S_StmNote_Guarantee / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||2b2||fffd||52d||5b5||fffd||bfbb||5b5|,S_STMNOTE_AssetDetail
Function S_STMNOTE_AssetDetail(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_STMNOTE_AssetDetail = WindFunc("S_STMNOTE_AssetDetail", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
    If VarType(S_STMNOTE_AssetDetail) <> vbString Then
        S_STMNOTE_AssetDetail = S_STMNOTE_AssetDetail / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||5e8||fffd||fffd||5b8||fffd||aeaf||fffd||fffd|,S_StmNote_Bank
Function S_StmNote_Bank(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_StmNote_Bank = WindFunc("S_StmNote_Bank", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
    If VarType(S_StmNote_Bank) <> vbString Then
        S_StmNote_Bank = S_StmNote_Bank / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||5e8||fffd||fffd||5b8||fffd||aeaf||fffd||fffd|/|fffd||fffd||fffd||434||fffd||fffd||fffd||fffd||fffd||5f36||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_stmnote_bank_fiveclass
Function s_stmnote_bank_fiveclass(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_bank_fiveclass = WindFunc("S_StmNote_Bank", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
    If VarType(s_stmnote_bank_fiveclass) <> vbString Then
        s_stmnote_bank_fiveclass = s_stmnote_bank_fiveclass / UnitVal_
    End If
End Function

'|fffd||fffd||1b1|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||5e8||fffd||fffd||5b8||fffd||aeaf||fffd||fffd|/|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_stmnote_bank_avgrate
Function s_stmnote_bank_avgrate(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_avgrate = WindFunc("S_StmNote_Bank", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT),S_FinData_EBIT
Function S_FinData_EBIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_EBIT = WindFunc("S_FinData_EBIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA),S_FinData_EBITDA
Function S_FinData_EBITDA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  'S_FinData_EBITDA = WindFunc("S_FinData_EBITDA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
  S_FinData_EBITDA = "Deprecated"
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|,S_FinData_NormalNetProfit
Function S_FinData_NormalNetProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_NormalNetProfit = WindFunc("S_FinData_NormalNetProfit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b1||fffd||5a7||fffd||fffd|(|fffd||fffd||fffd||fffd|),S_FinData_CapExp
Function S_FinData_CapExp(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_CapExp = WindFunc("S_FinData_CapExp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,S_FinData_TangibleAsset
Function S_FinData_TangibleAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_TangibleAsset = WindFunc("S_FinData_TangibleAsset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||fffd||fffd||fffd||2bd||fffd|,S_FinData_WorkingCapital
Function S_FinData_WorkingCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_WorkingCapital = WindFunc("S_FinData_WorkingCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd|,S_FinData_NetDebt
Function S_FinData_NetDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_NetDebt = WindFunc("S_FinData_NetDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(FCFF),S_FinData_FCFF
Function S_FinData_FCFF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_FCFF = WindFunc("S_FinData_FCFF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(FCFE),S_FinData_FCFE
Function S_FinData_FCFE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FinData_FCFE = WindFunc("S_FinData_FCFE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|TTM,S_FinData_Sales_TTM
Function S_FinData_Sales_TTM(WINDCODE_ As Variant) As Variant
  S_FinData_Sales_TTM = WindFunc("S_FinData_Sales_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|TTM,S_FinData_MainProfit_TTM
Function S_FinData_MainProfit_TTM(WINDCODE_ As Variant) As Variant
  S_FinData_MainProfit_TTM = WindFunc("S_FinData_MainProfit_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|TTM,S_FinData_OperatingProfit_TTM
Function S_FinData_OperatingProfit_TTM(WINDCODE_ As Variant) As Variant
  S_FinData_OperatingProfit_TTM = WindFunc("S_FinData_OperatingProfit_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|2f0||1f0||fffd||fffd||fffd||fffd|TTM,S_FinData_EBT_TTM
Function S_FinData_EBT_TTM(WINDCODE_ As Variant) As Variant
  S_FinData_EBT_TTM = WindFunc("S_FinData_EBT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|TTM,S_FinData_NetProfit_TTM
Function S_FinData_NetProfit_TTM(WINDCODE_ As Variant) As Variant
  S_FinData_NetProfit_TTM = WindFunc("S_FinData_NetProfit_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|(EPS),S_Ratio_EPS
Function S_Ratio_EPS(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  'S_Ratio_EPS = WindFunc("S_Ratio_EPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
  S_Ratio_EPS = "Deprecated"
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|(EPS)TTM,S_Ratio_EPS_TTM
Function S_Ratio_EPS_TTM(WINDCODE_ As Variant) As Variant
  S_Ratio_EPS_TTM = WindFunc("S_Ratio_EPS_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||6f6||fffd|(SPS),S_Ratio_SPS
Function S_Ratio_SPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_SPS = WindFunc("S_Ratio_SPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS),S_Ratio_BPS
Function S_Ratio_BPS(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  'S_Ratio_BPS = WindFunc("S_Ratio_BPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
  S_Ratio_BPS = "Deprecated"
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(CFPS),S_Ratio_CFPS
Function S_Ratio_CFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_CFPS = WindFunc("S_Ratio_CFPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|(GPM),S_Ratio_GrossProfitMargin
Function S_Ratio_GrossProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_GrossProfitMargin = WindFunc("S_Ratio_GrossProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|(NPM),S_Ratio_NetProfitMargin
Function S_Ratio_NetProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_NetProfitMargin = WindFunc("S_Ratio_NetProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROA),S_Ratio_ROA
Function S_Ratio_ROA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_ROA = WindFunc("S_Ratio_ROA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|228||fffd||6fbb||fffd||fffd||fffd||fffd|(ROE),S_Ratio_ROE
Function S_Ratio_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Select Case TYPE_
        Case 1
            S_Ratio_ROE = WindFunc("|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), 1, Null, Null, Null)
        Case 2
            S_Ratio_ROE = WindFunc("|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), 2, Null, Null, Null)
        Case 3
            S_Ratio_ROE = WindFunc("|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), 1, Null, Null, Null)
        Case 4
            S_Ratio_ROE = WindFunc("|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), 2, Null, Null, Null)
    End Select
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|(ROIC),S_Ratio_ROIC
Function S_Ratio_ROIC(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_ROIC = WindFunc("S_Ratio_ROIC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|,S_Ratio_DebtToEquity
Function S_Ratio_DebtToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_DebtToEquity = WindFunc("S_Ratio_DebtToEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Ratio_Current
Function S_Ratio_Current(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_Current = WindFunc("S_Ratio_Current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||676||fffd||fffd||fffd||fffd||fffd|,S_Ratio_Quick
Function S_Ratio_Quick(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_Quick = WindFunc("S_Ratio_Quick", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5ea||fffd||fffd|,S_Ratio_InvTurn
Function S_Ratio_InvTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_InvTurn = WindFunc("S_Ratio_InvTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||2bf||fffd||fffd||fffd||5ea||fffd||fffd|,S_Ratio_ARTurn
Function S_Ratio_ARTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_ARTurn = WindFunc("S_Ratio_ARTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|,S_Ratio_CATurn
Function S_Ratio_CATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_CATurn = WindFunc("S_Ratio_CATurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_EBT
Function S_YoY_EBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_EBT = WindFunc("S_YoY_EBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_NetProfit
Function S_YoY_NetProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_NetProfit = WindFunc("S_YoY_NetProfit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_Equity
Function S_YoY_Equity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_Equity = WindFunc("S_YoY_Equity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|,S_Ratio_DebtToAsset
Function S_Ratio_DebtToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_DebtToAsset = WindFunc("S_Ratio_DebtToAsset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|228||fffd||fffd||fffd||fffd||fffd|,S_Ratio_AssetToEquity
Function S_Ratio_AssetToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_AssetToEquity = WindFunc("S_Ratio_AssetToEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|,S_Ratio_TATurn
Function S_Ratio_TATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_TATurn = WindFunc("S_Ratio_TATurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd|,S_Ratio_DivPayOut
Function S_Ratio_DivPayOut(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_Ratio_DivPayOut = WindFunc("S_Ratio_DivPayOut", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Ratio_Retention
Function S_Ratio_Retention(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_Ratio_Retention = WindFunc("S_Ratio_Retention", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||273||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),S_Ratio_SGR
Function S_Ratio_SGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_SGR = WindFunc("S_Ratio_SGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS(|32f||fffd||fffd|),S_Ratio_EPS_QTY
Function S_Ratio_EPS_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_EPS_QTY = WindFunc("S_Ratio_EPS_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|,S_Ratio_GrossProfitMargin_QTY
Function S_Ratio_GrossProfitMargin_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_GrossProfitMargin_QTY = WindFunc("S_Ratio_GrossProfitMargin_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|,S_Ratio_NetProfitMargin_QTY
Function S_Ratio_NetProfitMargin_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_NetProfitMargin_QTY = WindFunc("S_Ratio_NetProfitMargin_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROA),S_Ratio_ROA_QTY
Function S_Ratio_ROA_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_ROA_QTY = WindFunc("S_Ratio_ROA_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|228||fffd||6fbb||fffd||fffd||fffd||fffd|(ROE),S_Ratio_ROE_QTY
Function S_Ratio_ROE_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Ratio_ROE_QTY = WindFunc("S_Ratio_ROE_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_Sales
Function S_YoY_Sales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_Sales = WindFunc("S_YoY_Sales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_MainProfit
Function S_YoY_MainProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_MainProfit = WindFunc("S_YoY_MainProfit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_OperatingProfit
Function S_YoY_OperatingProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_OperatingProfit = WindFunc("S_YoY_OperatingProfit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_Asset
Function S_YoY_Asset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_Asset = WindFunc("S_YoY_Asset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||738||fffd||56e||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_Debt
Function S_YoY_Debt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_Debt = WindFunc("S_YoY_Debt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_Sales_QTY
Function S_YoY_Sales_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_Sales_QTY = WindFunc("S_YoY_Sales_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_MainProfit_QTY
Function S_YoY_MainProfit_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_MainProfit_QTY = WindFunc("S_YoY_MainProfit_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|2f0||1f0||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_EBT_QTY
Function S_YoY_EBT_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_EBT_QTY = WindFunc("S_YoY_EBT_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_YoY_NetProfit_QTY
Function S_YoY_NetProfit_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_YoY_NetProfit_QTY = WindFunc("S_YoY_NetProfit_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Est_InstNum
Function S_Est_InstNum(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_InstNum = WindFunc("S_Est_InstNum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_EPS
Function S_Est_EPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_EPS = WindFunc("S_Est_EPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_Sales
Function S_Est_Sales(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_Sales = WindFunc("S_Est_Sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_Sales) <> vbString Then
        S_Est_Sales = S_Est_Sales / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_NetProfit
Function S_Est_NetProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_NetProfit = WindFunc("S_Est_NetProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_NetProfit) <> vbString Then
        S_Est_NetProfit = S_Est_NetProfit / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||3f8||5b5|),S_Est_EPS_Inst
Function s_est_eps_inst(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
    Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
    s_est_eps_inst = WindFunc("S_Est_EPS_Inst", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), INSTITUTION_, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||3f8||5b5|),S_Est_Sales_Inst
Function S_Est_Sales_Inst(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
    Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
    S_Est_Sales_Inst = WindFunc("S_Est_Sales_Inst", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), INSTITUTION_, Null, Null)
    If VarType(S_Est_Sales_Inst) <> vbString Then
        S_Est_Sales_Inst = S_Est_Sales_Inst / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|(|fffd||fffd||3f8||5b5|),S_Est_NetProfit_Inst
Function S_Est_NetProfit_Inst(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
    Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
    S_Est_NetProfit_Inst = WindFunc("S_Est_NetProfit_Inst", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), INSTITUTION_, Null, Null)
    If VarType(S_Est_NetProfit_Inst) <> vbString Then
        S_Est_NetProfit_Inst = S_Est_NetProfit_Inst / UnitVal_
    End If
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd|,S_Rating_Avg
Function S_Rating_Avg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_Avg = WindFunc("S_Rating_Avg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_wrating_instnum
Function s_wrating_instnum(WINDCODE_ As Variant, DATE_ As Variant, Optional PERIOD_ As Integer) As Variant
  s_wrating_instnum = WindFunc("s_wrating_instnum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_wrating_numofbuy
Function s_wrating_numofbuy(WINDCODE_ As Variant, DATE_ As Variant, Optional PERIOD_ As Integer) As Variant
  s_wrating_numofbuy = WindFunc("s_wrating_numofbuy", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bc||fffd||fffd||fffd|,s_wrating_numofoutperform
Function s_wrating_numofoutperform(WINDCODE_ As Variant, DATE_ As Variant, Optional PERIOD_ As Integer) As Variant
  s_wrating_numofoutperform = WindFunc("s_wrating_numofoutperform", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd|,s_wrating_numofhold
Function s_wrating_numofhold(WINDCODE_ As Variant, DATE_ As Variant, Optional PERIOD_ As Integer) As Variant
  s_wrating_numofhold = WindFunc("s_wrating_numofhold", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bc||fffd||fffd||fffd|,s_wrating_numofunderperform
Function s_wrating_numofunderperform(WINDCODE_ As Variant, DATE_ As Variant, Optional PERIOD_ As Integer) As Variant
  s_wrating_numofunderperform = WindFunc("s_wrating_numofunderperform", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_wrating_numofsell
Function s_wrating_numofsell(WINDCODE_ As Variant, DATE_ As Variant, Optional PERIOD_ As Integer) As Variant
  s_wrating_numofsell = WindFunc("s_wrating_numofsell", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|ff||fffd||279||fffd||fffd||fffd|(|2f0||1f0|),S_DIV_CashBeforeTax
Function S_DIV_CashBeforeTax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_CashBeforeTax = WindFunc("S_DIV_CashBeforeTax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||279||fffd||fffd||fffd|(|2f0||fffd||fffd|),S_DIV_CashAfterTax
Function S_DIV_CashAfterTax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_CashAfterTax = WindFunc("S_DIV_CashAfterTax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27a||fffd||fffd|,S_DIV_Stock
Function S_DIV_Stock(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_Stock = WindFunc("S_DIV_Stock", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||5ea||fffd||fffd||fffd||271||fffd|,S_DIV_Capitalization
Function S_DIV_Capitalization(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_Capitalization = WindFunc("S_DIV_Capitalization", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||1fc||fffd||fffd||fffd|,S_DIV_RecordDate
Function S_DIV_RecordDate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_RecordDate = WindFunc("S_DIV_RecordDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||3e2||fffd||fffd|,S_DIV_ExDate
Function S_DIV_ExDate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_ExDate = WindFunc("S_DIV_ExDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd|,S_DIV_PayDate
Function S_DIV_PayDate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_PayDate = WindFunc("S_DIV_PayDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5ba||cdfd||fffd||fffd||fffd||fffd||fffd||fffd|,S_DIV_Progress
Function S_DIV_Progress(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_Progress = WindFunc("S_DIV_Progress", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||6f8||fffd|,S_IPO_Price
Function S_IPO_Price(WINDCODE_ As Variant) As Variant
  S_IPO_Price = WindFunc("S_IPO_Price", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd|,S_IPO_Amount
Function S_IPO_Amount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_IPO_Amount = WindFunc("S_IPO_Amount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_IPO_Amount) <> vbString Then
        S_IPO_Amount = S_IPO_Amount / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_IPO_ListedDate
Function S_IPO_ListedDate(WINDCODE_ As Variant) As Variant
  S_IPO_ListedDate = WindFunc("S_IPO_ListedDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||4ef||fffd||fffd|,S_IPO_PE
Function S_IPO_PE(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Select Case TYPE_
    Case 1
        S_IPO_PE = WindFunc("s_ipo_DilutedPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    Case 2
        S_IPO_PE = WindFunc("s_ipo_WeightedPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
  End Select
End Function

'|fffd||5f7||fffd||13c||fffd||fffd||fffd||2bd||fffd|,S_IPO_Collection
Function S_IPO_Collection(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_IPO_Collection = WindFunc("S_IPO_Collection", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_IPO_Collection) <> vbString Then
        S_IPO_Collection = S_IPO_Collection / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||437||fffd||fffd||fffd|,S_IPO_Expense
Function S_IPO_Expense(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_IPO_Expense = WindFunc("S_IPO_Expense", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_IPO_Expense) <> vbString Then
        S_IPO_Expense = S_IPO_Expense / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||2b5||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd|,S_IPO_NetCollection
Function S_IPO_NetCollection(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_IPO_NetCollection = WindFunc("S_IPO_NetCollection", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_IPO_NetCollection) <> vbString Then
        S_IPO_NetCollection = S_IPO_NetCollection / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||57f||fffd||fffd||33c||fffd|,S_IPO_Open
Function S_IPO_Open(WINDCODE_ As Variant) As Variant
  S_IPO_Open = WindFunc("S_IPO_Open", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,S_IPO_Close
Function S_IPO_Close(WINDCODE_ As Variant) As Variant
  S_IPO_Close = WindFunc("S_IPO_Close", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6f8||fffd|,S_Fellow_Price
Function S_Fellow_Price(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_Fellow_Price = WindFunc("S_Fellow_Price", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Fellow_Amount
Function S_Fellow_Amount(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_Fellow_Amount = WindFunc("S_Fellow_Amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_Fellow_Amount) <> vbString Then
        S_Fellow_Amount = S_Fellow_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Fellow_ListedDate
Function S_Fellow_ListedDate(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_Fellow_ListedDate = WindFunc("S_Fellow_ListedDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd|,S_Fellow_ExDividendDate
Function S_Fellow_ExDividendDate(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_Fellow_ExDividendDate = WindFunc("S_Fellow_ExDividendDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ef||fffd||fffd|,S_Fellow_PE
Function S_Fellow_PE(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional TYPE_ As Integer = 1) As Variant
  Select Case TYPE_
    Case 1
            S_Fellow_PE = WindFunc("s_fellow_dilutedpe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    Case 2
            S_Fellow_PE = WindFunc("s_fellow_WeightedPE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
  End Select
End Function

'|fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd|,S_Fellow_Collection
Function S_Fellow_Collection(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_Fellow_Collection = WindFunc("S_Fellow_Collection", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_Fellow_Collection) <> vbString Then
        S_Fellow_Collection = S_Fellow_Collection / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Fellow_Expense
Function S_Fellow_Expense(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_Fellow_Expense = WindFunc("S_Fellow_Expense", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_Fellow_Expense) <> vbString Then
        S_Fellow_Expense = S_Fellow_Expense / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b5||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd|,S_Fellow_NetCollection
Function S_Fellow_NetCollection(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_Fellow_NetCollection = WindFunc("S_Fellow_NetCollection", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_Fellow_NetCollection) <> vbString Then
        S_Fellow_NetCollection = S_Fellow_NetCollection / UnitVal_
    End If
End Function

'|fffd||fffd||27c||6f8||fffd|,S_RightsIssue_Price
Function S_RightsIssue_Price(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_RightsIssue_Price = WindFunc("S_RightsIssue_Price", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_RightsIssue_Amount
Function S_RightsIssue_Amount(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_RightsIssue_Amount = WindFunc("S_RightsIssue_Amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_RightsIssue_Amount) <> vbString Then
        S_RightsIssue_Amount = S_RightsIssue_Amount / UnitVal_
    End If
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_RightsIssue_PerShare
Function S_RightsIssue_PerShare(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_RightsIssue_PerShare = WindFunc("S_RightsIssue_PerShare", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||5fc||fffd||271||fffd|,S_RightsIssue_BaseShare
Function S_RightsIssue_BaseShare(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_RightsIssue_BaseShare = WindFunc("S_RightsIssue_BaseShare", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_RightsIssue_BaseShare) <> vbString Then
        S_RightsIssue_BaseShare = S_RightsIssue_BaseShare / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd|,S_RightsIssue_Collection
Function S_RightsIssue_Collection(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_RightsIssue_Collection = WindFunc("S_RightsIssue_Collection", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_RightsIssue_Collection) <> vbString Then
        S_RightsIssue_Collection = S_RightsIssue_Collection / UnitVal_
    End If
End Function

'|fffd||fffd||277||fffd||fffd||fffd|,S_RightsIssue_Expense
Function S_RightsIssue_Expense(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_RightsIssue_Expense = WindFunc("S_RightsIssue_Expense", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_RightsIssue_Expense) <> vbString Then
        S_RightsIssue_Expense = S_RightsIssue_Expense / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b5||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd|,S_RightsIssue_NetCollection
Function S_RightsIssue_NetCollection(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  S_RightsIssue_NetCollection = WindFunc("S_RightsIssue_NetCollection", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(S_RightsIssue_NetCollection) <> vbString Then
        S_RightsIssue_NetCollection = S_RightsIssue_NetCollection / UnitVal_
    End If
End Function

'|fffd||fffd||273||fffd||228||fffd||fffd|,S_RightsIssue_ExDividendDate
Function S_RightsIssue_ExDividendDate(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_RightsIssue_ExDividendDate = WindFunc("S_RightsIssue_ExDividendDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_RightsIssue_ListedDate
Function S_RightsIssue_ListedDate(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  S_RightsIssue_ListedDate = WindFunc("S_RightsIssue_ListedDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, Null, Null, Null, Null)
End Function

'ISIN|fffd||fffd||fffd||fffd|,S_Info_ISINCode
Function S_Info_ISINCode(WINDCODE_ As Variant) As Variant
  S_Info_ISINCode = WindFunc("S_Info_ISINCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||4e2||fffd||fffd||fffd||fffd||fffd||fffd|,S_Info_CompNameEng
Function S_Info_CompNameEng(WINDCODE_ As Variant) As Variant
  S_Info_CompNameEng = WindFunc("S_Info_CompNameEng", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5|,S_Info_Industry_SW
Function S_Info_Industry_SW(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Info_Industry_SW = WindFunc("S_Info_Industry_SW", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Info_Founddate
Function S_Info_Founddate(WINDCODE_ As Variant) As Variant
  S_Info_Founddate = WindFunc("S_Info_Founddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|5e2||fffd||fffd||fffd||2b1||fffd|,S_Info_Capital
Function S_Info_Capital(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Info_Capital = WindFunc("S_Info_Capital", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(S_Info_Capital) <> vbString Then
        S_Info_Capital = S_Info_Capital / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2f4||fffd||fffd||fffd|,S_Info_Chairman
Function S_Info_Chairman(WINDCODE_ As Variant) As Variant
  S_Info_Chairman = WindFunc("S_Info_Chairman", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||3a7|,S_Info_Business
Function S_Info_Business(WINDCODE_ As Variant) As Variant
  S_Info_Business = WindFunc("S_Info_Business", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|2a1||fffd||fffd|,S_Info_Province
Function S_Info_Province(WINDCODE_ As Variant) As Variant
  S_Info_Province = WindFunc("S_Info_Province", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,S_Info_City
Function S_Info_City(WINDCODE_ As Variant) As Variant
  S_Info_City = WindFunc("S_Info_City", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|5e2||fffd||fffd||fffd||5b7|,S_Info_Address
Function S_Info_Address(WINDCODE_ As Variant) As Variant
  S_Info_Address = WindFunc("S_Info_Address", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||ce6b||fffd||fffd||5b7|,S_Info_Office
Function S_Info_Office(WINDCODE_ As Variant) As Variant
  S_Info_Office = WindFunc("S_Info_Office", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b1||fffd|,S_Info_ZipCode
Function S_Info_ZipCode(WINDCODE_ As Variant) As Variant
  S_Info_ZipCode = WindFunc("S_Info_ZipCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||7ef0|,S_Info_Phone
Function S_Info_Phone(WINDCODE_ As Variant) As Variant
  S_Info_Phone = WindFunc("S_Info_Phone", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd|,S_Info_Fax
Function S_Info_Fax(WINDCODE_ As Variant) As Variant
  S_Info_Fax = WindFunc("S_Info_Fax", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||5b7|,S_Info_Email
Function S_Info_Email(WINDCODE_ As Variant) As Variant
  S_Info_Email = WindFunc("S_Info_Email", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||57e|,S_Info_Website
Function S_Info_Website(WINDCODE_ As Variant) As Variant
  S_Info_Website = WindFunc("S_Info_Website", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd||b6||fffd||fffd|,S_Info_Discloser
Function S_Info_Discloser(WINDCODE_ As Variant) As Variant
  S_Info_Discloser = WindFunc("S_Info_Discloser", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||368|A|fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|,S_Share_LiqA_Pct
Function S_Share_LiqA_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Share_LiqA_Pct = WindFunc("S_Share_LiqA_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||368|B|fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|,S_Share_LiqB_Pct
Function S_Share_LiqB_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Share_LiqB_Pct = WindFunc("S_Share_LiqB_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||368|H|fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|,S_Share_LiqH_Pct
Function S_Share_LiqH_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Share_LiqH_Pct = WindFunc("S_Share_LiqH_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||27a||3fc||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|,S_Share_Tradable_Pct
Function S_Share_Tradable_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Share_Tradable_Pct = WindFunc("S_Share_Tradable_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||278||fffd||fffd||fffd||fffd||6f9||277||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|,S_Share_Restricted_Pct
Function S_Share_Restricted_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Share_Restricted_Pct = WindFunc("S_Share_Restricted_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||368||fffd||27a||3fc||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|,S_Share_NonTradable_Pct
Function S_Share_NonTradable_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Share_NonTradable_Pct = WindFunc("S_Share_NonTradable_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||276||fffd||fffd||5b9||279||271||fffd||fffd||fffd||fffd||fffd|,S_Holder_ShareCategory
Function S_Holder_ShareCategory(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Holder_ShareCategory = WindFunc("S_Holder_ShareCategory", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||276||fffd||fffd||5b9||279||271||fffd||fffd||fffd||fffd||fffd|,S_Holder_LiqShareCategory
Function S_Holder_LiqShareCategory(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Holder_LiqShareCategory = WindFunc("S_Holder_LiqShareCategory", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,S_Holder_AvgNum
Function S_Holder_AvgNum(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Holder_AvgNum = WindFunc("S_Holder_AvgNum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Holder_AvgNum) <> vbString Then
        S_Holder_AvgNum = S_Holder_AvgNum / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd|,S_Holder_AvgPct
Function S_Holder_AvgPct(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Holder_AvgPct = WindFunc("S_Holder_AvgPct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd||fffd||fffd|,S_Holder_AvgPctChange
Function S_Holder_AvgPctChange(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Holder_AvgPctChange = WindFunc("S_Holder_AvgPctChange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6b1||fffd||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,S_Stm_IssuingDate
Function S_Stm_IssuingDate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_Stm_IssuingDate = WindFunc("S_Stm_IssuingDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4b5||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd|,S_ProfitNotice_Style
Function S_ProfitNotice_Style(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_ProfitNotice_Style = WindFunc("S_ProfitNotice_Style", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4b5||fffd||fffd||524||fffd||fffd||56a||4aa|,S_ProfitNotice_Abstract
Function S_ProfitNotice_Abstract(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_ProfitNotice_Abstract = WindFunc("S_ProfitNotice_Abstract", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|524||fffd||6fbb||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,S_ProfitNotice_ChangeRatio
Function S_ProfitNotice_ChangeRatio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_ProfitNotice_ChangeRatio = WindFunc("S_ProfitNotice_ChangeRatio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgBPS
Function S_Est_AvgBPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_AvgBPS = WindFunc("S_Est_AvgBPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_AvgBPS) <> vbString Then
        S_Est_AvgBPS = S_Est_AvgBPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgCPS
Function S_Est_AvgCPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_AvgCPS = WindFunc("S_Est_AvgCPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_AvgCPS) <> vbString Then
        S_Est_AvgCPS = S_Est_AvgCPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgDPS
Function S_Est_AvgDPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_AvgDPS = WindFunc("S_Est_AvgDPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_AvgDPS) <> vbString Then
        S_Est_AvgDPS = S_Est_AvgDPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgOperatingProfit
Function S_Est_AvgOperatingProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_AvgOperatingProfit = WindFunc("S_Est_AvgOperatingProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_AvgOperatingProfit) <> vbString Then
        S_Est_AvgOperatingProfit = S_Est_AvgOperatingProfit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgEBIT
Function S_Est_AvgEBIT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_AvgEBIT = WindFunc("S_Est_AvgEBIT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_AvgEBIT) <> vbString Then
        S_Est_AvgEBIT = S_Est_AvgEBIT / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgEBITDA
Function S_Est_AvgEBITDA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_AvgEBITDA = WindFunc("S_Est_AvgEBITDA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_AvgEBITDA) <> vbString Then
        S_Est_AvgEBITDA = S_Est_AvgEBITDA / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgEBT
Function S_Est_AvgEBT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_AvgEBT = WindFunc("S_Est_AvgEBT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_AvgEBT) <> vbString Then
        S_Est_AvgEBT = S_Est_AvgEBT / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgROA
Function S_Est_AvgROA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_AvgROA = WindFunc("S_Est_AvgROA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||6fa||fffd||5b5|),S_Est_AvgROE
Function S_Est_AvgROE(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_AvgROE = WindFunc("S_Est_AvgROE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdEPS
Function S_Est_StdEPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_StdEPS = WindFunc("S_Est_StdEPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdSales
Function S_Est_StdSales(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdSales = WindFunc("S_Est_StdSales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdSales) <> vbString Then
        S_Est_StdSales = S_Est_StdSales / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdNetProfit
Function S_Est_StdNetProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdNetProfit = WindFunc("S_Est_StdNetProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdNetProfit) <> vbString Then
        S_Est_StdNetProfit = S_Est_StdNetProfit / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdBPS
Function S_Est_StdBPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdBPS = WindFunc("S_Est_StdBPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdBPS) <> vbString Then
        S_Est_StdBPS = S_Est_StdBPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdCPS
Function S_Est_StdCPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdCPS = WindFunc("S_Est_StdCPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdCPS) <> vbString Then
        S_Est_StdCPS = S_Est_StdCPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdDPS
Function S_Est_StdDPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdDPS = WindFunc("S_Est_StdDPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdDPS) <> vbString Then
        S_Est_StdDPS = S_Est_StdDPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdOperatingProfit
Function S_Est_StdOperatingProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdOperatingProfit = WindFunc("S_Est_StdOperatingProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdOperatingProfit) <> vbString Then
        S_Est_StdOperatingProfit = S_Est_StdOperatingProfit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdEBIT
Function S_Est_StdEBIT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdEBIT = WindFunc("S_Est_StdEBIT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdEBIT) <> vbString Then
        S_Est_StdEBIT = S_Est_StdEBIT / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdEBITDA
Function S_Est_StdEBITDA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdEBITDA = WindFunc("S_Est_StdEBITDA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdEBITDA) <> vbString Then
        S_Est_StdEBITDA = S_Est_StdEBITDA / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdEBT
Function S_Est_StdEBT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_StdEBT = WindFunc("S_Est_StdEBT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_StdEBT) <> vbString Then
        S_Est_StdEBT = S_Est_StdEBT / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdROA
Function S_Est_StdROA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_StdROA = WindFunc("S_Est_StdROA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd|),S_Est_StdROE
Function S_Est_StdROE(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_StdROE = WindFunc("S_Est_StdROE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_mediandps
Function s_west_mediandps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_mediandps = WindFunc("s_west_mediandps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_mediandps) <> vbString Then
        s_west_mediandps = s_west_mediandps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd||1bd||fffd||fffd||5b5|,s_west_avgbps
Function s_west_avgbps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_avgbps = WindFunc("s_west_avgbps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_avgbps) <> vbString Then
        s_west_avgbps = s_west_avgbps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgcps
Function s_west_avgcps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_avgcps = WindFunc("s_west_avgcps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_avgcps) <> vbString Then
        s_west_avgcps = s_west_avgcps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgdps
Function s_west_avgdps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_avgdps = WindFunc("s_west_avgdps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_avgdps) <> vbString Then
        s_west_avgdps = s_west_avgdps / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgebit
Function s_west_avgebit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_avgebit = WindFunc("s_west_avgebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_avgebit) <> vbString Then
        s_west_avgebit = s_west_avgebit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgebitda
Function s_west_avgebitda(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_avgebitda = WindFunc("s_west_avgebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_avgebitda) <> vbString Then
        s_west_avgebitda = s_west_avgebitda / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||1bd||fffd||fffd||5b5|,s_west_avgebt
Function s_west_avgebt(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_avgebt = WindFunc("s_west_avgebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_avgebt) <> vbString Then
        s_west_avgebt = s_west_avgebt / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgoperatingprofit
Function s_west_avgoperatingprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_avgoperatingprofit = WindFunc("s_west_avgoperatingprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_avgoperatingprofit) <> vbString Then
        s_west_avgoperatingprofit = s_west_avgoperatingprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgroa
Function s_west_avgroa(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_avgroa = WindFunc("s_west_avgroa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgroe
Function s_west_avgroe(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_avgroe = WindFunc("s_west_avgroe", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_eps
Function s_west_eps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_eps = WindFunc("s_west_eps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_instnum
Function s_west_instnum(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_instnum = WindFunc("s_west_instnum", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd||fffd||fffd||fffd||5b5|,s_west_maxbps
Function s_west_maxbps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxbps = WindFunc("s_west_maxbps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxbps) <> vbString Then
        s_west_maxbps = s_west_maxbps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxcps
Function s_west_maxcps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxcps = WindFunc("s_west_maxcps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxcps) <> vbString Then
        s_west_maxcps = s_west_maxcps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxdps
Function s_west_maxdps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxdps = WindFunc("s_west_maxdps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxdps) <> vbString Then
        s_west_maxdps = s_west_maxdps / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxebit
Function s_west_maxebit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxebit = WindFunc("s_west_maxebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxebit) <> vbString Then
        s_west_maxebit = s_west_maxebit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxebitda
Function s_west_maxebitda(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxebitda = WindFunc("s_west_maxebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxebitda) <> vbString Then
        s_west_maxebitda = s_west_maxebitda / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||fffd||5b5|,s_west_maxebt
Function s_west_maxebt(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxebt = WindFunc("s_west_maxebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxebt) <> vbString Then
        s_west_maxebt = s_west_maxebt / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxeps
Function s_west_maxeps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_maxeps = WindFunc("s_west_maxeps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxnetprofit
Function s_west_maxnetprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxnetprofit = WindFunc("s_west_maxnetprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxnetprofit) <> vbString Then
        s_west_maxnetprofit = s_west_maxnetprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxoperatingprofit
Function s_west_maxoperatingprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxoperatingprofit = WindFunc("s_west_maxoperatingprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxoperatingprofit) <> vbString Then
        s_west_maxoperatingprofit = s_west_maxoperatingprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxroa
Function s_west_maxroa(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_maxroa = WindFunc("s_west_maxroa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxroe
Function s_west_maxroe(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_maxroe = WindFunc("s_west_maxroe", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxsales
Function s_west_maxsales(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_maxsales = WindFunc("s_west_maxsales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_maxsales) <> vbString Then
        s_west_maxsales = s_west_maxsales / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,s_west_medianbps
Function s_west_medianbps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_medianbps = WindFunc("s_west_medianbps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_medianbps) <> vbString Then
        s_west_medianbps = s_west_medianbps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_mediancps
Function s_west_mediancps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_mediancps = WindFunc("s_west_mediancps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_mediancps) <> vbString Then
        s_west_mediancps = s_west_mediancps / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianebit
Function s_west_medianebit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_medianebit = WindFunc("s_west_medianebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_medianebit) <> vbString Then
        s_west_medianebit = s_west_medianebit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianebitda
Function s_west_medianebitda(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, Perild_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_medianebitda = WindFunc("s_west_medianebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), Perild_)
    If VarType(s_west_medianebitda) <> vbString Then
        s_west_medianebitda = s_west_medianebitda / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||5b5|,s_west_medianebt
Function s_west_medianebt(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_medianebt = WindFunc("s_west_medianebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_medianebt) <> vbString Then
        s_west_medianebt = s_west_medianebt / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianeps
Function s_west_medianeps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_medianeps = WindFunc("s_west_medianeps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_mediannetprofit
Function s_west_mediannetprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_mediannetprofit = WindFunc("s_west_mediannetprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_mediannetprofit) <> vbString Then
        s_west_mediannetprofit = s_west_mediannetprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianoperatingprofit
Function s_west_medianoperatingprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_medianoperatingprofit = WindFunc("s_west_medianoperatingprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_medianoperatingprofit) <> vbString Then
        s_west_medianoperatingprofit = s_west_medianoperatingprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianroa
Function s_west_medianroa(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_medianroa = WindFunc("s_west_medianroa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianroe
Function s_west_medianroe(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_medianroe = WindFunc("s_west_medianroe", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_mediansales
Function s_west_mediansales(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_mediansales = WindFunc("s_west_mediansales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_mediansales) <> vbString Then
        s_west_mediansales = s_west_mediansales / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd||fffd||fffd||421||5b5|,s_west_minbps
Function s_west_minbps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_minbps = WindFunc("s_west_minbps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_minbps) <> vbString Then
        s_west_minbps = s_west_minbps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_mincps
Function s_west_mincps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_mincps = WindFunc("s_west_mincps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_mincps) <> vbString Then
        s_west_mincps = s_west_mincps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_mindps
Function s_west_mindps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_mindps = WindFunc("s_west_mindps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_mindps) <> vbString Then
        s_west_mindps = s_west_mindps / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minebit
Function s_west_minebit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_minebit = WindFunc("s_west_minebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_minebit) <> vbString Then
        s_west_minebit = s_west_minebit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minebitda
Function s_west_minebitda(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_minebitda = WindFunc("s_west_minebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_minebitda) <> vbString Then
        s_west_minebitda = s_west_minebitda / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||421||5b5|,s_west_minebt
Function s_west_minebt(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_minebt = WindFunc("s_west_minebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_minebt) <> vbString Then
        s_west_minebt = s_west_minebt / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_mineps
Function s_west_mineps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_mineps = WindFunc("s_west_mineps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minnetprofit
Function s_west_minnetprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_minnetprofit = WindFunc("s_west_minnetprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_minnetprofit) <> vbString Then
        s_west_minnetprofit = s_west_minnetprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minoperatingprofit
Function s_west_minoperatingprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_minoperatingprofit = WindFunc("s_west_minoperatingprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_minoperatingprofit) <> vbString Then
        s_west_minoperatingprofit = s_west_minoperatingprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minroa
Function s_west_minroa(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_minroa = WindFunc("s_west_minroa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minroe
Function s_west_minroe(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_minroe = WindFunc("s_west_minroe", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minsales
Function s_west_minsales(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_minsales = WindFunc("s_west_minsales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_minsales) <> vbString Then
        s_west_minsales = s_west_minsales / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_netprofit
Function s_west_netprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_netprofit = WindFunc("s_west_netprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_netprofit) <> vbString Then
        s_west_netprofit = s_west_netprofit / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||6be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,s_west_netprofit_downgrade
Function s_west_netprofit_downgrade(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_netprofit_downgrade = WindFunc("s_west_netprofit_downgrade", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|4bb||fffd||fffd||fffd||6be||fffd||fffd||fffd||fffd||fffd||3ac||fffd||5bc||fffd||fffd||fffd|,s_west_netprofit_maintain
Function s_west_netprofit_maintain(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_netprofit_maintain = WindFunc("s_west_netprofit_maintain", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|4bb||fffd||fffd||fffd||6be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,s_west_netprofit_upgrade
Function s_west_netprofit_upgrade(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_netprofit_upgrade = WindFunc("s_west_netprofit_upgrade", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_sales
Function s_west_sales(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_sales = WindFunc("s_west_sales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_sales) <> vbString Then
        s_west_sales = s_west_sales / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,s_west_sales_downgrade
Function s_west_sales_downgrade(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_sales_downgrade = WindFunc("s_west_sales_downgrade", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||3ac||fffd||5bc||fffd||fffd||fffd|,s_west_sales_maintain
Function s_west_sales_maintain(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_sales_maintain = WindFunc("s_west_sales_maintain", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,s_west_sales_upgrade
Function s_west_sales_upgrade(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_sales_upgrade = WindFunc("s_west_sales_upgrade", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdbps
Function s_west_stdbps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdbps = WindFunc("s_west_stdbps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdbps) <> vbString Then
        s_west_stdbps = s_west_stdbps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdcps
Function s_west_stdcps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdcps = WindFunc("s_west_stdcps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdcps) <> vbString Then
        s_west_stdcps = s_west_stdcps / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stddps
Function s_west_stddps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stddps = WindFunc("s_west_stddps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stddps) <> vbString Then
        s_west_stddps = s_west_stddps / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdebit
Function s_west_stdebit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdebit = WindFunc("s_west_stdebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdebit) <> vbString Then
        s_west_stdebit = s_west_stdebit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdebitda
Function s_west_stdebitda(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdebitda = WindFunc("s_west_stdebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdebitda) <> vbString Then
        s_west_stdebitda = s_west_stdebitda / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||5fc||fffd||fffd|,s_west_stdebt
Function s_west_stdebt(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdebt = WindFunc("s_west_stdebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdebt) <> vbString Then
        s_west_stdebt = s_west_stdebt / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdeps
Function s_west_stdeps(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_stdeps = WindFunc("s_west_stdeps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdnetprofit
Function s_west_stdnetprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdnetprofit = WindFunc("s_west_stdnetprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdnetprofit) <> vbString Then
        s_west_stdnetprofit = s_west_stdnetprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdoperatingprofit
Function s_west_stdoperatingprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdoperatingprofit = WindFunc("s_west_stdoperatingprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdoperatingprofit) <> vbString Then
        s_west_stdoperatingprofit = s_west_stdoperatingprofit / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd|,s_west_stdroa
Function s_west_stdroa(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_stdroa = WindFunc("s_west_stdroa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd|,s_west_stdroe
Function s_west_stdroe(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_stdroe = WindFunc("s_west_stdroe", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdsales
Function s_west_stdsales(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_west_stdsales = WindFunc("s_west_stdsales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
    If VarType(s_west_stdsales) <> vbString Then
        s_west_stdsales = s_west_stdsales / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_yoynetprofit
Function s_west_yoynetprofit(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_yoynetprofit = WindFunc("s_west_yoynetprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_yoysales
Function s_west_yoysales(WINDCODE_ As Variant, Year_ As Integer, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_west_yoysales = WindFunc("s_west_yoysales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), PERIOD_)
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wrating_avgchn
Function s_wrating_avgchn(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_wrating_avgchn = WindFunc("s_wrating_avgchn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd|(|4e2||fffd||fffd|),s_wrating_avgeng
Function s_wrating_avgeng(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_wrating_avgeng = WindFunc("s_wrating_avgeng", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function


'''''''''''''''''''''''
'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianEPS
Function S_Est_MedianEPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MedianEPS = WindFunc("S_Est_MedianEPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxEPS
Function S_Est_MaxEPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MaxEPS = WindFunc("S_Est_MaxEPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinEPS
Function S_Est_MinEPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MinEPS = WindFunc("S_Est_MinEPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianSales
Function S_Est_MedianSales(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianSales = WindFunc("S_Est_MedianSales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianSales) <> vbString Then
        S_Est_MedianSales = S_Est_MedianSales / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxSales
Function S_Est_MaxSales(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxSales = WindFunc("S_Est_MaxSales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxSales) <> vbString Then
        S_Est_MaxSales = S_Est_MaxSales / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinSales
Function S_Est_MinSales(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinSales = WindFunc("S_Est_MinSales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinSales) <> vbString Then
        S_Est_MinSales = S_Est_MinSales / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Est_YoYSales
Function S_Est_YoYSales(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
 S_Est_YoYSales = WindFunc("S_Est_YoYSales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianNetProfit
Function S_Est_MedianNetProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianNetProfit = WindFunc("S_Est_MedianNetProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianNetProfit) <> vbString Then
        S_Est_MedianNetProfit = S_Est_MedianNetProfit / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxNetProfit
Function S_Est_MaxNetProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxNetProfit = WindFunc("S_Est_MaxNetProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxNetProfit) <> vbString Then
        S_Est_MaxNetProfit = S_Est_MaxNetProfit / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinNetProfit
Function S_Est_MinNetProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinNetProfit = WindFunc("S_Est_MinNetProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinNetProfit) <> vbString Then
        S_Est_MinNetProfit = S_Est_MinNetProfit / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Est_YoYNetProfit
Function S_Est_YoYNetProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_YoYNetProfit = WindFunc("S_Est_YoYNetProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianOperatingProfit
Function S_Est_MedianOperatingProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianOperatingProfit = WindFunc("S_Est_MedianOperatingProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianOperatingProfit) <> vbString Then
        S_Est_MedianOperatingProfit = S_Est_MedianOperatingProfit / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxOperatingProfit
Function S_Est_MaxOperatingProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxOperatingProfit = WindFunc("S_Est_MaxOperatingProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxOperatingProfit) <> vbString Then
        S_Est_MaxOperatingProfit = S_Est_MaxOperatingProfit / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinOperatingProfit
Function S_Est_MinOperatingProfit(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinOperatingProfit = WindFunc("S_Est_MinOperatingProfit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinOperatingProfit) <> vbString Then
        S_Est_MinOperatingProfit = S_Est_MinOperatingProfit / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianEBIT
Function S_Est_MedianEBIT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianEBIT = WindFunc("S_Est_MedianEBIT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianEBIT) <> vbString Then
        S_Est_MedianEBIT = S_Est_MedianEBIT / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxEBIT
Function S_Est_MaxEBIT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxEBIT = WindFunc("S_Est_MaxEBIT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxEBIT) <> vbString Then
        S_Est_MaxEBIT = S_Est_MaxEBIT / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinEBIT
Function S_Est_MinEBIT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinEBIT = WindFunc("S_Est_MinEBIT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinEBIT) <> vbString Then
        S_Est_MinEBIT = S_Est_MinEBIT / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianEBITDA
Function S_Est_MedianEBITDA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianEBITDA = WindFunc("S_Est_MedianEBITDA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianEBITDA) <> vbString Then
        S_Est_MedianEBITDA = S_Est_MedianEBITDA / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxEBITDA
Function S_Est_MaxEBITDA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxEBITDA = WindFunc("S_Est_MaxEBITDA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxEBITDA) <> vbString Then
        S_Est_MaxEBITDA = S_Est_MaxEBITDA / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinEBITDA
Function S_Est_MinEBITDA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinEBITDA = WindFunc("S_Est_MinEBITDA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinEBITDA) <> vbString Then
        S_Est_MinEBITDA = S_Est_MinEBITDA / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||fffd||5b5|),S_Est_MedianEBT
Function S_Est_MedianEBT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianEBT = WindFunc("S_Est_MedianEBT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianEBT) <> vbString Then
        S_Est_MedianEBT = S_Est_MedianEBT / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxEBT
Function S_Est_MaxEBT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxEBT = WindFunc("S_Est_MaxEBT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxEBT) <> vbString Then
        S_Est_MaxEBT = S_Est_MaxEBT / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||fffd||421||5b5|),S_Est_MinEBT
Function S_Est_MinEBT(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinEBT = WindFunc("S_Est_MinEBT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinEBT) <> vbString Then
        S_Est_MinEBT = S_Est_MinEBT / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianROA
Function S_Est_MedianROA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MedianROA = WindFunc("S_Est_MedianROA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxROA
Function S_Est_MaxROA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MaxROA = WindFunc("S_Est_MaxROA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinROA
Function S_Est_MinROA(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MinROA = WindFunc("S_Est_MinROA", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianROE
Function S_Est_MedianROE(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MedianROE = WindFunc("S_Est_MedianROE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxROE
Function S_Est_MaxROE(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MaxROE = WindFunc("S_Est_MaxROE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||2fbb||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinROE
Function S_Est_MinROE(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_MinROE = WindFunc("S_Est_MinROE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||fffd||5b5|),S_Est_MedianBPS
Function S_Est_MedianBPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianBPS = WindFunc("S_Est_MedianBPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianBPS) <> vbString Then
        S_Est_MedianBPS = S_Est_MedianBPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxBPS
Function S_Est_MaxBPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxBPS = WindFunc("S_Est_MaxBPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxBPS) <> vbString Then
        S_Est_MaxBPS = S_Est_MaxBPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||fffd||421||5b5|),S_Est_MinBPS
Function S_Est_MinBPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinBPS = WindFunc("S_Est_MinBPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinBPS) <> vbString Then
        S_Est_MinBPS = S_Est_MinBPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianCPS
Function S_Est_MedianCPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianCPS = WindFunc("S_Est_MedianCPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianCPS) <> vbString Then
        S_Est_MedianCPS = S_Est_MedianCPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxCPS
Function S_Est_MaxCPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxCPS = WindFunc("S_Est_MaxCPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxCPS) <> vbString Then
        S_Est_MaxCPS = S_Est_MaxCPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinCPS
Function S_Est_MinCPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinCPS = WindFunc("S_Est_MinCPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinCPS) <> vbString Then
        S_Est_MinCPS = S_Est_MinCPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|fffd||fffd||5b5|),S_Est_MedianDPS
Function S_Est_MedianDPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MedianDPS = WindFunc("S_Est_MedianDPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MedianDPS) <> vbString Then
        S_Est_MedianDPS = S_Est_MedianDPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|fffd||fffd||fffd||5b5|),S_Est_MaxDPS
Function S_Est_MaxDPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MaxDPS = WindFunc("S_Est_MaxDPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MaxDPS) <> vbString Then
        S_Est_MaxDPS = S_Est_MaxDPS / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|fffd||fffd||421||5b5|),S_Est_MinDPS
Function S_Est_MinDPS(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_Est_MinDPS = WindFunc("S_Est_MinDPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
    If VarType(S_Est_MinDPS) <> vbString Then
        S_Est_MinDPS = S_Est_MinDPS / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,S_Est_Sales_upgrade
Function S_Est_Sales_upgrade(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_Sales_upgrade = WindFunc("S_Est_Sales_upgrade", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,S_Est_Sales_downgrade
Function S_Est_Sales_downgrade(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_Sales_downgrade = WindFunc("S_Est_Sales_downgrade", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||3ac||fffd||5bc||fffd||fffd||fffd|,S_Est_Sales_maintain
Function S_Est_Sales_maintain(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_Sales_maintain = WindFunc("S_Est_Sales_maintain", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||6be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,S_Est_NetProfit_upgrade
Function S_Est_NetProfit_upgrade(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_NetProfit_upgrade = WindFunc("S_Est_NetProfit_upgrade", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||6be||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,S_Est_NetProfit_downgrade
Function S_Est_NetProfit_downgrade(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_NetProfit_downgrade = WindFunc("S_Est_NetProfit_downgrade", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||6be||fffd||fffd||fffd||fffd||fffd||3ac||fffd||5bc||fffd||fffd||fffd|,S_Est_NetProfit_maintain
Function S_Est_NetProfit_maintain(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant) As Variant
  S_Est_NetProfit_maintain = WindFunc("S_Est_NetProfit_maintain", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,s_wrating_upgrade
Function s_wrating_upgrade(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_wrating_upgrade = WindFunc("s_wrating_upgrade", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,s_wrating_downgrade
Function s_wrating_downgrade(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_wrating_downgrade = WindFunc("s_wrating_downgrade", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3ac||fffd||5bc||fffd||fffd||fffd|,s_wrating_maintain
Function s_wrating_maintain(WINDCODE_ As Variant, DATE_ As Variant, PERIOD_ As Integer) As Variant
  s_wrating_maintain = WindFunc("s_wrating_maintain", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), PERIOD_)
End Function

'|ff||fffd||277||5ba||fffd||fffd||fffd||5ea|,S_DIV_CashAndStock
Function S_DIV_CashAndStock(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_DIV_CashAndStock = WindFunc("S_DIV_CashAndStock", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|3b4||fffd||5ce5||fffd||fffd||5ea||56e||fffd||fffd||fffd||fffd|,S_RelatedCB_Code
Function S_RelatedCB_Code(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_RelatedCB_Code = WindFunc("S_RelatedCB_Code", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|3b4||fffd||5ce5||fffd||fffd||5ea||56e||fffd||fffd||fffd|,S_RelatedCB_Name
Function S_RelatedCB_Name(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_RelatedCB_Name = WindFunc("S_RelatedCB_Name", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|3b4||fffd||5ce5||fffd||fffd||5ea||56e||fffd||fffd||fffd||fffd|,S_RelatedCB_Amount
Function S_RelatedCB_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_RelatedCB_Amount = WindFunc("S_RelatedCB_Amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(S_RelatedCB_Amount) <> vbString Then
        S_RelatedCB_Amount = S_RelatedCB_Amount / UnitVal_
    End If
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||6f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_EPS_EXBASIC
Function S_FA_EPS_EXBASIC(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EPS_EXBASIC = WindFunc("S_FA_EPS_EXBASIC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||6f3||fffd||fffd||fffd||3e1||fffd||fffd|,S_FA_EPS_EXDiluted
Function S_FA_EPS_EXDiluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EPS_EXDiluted = WindFunc("S_FA_EPS_EXDiluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||6f3||fffd||fffd||fffd||fffd||fffd||129||fffd||271||fffd||32f||fffd||fffd|,S_FA_EPS_EXDiluted2
Function S_FA_EPS_EXDiluted2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_EPS_EXDiluted2 = WindFunc("S_FA_EPS_EXDiluted2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||63bf9||fffd||228||fffd||fffd||5b5|,S_FA_NetDebttoEV
Function S_FA_NetDebttoEV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_FA_NetDebttoEV = WindFunc("S_FA_NetDebttoEV", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||56e||fffd||63bf9||fffd||228||fffd||fffd||5b5|,S_FA_InterestDebttoEV
Function S_FA_InterestDebttoEV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_FA_InterestDebttoEV = WindFunc("S_FA_InterestDebttoEV", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(|fffd||fffd||228|),S_FA_ROE_basic
Function S_FA_ROE_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROE_basic = WindFunc("S_FA_ROE_basic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(|32f||fffd||fffd|),S_FA_ROE_diluted
Function S_FA_ROE_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROE_diluted = WindFunc("S_FA_ROE_diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(|fffd||6f3||fffd||fffd||fffd||fffd||fffd||228|),S_FA_ROE_Exbasic
Function S_FA_ROE_Exbasic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROE_Exbasic = WindFunc("S_FA_ROE_Exbasic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(|fffd||6f3||fffd||fffd||fffd||32f||fffd||fffd|),S_FA_ROE_Exdiluted
Function S_FA_ROE_Exdiluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_ROE_Exdiluted = WindFunc("S_FA_ROE_Exdiluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_YOY_TR
Function S_FA_YOY_TR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YOY_TR = WindFunc("S_FA_YOY_TR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_FA_YOY_OR
Function S_FA_YOY_OR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_FA_YOY_OR = WindFunc("S_FA_YOY_OR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS,S_QFA_EPS
Function S_QFA_EPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_EPS = WindFunc("S_QFA_EPS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|,S_QFA_DEDUCTEDPROFIT
Function S_QFA_DEDUCTEDPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_QFA_DEDUCTEDPROFIT = WindFunc("S_QFA_DEDUCTEDPROFIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_QFA_DEDUCTEDPROFIT) <> vbString Then
        S_QFA_DEDUCTEDPROFIT = S_QFA_DEDUCTEDPROFIT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_OPERATEINCOME
Function S_QFA_OPERATEINCOME(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_QFA_OPERATEINCOME = WindFunc("S_QFA_OPERATEINCOME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_QFA_OPERATEINCOME) <> vbString Then
        S_QFA_OPERATEINCOME = S_QFA_OPERATEINCOME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_INVESTINCOME
Function S_QFA_INVESTINCOME(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_QFA_INVESTINCOME = WindFunc("S_QFA_INVESTINCOME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_QFA_INVESTINCOME) <> vbString Then
        S_QFA_INVESTINCOME = S_QFA_INVESTINCOME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE,S_QFA_ROE
Function S_QFA_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_ROE = WindFunc("S_QFA_ROE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),S_QFA_ROE_Deducted
Function S_QFA_ROE_Deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_ROE_Deducted = WindFunc("S_QFA_ROE_Deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROA,S_QFA_ROA
Function S_QFA_ROA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_ROA = WindFunc("S_QFA_ROA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|,S_QFA_NetProfitMargin
Function S_QFA_NetProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_NetProfitMargin = WindFunc("S_QFA_NetProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|,S_QFA_GrossProfitMargin
Function S_QFA_GrossProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_GrossProfitMargin = WindFunc("S_QFA_GrossProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||733||271||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_GCToGR
Function S_QFA_GCToGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_GCToGR = WindFunc("S_QFA_GCToGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_OPToGR
Function S_QFA_OPToGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_OPToGR = WindFunc("S_QFA_OPToGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_ProfitToGR
Function S_QFA_ProfitToGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_ProfitToGR = WindFunc("S_QFA_ProfitToGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_OPERATEEXPENSETOGR
Function S_QFA_OPERATEEXPENSETOGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_OPERATEEXPENSETOGR = WindFunc("S_QFA_OPERATEEXPENSETOGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_ADMINEXPENSETOGR
Function S_QFA_ADMINEXPENSETOGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_ADMINEXPENSETOGR = WindFunc("S_QFA_ADMINEXPENSETOGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||e3||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_FINAEXPENSETOGR
Function S_QFA_FINAEXPENSETOGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_FINAEXPENSETOGR = WindFunc("S_QFA_FINAEXPENSETOGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||68ef||fffd||fffd||fffd||fffd||fffd||736||fffd|,S_QFA_OPERATEINCOMETOEBT
Function S_QFA_OPERATEINCOMETOEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_QFA_OPERATEINCOMETOEBT = WindFunc("S_QFA_OPERATEINCOMETOEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_QFA_OPERATEINCOMETOEBT) <> vbString Then
        S_QFA_OPERATEINCOMETOEBT = S_QFA_OPERATEINCOMETOEBT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||68ef||fffd||fffd||fffd||fffd||fffd||736||fffd|,S_QFA_INVESTINCOMETOEBT
Function S_QFA_INVESTINCOMETOEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_QFA_INVESTINCOMETOEBT = WindFunc("S_QFA_INVESTINCOMETOEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_QFA_INVESTINCOMETOEBT) <> vbString Then
        S_QFA_INVESTINCOMETOEBT = S_QFA_INVESTINCOMETOEBT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||e3bfe||fffd||fffd||fffd||fffd||fffd|,S_QFA_DEDUCTEDPROFITTOPROFIT
Function S_QFA_DEDUCTEDPROFITTOPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_DEDUCTEDPROFITTOPROFIT = WindFunc("S_QFA_DEDUCTEDPROFITTOPROFIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,S_QFA_SALESCASHINTOOR
Function S_QFA_SALESCASHINTOOR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_SALESCASHINTOOR = WindFunc("S_QFA_SALESCASHINTOOR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||4ea||4b5||fffd||fffd||fffd||fffd|,S_QFA_OCFTOOR
Function S_QFA_OCFTOOR(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_QFA_OCFTOOR = WindFunc("S_QFA_OCFTOOR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_QFA_OCFTOOR) <> vbString Then
        S_QFA_OCFTOOR = S_QFA_OCFTOOR / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_OCFTOOPERATEINCOME
Function S_QFA_OCFTOOPERATEINCOME(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_QFA_OCFTOOPERATEINCOME = WindFunc("S_QFA_OCFTOOPERATEINCOME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(S_QFA_OCFTOOPERATEINCOME) <> vbString Then
        S_QFA_OCFTOOPERATEINCOME = S_QFA_OCFTOOPERATEINCOME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_YOYGR
Function S_QFA_YOYGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_YOYGR = WindFunc("S_QFA_YOYGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||fffd||bef7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_CGRGR
Function S_QFA_CGRGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_CGRGR = WindFunc("S_QFA_CGRGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_YOYSales
Function S_QFA_YOYSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_YOYSales = WindFunc("S_QFA_YOYSales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||bef7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_CGRSales
Function S_QFA_CGRSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_CGRSales = WindFunc("S_QFA_CGRSales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_YOYOP
Function S_QFA_YOYOP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_YOYOP = WindFunc("S_QFA_YOYOP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fbdf1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_CGROP
Function S_QFA_CGROP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_CGROP = WindFunc("S_QFA_CGROP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_YOYPROFIT
Function S_QFA_YOYPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_YOYPROFIT = WindFunc("S_QFA_YOYPROFIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fbdf1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_CGRPROFIT
Function S_QFA_CGRPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_CGRPROFIT = WindFunc("S_QFA_CGRPROFIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_YOYNETPROFIT
Function S_QFA_YOYNETPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_YOYNETPROFIT = WindFunc("S_QFA_YOYNETPROFIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fbdf1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_QFA_CGRNETPROFIT
Function S_QFA_CGRNETPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_QFA_CGRNETPROFIT = WindFunc("S_QFA_CGRNETPROFIT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_Industry_Item
Function S_Segment_Industry_Item(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Segment_Industry_Item = WindFunc("S_Segment_Industry_Item", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_Industry_Sales
Function S_Segment_Industry_Sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_Industry_Sales = WindFunc("S_Segment_Industry_Sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_Industry_Sales) <> vbString Then
        S_Segment_Industry_Sales = S_Segment_Industry_Sales / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||fffd||271||fffd|,S_Segment_Industry_cost
Function S_Segment_Industry_cost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_Industry_cost = WindFunc("S_Segment_Industry_cost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_Industry_cost) <> vbString Then
        S_Segment_Industry_cost = S_Segment_Industry_cost / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_Industry_profit
Function S_Segment_Industry_profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_Industry_profit = WindFunc("S_Segment_Industry_profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_Industry_profit) <> vbString Then
        S_Segment_Industry_profit = S_Segment_Industry_profit / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_product_Item
Function S_Segment_product_Item(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Segment_product_Item = WindFunc("S_Segment_product_Item", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_product_Sales
Function S_Segment_product_Sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_product_Sales = WindFunc("S_Segment_product_Sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_product_Sales) <> vbString Then
        S_Segment_product_Sales = S_Segment_product_Sales / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||fffd||271||fffd|,S_Segment_product_cost
Function S_Segment_product_cost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_product_cost = WindFunc("S_Segment_product_cost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_product_cost) <> vbString Then
        S_Segment_product_cost = S_Segment_product_cost / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_product_profit
Function S_Segment_product_profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_product_profit = WindFunc("S_Segment_product_profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_product_profit) <> vbString Then
        S_Segment_product_profit = S_Segment_product_profit / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_region_Item
Function S_Segment_region_Item(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  S_Segment_region_Item = WindFunc("S_Segment_region_Item", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_region_Sales
Function S_Segment_region_Sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_region_Sales = WindFunc("S_Segment_region_Sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_region_Sales) <> vbString Then
        S_Segment_region_Sales = S_Segment_region_Sales / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||fffd||271||fffd|,S_Segment_region_cost
Function S_Segment_region_cost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_region_cost = WindFunc("S_Segment_region_cost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_region_cost) <> vbString Then
        S_Segment_region_cost = S_Segment_region_cost / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd|,S_Segment_region_profit
Function S_Segment_region_profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_Segment_region_profit = WindFunc("S_Segment_region_profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(S_Segment_region_profit) <> vbString Then
        S_Segment_region_profit = S_Segment_region_profit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b1||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,S_STM_ISSUINGDATE2
Function S_STM_ISSUINGDATE2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  S_STM_ISSUINGDATE2 = WindFunc("S_STM_ISSUINGDATE2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'SEDOL|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_sedolcode
Function s_info_sedolcode(WINDCODE_ As Variant) As Variant
  s_info_sedolcode = WindFunc("s_info_sedolcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|36c||fffd||fffd||2fe|B|fffd||274||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_bsharecode
Function s_info_bsharecode(WINDCODE_ As Variant) As Variant
  s_info_bsharecode = WindFunc("s_info_bsharecode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|36c||fffd||fffd||2fe|B|fffd||27c||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_bsharename
Function s_info_bsharename(WINDCODE_ As Variant) As Variant
  s_info_bsharename = WindFunc("s_info_bsharename", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||1b1||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_stockclass
Function s_info_stockclass(WINDCODE_ As Variant) As Variant
  s_info_stockclass = WindFunc("s_info_stockclass", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||435||635||fffd|(|fffd||fffd||fffd||fffd|),s_info_exchMarket
Function s_info_exchMarket(WINDCODE_ As Variant) As Variant
  s_info_exchMarket = WindFunc("s_info_exchMarket", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|56a||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_delistdate
Function s_info_delistdate(WINDCODE_ As Variant) As Variant
  s_info_delistdate = WindFunc("s_info_delistdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||f1||56a||f1||2b1||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_riskadmonition_date
Function s_info_riskadmonition_date(WINDCODE_ As Variant) As Variant
  s_info_riskadmonition_date = WindFunc("s_info_riskadmonition_date", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null)
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4aa||5b8||fffd||fffd||fffd||277||fffd|(|fffd||fffd||fffd||fffd|),s_info_compIndex
Function s_info_compIndex(WINDCODE_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_info_compIndex = WindFunc("s_info_compIndex", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), LT_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||335||1fc||1fa||fffd|(|fffd||fffd||fffd||fffd|),s_info_registernumber
Function s_info_registernumber(WINDCODE_ As Variant) As Variant
  s_info_registernumber = WindFunc("s_info_registernumber", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||1b7||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_majorproductname
Function s_info_majorproductname(WINDCODE_ As Variant) As Variant
  s_info_majorproductname = WindFunc("s_info_majorproductname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||fffd||1b7||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_majorproducttype
Function s_info_majorproducttype(WINDCODE_ As Variant) As Variant
  s_info_majorproducttype = WindFunc("s_info_majorproducttype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5|(|fffd||fffd||fffd||fffd|),s_info_industry_gx
Function s_info_industry_gx(WINDCODE_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_info_industry_gx = WindFunc("s_info_industry_gx", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), LT_, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_info_crtindpdirector
Function s_info_crtindpdirector(WINDCODE_ As Variant) As Variant
  s_info_crtindpdirector = WindFunc("s_info_crtindpdirector", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_info_frmindpdirector
Function s_info_frmindpdirector(WINDCODE_ As Variant) As Variant
  s_info_frmindpdirector = WindFunc("s_info_frmindpdirector", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||1bb||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_auditor
Function s_info_auditor(WINDCODE_ As Variant) As Variant
  s_info_auditor = WindFunc("s_info_auditor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||279||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_clo
Function s_info_clo(WINDCODE_ As Variant) As Variant
  s_info_clo = WindFunc("s_info_clo", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_info_cpv
Function s_info_cpv(WINDCODE_ As Variant) As Variant
  s_info_cpv = WindFunc("s_info_cpv", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd|(|fffd||fffd||fffd||fffd|),s_share_freeshares
Function s_share_freeshares(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_freeshares = WindFunc("s_share_freeshares", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_freeshares) <> vbString Then
        s_share_freeshares = s_share_freeshares / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|A|fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_restricteda_pct
Function s_share_restricteda_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_restricteda_pct = WindFunc("s_share_restricteda_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'A|fffd||27a||3fc||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_totala_pct
Function s_share_totala_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_totala_pct = WindFunc("s_share_totala_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|B|fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_restrictedb_pct
Function s_share_restrictedb_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_restrictedb_pct = WindFunc("s_share_restrictedb_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'B|fffd||27a||3fc||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_totalb_pct
Function s_share_totalb_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_totalb_pct = WindFunc("s_share_totalb_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|A|fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_otca_pct
Function s_share_otca_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_otca_pct = WindFunc("s_share_otca_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|B|fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_otcb_pct
Function s_share_otcb_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_otcb_pct = WindFunc("s_share_otcb_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||3fc||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_totalotc_pct
Function s_share_totalotc_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_totalotc_pct = WindFunc("s_share_totalotc_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||439||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_oversea_pct
Function s_share_oversea_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_oversea_pct = WindFunc("s_share_oversea_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||4b3||5b9||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_state
Function s_share_rtd_state(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_state = WindFunc("s_share_rtd_state", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_state) <> vbString Then
        s_share_rtd_state = s_share_rtd_state / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||437||fffd||fffd||2f3||5b9||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_statejur
Function s_share_rtd_statejur(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_statejur = WindFunc("s_share_rtd_statejur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_statejur) <> vbString Then
        s_share_rtd_statejur = s_share_rtd_statejur / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b3||5b9||27a||3fc||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_subotherdomes
Function s_share_rtd_subotherdomes(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_subotherdomes = WindFunc("s_share_rtd_subotherdomes", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_subotherdomes) <> vbString Then
        s_share_rtd_subotherdomes = s_share_rtd_subotherdomes / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||6b7||fffd||fffd||2f3||5b9||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_domesjur
Function s_share_rtd_domesjur(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_domesjur = WindFunc("s_share_rtd_domesjur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_domesjur) <> vbString Then
        s_share_rtd_domesjur = s_share_rtd_domesjur / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f9||277||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_inst
Function s_share_rtd_inst(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_inst = WindFunc("s_share_rtd_inst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_inst) <> vbString Then
        s_share_rtd_inst = s_share_rtd_inst / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||23b||fffd||2f3||5b9||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_domesnp
Function s_share_rtd_domesnp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_domesnp = WindFunc("s_share_rtd_domesnp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_domesnp) <> vbString Then
        s_share_rtd_domesnp = s_share_rtd_domesnp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||2b3||5b9||27a||3fc||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_subfrgn
Function s_share_rtd_subfrgn(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_subfrgn = WindFunc("s_share_rtd_subfrgn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_subfrgn) <> vbString Then
        s_share_rtd_subfrgn = s_share_rtd_subfrgn / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||2de8||fffd||2f3||5b9||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_frgnjur
Function s_share_rtd_frgnjur(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_frgnjur = WindFunc("s_share_rtd_frgnjur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_frgnjur) <> vbString Then
        s_share_rtd_frgnjur = s_share_rtd_frgnjur / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||23b||fffd||2f3||5b9||fffd|)(|fffd||fffd||fffd||fffd|),s_share_rtd_frgnnp
Function s_share_rtd_frgnnp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_rtd_frgnnp = WindFunc("s_share_rtd_frgnnp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_rtd_frgnnp) <> vbString Then
        s_share_rtd_frgnnp = s_share_rtd_frgnnp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4b9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_state
Function s_share_ntrd_state(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_state = WindFunc("s_share_ntrd_state", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_state) <> vbString Then
        s_share_ntrd_state = s_share_ntrd_state / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||437||fffd||fffd||2f9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_statjur
Function s_share_ntrd_statjur(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_statjur = WindFunc("s_share_ntrd_statjur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_statjur) <> vbString Then
        s_share_ntrd_statjur = s_share_ntrd_statjur / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||439||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_state_pct
Function s_share_ntrd_state_pct(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_share_ntrd_state_pct = WindFunc("s_share_ntrd_state_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6b7||fffd||fffd||fffd||fffd||2f9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_domesinitor
Function s_share_ntrd_domesinitor(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_domesinitor = WindFunc("s_share_ntrd_domesinitor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_domesinitor) <> vbString Then
        s_share_ntrd_domesinitor = s_share_ntrd_domesinitor / UnitVal_
    End If
End Function

'|13c||fffd||fffd||fffd||fffd||fffd||2f9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_ipojuris
Function s_share_ntrd_ipojuris(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_ipojuris = WindFunc("s_share_ntrd_ipojuris", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_ipojuris) <> vbString Then
        s_share_ntrd_ipojuris = s_share_ntrd_ipojuris / UnitVal_
    End If
End Function

'|4bb||fffd||3de8||fffd||2f9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_genjuris
Function s_share_ntrd_genjuris(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_genjuris = WindFunc("s_share_ntrd_genjuris", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_genjuris) <> vbString Then
        s_share_ntrd_genjuris = s_share_ntrd_genjuris / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_fundbal
Function s_share_ntrd_fundbal(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_fundbal = WindFunc("s_share_ntrd_fundbal", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_fundbal) <> vbString Then
        s_share_ntrd_fundbal = s_share_ntrd_fundbal / UnitVal_
    End If
End Function

'|57d||fffd||fffd||376||fffd||fffd||fffd||7f3||5b9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_strtinvestor
Function s_share_ntrd_strtinvestor(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_strtinvestor = WindFunc("s_share_ntrd_strtinvestor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_strtinvestor) <> vbString Then
        s_share_ntrd_strtinvestor = s_share_ntrd_strtinvestor / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b7||fffd||fffd||2f9||27a||3fc||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_subdomesjur
Function s_share_ntrd_subdomesjur(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_subdomesjur = WindFunc("s_share_ntrd_subdomesjur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_subdomesjur) <> vbString Then
        s_share_ntrd_subdomesjur = s_share_ntrd_subdomesjur / UnitVal_
    End If
End Function

'|fffd||fffd||23b||fffd||2f7||fffd||fffd||fffd||fffd||2f9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_ipoinip
Function s_share_ntrd_ipoinip(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_ipoinip = WindFunc("s_share_ntrd_ipoinip", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_ipoinip) <> vbString Then
        s_share_ntrd_ipoinip = s_share_ntrd_ipoinip / UnitVal_
    End If
End Function

'|5ea||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_trfnshare
Function s_share_ntrd_trfnshare(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_trfnshare = WindFunc("s_share_ntrd_trfnshare", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_trfnshare) <> vbString Then
        s_share_ntrd_trfnshare = s_share_ntrd_trfnshare / UnitVal_
    End If
End Function

'|fffd||7f9||739||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_snormnger
Function s_share_ntrd_snormnger(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_snormnger = WindFunc("s_share_ntrd_snormnger", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_snormnger) <> vbString Then
        s_share_ntrd_snormnger = s_share_ntrd_snormnger / UnitVal_
    End If
End Function

'|fffd||6b2||fffd||5b0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_insderemp
Function s_share_ntrd_insderemp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_insderemp = WindFunc("s_share_ntrd_insderemp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_insderemp) <> vbString Then
        s_share_ntrd_insderemp = s_share_ntrd_insderemp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||239||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_prfshare
Function s_share_ntrd_prfshare(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_prfshare = WindFunc("s_share_ntrd_prfshare", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_prfshare) <> vbString Then
        s_share_ntrd_prfshare = s_share_ntrd_prfshare / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b9||fffd|(|fffd||fffd||fffd||fffd|),s_share_ntrd_nonlstfrgn
Function s_share_ntrd_nonlstfrgn(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_share_ntrd_nonlstfrgn = WindFunc("s_share_ntrd_nonlstfrgn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_share_ntrd_nonlstfrgn) <> vbString Then
        s_share_ntrd_nonlstfrgn = s_share_ntrd_nonlstfrgn / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_qavgchange
Function s_holder_qavgchange(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_holder_qavgchange = WindFunc("s_holder_qavgchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_qavgpctchange
Function s_holder_qavgpctchange(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_holder_qavgpctchange = WindFunc("s_holder_qavgpctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_havgchange
Function s_holder_havgchange(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_holder_havgchange = WindFunc("s_holder_havgchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_havgpctchange
Function s_holder_havgpctchange(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_holder_havgpctchange = WindFunc("s_holder_havgpctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbyinst
Function s_holder_totalbyinst(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbyinst = WindFunc("s_holder_totalbyinst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbyinst) <> vbString Then
        s_holder_totalbyinst = s_holder_totalbyinst / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbyfund
Function s_holder_totalbyfund(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbyfund = WindFunc("s_holder_totalbyfund", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbyfund) <> vbString Then
        s_holder_totalbyfund = s_holder_totalbyfund / UnitVal_
    End If
End Function

'|22f||fffd||333||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbybysec
Function s_holder_totalbybysec(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbybysec = WindFunc("s_holder_totalbybysec", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbybysec) <> vbString Then
        s_holder_totalbybysec = s_holder_totalbybysec / UnitVal_
    End If
End Function

'|22f||fffd||fffd||fffd||fffd||fffd||1b2||fffd||1b7||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbybywmp
Function s_holder_totalbybywmp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbybywmp = WindFunc("s_holder_totalbybywmp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbybywmp) <> vbString Then
        s_holder_totalbybywmp = s_holder_totalbybywmp / UnitVal_
    End If
End Function

'QFII|fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbyqfii
Function s_holder_totalbyqfii(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbyqfii = WindFunc("s_holder_totalbyqfii", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbyqfii) <> vbString Then
        s_holder_totalbyqfii = s_holder_totalbyqfii / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||579||fffd||2fe||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbyinsur
Function s_holder_totalbyinsur(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbyinsur = WindFunc("s_holder_totalbyinsur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbyinsur) <> vbString Then
        s_holder_totalbyinsur = s_holder_totalbyinsur / UnitVal_
    End If
End Function

'|fffd||7c63||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbyssfund
Function s_holder_totalbyssfund(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbyssfund = WindFunc("s_holder_totalbyssfund", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbyssfund) <> vbString Then
        s_holder_totalbyssfund = s_holder_totalbyssfund / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbycorppension
Function s_holder_totalbycorppension(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbycorppension = WindFunc("s_holder_totalbycorppension", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbycorppension) <> vbString Then
        s_holder_totalbycorppension = s_holder_totalbycorppension / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||439||fffd||2fe||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbytrustcorp
Function s_holder_totalbytrustcorp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbytrustcorp = WindFunc("s_holder_totalbytrustcorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbytrustcorp) <> vbString Then
        s_holder_totalbytrustcorp = s_holder_totalbytrustcorp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2fe||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbyfinancecorp
Function s_holder_totalbyfinancecorp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbyfinancecorp = WindFunc("s_holder_totalbyfinancecorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbyfinancecorp) <> vbString Then
        s_holder_totalbyfinancecorp = s_holder_totalbyfinancecorp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||433||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbybank
Function s_holder_totalbybank(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbybank = WindFunc("s_holder_totalbybank", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbybank) <> vbString Then
        s_holder_totalbybank = s_holder_totalbybank / UnitVal_
    End If
End Function

'|4bb||fffd||3de8||fffd||2f3||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbygeneralcorp
Function s_holder_totalbygeneralcorp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbygeneralcorp = WindFunc("s_holder_totalbygeneralcorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbygeneralcorp) <> vbString Then
        s_holder_totalbygeneralcorp = s_holder_totalbygeneralcorp / UnitVal_
    End If
End Function

'|fffd||1fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||439||fffd||2fe||fffd||5b9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_totalbylnfcorp
Function s_holder_totalbylnfcorp(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_holder_totalbylnfcorp = WindFunc("s_holder_totalbylnfcorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_holder_totalbylnfcorp) <> vbString Then
        s_holder_totalbylnfcorp = s_holder_totalbylnfcorp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd||fffd||3fc||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbyinst
Function s_holder_pctbyinst(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbyinst = WindFunc("s_holder_pctbyinst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbyfund
Function s_holder_pctbyfund(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbyfund = WindFunc("s_holder_pctbyfund", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|22f||fffd||333||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbysec
Function s_holder_pctbysec(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbysec = WindFunc("s_holder_pctbysec", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|22f||fffd||fffd||fffd||fffd||fffd||1b2||fffd||1b7||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbybywmp
Function s_holder_pctbybywmp(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbybywmp = WindFunc("s_holder_pctbybywmp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'QFII|fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbyqfii
Function s_holder_pctbyqfii(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbyqfii = WindFunc("s_holder_pctbyqfii", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||579||fffd||2fe||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbyinsur
Function s_holder_pctbyinsur(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbyinsur = WindFunc("s_holder_pctbyinsur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||7c63||fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbyssfund
Function s_holder_pctbyssfund(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbyssfund = WindFunc("s_holder_pctbyssfund", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbycorppension
Function s_holder_pctbycorppension(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbycorppension = WindFunc("s_holder_pctbycorppension", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||439||fffd||2fe||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbytrustcorp
Function s_holder_pctbytrustcorp(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbytrustcorp = WindFunc("s_holder_pctbytrustcorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||2fe||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbyfinancecorp
Function s_holder_pctbyfinancecorp(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbyfinancecorp = WindFunc("s_holder_pctbyfinancecorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||433||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbybank
Function s_holder_pctbybank(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbybank = WindFunc("s_holder_pctbybank", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|4bb||fffd||3de8||fffd||2f3||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbygeneralcorp
Function s_holder_pctbygeneralcorp(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbygeneralcorp = WindFunc("s_holder_pctbygeneralcorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||1fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||439||fffd||2fe||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_pctbylnfcorp
Function s_holder_pctbylnfcorp(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_holder_pctbylnfcorp = WindFunc("s_holder_pctbylnfcorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_dq_freeturnover
Function s_dq_freeturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_dq_freeturnover = WindFunc("s_dq_freeturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_dq_swing
Function s_dq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_dq_swing = WindFunc("s_dq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||537||fffd||fffd||43c||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),s_dq_relipochange
Function s_dq_relipochange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_dq_relipochange = WindFunc("s_dq_relipochange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||537||fffd||fffd||43c||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_dq_relipopctchange
Function s_dq_relipopctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_dq_relipopctchange = WindFunc("s_dq_relipopctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5f4||32c|(|fffd||fffd||fffd||fffd|),s_dq_tradestatus
Function s_dq_tradestatus(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_dq_tradestatus = WindFunc("s_dq_tradestatus", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|363||fffd||fffd||52d||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_dq_suspendreason
Function s_dq_suspendreason(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_dq_suspendreason = WindFunc("s_dq_suspendreason", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_wq_preclose
Function s_wq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_preclose = WindFunc("s_wq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||73f||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_wq_open
Function s_wq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_open = WindFunc("s_wq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),s_wq_high
Function s_wq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_high = WindFunc("s_wq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),s_wq_low
Function s_wq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_low = WindFunc("s_wq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_wq_close
Function s_wq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_close = WindFunc("s_wq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_wq_highclose
Function s_wq_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_highclose = WindFunc("s_wq_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_wq_lowclose
Function s_wq_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_lowclose = WindFunc("s_wq_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||73e||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_avgprice
Function s_wq_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_avgprice = WindFunc("s_wq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_wq_avgprice) <> vbString Then
        s_wq_avgprice = s_wq_avgprice / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),s_wq_change
Function s_wq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_change = WindFunc("s_wq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_wq_change) <> vbString Then
        s_wq_change = s_wq_change / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_pctchange
Function s_wq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_pctchange = WindFunc("s_wq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||73b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_turn
Function s_wq_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_turn = WindFunc("s_wq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||73b||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_freeturnover
Function s_wq_freeturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_freeturnover = WindFunc("s_wq_freeturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_avgturn
Function s_wq_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_avgturn = WindFunc("s_wq_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_freeavgturnover
Function s_wq_freeavgturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_freeavgturnover = WindFunc("s_wq_freeavgturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_volume
Function s_wq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_volume = WindFunc("s_wq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_wq_volume) <> vbString Then
        s_wq_volume = s_wq_volume / UnitVal_
    End If
End Function

'|fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_amount
Function s_wq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_amount = WindFunc("s_wq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_wq_amount) <> vbString Then
        s_wq_amount = s_wq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_swing
Function s_wq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_swing = WindFunc("s_wq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_high_date
Function s_wq_high_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_high_date = WindFunc("s_wq_high_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_low_date
Function s_wq_low_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_low_date = WindFunc("s_wq_low_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_highclose_date
Function s_wq_highclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_highclose_date = WindFunc("s_wq_highclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_wq_lowclose_date
Function s_wq_lowclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_wq_lowclose_date = WindFunc("s_wq_lowclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_mq_preclose
Function s_mq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_preclose = WindFunc("s_mq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||bf||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_mq_open
Function s_mq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_open = WindFunc("s_mq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),s_mq_high
Function s_mq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_high = WindFunc("s_mq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),s_mq_low
Function s_mq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_low = WindFunc("s_mq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_mq_close
Function s_mq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_close = WindFunc("s_mq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_mq_highclose
Function s_mq_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_highclose = WindFunc("s_mq_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_mq_lowclose
Function s_mq_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_lowclose = WindFunc("s_mq_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||be||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_avgprice
Function s_mq_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_avgprice = WindFunc("s_mq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_mq_avgprice) <> vbString Then
        s_mq_avgprice = s_mq_avgprice / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),s_mq_change
Function s_mq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_change = WindFunc("s_mq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_mq_change) <> vbString Then
        s_mq_change = s_mq_change / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_pctchange
Function s_mq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_pctchange = WindFunc("s_mq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||bb||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_turn
Function s_mq_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_turn = WindFunc("s_mq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||bb||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_freeturnover
Function s_mq_freeturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_freeturnover = WindFunc("s_mq_freeturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_avgturn
Function s_mq_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_avgturn = WindFunc("s_mq_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_freeavgturnover
Function s_mq_freeavgturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_freeavgturnover = WindFunc("s_mq_freeavgturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_volume
Function s_mq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_volume = WindFunc("s_mq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_mq_volume) <> vbString Then
        s_mq_volume = s_mq_volume / UnitVal_
    End If
End Function

'|fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_amount
Function s_mq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_amount = WindFunc("s_mq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_mq_amount) <> vbString Then
        s_mq_amount = s_mq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_swing
Function s_mq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_swing = WindFunc("s_mq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_high_date
Function s_mq_high_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_high_date = WindFunc("s_mq_high_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_low_date
Function s_mq_low_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_low_date = WindFunc("s_mq_low_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_highclose_date
Function s_mq_highclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_highclose_date = WindFunc("s_mq_highclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_mq_lowclose_date
Function s_mq_lowclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_mq_lowclose_date = WindFunc("s_mq_lowclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_yq_preclose
Function s_yq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_preclose = WindFunc("s_yq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||afea||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_yq_open
Function s_yq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_open = WindFunc("s_yq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),s_yq_high
Function s_yq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_high = WindFunc("s_yq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),s_yq_low
Function s_yq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_low = WindFunc("s_yq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_yq_close
Function s_yq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_close = WindFunc("s_yq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_yq_highclose
Function s_yq_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_highclose = WindFunc("s_yq_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_yq_lowclose
Function s_yq_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_lowclose = WindFunc("s_yq_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_avgprice
Function s_yq_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_avgprice = WindFunc("s_yq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_yq_avgprice) <> vbString Then
        s_yq_avgprice = s_yq_avgprice / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),s_yq_change
Function s_yq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_change = WindFunc("s_yq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_yq_change) <> vbString Then
        s_yq_change = s_yq_change / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_pctchange
Function s_yq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_pctchange = WindFunc("s_yq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aefb||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_turn
Function s_yq_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_turn = WindFunc("s_yq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aefb||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_freeturnover
Function s_yq_freeturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_freeturnover = WindFunc("s_yq_freeturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_avgturn
Function s_yq_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_avgturn = WindFunc("s_yq_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_freeavgturnover
Function s_yq_freeavgturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_freeavgturnover = WindFunc("s_yq_freeavgturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_volume
Function s_yq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_volume = WindFunc("s_yq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_yq_volume) <> vbString Then
        s_yq_volume = s_yq_volume / UnitVal_
    End If
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_amount
Function s_yq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_amount = WindFunc("s_yq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_yq_amount) <> vbString Then
        s_yq_amount = s_yq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_swing
Function s_yq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_swing = WindFunc("s_yq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_high_date
Function s_yq_high_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_high_date = WindFunc("s_yq_high_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_low_date
Function s_yq_low_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_low_date = WindFunc("s_yq_low_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_highclose_date
Function s_yq_highclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_highclose_date = WindFunc("s_yq_highclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_yq_lowclose_date
Function s_yq_lowclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  s_yq_lowclose_date = WindFunc("s_yq_lowclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_pq_highclose
Function s_pq_highclose(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  s_pq_highclose = WindFunc("s_pq_highclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),s_pq_lowclose
Function s_pq_lowclose(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  s_pq_lowclose = WindFunc("s_pq_lowclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_avgpctchange
Function s_pq_avgpctchange(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  s_pq_avgpctchange = WindFunc("s_pq_avgpctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4efb||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_freeturnover
Function s_pq_freeturnover(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  s_pq_freeturnover = WindFunc("s_pq_freeturnover", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||5fc|.|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_freeavgturnover
Function s_pq_freeavgturnover(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  s_pq_freeavgturnover = WindFunc("s_pq_freeavgturnover", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_swing
Function s_pq_swing(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  s_pq_swing = WindFunc("s_pq_swing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_high_date
Function s_pq_high_date(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  s_pq_high_date = WindFunc("s_pq_high_date", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_low_date
Function s_pq_low_date(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  s_pq_low_date = WindFunc("s_pq_low_date", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_highclose_date
Function s_pq_highclose_date(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  s_pq_highclose_date = WindFunc("s_pq_highclose_date", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_pq_lowclose_date
Function s_pq_lowclose_date(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  s_pq_lowclose_date = WindFunc("s_pq_lowclose_date", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'N|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_pctchange
Function s_nq_pctchange(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant) As Variant
  s_nq_pctchange = WindFunc("s_nq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
End Function

'|fffd||fffd||534||fffd||fffd||fffd|N|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_relpctchange
Function s_nq_relpctchange(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_nq_relpctchange = WindFunc("s_nq_relpctchange", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, LT_, Null, Null)
End Function

'N|fffd||fffd||fffd||57e||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_avgchange
Function s_nq_avgchange(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant) As Variant
  s_nq_avgchange = WindFunc("s_nq_avgchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
End Function

'N|fffd||57b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_turn
Function s_nq_turn(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant) As Variant
  s_nq_turn = WindFunc("s_nq_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
End Function

'N|fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_avgturn
Function s_nq_avgturn(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant) As Variant
  s_nq_avgturn = WindFunc("s_nq_avgturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
End Function

'N|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_swing
Function s_nq_swing(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant) As Variant
  s_nq_swing = WindFunc("s_nq_swing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
End Function

'N|fffd||573||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_volume
Function s_nq_volume(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_nq_volume = WindFunc("s_nq_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
    If VarType(s_nq_volume) <> vbString Then
        s_nq_volume = s_nq_volume / UnitVal_
    End If
End Function

'N|fffd||573||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_nq_amount
Function s_nq_amount(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_nq_amount = WindFunc("s_nq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
    If VarType(s_nq_amount) <> vbString Then
        s_nq_amount = s_nq_amount / UnitVal_
    End If
End Function

'N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||368|A|fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_nq_lowamount
Function s_nq_lowamount(WINDCODE_ As Variant, Optional N_ As Integer = 1, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_nq_lowamount = WindFunc("s_nq_lowamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), N_, Null, Null, Null)
    If VarType(s_nq_lowamount) <> vbString Then
        s_nq_lowamount = s_nq_lowamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_purchasewithborrowedmoney
Function s_margin_purchasewithborrowedmoney(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_purchasewithborrowedmoney = WindFunc("s_margin_purchasewithborrowedmoney", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_purchasewithborrowedmoney) <> vbString Then
        s_margin_purchasewithborrowedmoney = s_margin_purchasewithborrowedmoney / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b3||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_repaymenttobroker
Function s_margin_repaymenttobroker(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_repaymenttobroker = WindFunc("s_margin_repaymenttobroker", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_repaymenttobroker) <> vbString Then
        s_margin_repaymenttobroker = s_margin_repaymenttobroker / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_tradingbalance
Function s_margin_tradingbalance(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_tradingbalance = WindFunc("s_margin_tradingbalance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_tradingbalance) <> vbString Then
        s_margin_tradingbalance = s_margin_tradingbalance / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_salesofborrowedsec
Function s_margin_salesofborrowedsec(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_salesofborrowedsec = WindFunc("s_margin_salesofborrowedsec", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_salesofborrowedsec) <> vbString Then
        s_margin_salesofborrowedsec = s_margin_salesofborrowedsec / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_repaymentofborrowedsec
Function s_margin_repaymentofborrowedsec(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_repaymentofborrowedsec = WindFunc("s_margin_repaymentofborrowedsec", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_repaymentofborrowedsec) <> vbString Then
        s_margin_repaymentofborrowedsec = s_margin_repaymentofborrowedsec / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_seclendingbalancevolume
Function s_margin_seclendingbalancevolume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_seclendingbalancevolume = WindFunc("s_margin_seclendingbalancevolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_seclendingbalancevolume) <> vbString Then
        s_margin_seclendingbalancevolume = s_margin_seclendingbalancevolume / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_seclendingbalance
Function s_margin_seclendingbalance(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_seclendingbalance = WindFunc("s_margin_seclendingbalance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_seclendingbalance) <> vbString Then
        s_margin_seclendingbalance = s_margin_seclendingbalance / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_margin_tradingandseclendingbalance
Function s_margin_tradingandseclendingbalance(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_margin_tradingandseclendingbalance = WindFunc("s_margin_tradingandseclendingbalance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_margin_tradingandseclendingbalance) <> vbString Then
        s_margin_tradingandseclendingbalance = s_margin_tradingandseclendingbalance / UnitVal_
    End If
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|100|fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_avgreturnr100
Function s_risk_avgreturnr100(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_avgreturnr100 = WindFunc("s_risk_avgreturnr100", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|24|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_avgreturnr24
Function s_risk_avgreturnr24(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_avgreturnr24 = WindFunc("s_risk_avgreturnr24", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|60|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_avgreturnr60
Function s_risk_avgreturnr60(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_avgreturnr60 = WindFunc("s_risk_avgreturnr60", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|100|fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_stdevr100
Function s_risk_stdevr100(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_stdevr100 = WindFunc("s_risk_stdevr100", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|24|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_stdevr24
Function s_risk_stdevr24(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_stdevr24 = WindFunc("s_risk_stdevr24", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|60|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_stdevr60
Function s_risk_stdevr60(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_stdevr60 = WindFunc("s_risk_stdevr60", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'BETA|5b5|(|fffd||fffd||fffd|100|fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_betar100
Function s_risk_betar100(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_betar100 = WindFunc("s_risk_betar100", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'BETA|5b5|(|fffd||fffd||fffd|24|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_betar24
Function s_risk_betar24(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_betar24 = WindFunc("s_risk_betar24", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'BETA|5b5|(|fffd||fffd||fffd|60|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_betar60
Function s_risk_betar60(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_risk_betar60 = WindFunc("s_risk_betar60", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|)(|fffd||fffd||fffd||fffd|),s_risk_avgreturny
Function s_risk_avgreturny(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional LT_ As Integer = 1) As Variant
  s_risk_avgreturny = WindFunc("s_risk_avgreturny", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), LT_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|)(|fffd||fffd||fffd||fffd|),s_risk_stdevy
Function s_risk_stdevy(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1) As Variant
  s_risk_stdevy = WindFunc("s_risk_stdevy", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, Null)
End Function

'Beta(|fffd||7b3||fffd||fffd||fffd||fffd||fffd||738||fffd|)(|fffd||fffd||fffd||fffd|),s_risk_betadf
Function s_risk_betadf(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional INDEX_ As String) As Variant
  s_risk_betadf = WindFunc("s_risk_betadf", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, INDEX_)
End Function

'Sharpe(|fffd||fffd||fffd||fffd|),s_risk_sharpe
Function s_risk_sharpe(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  s_risk_sharpe = WindFunc("s_risk_sharpe", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_)
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_rating_avgchn
Function s_rating_avgchn(WINDCODE_ As Variant, TD_ As Variant) As Variant
  s_rating_avgchn = WindFunc("s_rating_avgchn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd|(|4e2||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_rating_avgeng
Function s_rating_avgeng(WINDCODE_ As Variant, TD_ As Variant) As Variant
  s_rating_avgeng = WindFunc("s_rating_avgeng", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Rating_InstNum
Function S_Rating_InstNum(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_InstNum = WindFunc("S_Rating_InstNum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,S_Rating_upgrade
Function S_Rating_upgrade(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_upgrade = WindFunc("S_Rating_upgrade", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,S_Rating_downgrade
Function S_Rating_downgrade(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_downgrade = WindFunc("S_Rating_downgrade", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3ac||fffd||5bc||fffd||fffd||fffd|,S_Rating_maintain
Function S_Rating_maintain(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_maintain = WindFunc("S_Rating_maintain", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Rating_NumOfBuy
Function S_Rating_NumOfBuy(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_NumOfBuy = WindFunc("S_Rating_NumOfBuy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bc||fffd||fffd||fffd|,S_Rating_NumOfOutperform
Function S_Rating_NumOfOutperform(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_NumOfOutperform = WindFunc("S_Rating_NumOfOutperform", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd|,S_Rating_NumOfHold
Function S_Rating_NumOfHold(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_NumOfHold = WindFunc("S_Rating_NumOfHold", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bc||fffd||fffd||fffd|,S_Rating_NumOfUnderperform
Function S_Rating_NumOfUnderperform(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_NumOfUnderperform = WindFunc("S_Rating_NumOfUnderperform", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_Rating_NumOfSell
Function S_Rating_NumOfSell(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  S_Rating_NumOfSell = WindFunc("S_Rating_NumOfSell", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||524||fffd||fffd||2b1||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_est_estnewtime_inst
Function s_est_estnewtime_inst(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_estnewtime_inst = WindFunc("s_est_estnewtime_inst", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), INSTITUTION_, Null, Null)
End Function

'|524||fffd||fffd||fffd||43e||fffd||531|(|fffd||fffd||fffd||fffd|),s_est_estanalyst
Function s_est_estanalyst(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_estanalyst = WindFunc("s_est_estanalyst", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), RPTYEAR_, GetValidDate(DEALDATE_), INSTITUTION_, Null, Null)
End Function

'|fffd||433||fffd||22b||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_anal_mdirty_cnbd
Function B_anal_mdirty_cnbd(WINDCODE_ As Variant, DATE_ As Variant, Optional T_ As Integer = 1) As Variant
  B_anal_mdirty_cnbd = WindFunc("B_anal_mdirty_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), T_, Null, Null, Null)
End Function

'|fffd||433||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_anal_mcnet_cnbd
Function B_anal_mcnet_cnbd(WINDCODE_ As Variant, DATE_ As Variant, Optional T_ As Integer = 1) As Variant
  B_anal_mcnet_cnbd = WindFunc("B_anal_mcnet_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), T_, Null, Null, Null)
End Function

'|fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_anal_mcyield_cnbd
Function B_anal_mcyield_cnbd(WINDCODE_ As Variant, DATE_ As Variant, Optional T_ As Integer = 1) As Variant
  B_anal_mcyield_cnbd = WindFunc("B_anal_mcyield_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,s_est_rptabstract_inst
Function s_est_rptabstract_inst(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Dim ItemStr As String
ItemStr = ComType2ComName(TYPE_)
  s_est_rptabstract_inst = WindFunc("s_est_rptabstract_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_highprice_inst
Function s_est_highprice_inst(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  Dim ItemStr As String
ItemStr = ComType2ComName(TYPE_)
  s_est_highprice_inst = WindFunc("s_est_highprice_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_)
    If VarType(s_est_highprice_inst) <> vbString Then
        s_est_highprice_inst = s_est_highprice_inst / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_lowprice_inst
Function s_est_lowprice_inst(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  Dim ItemStr As String
ItemStr = ComType2ComName(TYPE_)
  s_est_lowprice_inst = WindFunc("s_est_lowprice_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_)
    If VarType(s_est_lowprice_inst) <> vbString Then
        s_est_lowprice_inst = s_est_lowprice_inst / UnitVal_
    End If
End Function

'|1f0||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_prehighprice_inst
Function s_est_prehighprice_inst(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  Dim ItemStr As String
ItemStr = ComType2ComName(TYPE_)
  s_est_prehighprice_inst = WindFunc("s_est_prehighprice_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_)
    If VarType(s_est_prehighprice_inst) <> vbString Then
        s_est_prehighprice_inst = s_est_prehighprice_inst / UnitVal_
    End If
End Function

'|1f0||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_prelowprice_inst
Function s_est_prelowprice_inst(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  Dim ItemStr As String
ItemStr = ComType2ComName(TYPE_)
  s_est_prelowprice_inst = WindFunc("s_est_prelowprice_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_)
    If VarType(s_est_prelowprice_inst) <> vbString Then
        s_est_prelowprice_inst = s_est_prelowprice_inst / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_est_rpttitle_inst
Function s_est_rpttitle_inst(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Dim ItemStr As String
ItemStr = ComType2ComName(TYPE_)
  s_est_rpttitle_inst = WindFunc("s_est_rpttitle_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||5f1||fffd||fffd||fffd|,s_info_currency
Function s_info_currency(WINDCODE_ As Variant) As Variant
  s_info_currency = WindFunc("s_info_currency", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|36c||fffd||fffd||2fe|H|fffd||274||fffd||fffd||fffd|,s_info_hsharecode
Function s_info_hsharecode(WINDCODE_ As Variant) As Variant
  s_info_hsharecode = WindFunc("s_info_hsharecode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|(|52d||2bc|)(|fffd||fffd||fffd||fffd|),s_est_orgrating_inst
Function s_est_orgrating_inst(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_orgrating_inst = WindFunc("s_est_orgrating_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), INSTITUTION_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd||fffd||f7||fffd|)(|fffd||fffd||fffd||fffd|),s_est_scorerating_inst
Function s_est_scorerating_inst(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_scorerating_inst = WindFunc("s_est_scorerating_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), INSTITUTION_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_est_stdrating_inst
Function s_est_stdrating_inst(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_stdrating_inst = WindFunc("s_est_stdrating_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), INSTITUTION_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_est_newratingtime_inst
Function s_est_newratingtime_inst(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_newratingtime_inst = WindFunc("s_est_newratingtime_inst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), INSTITUTION_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5f4||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_est_frstratingtime_inst
Function s_est_frstratingtime_inst(WINDCODE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_frstratingtime_inst = WindFunc("s_est_frstratingtime_inst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), INSTITUTION_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||43e||fffd||531|(|fffd||fffd||fffd||fffd|),s_est_ratinganalyst
Function s_est_ratinganalyst(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional INSTITUTION_ As Integer = 1) As Variant
  Dim ItemStr As String
    ItemStr = ComType2ComName(INSTITUTION_)
  s_est_ratinganalyst = WindFunc("s_est_ratinganalyst", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), INSTITUTION_, Null, Null, Null)
End Function

'|225||fffd||fffd||36c||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_profitnotice_lasteps
Function s_profitnotice_lasteps(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_profitnotice_lasteps = WindFunc("s_profitnotice_lasteps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|4b5||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_profitnotice_date
Function s_profitnotice_date(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_profitnotice_date = WindFunc("s_profitnotice_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|4b5||fffd||fffd||fffd||cc68||fffd||fffd||b6||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_date
Function s_performanceexpress_date(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_performanceexpress_date = WindFunc("s_performanceexpress_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfexincome
Function s_performanceexpress_perfexincome(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_performanceexpress_perfexincome = WindFunc("s_performanceexpress_perfexincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_performanceexpress_perfexincome) <> vbString Then
        s_performanceexpress_perfexincome = s_performanceexpress_perfexincome / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfexprofit
Function s_performanceexpress_perfexprofit(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_performanceexpress_perfexprofit = WindFunc("s_performanceexpress_perfexprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_performanceexpress_perfexprofit) <> vbString Then
        s_performanceexpress_perfexprofit = s_performanceexpress_perfexprofit / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfextotalprofit
Function s_performanceexpress_perfextotalprofit(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_performanceexpress_perfextotalprofit = WindFunc("s_performanceexpress_perfextotalprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_performanceexpress_perfextotalprofit) <> vbString Then
        s_performanceexpress_perfextotalprofit = s_performanceexpress_perfextotalprofit / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfexnetprofittoshareholder
Function s_performanceexpress_perfexnetprofittoshareholder(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_performanceexpress_perfexnetprofittoshareholder = WindFunc("s_performanceexpress_perfexnetprofittoshareholder", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_performanceexpress_perfexnetprofittoshareholder) <> vbString Then
        s_performanceexpress_perfexnetprofittoshareholder = s_performanceexpress_perfexnetprofittoshareholder / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|32f||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfexepsdiluted
Function s_performanceexpress_perfexepsdiluted(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_performanceexpress_perfexepsdiluted = WindFunc("s_performanceexpress_perfexepsdiluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_performanceexpress_perfexepsdiluted) <> vbString Then
        s_performanceexpress_perfexepsdiluted = s_performanceexpress_perfexepsdiluted / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE-|32f||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfexroediluted
Function s_performanceexpress_perfexroediluted(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_performanceexpress_perfexroediluted = WindFunc("s_performanceexpress_perfexroediluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfextotalassets
Function s_performanceexpress_perfextotalassets(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_performanceexpress_perfextotalassets = WindFunc("s_performanceexpress_perfextotalassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_performanceexpress_perfextotalassets) <> vbString Then
        s_performanceexpress_perfextotalassets = s_performanceexpress_perfextotalassets / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||fffd|),s_performanceexpress_perfexnetassets
Function s_performanceexpress_perfexnetassets(WINDCODE_ As Variant, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_performanceexpress_perfexnetassets = WindFunc("s_performanceexpress_perfexnetassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(s_performanceexpress_perfexnetassets) <> vbString Then
        s_performanceexpress_perfexnetassets = s_performanceexpress_perfexnetassets / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fa_dupont_nptosales
Function s_fa_dupont_nptosales(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_nptosales = WindFunc("s_fa_dupont_nptosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fa_dupont_ebittosales
Function s_fa_dupont_ebittosales(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_ebittosales = WindFunc("s_fa_dupont_ebittosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fa_dupont_faturnover
Function s_fa_dupont_faturnover(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_faturnover = WindFunc("s_fa_dupont_faturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(|fffd||fffd||fffd||fffd|),s_fa_dupont_roe
Function s_fa_dupont_roe(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_roe = WindFunc("s_fa_dupont_roe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|228||fffd||fffd||fffd||fffd||fffd|(|fffd||170||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_fa_dupont_assetstoequity
Function s_fa_dupont_assetstoequity(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_assetstoequity = WindFunc("s_fa_dupont_assetstoequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||e3bfe||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fa_dupont_np
Function s_fa_dupont_np(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_np = WindFunc("s_fa_dupont_np", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||fffd||fffd||fffd|),s_fa_dupont_taxburden
Function s_fa_dupont_taxburden(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_taxburden = WindFunc("s_fa_dupont_taxburden", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||e8ef||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fa_dupont_intburden
Function s_fa_dupont_intburden(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_fa_dupont_intburden = WindFunc("s_fa_dupont_intburden", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f8|(|fffd||fffd||fffd||fffd|),s_stmnote_profitapr
Function s_stmnote_profitapr(WINDCODE_ As Variant, ITEMSCODE_ As Integer, D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr = WindFunc("s_stmnote_profitapr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(D_), Null, Null, Null)
    If VarType(s_stmnote_profitapr) <> vbString Then
        s_stmnote_profitapr = s_stmnote_profitapr / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||fffd||5b5||2f0|(|fffd||fffd||fffd||fffd|),s_stmnote_vat
Function s_stmnote_vat(WINDCODE_ As Variant, ITEMSCODE_ As Integer, D_ As Variant, Optional C_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_vat = WindFunc("s_stmnote_vat", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), C_, ITEMSCODE_, Null, Null)
    If VarType(s_stmnote_vat) <> vbString Then
        s_stmnote_vat = s_stmnote_vat / UnitVal_
    End If
End Function

'|fffd||fffd||1b5||fffd||3bb|(|fffd||fffd||fffd||fffd|),s_stmnote_audit_agency
Function s_stmnote_audit_agency(WINDCODE_ As Variant, D_ As Variant, Optional T_ As Integer = 1) As Variant
  s_stmnote_audit_agency = WindFunc("s_stmnote_audit_agency", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), T_, Null, Null, Null)
End Function

'|1e9||fffd||fffd||5e2||fffd||fffd||fffd||fffd||2a6|(|fffd||fffd||fffd||fffd|),s_stmnote_audit_cpa
Function s_stmnote_audit_cpa(WINDCODE_ As Variant, D_ As Variant, Optional T_ As Integer = 1) As Variant
  s_stmnote_audit_cpa = WindFunc("s_stmnote_audit_cpa", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||2b5||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_audit_expense
Function s_stmnote_audit_expense(WINDCODE_ As Variant, D_ As Variant, Optional T_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_audit_expense = WindFunc("s_stmnote_audit_expense", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), T_, Null, Null, Null)
    If VarType(s_stmnote_audit_expense) <> vbString Then
        s_stmnote_audit_expense = s_stmnote_audit_expense / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_audit_category
Function s_stmnote_audit_category(WINDCODE_ As Variant, D_ As Variant, Optional T_ As Integer = 1) As Variant
  s_stmnote_audit_category = WindFunc("s_stmnote_audit_category", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), T_, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_audit_interpretation
Function s_stmnote_audit_interpretation(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_stmnote_audit_interpretation = WindFunc("s_stmnote_audit_interpretation", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||6fc||1b5||fffd||3bb||fffd||5ba||fffd|(|fffd||fffd||fffd||fffd|),s_div_aualaccmdivpershare
Function s_div_aualaccmdivpershare(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_div_aualaccmdivpershare = WindFunc("s_div_aualaccmdivpershare", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_div_aualaccmdivpershare) <> vbString Then
        s_div_aualaccmdivpershare = s_div_aualaccmdivpershare / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||6fc||1b7||5ba||fffd||fffd||736||fffd|(|fffd||fffd||fffd||fffd|),s_div_aualaccmdiv
Function s_div_aualaccmdiv(WINDCODE_ As Variant, Optional Year_ As Integer = 2015, Optional UnitVal_ As Double = 1) As Variant
    s_div_aualaccmdiv = WindFunc("s_div_aualaccmdiv", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_div_aualaccmdiv) <> vbString Then
        s_div_aualaccmdiv = s_div_aualaccmdiv / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6fc||1b7||5ba||fffd||57c||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),S_DIV_DivPct_3yearAccu
Function S_DIV_DivPct_3yearAccu(WINDCODE_ As Variant, Optional TD_ As Integer) As Variant
  S_DIV_DivPct_3yearAccu = WindFunc("S_DIV_DivPct_3yearAccu", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TD_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|2f0||1f0|),s_div_cashpaidbeforetax
Function s_div_cashpaidbeforetax(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_div_cashpaidbeforetax = WindFunc("s_div_cashpaidbeforetax", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|2f0||fffd||fffd|),s_div_cashpaidaftertax
Function s_div_cashpaidaftertax(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_div_cashpaidaftertax = WindFunc("s_div_cashpaidaftertax", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'B|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_div_lasttrddateshareb
Function s_div_lasttrddateshareb(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_lasttrddateshareb = WindFunc("s_div_lasttrddateshareb", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'B|fffd||279||fffd||228||fffd||1fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_div_recdateshareb
Function s_div_recdateshareb(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_recdateshareb = WindFunc("s_div_recdateshareb", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_div_trddateshareb
Function s_div_trddateshareb(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_trddateshareb = WindFunc("s_div_trddateshareb", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_div_prelandate
Function s_div_prelandate(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_prelandate = WindFunc("s_div_prelandate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||276||fffd||fffd||fffd||1e6b||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),S_FELLOW_SMTGANNCEDATE
Function S_FELLOW_SMTGANNCEDATE(WINDCODE_ As Variant, D_ As Integer) As Variant
  S_FELLOW_SMTGANNCEDATE = WindFunc("S_FELLOW_SMTGANNCEDATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||5ba||fffd||2b5||2a9||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_div_impdate
Function s_div_impdate(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_impdate = WindFunc("s_div_impdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||5ba||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_div_object
Function s_div_object(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_object = WindFunc("s_div_object", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||1f7||fffd||5ba||fffd|(|fffd||fffd||fffd||fffd|),s_div_ifdiv
Function s_div_ifdiv(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_ifdiv = WindFunc("s_div_ifdiv", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_ipo_parvalue
Function s_ipo_parvalue(WINDCODE_ As Variant) As Variant
  s_ipo_parvalue = WindFunc("s_ipo_parvalue", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_issuedate
Function s_ipo_issuedate(WINDCODE_ As Variant) As Variant
  s_ipo_issuedate = WindFunc("s_ipo_issuedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||739||271||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_ipo_totcapafterissue
Function s_ipo_totcapafterissue(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_totcapafterissue = WindFunc("s_ipo_totcapafterissue", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_totcapafterissue) <> vbString Then
        s_ipo_totcapafterissue = s_ipo_totcapafterissue / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||1f0||fffd||739||271||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_totcapbeforeissue
Function s_ipo_totcapbeforeissue(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_totcapbeforeissue = WindFunc("s_ipo_totcapbeforeissue", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_totcapbeforeissue) <> vbString Then
        s_ipo_totcapbeforeissue = s_ipo_totcapbeforeissue / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||fffd||fffd||4ef||fffd||fffd|(|32f||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_ipo_DilutedPE
Function s_ipo_DilutedPE(WINDCODE_ As Variant) As Variant
  s_ipo_DilutedPE = WindFunc("s_ipo_DilutedPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||4ef||fffd||fffd|(|fffd||fffd||228|)(|fffd||fffd||fffd||fffd|),s_ipo_WeightedPE
Function s_ipo_WeightedPE(WINDCODE_ As Variant) As Variant
  s_ipo_WeightedPE = WindFunc("s_ipo_WeightedPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_offering
Function s_ipo_offering(WINDCODE_ As Variant) As Variant
  s_ipo_offering = WindFunc("s_ipo_offering", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||524||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_expectedcollection
Function s_ipo_expectedcollection(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_expectedcollection = WindFunc("s_ipo_expectedcollection", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_expectedcollection) <> vbString Then
        s_ipo_expectedcollection = s_ipo_expectedcollection / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||fffd||fffd||13c||fffd||2bd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_beyondactualcollec
Function s_ipo_beyondactualcollec(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_beyondactualcollec = WindFunc("s_ipo_beyondactualcollec", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_beyondactualcollec) <> vbString Then
        s_ipo_beyondactualcollec = s_ipo_beyondactualcollec / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|,s_ipo_op_uplimit
Function s_ipo_op_uplimit(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_op_uplimit = WindFunc("s_ipo_op_uplimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_op_uplimit) <> vbString Then
        s_ipo_op_uplimit = s_ipo_op_uplimit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|,s_ipo_op_downlimit
Function s_ipo_op_downlimit(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_op_downlimit = WindFunc("s_ipo_op_downlimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_op_downlimit) <> vbString Then
        s_ipo_op_downlimit = s_ipo_op_downlimit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||6fd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|,s_ipo_op_minofchg
Function s_ipo_op_minofchg(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_op_minofchg = WindFunc("s_ipo_op_minofchg", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_op_minofchg) <> vbString Then
        s_ipo_op_minofchg = s_ipo_op_minofchg / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_op_numoffring
Function s_ipo_op_numoffring(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_op_numoffring = WindFunc("s_ipo_op_numoffring", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_op_numoffring) <> vbString Then
        s_ipo_op_numoffring = s_ipo_op_numoffring / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||2bc||fffd||fffd||fffd||fffd|,s_ipo_op_startdate
Function s_ipo_op_startdate(WINDCODE_ As Variant) As Variant
  s_ipo_op_startdate = WindFunc("s_ipo_op_startdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||5b9||fffd||fffd||fffd||fffd|,s_ipo_op_enddate
Function s_ipo_op_enddate(WINDCODE_ As Variant) As Variant
  s_ipo_op_enddate = WindFunc("s_ipo_op_enddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||6f9||fffd||fffd||fffd||fffd||fffd|,s_ipo_inq_anncedate
Function s_ipo_inq_anncedate(WINDCODE_ As Variant) As Variant
  s_ipo_inq_anncedate = WindFunc("s_ipo_inq_anncedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||fffd||2bc||fffd||fffd|,s_ipo_inq_startdate
Function s_ipo_inq_startdate(WINDCODE_ As Variant) As Variant
  s_ipo_inq_startdate = WindFunc("s_ipo_inq_startdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||6fd||fffd||5b9||fffd||fffd|,s_ipo_inq_enddate
Function s_ipo_inq_enddate(WINDCODE_ As Variant) As Variant
  s_ipo_inq_enddate = WindFunc("s_ipo_inq_enddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||46f||fffd||6f6||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_op_numofinq
Function s_ipo_op_numofinq(WINDCODE_ As Variant) As Variant
  s_ipo_op_numofinq = WindFunc("s_ipo_op_numofinq", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||6f6||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_op_numofpmt
Function s_ipo_op_numofpmt(WINDCODE_ As Variant) As Variant
  s_ipo_op_numofpmt = WindFunc("s_ipo_op_numofpmt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||b3||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|,s_ipo_op_oversubratio
Function s_ipo_op_oversubratio(WINDCODE_ As Variant) As Variant
  s_ipo_op_oversubratio = WindFunc("s_ipo_op_oversubratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|,s_ipo_op_volume
Function s_ipo_op_volume(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_op_volume = WindFunc("s_ipo_op_volume", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_op_volume) <> vbString Then
        s_ipo_op_volume = s_ipo_op_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd||2bd||fffd|,s_ipo_op_amount
Function s_ipo_op_amount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_op_amount = WindFunc("s_ipo_op_amount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_op_amount) <> vbString Then
        s_ipo_op_amount = s_ipo_op_amount / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||437||fffd||2bd|(|fffd||fffd||fffd||fffd|),s_ipo_type
Function s_ipo_type(WINDCODE_ As Variant) As Variant
  s_ipo_type = WindFunc("s_ipo_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd|(|fffd||fffd||fffd||fffd|),s_ipo_undrtype
Function s_ipo_undrtype(WINDCODE_ As Variant) As Variant
  s_ipo_undrtype = WindFunc("s_ipo_undrtype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_leadundr
Function s_ipo_leadundr(WINDCODE_ As Variant) As Variant
  s_ipo_leadundr = WindFunc("s_ipo_leadundr", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_deputyundr
Function s_ipo_deputyundr(WINDCODE_ As Variant) As Variant
  s_ipo_deputyundr = WindFunc("s_ipo_deputyundr", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||1bc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_nominator
Function s_ipo_nominator(WINDCODE_ As Variant) As Variant
  s_ipo_nominator = WindFunc("s_ipo_nominator", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_distor
Function s_ipo_distor(WINDCODE_ As Variant) As Variant
  s_ipo_distor = WindFunc("s_ipo_distor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||42d||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_intercordtor
Function s_ipo_intercordtor(WINDCODE_ As Variant) As Variant
  s_ipo_intercordtor = WindFunc("s_ipo_intercordtor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||ae7a||fffd||fffd||1e9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_cashratio
Function s_ipo_cashratio(WINDCODE_ As Variant) As Variant
  s_ipo_cashratio = WindFunc("s_ipo_cashratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5||fffd||fffd||fffd||6f7||fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_capratio
Function s_ipo_capratio(WINDCODE_ As Variant) As Variant
  s_ipo_capratio = WindFunc("s_ipo_capratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_cashamt
Function s_ipo_cashamt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_cashamt = WindFunc("s_ipo_cashamt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_cashamt) <> vbString Then
        s_ipo_cashamt = s_ipo_cashamt / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||ae7a||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_casheffacc
Function s_ipo_casheffacc(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_casheffacc = WindFunc("s_ipo_casheffacc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_casheffacc) <> vbString Then
        s_ipo_casheffacc = s_ipo_casheffacc / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_capeffacc
Function s_ipo_capeffacc(WINDCODE_ As Variant) As Variant
  s_ipo_capeffacc = WindFunc("s_ipo_capeffacc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_capeffamt
Function s_ipo_capeffamt(WINDCODE_ As Variant) As Variant
  s_ipo_capeffamt = WindFunc("s_ipo_capeffamt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_subbydistr
Function s_ipo_subbydistr(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_subbydistr = WindFunc("s_ipo_subbydistr", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_subbydistr) <> vbString Then
        s_ipo_subbydistr = s_ipo_subbydistr / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_ovrsubratio
Function s_ipo_ovrsubratio(WINDCODE_ As Variant) As Variant
  s_ipo_ovrsubratio = WindFunc("s_ipo_ovrsubratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_amtbyplacing
Function s_ipo_amtbyplacing(WINDCODE_ As Variant) As Variant
  s_ipo_amtbyplacing = WindFunc("s_ipo_amtbyplacing", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||6f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_subamtbyplacing
Function s_ipo_subamtbyplacing(WINDCODE_ As Variant) As Variant
  s_ipo_subamtbyplacing = WindFunc("s_ipo_subamtbyplacing", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4bb||fffd||3de8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_amttojur
Function s_ipo_amttojur(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_amttojur = WindFunc("s_ipo_amttojur", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_amttojur) <> vbString Then
        s_ipo_amttojur = s_ipo_amttojur / UnitVal_
    End If
End Function

'|fffd||fffd||57d||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_amttoinstinvestor
Function s_ipo_amttoinstinvestor(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_amttoinstinvestor = WindFunc("s_ipo_amttoinstinvestor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_amttoinstinvestor) <> vbString Then
        s_ipo_amttoinstinvestor = s_ipo_amttoinstinvestor / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||579||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_amttoinscorp
Function s_ipo_amttoinscorp(WINDCODE_ As Variant) As Variant
  s_ipo_amttoinscorp = WindFunc("s_ipo_amttoinscorp", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_amttofund
Function s_ipo_amttofund(WINDCODE_ As Variant) As Variant
  s_ipo_amttofund = WindFunc("s_ipo_amttofund", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_amttoother
Function s_ipo_amttoother(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_amttoother = WindFunc("s_ipo_amttoother", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_amttoother) <> vbString Then
        s_ipo_amttoother = s_ipo_amttoother / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||6f1||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_otc_cash_pct
Function s_ipo_otc_cash_pct(WINDCODE_ As Variant) As Variant
  s_ipo_otc_cash_pct = WindFunc("s_ipo_otc_cash_pct", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||439||279||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_puboffrdate
Function s_ipo_puboffrdate(WINDCODE_ As Variant) As Variant
  s_ipo_puboffrdate = WindFunc("s_ipo_puboffrdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_anncedate
Function s_ipo_anncedate(WINDCODE_ As Variant) As Variant
  s_ipo_anncedate = WindFunc("s_ipo_anncedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_anncelstdate
Function s_ipo_anncelstdate(WINDCODE_ As Variant) As Variant
  s_ipo_anncelstdate = WindFunc("s_ipo_anncelstdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_resultdate
Function s_ipo_resultdate(WINDCODE_ As Variant) As Variant
  s_ipo_resultdate = WindFunc("s_ipo_resultdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_cashsubisdate
Function s_ipo_cashsubisdate(WINDCODE_ As Variant) As Variant
  s_ipo_cashsubisdate = WindFunc("s_ipo_cashsubisdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4bb||fffd||3de8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_jurisdate
Function s_ipo_jurisdate(WINDCODE_ As Variant) As Variant
  s_ipo_jurisdate = WindFunc("s_ipo_jurisdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||579||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_inscorpisdate
Function s_ipo_inscorpisdate(WINDCODE_ As Variant) As Variant
  s_ipo_inscorpisdate = WindFunc("s_ipo_inscorpisdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_fndisdate
Function s_ipo_fndisdate(WINDCODE_ As Variant) As Variant
  s_ipo_fndisdate = WindFunc("s_ipo_fndisdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||57d||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_instisdate
Function s_ipo_instisdate(WINDCODE_ As Variant) As Variant
  s_ipo_instisdate = WindFunc("s_ipo_instisdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_otherstartdate
Function s_ipo_otherstartdate(WINDCODE_ As Variant) As Variant
  s_ipo_otherstartdate = WindFunc("s_ipo_otherstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||43d||fffd||5b9||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_otherenddate
Function s_ipo_otherenddate(WINDCODE_ As Variant) As Variant
  s_ipo_otherenddate = WindFunc("s_ipo_otherenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_capplacingdate
Function s_ipo_capplacingdate(WINDCODE_ As Variant) As Variant
  s_ipo_capplacingdate = WindFunc("s_ipo_capplacingdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_lstnum
Function s_ipo_lstnum(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_lstnum = WindFunc("s_ipo_lstnum", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_lstnum) <> vbString Then
        s_ipo_lstnum = s_ipo_lstnum / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_high
Function s_ipo_high(WINDCODE_ As Variant) As Variant
  s_ipo_high = WindFunc("s_ipo_high", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_low
Function s_ipo_low(WINDCODE_ As Variant) As Variant
  s_ipo_low = WindFunc("s_ipo_low", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||573||27d||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_avgprice
Function s_ipo_avgprice(WINDCODE_ As Variant) As Variant
  s_ipo_avgprice = WindFunc("s_ipo_avgprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||573||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_listdayvolume
Function s_ipo_listdayvolume(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_listdayvolume = WindFunc("s_ipo_listdayvolume", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_listdayvolume) <> vbString Then
        s_ipo_listdayvolume = s_ipo_listdayvolume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||573||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_volume
Function s_ipo_volume(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_volume = WindFunc("s_ipo_volume", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
    If VarType(s_ipo_volume) <> vbString Then
        s_ipo_volume = s_ipo_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_pctchange
Function s_ipo_pctchange(WINDCODE_ As Variant) As Variant
  s_ipo_pctchange = WindFunc("s_ipo_pctchange", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||57b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_turn
Function s_ipo_turn(WINDCODE_ As Variant) As Variant
  s_ipo_turn = WindFunc("s_ipo_turn", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||43a||fffd|N|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_npctchange
Function s_ipo_npctchange(WINDCODE_ As Variant, Optional N_ As Integer = 1) As Variant
  s_ipo_npctchange = WindFunc("s_ipo_npctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), N_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||43a||fffd|N|fffd||57b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_nturn
Function s_ipo_nturn(WINDCODE_ As Variant, Optional N_ As Integer = 1) As Variant
  s_ipo_nturn = WindFunc("s_ipo_nturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), N_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_listdays
Function s_ipo_listdays(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_ipo_listdays = WindFunc("s_ipo_listdays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_progress
Function s_fellow_progress(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_progress = WindFunc("s_fellow_progress", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ef||fffd||fffd|(|32f||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_fellow_dilutedpe
Function s_fellow_dilutedpe(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_dilutedpe = WindFunc("s_fellow_dilutedpe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ef||fffd||fffd|(|fffd||fffd||228|)(|fffd||fffd||fffd||fffd|),s_fellow_WeightedPE
Function s_fellow_WeightedPE(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_WeightedPE = WindFunc("s_fellow_WeightedPE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1e9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_totalratio
Function s_fellow_totalratio(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_totalratio = WindFunc("s_fellow_totalratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_publicratio
Function s_fellow_publicratio(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_publicratio = WindFunc("s_fellow_publicratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||437||fffd||2bd|(|fffd||fffd||fffd||fffd|),s_fellow_issuetype
Function s_fellow_issuetype(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_issuetype = WindFunc("s_fellow_issuetype", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd|(|fffd||fffd||fffd||fffd|),s_fellow_undrtype
Function s_fellow_undrtype(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_undrtype = WindFunc("s_fellow_undrtype", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_leadundr
Function s_fellow_leadundr(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_leadundr = WindFunc("s_fellow_leadundr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1bc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_deputyundr
Function s_fellow_deputyundr(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_deputyundr = WindFunc("s_fellow_deputyundr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_nominator
Function s_fellow_nominator(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_nominator = WindFunc("s_fellow_nominator", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_distor
Function s_fellow_distor(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_distor = WindFunc("s_fellow_distor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_distor) <> vbString Then
        s_fellow_distor = s_fellow_distor / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_intercodnator
Function s_fellow_intercodnator(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_intercodnator = WindFunc("s_fellow_intercodnator", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_intercodnator) <> vbString Then
        s_fellow_intercodnator = s_fellow_intercodnator / UnitVal_
    End If
End Function

'|fffd||733||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_cashratio
Function s_fellow_cashratio(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_cashratio = WindFunc("s_fellow_cashratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_capratio
Function s_fellow_capratio(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_capratio = WindFunc("s_fellow_capratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_capratio) <> vbString Then
        s_fellow_capratio = s_fellow_capratio / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_cashamt
Function s_fellow_cashamt(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_cashamt = WindFunc("s_fellow_cashamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_cashamt) <> vbString Then
        s_fellow_cashamt = s_fellow_cashamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_casheffacc
Function s_fellow_casheffacc(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_casheffacc = WindFunc("s_fellow_casheffacc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||3f9||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_capeffacc
Function s_fellow_capeffacc(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_capeffacc = WindFunc("s_fellow_capeffacc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_capeffacc) <> vbString Then
        s_fellow_capeffacc = s_fellow_capeffacc / UnitVal_
    End If
End Function

'|fffd||3f9||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_capeffamt
Function s_fellow_capeffamt(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_capeffamt = WindFunc("s_fellow_capeffamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_capeffamt) <> vbString Then
        s_fellow_capeffamt = s_fellow_capeffamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_subaccbypub
Function s_fellow_subaccbypub(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_subaccbypub = WindFunc("s_fellow_subaccbypub", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_subaccbypub) <> vbString Then
        s_fellow_subaccbypub = s_fellow_subaccbypub / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_oversubratio
Function s_fellow_oversubratio(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_oversubratio = WindFunc("s_fellow_oversubratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_oversubratio) <> vbString Then
        s_fellow_oversubratio = s_fellow_oversubratio / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bb||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_amtbyplacing
Function s_fellow_amtbyplacing(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_amtbyplacing = WindFunc("s_fellow_amtbyplacing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_amtbyplacing) <> vbString Then
        s_fellow_amtbyplacing = s_fellow_amtbyplacing / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bb||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_subamtbyplacing
Function s_fellow_subamtbyplacing(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_subamtbyplacing = WindFunc("s_fellow_subamtbyplacing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_subamtbyplacing) <> vbString Then
        s_fellow_subamtbyplacing = s_fellow_subamtbyplacing / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b3||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_amttojur
Function s_fellow_amttojur(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_amttojur = WindFunc("s_fellow_amttojur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_amttoinst
Function s_fellow_amttoinst(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_amttoinst = WindFunc("s_fellow_amttoinst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_amttoinst) <> vbString Then
        s_fellow_amttoinst = s_fellow_amttoinst / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f1||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_Fellow_amttoincorp
Function s_Fellow_amttoincorp(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_Fellow_amttoincorp = WindFunc("s_Fellow_amttoincorp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_otcpreamt_org
Function s_fellow_otcpreamt_org(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_otcpreamt_org = WindFunc("s_fellow_otcpreamt_org", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_otcpreamt_org) <> vbString Then
        s_fellow_otcpreamt_org = s_fellow_otcpreamt_org / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_amt_otherpub
Function s_fellow_amt_otherpub(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_amt_otherpub = WindFunc("s_fellow_amt_otherpub", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_amt_otherpub) <> vbString Then
        s_fellow_amt_otherpub = s_fellow_amt_otherpub / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_amt_targeted
Function s_fellow_amt_targeted(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_amt_targeted = WindFunc("s_fellow_amt_targeted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_amt_targeted) <> vbString Then
        s_fellow_amt_targeted = s_fellow_amt_targeted / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_amt_fund
Function s_fellow_amt_fund(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_amt_fund = WindFunc("s_fellow_amt_fund", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_amt_fund) <> vbString Then
        s_fellow_amt_fund = s_fellow_amt_fund / UnitVal_
    End If
End Function

'|fffd||fffd||52d||fffd||fffd||368||fffd||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_amt_orgtradable
Function s_fellow_amt_orgtradable(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_amt_orgtradable = WindFunc("s_fellow_amt_orgtradable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_amt_orgtradable) <> vbString Then
        s_fellow_amt_orgtradable = s_fellow_amt_orgtradable / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_otcamt
Function s_fellow_otcamt(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_otcamt = WindFunc("s_fellow_otcamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_otcamt) <> vbString Then
        s_fellow_otcamt = s_fellow_otcamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b7||fffd||fffd||6f1||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_otcamt_pct
Function s_fellow_otcamt_pct(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_otcamt_pct = WindFunc("s_fellow_otcamt_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_subbydistr
Function s_fellow_subbydistr(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_subbydistr = WindFunc("s_fellow_subbydistr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_subbydistr) <> vbString Then
        s_fellow_subbydistr = s_fellow_subbydistr / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_issuedate
Function s_fellow_issuedate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_issuedate = WindFunc("s_fellow_issuedate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_otcdate
Function s_fellow_otcdate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_otcdate = WindFunc("s_fellow_otcdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_instlistdate
Function s_fellow_instlistdate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_instlistdate = WindFunc("s_fellow_instlistdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_preplandate
Function s_fellow_preplandate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_preplandate = WindFunc("s_fellow_preplandate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_anncedate
Function s_fellow_anncedate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_anncedate = WindFunc("s_fellow_anncedate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_resultdate
Function s_fellow_resultdate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_resultdate = WindFunc("s_fellow_resultdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_offeringdate
Function s_fellow_offeringdate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_offeringdate = WindFunc("s_fellow_offeringdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||3f9||276||fffd||fffd||fffd||fffd||6f9||fffd||228||fffd||1fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_recorddate
Function s_fellow_recorddate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_recorddate = WindFunc("s_fellow_recorddate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||3f9||276||fffd||fffd||fffd||fffd||6fd||27f||fffd||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_paystartdate
Function s_fellow_paystartdate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_paystartdate = WindFunc("s_fellow_paystartdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||3f9||276||fffd||fffd||fffd||fffd||6fd||27f||fffd||fffd||5b9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_payenddate
Function s_fellow_payenddate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_payenddate = WindFunc("s_fellow_payenddate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_pubamt
Function s_fellow_pubamt(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_pubamt = WindFunc("s_fellow_pubamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_pubamt) <> vbString Then
        s_fellow_pubamt = s_fellow_pubamt / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||6f8||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_netprice
Function s_fellow_netprice(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_netprice = WindFunc("s_fellow_netprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||6ff||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_discntratio
Function s_fellow_discntratio(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_fellow_discntratio = WindFunc("s_fellow_discntratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fellow_trnffamt
Function s_fellow_trnffamt(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fellow_trnffamt = WindFunc("s_fellow_trnffamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_fellow_trnffamt) <> vbString Then
        s_fellow_trnffamt = s_fellow_trnffamt / UnitVal_
    End If
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_progress
Function s_rightsissue_progress(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_progress = WindFunc("s_rightsissue_progress", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||1bb||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_planamt
Function s_rightsissue_planamt(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_planamt = WindFunc("s_rightsissue_planamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_planamt) <> vbString Then
        s_rightsissue_planamt = s_rightsissue_planamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_subbydistr
Function s_rightsissue_subbydistr(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_subbydistr = WindFunc("s_rightsissue_subbydistr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_subbydistr) <> vbString Then
        s_rightsissue_subbydistr = s_rightsissue_subbydistr / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_theornumtostate
Function s_rightsissue_theornumtostate(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_theornumtostate = WindFunc("s_rightsissue_theornumtostate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_theornumtostate) <> vbString Then
        s_rightsissue_theornumtostate = s_rightsissue_theornumtostate / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2f9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_theornumtojur
Function s_rightsissue_theornumtojur(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_theornumtojur = WindFunc("s_rightsissue_theornumtojur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_theornumtojur) <> vbString Then
        s_rightsissue_theornumtojur = s_rightsissue_theornumtojur / UnitVal_
    End If
End Function

'|5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_theornumtoemp
Function s_rightsissue_theornumtoemp(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_theornumtoemp = WindFunc("s_rightsissue_theornumtoemp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_theornumtoemp) <> vbString Then
        s_rightsissue_theornumtoemp = s_rightsissue_theornumtoemp / UnitVal_
    End If
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_theornumtotrsf
Function s_rightsissue_theornumtotrsf(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_theornumtotrsf = WindFunc("s_rightsissue_theornumtotrsf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_theornumtotrsf) <> vbString Then
        s_rightsissue_theornumtotrsf = s_rightsissue_theornumtotrsf / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_theornumtotrd
Function s_rightsissue_theornumtotrd(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_theornumtotrd = WindFunc("s_rightsissue_theornumtotrd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_theornumtotrd) <> vbString Then
        s_rightsissue_theornumtotrd = s_rightsissue_theornumtotrd / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||439||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_actlnumtostate
Function s_rightsissue_actlnumtostate(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_actlnumtostate = WindFunc("s_rightsissue_actlnumtostate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_actlnumtostate) <> vbString Then
        s_rightsissue_actlnumtostate = s_rightsissue_actlnumtostate / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2f9||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_actlnumtojur
Function s_rightsissue_actlnumtojur(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_actlnumtojur = WindFunc("s_rightsissue_actlnumtojur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_actlnumtojur) <> vbString Then
        s_rightsissue_actlnumtojur = s_rightsissue_actlnumtojur / UnitVal_
    End If
End Function

'|5b0||fffd||fffd||fffd||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_actlnumtoemp
Function s_rightsissue_actlnumtoemp(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_actlnumtoemp = WindFunc("s_rightsissue_actlnumtoemp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_actlnumtoemp) <> vbString Then
        s_rightsissue_actlnumtoemp = s_rightsissue_actlnumtoemp / UnitVal_
    End If
End Function

'|5ea||fffd||fffd||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_actlnumtotrsf
Function s_rightsissue_actlnumtotrsf(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_actlnumtotrsf = WindFunc("s_rightsissue_actlnumtotrsf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_actlnumtotrsf) <> vbString Then
        s_rightsissue_actlnumtotrsf = s_rightsissue_actlnumtotrsf / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||368||fffd||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_actlnumtotrd
Function s_rightsissue_actlnumtotrd(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_actlnumtotrd = WindFunc("s_rightsissue_actlnumtotrd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_actlnumtotrd) <> vbString Then
        s_rightsissue_actlnumtotrd = s_rightsissue_actlnumtotrd / UnitVal_
    End If
End Function

'|fffd||5b9||fffd|5%|fffd||fffd||fffd||3f4||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_up5pctnum
Function s_rightsissue_up5pctnum(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_up5pctnum = WindFunc("s_rightsissue_up5pctnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_up5pctnum) <> vbString Then
        s_rightsissue_up5pctnum = s_rightsissue_up5pctnum / UnitVal_
    End If
End Function

'|fffd||5b9||fffd|5%|fffd||fffd||fffd||3f5||134||fffd||276||fffd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_up5pcttheornum
Function s_rightsissue_up5pcttheornum(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_up5pcttheornum = WindFunc("s_rightsissue_up5pcttheornum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_up5pcttheornum) <> vbString Then
        s_rightsissue_up5pcttheornum = s_rightsissue_up5pcttheornum / UnitVal_
    End If
End Function

'|fffd||5b9||fffd|5%|fffd||fffd||fffd||3f4||fffd||276||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_up5pctactlnum
Function s_rightsissue_up5pctactlnum(WINDCODE_ As Variant, Optional D_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_rightsissue_up5pctactlnum = WindFunc("s_rightsissue_up5pctactlnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
    If VarType(s_rightsissue_up5pctactlnum) <> vbString Then
        s_rightsissue_up5pctactlnum = s_rightsissue_up5pctactlnum / UnitVal_
    End If
End Function

'|fffd||fffd||228||fffd||1fc||fffd||fffd||fffd|(B|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_rightsissue_regdateshareb
Function s_rightsissue_regdateshareb(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_regdateshareb = WindFunc("s_rightsissue_regdateshareb", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'B|fffd||279||fffd||228||fffd||1fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_recdateshareb
Function s_rightsissue_recdateshareb(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_recdateshareb = WindFunc("s_rightsissue_recdateshareb", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||27f||fffd||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_paystartdate
Function s_rightsissue_paystartdate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_paystartdate = WindFunc("s_rightsissue_paystartdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||27f||fffd||fffd||fffd||5b9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_payenddate
Function s_rightsissue_payenddate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_payenddate = WindFunc("s_rightsissue_payenddate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_preplandate
Function s_rightsissue_preplandate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_preplandate = WindFunc("s_rightsissue_preplandate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||276||fffd||fffd||fffd||1e6b||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_smtganncedate
Function s_rightsissue_smtganncedate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_smtganncedate = WindFunc("s_rightsissue_smtganncedate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||27b||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_approveddate
Function s_rightsissue_approveddate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_approveddate = WindFunc("s_rightsissue_approveddate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||279||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_anncedate
Function s_rightsissue_anncedate(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_anncedate = WindFunc("s_rightsissue_anncedate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_leadundr
Function s_rightsissue_leadundr(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_leadundr = WindFunc("s_rightsissue_leadundr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||277||fffd||2bd|(|fffd||fffd||fffd||fffd|),s_rightsissue_type
Function s_rightsissue_type(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_type = WindFunc("s_rightsissue_type", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||273||fffd||fffd||fffd||fffd||fffd||2bd|(|fffd||fffd||fffd||fffd|),s_rightsissue_undrtype
Function s_rightsissue_undrtype(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_undrtype = WindFunc("s_rightsissue_undrtype", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||277||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_deputyundr
Function s_rightsissue_deputyundr(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_deputyundr = WindFunc("s_rightsissue_deputyundr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_maxpricepreplan
Function s_rightsissue_maxpricepreplan(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_maxpricepreplan = WindFunc("s_rightsissue_maxpricepreplan", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_rightsissue_minpricepreplan
Function s_rightsissue_minpricepreplan(WINDCODE_ As Variant, Optional D_ As Integer) As Variant
  s_rightsissue_minpricepreplan = WindFunc("s_rightsissue_minpricepreplan", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), D_, Null, Null, Null, Null)
End Function

'|fffd||278||13d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_schedule
Function s_refrmschm_schedule(WINDCODE_ As Variant) As Variant
  s_refrmschm_schedule = WindFunc("s_refrmschm_schedule", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||53c||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_constype
Function s_refrmschm_constype(WINDCODE_ As Variant) As Variant
  s_refrmschm_constype = WindFunc("s_refrmschm_constype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||53c||6f7||fffd||fffd||fffd||56a||4aa|(|fffd||fffd||fffd||fffd|),s_refrmschm_abstract
Function s_refrmschm_abstract(WINDCODE_ As Variant) As Variant
  s_refrmschm_abstract = WindFunc("s_refrmschm_abstract", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||3f8||fffd||53c||6f7||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_detail
Function s_refrmschm_detail(WINDCODE_ As Variant) As Variant
  s_refrmschm_detail = WindFunc("s_refrmschm_detail", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|228||5a4||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_warrant
Function s_refrmschm_warrant(WINDCODE_ As Variant) As Variant
  s_refrmschm_warrant = WindFunc("s_refrmschm_warrant", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff|10|fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||53c||fffd|)(|fffd||fffd||fffd||fffd|),s_refrmschm_paynum
Function s_refrmschm_paynum(WINDCODE_ As Variant) As Variant
  s_refrmschm_paynum = WindFunc("s_refrmschm_paynum", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|ff|10|fffd||fffd||5a7||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|fffd||53c||fffd|)(|fffd||fffd||fffd||fffd|),s_refrmschm_paycash
Function s_refrmschm_paycash(WINDCODE_ As Variant) As Variant
  s_refrmschm_paycash = WindFunc("s_refrmschm_paycash", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||379||275||136||53c||fffd|(|fffd||fffd||fffd||439||fffd||2fe||fffd||fffd||fffd||fffd||5b5|)(|fffd||fffd||fffd||fffd|),s_refrmschm_cvntnum
Function s_refrmschm_cvntnum(WINDCODE_ As Variant) As Variant
  s_refrmschm_cvntnum = WindFunc("s_refrmschm_cvntnum", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||379||275||136||53c||fffd|(WIND|fffd||fffd||fffd||fffd||5b5|)(|fffd||fffd||fffd||fffd|),s_refrmschm_cvntcash
Function s_refrmschm_cvntcash(WINDCODE_ As Variant) As Variant
  s_refrmschm_cvntcash = WindFunc("s_refrmschm_cvntcash", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||276||fffd||ff|10|fffd||fffd||2b5||fffd||2bb||fffd||f9||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_actualnum
Function s_refrmschm_actualnum(WINDCODE_ As Variant) As Variant
  s_refrmschm_actualnum = WindFunc("s_refrmschm_actualnum", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||276||fffd||ff|10|fffd||fffd||2b5||fffd||2bb||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_actualcash
Function s_refrmschm_actualcash(WINDCODE_ As Variant) As Variant
  s_refrmschm_actualcash = WindFunc("s_refrmschm_actualcash", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||439||fffd||2fe||ff|10|fffd||fffd||5ea||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_trffnumcorp
Function s_refrmschm_trffnumcorp(WINDCODE_ As Variant) As Variant
  s_refrmschm_trffnumcorp = WindFunc("s_refrmschm_trffnumcorp", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||439||fffd||2fe||ff|10|fffd||fffd||fffd||fffd||3e2|(|fffd||fffd||fffd||fffd|),s_refrmschm_paycashcorp
Function s_refrmschm_paycashcorp(WINDCODE_ As Variant) As Variant
  s_refrmschm_paycashcorp = WindFunc("s_refrmschm_paycashcorp", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||368||fffd||276||fffd||ff|10|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_rvrnum
Function s_refrmschm_rvrnum(WINDCODE_ As Variant) As Variant
  s_refrmschm_rvrnum = WindFunc("s_refrmschm_rvrnum", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||276||fffd||ff|10|fffd||27b||fffd||fffd||fffd||3f9||fffd||228||5a4||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_callwarrant
Function s_refrmschm_callwarrant(WINDCODE_ As Variant) As Variant
  s_refrmschm_callwarrant = WindFunc("s_refrmschm_callwarrant", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||368||fffd||276||fffd||ff|10|fffd||27b||fffd||fffd||fffd||3f9||fffd||228||5a4||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_putwarrant
Function s_refrmschm_putwarrant(WINDCODE_ As Variant) As Variant
  s_refrmschm_putwarrant = WindFunc("s_refrmschm_putwarrant", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||368||fffd||273||5b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||175|(|fffd||fffd||fffd||fffd|),s_refrmschm_locktime
Function s_refrmschm_locktime(WINDCODE_ As Variant) As Variant
  s_refrmschm_locktime = WindFunc("s_refrmschm_locktime", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||5b3||fffd||175|(|fffd||fffd||fffd||fffd|),s_refrmschm_purcomm
Function s_refrmschm_purcomm(WINDCODE_ As Variant) As Variant
  s_refrmschm_purcomm = WindFunc("s_refrmschm_purcomm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|3b4||fffd||fffd||fffd||5ba||fffd||fffd||175|(|fffd||fffd||fffd||fffd|),s_refrmschm_divcomm
Function s_refrmschm_divcomm(WINDCODE_ As Variant) As Variant
  s_refrmschm_divcomm = WindFunc("s_refrmschm_divcomm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||5e2||fffd||fffd||fffd||175|(|fffd||fffd||fffd||fffd|),s_refrmschm_injcomm
Function s_refrmschm_injcomm(WINDCODE_ As Variant) As Variant
  s_refrmschm_injcomm = WindFunc("s_refrmschm_injcomm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||175|(|fffd||fffd||fffd||fffd|),s_refrmschm_supplecomm
Function s_refrmschm_supplecomm(WINDCODE_ As Variant) As Variant
  s_refrmschm_supplecomm = WindFunc("s_refrmschm_supplecomm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_incentive
Function s_refrmschm_incentive(WINDCODE_ As Variant) As Variant
  s_refrmschm_incentive = WindFunc("s_refrmschm_incentive", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmschm_nominator
Function s_refrmschm_nominator(WINDCODE_ As Variant) As Variant
  s_refrmschm_nominator = WindFunc("s_refrmschm_nominator", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_apprvddate
Function s_refrmkd_apprvddate(WINDCODE_ As Variant) As Variant
  s_refrmkd_apprvddate = WindFunc("s_refrmkd_apprvddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||bb||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_preplandate
Function s_refrmkd_preplandate(WINDCODE_ As Variant) As Variant
  s_refrmkd_preplandate = WindFunc("s_refrmkd_preplandate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|524||fffd||fffd||fffd||5f6||3b8||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_resumpdate
Function s_refrmkd_resumpdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_resumpdate = WindFunc("s_refrmkd_resumpdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||3af||fffd||fffd||5fc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_apprvbysasscdate
Function s_refrmkd_apprvbysasscdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_apprvbysasscdate = WindFunc("s_refrmkd_apprvbysasscdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_apprvbycddate
Function s_refrmkd_apprvbycddate(WINDCODE_ As Variant) As Variant
  s_refrmkd_apprvbycddate = WindFunc("s_refrmkd_apprvbycddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||1b1||228||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_drctvotestartdate
Function s_refrmkd_drctvotestartdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_drctvotestartdate = WindFunc("s_refrmkd_drctvotestartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||1b1||228||fffd||fffd||5b9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_drctvoteenddate
Function s_refrmkd_drctvoteenddate(WINDCODE_ As Variant) As Variant
  s_refrmkd_drctvoteenddate = WindFunc("s_refrmkd_drctvoteenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5b3||fffd||fffd||276||fffd||fffd||fffd||fffd||1fc||fffd||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_spotmtgstartdate
Function s_refrmkd_spotmtgstartdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_spotmtgstartdate = WindFunc("s_refrmkd_spotmtgstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||5b3||fffd||fffd||276||fffd||fffd||fffd||fffd||1fc||1fd||fffd||5b9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_spotmtgenddate
Function s_refrmkd_spotmtgenddate(WINDCODE_ As Variant) As Variant
  s_refrmkd_spotmtgenddate = WindFunc("s_refrmkd_spotmtgenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||1b1||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_intnetstartdate
Function s_refrmkd_intnetstartdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_intnetstartdate = WindFunc("s_refrmkd_intnetstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||1b1||fffd||fffd||5b9||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_intnetenddate
Function s_refrmkd_intnetenddate(WINDCODE_ As Variant) As Variant
  s_refrmkd_intnetenddate = WindFunc("s_refrmkd_intnetenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||276||fffd||fffd||fffd||1e6b||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_div_smtgdate
Function s_div_smtgdate(WINDCODE_ As Variant, D_ As Variant) As Variant
  s_div_smtgdate = WindFunc("s_div_smtgdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(D_), Null, Null, Null, Null, Null)
End Function

'|fffd||276||fffd||fffd||fffd||1e6b||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_smtganncedate
Function s_refrmkd_smtganncedate(WINDCODE_ As Variant) As Variant
  s_refrmkd_smtganncedate = WindFunc("s_refrmkd_smtganncedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||276||fffd||fffd||fffd||fffd||fffd||228||fffd||1fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_smtgrecdate
Function s_refrmkd_smtgrecdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_smtgrecdate = WindFunc("s_refrmkd_smtgrecdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||276||fffd||fffd||fffd||fffd||fffd||67f||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_smtgdate
Function s_refrmkd_smtgdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_smtgdate = WindFunc("s_refrmkd_smtgdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2b5||2a9||fffd||5f6||3b8||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_vttoimprsmpdate
Function s_refrmkd_vttoimprsmpdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_vttoimprsmpdate = WindFunc("s_refrmkd_vttoimprsmpdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||2b5||2a9||fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_impanncedate
Function s_refrmkd_impanncedate(WINDCODE_ As Variant) As Variant
  s_refrmkd_impanncedate = WindFunc("s_refrmkd_impanncedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||2b5||2a9||fffd||fffd||228||fffd||1fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_imprecdate
Function s_refrmkd_imprecdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_imprecdate = WindFunc("s_refrmkd_imprecdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||53c||fffd||5a7||fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_conssharelstdate
Function s_refrmkd_conssharelstdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_conssharelstdate = WindFunc("s_refrmkd_conssharelstdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||53c||fffd||5a7||fffd||fffd||fffd||5bd||fffd||5a7||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_conscashpaydate
Function s_refrmkd_conscashpaydate(WINDCODE_ As Variant) As Variant
  s_refrmkd_conscashpaydate = WindFunc("s_refrmkd_conscashpaydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|2b5||2a9||fffd||5f6||3b8||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_refrmkd_imprsmpdate
Function s_refrmkd_imprsmpdate(WINDCODE_ As Variant) As Variant
  s_refrmkd_imprsmpdate = WindFunc("s_refrmkd_imprsmpdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_info_redemptiondate
Function B_info_redemptiondate(WINDCODE_ As Variant) As Variant
  B_info_redemptiondate = WindFunc("B_info_redemptiondate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_info_repurchasedate
Function B_info_repurchasedate(WINDCODE_ As Variant) As Variant
  B_info_repurchasedate = WindFunc("B_info_repurchasedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||56e||fffd||fffd||63c||6f8||fffd|(|fffd||fffd||fffd||fffd|),B_info_redemptionprice
Function B_info_redemptionprice(WINDCODE_ As Variant) As Variant
  B_info_redemptionprice = WindFunc("B_info_redemptionprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||56e||fffd||fffd||fffd||6fc||6f8||fffd|(|fffd||fffd||fffd||fffd|),B_info_repurchaseprice
Function B_info_repurchaseprice(WINDCODE_ As Variant) As Variant
  B_info_repurchaseprice = WindFunc("B_info_repurchaseprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||56e||fffd||fffd||4e6||fffd||fffd||fffd||439||fffd||2fe||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_info_bclc
Function B_info_bclc(WINDCODE_ As Variant) As Variant
  B_info_bclc = WindFunc("B_info_bclc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_info_eobspecialinstrutions
Function B_info_eobspecialinstrutions(WINDCODE_ As Variant) As Variant
  B_info_eobspecialinstrutions = WindFunc("B_info_eobspecialinstrutions", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||228||2a3||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||a8e9|(|fffd||fffd||fffd||fffd|),B_info_weightedrt
Function B_info_weightedrt(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  B_info_weightedrt = WindFunc("B_info_weightedrt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(D_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_Associated
Function s_stmnote_Associated(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_Associated = WindFunc("s_stmnote_Associated", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_Associated) <> vbString Then
        s_stmnote_Associated = s_stmnote_Associated / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f6||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_allotmentsubjects
Function s_ipo_allotmentsubjects(WINDCODE_ As Variant, InstitutionType_ As Integer, TYPE_ As Integer) As Variant
  s_ipo_allotmentsubjects = WindFunc("s_ipo_allotmentsubjects", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||ae7a||fffd||6f8||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_subscriptionprice
Function s_ipo_subscriptionprice(WINDCODE_ As Variant, InstitutionType_ As Integer, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_subscriptionprice = WindFunc("s_ipo_subscriptionprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_, TYPE_)
    If VarType(s_ipo_subscriptionprice) <> vbString Then
        s_ipo_subscriptionprice = s_ipo_subscriptionprice / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_subscriptionshares
Function s_ipo_subscriptionshares(WINDCODE_ As Variant, InstitutionType_ As Integer, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_subscriptionshares = WindFunc("s_ipo_subscriptionshares", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_, TYPE_)
    If VarType(s_ipo_subscriptionshares) <> vbString Then
        s_ipo_subscriptionshares = s_ipo_subscriptionshares / UnitVal_
    End If
End Function

'|46f||fffd||6fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_lotwinningnumber
Function s_ipo_lotwinningnumber(WINDCODE_ As Variant, InstitutionType_ As Integer, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_ipo_lotwinningnumber = WindFunc("s_ipo_lotwinningnumber", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_, TYPE_)
    If VarType(s_ipo_lotwinningnumber) <> vbString Then
        s_ipo_lotwinningnumber = s_ipo_lotwinningnumber / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||be79||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_segment_sales
Function s_segment_sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Integer) As Variant
  s_segment_sales = WindFunc("s_segment_sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_fa_researchanddevelopmentexpenses
Function s_fa_researchanddevelopmentexpenses(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_fa_researchanddevelopmentexpenses = WindFunc("s_fa_researchanddevelopmentexpenses", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_researchanddevelopmentexpenses) <> vbString Then
        s_fa_researchanddevelopmentexpenses = s_fa_researchanddevelopmentexpenses / UnitVal_
    End If
End Function


'''''''''''''''''''''|fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b8||fffd||fffd|'''''''''''''''''

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd||2b7||fffd||b8||fffd|,s_techanal_rcnthigh
Function s_techanal_rcnthigh(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 3, Optional T_ As Integer = 2) As Variant
  s_techanal_rcnthigh = WindFunc("s_techanal_rcnthigh", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd||2b7||fffd||b5||fffd|,s_techanal_rcntlow
Function s_techanal_rcntlow(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 3, Optional T_ As Integer = 2) As Variant
  s_techanal_rcntlow = WindFunc("s_techanal_rcntlow", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||5f6||fffd||fffd||b8||fffd|,s_techanal_stagehigh
Function s_techanal_stagehigh(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 3, Optional N2_ As Integer = 60, Optional T_ As Integer = 2) As Variant
  s_techanal_stagehigh = WindFunc("s_techanal_stagehigh", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, T_)
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||5f6||fffd||fffd||b5||fffd|,s_techanal_stagelow
Function s_techanal_stagelow(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 3, Optional N2_ As Integer = 60, Optional T_ As Integer = 2) As Variant
  s_techanal_stagelow = WindFunc("s_techanal_stagelow", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, T_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_techanal_incdays
Function s_techanal_incdays(WINDCODE_ As Variant, Optional TD_ As Variant) As Variant
  s_techanal_incdays = WindFunc("s_techanal_incdays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_techanal_drpdays
Function s_techanal_drpdays(WINDCODE_ As Variant, Optional TD_ As Variant) As Variant
  s_techanal_drpdays = WindFunc("s_techanal_drpdays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||427||37b||fffd||1be||fffd||fffd||fffd|,s_techanal_upavgline
Function s_techanal_upavgline(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 60, Optional M_ As Integer = 3, Optional T_ As Integer = 1) As Variant
  s_techanal_upavgline = WindFunc("s_techanal_upavgline", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, T_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||427||37b||fffd||1be||fffd||fffd||fffd|,s_techanal_downavgline
Function s_techanal_downavgline(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 60, Optional M_ As Integer = 3, Optional T_ As Integer = 1) As Variant
  s_techanal_downavgline = WindFunc("s_techanal_downavgline", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, T_)
End Function

'|fffd||fffd||fffd||7f6||fffd||fffd||377||fffd||fffd||fffd||43f||fffd||fffd||1ff||fffd||fffd||fffd|,s_techanal_svravgline
Function s_techanal_svravgline(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 5, Optional N2_ As Integer = 10, Optional N3_ As Integer = 20, Optional N4_ As Integer = 30, Optional LT_ As Integer = 1, Optional T_ As Integer = 2) As Variant
  s_techanal_svravgline = WindFunc("s_techanal_svravgline", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, N4_, LT_, T_)
End Function

'BBI|fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_bbi
Function s_techind_bbi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 3, Optional N2_ As Integer = 6, Optional N3_ As Integer = 12, Optional N4_ As Integer = 24, Optional T_ As Integer = 1) As Variant
  s_techind_bbi = WindFunc("s_techind_bbi", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, N4_, T_)
End Function

'DDI|fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_ddi
Function s_techind_ddi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 13, Optional N1_ As Integer = 30, Optional M_ As Integer = 10, Optional M1_ As Integer = 5, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_ddi = WindFunc("s_techind_ddi", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, N1_, M_, M1_, LT_, T_)
End Function

'DMA|1bd||fffd||fffd||fffd||7f2||fffd|,s_techind_dma
Function s_techind_dma(WINDCODE_ As Variant, Optional TD_ As Variant, Optional SHORT_ As Integer = 10, Optional LONG_ As Integer = 50, Optional M_ As Integer = 10, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_dma = WindFunc("s_techind_dma", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), SHORT_, LONG_, M_, LT_, T_)
End Function

'DMI|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_dmi
Function s_techind_dmi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional M_ As Integer = 6, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_dmi = WindFunc("s_techind_dmi", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, LT_, T_)
End Function

'EXPMA|5b8||fffd||fffd||1bd||fffd||fffd||fffd||fffd|,s_techind_expma
Function s_techind_expma(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 5, Optional T_ As Integer = 1) As Variant
  s_techind_expma = WindFunc("s_techind_expma", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'MA|fffd||fffd||fffd||1b6||fffd||1bd||fffd||fffd|,s_techind_ma
Function s_techind_ma(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 5, Optional T_ As Integer = 1) As Variant
  s_techind_ma = WindFunc("s_techind_ma", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'MACD|5b8||fffd||fffd||1bd||fffd||fffd||fffd||fffd||36c||1bd||fffd||fffd|,s_techind_macd
Function s_techind_macd(WINDCODE_ As Variant, Optional TD_ As Variant, Optional LONG_ As Integer = 26, Optional SHORT_ As Integer = 12, Optional N_ As Integer = 9, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_macd = WindFunc("s_techind_macd", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), LONG_, SHORT_, N_, LT_, T_)
End Function

'MTM|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_mtm
Function s_techind_mtm(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6, Optional N1_ As Integer = 6, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_mtm = WindFunc("s_techind_mtm", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, N1_, LT_, T_)
End Function

'PRICEOSC|fffd||6f8||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_priceosc
Function s_techind_priceosc(WINDCODE_ As Variant, Optional TD_ As Variant, Optional LONG_ As Integer = 26, Optional SHORT_ As Integer = 12, Optional T_ As Integer = 1) As Variant
  s_techind_priceosc = WindFunc("s_techind_priceosc", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), LONG_, SHORT_, T_)
End Function

'SAR|fffd||fffd||fffd||fffd||5ea||fffd||fffd|,s_techind_sar
Function s_techind_sar(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10, Optional SP_ As Integer = 2, Optional MP_ As Integer = 20, Optional T_ As Integer = 1) As Variant
  s_techind_sar = WindFunc("s_techind_sar", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, SP_, MP_, T_)
End Function

'TRIX|fffd||fffd||fffd||fffd||5b8||fffd||fffd||1bd||fffd||fffd||1bd||fffd||fffd|,s_techind_trix
Function s_techind_trix(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional M_ As Integer = 20, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_trix = WindFunc("s_techind_trix", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, LT_, T_)
End Function

'B3612|fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd||fffd|,s_techind_b3612
Function s_techind_b3612(WINDCODE_ As Variant, Optional TD_ As Variant, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_b3612 = WindFunc("s_techind_b3612", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), LT_, T_)
End Function

'BIAS|fffd||fffd||fffd||fffd||fffd||fffd|,s_techind_bias
Function s_techind_bias(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional T_ As Integer = 1) As Variant
  s_techind_bias = WindFunc("s_techind_bias", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'CCI|2f3||fffd||fffd||5b8||fffd||fffd|,s_techind_cci
Function s_techind_cci(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional T_ As Integer = 1) As Variant
  s_techind_cci = WindFunc("s_techind_cci", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'DBCD|fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_techind_dbcd
Function s_techind_dbcd(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 5, Optional M_ As Integer = 16, Optional W_ As Integer = 76, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_dbcd = WindFunc("s_techind_dbcd", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, W_, LT_, T_)
End Function

'DPO|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_techind_dpo
Function s_techind_dpo(WINDCODE_ As Variant, Optional TD_ As Variant, Optional M1_ As Integer = 20, Optional M2_ As Integer = 6, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_dpo = WindFunc("s_techind_dpo", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), M1_, M2_, LT_, T_)
End Function

'KDJ|fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_kdj
Function s_techind_kdj(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional M1_ As Integer = 3, Optional M2_ As Integer = 3, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_kdj = WindFunc("s_techind_kdj", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M1_, M2_, LT_, T_)
End Function

'LWR|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_lwr
Function s_techind_lwr(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional M1_ As Integer = 3, Optional M2_ As Integer = 3, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_lwr = WindFunc("s_techind_lwr", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M1_, M2_, LT_, T_)
End Function

'ROC|fffd||4daf||fffd||fffd||fffd||fffd|,s_techind_poc
Function s_techind_poc(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional M_ As Integer = 6, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_poc = WindFunc("s_techind_poc", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, LT_, T_)
End Function

'RSI|fffd||fffd||fffd||1ff||fffd||fffd||5b8||fffd||fffd|,s_techind_rsi
Function s_techind_rsi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6, Optional T_ As Integer = 1) As Variant
  s_techind_rsi = WindFunc("s_techind_rsi", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'SI|fffd||6b6||fffd||5b8||fffd||fffd|,s_techind_si
Function s_techind_si(WINDCODE_ As Variant, Optional TD_ As Variant, Optional T_ As Integer = 1) As Variant
  s_techind_si = WindFunc("s_techind_si", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), T_)
End Function

'SLOWKD|fffd||fffd||fffd||fffd|KD,s_techind_slowkd
Function s_techind_slowkd(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional M1_ As Integer = 3, Optional M2_ As Integer = 3, Optional M3_ As Integer = 5, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_slowkd = WindFunc("s_techind_slowkd", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M1_, M2_, M3_, LT_, T_)
End Function

'SRDM|fffd||fffd||fffd||fffd||fffd||676||231||fffd||fffd||fffd|,s_techind_srdm
Function s_techind_srdm(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 30, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_srdm = WindFunc("s_techind_srdm", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'VROC|fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,s_techind_vroc
Function s_techind_vroc(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12) As Variant
  s_techind_vroc = WindFunc("s_techind_vroc", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_)
End Function

'VRSI|fffd||fffd||fffd||fffd||fffd||1ff||fffd||fffd|,s_techind_vrsi
Function s_techind_vrsi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6) As Variant
  s_techind_vrsi = WindFunc("s_techind_vrsi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_)
End Function

'WR|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_wr
Function s_techind_wr(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional T_ As Integer = 1) As Variant
  s_techind_wr = WindFunc("s_techind_wr", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'ARBR|fffd||fffd||fffd||fffd||fffd||fffd||538||5b8||fffd||fffd|,s_techind_arbp
Function s_techind_arbp(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_arbp = WindFunc("s_techind_arbp", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'CR|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_cr
Function s_techind_cr(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional T_ As Integer = 1) As Variant
  s_techind_cr = WindFunc("s_techind_cr", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'PSY|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_psy
Function s_techind_psy(WINDCODE_ As Variant, Optional TD_ As Variant, Optional M1_ As Integer = 12, Optional M2_ As Integer = 6, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_psy = WindFunc("s_techind_psy", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), M1_, M2_, LT_, T_)
End Function

'VR|fffd||27d||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_techind_vr
Function s_techind_vr(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26) As Variant
  s_techind_vr = WindFunc("s_techind_vr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_)
End Function

'WAD|fffd||fffd||fffd||fffd||fffd||fffd||262||5b8||fffd||fffd|,s_techind_wad
Function s_techind_wad(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_wad = WindFunc("s_techind_wad", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'MFI|fffd||2bd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_mfi
Function s_techind_mfi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional T_ As Integer = 1) As Variant
  s_techind_mfi = WindFunc("s_techind_mfi", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'OBV|fffd||fffd||fffd||fffd||fffd||fffd|,s_techind_obv
Function s_techind_obv(WINDCODE_ As Variant, Optional TD_ As Variant, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_obv = WindFunc("s_techind_obv", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), LT_, T_)
End Function

'PVT|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_pvt
Function s_techind_pvt(WINDCODE_ As Variant, Optional TD_ As Variant, Optional T_ As Integer = 1) As Variant
  s_techind_pvt = WindFunc("s_techind_pvt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), T_)
End Function

'SOBV|fffd||fffd||fffd||fffd||fffd||fffd|,s_techind_sobv
Function s_techind_sobv(WINDCODE_ As Variant, Optional TD_ As Variant) As Variant
  s_techind_sobv = WindFunc("s_techind_sobv", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_))
End Function

'WVAD|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||262||fffd||fffd|,s_techind_wvad
Function s_techind_wvad(WINDCODE_ As Variant, Optional TD_ As Variant, Optional M1_ As Integer = 24, Optional M2_ As Integer = 6, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_wvad = WindFunc("s_techind_wvad", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), M1_, M2_, LT_, T_)
End Function

'BBIBOLL|fffd||fffd||572||fffd||fffd||fffd||fffd||fffd|,s_techind_bbiboll
Function s_techind_bbiboll(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10, Optional P_ As Integer = 3, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_bbiboll = WindFunc("s_techind_bbiboll", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, P_, LT_, T_)
End Function

'BOLL|fffd||fffd||fffd||fffd||fffd||fffd|,s_techind_boll
Function s_techind_boll(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional P_ As Integer = 2, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_boll = WindFunc("s_techind_boll", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, P_, LT_, T_)
End Function

'CDP|fffd||fffd||fffd||1b2||fffd||fffd||fffd|,s_techind_cdp
Function s_techind_cdp(WINDCODE_ As Variant, Optional TD_ As Variant, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_cdp = WindFunc("s_techind_cdp", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), LT_, T_)
End Function

'ENV|5b8||fffd||fffd|,s_techind_env
Function s_techind_env(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_env = WindFunc("s_techind_env", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'MIKE|fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_mike
Function s_techind_mike(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_mike = WindFunc("s_techind_mike", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'|fffd||fffd||fffd||fffd|,s_techind_trd_vol_ratio
Function s_techind_trd_vol_ratio(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12) As Variant
  s_techind_trd_vol_ratio = WindFunc("s_techind_trd_vol_ratio", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_)
End Function

'VMA|fffd||fffd||fffd||fffd||fffd||1b6||fffd||1bd||fffd||fffd|,s_techind_vma
Function s_techind_vma(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 5) As Variant
  s_techind_vma = WindFunc("s_techind_vma", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_)
End Function

'VMACD|fffd||fffd||5b8||fffd||fffd||1bd||fffd||fffd||fffd||fffd||36c||1bd||fffd||fffd|,s_techind_vmacd
Function s_techind_vmacd(WINDCODE_ As Variant, Optional TD_ As Variant, Optional SHORT_ As Integer = 12, Optional LONG_ As Integer = 26, Optional N_ As Integer = 9, Optional LT_ As Integer = 1) As Variant
  s_techind_vmacd = WindFunc("s_techind_vmacd", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), SHORT_, LONG_, N_, LT_)
End Function

'VOSC|fffd||27d||fffd||fffd||fffd||fffd||fffd|,s_techind_vosc_vol_osci
Function s_techind_vosc_vol_osci(WINDCODE_ As Variant, Optional TD_ As Variant, Optional SHORT_ As Integer = 12, Optional LONG_ As Integer = 26) As Variant
  s_techind_vosc_vol_osci = WindFunc("s_techind_vosc_vol_osci", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), SHORT_, LONG_)
End Function

'TAPI|fffd||fffd||228||5b8||fffd||fffd||fffd||27d||fffd||5b5|,s_techind_tapi
Function s_techind_tapi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6, Optional LT_ As Integer = 1) As Variant
  s_techind_tapi = WindFunc("s_techind_tapi", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_)
End Function

'VSTD|fffd||27d||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_techind_vstd
Function s_techind_vstd(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10) As Variant
  s_techind_vstd = WindFunc("s_techind_vstd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_)
End Function

'ADTM|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_adtm
Function s_techind_adtm(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 23, Optional M_ As Integer = 8, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_adtm = WindFunc("s_techind_adtm", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, LT_, T_)
End Function

'MI|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_mi
Function s_techind_mi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_mi = WindFunc("s_techind_mi", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'MICD|fffd||fffd||36c||fffd||fffd||edaf||fffd||fffd||5b8||fffd||fffd|,s_techind_micd
Function s_techind_micd(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 3, Optional N2_ As Integer = 10, Optional N3_ As Integer = 20, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_micd = WindFunc("s_techind_micd", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, LT_, T_)
End Function

'RC|fffd||4eef||fffd||fffd||5b8||fffd||fffd|,s_techind_rc
Function s_techind_rc(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 50, Optional T_ As Integer = 1) As Variant
  s_techind_rc = WindFunc("s_techind_rc", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'RCCD|fffd||fffd||36c||fffd||fffd||fffd||4eef||fffd||fffd||5b8||fffd||fffd|,s_techind_rccd
Function s_techind_rccd(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 59, Optional N1_ As Integer = 21, Optional N2_ As Integer = 28, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_rccd = WindFunc("s_techind_rccd", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, N1_, N2_, LT_, T_)
End Function

'SRMI MI|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_srmi_mi
Function s_techind_srmi_mi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional T_ As Integer = 1) As Variant
  s_techind_srmi_mi = WindFunc("s_techind_srmi_mi", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'|fffd||fffd||fffd||fffd||36c||fffd||fffd||5b8||fffd||fffd|,s_techind_pwmi
Function s_techind_pwmi(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 7, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_pwmi = WindFunc("s_techind_pwmi", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'|fffd||5f6||fffd||1ff||fffd||fffd||5b8||fffd||fffd|,s_techind_prdstrong
Function s_techind_prdstrong(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 20, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_prdstrong = WindFunc("s_techind_prdstrong", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'|fffd||5f6||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_prdweak
Function s_techind_prdweak(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 20, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_prdweak = WindFunc("s_techind_prdweak", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,s_techind_bottom
Function s_techind_bottom(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 125, Optional N2_ As Integer = 5, Optional N3_ As Integer = 20, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_bottom = WindFunc("s_techind_bottom", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, LT_, T_)
End Function

'ATR|fffd||fffd||2b5||fffd||fffd||fffd||fffd|,s_techind_atr
Function s_techind_atr(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional LT_ As Integer = 1, Optional T_ As Integer = 1) As Variant
  s_techind_atr = WindFunc("s_techind_atr", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, LT_, T_)
End Function

'MASS|f7||2ff||fffd||fffd|,s_techind_mass
Function s_techind_mass(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 9, Optional N2_ As Integer = 25, Optional T_ As Integer = 1) As Variant
  s_techind_mass = WindFunc("s_techind_mass", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, T_)
End Function

'STD|fffd||fffd||5fc||fffd||fffd|,s_techind_std
Function s_techind_std(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional T_ As Integer = 1) As Variant
  s_techind_std = WindFunc("s_techind_std", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'VHF|fffd||77a||fffd||5b8||fffd||fffd|,s_techind_vhf
Function s_techind_vhf(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 28, Optional T_ As Integer = 1) As Variant
  s_techind_vhf = WindFunc("s_techind_vhf", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'CVLT|fffd||fffd||fffd||fffd||fffd||fffd||262||5b8||fffd||fffd|,s_techind_volati
Function s_techind_volati(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10, Optional T_ As Integer = 1) As Variant
  s_techind_volati = WindFunc("s_techind_volati", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, T_)
End Function

'|fffd||fffd||fffd||439||fffd||2fe||2b5||fffd||2bf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_holder_Controller
Function s_holder_Controller(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
  s_holder_Controller = WindFunc("s_holder_Controller", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||6f2||fffd||fffd||fffd||46f||fffd||fffd||fffd||73c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_inquiry
Function s_ipo_inquiry(WINDCODE_ As Variant) As Variant
  s_ipo_inquiry = WindFunc("s_ipo_inquiry", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||6f2||fffd||fffd||fffd||46f||fffd||6fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_ipo_inquiry_inst
Function s_ipo_inquiry_inst(WINDCODE_ As Variant) As Variant
  s_ipo_inquiry_inst = WindFunc("s_ipo_inquiry_inst", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Null, Null, Null, Null, Null)
End Function

'|3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_fa_ebitda2
Function s_fa_ebitda2(WINDCODE_ As Variant, DEALDATE_ As Variant, TP_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fa_ebitda2 = WindFunc("s_fa_ebitda2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TP_, Null, Null, Null)
    If VarType(s_fa_ebitda2) <> vbString Then
        s_fa_ebitda2 = s_fa_ebitda2 / UnitVal_
    End If
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),s_fa_ebit2
Function s_fa_ebit2(WINDCODE_ As Variant, DEALDATE_ As Variant, TP_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  s_fa_ebit2 = WindFunc("s_fa_ebit2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TP_, Null, Null, Null)
    If VarType(s_fa_ebit2) <> vbString Then
        s_fa_ebit2 = s_fa_ebit2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_val_mv_ARD
Function s_val_mv_ARD(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_val_mv_ARD = WindFunc("s_val_mv_ARD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(DEALDATE_), Null, Null, Null, Null)
    If VarType(s_val_mv_ARD) <> vbString Then
        s_val_mv_ARD = s_val_mv_ARD / UnitVal_
    End If
End Function

'|fffd||43e||fffd||fffd||fffd|(LF)(|fffd||fffd||fffd||fffd|),S_VAL_PB_LF
Function S_VAL_PB_LF(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
  S_VAL_PB_LF = WindFunc("S_VAL_PB_LF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(DEALDATE_), Null, Null, Null, Null)
End Function


'''''|56e||22f|'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'|56e||22f||fffd||fffd||fffd||fffd|,B_Info_Code
Function B_Info_Code(WINDCODE_ As Variant) As Variant
  B_Info_Code = WindFunc("B_INFO_CODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||fffd|,B_Info_Name
Function B_Info_Name(WINDCODE_ As Variant) As Variant
  B_Info_Name = WindFunc("B_INFO_NAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||fffd||fffd|,B_Info_FullName
Function B_Info_FullName(WINDCODE_ As Variant) As Variant
  B_Info_FullName = WindFunc("B_INFO_FULLNAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||fffd||fffd|,B_Info_Type
Function B_Info_Type(WINDCODE_ As Variant) As Variant
  B_Info_Type = WindFunc("B_INFO_TYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_ListedDate
Function B_Info_ListedDate(WINDCODE_ As Variant) As Variant
  B_Info_ListedDate = WindFunc("B_INFO_LISTEDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_Issuer
Function B_Info_Issuer(WINDCODE_ As Variant) As Variant
  B_Info_Issuer = WindFunc("B_INFO_ISSUER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,B_Info_Term
Function B_Info_Term(WINDCODE_ As Variant) As Variant
  B_Info_Term = WindFunc("B_INFO_TERM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|,B_Info_CarryDate
Function B_Info_CarryDate(WINDCODE_ As Variant) As Variant
  B_Info_CarryDate = WindFunc("B_INFO_CARRYDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_MaturityDate
Function B_Info_MaturityDate(WINDCODE_ As Variant) As Variant
  B_Info_MaturityDate = WindFunc("B_INFO_MATURITYDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||43c||6f8||fffd|,B_Info_IssuePrice
Function B_Info_IssuePrice(WINDCODE_ As Variant) As Variant
  B_Info_IssuePrice = WindFunc("B_INFO_ISSUEPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|3e2||1b1||1b7||fffd||fffd|,B_Info_Coupon
Function B_Info_Coupon(WINDCODE_ As Variant) As Variant
  B_Info_Coupon = WindFunc("B_INFO_COUPON", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_InterestType
Function B_Info_InterestType(WINDCODE_ As Variant) As Variant
  B_Info_InterestType = WindFunc("B_INFO_INTERESTTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|1b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||2b1|),B_Info_CouponRate
Function B_Info_CouponRate(WINDCODE_ As Variant) As Variant
  B_Info_CouponRate = WindFunc("B_INFO_COUPONRATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|1b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_Info_CouponRate2
Function B_Info_CouponRate2(WINDCODE_ As Variant) As Variant
  B_Info_CouponRate2 = WindFunc("B_INFO_COUPONRATE2", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5fc||fffd||fffd||fffd||fffd|,B_Info_BaseRate
Function B_Info_BaseRate(WINDCODE_ As Variant) As Variant
  B_Info_BaseRate = WindFunc("B_INFO_BASERATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,B_Info_Spread
Function B_Info_Spread(WINDCODE_ As Variant) As Variant
  B_Info_Spread = WindFunc("B_INFO_SPREAD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||ae36||3e2||fffd||fffd||fffd||fffd|,B_Info_InterestFrequency
Function B_Info_InterestFrequency(WINDCODE_ As Variant) As Variant
  B_Info_InterestFrequency = WindFunc("B_INFO_INTERESTFREQUENCY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2bd|,B_Info_RepaymentMethod
Function B_Info_RepaymentMethod(WINDCODE_ As Variant) As Variant
  B_Info_RepaymentMethod = WindFunc("B_INFO_REPAYMENTMETHOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fc||fffd||fffd||fffd|,B_Info_CreditRating
Function B_Info_CreditRating(WINDCODE_ As Variant) As Variant
  B_Info_CreditRating = WindFunc("B_INFO_CREDITRATING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_CreditRatingAgency
Function B_Info_CreditRatingAgency(WINDCODE_ As Variant) As Variant
  B_Info_CreditRatingAgency = WindFunc("B_INFO_CREDITRATINGAGENCY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|,B_Info_IssueAmount
Function B_Info_IssueAmount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  B_Info_IssueAmount = WindFunc("B_INFO_ISSUEAMOUNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(B_Info_IssueAmount) <> vbString Then
        B_Info_IssueAmount = B_Info_IssueAmount / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_LatestIssurerCreditRating
Function B_Info_LatestIssurerCreditRating(WINDCODE_ As Variant) As Variant
  B_Info_LatestIssurerCreditRating = WindFunc("B_INFO_LATESTISSURERCREDITRATING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_LatestIssurerCreditRatingDate
Function B_Info_LatestIssurerCreditRatingDate(WINDCODE_ As Variant) As Variant
  B_Info_LatestIssurerCreditRatingDate = WindFunc("B_INFO_LATESTISSURERCREDITRATINGDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_LatestIssurerCreditRatingType
Function B_Info_LatestIssurerCreditRatingType(WINDCODE_ As Variant) As Variant
  B_Info_LatestIssurerCreditRatingType = WindFunc("B_INFO_LATESTISSURERCREDITRATINGTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Info_IssurerCreditRatingCompany
Function B_Info_IssurerCreditRatingCompany(WINDCODE_ As Variant) As Variant
  B_Info_IssurerCreditRatingCompany = WindFunc("B_RATE_ISSURERCREDITRATINGCOMPANY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,B_DQ_Close
Function B_DQ_Close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_DQ_Close = WindFunc("B_DQ_CLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,B_DQ_Open
Function B_DQ_Open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_DQ_Open = WindFunc("B_DQ_OPEN", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|,B_DQ_High
Function B_DQ_High(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_DQ_High = WindFunc("B_DQ_HIGH", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|,B_DQ_Low
Function B_DQ_Low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_DQ_Low = WindFunc("B_DQ_LOW", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0||fffd||fffd||fffd||33c||fffd|,B_DQ_PreClose
Function B_DQ_PreClose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_DQ_PreClose = WindFunc("B_DQ_PRECLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,B_DQ_AvgPrice
Function B_DQ_AvgPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 2) As Variant
  B_DQ_AvgPrice = WindFunc("b_dq_avgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||1f5||fffd|,B_DQ_Change
Function B_DQ_Change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_DQ_Change = WindFunc("B_DQ_CHANGE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|,B_DQ_PctChange
Function B_DQ_PctChange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_DQ_PctChange = WindFunc("B_DQ_PCTCHANGE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|,B_DQ_Volume
Function B_DQ_Volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  B_DQ_Volume = WindFunc("B_DQ_VOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(B_DQ_Volume) <> vbString Then
        B_DQ_Volume = B_DQ_Volume / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|,B_DQ_Amount
Function B_DQ_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 2, Optional UnitVal_ As Double = 1) As Variant
  B_DQ_Amount = WindFunc("B_DQ_AMOUNT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
    If VarType(B_DQ_Amount) <> vbString Then
        B_DQ_Amount = B_DQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,B_PQ_Close
Function B_PQ_Close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_Close = WindFunc("b_pq_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|,B_PQ_Open
Function B_PQ_Open(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_Open = WindFunc("b_pq_open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,B_PQ_High
Function B_PQ_High(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_High = WindFunc("b_pq_high", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,B_PQ_Low
Function B_PQ_Low(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_Low = WindFunc("b_pq_low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,B_PQ_PreClose
Function B_PQ_PreClose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_PreClose = WindFunc("b_pq_preclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,B_PQ_AvgPrice
Function B_PQ_AvgPrice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_AvgPrice = WindFunc("b_pq_avgprice", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,B_PQ_Change
Function B_PQ_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_Change = WindFunc("b_pq_change", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,B_PQ_PctChange
Function B_PQ_PctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_PctChange = WindFunc("b_pq_pctchange", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,B_PQ_Volume
Function B_PQ_Volume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  B_PQ_Volume = WindFunc("b_pq_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(B_PQ_Volume) <> vbString Then
        B_PQ_Volume = B_PQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,B_PQ_Amount
Function B_PQ_Amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_PQ_Amount = WindFunc("b_pq_amount", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
    If VarType(B_PQ_Amount) <> vbString Then
        B_PQ_Amount = B_PQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,B_PQ_AvgVolume
Function B_PQ_AvgVolume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  B_PQ_AvgVolume = WindFunc("s_pq_avgvolume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(B_PQ_AvgVolume) <> vbString Then
        B_PQ_AvgVolume = B_PQ_AvgVolume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,B_PQ_AvgAmount
Function B_PQ_AvgAmount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  B_PQ_AvgAmount = WindFunc("s_pq_avgamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4efb||fffd||fffd||fffd||fffd|,B_PQ_Turn
Function B_PQ_Turn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  B_PQ_Turn = WindFunc("s_pq_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_PQ_AvgTurn
Function B_PQ_AvgTurn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  B_PQ_AvgTurn = WindFunc("s_pq_avgturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4f7b||fffd||fffd||fffd||fffd||fffd||fffd|,B_PQ_TradeDays
Function B_PQ_TradeDays(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_TradeDays = WindFunc("b_pq_tradedays", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||fffd|,B_PQ_Theory
Function B_PQ_Theory(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_PQ_Theory = WindFunc("b_pq_theory", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||4bb||fffd||fffd||3e2||fffd||fffd|,B_ANAL_NXCUPN
Function B_ANAL_NXCUPN(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_ANAL_NXCUPN = WindFunc("B_ANAL_NXCUPN", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||47c||fffd||3e2||fffd||fffd||fffd||fffd|,B_Anal_AccruedDays
Function B_Anal_AccruedDays(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_AccruedDays = WindFunc("B_ANAL_ACCRUEDDAYS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||fffd||3e2|,B_Anal_AccruedInterest
Function B_Anal_AccruedInterest(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_AccruedInterest = WindFunc("B_ANAL_ACCRUEDINTEREST", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Anal_PTM
Function B_Anal_PTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Select Case TYPE_
    Case 1
            B_Anal_PTM = WindFunc("B_ANAL_DAY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    Case 2
            B_Anal_PTM = WindFunc("B_ANAL_PTMYEAR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
  End Select
End Function

'|fffd||fffd||fffd||fffd|,B_Anal_Duration
Function B_Anal_Duration(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_Duration = WindFunc("B_ANAL_DURATION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Anal_ModifiedDuration
Function B_Anal_ModifiedDuration(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_ModifiedDuration = WindFunc("B_ANAL_MODIFIEDDURATION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|379||fffd||fffd|,B_Anal_Convexity
Function B_Anal_Convexity(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_Convexity = WindFunc("B_ANAL_CONVEXITY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Anal_YTM
Function B_Anal_YTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Anal_YTM = WindFunc("B_Anal_YTM", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Anal_YTC
Function B_Anal_YTC(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_YTC = WindFunc("B_ANAL_YTC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Anal_YTP
Function B_Anal_YTP(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_YTP = WindFunc("B_ANAL_YTP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5fc||fffd||fffd||fffd||fffd|,B_Anal_BaseDuration
Function B_Anal_BaseDuration(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_BaseDuration = WindFunc("B_ANAL_BDURATION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Anal_SpreadDuration
Function B_Anal_SpreadDuration(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_Anal_SpreadDuration = WindFunc("B_ANAL_SDURATION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|56e||22f|/|52d||2bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd|,B_Stm_IS
Function B_Stm_IS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_Stm_IS = WindFunc("S_Stm_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_Stm_IS) <> vbString Then
        B_Stm_IS = B_Stm_IS / UnitVal_
    End If
End Function

'|56e||22f|/|52d||2bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|,B_Stm_BS
Function B_Stm_BS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_Stm_BS = WindFunc("S_Stm_BS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_Stm_BS) <> vbString Then
        B_Stm_BS = B_Stm_BS / UnitVal_
    End If
End Function

'|56e||22f|/|52d||2bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Stm_CS
Function B_Stm_CS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_Stm_CS = WindFunc("S_Stm_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_Stm_CS) <> vbString Then
        B_Stm_CS = B_Stm_CS / UnitVal_
    End If
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd|,B_QStm_IS
Function B_QStm_IS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  B_QStm_IS = WindFunc("S_QStm_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), 1, Null, Null)
    If VarType(B_QStm_IS) <> vbString Then
        B_QStm_IS = B_QStm_IS / UnitVal_
    End If
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_QStm_CS
Function B_QStm_CS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  B_QStm_CS = WindFunc("S_QStm_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), 1, Null, Null)
    If VarType(B_QStm_CS) <> vbString Then
        B_QStm_CS = B_QStm_CS / UnitVal_
    End If
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||3f8|,B_StmNote_Inv
Function B_StmNote_Inv(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant) As Variant
  B_StmNote_Inv = WindFunc("s_stmnote_inv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|4e6||fffd||fffd||fffd||2bf||fffd||fffd||fffd||3f8|,B_StmNote_AR
Function B_StmNote_AR(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_StmNote_AR = WindFunc("s_stmnote_ar", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||2b2||fffd||fffd||fffd||5b5||5fc||fffd||fffd||fffd||fffd||3f8|,B_StmNote_Reserve
Function B_StmNote_Reserve(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional TYPE1_ As Integer = 1) As Variant
  B_StmNote_Reserve = WindFunc("S_StmNote_Reserve", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, TYPE1_, Null)
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f8|,B_StmNote_FinExp
Function B_StmNote_FinExp(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant) As Variant
  B_StmNote_FinExp = WindFunc("s_stmnote_finexp", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), 1, Null, Null)
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||2f0||2f0||fffd||fffd|,B_StmNote_Tax
Function B_StmNote_Tax(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  B_StmNote_Tax = WindFunc("s_stmnote_tax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_StmNote_Guarantee
Function B_StmNote_Guarantee(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant) As Variant
  B_StmNote_Guarantee = WindFunc("s_stmnote_guarantee", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)

End Function

'|56e||22f|/|fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||5e8||fffd||fffd||5b8||fffd||aeaf||fffd||fffd|,B_StmNote_Bank
Function B_StmNote_Bank(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant) As Variant
  B_StmNote_Bank = WindFunc("S_StmNote_Bank", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||bfbb||fffd||fffd|(|fffd||fffd||228||1bd||fffd||fffd|),B_DQ_BINETBID_WT
Function B_DQ_BINETBID_WT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BINETBID_WT = WindFunc("b_dq_binetbid_wt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||228||1bd||fffd||fffd|),B_DQ_BIBIDRT_WT
Function B_DQ_BIBIDRT_WT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BIBIDRT_WT = WindFunc("b_dq_bibidrt_wt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||228||1bd||fffd||fffd|),B_DQ_BINETASK_WT
Function B_DQ_BINETASK_WT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BINETASK_WT = WindFunc("b_dq_binetask_wt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||228||1bd||fffd||fffd|),B_DQ_BIASKRT_WT
Function B_DQ_BIASKRT_WT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BIASKRT_WT = WindFunc("b_dq_biaskrt_wt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||bfbb||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_BINETBID_BST
Function B_DQ_BINETBID_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BINETBID_BST = WindFunc("b_dq_binetbid_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_BIBIDRT_BST
Function B_DQ_BIBIDRT_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BIBIDRT_BST = WindFunc("b_dq_bibidrt_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_BINETASK_BST
Function B_DQ_BINETASK_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BINETASK_BST = WindFunc("b_dq_binetask_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_BIASKRT_BST
Function B_DQ_BIASKRT_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BIASKRT_BST = WindFunc("b_dq_biaskrt_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2eb||fffd||7f1||fffd||fffd||6f1||fffd||fffd||fffd|,B_DQ_BIQTVOLM
Function B_DQ_BIQTVOLM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BIQTVOLM = WindFunc("b_dq_biqtvolm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||bfbb||fffd||fffd|(|fffd||fffd||fffd||fffd||1bd||fffd||fffd|),B_DQ_NETBID_AVG
Function B_DQ_NETBID_AVG(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_NETBID_AVG = WindFunc("b_dq_netbid_avg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1bd||fffd||fffd|),B_DQ_BIDRT_AVG
Function B_DQ_BIDRT_AVG(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BIDRT_AVG = WindFunc("b_dq_bidrt_avg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1bd||fffd||fffd|),B_DQ_NETASK_AVG
Function B_DQ_NETASK_AVG(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_NETASK_AVG = WindFunc("b_dq_netask_avg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1bd||fffd||fffd|),B_DQ_ASKRT_AVG
Function B_DQ_ASKRT_AVG(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_ASKRT_AVG = WindFunc("b_dq_askrt_avg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||bfbb||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_NETBID_BST
Function B_DQ_NETBID_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_NETBID_BST = WindFunc("b_dq_netbid_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_BIDRT_BST
Function B_DQ_BIDRT_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_BIDRT_BST = WindFunc("b_dq_bidrt_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_NETASK_BST
Function B_DQ_NETASK_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_NETASK_BST = WindFunc("b_dq_netask_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_DQ_ASKRT_BST
Function B_DQ_ASKRT_BST(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_ASKRT_BST = WindFunc("b_dq_askrt_bst", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6f1||fffd||fffd||fffd||fffd||731||fffd||fffd||fffd|,B_DQ_QTVOLM
Function B_DQ_QTVOLM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_DQ_QTVOLM = WindFunc("b_dq_qtvolm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),B_ANAL_MATU_CNBD
Function B_ANAL_MATU_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_MATU_CNBD = WindFunc("B_ANAL_MATU_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||22b||fffd||fffd|,B_ANAL_DIRTY_CNBD
Function B_ANAL_DIRTY_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_DIRTY_CNBD = WindFunc("B_ANAL_DIRTY_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||fffd||3e2|,B_ANAL_ACCRINT_CNBD
Function B_ANAL_ACCRINT_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_ACCRINT_CNBD = WindFunc("B_ANAL_ACCRINT_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd|,B_ANAL_NET_CNBD
Function B_ANAL_NET_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_NET_CNBD = WindFunc("B_ANAL_NET_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(%),B_ANAL_YIELD_CNBD
Function B_ANAL_YIELD_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_YIELD_CNBD = WindFunc("B_ANAL_YIELD_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_ANAL_MODIDURA_CNBD
Function B_ANAL_MODIDURA_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_MODIDURA_CNBD = WindFunc("B_ANAL_MODIDURA_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||379||fffd||fffd|,B_ANAL_CNVXTY_CNBD
Function B_ANAL_CNVXTY_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_CNVXTY_CNBD = WindFunc("B_ANAL_CNVXTY_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fb||fffd||fffd||fffd||fffd||5b5|,B_ANAL_VOBP_CNBD
Function B_ANAL_VOBP_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_VOBP_CNBD = WindFunc("B_ANAL_VOBP_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_ANAL_SPRDURA_CNBD
Function B_ANAL_SPRDURA_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_SPRDURA_CNBD = WindFunc("B_ANAL_SPRDURA_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd|,B_ANAL_SPRCNXT_CNBD
Function B_ANAL_SPRCNXT_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_SPRCNXT_CNBD = WindFunc("B_ANAL_SPRCNXT_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd|,B_ANAL_IDXDURA_CNBD
Function B_ANAL_IDXDURA_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_IDXDURA_CNBD = WindFunc("B_ANAL_IDXDURA_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd|,B_ANAL_IDXCNXT_CNBD
Function B_ANAL_IDXCNXT_CNBD(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_ANAL_IDXCNXT_CNBD = WindFunc("B_ANAL_IDXCNXT_CNBD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function b_info_form(WINDCODE_ As Variant) As Variant
  b_info_form = WindFunc("B_INFO_FORM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_par(WINDCODE_ As Variant) As Variant
  b_info_par = WindFunc("B_INFO_PAR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_cmbir(WINDCODE_ As Variant) As Variant
  b_info_cmbir = WindFunc("B_INFO_CMBIR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_paymenttype(WINDCODE_ As Variant) As Variant
  b_info_paymenttype = WindFunc("B_INFO_PAYMENTTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_clause(WINDCODE_ As Variant) As Variant
  b_info_clause = WindFunc("B_INFO_CLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_subordinateornot(WINDCODE_ As Variant) As Variant
  b_info_subordinateornot = WindFunc("B_INFO_SUBORDINATEORNOT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_mixcapital(WINDCODE_ As Variant) As Variant
  b_info_mixcapital = WindFunc("B_INFO_MIXCAPITAL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_embeddedopt(WINDCODE_ As Variant) As Variant
  b_info_embeddedopt = WindFunc("B_INFO_EMBEDDEDOPT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_issueadditional(WINDCODE_ As Variant) As Variant
  b_info_issueadditional = WindFunc("B_INFO_ISSUEADDITIONAL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_taxrate(WINDCODE_ As Variant) As Variant
  b_info_taxrate = WindFunc("B_INFO_TAXRATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_listedmkt(WINDCODE_ As Variant) As Variant
  b_info_listedmkt = WindFunc("B_INFO_LISTEDMKT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_issueren(WINDCODE_ As Variant) As Variant
  b_issuer_issueren = WindFunc("B_ISSUER_ISSUEREN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_listingornot(WINDCODE_ As Variant) As Variant
  b_issuer_listingornot = WindFunc("B_ISSUER_LISTINGORNOT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_windindustry(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_issuer_windindustry = WindFunc("B_ISSUER_WINDINDUSTRY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), TYPE_, Null, Null, Null, Null)
End Function

Function b_issuer_windindustrycode(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_issuer_windindustrycode = WindFunc("B_ISSUER_WINDINDUSTRYCODE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), TYPE_, Null, Null, Null, Null)
End Function

Function b_issuer_shareholder(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_issuer_shareholder = WindFunc("B_ISSUER_SHAREHOLDER", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function b_issuer_propofshareholder(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_issuer_propofshareholder = WindFunc("B_ISSUER_PROPOFSHAREHOLDER", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function b_issuer_sharecategory(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_issuer_sharecategory = WindFunc("B_ISSUER_SHARECATEGORY", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function b_issuer_representative(WINDCODE_ As Variant) As Variant
  b_issuer_representative = WindFunc("B_ISSUER_REPRESENTATIVE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_manager(WINDCODE_ As Variant) As Variant
  b_issuer_manager = WindFunc("B_ISSUER_MANAGER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_regcapital(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_issuer_regcapital = WindFunc("B_ISSUER_REGCAPITAL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_issuer_regcapital) <> vbString Then
        b_issuer_regcapital = b_issuer_regcapital / UnitVal_
    End If
End Function

Function b_issuer_regaddress(WINDCODE_ As Variant) As Variant
  b_issuer_regaddress = WindFunc("B_ISSUER_REGADDRESS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_office(WINDCODE_ As Variant) As Variant
  b_issuer_office = WindFunc("B_ISSUER_OFFICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_bussinessnmb(WINDCODE_ As Variant) As Variant
  b_issuer_bussinessnmb = WindFunc("B_ISSUER_BUSSINESSNMB", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_employee(WINDCODE_ As Variant) As Variant
  b_issuer_employee = WindFunc("B_ISSUER_EMPLOYEE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_scope(WINDCODE_ As Variant) As Variant
  b_issuer_scope = WindFunc("B_ISSUER_SCOPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_mainproduct(WINDCODE_ As Variant) As Variant
  b_issuer_mainproduct = WindFunc("B_ISSUER_MAINPRODUCT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_phone(WINDCODE_ As Variant) As Variant
  b_issuer_phone = WindFunc("B_ISSUER_PHONE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_fax(WINDCODE_ As Variant) As Variant
  b_issuer_fax = WindFunc("B_ISSUER_FAX", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_zipcode(WINDCODE_ As Variant) As Variant
  b_issuer_zipcode = WindFunc("B_ISSUER_ZIPCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_email(WINDCODE_ As Variant) As Variant
  b_issuer_email = WindFunc("B_ISSUER_EMAIL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_website(WINDCODE_ As Variant) As Variant
  b_issuer_website = WindFunc("B_ISSUER_WEBSITE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issuer_foundeddate(WINDCODE_ As Variant) As Variant
  b_issuer_foundeddate = WindFunc("B_ISSUER_FOUNDEDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_announcement(WINDCODE_ As Variant) As Variant
  b_issue_announcement = WindFunc("B_ISSUE_ANNOUNCEMENT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_firstissue(WINDCODE_ As Variant) As Variant
  b_issue_firstissue = WindFunc("B_ISSUE_FIRSTISSUE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_lastissue(WINDCODE_ As Variant) As Variant
  b_issue_lastissue = WindFunc("B_ISSUE_LASTISSUE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_issuemethod(WINDCODE_ As Variant) As Variant
  b_issue_issuemethod = WindFunc("B_ISSUE_ISSUEMETHOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_issueaim(WINDCODE_ As Variant) As Variant
  b_issue_issueaim = WindFunc("B_ISSUE_ISSUEAIM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_issueprice(WINDCODE_ As Variant) As Variant
  b_issue_issueprice = WindFunc("B_ISSUE_ISSUEPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_amountplan(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_issue_amountplan = WindFunc("B_ISSUE_AMOUNTPLAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_issue_amountplan) <> vbString Then
        b_issue_amountplan = b_issue_amountplan / UnitVal_
    End If
End Function

Function b_issue_amountact(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_issue_amountact = WindFunc("B_ISSUE_AMOUNTACT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_issue_amountact) <> vbString Then
        b_issue_amountact = b_issue_amountact / UnitVal_
    End If
End Function

Function b_issue_fee(WINDCODE_ As Variant) As Variant
  b_issue_fee = WindFunc("B_ISSUE_FEE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_issueol(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_issue_issueol = WindFunc("B_ISSUE_ISSUEOL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_issue_issueol) <> vbString Then
        b_issue_issueol = b_issue_issueol / UnitVal_
    End If
End Function

Function b_issue_firstissueol(WINDCODE_ As Variant) As Variant
  b_issue_firstissueol = WindFunc("B_ISSUE_FIRSTISSUEOL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_lastissueol(WINDCODE_ As Variant) As Variant
  b_issue_lastissueol = WindFunc("B_ISSUE_LASTISSUEOL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_raraisol(WINDCODE_ As Variant) As Variant
  b_issue_raraisol = WindFunc("B_ISSUE_RARAISOL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_issue_listance(WINDCODE_ As Variant) As Variant
  b_issue_listance = WindFunc("B_ISSUE_LISTANCE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_ancedate(WINDCODE_ As Variant) As Variant
  b_tender_ancedate = WindFunc("B_TENDER_ANCEDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_tenderdate(WINDCODE_ As Variant) As Variant
  b_tender_tenderdate = WindFunc("B_TENDER_TENDERDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_method(WINDCODE_ As Variant) As Variant
  b_tender_method = WindFunc("B_TENDER_METHOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_object(WINDCODE_ As Variant) As Variant
  b_tender_object = WindFunc("B_TENDER_OBJECT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_aiminvst(WINDCODE_ As Variant) As Variant
  b_tender_aiminvst = WindFunc("B_TENDER_AIMINVST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_explanation(WINDCODE_ As Variant) As Variant
  b_tender_explanation = WindFunc("B_TENDER_EXPLANATION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_amountplan(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tender_amountplan = WindFunc("B_TENDER_AMOUNTPLAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tender_amountplan) <> vbString Then
        b_tender_amountplan = b_tender_amountplan / UnitVal_
    End If
End Function

Function b_tender_cmptamnt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tender_cmptamnt = WindFunc("B_TENDER_CMPTAMNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tender_cmptamnt) <> vbString Then
        b_tender_cmptamnt = b_tender_cmptamnt / UnitVal_
    End If
End Function

Function b_tender_underwriting(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tender_underwriting = WindFunc("B_TENDER_UNDERWRITING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tender_underwriting) <> vbString Then
        b_tender_underwriting = b_tender_underwriting / UnitVal_
    End If
End Function

Function b_tender_addratio(WINDCODE_ As Variant) As Variant
  b_tender_addratio = WindFunc("B_TENDER_ADDRATIO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_additiverights(WINDCODE_ As Variant) As Variant
  b_tender_additiverights = WindFunc("B_TENDER_ADDITIVERIGHTS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_threshold(WINDCODE_ As Variant) As Variant
  b_tender_threshold = WindFunc("B_TENDER_THRESHOLD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_ceiling(WINDCODE_ As Variant) As Variant
  b_tender_ceiling = WindFunc("B_TENDER_CEILING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_tenderunit(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tender_tenderunit = WindFunc("B_TENDER_TENDERUNIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tender_tenderunit) <> vbString Then
        b_tender_tenderunit = b_tender_tenderunit / UnitVal_
    End If
End Function

Function b_tender_lowestamnt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tender_lowestamnt = WindFunc("B_TENDER_LOWESTAMNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tender_lowestamnt) <> vbString Then
        b_tender_lowestamnt = b_tender_lowestamnt / UnitVal_
    End If
End Function

Function b_tender_highestamnt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tender_highestamnt = WindFunc("B_TENDER_HIGHESTAMNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tender_highestamnt) <> vbString Then
        b_tender_highestamnt = b_tender_highestamnt / UnitVal_
    End If
End Function

Function b_tender_explntender(WINDCODE_ As Variant) As Variant
  b_tender_explntender = WindFunc("B_TENDER_EXPLNTENDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_paymentdate(WINDCODE_ As Variant) As Variant
  b_tender_paymentdate = WindFunc("B_TENDER_PAYMENTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_confirmdate(WINDCODE_ As Variant) As Variant
  b_tender_confirmdate = WindFunc("B_TENDER_CONFIRMDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_transferdate(WINDCODE_ As Variant) As Variant
  b_tender_transferdate = WindFunc("B_TENDER_TRANSFERDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_distribbegin(WINDCODE_ As Variant) As Variant
  b_tender_distribbegin = WindFunc("B_TENDER_DISTRIBBEGIN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_distribend(WINDCODE_ As Variant) As Variant
  b_tender_distribend = WindFunc("B_TENDER_DISTRIBEND", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_underwritingcost(WINDCODE_ As Variant) As Variant
  b_tender_underwritingcost = WindFunc("B_TENDER_UNDERWRITINGCOST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tender_commissioncharge(WINDCODE_ As Variant) As Variant
  b_tender_commissioncharge = WindFunc("B_TENDER_COMMISSIONCHARGE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_documtnumber(WINDCODE_ As Variant) As Variant
  b_tendrst_documtnumber = WindFunc("B_TENDRST_DOCUMTNUMBER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_payamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_payamount = WindFunc("B_TENDRST_PAYAMOUNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_payamount) <> vbString Then
        b_tendrst_payamount = b_tendrst_payamount / UnitVal_
    End If
End Function

Function b_tendrst_amountact(WINDCODE_ As Variant) As Variant
  b_tendrst_amountact = WindFunc("B_TENDRST_AMOUNTACT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_underwriting(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_underwriting = WindFunc("B_TENDRST_UNDERWRITING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_underwriting) <> vbString Then
        b_tendrst_underwriting = b_tendrst_underwriting / UnitVal_
    End If
End Function

Function b_tendrst_amnt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_amnt = WindFunc("B_TENDRST_AMNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_amnt) <> vbString Then
        b_tendrst_amnt = b_tendrst_amnt / UnitVal_
    End If
End Function

Function b_tendrst_oughttender(WINDCODE_ As Variant) As Variant
  b_tendrst_oughttender = WindFunc("B_TENDRST_OUGHTTENDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_investortendered(WINDCODE_ As Variant) As Variant
  b_tendrst_investortendered = WindFunc("B_TENDRST_INVESTORTENDERED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_tenders(WINDCODE_ As Variant) As Variant
  b_tendrst_tenders = WindFunc("B_TENDRST_TENDERS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_effecttender(WINDCODE_ As Variant) As Variant
  b_tendrst_effecttender = WindFunc("B_TENDRST_EFFECTTENDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_ineffecttender(WINDCODE_ As Variant) As Variant
  b_tendrst_ineffecttender = WindFunc("B_TENDRST_INEFFECTTENDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_effectamnt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_effectamnt = WindFunc("B_TENDRST_EFFECTAMNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_effectamnt) <> vbString Then
        b_tendrst_effectamnt = b_tendrst_effectamnt / UnitVal_
    End If
End Function

Function b_tendrst_hightest(WINDCODE_ As Variant) As Variant
  b_tendrst_hightest = WindFunc("B_TENDRST_HIGHTEST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_lowest(WINDCODE_ As Variant) As Variant
  b_tendrst_lowest = WindFunc("B_TENDRST_LOWEST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_winningamnt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_winningamnt = WindFunc("B_TENDRST_WINNINGAMNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_winningamnt) <> vbString Then
        b_tendrst_winningamnt = b_tendrst_winningamnt / UnitVal_
    End If
End Function

Function b_tendrst_winnerbidder(WINDCODE_ As Variant) As Variant
  b_tendrst_winnerbidder = WindFunc("B_TENDRST_WINNERBIDDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_winningbidder(WINDCODE_ As Variant) As Variant
  b_tendrst_winningbidder = WindFunc("B_TENDRST_WINNINGBIDDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_privatetrade(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_privatetrade = WindFunc("B_TENDRST_PRIVATETRADE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_privatetrade) <> vbString Then
        b_tendrst_privatetrade = b_tendrst_privatetrade / UnitVal_
    End If
End Function

Function b_tendrst_hightprice(WINDCODE_ As Variant) As Variant
  b_tendrst_hightprice = WindFunc("B_TENDRST_HIGHTPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_lowprice(WINDCODE_ As Variant) As Variant
  b_tendrst_lowprice = WindFunc("B_TENDRST_LOWPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_margamnt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_margamnt = WindFunc("B_TENDRST_MARGAMNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_margamnt) <> vbString Then
        b_tendrst_margamnt = b_tendrst_margamnt / UnitVal_
    End If
End Function

Function b_tendrst_margwinbidder(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_tendrst_margwinbidder = WindFunc("B_TENDRST_MARGWINBIDDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
    If VarType(b_tendrst_margwinbidder) <> vbString Then
        b_tendrst_margwinbidder = b_tendrst_margwinbidder / UnitVal_
    End If
End Function

Function b_tendrst_finalprice(WINDCODE_ As Variant) As Variant
  b_tendrst_finalprice = WindFunc("B_TENDRST_FINALPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_referyield(WINDCODE_ As Variant) As Variant
  b_tendrst_referyield = WindFunc("B_TENDRST_REFERYIELD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_financoupon(WINDCODE_ As Variant) As Variant
  b_tendrst_financoupon = WindFunc("B_TENDRST_FINANCOUPON", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_bidrate(WINDCODE_ As Variant) As Variant
  b_tendrst_bidrate = WindFunc("B_TENDRST_BIDRATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_bidprice(WINDCODE_ As Variant) As Variant
  b_tendrst_bidprice = WindFunc("B_TENDRST_BIDPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_tendrst_bidspread(WINDCODE_ As Variant) As Variant
  b_tendrst_bidspread = WindFunc("B_TENDRST_BIDSPREAD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_leadunderwriter(WINDCODE_ As Variant) As Variant
  b_agency_leadunderwriter = WindFunc("B_AGENCY_LEADUNDERWRITER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_deputyunderwriter(WINDCODE_ As Variant) As Variant
  b_agency_deputyunderwriter = WindFunc("B_AGENCY_DEPUTYUNDERWRITER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_underwrittype(WINDCODE_ As Variant) As Variant
  b_agency_underwrittype = WindFunc("B_AGENCY_UNDERWRITTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_distributor(WINDCODE_ As Variant) As Variant
  b_agency_distributor = WindFunc("B_AGENCY_DISTRIBUTOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_guarantor(WINDCODE_ As Variant) As Variant
  b_agency_guarantor = WindFunc("B_AGENCY_GUARANTOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_grnttype(WINDCODE_ As Variant) As Variant
  b_agency_grnttype = WindFunc("B_AGENCY_GRNTTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_grntrange(WINDCODE_ As Variant) As Variant
  b_agency_grntrange = WindFunc("B_AGENCY_GRNTRANGE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_fadvisor(WINDCODE_ As Variant) As Variant
  b_agency_fadvisor = WindFunc("B_AGENCY_FADVISOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_exaccountant(WINDCODE_ As Variant) As Variant
  b_agency_exaccountant = WindFunc("B_AGENCY_EXACCOUNTANT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_conselor(WINDCODE_ As Variant) As Variant
  b_agency_conselor = WindFunc("B_AGENCY_CONSELOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_trustee(WINDCODE_ As Variant) As Variant
  b_agency_trustee = WindFunc("B_AGENCY_TRUSTEE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_agency_recommender(WINDCODE_ As Variant) As Variant
  b_agency_recommender = WindFunc("B_AGENCY_RECOMMENDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_redemption_beginning(WINDCODE_ As Variant) As Variant
  b_redemption_beginning = WindFunc("B_REDEMPTION_BEGINNING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_redemption_end(WINDCODE_ As Variant) As Variant
  b_redemption_end = WindFunc("B_REDEMPTION_END", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_redemption_regbeginning(WINDCODE_ As Variant) As Variant
  b_redemption_regbeginning = WindFunc("B_REDEMPTION_REGBEGINNING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_redemption_regend(WINDCODE_ As Variant) As Variant
  b_redemption_regend = WindFunc("B_REDEMPTION_REGEND", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_redemption_feeration(WINDCODE_ As Variant) As Variant
  b_redemption_feeration = WindFunc("B_REDEMPTION_FEERATION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_dq_theory(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_dq_theory = WindFunc("B_DQ_THEORY", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function b_pq_quotdays(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_pq_quotdays = WindFunc("b_pq_quotdays", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function b_anal_vol(WINDCODE_ As Variant, DEALDATE_ As Variant, BENCHMARK_ As String, LENGTH_ As Integer, RISKFREERATE_ As Integer) As Variant
  b_anal_vol = WindFunc("b_anal_vol", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), BENCHMARK_, LENGTH_, RISKFREERATE_, Null)
End Function

Function b_anal_beta(WINDCODE_ As Variant, DEALDATE_ As Variant, BENCHMARK_ As String, LENGTH_ As Integer, RISKFREERATE_ As Integer) As Variant
  b_anal_beta = WindFunc("B_ANAL_BETA", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), BENCHMARK_, LENGTH_, RISKFREERATE_, Null)
End Function

Function b_anal_sharpe(WINDCODE_ As Variant, DEALDATE_ As Variant, BENCHMARK_ As String, LENGTH_ As Integer, RISKFREERATE_ As Integer) As Variant
  b_anal_sharpe = WindFunc("B_ANAL_SHARPE", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), BENCHMARK_, LENGTH_, RISKFREERATE_, Null)
End Function

Function b_anal_treynor(WINDCODE_ As Variant, DEALDATE_ As Variant, BENCHMARK_ As String, LENGTH_ As Integer, RISKFREERATE_ As Integer) As Variant
  b_anal_treynor = WindFunc("B_ANAL_TREYNOR", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), BENCHMARK_, LENGTH_, RISKFREERATE_, Null)
End Function

Function b_anal_jensen(WINDCODE_ As Variant, DEALDATE_ As Variant, BENCHMARK_ As String, LENGTH_ As Integer, RISKFREERATE_ As Integer) As Variant
  b_anal_jensen = WindFunc("B_ANAL_JENSEN", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), BENCHMARK_, LENGTH_, RISKFREERATE_, Null)
End Function

Function b_kduration_onem(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_onem = WindFunc("B_KDURATION_ONEM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_threem(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_threem = WindFunc("B_KDURATION_THREEM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_sixm(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_sixm = WindFunc("B_KDURATION_SIXM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_oney(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_oney = WindFunc("B_KDURATION_ONEY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_twoy(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_twoy = WindFunc("B_KDURATION_TWOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_threey(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_threey = WindFunc("B_KDURATION_THREEY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_foury(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_foury = WindFunc("B_KDURATION_FOURY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_fivey(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_fivey = WindFunc("B_KDURATION_FIVEY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_seveny(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_seveny = WindFunc("B_KDURATION_SEVENY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_niney(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_niney = WindFunc("B_KDURATION_NINEY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_teny(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_teny = WindFunc("B_KDURATION_TENY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_fiftyy(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_fiftyy = WindFunc("B_KDURATION_FIFTYY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_twentyy(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_twentyy = WindFunc("B_KDURATION_TWENTYY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_thirtyy(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_thirtyy = WindFunc("B_KDURATION_THIRTYY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_short(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_short = WindFunc("B_KDURATION_SHORT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_kduration_long(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_kduration_long = WindFunc("B_KDURATION_LONG", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_rate_latest(WINDCODE_ As Variant) As Variant
  b_rate_latest = WindFunc("B_RATE_LATEST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_rate_latestcredit(WINDCODE_ As Variant) As Variant
  b_rate_latestcredit = WindFunc("B_RATE_LATESTCREDIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_rate_style(WINDCODE_ As Variant) As Variant
  b_rate_style = WindFunc("B_RATE_STYLE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_rate_creditratingagency(WINDCODE_ As Variant) As Variant
  b_rate_creditratingagency = WindFunc("B_RATE_CREDITRATINGAGENCY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_rate_former(WINDCODE_ As Variant) As Variant
  b_rate_former = WindFunc("B_RATE_FORMER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_rate_issuerformer(WINDCODE_ As Variant) As Variant
  b_rate_issuerformer = WindFunc("B_RATE_ISSUERFORMER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_credit_line(WINDCODE_ As Variant) As Variant
  b_credit_line = WindFunc("B_CREDIT_LINE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_credit_lineused(WINDCODE_ As Variant) As Variant
  b_credit_lineused = WindFunc("B_CREDIT_LINEUSED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_credit_lineunused(WINDCODE_ As Variant) As Variant
  b_credit_lineunused = WindFunc("B_CREDIT_LINEUNUSED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_credit_formerline(WINDCODE_ As Variant) As Variant
  b_credit_formerline = WindFunc("B_CREDIT_FORMERLINE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_guar_latestbalance(WINDCODE_ As Variant) As Variant
  b_guar_latestbalance = WindFunc("B_GUAR_LATESTBALANCE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_guar_latestinwards(WINDCODE_ As Variant) As Variant
  b_guar_latestinwards = WindFunc("B_GUAR_LATESTINWARDS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_guar_latestoutwards(WINDCODE_ As Variant) As Variant
  b_guar_latestoutwards = WindFunc("B_GUAR_LATESTOUTWARDS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_guar_formerbalance(WINDCODE_ As Variant) As Variant
  b_guar_formerbalance = WindFunc("B_GUAR_FORMERBALANCE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_guar_formerinwards(WINDCODE_ As Variant) As Variant
  b_guar_formerinwards = WindFunc("B_GUAR_FORMERINWARDS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_guar_formeroutwards(WINDCODE_ As Variant) As Variant
  b_guar_formeroutwards = WindFunc("B_GUAR_FORMEROUTWARDS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_fundhold_position(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_fundhold_position = WindFunc("B_FUNDHOLD_POSITION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(b_fundhold_position) <> vbString Then
        b_fundhold_position = b_fundhold_position / UnitVal_
    End If
End Function

Function b_fundhold_ratioofpositiontoamnt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  b_fundhold_ratioofpositiontoamnt = WindFunc("B_FUNDHOLD_RATIOOFPOSITIONTOAMNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function b_fundhold_funds(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  b_fundhold_funds = WindFunc("B_FUNDHOLD_FUNDS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function b_cvn_rateofstdbnd(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_cvn_rateofstdbnd = WindFunc("B_CVN_RATEOFSTDBND", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_cvn_cvntperhundred(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_cvn_cvntperhundred = WindFunc("B_CVN_CVNTPERHUNDRED", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_info_repo_code(WINDCODE_ As Variant) As Variant
  b_info_repo_code = WindFunc("B_INFO_REPO_CODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_repo_ubond(WINDCODE_ As Variant) As Variant
  b_info_repo_ubond = WindFunc("B_INFO_REPO_UBOND", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_repo_type(WINDCODE_ As Variant) As Variant
  b_info_repo_type = WindFunc("B_INFO_REPO_TYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_repo_days(WINDCODE_ As Variant) As Variant
  b_info_repo_days = WindFunc("B_INFO_REPO_DAYS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_repo_pcntbond(WINDCODE_ As Variant) As Variant
  b_info_repo_pcntbond = WindFunc("B_INFO_REPO_PCNTBOND", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_info_repo_lastestdate(WINDCODE_ As Variant) As Variant
  b_info_repo_lastestdate = WindFunc("B_INFO_REPO_LASTESTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function b_dq_repo_preweig(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_preweig = WindFunc("B_DQ_REPO_PREWEIG", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_dq_repo_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_preclose = WindFunc("b_dq_repo_preclose", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_dq_repo_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_open = WindFunc("b_dq_repo_open", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_dq_repo_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_high = WindFunc("b_dq_repo_high", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_dq_repo_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_low = WindFunc("b_dq_repo_low", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_dq_repo_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_close = WindFunc("b_dq_repo_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_dq_repo_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_avgprice = WindFunc("b_dq_repo_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_dq_repo_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_dq_repo_amount = WindFunc("b_dq_repo_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function b_pq_repo_preavgprice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  b_pq_repo_preavgprice = WindFunc("b_pq_repo_preavgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function b_pq_repo_close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  b_pq_repo_close = WindFunc("b_pq_repo_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function b_pq_repo_avgprice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  b_pq_repo_avgprice = WindFunc("b_pq_repo_avgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function b_pq_repo_amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  b_pq_repo_amount = WindFunc("b_pq_repo_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function B_FA_AdminExpense_TTM(WINDCODE_ As Variant) As Variant
  B_FA_AdminExpense_TTM = WindFunc("s_fa_adminexpense_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_AdminExpensetoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_AdminExpensetoGR = WindFunc("s_fa_adminexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_AdminExpensetoGR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_AdminExpensetoGR_TTM = WindFunc("s_fa_adminexpensetogr_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_ARTurnDays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ARTurnDays = WindFunc("s_fa_arturndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_Asset_MRQ(WINDCODE_ As Variant) As Variant
  B_FA_Asset_MRQ = WindFunc("s_fa_asset_mrq", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_AssetsToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_AssetsToEquity = WindFunc("s_fa_assetstoequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_AssetsTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_AssetsTurn = WindFunc("s_fa_dupont_faturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_BPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_BPS = WindFunc("s_fa_bps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_BPS_adjust(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_BPS_adjust = WindFunc("s_fa_bps_adjust", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_BPS_new(WINDCODE_ As Variant) As Variant
  B_FA_BPS_new = WindFunc("s_fa_bps_new", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_CapitalizedtoDA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_CapitalizedtoDA = WindFunc("s_fa_capitalizedtoda", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_CashFlow_TTM(WINDCODE_ As Variant) As Variant
  B_FA_CashFlow_TTM = WindFunc("s_fa_cashflow_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Date, Null, Null, Null, Null)
End Function

Function B_FA_CashRatio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_CashRatio = WindFunc("s_fa_cashratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_CAtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_CAtoAssets = WindFunc("s_fa_catoassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_CATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_CATurn = WindFunc("s_fa_caturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_CFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_CFPS = WindFunc("s_fa_cfps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_CFPS_TTM(WINDCODE_ As Variant) As Variant
  B_FA_CFPS_TTM = WindFunc("s_fa_cfps_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_COGStoSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_COGStoSales = WindFunc("s_fa_cogstosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_cost_TTM(WINDCODE_ As Variant) As Variant
  B_FA_cost_TTM = WindFunc("s_fa_cost_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_CurrentDebttoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_CurrentDebttoDebt = WindFunc("s_fa_currentdebttodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_DA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_DA = WindFunc("s_fa_da", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_Debt_MRQ(WINDCODE_ As Variant) As Variant
  B_FA_Debt_MRQ = WindFunc("s_fa_debt_mrq", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_DebtToAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_DebtToAssets = WindFunc("s_fa_debttoassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_DebtToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_DebtToEquity = WindFunc("s_fa_debttoequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_DeductedProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_DeductedProfit = WindFunc("s_fa_deductedprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_DeductedProfittoProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_DeductedProfittoProfit = WindFunc("s_fa_deductedprofittoprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EBITPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EBITPS = WindFunc("s_fa_ebitps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EBIT_TTM(WINDCODE_ As Variant) As Variant
  B_FA_EBIT_TTM = WindFunc("s_fa_ebit_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_EBITDA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EBITDA = WindFunc("s_fa_ebitda", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EBITDAtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EBITDAtoDebt = WindFunc("s_fa_ebitdatodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EBITtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EBITtoGR = WindFunc("s_fa_dupont_ebittosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EBITtoInterest(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EBITtoInterest = WindFunc("s_fa_ebittointerest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EBT_TTM(WINDCODE_ As Variant) As Variant
  B_FA_EBT_TTM = WindFunc("s_fa_ebt_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_EPS_adjust(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EPS_adjust = WindFunc("s_fa_eps_adjust", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EPS_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EPS_basic = WindFunc("s_fa_eps_basic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EPS_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EPS_diluted = WindFunc("s_fa_eps_diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EPS_diluted2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EPS_diluted2 = WindFunc("s_fa_eps_diluted2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EPS_EXBASIC(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EPS_EXBASIC = WindFunc("s_fa_eps_exbasic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EPS_EXDiluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EPS_EXDiluted = WindFunc("s_fa_eps_exdiluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EPS_EXDiluted2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EPS_EXDiluted2 = WindFunc("s_fa_eps_exdiluted2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EPS_TTM(WINDCODE_ As Variant) As Variant
  B_FA_EPS_TTM = WindFunc("s_fa_eps_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_Equity_MRQ(WINDCODE_ As Variant) As Variant
  B_FA_Equity_MRQ = WindFunc("s_fa_equity_mrq", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_Equity_New(WINDCODE_ As Variant) As Variant
  B_FA_Equity_New = WindFunc("s_fa_equity_new", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_EquitytoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EquitytoDebt = WindFunc("s_fa_equitytodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EquitytoInterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EquitytoInterestDebt = WindFunc("s_fa_equitytointerestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EquitytoTotalCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EquitytoTotalCapital = WindFunc("s_fa_equitytototalcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ExInterestDebt_current(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ExInterestDebt_current = WindFunc("s_fa_exinterestdebt_current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ExInterestDebt_noncurrent(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ExInterestDebt_noncurrent = WindFunc("s_fa_exinterestdebt_noncurrent", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_expense_TTM(WINDCODE_ As Variant) As Variant
  B_FA_expense_TTM = WindFunc("s_fa_expense_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_ExpensetoSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ExpensetoSales = WindFunc("s_fa_expensetosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ExpensetoSales_TTM(WINDCODE_ As Variant) As Variant
  B_FA_ExpensetoSales_TTM = WindFunc("s_fa_expensetosales_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_Extraordinary(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_Extraordinary = WindFunc("s_fa_extraordinary", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_FATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_FATurn = WindFunc("s_fa_faturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_FCFEPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_FCFEPS = WindFunc("s_fa_fcfeps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_FCFFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_FCFFPS = WindFunc("s_fa_fcffps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_FinaExpense_TTM(WINDCODE_ As Variant) As Variant
  B_FA_FinaExpense_TTM = WindFunc("s_fa_finaexpense_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_FinaExpensetoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_FinaExpensetoGR = WindFunc("s_fa_finaexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_FinaExpensetoGR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_FinaExpensetoGR_TTM = WindFunc("s_fa_finaexpensetogr_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_FinanceCashFlow_TTM(WINDCODE_ As Variant) As Variant
  B_FA_FinanceCashFlow_TTM = WindFunc("s_fa_financecashflow_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_GC_TTM(WINDCODE_ As Variant) As Variant
  B_FA_GC_TTM = WindFunc("s_fa_gc_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_GCtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_GCtoGR = WindFunc("s_fa_gctogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_GCtoGR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_GCtoGR_TTM = WindFunc("s_fa_gctogr_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_GR_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_FA_GR_TTM = WindFunc("s_fa_gr_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function B_FA_GrossMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_GrossMargin = WindFunc("s_fa_grossmargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_grossmargin_TTM(WINDCODE_ As Variant) As Variant
  B_FA_grossmargin_TTM = WindFunc("s_fa_grossmargin_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_GrossProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_GrossProfitMargin = WindFunc("s_fa_grossprofitmargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_GrossProfitMargin_TTM(WINDCODE_ As Variant) As Variant
  B_FA_GrossProfitMargin_TTM = WindFunc("s_fa_grossprofitmargin_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_GRPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_GRPS = WindFunc("s_fa_grps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_Impairment_TTM(WINDCODE_ As Variant) As Variant
  B_FA_Impairment_TTM = WindFunc("s_fa_impairment_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_ImpairtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ImpairtoGR = WindFunc("s_fa_impairtogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ImpairtoGR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_ImpairtoGR_TTM = WindFunc("s_fa_impairtogr_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_InterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_InterestDebt = WindFunc("s_fa_interestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_InterestDebttoEV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_FA_InterestDebttoEV = WindFunc("s_fa_interestdebttoev", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function B_FA_InterestDebttoTotalCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_InterestDebttoTotalCapital = WindFunc("s_fa_interestdebttototalcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_InvestCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_InvestCapital = WindFunc("s_fa_investcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_InvestCashFlow_TTM(WINDCODE_ As Variant) As Variant
  B_FA_InvestCashFlow_TTM = WindFunc("s_fa_investcashflow_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_InvestIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_InvestIncome = WindFunc("s_fa_investincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_InvestIncome_TTM(WINDCODE_ As Variant) As Variant
  B_FA_InvestIncome_TTM = WindFunc("s_fa_investincome_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_InvestIncometoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_InvestIncometoEBT = WindFunc("s_fa_investincometoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_InvestIncometoEBT_TTM(WINDCODE_ As Variant) As Variant
  B_FA_InvestIncometoEBT_TTM = WindFunc("s_fa_investincometoebt_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_InvTurndays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_InvTurndays = WindFunc("s_fa_invturndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_LongDebtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_LongDebtoDebt = WindFunc("s_fa_longdebtodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_LongDebttoWorkingCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_LongDebttoWorkingCapital = WindFunc("s_fa_longdebttoworkingcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NCAtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_NCAtoAssets = WindFunc("s_fa_ncatoassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NetDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_NetDebt = WindFunc("s_fa_netdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NetDebttoEV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_FA_NetDebttoEV = WindFunc("s_fa_netdebttoev", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NetProfit_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_FA_NetProfit_TTM = WindFunc("s_fa_netprofit_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NetProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_NetProfitMargin = WindFunc("s_fa_netprofitmargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NetProfitMargin_TTM(WINDCODE_ As Variant) As Variant
  B_FA_NetProfitMargin_TTM = WindFunc("s_fa_netprofitmargin_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_NetWorkingCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_NetWorkingCapital = WindFunc("s_fa_networkingcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NonOperateProfit_TTM(WINDCODE_ As Variant) As Variant
  B_FA_NonOperateProfit_TTM = WindFunc("s_fa_nonoperateprofit_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_NonOperateProfittoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_NonOperateProfittoEBT = WindFunc("s_fa_nonoperateprofittoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_NonOperateProfittoEBT_TTM(WINDCODE_ As Variant) As Variant
  B_FA_NonOperateProfittoEBT_TTM = WindFunc("s_fa_nonoperateprofittoebt_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OCFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OCFPS = WindFunc("s_fa_ocfps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OCFPS_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OCFPS_TTM = WindFunc("s_fa_ocfps_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OCFtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OCFtoDebt = WindFunc("s_fa_ocftodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OCFtoInterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OCFtoInterestDebt = WindFunc("s_fa_ocftointerestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OCFtoNetDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OCFtoNetDebt = WindFunc("s_fa_ocftonetdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OCFtoOperateIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OCFtoOperateIncome = WindFunc("s_fa_ocftooperateincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OCFtoOperateIncome_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OCFtoOperateIncome_TTM = WindFunc("s_fa_ocftooperateincome_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OCFtoOR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OCFtoOR = WindFunc("s_fa_ocftoor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OCFtoOR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OCFtoOR_TTM = WindFunc("s_fa_ocftoor_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OCFtoShortDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OCFtoShortDebt = WindFunc("s_fa_ocftoshortdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OP_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OP_TTM = WindFunc("s_fa_op_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OperateCashFlow_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_FA_OperateCashFlow_TTM = WindFunc("s_fa_operatecashflow_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OperateExpense_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OperateExpense_TTM = WindFunc("s_fa_operateexpense_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OperateExpensetoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OperateExpensetoGR = WindFunc("s_fa_operateexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OperateExpensetoGR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OperateExpensetoGR_TTM = WindFunc("s_fa_operateexpensetogr_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OperateIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OperateIncome = WindFunc("s_fa_operateincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OperateIncome_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OperateIncome_TTM = WindFunc("s_fa_operateincome_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OperateIncometoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OperateIncometoEBT = WindFunc("s_fa_operateincometoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OperateIncometoEBT_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OperateIncometoEBT_TTM = WindFunc("s_fa_operateincometoebt_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OPtoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_OPtoGR = WindFunc("s_fa_optogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_OPtoGR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_OPtoGR_TTM = WindFunc("s_fa_optogr_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_OR_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_FA_OR_TTM = WindFunc("s_fa_or_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ORPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ORPS = WindFunc("s_fa_orps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ORPS_TTM(WINDCODE_ As Variant) As Variant
  B_FA_ORPS_TTM = WindFunc("s_fa_orps_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_Profit_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  B_FA_Profit_TTM = WindFunc("s_fa_profit_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ProfittoGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ProfittoGR = WindFunc("s_fa_dupont_nptosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ProfittoGR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_ProfittoGR_TTM = WindFunc("s_fa_profittogr_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_Quick(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_Quick = WindFunc("s_fa_quick", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_RetainedEarnings(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_RetainedEarnings = WindFunc("s_fa_retainedearnings", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_RetainedPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_RetainedPS = WindFunc("s_fa_retainedps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROA = WindFunc("s_fa_roa", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROA_TTM(WINDCODE_ As Variant) As Variant
  B_FA_ROA_TTM = WindFunc("s_fa_roa_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_ROA_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROA_yearly = WindFunc("s_fa_roa_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROA2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROA2 = WindFunc("s_fa_roa2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROA2_TTM(WINDCODE_ As Variant) As Variant
  B_FA_ROA2_TTM = WindFunc("s_fa_roa2_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_ROA2_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROA2_yearly = WindFunc("s_fa_roa2_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROE = WindFunc("s_fa_roe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE_Avg(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROE_Avg = WindFunc("s_fa_roe_avg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROE_basic = WindFunc("s_fa_roe_basic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROE_deducted = WindFunc("s_fa_roe_deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROE_diluted = WindFunc("s_fa_roe_diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE_Exbasic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROE_Exbasic = WindFunc("s_fa_roe_exbasic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE_Exdiluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROE_Exdiluted = WindFunc("s_fa_roe_exdiluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROE_TTM(WINDCODE_ As Variant) As Variant
  B_FA_ROE_TTM = WindFunc("s_fa_roe_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_ROIC(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROIC = WindFunc("s_fa_roic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ROIC_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ROIC_yearly = WindFunc("s_fa_roic_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_SalesCashIn_TTM(WINDCODE_ As Variant) As Variant
  B_FA_SalesCashIn_TTM = WindFunc("s_fa_salescashin_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_SalesCashIntoOR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_SalesCashIntoOR = WindFunc("s_fa_salescashintoor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_SalesCashIntoOR_TTM(WINDCODE_ As Variant) As Variant
  B_FA_SalesCashIntoOR_TTM = WindFunc("s_fa_salescashintoor_ttm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_SurplusCapitalPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_SurplusCapitalPS = WindFunc("s_fa_surpluscapitalps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_surplusreservePS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_surplusreservePS = WindFunc("s_fa_surplusreserveps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_TangibleAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_TangibleAsset = WindFunc("s_fa_tangibleasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_TangibleAssetstoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_TangibleAssetstoAssets = WindFunc("s_fa_tangibleassetstoassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_TangibleAssettoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_TangibleAssettoDebt = WindFunc("s_fa_tangibleassettodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_TangibleAssettoInterestDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_TangibleAssettoInterestDebt = WindFunc("s_fa_tangibleassettointerestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_TangibleAssettoNetDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_TangibleAssettoNetDebt = WindFunc("s_fa_tangibleassettonetdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_TaxtoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_TaxtoEBT = WindFunc("s_fa_taxtoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_TotalEquity_MRQ(WINDCODE_ As Variant) As Variant
  B_FA_TotalEquity_MRQ = WindFunc("s_fa_totalequity_mrq", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

Function B_FA_Turndays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_Turndays = WindFunc("s_fa_turndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_UndistributedPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_UndistributedPS = WindFunc("s_fa_undistributedps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_WorkingCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_WorkingCapital = WindFunc("s_fa_workingcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YOY_OR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YOY_OR = WindFunc("s_fa_yoy_or", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YOY_TR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YOY_TR = WindFunc("s_fa_yoy_tr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYAssets = WindFunc("s_fa_yoyassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYBPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYBPS = WindFunc("s_fa_yoybps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYEBT = WindFunc("s_fa_yoyebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYEPS_Basic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYEPS_Basic = WindFunc("s_fa_yoyeps_basic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYEPS_Diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYEPS_Diluted = WindFunc("s_fa_yoyeps_diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYEquity = WindFunc("s_fa_yoyequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYNetProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYNetProfit = WindFunc("s_fa_yoynetprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYNetProfit_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYNetProfit_deducted = WindFunc("s_fa_yoynetprofit_deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYOCFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYOCFPS = WindFunc("s_fa_yoyocfps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYOP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYOP = WindFunc("s_fa_yoyop", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYROE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYROE = WindFunc("s_fa_yoyroe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_Growth_assets(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_assets = WindFunc("s_growth_assets", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_EBT(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_EBT = WindFunc("s_growth_ebt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_equity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_equity = WindFunc("s_growth_equity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_GC(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_GC = WindFunc("s_growth_gc", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_GR(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_GR = WindFunc("s_growth_gr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_InvestIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_InvestIncome = WindFunc("s_growth_investincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_NetProfit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_NetProfit = WindFunc("s_growth_netprofit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_NetProfit_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_NetProfit_deducted = WindFunc("s_growth_netprofit_deducted", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_OCF(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_OCF = WindFunc("s_growth_ocf", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_OP(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_OP = WindFunc("s_growth_op", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_OperateIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_OperateIncome = WindFunc("s_growth_operateincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_OR(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_OR = WindFunc("s_growth_or", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_Profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_Profit = WindFunc("s_growth_profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_ProfittoSales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_ProfittoSales = WindFunc("s_growth_profittosales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_ROE = WindFunc("s_growth_roe", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_Growth_TotalEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional N_ As Integer = 1) As Variant
  B_Growth_TotalEquity = WindFunc("s_growth_totalequity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), N_, Null, Null, Null)
End Function

Function B_QFA_ADMINEXPENSETOGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_ADMINEXPENSETOGR = WindFunc("s_qfa_adminexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_CGRGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_CGRGR = WindFunc("s_qfa_cgrgr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_CGRNETPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_CGRNETPROFIT = WindFunc("s_qfa_cgrnetprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_CGROP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_CGROP = WindFunc("s_qfa_cgrop", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_CGRPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_CGRPROFIT = WindFunc("s_qfa_cgrprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_CGRSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_CGRSales = WindFunc("s_qfa_cgrsales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_DEDUCTEDPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_DEDUCTEDPROFIT = WindFunc("s_qfa_deductedprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_DEDUCTEDPROFITTOPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_DEDUCTEDPROFITTOPROFIT = WindFunc("s_qfa_deductedprofittoprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_EPS(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_EPS = WindFunc("s_qfa_eps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_FINAEXPENSETOGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_FINAEXPENSETOGR = WindFunc("s_qfa_finaexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_GCToGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_GCToGR = WindFunc("s_qfa_gctogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_GrossProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_GrossProfitMargin = WindFunc("s_qfa_grossprofitmargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_INVESTINCOME(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_INVESTINCOME = WindFunc("s_qfa_investincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_INVESTINCOMETOEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_INVESTINCOMETOEBT = WindFunc("s_qfa_investincometoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_NetProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_NetProfitMargin = WindFunc("s_qfa_netprofitmargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_OCFTOOPERATEINCOME(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_OCFTOOPERATEINCOME = WindFunc("s_qfa_ocftooperateincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_OCFTOOR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_OCFTOOR = WindFunc("s_qfa_ocftoor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_OPERATEEXPENSETOGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_OPERATEEXPENSETOGR = WindFunc("s_qfa_operateexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_OPERATEINCOME(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_OPERATEINCOME = WindFunc("s_qfa_operateincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_OPERATEINCOMETOEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_OPERATEINCOMETOEBT = WindFunc("s_qfa_operateincometoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_OPToGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_OPToGR = WindFunc("s_qfa_optogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_ProfitToGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_ProfitToGR = WindFunc("s_qfa_profittogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_ROA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_ROA = WindFunc("s_qfa_roa", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_ROE = WindFunc("s_qfa_roe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_ROE_Deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_ROE_Deducted = WindFunc("s_qfa_roe_deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_SALESCASHINTOOR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_SALESCASHINTOOR = WindFunc("s_qfa_salescashintoor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_YOYGR(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_YOYGR = WindFunc("s_qfa_yoygr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_YOYNETPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_YOYNETPROFIT = WindFunc("s_qfa_yoynetprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_YOYOP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_YOYOP = WindFunc("s_qfa_yoyop", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_YOYPROFIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_YOYPROFIT = WindFunc("s_qfa_yoyprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QFA_YOYSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_QFA_YOYSales = WindFunc("s_qfa_yoysales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_QStm07_CS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_QStm07_CS = WindFunc("S_QStm07_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_QStm07_CS) <> vbString Then
        B_QStm07_CS = B_QStm07_CS / UnitVal_
    End If
End Function

Function B_QStm07_IS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_QStm07_IS = WindFunc("S_QStm07_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_QStm07_IS) <> vbString Then
        B_QStm07_IS = B_QStm07_IS / UnitVal_
    End If
End Function

Function B_Segment_Industry_cost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_Industry_cost = WindFunc("s_segment_industry_cost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_Industry_Item(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_Industry_Item = WindFunc("s_segment_industry_item", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_Industry_profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_Industry_profit = WindFunc("s_segment_industry_profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_Industry_Sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_Industry_Sales = WindFunc("s_segment_industry_sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_product_cost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_product_cost = WindFunc("s_segment_product_cost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_product_Item(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_product_Item = WindFunc("s_segment_product_item", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_product_profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_product_profit = WindFunc("s_segment_product_profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_product_Sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_product_Sales = WindFunc("s_segment_product_sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_region_cost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_region_cost = WindFunc("s_segment_region_cost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_region_Item(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_region_Item = WindFunc("s_segment_region_item", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_region_profit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_region_profit = WindFunc("s_segment_region_profit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Segment_region_Sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  B_Segment_region_Sales = WindFunc("s_segment_region_sales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

Function B_Stm_IssuingDate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_Stm_IssuingDate = WindFunc("s_stm_issuingdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_STM_ISSUINGDATE2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_STM_ISSUINGDATE2 = WindFunc("s_stm_issuingdate2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_Stm07_BS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_Stm07_BS = WindFunc("S_Stm07_BS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_Stm07_BS) <> vbString Then
        B_Stm07_BS = B_Stm07_BS / UnitVal_
    End If
End Function

Function B_Stm07_CS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_Stm07_CS = WindFunc("S_Stm07_CS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_Stm07_CS) <> vbString Then
        B_Stm07_CS = B_Stm07_CS / UnitVal_
    End If
End Function

Function B_Stm07_IS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  B_Stm07_IS = WindFunc("S_Stm07_IS", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(B_Stm07_IS) <> vbString Then
        B_Stm07_IS = B_Stm07_IS / UnitVal_
    End If
End Function

Function B_STMNOTE_AssetDetail(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant) As Variant
  B_STMNOTE_AssetDetail = WindFunc("S_STMNOTE_AssetDetail", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

Function B_FA_Current(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_Current = WindFunc("s_fa_current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_InvTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_InvTurn = WindFunc("s_fa_invturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_ARTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_ARTurn = WindFunc("s_fa_arturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_YoYOCF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_YoYOCF = WindFunc("s_fa_yoyocf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_EBIT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_EBIT = WindFunc("s_fa_ebit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_FCFF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_FCFF = WindFunc("s_fa_fcff", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

Function B_FA_FCFE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  B_FA_FCFE = WindFunc("s_fa_fcfe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_wq_avg
Function b_wq_avg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_avg = WindFunc("b_wq_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_wq_preclose
Function b_wq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_preclose = WindFunc("b_wq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||73f||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_wq_open
Function b_wq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_open = WindFunc("b_wq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),b_wq_high
Function b_wq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_high = WindFunc("b_wq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),b_wq_low
Function b_wq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_low = WindFunc("b_wq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_wq_close
Function b_wq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_close = WindFunc("b_wq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),b_wq_change
Function b_wq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_change = WindFunc("b_wq_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_wq_pctchange
Function b_wq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_pctchange = WindFunc("b_wq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_wq_volume
Function b_wq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_wq_volume = WindFunc("b_wq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(b_wq_volume) <> vbString Then
        b_wq_volume = b_wq_volume / UnitVal_
    End If
End Function

'|fffd||733||27d||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_wq_amount
Function b_wq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  b_wq_amount = WindFunc("b_wq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
    If VarType(b_wq_amount) <> vbString Then
        b_wq_amount = b_wq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6fc||fffd|(|fffd||439||fffd||56e||22f||fffd||fffd||3e2||fffd||fffd|)(|fffd||fffd||fffd||fffd|),b_wq_theory
Function b_wq_theory(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_wq_theory = WindFunc("b_wq_theory", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_mq_preclose
Function b_mq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_preclose = WindFunc("b_mq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||bf||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_mq_open
Function b_mq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_open = WindFunc("b_mq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),b_mq_high
Function b_mq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_high = WindFunc("b_mq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),b_mq_low
Function b_mq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_low = WindFunc("b_mq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_mq_close
Function b_mq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_close = WindFunc("b_mq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||be||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_mq_avg
Function b_mq_avg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_avg = WindFunc("b_mq_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),b_mq_change
Function b_mq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_change = WindFunc("b_mq_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_mq_pctchange
Function b_mq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_pctchange = WindFunc("b_mq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_mq_volume
Function b_mq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_mq_volume = WindFunc("b_mq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(b_mq_volume) <> vbString Then
        b_mq_volume = b_mq_volume / UnitVal_
    End If
End Function

'|fffd||b3||27d||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_mq_amount
Function b_mq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  b_mq_amount = WindFunc("b_mq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
    If VarType(b_mq_amount) <> vbString Then
        b_mq_amount = b_mq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6fc||fffd|(|fffd||439||fffd||56e||22f||fffd||fffd||3e2||fffd||fffd|)(|fffd||fffd||fffd||fffd|),b_mq_theory
Function b_mq_theory(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_mq_theory = WindFunc("b_mq_theory", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_yq_preclose
Function b_yq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_preclose = WindFunc("b_yq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||afea||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_yq_open
Function b_yq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_open = WindFunc("b_yq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),b_yq_high
Function b_yq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_high = WindFunc("b_yq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),b_yq_low
Function b_yq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_low = WindFunc("b_yq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_yq_close
Function b_yq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_close = WindFunc("b_yq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_yq_avg
Function b_yq_avg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_avg = WindFunc("b_yq_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),b_yq_change
Function b_yq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_change = WindFunc("b_yq_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_yq_pctchange
Function b_yq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_pctchange = WindFunc("b_yq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_yq_volume
Function b_yq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_yq_volume = WindFunc("b_yq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(b_yq_volume) <> vbString Then
        b_yq_volume = b_yq_volume / UnitVal_
    End If
End Function

'|fffd||fffd||27d||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_yq_amount
Function b_yq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  b_yq_amount = WindFunc("b_yq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
    If VarType(b_yq_amount) <> vbString Then
        b_yq_amount = b_yq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6fc||fffd|(|fffd||439||fffd||56e||22f||fffd||fffd||3e2||fffd||fffd|)(|fffd||fffd||fffd||fffd|),b_yq_theory
Function b_yq_theory(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  b_yq_theory = WindFunc("b_yq_theory", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||d7d||fffd||fffd||fffd||fffd||2b1||fffd||fffd|(|fffd||fffd|)(|fffd||fffd||fffd||fffd|),B_ANAL_DAY
Function B_ANAL_DAY(WINDCODE_ As Variant, TD_ As Variant) As Variant
  B_ANAL_DAY = WindFunc("B_ANAL_DAY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||d7d||fffd||fffd||fffd||fffd||2b1||fffd||fffd|(|fffd||fffd|)(|fffd||fffd||fffd||fffd|),B_ANAL_PTMYEAR
Function B_ANAL_PTMYEAR(WINDCODE_ As Variant, TD_ As Variant) As Variant
  B_ANAL_PTMYEAR = WindFunc("B_ANAL_PTMYEAR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5fc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_ANAL_BDURATION
Function B_ANAL_BDURATION(WINDCODE_ As Variant, TD_ As Variant) As Variant
  B_ANAL_BDURATION = WindFunc("B_ANAL_BDURATION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_ANAL_SDURATION
Function B_ANAL_SDURATION(WINDCODE_ As Variant, TD_ As Variant) As Variant
  B_ANAL_SDURATION = WindFunc("B_ANAL_SDURATION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_RATE_ISSURERCREDITRATINGCOMPANY
Function B_RATE_ISSURERCREDITRATINGCOMPANY(WINDCODE_ As Variant) As Variant
  B_RATE_ISSURERCREDITRATINGCOMPANY = WindFunc("B_RATE_ISSURERCREDITRATINGCOMPANY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||228||1bd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_wq_repo_preavgprice
Function b_wq_repo_preavgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_wq_repo_preavgprice = WindFunc("b_wq_repo_preavgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),b_wq_repo_high
Function b_wq_repo_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_wq_repo_high = WindFunc("b_wq_repo_high", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),b_wq_repo_low
Function b_wq_repo_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_wq_repo_low = WindFunc("b_wq_repo_low", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_wq_repo_close
Function b_wq_repo_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_wq_repo_close = WindFunc("b_wq_repo_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||73c||fffd||228||1bd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_wq_repo_avgprice
Function b_wq_repo_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_wq_repo_avgprice = WindFunc("b_wq_repo_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_wq_repo_amount
Function b_wq_repo_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_wq_repo_amount = WindFunc("b_wq_repo_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||228||1bd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_mq_repo_preavgprice
Function b_mq_repo_preavgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_mq_repo_preavgprice = WindFunc("b_mq_repo_preavgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||bf||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_mq_repo_open
Function b_mq_repo_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_mq_repo_open = WindFunc("b_mq_repo_open", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),b_mq_repo_high
Function b_mq_repo_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_mq_repo_high = WindFunc("b_mq_repo_high", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),b_mq_repo_low
Function b_mq_repo_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_mq_repo_low = WindFunc("b_mq_repo_low", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_mq_repo_close
Function b_mq_repo_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_mq_repo_close = WindFunc("b_mq_repo_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||bc||fffd||228||1bd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_mq_repo_avgprice
Function b_mq_repo_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_mq_repo_avgprice = WindFunc("b_mq_repo_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_mq_repo_amount
Function b_mq_repo_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_mq_repo_amount = WindFunc("b_mq_repo_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||228||1bd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_yq_repo_preavgprice
Function b_yq_repo_preavgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_yq_repo_preavgprice = WindFunc("b_yq_repo_preavgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||228||1bd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_yq_repo_avgprice
Function b_yq_repo_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_yq_repo_avgprice = WindFunc("b_yq_repo_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_yq_repo_amount
Function b_yq_repo_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_yq_repo_amount = WindFunc("b_yq_repo_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function


''''''''''''''''''''''''|56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|

'|fffd||6f8||fffd||fffd||3d7d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(Wind),B_Calc_Yield
Function B_Calc_Yield(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional PRICE_ As Variant = -99999999, Optional TYPE_ As Integer = 1, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Yield = WindFunc("B_Calc_Yield", 10, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(PRICE_, -99999999), TYPE_, GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||6f8||fffd||fffd||3d7d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),B_Calc_Yield2
Function B_Calc_Yield2(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional PRICE_ As Variant = -99999999, Optional TYPE_ As Integer = 1, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Yield2 = WindFunc("B_Calc_Yield2", 10, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(PRICE_, -99999999), TYPE_, GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(Wind)|fffd||fffd||6f8||fffd|,B_Calc_Price
Function B_Calc_Price(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional YTM_ As Variant = -99999999, Optional TYPE_ As Integer = 1, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Price = WindFunc("B_Calc_Price", 10, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(YTM_, -99999999), TYPE_, GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)|fffd||fffd||6f8||fffd|,B_Calc_Price2
Function B_Calc_Price2(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional YTM_ As Variant = -99999999, Optional TYPE_ As Integer = 1, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Price2 = WindFunc("B_Calc_Price2", 10, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(YTM_, -99999999), TYPE_, GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|22b||fffd||fffd||fffd||3fbb||fffd||fffd|,B_Calc_Clean
Function B_Calc_Clean(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional PRICE_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Clean = WindFunc("B_Calc_Clean", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(PRICE_, -99999999), GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||fffd|,B_Calc_Dirty
Function B_Calc_Dirty(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional PRICE_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Dirty = WindFunc("B_Calc_Dirty", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(PRICE_, -99999999), GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|4e6||fffd||fffd||fffd||fffd||3e2|,B_Calc_Accrued
Function B_Calc_Accrued(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Accrued = WindFunc("B_Calc_Accrued", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Calc_Duration
Function B_Calc_Duration(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional YTM_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Duration = WindFunc("B_Calc_Duration", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(YTM_, -99999999), GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Calc_MDuration
Function B_Calc_MDuration(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional YTM_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_MDuration = WindFunc("B_Calc_MDuration", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(YTM_, -99999999), GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|379||fffd||fffd|,B_Calc_Conv
Function B_Calc_Conv(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional YTM_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_Conv = WindFunc("B_Calc_Conv", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(YTM_, -99999999), GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||5b5|,B_Calc_PVBP
Function B_Calc_PVBP(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional YTM_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_PVBP = WindFunc("B_Calc_PVBP", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_, 0), GetValidDBL(YTM_, -99999999), GetValidDate(DEALDATE2_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Calc_HPY
Function B_Calc_HPY(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional INNETPRICE_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional OUTNETPRICE_ As Variant = -99999999, Optional DEALDATE3_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_HPY = WindFunc("B_Calc_HPY", 11, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_), GetValidDBL(INNETPRICE_, -99999999), GetValidAfterDate(DEALDATE2_), GetValidDBL(OUTNETPRICE_, -99999999), GetValidDate(DEALDATE3_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||fffd|,B_Calc_AskPrice
Function B_Calc_AskPrice(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE1_ As Variant, Optional INNETPRICE_ As Variant = -99999999, Optional DEALDATE2_ As Variant, Optional ROE_ As Variant = -99999999, Optional DEALDATE3_ As Variant, Optional N_ As Integer = -9999, Optional COUPONRATE_ As Variant = -99999999, Optional ISSUINGAMOUNT_ As Variant = 100, Optional ValueDate_ As Variant, Optional IssuePrice_ As Variant = -99999999) As Variant
  B_Calc_AskPrice = WindFunc("B_Calc_AskPrice", 11, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE1_), GetValidDBL(INNETPRICE_, -99999999), GetValidAfterDate(DEALDATE2_), GetValidDBL(ROE_, -99999999), GetValidDate(DEALDATE3_, 0), N_, GetValidDBL(COUPONRATE_, -99999999), GetValidDBL(ISSUINGAMOUNT_, 100), GetValidDate(ValueDate_, 0), GetValidDBL(IssuePrice_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||2bd||fffd||639||fffd||fffd||fffd||fffd||fffd|,B_Calc_RepoRate
Function B_Calc_RepoRate(Optional DEALDATE_ As Variant, Optional N_ As Integer = -9999, Optional PRICE_ As Variant = -99999999, Optional DAYSINYEAR_ As Integer = 1) As Variant
  B_Calc_RepoRate = WindFunc("B_Calc_RepoRate", 4, 1, GetValidDate(DEALDATE_, 0), N_, GetValidDBL(PRICE_, -99999999), DAYSINYEAR_)
End Function

'|fffd||fffd||47a||2bd||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||3d7d||fffd||6bd||fffd||fffd||fffd||fffd|,B_Calc_RepoPrice
Function B_Calc_RepoPrice(Optional DEALDATE_ As Variant, Optional N_ As Integer = -9999, Optional INTEREST_ As Variant = -99999999, Optional DAYSINYEAR_ As Integer = 1) As Variant
  B_Calc_RepoPrice = WindFunc("B_Calc_RepoPrice", 4, 1, GetValidDate(DEALDATE_, 0), N_, GetValidDBL(INTEREST_, -99999999), DAYSINYEAR_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd||639||fffd||fffd||fffd||fffd||fffd|,B_Calc_OutRepoRate
Function B_Calc_OutRepoRate(Optional DEALDATE_ As Variant, Optional N_ As Integer = -9999, Optional PRICE1_ As Variant = -99999999, Optional PRICE2_ As Variant = -99999999, Optional DAYSINYEAR_ As Integer = 1) As Variant
  B_Calc_OutRepoRate = WindFunc("B_Calc_OutRepoRate", 5, 1, GetValidDate(DEALDATE_, 0), N_, GetValidDBL(PRICE1_, -99999999), GetValidDBL(PRICE2_, -99999999), DAYSINYEAR_)
End Function

'|fffd||fffd||fffd||2bd||fffd||639||fffd||fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd|,B_Calc_OutRepoPrice
Function B_Calc_OutRepoPrice(Optional DEALDATE_ As Variant, Optional N_ As Integer = -9999, Optional PRICE1_ As Variant = -99999999, Optional INTEREST_ As Variant = -99999999, Optional DAYSINYEAR_ As Integer = 1) As Variant
  B_Calc_OutRepoPrice = WindFunc("B_Calc_OutRepoPrice", 5, 1, GetValidDate(DEALDATE_, 0), N_, GetValidDBL(PRICE1_, -99999999), GetValidDBL(INTEREST_, -99999999), DAYSINYEAR_)
End Function

'|fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Calc_RepoModRate
Function B_Calc_RepoModRate(Optional INTEREST_ As Variant = -99999999, Optional N_ As Integer = -9999, Optional M_ As Integer = -9999, Optional DAYSINYEAR_ As Integer = 1) As Variant
  B_Calc_RepoModRate = WindFunc("B_Calc_RepoModRate", 4, 1, GetValidDBL(INTEREST_, -99999999), N_, M_, DAYSINYEAR_)
End Function

'|fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Calc_RepoActRate
Function B_Calc_RepoActRate(Optional INTEREST_ As Variant = -99999999, Optional N_ As Integer = -9999, Optional M_ As Integer = -9999, Optional DAYSINYEAR_ As Integer = 1) As Variant
  B_Calc_RepoActRate = WindFunc("B_Calc_RepoActRate", 4, 1, GetValidDBL(INTEREST_, -99999999), N_, M_, DAYSINYEAR_)
End Function

'|fffd||639||fffd||fffd||2bd||fffd||57c||fffd||fffd||fffd||fffd||fffd||fffd|,B_Calc_Repodays
Function B_Calc_Repodays(Optional DEALDATE_ As Variant, Optional TYPE_ As Variant = -99999999, Optional N_ As Integer = -9999) As Variant
  B_Calc_Repodays = WindFunc("B_Calc_Repodays", 3, 1, GetValidDate(DEALDATE_, 0), GetValidDBL(TYPE_, -99999999), N_)
End Function

'|fffd||fffd||fffd||3e21||3e2||56e||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,B_Calc_FloatBench
Function B_Calc_FloatBench(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE_ As Variant, Optional PRICE_ As Variant = -99999999, Optional INTEREST_ As Variant = -99999999) As Variant
  B_Calc_FloatBench = WindFunc("B_Calc_FloatBench", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_, 0), GetValidDBL(PRICE_, -99999999), GetValidDBL(INTEREST_, -99999999))
End Function

'|fffd||fffd||fffd||3e21||3e2||56e||fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|,B_Calc_FloatAddBP
Function B_Calc_FloatAddBP(Optional WINDCODE_ As Variant = "999999", Optional DEALDATE_ As Variant, Optional PRICE_ As Variant = -99999999, Optional INTEREST_ As Variant = -99999999) As Variant
  B_Calc_FloatAddBP = WindFunc("B_Calc_FloatAddBP", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_, 0), GetValidDBL(PRICE_, -99999999), GetValidDBL(INTEREST_, -99999999))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_Calc_Curve
Function B_Calc_Curve(Optional CURVECODE_ As String = "NULL", Optional DEALDATE_ As Variant, Optional DEADLINE_ As String = "NULL") As Variant
  B_Calc_Curve = WindFunc("B_Calc_Curve", 3, 1, CURVECODE_, GetValidDate(DEALDATE_, 0), DEADLINE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||56e|),B_Calc_Curve_chinabond
Function B_Calc_Curve_chinabond(Optional CURVECODE_ As String = "NULL", Optional DEALDATE_ As Variant, Optional DEADLINE_ As String = "NULL") As Variant
  B_Calc_Curve_chinabond = WindFunc("B_Calc_Curve_chinabond", 3, 1, CURVECODE_, GetValidDate(DEALDATE_, 0), DEADLINE_)
End Function

'|1be||5a4||fffd||fffd||2bc||fffd||fffd|,b_crm_carrydate(|fffd||fffd||fffd||fffd|)
Function b_crm_carrydate(WINDCODE_ As Variant) As Variant
  b_crm_carrydate = WindFunc("b_crm_carrydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||53c||fffd||fffd||fffd||3fb||fffd||fffd||fffd|,b_crm_performguarantee(|fffd||fffd||fffd||fffd|)
Function b_crm_performguarantee(WINDCODE_ As Variant) As Variant
  b_crm_performguarantee = WindFunc("b_crm_performguarantee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||bc||fffd|,b_crm_creditevent(|fffd||fffd||fffd||fffd|)
Function b_crm_creditevent(WINDCODE_ As Variant) As Variant
  b_crm_creditevent = WindFunc("b_crm_creditevent", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||1fc||1fb||fffd||fffd||fffd|,b_crm_registeragency(|fffd||fffd||fffd||fffd|)
Function b_crm_registeragency(WINDCODE_ As Variant) As Variant
  b_crm_registeragency = WindFunc("b_crm_registeragency", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b5||fffd||fffd|,b_crm_subject(|fffd||fffd||fffd||fffd|)
Function b_crm_subject(WINDCODE_ As Variant) As Variant
  b_crm_subject = WindFunc("b_crm_subject", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_crm_issuer(|fffd||fffd||fffd||fffd|)
Function b_crm_issuer(WINDCODE_ As Variant) As Variant
  b_crm_issuer = WindFunc("b_crm_issuer", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||477||fffd||2bd|,b_crm_paymentterms(|fffd||fffd||fffd||fffd|)
Function b_crm_paymentterms(WINDCODE_ As Variant) As Variant
  b_crm_paymentterms = WindFunc("b_crm_paymentterms", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd|,b_crm_ubondoustandingamount(|fffd||fffd||fffd||fffd|)
Function b_crm_ubondoustandingamount(WINDCODE_ As Variant) As Variant
  b_crm_ubondoustandingamount = WindFunc("b_crm_ubondoustandingamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1fd||fffd||fffd||fffd||fffd||fffd|,b_crm_bookkeepingdate(|fffd||fffd||fffd||fffd|)
Function b_crm_bookkeepingdate(WINDCODE_ As Variant) As Variant
  b_crm_bookkeepingdate = WindFunc("b_crm_bookkeepingdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||6f8||fffd|,b_crm_startingprice(|fffd||fffd||fffd||fffd|)
Function b_crm_startingprice(WINDCODE_ As Variant) As Variant
  b_crm_startingprice = WindFunc("b_crm_startingprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||13c||fffd||fffd||fffd||fffd|,b_crm_permissionnumber(|fffd||fffd||fffd||fffd|)
Function b_crm_permissionnumber(WINDCODE_ As Variant) As Variant
  b_crm_permissionnumber = WindFunc("b_crm_permissionnumber", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|1be||5a4||fffd||1fc||fffd||fffd||fffd|,b_crm_dateofrecord(|fffd||fffd||fffd||fffd|)
Function b_crm_dateofrecord(WINDCODE_ As Variant) As Variant
  b_crm_dateofrecord = WindFunc("b_crm_dateofrecord", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2f9||fffd||2fe||fffd||fffd||fffd||fffd|,b_agency_guarantornature(|fffd||fffd||fffd||fffd|)
Function b_agency_guarantornature(WINDCODE_ As Variant) As Variant
  b_agency_guarantornature = WindFunc("b_agency_guarantornature", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2f9||fffd||2fe||fffd||fffd||fffd|,b_agency_guarantorbriefing(|fffd||fffd||fffd||fffd|)
Function b_agency_guarantorbriefing(WINDCODE_ As Variant) As Variant
  b_agency_guarantorbriefing = WindFunc("b_agency_guarantorbriefing", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2f9||276||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd|,b_issuer_shareholdernature(|fffd||fffd||fffd||fffd|)
Function b_issuer_shareholdernature(WINDCODE_ As Variant, DATE_ As Variant, HS_ As Integer) As Variant
  b_issuer_shareholdernature = WindFunc("b_issuer_shareholdernature", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), HS_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2f9||276||fffd||fffd||fffd||2fe||fffd||fffd||fffd|,b_issuer_shareholderbriefing(|fffd||fffd||fffd||fffd|)
Function b_issuer_shareholderbriefing(WINDCODE_ As Variant, DATE_ As Variant, HS_ As Integer) As Variant
  b_issuer_shareholderbriefing = WindFunc("b_issuer_shareholderbriefing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), HS_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd|,b_crm_issuerbriefing(|fffd||fffd||fffd||fffd|)
Function b_crm_issuerbriefing(WINDCODE_ As Variant) As Variant
  b_crm_issuerbriefing = WindFunc("b_crm_issuerbriefing", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd|,b_crm_issuernature(|fffd||fffd||fffd||fffd|)
Function b_crm_issuernature(WINDCODE_ As Variant) As Variant
  b_crm_issuernature = WindFunc("b_crm_issuernature", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||fffd|,B_info_OutstandingBalance(|fffd||fffd||fffd||fffd|)
Function B_info_OutstandingBalance(WINDCODE_ As Variant, DATE_ As Variant) As Variant
  B_info_OutstandingBalance = WindFunc("B_info_OutstandingBalance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|(|fffd||fffd||376||fffd||7b5||fffd||fffd||fffd|)|fffd||1f7||fffd||fffd||376|,B_info_ICQINGBE(|fffd||fffd||fffd||fffd|)
Function B_info_ICQINGBE(WINDCODE_ As Variant) As Variant
  B_info_ICQINGBE = WindFunc("B_info_ICQINGBE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||57f||fffd||376||fffd||7b5||fffd||fffd||fffd||fffd||fffd||376||52d||fffd||fffd|,B_info_ICQINGBEType(|fffd||fffd||fffd||fffd|)
Function B_info_ICQINGBEType(WINDCODE_ As Variant) As Variant
  B_info_ICQINGBEType = WindFunc("B_info_ICQINGBEType", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|(|fffd||fffd||376||fffd||435||fffd||fffd||fffd|)|fffd||1f7||fffd||fffd||376|,B_info_ICQIGBE(|fffd||fffd||fffd||fffd|)
Function B_info_ICQIGBE(WINDCODE_ As Variant) As Variant
  B_info_ICQIGBE = WindFunc("B_info_ICQIGBE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||57f||fffd||376||fffd||435||fffd||fffd||fffd||fffd||fffd||376||52d||fffd||fffd|,B_info_ICQIGBEType(|fffd||fffd||fffd||fffd|)
Function B_info_ICQIGBEType(WINDCODE_ As Variant) As Variant
  B_info_ICQIGBEType = WindFunc("B_info_ICQIGBEType", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||2ba||3f9||fffd||fffd||fffd|,B_info_MMFE(|fffd||fffd||fffd||fffd|)
Function B_info_MMFE(WINDCODE_ As Variant) As Variant
  B_info_MMFE = WindFunc("B_info_MMFE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||376||52d||fffd||fffd|,B_info_MMFEType(|fffd||fffd||fffd||fffd|)
Function B_info_MMFEType(WINDCODE_ As Variant) As Variant
  B_info_MMFEType = WindFunc("B_info_MMFEType", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|3b4||2b9||fffd||fffd||5e2||fffd||fffd||fffd||fffd|,B_DCM_Unuesdamount(|fffd||fffd||fffd||fffd|)
Function B_DCM_Unuesdamount(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_DCM_Unuesdamount = WindFunc("B_DCM_Unuesdamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|fffd||fffd||2b9||fffd||fffd||5e2||fffd||fffd||fffd||fffd|,B_DCM_Uesdamount(|fffd||fffd||fffd||fffd|)
Function B_DCM_Uesdamount(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_DCM_Uesdamount = WindFunc("B_DCM_Uesdamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|3b4||2b9||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_DCM_Meetingdata(|fffd||fffd||fffd||fffd|)
Function B_DCM_Meetingdata(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_DCM_Meetingdata = WindFunc("B_DCM_Meetingdata", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|3b4||2b9||fffd||f6||fffd||fffd||fffd||fffd||427||fffd||fffd|,B_DCM_Expirationdata(|fffd||fffd||fffd||fffd|)
Function B_DCM_Expirationdata(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_DCM_Expirationdata = WindFunc("B_DCM_Expirationdata", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd|,B_DCM_Number(|fffd||fffd||fffd||fffd|)
Function B_DCM_Number(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_DCM_Number = WindFunc("B_DCM_Number", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|3b4||2b9||fffd||f6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_DCM_Underwriter(|fffd||fffd||fffd||fffd|)
Function B_DCM_Underwriter(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_DCM_Underwriter = WindFunc("B_DCM_Underwriter", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|fffd||fffd||2b7||fffd||6fc||fffd||5e2||fffd||fffd||fffd||fffd|,B_DCM_Accumamount(|fffd||fffd||fffd||fffd|)
Function B_DCM_Accumamount(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_DCM_Accumamount = WindFunc("B_DCM_Accumamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|fffd||737||fffd||56e||22f||fffd||fffd||fffd|,B_Fina_Totalamount(|fffd||fffd||fffd||fffd|)
Function B_Fina_Totalamount(WINDCODE_ As Variant, BType_ As Integer) As Variant
  B_Fina_Totalamount = WindFunc("B_Fina_Totalamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BType_, Null, Null, Null, Null)
End Function

'|5b8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd|,B_Fina_mat(|fffd||fffd||fffd||fffd|)
Function B_Fina_mat(WINDCODE_ As Variant, Term_ As Integer) As Variant
  B_Fina_mat = WindFunc("B_Fina_mat", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Term_, Null, Null, Null, Null)
End Function

'Wind|56e||22f||4bb||fffd||fffd||fffd||fffd||fffd||fffd|,B_info_WindL1type(|fffd||fffd||fffd||fffd|)
Function B_info_WindL1type(WINDCODE_ As Variant) As Variant
  B_info_WindL1type = WindFunc("B_info_WindL1type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'Wind|56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_info_WindL2type(|fffd||fffd||fffd||fffd|)
Function B_info_WindL2type(WINDCODE_ As Variant) As Variant
  B_info_WindL2type = WindFunc("B_info_WindL2type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||56e||22f||4bb||fffd||fffd||fffd||fffd||fffd||fffd|,B_info_ChinabondL1type(|fffd||fffd||fffd||fffd|)
Function B_info_ChinabondL1type(WINDCODE_ As Variant) As Variant
  B_info_ChinabondL1type = WindFunc("B_info_ChinabondL1type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,B_info_ChinabondL2type(|fffd||fffd||fffd||fffd|)
Function B_info_ChinabondL2type(WINDCODE_ As Variant) As Variant
  B_info_ChinabondL2type = WindFunc("B_info_ChinabondL2type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function


''''''''|fffd||fffd||5ea||56e|''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'|5ea||56e||fffd||fffd||fffd||fffd|,CB_Info_Code
Function CB_Info_Code(WINDCODE_ As Variant) As Variant
  CB_Info_Code = WindFunc("CB_INFO_CODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|5ea||56e||fffd||fffd||fffd|,CB_Info_Name
Function CB_Info_Name(WINDCODE_ As Variant) As Variant
  CB_Info_Name = WindFunc("CB_INFO_NAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||274||fffd||fffd||fffd|,CB_Info_UnderlyingCode
Function CB_Info_UnderlyingCode(WINDCODE_ As Variant) As Variant
  CB_Info_UnderlyingCode = WindFunc("CB_INFO_UNDERLYINGCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||27c||fffd||fffd|,CB_Info_UnderlyingName
Function CB_Info_UnderlyingName(WINDCODE_ As Variant) As Variant
  CB_Info_UnderlyingName = WindFunc("CB_INFO_UNDERLYINGNAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Info_Issuer
Function CB_Info_Issuer(WINDCODE_ As Variant) As Variant
  CB_Info_Issuer = WindFunc("CB_INFO_ISSUER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|5a4||fffd||fffd||fffd||fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,CB_Info_Industry_CSRC
Function CB_Info_Industry_CSRC(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_Info_Industry_CSRC = WindFunc("s_info_industry_csrc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), TYPE_, Null, Null, Null, Null)
End Function

'|5a4||fffd||fffd||fffd||fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,CB_Info_Industry_CSRCCode
Function CB_Info_Industry_CSRCCode(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_Info_Industry_CSRCCode = WindFunc("s_info_industry_csrccode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), TYPE_, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,CB_Info_Industry_GICS
Function CB_Info_Industry_GICS(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_Info_Industry_GICS = WindFunc("s_info_industry_gics", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), TYPE_, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5|-|fffd||fffd||fffd||fffd|,CB_Info_Industry_GICSCode
Function CB_Info_Industry_GICSCode(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_Info_Industry_GICSCode = WindFunc("s_info_industry_gicscode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), TYPE_, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5|-|4e2||fffd||fffd|,CB_Info_Industry_GICSEng
Function CB_Info_Industry_GICSEng(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_Info_Industry_GICSEng = WindFunc("s_info_industry_gics", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), TYPE_ + 4, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,CB_Info_Term
Function CB_Info_Term(WINDCODE_ As Variant) As Variant
  CB_Info_Term = WindFunc("CB_INFO_TERM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Info_ListedDate
Function CB_Info_ListedDate(WINDCODE_ As Variant) As Variant
  CB_Info_ListedDate = WindFunc("CB_INFO_LISTEDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|,CB_Info_CarryDate
Function CB_Info_CarryDate(WINDCODE_ As Variant) As Variant
  CB_Info_CarryDate = WindFunc("CB_INFO_CARRYDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Info_MaturityDate
Function CB_Info_MaturityDate(WINDCODE_ As Variant) As Variant
  CB_Info_MaturityDate = WindFunc("CB_INFO_MATURITYDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||43c||6f8||fffd|,CB_Info_IssuePrice
Function CB_Info_IssuePrice(WINDCODE_ As Variant) As Variant
  CB_Info_IssuePrice = WindFunc("CB_INFO_ISSUEPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|,CB_Info_IssueAmount
Function CB_Info_IssueAmount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  CB_Info_IssueAmount = WindFunc("CB_INFO_ISSUEAMOUNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(CB_Info_IssueAmount) <> vbString Then
        CB_Info_IssueAmount = CB_Info_IssueAmount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,CB_Info_Guarantor
Function CB_Info_Guarantor(WINDCODE_ As Variant) As Variant
  CB_Info_Guarantor = WindFunc("CB_INFO_GUARANTOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fc||fffd||fffd||fffd|,CB_Info_CreditRating
Function CB_Info_CreditRating(WINDCODE_ As Variant) As Variant
  CB_Info_CreditRating = WindFunc("cb_info_creditrating", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Info_CreditRatingAgency
Function CB_Info_CreditRatingAgency(WINDCODE_ As Variant) As Variant
  CB_Info_CreditRatingAgency = WindFunc("CB_INFO_CREDITRATINGAGENCY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Clause_Interest
Function CB_Clause_Interest(WINDCODE_ As Variant, ITEMSCODE_ As Integer) As Variant
  Select Case ITEMSCODE_
    Case 1
        CB_Clause_Interest = WindFunc("CB_INFO_INTERESTTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 2
        CB_Clause_Interest = WindFunc("CB_INFO_INTERESTFREQUENCY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 3
        CB_Clause_Interest = WindFunc("CB_CLAUSE_INTEREST_COMPENSATIONINTEREST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case Else
        CB_Clause_Interest = WindFunc("CB_CLAUSE_INTEREST", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), ITEMSCODE_, Null, Null, Null, Null)
  End Select
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Clause_Conversion
Function CB_Clause_Conversion(WINDCODE_ As Variant, ITEMSCODE_ As Integer) As Variant
    Select Case ITEMSCODE_
        Case 1
            CB_Clause_Conversion = WindFunc("CB_CLAUSE_CONVERSION_2_RELATIVESWAPSHAREMONTH", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 2
            CB_Clause_Conversion = WindFunc("CB_CLAUSE_CONVERSION_2_SWAPSHARESTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 3
            CB_Clause_Conversion = WindFunc("CB_CLAUSE_CONVERSION_2_SWAPSHAREENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 4
            CB_Clause_Conversion = WindFunc("CB_CLAUSE_CONVERSION_2_FORCECONVERTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 5
            CB_Clause_Conversion = WindFunc("CB_CLAUSE_CONVERSION_2_FORCECONVERTPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 6
            CB_Clause_Conversion = WindFunc("CB_CLAUSE_CONVERSION_2_ISFORCED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 7
            CB_Clause_Conversion = WindFunc("CB_CLAUSE_CONVERSION_2_CONVERSIONPROPORTION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    End Select
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd|2,CB_Clause_Conversion_2
Function CB_Clause_Conversion_2(WINDCODE_ As Variant, ITEMSCODE_ As Integer, Optional DEALDATE_ As Variant) As Variant
    Select Case ITEMSCODE_
        Case 1
            CB_Clause_Conversion_2 = WindFunc("CB_CLAUSE_CONVERSION2_SWAPSHAREPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 2
            CB_Clause_Conversion_2 = WindFunc("CB_CLAUSE_CONVERSION2_CONVERSIONPROPORTION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 3
            CB_Clause_Conversion_2 = WindFunc("CB_CLAUSE_CONVERSION2_BONDLOT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 4
            CB_Clause_Conversion_2 = WindFunc("CB_CLAUSE_CONVERSION2_BONDPROPORTION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
        Case 5
            CB_Clause_Conversion_2 = WindFunc("CB_CLAUSE_CONVERSION2_TOSHAREPRICEADJUSTITEM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    End Select
End Function

'|fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||2b1||fffd||fffd|,CB_Clause_Reset
Function CB_Clause_Reset(WINDCODE_ As Variant, ITEMSCODE_ As Integer) As Variant
  Select Case ITEMSCODE_
    Case 1
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_RESETSTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 2
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_RESETPERIODENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 3
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_RESETMAXTIMESPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 4
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_RESETTIMESPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 5
        CB_Clause_Reset = WindFunc("|fffd||fffd||5ea||56e|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 6
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_RESETRANGE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 7
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_STOCKPRICELOWESTLIMIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 8
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_RESETTIMESLIMIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 9
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_ISEXITRESET", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 10
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_REFERENCEPRICEISANVERAGE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 11
        CB_Clause_Reset = WindFunc("CB_CLAUSE_RESET_TIMEPOINTCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
  End Select
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Clause_CallOption
Function CB_Clause_CallOption(WINDCODE_ As Variant, ITEMSCODE_ As Integer) As Variant
    Select Case ITEMSCODE_
        Case 1
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_RELATIVECALLOPTIONPERIOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 2
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_REDEMPTIONTIMESPERYEAR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 3
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMSTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 4
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 5
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMMAXSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 6
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 7
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_TRIGGERPROPORTION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 8
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_REDEMPTIONMEMO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 9
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_TIMEREDEMPTIONTIMES", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 10
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_INTERESTDISPOSAL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 11
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMITEM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 12
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_ISWITHTIMEREDEMPTIONCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
        Case 13
           CB_Clause_CallOption = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    End Select
End Function

'|fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd|,CB_Clause_PutOption
Function CB_Clause_PutOption(WINDCODE_ As Variant, ITEMSCODE_ As Integer) As Variant
  Select Case ITEMSCODE_
    Case 1
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKPERIODOBS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 2
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_CONDITIONALPUTBACKSTARTENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 3
        CB_Clause_PutOption = WindFunc("Cb_Clause_Putoption_Conditionalputbackenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 4
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERMAXSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 5
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 6
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_REDEEM_TRIGGERPROPORTION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 7
        CB_Clause_PutOption = WindFunc("cb_clause_putoption_resellingpriceexplaination", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 8
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKTIMESPERYEAR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 9
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKPERIOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 10
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKSTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 11
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 12
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 13
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_TIMEPUTBACKTIMES", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 14
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_INTERESTDISPOSING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 15
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_TIMEPUTBACKCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 16
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 17
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_SELLBACKITEM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 18
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_ADDITIONALPRICEMEMO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    Case 19
        CB_Clause_PutOption = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKADDITIONALCONDITION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
  End Select
End Function

'|fffd||fffd||fffd||33c||fffd|,CB_DQ_Close
Function CB_DQ_Close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_Close = WindFunc("B_DQ_CLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,CB_DQ_Open
Function CB_DQ_Open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_Open = WindFunc("B_DQ_OPEN", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|,CB_DQ_High
Function CB_DQ_High(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_High = WindFunc("B_DQ_HIGH", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|,CB_DQ_Low
Function CB_DQ_Low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_Low = WindFunc("B_DQ_LOW", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0||fffd||fffd||fffd||33c||fffd|,CB_DQ_PreClose
Function CB_DQ_PreClose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_PreClose = WindFunc("B_DQ_PRECLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,CB_DQ_AvgPrice
Function CB_DQ_AvgPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_AvgPrice = WindFunc("b_dq_avgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||1f5||fffd|,CB_DQ_Change
Function CB_DQ_Change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_Change = WindFunc("B_DQ_CHANGE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|,CB_DQ_PctChange
Function CB_DQ_PctChange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_PctChange = WindFunc("B_DQ_PCTCHANGE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|,CB_DQ_Volume
Function CB_DQ_Volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  CB_DQ_Volume = WindFunc("B_DQ_VOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(CB_DQ_Volume) <> vbString Then
        CB_DQ_Volume = CB_DQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_OI_LOIC
Function S_OI_LOIC(WINDCODE_ As Variant, Optional TRADEDATE_ As Variant, Optional TopN_ As Integer = 1) As Variant
  S_OI_LOIC = WindFunc("S_OI_LOIC", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TopN_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_OI_SOIC
Function S_OI_SOIC(WINDCODE_ As Variant, Optional TRADEDATE_ As Variant, Optional TopN_ As Integer = 1) As Variant
  S_OI_SOIC = WindFunc("S_OI_SOIC", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TopN_)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd||fffd||3fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_OI_VOLUMEC
Function S_OI_VOLUMEC(WINDCODE_ As Variant, Optional TRADEDATE_ As Variant, Optional TopN_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  S_OI_VOLUMEC = WindFunc("S_OI_VOLUMEC", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TopN_)
    If VarType(S_OI_VOLUMEC) <> vbString Then
        S_OI_VOLUMEC = S_OI_VOLUMEC / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|,CB_DQ_Amount
Function CB_DQ_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_DQ_Amount = WindFunc("B_DQ_AMOUNT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,CB_DQ_Turn
Function CB_DQ_Turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_DQ_Turn = WindFunc("s_dq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,CB_PQ_Close
Function CB_PQ_Close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_Close = WindFunc("b_pq_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|,CB_PQ_Open
Function CB_PQ_Open(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_Open = WindFunc("b_pq_open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,CB_PQ_High
Function CB_PQ_High(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_High = WindFunc("b_pq_high", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,CB_PQ_Low
Function CB_PQ_Low(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_Low = WindFunc("b_pq_low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,CB_PQ_PreClose
Function CB_PQ_PreClose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_PreClose = WindFunc("b_pq_preclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,CB_PQ_AvgPrice
Function CB_PQ_AvgPrice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_AvgPrice = WindFunc("|56e||22f|.|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,CB_PQ_Change
Function CB_PQ_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_Change = WindFunc("b_pq_change", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,CB_PQ_PctChange
Function CB_PQ_PctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_PctChange = WindFunc("b_pq_pctchange", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,CB_PQ_Volume
Function CB_PQ_Volume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  CB_PQ_Volume = WindFunc("b_pq_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(CB_PQ_Volume) <> vbString Then
        CB_PQ_Volume = CB_PQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,CB_PQ_Amount
Function CB_PQ_Amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_Amount = WindFunc("b_pq_amount", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,CB_PQ_AvgVolume
Function CB_PQ_AvgVolume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  CB_PQ_AvgVolume = WindFunc("s_pq_avgvolume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,CB_PQ_AvgAmount
Function CB_PQ_AvgAmount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_PQ_AvgAmount = WindFunc("|56e||22f|.|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||4efb||fffd||fffd||fffd||fffd|,CB_PQ_Turn
Function CB_PQ_Turn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  CB_PQ_Turn = WindFunc("s_pq_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_PQ_AvgTurn
Function CB_PQ_AvgTurn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  CB_PQ_AvgTurn = WindFunc("s_pq_avgturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4f7b||fffd||fffd||fffd||fffd||fffd||fffd|,CB_PQ_TradeDays
Function CB_PQ_TradeDays(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  CB_PQ_TradeDays = WindFunc("s_pq_tradedays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||4bb||fffd||fffd||3e2||fffd||fffd|,CB_ANAL_NXCUPN
Function CB_ANAL_NXCUPN(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_ANAL_NXCUPN = WindFunc("B_ANAL_NXCUPN", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||47c||fffd||3e2||fffd||fffd||fffd||fffd|,CB_Anal_AccruedDays
Function CB_Anal_AccruedDays(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_AccruedDays = WindFunc("CB_ANAL_ACCRUEDDAYS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||fffd||3e2|,CB_Anal_AccruedInterest
Function CB_Anal_AccruedInterest(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_AccruedInterest = WindFunc("CB_ANAL_ACCRUEDINTEREST", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Anal_PTM
Function CB_Anal_PTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    Select Case TYPE_
      Case 1
          CB_Anal_PTM = WindFunc("CB_ANAL_PTM", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
      Case 2
          CB_Anal_PTM = WindFunc("CB_ANAL_PTM", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
    End Select
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Anal_YTM
Function CB_Anal_YTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_YTM = WindFunc("CB_ANAL_YTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||5b5|,CB_Anal_StraightBondValue
Function CB_Anal_StraightBondValue(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_StraightBondValue = WindFunc("CB_ANAL_STRAIGHTBONDVALUE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd|,CB_Anal_StraightBondPremium
Function CB_Anal_StraightBondPremium(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_StraightBondPremium = WindFunc("CB_ANAL_STRAIGHTBONDPREMIUM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd|,CB_Anal_StraightBondPremiumRatio
Function CB_Anal_StraightBondPremiumRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_StraightBondPremiumRatio = WindFunc("CB_ANAL_STRAIGHTBONDPREMIUMRATIO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||27c||fffd|,CB_Anal_ConvPrice
Function CB_Anal_ConvPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_ConvPrice = WindFunc("CB_ANAL_CONVPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||271||fffd||fffd||fffd|,CB_Anal_ConvRatio
Function CB_Anal_ConvRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_ConvRatio = WindFunc("CB_ANAL_CONVRATIO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||fffd||fffd||5b5|,CB_Anal_ConvValue
Function CB_Anal_ConvValue(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_ConvValue = WindFunc("CB_ANAL_CONVVALUE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd|,CB_Anal_ConvPremium
Function CB_Anal_ConvPremium(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_ConvPremium = WindFunc("CB_ANAL_CONVPREMIUM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Anal_ConvPremiumRatio
Function CB_Anal_ConvPremiumRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_ConvPremiumRatio = WindFunc("CB_ANAL_CONVPREMIUMRATIO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||fffd||fffd||4ef||fffd||fffd|,CB_Anal_ConvPE
Function CB_Anal_ConvPE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_ConvPE = WindFunc("CB_ANAL_CONVPE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||fffd||43e||fffd||fffd||fffd|,CB_Anal_ConvPB
Function CB_Anal_ConvPB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_ConvPB = WindFunc("CB_ANAL_CONVPB", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ef||fffd||fffd|,CB_Anal_UnderlyingPE
Function CB_Anal_UnderlyingPE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_UnderlyingPE = WindFunc("CB_ANAL_UNDERLYINGPE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||43e||fffd||fffd||fffd|,CB_Anal_UnderlyingPB
Function CB_Anal_UnderlyingPB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_UnderlyingPB = WindFunc("CB_ANAL_UNDERLYINGPB", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Holder_Name
Function CB_Holder_Name(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_Holder_Name = WindFunc("CB_HOLDER_NAME", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,CB_Holder_Quantity
Function CB_Holder_Quantity(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  CB_Holder_Quantity = WindFunc("CB_HOLDER_QUANTITY", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
    If VarType(CB_Holder_Quantity) <> vbString Then
        CB_Holder_Quantity = CB_Holder_Quantity / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||431||fffd||fffd||fffd|,CB_Holder_Pct
Function CB_Holder_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  CB_Holder_Pct = WindFunc("CB_HOLDER_PCT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function cb_info_listedmkt(WINDCODE_ As Variant) As Variant
  cb_info_listedmkt = WindFunc("CB_INFO_LISTEDMKT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_issueen(WINDCODE_ As Variant) As Variant
  cb_info_issueen = WindFunc("CB_INFO_ISSUEEN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_par(WINDCODE_ As Variant) As Variant
  cb_info_par = WindFunc("CB_INFO_PAR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_interest(WINDCODE_ As Variant) As Variant
  cb_info_interest = WindFunc("CB_INFO_INTEREST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_guartype(WINDCODE_ As Variant) As Variant
  cb_info_guartype = WindFunc("CB_INFO_GUARTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_guarterm(WINDCODE_ As Variant) As Variant
  cb_info_guarterm = WindFunc("CB_INFO_GUARTERM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_guarrange(WINDCODE_ As Variant) As Variant
  cb_info_guarrange = WindFunc("CB_INFO_GUARRANGE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_counterguar(WINDCODE_ As Variant) As Variant
  cb_info_counterguar = WindFunc("CB_INFO_COUNTERGUAR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_leadundr(WINDCODE_ As Variant) As Variant
  cb_info_leadundr = WindFunc("CB_INFO_LEADUNDR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_deputyundr(WINDCODE_ As Variant) As Variant
  cb_info_deputyundr = WindFunc("CB_INFO_DEPUTYUNDR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_distributor(WINDCODE_ As Variant) As Variant
  cb_info_distributor = WindFunc("CB_INFO_DISTRIBUTOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_recommender(WINDCODE_ As Variant) As Variant
  cb_info_recommender = WindFunc("CB_INFO_RECOMMENDER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_assetapp(WINDCODE_ As Variant) As Variant
  cb_info_assetapp = WindFunc("CB_INFO_ASSETAPP", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_exaccnt(WINDCODE_ As Variant) As Variant
  cb_info_exaccnt = WindFunc("CB_INFO_EXACCNT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_info_counselor(WINDCODE_ As Variant) As Variant
  cb_info_counselor = WindFunc("CB_INFO_COUNSELOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_announcedate(WINDCODE_ As Variant) As Variant
  cb_list_announcedate = WindFunc("CB_LIST_ANNOUNCEDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_type(WINDCODE_ As Variant) As Variant
  cb_list_type = WindFunc("CB_LIST_TYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_fee(WINDCODE_ As Variant) As Variant
  cb_list_fee = WindFunc("CB_LIST_FEE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationdate(WINDCODE_ As Variant) As Variant
  cb_list_rationdate = WindFunc("CB_LIST_RATIONDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationchkindate(WINDCODE_ As Variant) As Variant
  cb_list_rationchkindate = WindFunc("CB_LIST_RATIONCHKINDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationpaymtdate(WINDCODE_ As Variant) As Variant
  cb_list_rationpaymtdate = WindFunc("CB_LIST_RATIONPAYMTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationcode(WINDCODE_ As Variant) As Variant
  cb_list_rationcode = WindFunc("CB_LIST_RATIONCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationname(WINDCODE_ As Variant) As Variant
  cb_list_rationname = WindFunc("CB_LIST_RATIONNAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationprice(WINDCODE_ As Variant) As Variant
  cb_list_rationprice = WindFunc("CB_LIST_RATIONPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationratiode(WINDCODE_ As Variant) As Variant
  cb_list_rationratiode = WindFunc("CB_LIST_RATIONRATIODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_rationratiomo(WINDCODE_ As Variant) As Variant
  cb_list_rationratiomo = WindFunc("CB_LIST_RATIONRATIOMO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_originals(WINDCODE_ As Variant) As Variant
  cb_list_originals = WindFunc("CB_LIST_ORIGINALS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_dtonl(WINDCODE_ As Variant) As Variant
  cb_list_dtonl = WindFunc("CB_LIST_DTONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_pchasecodeonl(WINDCODE_ As Variant) As Variant
  cb_list_pchasecodeonl = WindFunc("CB_LIST_PCHASECODEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_pchnameonl(WINDCODE_ As Variant) As Variant
  cb_list_pchnameonl = WindFunc("CB_LIST_PCHNAMEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_pchpriceonl(WINDCODE_ As Variant) As Variant
  cb_list_pchpriceonl = WindFunc("CB_LIST_PCHPRICEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_codeonl(WINDCODE_ As Variant) As Variant
  cb_list_codeonl = WindFunc("cb_list_codeonl", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_excesspchonl(WINDCODE_ As Variant) As Variant
  cb_list_excesspchonl = WindFunc("CB_LIST_EXCESSPCHONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_dateinstoff(WINDCODE_ As Variant) As Variant
  cb_list_dateinstoff = WindFunc("CB_LIST_DATEINSTOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_annocedate(WINDCODE_ As Variant) As Variant
  cb_list_annocedate = WindFunc("CB_LIST_ANNOCEDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_permitdate(WINDCODE_ As Variant) As Variant
  cb_list_permitdate = WindFunc("CB_LIST_PERMITDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_sucrateonl(WINDCODE_ As Variant) As Variant
  cb_list_sucrateonl = WindFunc("CB_LIST_SUCRATEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_effectpchvoloff(WINDCODE_ As Variant) As Variant
  cb_list_effectpchvoloff = WindFunc("CB_LIST_EFFECTPCHVOLOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_effpchoff(WINDCODE_ As Variant) As Variant
  cb_list_effpchoff = WindFunc("CB_LIST_EFFPCHOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_list_sucrateoff(WINDCODE_ As Variant) As Variant
  cb_list_sucrateoff = WindFunc("CB_LIST_SUCRATEOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_rationamt(WINDCODE_ As Variant) As Variant
  cb_result_rationamt = WindFunc("CB_RESULT_RATIONAMT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_rationcode(WINDCODE_ As Variant) As Variant
  cb_result_rationcode = WindFunc("CB_RESULT_RATIONCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_explnration(WINDCODE_ As Variant) As Variant
  cb_result_explnration = WindFunc("CB_RESULT_EXPLNRATION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_purcodeonl(WINDCODE_ As Variant) As Variant
  cb_result_purcodeonl = WindFunc("CB_RESULT_PURCODEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_purnameonl(WINDCODE_ As Variant) As Variant
  cb_result_purnameonl = WindFunc("CB_RESULT_PURNAMEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_efinvestornontrad(WINDCODE_ As Variant) As Variant
  cb_result_efinvestornontrad = WindFunc("CB_RESULT_EFINVESTORNONTRAD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_efamntnontrad(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_efamntnontrad = WindFunc("CB_RESULT_EFAMNTNONTRAD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_efamntnontrad) <> vbString Then
        cb_result_efamntnontrad = cb_result_efamntnontrad / UnitVal_
    End If
End Function

Function cb_result_rationamtnontrad(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_rationamtnontrad = WindFunc("CB_RESULT_RATIONAMTNONTRAD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_rationamtnontrad) <> vbString Then
        cb_result_rationamtnontrad = cb_result_rationamtnontrad / UnitVal_
    End If
End Function

Function cb_result_avairationamttrad(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_avairationamttrad = WindFunc("CB_RESULT_AVAIRATIONAMTTRAD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_avairationamttrad) <> vbString Then
        cb_result_avairationamttrad = cb_result_avairationamttrad / UnitVal_
    End If
End Function

Function cb_result_efinvestors(WINDCODE_ As Variant) As Variant
  cb_result_efinvestors = WindFunc("CB_RESULT_EFINVESTORS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_efsubscrpamt(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_efsubscrpamt = WindFunc("CB_RESULT_EFSUBSCRPAMT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_efsubscrpamt) <> vbString Then
        cb_result_efsubscrpamt = cb_result_efsubscrpamt / UnitVal_
    End If
End Function

Function cb_result_placeamnttrad(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_placeamnttrad = WindFunc("CB_RESULT_PLACEAMNTTRAD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_placeamnttrad) <> vbString Then
        cb_result_placeamnttrad = cb_result_placeamnttrad / UnitVal_
    End If
End Function

Function cb_result_issueonl(WINDCODE_ As Variant) As Variant
  cb_result_issueonl = WindFunc("CB_RESULT_ISSUEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_efsubscrponl(WINDCODE_ As Variant) As Variant
  cb_result_efsubscrponl = WindFunc("CB_RESULT_EFSUBSCRPONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_efsubscrpamtonl(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_efsubscrpamtonl = WindFunc("CB_RESULT_EFSUBSCRPAMTONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_efsubscrpamtonl) <> vbString Then
        cb_result_efsubscrpamtonl = cb_result_efsubscrpamtonl / UnitVal_
    End If
End Function

Function cb_result_rationamtonl(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_rationamtonl = WindFunc("CB_RESULT_RATIONAMTONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_rationamtonl) <> vbString Then
        cb_result_rationamtonl = cb_result_rationamtonl / UnitVal_
    End If
End Function

Function cb_result_rationratioonl(WINDCODE_ As Variant) As Variant
  cb_result_rationratioonl = WindFunc("CB_RESULT_RATIONRATIOONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_sucrateonl(WINDCODE_ As Variant) As Variant
  cb_result_sucrateonl = WindFunc("CB_RESULT_SUCRATEONL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_efsubscrpoff(WINDCODE_ As Variant) As Variant
  cb_result_efsubscrpoff = WindFunc("CB_RESULT_EFSUBSCRPOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_efsubscrpamtoff(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_efsubscrpamtoff = WindFunc("CB_RESULT_EFSUBSCRPAMTOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_efsubscrpamtoff) <> vbString Then
        cb_result_efsubscrpamtoff = cb_result_efsubscrpamtoff / UnitVal_
    End If
End Function

Function cb_result_rationamtoff(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_rationamtoff = WindFunc("CB_RESULT_RATIONAMTOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_rationamtoff) <> vbString Then
        cb_result_rationamtoff = cb_result_rationamtoff / UnitVal_
    End If
End Function

Function cb_result_sucrateoff(WINDCODE_ As Variant) As Variant
  cb_result_sucrateoff = WindFunc("CB_RESULT_SUCRATEOFF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_result_balance(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_result_balance = WindFunc("CB_RESULT_BALANCE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
    If VarType(cb_result_balance) <> vbString Then
        cb_result_balance = cb_result_balance / UnitVal_
    End If
End Function

Function cb_issuefee_feesum(WINDCODE_ As Variant) As Variant
  cb_issuefee_feesum = WindFunc("CB_ISSUEFEE_FEESUM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_issuefee_underwrtspon(WINDCODE_ As Variant) As Variant
  cb_issuefee_underwrtspon = WindFunc("CB_ISSUEFEE_UNDERWRTSPON", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_issuefee_accont(WINDCODE_ As Variant) As Variant
  cb_issuefee_accont = WindFunc("CB_ISSUEFEE_ACCONT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_issuefee_legalconsl(WINDCODE_ As Variant) As Variant
  cb_issuefee_legalconsl = WindFunc("CB_ISSUEFEE_LEGALCONSL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_dq_stockpreclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_dq_stockpreclose = WindFunc("cb_dq_stockpreclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function cb_dq_stockopen(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_dq_stockopen = WindFunc("cb_dq_stockopen", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function cb_dq_stockhigh(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_dq_stockhigh = WindFunc("cb_dq_stockhigh", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function cb_dq_stocklow(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_dq_stocklow = WindFunc("cb_dq_stocklow", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function cb_dq_stockclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_dq_stockclose = WindFunc("cb_dq_stockclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

Function cb_dq_stockavg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_dq_stockavg = WindFunc("cb_dq_stockavg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function cb_dq_stockvol(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_dq_stockvol = WindFunc("cb_dq_stockvol", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_dq_stockvol) <> vbString Then
        cb_dq_stockvol = cb_dq_stockvol / UnitVal_
    End If
End Function

Function cb_dq_stockchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_dq_stockchg = WindFunc("cb_dq_stockchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function cb_dq_stockpctchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_dq_stockpctchg = WindFunc("cb_dq_stockpctchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function cb_dq_stockturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_dq_stockturnover = WindFunc("cb_dq_stockturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function cb_dq_stockswing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_dq_stockswing = WindFunc("cb_dq_stockswing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function cb_pq_stockpreclose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_pq_stockpreclose = WindFunc("cb_pq_stockpreclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function cb_pq_stockopen(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_pq_stockopen = WindFunc("cb_pq_stockopen", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function cb_pq_stockhigh(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_pq_stockhigh = WindFunc("cb_pq_stockhigh", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function cb_pq_stocklow(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_pq_stocklow = WindFunc("cb_pq_stocklow", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function cb_pq_stockclose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_pq_stockclose = WindFunc("cb_pq_stockclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function cb_pq_stockhighclose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_pq_stockhighclose = WindFunc("cb_pq_STOCKHIGHCLOSE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function cb_pq_stocklowclose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  cb_pq_stocklowclose = WindFunc("cb_pq_STOCKLOWCLOSE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

Function cb_pq_stockave(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  cb_pq_stockave = WindFunc("cb_pq_stockavg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function cb_pq_stockvol(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_pq_stockvol = WindFunc("cb_pq_stockvol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(cb_pq_stockvol) <> vbString Then
        cb_pq_stockvol = cb_pq_stockvol / UnitVal_
    End If
End Function

Function cb_pq_stockamnt(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_pq_stockamnt = WindFunc("cb_pq_stockamnt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(cb_pq_stockamnt) <> vbString Then
        cb_pq_stockamnt = cb_pq_stockamnt / UnitVal_
    End If
End Function

Function cb_pq_stockchange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  cb_pq_stockchange = WindFunc("cb_pq_stockchg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function cb_pq_stockchangepcnt(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  cb_pq_stockchangepcnt = WindFunc("cb_pq_stockpctchg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function cb_pq_stockturnover(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  cb_pq_stockturnover = WindFunc("cb_pq_stockturnover", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function cb_pq_stockaveturnover(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  cb_pq_stockaveturnover = WindFunc("cb_pq_STOCKAVETURNOVER", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function cb_pq_stockswing(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  cb_pq_stockswing = WindFunc("cb_pq_stockswing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

Function cb_anal_curyield(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_anal_curyield = WindFunc("CB_ANAL_CURYIELD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

Function cb_war_code(WINDCODE_ As Variant) As Variant
  cb_war_code = WindFunc("CB_WAR_CODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_name(WINDCODE_ As Variant) As Variant
  cb_war_name = WindFunc("CB_WAR_NAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_underlyingcode(WINDCODE_ As Variant) As Variant
  cb_war_underlyingcode = WindFunc("CB_WAR_UNDERLYINGCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_underlyingname(WINDCODE_ As Variant) As Variant
  cb_war_underlyingname = WindFunc("CB_WAR_UNDERLYINGNAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_type(WINDCODE_ As Variant) As Variant
  cb_war_type = WindFunc("CB_WAR_TYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_callorput(WINDCODE_ As Variant) As Variant
  cb_war_callorput = WindFunc("CB_WAR_CALLORPUT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_exectype(WINDCODE_ As Variant) As Variant
  cb_war_exectype = WindFunc("CB_WAR_EXECTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_issuedate(WINDCODE_ As Variant) As Variant
  cb_war_issuedate = WindFunc("CB_WAR_ISSUEDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_listeddate(WINDCODE_ As Variant) As Variant
  cb_war_listeddate = WindFunc("CB_WAR_LISTEDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_issueamt(WINDCODE_ As Variant) As Variant
  cb_war_issueamt = WindFunc("CB_WAR_ISSUEAMT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_lstamt(WINDCODE_ As Variant) As Variant
  cb_war_lstamt = WindFunc("CB_WAR_LSTAMT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_initstrikeprice(WINDCODE_ As Variant) As Variant
  cb_war_initstrikeprice = WindFunc("CB_WAR_INITSTRIKEPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_initstrikeratio(WINDCODE_ As Variant) As Variant
  cb_war_initstrikeratio = WindFunc("CB_WAR_INITSTRIKERATIO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_term(WINDCODE_ As Variant) As Variant
  cb_war_term = WindFunc("CB_WAR_TERM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_beginning(WINDCODE_ As Variant) As Variant
  cb_war_beginning = WindFunc("CB_WAR_BEGINNING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_end(WINDCODE_ As Variant) As Variant
  cb_war_end = WindFunc("CB_WAR_END", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_waramtpershare(WINDCODE_ As Variant) As Variant
  cb_war_waramtpershare = WindFunc("CB_WAR_WARAMTPERSHARE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_issueobject(WINDCODE_ As Variant) As Variant
  cb_war_issueobject = WindFunc("CB_WAR_ISSUEOBJECT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_issuetype(WINDCODE_ As Variant) As Variant
  cb_war_issuetype = WindFunc("CB_WARRANT_ISSUETYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_anocedatepreplan(WINDCODE_ As Variant) As Variant
  cb_war_anocedatepreplan = WindFunc("CB_WAR_ANOCEDATEPREPLAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_annodatemeeting(WINDCODE_ As Variant) As Variant
  cb_war_annodatemeeting = WindFunc("CB_WAR_ANNODATEMEETING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_announcedate(WINDCODE_ As Variant) As Variant
  cb_war_announcedate = WindFunc("CB_WAR_ANNOUNCEDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_annudatelisted(WINDCODE_ As Variant) As Variant
  cb_war_annudatelisted = WindFunc("CB_WAR_ANNUDATELISTED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_strkprcadjorno(WINDCODE_ As Variant) As Variant
  cb_war_strkprcadjorno = WindFunc("CB_WAR_STRKPRCADJORNO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_strkprcadjformula(WINDCODE_ As Variant) As Variant
  cb_war_strkprcadjformula = WindFunc("CB_WAR_STRKPRCADJFORMULA", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_settlement(WINDCODE_ As Variant) As Variant
  cb_war_settlement = WindFunc("CB_WAR_SETTLEMENT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_exercucode(WINDCODE_ As Variant) As Variant
  cb_war_exercucode = WindFunc("CB_WAR_EXERCUCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_execname(WINDCODE_ As Variant) As Variant
  cb_war_execname = WindFunc("CB_WAR_EXECNAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_execbegin(WINDCODE_ As Variant) As Variant
  cb_war_execbegin = WindFunc("CB_WAR_EXECBEGIN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_execend(WINDCODE_ As Variant) As Variant
  cb_war_execend = WindFunc("CB_WAR_EXECEND", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_lasttradedate(WINDCODE_ As Variant) As Variant
  cb_war_lasttradedate = WindFunc("CB_WAR_LASTTRADEDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_lastdate(WINDCODE_ As Variant) As Variant
  cb_war_lastdate = WindFunc("CB_WAR_LASTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_pchclause(WINDCODE_ As Variant) As Variant
  cb_war_pchclause = WindFunc("CB_WAR_PCHCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_repchprice(WINDCODE_ As Variant) As Variant
  cb_war_repchprice = WindFunc("CB_WAR_REPCHPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

Function cb_war_repurchase(WINDCODE_ As Variant) As Variant
  cb_war_repurchase = WindFunc("CB_WAR_REPURCHASE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_INFO_INTERESTTYPE
Function CB_INFO_INTERESTTYPE(WINDCODE_ As Variant) As Variant
  CB_INFO_INTERESTTYPE = WindFunc("CB_INFO_INTERESTTYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||ae36||3e2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_INFO_INTERESTFREQUENCY
Function CB_INFO_INTERESTFREQUENCY(WINDCODE_ As Variant) As Variant
  CB_INFO_INTERESTFREQUENCY = WindFunc("CB_INFO_INTERESTFREQUENCY", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_INTEREST_COMPENSATIONINTEREST
Function CB_CLAUSE_INTEREST_COMPENSATIONINTEREST(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_INTEREST_COMPENSATIONINTEREST = WindFunc("CB_CLAUSE_INTEREST_COMPENSATIONINTEREST", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||5ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION_2_RELATIVESWAPSHAREMONTH
Function CB_CLAUSE_CONVERSION_2_RELATIVESWAPSHAREMONTH(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION_2_RELATIVESWAPSHAREMONTH = WindFunc("CB_CLAUSE_CONVERSION_2_RELATIVESWAPSHAREMONTH", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||538||5ea||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION_2_SWAPSHARESTARTDATE
Function CB_CLAUSE_CONVERSION_2_SWAPSHARESTARTDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION_2_SWAPSHARESTARTDATE = WindFunc("CB_CLAUSE_CONVERSION_2_SWAPSHARESTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||538||5ea||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION_2_SWAPSHAREENDDATE
Function CB_CLAUSE_CONVERSION_2_SWAPSHAREENDDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION_2_SWAPSHAREENDDATE = WindFunc("CB_CLAUSE_CONVERSION_2_SWAPSHAREENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||1f7||fffd||1ff||fffd||fffd||5ea||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION_2_ISFORCED
Function CB_CLAUSE_CONVERSION_2_ISFORCED(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION_2_ISFORCED = WindFunc("CB_CLAUSE_CONVERSION_2_ISFORCED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|1ff||fffd||fffd||5ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION_2_FORCECONVERTDATE
Function CB_CLAUSE_CONVERSION_2_FORCECONVERTDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION_2_FORCECONVERTDATE = WindFunc("CB_CLAUSE_CONVERSION_2_FORCECONVERTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|1ff||fffd||fffd||5ea||fffd||27c||6f8||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION_2_FORCECONVERTPRICE
Function CB_CLAUSE_CONVERSION_2_FORCECONVERTPRICE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION_2_FORCECONVERTPRICE = WindFunc("CB_CLAUSE_CONVERSION_2_FORCECONVERTPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|5ea||fffd||27c||6f8||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION2_SWAPSHAREPRICE
Function CB_CLAUSE_CONVERSION2_SWAPSHAREPRICE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION2_SWAPSHAREPRICE = WindFunc("CB_CLAUSE_CONVERSION2_SWAPSHAREPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION2_CONVERSIONPROPORTION
Function CB_CLAUSE_CONVERSION2_CONVERSIONPROPORTION(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION2_CONVERSIONPROPORTION = WindFunc("CB_CLAUSE_CONVERSION2_CONVERSIONPROPORTION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|3b4||5ea||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION2_BONDLOT
Function CB_CLAUSE_CONVERSION2_BONDLOT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  CB_CLAUSE_CONVERSION2_BONDLOT = WindFunc("CB_CLAUSE_CONVERSION2_BONDLOT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(CB_CLAUSE_CONVERSION2_BONDLOT) <> vbString Then
        CB_CLAUSE_CONVERSION2_BONDLOT = CB_CLAUSE_CONVERSION2_BONDLOT / UnitVal_
    End If
End Function

'|3b4||5ea||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION2_BONDPROPORTION
Function CB_CLAUSE_CONVERSION2_BONDPROPORTION(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION2_BONDPROPORTION = WindFunc("CB_CLAUSE_CONVERSION2_BONDPROPORTION", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||27c||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION_2_CONVERSIONPROPORTION
Function CB_CLAUSE_CONVERSION_2_CONVERSIONPROPORTION(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION_2_CONVERSIONPROPORTION = WindFunc("CB_CLAUSE_CONVERSION_2_CONVERSIONPROPORTION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CONVERSION2_TOSHAREPRICEADJUSTITEM
Function CB_CLAUSE_CONVERSION2_TOSHAREPRICEADJUSTITEM(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CONVERSION2_TOSHAREPRICEADJUSTITEM = WindFunc("CB_CLAUSE_CONVERSION2_TOSHAREPRICEADJUSTITEM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_ISEXITRESET
Function CB_CLAUSE_RESET_ISEXITRESET(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_ISEXITRESET = WindFunc("CB_CLAUSE_RESET_ISEXITRESET", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||2b1||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_RESETSTARTDATE
Function CB_CLAUSE_RESET_RESETSTARTDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_RESETSTARTDATE = WindFunc("CB_CLAUSE_RESET_RESETSTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_RESETPERIODENDDATE
Function CB_CLAUSE_RESET_RESETPERIODENDDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_RESETPERIODENDDATE = WindFunc("CB_CLAUSE_RESET_RESETPERIODENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||8d25||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_RESETMAXTIMESPAN
Function CB_CLAUSE_RESET_RESETMAXTIMESPAN(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_RESETMAXTIMESPAN = WindFunc("CB_CLAUSE_RESET_RESETMAXTIMESPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||8d25||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_RESETTIMESPAN
Function CB_CLAUSE_RESET_RESETTIMESPAN(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_RESETTIMESPAN = WindFunc("CB_CLAUSE_RESET_RESETTIMESPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_RESETTRIGGERRATIO
Function CB_CLAUSE_RESET_RESETTRIGGERRATIO(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_RESETTRIGGERRATIO = WindFunc("CB_CLAUSE_RESET_RESETTRIGGERRATIO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||1f7||fffd||3aa||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_REFERENCEPRICEISANVERAGE
Function CB_CLAUSE_RESET_REFERENCEPRICEISANVERAGE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_REFERENCEPRICEISANVERAGE = WindFunc("CB_CLAUSE_RESET_REFERENCEPRICEISANVERAGE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_RESETRANGE
Function CB_CLAUSE_RESET_RESETRANGE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_RESETRANGE = WindFunc("CB_CLAUSE_RESET_RESETRANGE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6f8||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_STOCKPRICELOWESTLIMIT
Function CB_CLAUSE_RESET_STOCKPRICELOWESTLIMIT(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_STOCKPRICELOWESTLIMIT = WindFunc("CB_CLAUSE_RESET_STOCKPRICELOWESTLIMIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_RESETTIMESLIMIT
Function CB_CLAUSE_RESET_RESETTIMESLIMIT(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_RESETTIMESLIMIT = WindFunc("CB_CLAUSE_RESET_RESETTIMESLIMIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_RESET_TIMEPOINTCLAUSE
Function CB_CLAUSE_RESET_TIMEPOINTCLAUSE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_RESET_TIMEPOINTCLAUSE = WindFunc("CB_CLAUSE_RESET_TIMEPOINTCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_RELATIVECALLOPTIONPERIOD
Function CB_CLAUSE_CALLOPTION_RELATIVECALLOPTIONPERIOD(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_RELATIVECALLOPTIONPERIOD = WindFunc("CB_CLAUSE_CALLOPTION_RELATIVECALLOPTIONPERIOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||634||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_REDEMPTIONTIMESPERYEAR
Function CB_CLAUSE_CALLOPTION_REDEMPTIONTIMESPERYEAR(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_REDEMPTIONTIMESPERYEAR = WindFunc("CB_CLAUSE_CALLOPTION_REDEMPTIONTIMESPERYEAR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMSTARTDATE
Function CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMSTARTDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMSTARTDATE = WindFunc("CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMSTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||63d||fffd||5b9||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMENDDATE
Function CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMENDDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMENDDATE = WindFunc("CB_CLAUSE_CALLOPTION_CONDITIONALREDEEMENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||634||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_REDEEMMAXSPAN
Function CB_CLAUSE_CALLOPTION_REDEEMMAXSPAN(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_REDEEMMAXSPAN = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMMAXSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||634||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_REDEEMSPAN
Function CB_CLAUSE_CALLOPTION_REDEEMSPAN(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_REDEEMSPAN = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||634||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_TRIGGERPROPORTION
Function CB_CLAUSE_CALLOPTION_TRIGGERPROPORTION(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_TRIGGERPROPORTION = WindFunc("CB_CLAUSE_CALLOPTION_TRIGGERPROPORTION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||63c||6f8||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_REDEMPTIONPRICE
Function CB_CLAUSE_CALLOPTION_REDEMPTIONPRICE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_REDEMPTIONPRICE = WindFunc("CB_CLAUSE_CALLOPTION_REDEMPTIONPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||63c||6f8||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_REDEMPTIONMEMO
Function CB_CLAUSE_CALLOPTION_REDEMPTIONMEMO(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_REDEMPTIONMEMO = WindFunc("CB_CLAUSE_CALLOPTION_REDEMPTIONMEMO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_INTERESTDISPOSAL
Function CB_CLAUSE_CALLOPTION_INTERESTDISPOSAL(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_INTERESTDISPOSAL = WindFunc("CB_CLAUSE_CALLOPTION_INTERESTDISPOSAL", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_REDEEMITEM
Function CB_CLAUSE_CALLOPTION_REDEEMITEM(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_REDEEMITEM = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMITEM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||1f7||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_ISWITHTIMEREDEMPTIONCLAUSE
Function CB_CLAUSE_CALLOPTION_ISWITHTIMEREDEMPTIONCLAUSE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_ISWITHTIMEREDEMPTIONCLAUSE = WindFunc("CB_CLAUSE_CALLOPTION_ISWITHTIMEREDEMPTIONCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_TIMEREDEMPTIONTIMES
Function CB_CLAUSE_CALLOPTION_TIMEREDEMPTIONTIMES(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_TIMEREDEMPTIONTIMES = WindFunc("CB_CLAUSE_CALLOPTION_TIMEREDEMPTIONTIMES", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_CALLOPTION_REDEEMCLAUSE
Function CB_CLAUSE_CALLOPTION_REDEEMCLAUSE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_CALLOPTION_REDEEMCLAUSE = WindFunc("CB_CLAUSE_CALLOPTION_REDEEMCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||53b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKPERIODOBS
Function CB_CLAUSE_PUTOPTION_PUTBACKPERIODOBS(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKPERIODOBS = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKPERIODOBS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_CONDITIONALPUTBACKSTARTENDDATE
Function CB_CLAUSE_PUTOPTION_CONDITIONALPUTBACKSTARTENDDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_CONDITIONALPUTBACKSTARTENDDATE = WindFunc("CB_CLAUSE_PUTOPTION_CONDITIONALPUTBACKSTARTENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fd||fffd||5b9||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_clause_putoption_conditionalputbackenddate
Function cb_clause_putoption_conditionalputbackenddate(WINDCODE_ As Variant) As Variant
  cb_clause_putoption_conditionalputbackenddate = WindFunc("cb_clause_putoption_conditionalputbackenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6f4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERMAXSPAN
Function CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERMAXSPAN(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERMAXSPAN = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERMAXSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6f4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERSPAN
Function CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERSPAN(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERSPAN = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKTRIGGERSPAN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6f4||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_REDEEM_TRIGGERPROPORTION
Function CB_CLAUSE_PUTOPTION_REDEEM_TRIGGERPROPORTION(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_REDEEM_TRIGGERPROPORTION = WindFunc("CB_CLAUSE_PUTOPTION_REDEEM_TRIGGERPROPORTION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fc||6f8||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_RESELLINGPRICE
Function CB_CLAUSE_PUTOPTION_RESELLINGPRICE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_RESELLINGPRICE = WindFunc("CB_CLAUSE_PUTOPTION_RESELLINGPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fc||6f8||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_clause_putoption_resellingpriceexplaination
Function cb_clause_putoption_resellingpriceexplaination(WINDCODE_ As Variant) As Variant
  cb_clause_putoption_resellingpriceexplaination = WindFunc("cb_clause_putoption_resellingpriceexplaination", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||6f4||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKTIMESPERYEAR
Function CB_CLAUSE_PUTOPTION_PUTBACKTIMESPERYEAR(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKTIMESPERYEAR = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKTIMESPERYEAR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_INTERESTDISPOSING
Function CB_CLAUSE_PUTOPTION_INTERESTDISPOSING(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_INTERESTDISPOSING = WindFunc("CB_CLAUSE_PUTOPTION_INTERESTDISPOSING", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_TIMEPUTBACKCLAUSE
Function CB_CLAUSE_PUTOPTION_TIMEPUTBACKCLAUSE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_TIMEPUTBACKCLAUSE = WindFunc("CB_CLAUSE_PUTOPTION_TIMEPUTBACKCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKPERIOD
Function CB_CLAUSE_PUTOPTION_PUTBACKPERIOD(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKPERIOD = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKPERIOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKSTARTDATE
Function CB_CLAUSE_PUTOPTION_PUTBACKSTARTDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKSTARTDATE = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKSTARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKENDDATE
Function CB_CLAUSE_PUTOPTION_PUTBACKENDDATE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKENDDATE = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKPRICE
Function CB_CLAUSE_PUTOPTION_PUTBACKPRICE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKPRICE = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKCLAUSE
Function CB_CLAUSE_PUTOPTION_PUTBACKCLAUSE(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKCLAUSE = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKCLAUSE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_TIMEPUTBACKTIMES
Function CB_CLAUSE_PUTOPTION_TIMEPUTBACKTIMES(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_TIMEPUTBACKTIMES = WindFunc("CB_CLAUSE_PUTOPTION_TIMEPUTBACKTIMES", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_SELLBACKITEM
Function CB_CLAUSE_PUTOPTION_SELLBACKITEM(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_SELLBACKITEM = WindFunc("CB_CLAUSE_PUTOPTION_SELLBACKITEM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||4fb||fffd||fffd||6fc||6f8||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_ADDITIONALPRICEMEMO
Function CB_CLAUSE_PUTOPTION_ADDITIONALPRICEMEMO(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_ADDITIONALPRICEMEMO = WindFunc("CB_CLAUSE_PUTOPTION_ADDITIONALPRICEMEMO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||4fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_CLAUSE_PUTOPTION_PUTBACKADDITIONALCONDITION
Function CB_CLAUSE_PUTOPTION_PUTBACKADDITIONALCONDITION(WINDCODE_ As Variant) As Variant
  CB_CLAUSE_PUTOPTION_PUTBACKADDITIONALCONDITION = WindFunc("CB_CLAUSE_PUTOPTION_PUTBACKADDITIONALCONDITION", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||273||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_dq_stockamnt
Function cb_dq_stockamnt(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_dq_stockamnt = WindFunc("cb_dq_stockamnt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_dq_stockamnt) <> vbString Then
        cb_dq_stockamnt = cb_dq_stockamnt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockpreclose
Function cb_wq_stockpreclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_wq_stockpreclose = WindFunc("cb_wq_stockpreclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||73f||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockopen
Function cb_wq_stockopen(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_wq_stockopen = WindFunc("cb_wq_stockopen", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockhigh
Function cb_wq_stockhigh(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_wq_stockhigh = WindFunc("cb_wq_stockhigh", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stocklow
Function cb_wq_stocklow(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_wq_stocklow = WindFunc("cb_wq_stocklow", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockclose
Function cb_wq_stockclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_wq_stockclose = WindFunc("cb_wq_stockclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),CB_WQ_STOCKHIGHCLOSE
Function CB_WQ_STOCKHIGHCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  CB_WQ_STOCKHIGHCLOSE = WindFunc("CB_WQ_STOCKHIGHCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),CB_WQ_STOCKLOWCLOSE
Function CB_WQ_STOCKLOWCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  CB_WQ_STOCKLOWCLOSE = WindFunc("CB_WQ_STOCKLOWCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||73e||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockavg
Function cb_wq_stockavg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_wq_stockavg = WindFunc("cb_wq_stockavg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockvol
Function cb_wq_stockvol(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_wq_stockvol = WindFunc("cb_wq_stockvol", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_wq_stockvol) <> vbString Then
        cb_wq_stockvol = cb_wq_stockvol / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockamnt
Function cb_wq_stockamnt(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_wq_stockamnt = WindFunc("cb_wq_stockamnt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_wq_stockamnt) <> vbString Then
        cb_wq_stockamnt = cb_wq_stockamnt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockchg
Function cb_wq_stockchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_wq_stockchg = WindFunc("cb_wq_stockchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockpctchg
Function cb_wq_stockpctchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_wq_stockpctchg = WindFunc("cb_wq_stockpctchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||73b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockturnover
Function cb_wq_stockturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_wq_stockturnover = WindFunc("cb_wq_stockturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_WQ_STOCKAVETURNOVER
Function CB_WQ_STOCKAVETURNOVER(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_WQ_STOCKAVETURNOVER = WindFunc("CB_WQ_STOCKAVETURNOVER", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_wq_stockswing
Function cb_wq_stockswing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_wq_stockswing = WindFunc("cb_wq_stockswing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockpreclose
Function cb_mq_stockpreclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_mq_stockpreclose = WindFunc("cb_mq_stockpreclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||bf||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockopen
Function cb_mq_stockopen(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_mq_stockopen = WindFunc("cb_mq_stockopen", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockhigh
Function cb_mq_stockhigh(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_mq_stockhigh = WindFunc("cb_mq_stockhigh", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stocklow
Function cb_mq_stocklow(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_mq_stocklow = WindFunc("cb_mq_stocklow", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockclose
Function cb_mq_stockclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_mq_stockclose = WindFunc("cb_mq_stockclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_STOCKHIGHCLOSE
Function cb_mq_STOCKHIGHCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_mq_STOCKHIGHCLOSE = WindFunc("cb_mq_STOCKHIGHCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_STOCKLOWCLOSE
Function cb_mq_STOCKLOWCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_mq_STOCKLOWCLOSE = WindFunc("cb_mq_STOCKLOWCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||be||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockavg
Function cb_mq_stockavg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_mq_stockavg = WindFunc("cb_mq_stockavg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockvol
Function cb_mq_stockvol(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_mq_stockvol = WindFunc("cb_mq_stockvol", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_mq_stockvol) <> vbString Then
        cb_mq_stockvol = cb_mq_stockvol / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockamnt
Function cb_mq_stockamnt(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_mq_stockamnt = WindFunc("cb_mq_stockamnt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_mq_stockamnt) <> vbString Then
        cb_mq_stockamnt = cb_mq_stockamnt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockchg
Function cb_mq_stockchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_mq_stockchg = WindFunc("cb_mq_stockchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockpctchg
Function cb_mq_stockpctchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_mq_stockpctchg = WindFunc("cb_mq_stockpctchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||bb||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockturnover
Function cb_mq_stockturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_mq_stockturnover = WindFunc("cb_mq_stockturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_STOCKAVETURNOVER
Function cb_mq_STOCKAVETURNOVER(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_mq_STOCKAVETURNOVER = WindFunc("cb_mq_STOCKAVETURNOVER", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_mq_stockswing
Function cb_mq_stockswing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_mq_stockswing = WindFunc("cb_mq_stockswing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockpreclose
Function cb_yq_stockpreclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_yq_stockpreclose = WindFunc("cb_yq_stockpreclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||afea||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockopen
Function cb_yq_stockopen(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_yq_stockopen = WindFunc("cb_yq_stockopen", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockhigh
Function cb_yq_stockhigh(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_yq_stockhigh = WindFunc("cb_yq_stockhigh", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stocklow
Function cb_yq_stocklow(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_yq_stocklow = WindFunc("cb_yq_stocklow", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockclose
Function cb_yq_stockclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_yq_stockclose = WindFunc("cb_yq_stockclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_STOCKHIGHCLOSE
Function cb_yq_STOCKHIGHCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_yq_STOCKHIGHCLOSE = WindFunc("cb_yq_STOCKHIGHCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_STOCKLOWCLOSE
Function cb_yq_STOCKLOWCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  cb_yq_STOCKLOWCLOSE = WindFunc("cb_yq_STOCKLOWCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockavg
Function cb_yq_stockavg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_yq_stockavg = WindFunc("cb_yq_stockavg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockvol
Function cb_yq_stockvol(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_yq_stockvol = WindFunc("cb_yq_stockvol", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_yq_stockvol) <> vbString Then
        cb_yq_stockvol = cb_yq_stockvol / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockamnt
Function cb_yq_stockamnt(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  cb_yq_stockamnt = WindFunc("cb_yq_stockamnt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(cb_yq_stockamnt) <> vbString Then
        cb_yq_stockamnt = cb_yq_stockamnt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockchg
Function cb_yq_stockchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_yq_stockchg = WindFunc("cb_yq_stockchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockpctchg
Function cb_yq_stockpctchg(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_yq_stockpctchg = WindFunc("cb_yq_stockpctchg", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||aefb||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockturnover
Function cb_yq_stockturnover(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_yq_stockturnover = WindFunc("cb_yq_stockturnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_STOCKAVETURNOVER
Function cb_yq_STOCKAVETURNOVER(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_yq_STOCKAVETURNOVER = WindFunc("cb_yq_STOCKAVETURNOVER", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_yq_stockswing
Function cb_yq_stockswing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  cb_yq_stockswing = WindFunc("cb_yq_stockswing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_pq_stockavg
Function cb_pq_stockavg(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  cb_pq_stockavg = WindFunc("cb_pq_stockavg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),cb_pq_stockchg
Function cb_pq_stockchg(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  cb_pq_stockchg = WindFunc("cb_pq_stockchg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),cb_pq_stockpctchg
Function cb_pq_stockpctchg(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  cb_pq_stockpctchg = WindFunc("cb_pq_stockpctchg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||437||fffd||2bd|(|fffd||fffd||fffd||fffd|),CB_WARRANT_ISSUETYPE
Function CB_WARRANT_ISSUETYPE(WINDCODE_ As Variant) As Variant
  CB_WARRANT_ISSUETYPE = WindFunc("CB_WARRANT_ISSUETYPE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), Null, Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_Info_OutstandingBalance
Function CB_Info_OutstandingBalance(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Info_OutstandingBalance = WindFunc("CB_Info_OutstandingBalance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|5ea||fffd||fffd||3e1||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_Anal_DiluteRate
Function CB_Anal_DiluteRate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_DiluteRate = WindFunc("CB_Anal_DiluteRate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||368||fffd||fffd||3e1||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_Anal_LDiluteRate
Function CB_Anal_LDiluteRate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  CB_Anal_LDiluteRate = WindFunc("CB_Anal_LDiluteRate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),CB_Anal_Impliedvol
Function CB_Anal_Impliedvol(WINDCODE_ As Variant, DEALDATE_ As Variant, RF As Integer) As Variant
  CB_Anal_Impliedvol = WindFunc("CB_Anal_Impliedvol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"), GetValidDate(DEALDATE_), RF, Null, Null, Null)
End Function

'|fffd||fffd||fffd||5f4||fffd||fffd||fffd|,W_Info_Code
Function W_Info_Code(WINDCODE_ As Variant) As Variant
  W_Info_Code = WindFunc("W_INFO_CODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|228||5a4||fffd||fffd||fffd|,W_Info_Name
Function W_Info_Name(WINDCODE_ As Variant) As Variant
  W_Info_Name = WindFunc("W_INFO_NAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||274||fffd||fffd||fffd|,W_Info_UnderlyingCode
Function W_Info_UnderlyingCode(WINDCODE_ As Variant) As Variant
  W_Info_UnderlyingCode = WindFunc("W_INFO_UNDERLYINGCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||27c||fffd||fffd|,W_Info_UnderlyingName
Function W_Info_UnderlyingName(WINDCODE_ As Variant) As Variant
  W_Info_UnderlyingName = WindFunc("W_INFO_UNDERLYINGNAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|228||5a4||fffd||fffd||fffd||fffd|(|fffd||271||fffd|/|fffd||fffd||fffd||fffd|),W_Info_EquityCovered
Function W_Info_EquityCovered(WINDCODE_ As Variant) As Variant
  W_Info_EquityCovered = WindFunc("W_INFO_EQUITYCOVERED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|(|177||2bd|/|fffd||fffd||2bd|/|fffd||fffd||13d||fffd||fffd||2bd|),W_Info_EuroAmericanBermuda
Function W_Info_EuroAmericanBermuda(WINDCODE_ As Variant) As Variant
  W_Info_EuroAmericanBermuda = WindFunc("W_INFO_EUROAMERICANBERMUDA", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||2bd|(|fffd||3f9||fffd|/|fffd||3f9||fffd|),W_Info_CallPut
Function W_Info_CallPut(WINDCODE_ As Variant) As Variant
  W_Info_CallPut = WindFunc("W_INFO_CALLPUT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||6f8||fffd|,W_Info_StrikePrice
Function W_Info_StrikePrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Info_StrikePrice = WindFunc("W_INFO_STRIKEPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|,W_Info_StrikeRatio
Function W_Info_StrikeRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Info_StrikeRatio = WindFunc("W_INFO_STRIKERATIO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,W_Info_PTM
Function W_Info_PTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Select Case TYPE_
    Case 1
        W_Info_PTM = WindFunc("W_INFO_PTMDAY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    Case 2
        W_Info_PTM = WindFunc("W_INFO_PTMYEAR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
  End Select
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|,W_Info_StartDate
Function W_Info_StartDate(WINDCODE_ As Variant) As Variant
  W_Info_StartDate = WindFunc("W_INFO_STARTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd|,W_Info_EndDate
Function W_Info_EndDate(WINDCODE_ As Variant) As Variant
  W_Info_EndDate = WindFunc("W_INFO_ENDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,W_Info_Issuer
Function W_Info_Issuer(WINDCODE_ As Variant) As Variant
  W_Info_Issuer = WindFunc("W_INFO_ISSUER", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,W_Info_ListedDate
Function W_Info_ListedDate(WINDCODE_ As Variant) As Variant
  W_Info_ListedDate = WindFunc("W_INFO_LISTEDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||3dfd||2bd|,W_Info_SettlementMethod
Function W_Info_SettlementMethod(WINDCODE_ As Variant) As Variant
  W_Info_SettlementMethod = WindFunc("W_INFO_SETTLEMENTMETHOD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||639||fffd||fffd||6f8||fffd|,W_Info_RepurchasePrice
Function W_Info_RepurchasePrice(WINDCODE_ As Variant) As Variant
  W_Info_RepurchasePrice = WindFunc("W_INFO_REPURCHASEPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||2bc||fffd||fffd|,W_Info_ExercisingStart
Function W_Info_ExercisingStart(WINDCODE_ As Variant) As Variant
  W_Info_ExercisingStart = WindFunc("W_INFO_EXERCISINGSTART", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||228||fffd||fffd|,W_Info_ExercisingEnd
Function W_Info_ExercisingEnd(WINDCODE_ As Variant) As Variant
  W_Info_ExercisingEnd = WindFunc("W_INFO_EXERCISINGEND", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,W_Info_LastTradingDate
Function W_Info_LastTradingDate(WINDCODE_ As Variant) As Variant
  W_Info_LastTradingDate = WindFunc("W_INFO_LASTTRADINGDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|363||5b9||fffd||fffd||fffd||fffd||fffd||fffd|,W_Info_StopTradingDate
Function W_Info_StopTradingDate(WINDCODE_ As Variant) As Variant
  W_Info_StopTradingDate = WindFunc("W_INFO_STOPTRADINGDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,W_Unit_Latest
Function W_Unit_Latest(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_Unit_Latest = WindFunc("W_UNIT_CURRENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(W_Unit_Latest) <> vbString Then
        W_Unit_Latest = W_Unit_Latest / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,W_Unit_Activated
Function W_Unit_Activated(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_Unit_Activated = WindFunc("W_UNIT_ACTIVATED", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(W_Unit_Activated) <> vbString Then
        W_Unit_Activated = W_Unit_Activated / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||fffd||fffd||fffd||fffd|,W_Unit_ActivatorHold
Function W_Unit_ActivatorHold(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_Unit_ActivatorHold = WindFunc("W_UNIT_ACTIVATORHOLD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(W_Unit_ActivatorHold) <> vbString Then
        W_Unit_ActivatorHold = W_Unit_ActivatorHold / UnitVal_
    End If
End Function

'|fffd||6fc||fffd||fffd||fffd||228||fffd||fffd||fffd||fffd|,W_Unit_AccumulativeExercised
Function W_Unit_AccumulativeExercised(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_Unit_AccumulativeExercised = WindFunc("W_UNIT_ACCUMULATIVEEXERCISED", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(W_Unit_AccumulativeExercised) <> vbString Then
        W_Unit_AccumulativeExercised = W_Unit_AccumulativeExercised / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||33c||fffd|,W_DQ_Close
Function W_DQ_Close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_Close = WindFunc("s_dq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,W_DQ_Open
Function W_DQ_Open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_Open = WindFunc("s_dq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|,W_DQ_High
Function W_DQ_High(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_High = WindFunc("s_dq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|,W_DQ_Low
Function W_DQ_Low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_Low = WindFunc("s_dq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|1f0||fffd||fffd||fffd||33c||fffd|,W_DQ_PreClose
Function W_DQ_PreClose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_PreClose = WindFunc("s_dq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,W_DQ_AvgPrice
Function W_DQ_AvgPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_AvgPrice = WindFunc("s_dq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f5||fffd|,W_DQ_Change
Function W_DQ_Change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_Change = WindFunc("s_dq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|,W_DQ_PctChange
Function W_DQ_PctChange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_PctChange = WindFunc("s_dq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|,W_DQ_Volume
Function W_DQ_Volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_DQ_Volume = WindFunc("s_dq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(W_DQ_Volume) <> vbString Then
        W_DQ_Volume = W_DQ_Volume / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|,W_DQ_Amount
Function W_DQ_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_DQ_Amount = WindFunc("s_dq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(W_DQ_Amount) <> vbString Then
        W_DQ_Amount = W_DQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,W_DQ_Turn
Function W_DQ_Turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_DQ_Turn = WindFunc("s_dq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,W_PQ_Close
Function W_PQ_Close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_Close = WindFunc("s_pq_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|,W_PQ_Open
Function W_PQ_Open(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_Open = WindFunc("s_pq_open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,W_PQ_High
Function W_PQ_High(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_High = WindFunc("s_pq_high", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,W_PQ_Low
Function W_PQ_Low(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_Low = WindFunc("s_pq_low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,W_PQ_PreClose
Function W_PQ_PreClose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_PreClose = WindFunc("s_pq_preclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,W_PQ_AvgPrice
Function W_PQ_AvgPrice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_AvgPrice = WindFunc("s_pq_avgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,W_PQ_Change
Function W_PQ_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_Change = WindFunc("s_pq_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,W_PQ_PctChange
Function W_PQ_PctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_PctChange = WindFunc("s_pq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,W_PQ_Volume
Function W_PQ_Volume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_PQ_Volume = WindFunc("s_pq_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(W_PQ_Volume) <> vbString Then
        W_PQ_Volume = W_PQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,W_PQ_Amount
Function W_PQ_Amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_Amount = WindFunc("s_pq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,W_PQ_AvgVolume
Function W_PQ_AvgVolume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_AvgVolume = WindFunc("s_pq_avgvolume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,W_PQ_AvgAmount
Function W_PQ_AvgAmount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_AvgAmount = WindFunc("s_pq_avgamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4efb||fffd||fffd||fffd||fffd|,W_PQ_Turn
Function W_PQ_Turn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_Turn = WindFunc("s_pq_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,W_PQ_AvgTurn
Function W_PQ_AvgTurn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_AvgTurn = WindFunc("s_pq_avgturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4f7b||fffd||fffd||fffd||fffd||fffd||fffd|,W_PQ_TradeDays
Function W_PQ_TradeDays(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  W_PQ_TradeDays = WindFunc("s_pq_tradedays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fc||6f8||fffd|,W_Anal_TheoryValue
Function W_Anal_TheoryValue(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_TheoryValue = WindFunc("W_ANAL_THEORYVALUE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6bc||fffd||5b5|,W_Anal_IntrinctValue
Function W_Anal_IntrinctValue(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_IntrinctValue = WindFunc("W_ANAL_INTRINCTVALUE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2b1||fffd||fffd||fffd||5b5|,W_Anal_TimeValue
Function W_Anal_TimeValue(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_TimeValue = WindFunc("W_ANAL_TIMEVALUE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|,W_Anal_PremiumRatio
Function W_Anal_PremiumRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_PremiumRatio = WindFunc("W_ANAL_PREMIUMRATIO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||738||2f1||fffd||fffd||fffd|,W_Anal_LeverageRatio
Function W_Anal_LeverageRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_LeverageRatio = WindFunc("W_ANAL_LEVERAGERATIO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|2b5||fffd||2b8||738||2f1||fffd||fffd||fffd|,W_Anal_ActualLeverageRatio
Function W_Anal_ActualLeverageRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_ActualLeverageRatio = WindFunc("W_ANAL_ACTUALLEVERAGERATIO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|4ef||fffd||fffd||1bd||fffd||fffd||fffd|,W_Anal_BreakevenPoint
Function W_Anal_BreakevenPoint(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_BreakevenPoint = WindFunc("W_ANAL_BREAKEVENPOINT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||336||fffd|,W_Anal_PriceDegree
Function W_Anal_PriceDegree(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_PriceDegree = WindFunc("W_ANAL_PRICEDEGREE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'Delta,W_Anal_Delta
Function W_Anal_Delta(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_Delta = WindFunc("W_ANAL_DELTA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'Gamma,W_Anal_Gamma
Function W_Anal_Gamma(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_Gamma = WindFunc("W_ANAL_GAMMA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'Vega,W_Anal_Vega
Function W_Anal_Vega(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_Vega = WindFunc("W_ANAL_VEGA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'Theta,W_Anal_Theta
Function W_Anal_Theta(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_Theta = WindFunc("W_ANAL_THETA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'Rho,W_Anal_Rho
Function W_Anal_Rho(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_Rho = WindFunc("W_ANAL_RHO", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2b7||fffd||fffd||fffd||fffd||fffd||fffd|,W_Anal_UnderlyingHisVol
Function W_Anal_UnderlyingHisVol(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_UnderlyingHisVol = WindFunc("W_ANAL_UNDERLYINGHISVOL", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,W_Anal_UnderlyingImpliedVol
Function W_Anal_UnderlyingImpliedVol(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  W_Anal_UnderlyingImpliedVol = WindFunc("W_ANAL_UNDERLYINGIMPLIEDVOL", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||739||271||fffd|,W_Anal_UnderlyingTotalShare
Function W_Anal_UnderlyingTotalShare(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  W_Anal_UnderlyingTotalShare = WindFunc("W_ANAL_UNDERLYINGTOTALSHARE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(W_Anal_UnderlyingTotalShare) <> vbString Then
        W_Anal_UnderlyingTotalShare = W_Anal_UnderlyingTotalShare / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||33c||fffd|,I_DQ_Close
Function I_DQ_Close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_Close = WindFunc("s_dq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,I_DQ_Open
Function I_DQ_Open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_Open = WindFunc("s_dq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|,I_DQ_High
Function I_DQ_High(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_High = WindFunc("s_dq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|,I_DQ_Low
Function I_DQ_Low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_Low = WindFunc("s_dq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|1f0||fffd||fffd||fffd||33c||fffd|,I_DQ_PreClose
Function I_DQ_PreClose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_PreClose = WindFunc("s_dq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), 1, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,I_DQ_AvgPrice
Function I_DQ_AvgPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_AvgPrice = WindFunc("s_dq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f5||fffd|,I_DQ_Change
Function I_DQ_Change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_Change = WindFunc("s_dq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|,I_DQ_PctChange
Function I_DQ_PctChange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_PctChange = WindFunc("s_dq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|,I_DQ_Volume
Function I_DQ_Volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  I_DQ_Volume = WindFunc("s_dq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(I_DQ_Volume) <> vbString Then
        I_DQ_Volume = I_DQ_Volume / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|,I_DQ_Amount
Function I_DQ_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  I_DQ_Amount = WindFunc("s_dq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(I_DQ_Amount) <> vbString Then
        I_DQ_Amount = I_DQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,I_DQ_Turn
Function I_DQ_Turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  I_DQ_Turn = WindFunc("s_dq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,I_PQ_Close
Function I_PQ_Close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_Close = WindFunc("s_pq_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|,I_PQ_Open
Function I_PQ_Open(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_Open = WindFunc("s_pq_open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,I_PQ_High
Function I_PQ_High(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_High = WindFunc("s_pq_high", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,I_PQ_Low
Function I_PQ_Low(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_Low = WindFunc("s_pq_low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,I_PQ_PreClose
Function I_PQ_PreClose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_PreClose = WindFunc("s_pq_preclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,I_PQ_AvgPrice
Function I_PQ_AvgPrice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_AvgPrice = WindFunc("s_pq_avgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,I_PQ_Change
Function I_PQ_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_Change = WindFunc("s_pq_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,I_PQ_PctChange
Function I_PQ_PctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_PctChange = WindFunc("s_pq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,I_PQ_Volume
Function I_PQ_Volume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  I_PQ_Volume = WindFunc("s_pq_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(I_PQ_Volume) <> vbString Then
        I_PQ_Volume = I_PQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,I_PQ_Amount
Function I_PQ_Amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  I_PQ_Amount = WindFunc("s_pq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(I_PQ_Amount) <> vbString Then
        I_PQ_Amount = I_PQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,I_PQ_AvgVolume
Function I_PQ_AvgVolume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  I_PQ_AvgVolume = WindFunc("s_pq_avgvolume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(I_PQ_AvgVolume) <> vbString Then
        I_PQ_AvgVolume = I_PQ_AvgVolume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,I_PQ_AvgAmount
Function I_PQ_AvgAmount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  I_PQ_AvgAmount = WindFunc("s_pq_avgamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(I_PQ_AvgAmount) <> vbString Then
        I_PQ_AvgAmount = I_PQ_AvgAmount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4efb||fffd||fffd||fffd||fffd|,I_PQ_Turn
Function I_PQ_Turn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_Turn = WindFunc("s_pq_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,I_PQ_AvgTurn
Function I_PQ_AvgTurn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_AvgTurn = WindFunc("s_pq_avgturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4f7b||fffd||fffd||fffd||fffd||fffd||fffd|,I_PQ_TradeDays
Function I_PQ_TradeDays(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  I_PQ_TradeDays = WindFunc("s_pq_tradedays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

''|fffd||6f9||27a||fffd||fffd||fffd|

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Info_CompName(WINDCODE_ As Variant) As Variant
  HKS_Info_CompName = WindFunc("HKS_Info_CompName", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|4e2||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Info_CompNameEng(WINDCODE_ As Variant) As Variant
  HKS_Info_CompNameEng = WindFunc("HKS_Info_CompNameEng", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5|
Function HKS_Info_Industry_GICS(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  HKS_Info_Industry_GICS = WindFunc("HKS_Info_Industry_GICS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'GICS|fffd||fffd||4b5||fffd||fffd||fffd||fffd|
Function HKS_Info_Industry_GICSCode(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  HKS_Info_Industry_GICSCode = WindFunc("HKS_Info_Industry_GICSCode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|5e2||fffd||fffd||fffd||fffd||fffd||fffd||6b9||fffd||fffd||4bb||fffd||fffd||fffd||fffd|
Function HKS_Info_area(WINDCODE_ As Variant) As Variant
  HKS_Info_area = WindFunc("HKS_Info_area", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|5e2||fffd||fffd||fffd||fffd||fffd||3f8||fffd||fffd||5b7|
Function HKS_Info_address(WINDCODE_ As Variant) As Variant
  HKS_Info_address = WindFunc("HKS_Info_address", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Info_Founddate(WINDCODE_ As Variant) As Variant
  HKS_Info_Founddate = WindFunc("HKS_Info_Founddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|5e2||fffd||fffd||fffd||2b1||fffd|
Function HKS_Info_Capital(WINDCODE_ As Variant) As Variant
  HKS_Info_Capital = WindFunc("HKS_Info_Capital", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3ef|(|fffd||fffd||fffd||2f4||fffd||fffd||fffd|)
Function HKS_Info_Chairman(WINDCODE_ As Variant) As Variant
  HKS_Info_Chairman = WindFunc("HKS_Info_Chairman", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd|
Function HKS_Info_secy(WINDCODE_ As Variant) As Variant
  HKS_Info_secy = WindFunc("HKS_Info_secy", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||7ef0||fffd||fffd||fffd||fffd|
Function HKS_Info_Phone(WINDCODE_ As Variant) As Variant
  HKS_Info_Phone = WindFunc("HKS_Info_Phone", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Info_Fax(WINDCODE_ As Variant) As Variant
  HKS_Info_Fax = WindFunc("HKS_Info_Fax", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b5||fffd||5b7|
Function HKS_Info_Email(WINDCODE_ As Variant) As Variant
  HKS_Info_Email = WindFunc("HKS_Info_Email", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2fe||fffd||fffd||5b7|
Function HKS_Info_Website(WINDCODE_ As Variant) As Variant
  HKS_Info_Website = WindFunc("HKS_Info_Website", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b1||fffd||3bb||fffd||fffd|
Function HKS_Info_Cur(WINDCODE_ As Variant) As Variant
  HKS_Info_Cur = WindFunc("HKS_Info_Cur", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Info_fiscaldate(WINDCODE_ As Variant) As Variant
  HKS_Info_fiscaldate = WindFunc("HKS_Info_fiscaldate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||1bb||fffd||fffd||fffd|
Function HKS_Info_AUDITOR(WINDCODE_ As Variant) As Variant
  HKS_Info_AUDITOR = WindFunc("HKS_Info_AUDITOR", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||477||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd|
Function HKS_Share_Total(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_Total = WindFunc("HKS_Share_Total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_Total) <> vbString Then
        HKS_Share_Total = HKS_Share_Total / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||439||fffd|
Function HKS_Share_H(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_H = WindFunc("HKS_Share_H", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_H) <> vbString Then
        HKS_Share_H = HKS_Share_H / UnitVal_
    End If
End Function

'A|fffd||27a||3fc||fffd|
Function HKS_Share_TotalA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_TotalA = WindFunc("HKS_Share_TotalA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_TotalA) <> vbString Then
        HKS_Share_TotalA = HKS_Share_TotalA / UnitVal_
    End If
End Function

'|fffd||fffd||368|A|fffd||fffd|
Function HKS_Share_LiqA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_LiqA = WindFunc("HKS_Share_LiqA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_LiqA) <> vbString Then
        HKS_Share_LiqA = HKS_Share_LiqA / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|A|fffd||fffd|
Function HKS_Share_RestrictedA(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_RestrictedA = WindFunc("HKS_Share_RestrictedA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_RestrictedA) <> vbString Then
        HKS_Share_RestrictedA = HKS_Share_RestrictedA / UnitVal_
    End If
End Function

'B|fffd||27a||3fc||fffd|
Function HKS_Share_TotalB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_TotalB = WindFunc("HKS_Share_TotalB", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_TotalB) <> vbString Then
        HKS_Share_TotalB = HKS_Share_TotalB / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||439||fffd|
Function HKS_Share_Oversea(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_Oversea = WindFunc("HKS_Share_Oversea", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_Oversea) <> vbString Then
        HKS_Share_Oversea = HKS_Share_Oversea / UnitVal_
    End If
End Function

'A|fffd||fffd|/|fffd||477||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd|
Function HKS_Share_A_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_Share_A_Pct = WindFunc("HKS_Share_A_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'B|fffd||fffd|/|fffd||477||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd|
Function HKS_Share_B_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_Share_B_Pct = WindFunc("HKS_Share_B_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||6f9||fffd|/|fffd||477||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd|
Function HKS_Share_H_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_Share_H_Pct = WindFunc("HKS_Share_H_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|/|fffd||477||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd|
Function HKS_Share_oversea_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_Share_oversea_Pct = WindFunc("HKS_Share_oversea_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||239||fffd|
Function HKS_Share_Prefer(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Share_Prefer = WindFunc("HKS_Share_Prefer", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_Share_Prefer) <> vbString Then
        HKS_Share_Prefer = HKS_Share_Prefer / UnitVal_
    End If
End Function

'|fffd||276||fffd||fffd||fffd||fffd||fffd|
Function HKS_Holder_Name(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  HKS_Holder_Name = WindFunc("HKS_Holder_Name", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||5b9||fffd||fffd||fffd||fffd||fffd|
Function HKS_Holder_Quantity(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  HKS_Holder_Quantity = WindFunc("HKS_Holder_Quantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
    If VarType(HKS_Holder_Quantity) <> vbString Then
        HKS_Holder_Quantity = HKS_Holder_Quantity / UnitVal_
    End If
End Function

'|fffd||5b9||271||fffd||fffd||fffd|
Function HKS_Holder_Pct(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  HKS_Holder_Pct = WindFunc("HKS_Holder_Pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||5f4||fffd||fffd||fffd|
Function HKS_Info_Code(WINDCODE_ As Variant) As Variant
  HKS_Info_Code = WindFunc("HKS_Info_Code", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|5a4||22f||fffd||fffd||fffd|
Function HKS_Info_Name(WINDCODE_ As Variant) As Variant
  HKS_Info_Name = WindFunc("HKS_Info_Name", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'ISIN|fffd||fffd||fffd||fffd|
Function HKS_Info_ISINCode(WINDCODE_ As Variant) As Variant
  HKS_Info_ISINCode = WindFunc("HKS_Info_ISINCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||435||fffd|
Function HKS_Info_ListMarket(WINDCODE_ As Variant) As Variant
  HKS_Info_ListMarket = WindFunc("HKS_Info_ListMarket", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||5b5|
Function HKS_Info_ParValue(WINDCODE_ As Variant) As Variant
  HKS_Info_ParValue = WindFunc("HKS_Info_ParValue", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Info_VolUnit(WINDCODE_ As Variant) As Variant
  HKS_Info_VolUnit = WindFunc("HKS_Info_VolUnit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||5f1||fffd||fffd||fffd|
Function HKS_Info_TradeCur(WINDCODE_ As Variant) As Variant
  HKS_Info_TradeCur = WindFunc("HKS_Info_TradeCur", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||6f8||fffd|
Function HKS_IPO_Price(WINDCODE_ As Variant) As Variant
  HKS_IPO_Price = WindFunc("HKS_IPO_Price", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd|
Function HKS_IPO_Amount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_IPO_Amount = WindFunc("HKS_IPO_Amount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
    If VarType(HKS_IPO_Amount) <> vbString Then
        HKS_IPO_Amount = HKS_IPO_Amount / UnitVal_
    End If
End Function

'|fffd||439||279||fffd||fffd||fffd||fffd||fffd|
Function HKS_IPO_Announcedate(WINDCODE_ As Variant) As Variant
  HKS_IPO_Announcedate = WindFunc("HKS_IPO_Announcedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_IPO_ListedDate(WINDCODE_ As Variant) As Variant
  HKS_IPO_ListedDate = WindFunc("HKS_IPO_ListedDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||5f7||fffd||13c||fffd||fffd||fffd||736||fffd|
Function HKS_IPO_Collection(WINDCODE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_IPO_Collection = WindFunc("HKS_IPO_Collection", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_), Null, Null, Null, Null)
    If VarType(HKS_IPO_Collection) <> vbString Then
        HKS_IPO_Collection = HKS_IPO_Collection / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||13c||fffd||2be||fffd||fffd||fffd|
Function HKS_IPO_NetCollection(WINDCODE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_IPO_NetCollection = WindFunc("HKS_IPO_NetCollection", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_), Null, Null, Null, Null)
    If VarType(HKS_IPO_NetCollection) <> vbString Then
        HKS_IPO_NetCollection = HKS_IPO_NetCollection / UnitVal_
    End If
End Function

'|1f0||fffd||fffd||fffd||33c||fffd|
Function HKS_DQ_PreClose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_DQ_PreClose = WindFunc("HKS_DQ_PreClose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|
Function HKS_DQ_Open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_DQ_Open = WindFunc("HKS_DQ_Open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|
Function HKS_DQ_High(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_DQ_High = WindFunc("HKS_DQ_High", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|
Function HKS_DQ_Low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_DQ_Low = WindFunc("HKS_DQ_Low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|
Function HKS_DQ_Close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_DQ_Close = WindFunc("HKS_DQ_Close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|
Function HKS_DQ_AvgPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_DQ_AvgPrice = WindFunc("HKS_DQ_AvgPrice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||1f5||fffd|
Function HKS_DQ_Change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_DQ_Change = WindFunc("HKS_DQ_Change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|
Function HKS_DQ_PctChange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_DQ_PctChange = WindFunc("HKS_DQ_PctChange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|
Function HKS_DQ_Volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_DQ_Volume = WindFunc("HKS_DQ_Volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(HKS_DQ_Volume) <> vbString Then
        HKS_DQ_Volume = HKS_DQ_Volume / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|
Function HKS_DQ_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_DQ_Amount = WindFunc("HKS_DQ_Amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
    If VarType(HKS_DQ_Amount) <> vbString Then
        HKS_DQ_Amount = HKS_DQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_DQ_Turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_DQ_Turn = WindFunc("HKS_DQ_Turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|
Function HKS_PQ_PreClose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_PQ_PreClose = WindFunc("HKS_PQ_PreClose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|
Function HKS_PQ_Open(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_PQ_Open = WindFunc("HKS_PQ_Open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|
Function HKS_PQ_High(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_PQ_High = WindFunc("HKS_PQ_High", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|
Function HKS_PQ_Low(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_PQ_Low = WindFunc("HKS_PQ_Low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|
Function HKS_PQ_Close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_PQ_Close = WindFunc("HKS_PQ_Close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|
Function HKS_PQ_AvgPrice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_PQ_AvgPrice = WindFunc("HKS_PQ_AvgPrice", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|
Function HKS_PQ_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_PQ_Change = WindFunc("HKS_PQ_Change", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  HKS_PQ_PctChange = WindFunc("HKS_PQ_PctChange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RelPctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As String) As Variant
  HKS_PQ_RelPctChange = WindFunc("HKS_PQ_RelPctChange", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|
Function HKS_PQ_Volume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_PQ_Volume = WindFunc("HKS_PQ_Volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(HKS_PQ_Volume) <> vbString Then
        HKS_PQ_Volume = HKS_PQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|
Function HKS_PQ_Amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_PQ_Amount = WindFunc("HKS_PQ_Amount", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), GetValidCurType(CURTYPE_), Null, Null)
    If VarType(HKS_PQ_Amount) <> vbString Then
        HKS_PQ_Amount = HKS_PQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_MTD(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_MTD = WindFunc("HKS_PQ_PCTCHANGE_MTD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_MTD(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_MTD = WindFunc("HKS_PQ_RELPCTCHANGE_MTD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_QTD(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_QTD = WindFunc("HKS_PQ_PCTCHANGE_QTD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELRELPCTCHANGE_MTD(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELRELPCTCHANGE_MTD = WindFunc("HKS_PQ_RELRELPCTCHANGE_MTD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_YTD(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_YTD = WindFunc("HKS_PQ_PCTCHANGE_YTD", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_YTD(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_YTD = WindFunc("HKS_PQ_RELPCTCHANGE_YTD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd|5|fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_5D(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_5D = WindFunc("HKS_PQ_PCTCHANGE_5D", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd|5|fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_5D(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_5D = WindFunc("HKS_PQ_RELPCTCHANGE_5D", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd|10|fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_10D(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_10D = WindFunc("HKS_PQ_PCTCHANGE_10D", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd|10|fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_10D(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_10D = WindFunc("HKS_PQ_RELPCTCHANGE_10D", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd|1|fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_1M(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_1M = WindFunc("HKS_PQ_PCTCHANGE_1M", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_1M(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_1M = WindFunc("HKS_PQ_RELPCTCHANGE_1M", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd|3|fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_3M(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_3M = WindFunc("HKS_PQ_PCTCHANGE_3M", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_3M(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_3M = WindFunc("HKS_PQ_RELPCTCHANGE_3M", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd|6|fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_6M(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_6M = WindFunc("HKS_PQ_PCTCHANGE_6M", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd|6|fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_6M(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_6M = WindFunc("HKS_PQ_RELPCTCHANGE_6M", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd|1|fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_PCTCHANGE_1Y(WINDCODE_ As Variant) As Variant
  HKS_PQ_PCTCHANGE_1Y = WindFunc("HKS_PQ_PCTCHANGE_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|
Function HKS_PQ_RELPCTCHANGE_1Y(WINDCODE_ As Variant, TYPE_ As String) As Variant
  HKS_PQ_RELPCTCHANGE_1Y = WindFunc("HKS_PQ_RELPCTCHANGE_1Y", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), TYPE_, Null, Null, Null, Null)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Risk_AvgReturn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE1_ As Integer = 2, Optional TYPE2_ As Integer = 1) As Variant
  HKS_Risk_AvgReturn = WindFunc("HKS_Risk_AvgReturn", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE1_, TYPE2_, Null)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|)
Function HKS_Risk_AvgReturn_yearly(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE1_ As Integer = 1) As Variant
  HKS_Risk_AvgReturn_yearly = WindFunc("HKS_Risk_AvgReturn_yearly", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE1_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Risk_Stdev(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE1_ As Integer = 2, Optional TYPE2_ As Integer = 1) As Variant
  HKS_Risk_Stdev = WindFunc("HKS_Risk_Stdev", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE1_, TYPE2_, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|)
Function HKS_Risk_Stdev_yearly(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE1_ As Integer = 2, Optional TYPE2_ As Integer = 1) As Variant
  HKS_Risk_Stdev_yearly = WindFunc("HKS_Risk_Stdev_yearly", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE1_, TYPE2_, Null)
End Function

'Beta
Function HKS_Risk_Beta(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE1_ As Integer = 2, Optional TYPE2_ As Integer = 1, Optional TYPE3_ As String = "000001.SH") As Variant
  HKS_Risk_Beta = WindFunc("HKS_Risk_Beta", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE1_, TYPE2_, TYPE3_)
End Function

'|fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|
Function HKS_Stm_BS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Stm_BS = WindFunc("HKS_Stm_BS", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null)
    If VarType(HKS_Stm_BS) <> vbString Then
        HKS_Stm_BS = HKS_Stm_BS / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd|
Function HKS_Stm_IS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Stm_IS = WindFunc("HKS_Stm_IS", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null)
    If VarType(HKS_Stm_IS) <> vbString Then
        HKS_Stm_IS = HKS_Stm_IS / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_QStm_IS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_QStm_IS = WindFunc("HKS_QStm_IS", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null)
    If VarType(HKS_QStm_IS) <> vbString Then
        HKS_QStm_IS = HKS_QStm_IS / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_QStm_CS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_QStm_CS = WindFunc("HKS_QStm_CS", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null)
    If VarType(HKS_QStm_CS) <> vbString Then
        HKS_QStm_CS = HKS_QStm_CS / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_Stm_CS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_Stm_CS = WindFunc("HKS_Stm_CS", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null)
    If VarType(HKS_Stm_CS) <> vbString Then
        HKS_Stm_CS = HKS_Stm_CS / UnitVal_
    End If
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||fffd||fffd||fffd|
Function HKS_FA_EPS_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_EPS_basic = WindFunc("HKS_FA_EPS_basic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|3e1||fffd||fffd|
Function HKS_FA_EPS_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_EPS_diluted = WindFunc("HKS_FA_EPS_diluted", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS(TTM)
Function HKS_FA_EPS_TTM(WINDCODE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_EPS_TTM = WindFunc("HKS_FA_EPS_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)
Function HKS_FA_BPS(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_BPS = WindFunc("HKS_FA_BPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|BPS(|fffd||fffd||fffd||b9||fffd||fffd||fffd|)
Function HKS_FA_BPS_new(WINDCODE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_BPS_new = WindFunc("HKS_FA_BPS_new", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_), Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||4ea||fffd||5bd||fffd||fffd||fffd||fffd||fffd|
Function HKS_FA_OCFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_OCFPS = WindFunc("HKS_FA_OCFPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||4ea||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM)
Function HKS_FA_OCFPS_TTM(WINDCODE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_OCFPS_TTM = WindFunc("HKS_FA_OCFPS_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_FA_CFPS(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_CFPS = WindFunc("HKS_FA_CFPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM)
Function HKS_FA_CFPS_TTM(WINDCODE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_CFPS_TTM = WindFunc("HKS_FA_CFPS_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_), Null, Null, Null, Null)
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|
Function HKS_FA_ORPS(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_ORPS = WindFunc("HKS_FA_ORPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|ff||fffd||fffd||fffd||fffd||3e2|
Function HKS_FA_DPS(WINDCODE_ As Variant, Optional RPTYEAR_ As Integer, Optional CURTYPE_ As Variant) As Variant
  HKS_FA_DPS = WindFunc("HKS_FA_DPS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetYear(RPTYEAR_), GetValidCurType(CURTYPE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|
Function HKS_FA_GrossProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_GrossProfitMargin = WindFunc("HKS_FA_GrossProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|(TTM)
Function HKS_FA_GrossProfitMargin_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_GrossProfitMargin_TTM = WindFunc("HKS_FA_GrossProfitMargin_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|
Function HKS_FA_NetProfitMargin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_NetProfitMargin = WindFunc("HKS_FA_NetProfitMargin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|(TTM)
Function HKS_FA_NetProfitMargin_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_NetProfitMargin_TTM = WindFunc("HKS_FA_NetProfitMargin_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROE)
Function HKS_FA_ROE(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_ROE = WindFunc("HKS_FA_ROE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROE,Yearly)
Function HKS_FA_ROE_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_ROE_yearly = WindFunc("HKS_FA_ROE_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROE,TTM)
Function HKS_FA_ROE_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_ROE_TTM = WindFunc("HKS_FA_ROE_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROA)
Function HKS_FA_ROA(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_ROA = WindFunc("HKS_FA_ROA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROA,Yearly)
Function HKS_FA_ROA_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_ROA_yearly = WindFunc("HKS_FA_ROA_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(ROA,TTM)
Function HKS_FA_ROA_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_ROA_TTM = WindFunc("HKS_FA_ROA_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|(ROIC)
Function HKS_FA_ROIC(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_ROIC = WindFunc("HKS_FA_ROIC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|(ROIC,Yearly)
Function HKS_FA_ROIC_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_ROIC_yearly = WindFunc("HKS_FA_ROIC_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|(ROIC,TTM)
Function HKS_FA_ROIC_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_ROIC_TTM = WindFunc("HKS_FA_ROIC_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|
Function HKS_FA_OPtoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_OPtoEBT = WindFunc("HKS_FA_OPtoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM)
Function HKS_FA_OPtoEBT_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_OPtoEBT_TTM = WindFunc("HKS_FA_OPtoEBT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|2f0||fffd||e8ef||fffd||fffd||fffd||fffd||fffd||736||fffd|
Function HKS_FA_TaxtoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_TaxtoEBT = WindFunc("HKS_FA_TaxtoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|2f0||fffd||e8ef||fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM)
Function HKS_FA_TaxtoEBT_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_TaxtoEBT_TTM = WindFunc("HKS_FA_TaxtoEBT_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||4ea||4b5||fffd||fffd||fffd||fffd|
Function HKS_FA_OCFtoSales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_OCFtoSales = WindFunc("HKS_FA_OCFtoSales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||4ea||4b5||fffd||fffd||fffd||fffd|(TTM)
Function HKS_FA_OCFtoSales_TTM(WINDCODE_ As Variant) As Variant
  HKS_FA_OCFtoSales_TTM = WindFunc("HKS_FA_OCFtoSales_TTM", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|
Function HKS_FA_DebtToAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_DebtToAssets = WindFunc("HKS_FA_DebtToAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|228||fffd||fffd||fffd||fffd||fffd|
Function HKS_FA_AssetsToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_AssetsToEquity = WindFunc("HKS_FA_AssetsToEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|
Function HKS_FA_DebtToEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_DebtToEquity = WindFunc("HKS_FA_DebtToEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|
Function HKS_FA_CAtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_CAtoAssets = WindFunc("HKS_FA_CAtoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|
Function HKS_FA_NCAtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_NCAtoAssets = WindFunc("HKS_FA_NCAtoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|
Function HKS_FA_CurrentDebttoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_CurrentDebttoDebt = WindFunc("HKS_FA_CurrentDebttoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|
Function HKS_FA_LongDebtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_LongDebtoDebt = WindFunc("HKS_FA_LongDebtoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||68ef||376||fffd||fffd||fffd||2b1||fffd|
Function HKS_FA_EquitytoTotalCapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_EquitytoTotalCapital = WindFunc("HKS_FA_EquitytoTotalCapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Function HKS_FA_Current(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_Current = WindFunc("HKS_FA_Current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||676||fffd||fffd||fffd||fffd||fffd|
Function HKS_FA_Quick(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_Quick = WindFunc("HKS_FA_Quick", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|
Function HKS_FA_cashtoLiqDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_cashtoLiqDebt = WindFunc("HKS_FA_cashtoLiqDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|
Function HKS_FA_OPtoliqdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_OPtoliqdebt = WindFunc("HKS_FA_OPtoliqdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||fffd||fffd||fffd||fffd||56e|
Function HKS_FA_OCFtoLiqDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_OCFtoLiqDebt = WindFunc("HKS_FA_OCFtoLiqDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||68ef||fffd||fffd||56e||fffd||3fc||fffd|
Function HKS_FA_EquitytoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_EquitytoDebt = WindFunc("HKS_FA_EquitytoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||e8ef||fffd||fffd||56e||fffd||3fc||fffd|
Function HKS_FA_OCFtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_OCFtoDebt = WindFunc("HKS_FA_OCFtoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||e3bf8||fffd||56e||fffd||3fc||fffd|
Function HKS_FA_OPtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_OPtoDebt = WindFunc("HKS_FA_OPtoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5ea||fffd||fffd|
Function HKS_FA_InvTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_InvTurn = WindFunc("HKS_FA_InvTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|
Function HKS_FA_CATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_CATurn = WindFunc("HKS_FA_CATurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|
Function HKS_FA_FATurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_FATurn = WindFunc("HKS_FA_FATurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|
Function HKS_FA_AssetsTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  HKS_FA_AssetsTurn = WindFunc("HKS_FA_AssetsTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_Sales_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_Sales_1Y = WindFunc("HKS_growth_Sales_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_Sales_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_Sales_3Y = WindFunc("HKS_growth_Sales_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|eb||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_GP_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_GP_1Y = WindFunc("HKS_growth_GP_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|eb||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_GP_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_GP_3Y = WindFunc("HKS_growth_GP_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_OP_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_OP_1Y = WindFunc("HKS_growth_OP_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_OP_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_OP_3Y = WindFunc("HKS_growth_OP_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_EBT_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_EBT_1Y = WindFunc("HKS_growth_EBT_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_EBT_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_EBT_3Y = WindFunc("HKS_growth_EBT_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_NP_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_NP_1Y = WindFunc("HKS_growth_NP_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_NP_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_NP_3Y = WindFunc("HKS_growth_NP_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||73c||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_Asset_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_Asset_1Y = WindFunc("HKS_growth_Asset_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||73c||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_Asset_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_Asset_3Y = WindFunc("HKS_growth_Asset_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||276||fffd||228||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_TOTALEquity_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_TOTALEquity_1Y = WindFunc("HKS_growth_TOTALEquity_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||276||fffd||228||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_TOTALEquity_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_TOTALEquity_3Y = WindFunc("HKS_growth_TOTALEquity_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_Equity_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_Equity_1Y = WindFunc("HKS_growth_Equity_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_Equity_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_Equity_3Y = WindFunc("HKS_growth_Equity_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||3fc||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_DEBT_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_DEBT_1Y = WindFunc("HKS_growth_DEBT_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||3fc||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_DEBT_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_DEBT_3Y = WindFunc("HKS_growth_DEBT_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_EPS_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_EPS_1Y = WindFunc("HKS_growth_EPS_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_EPS_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_EPS_3Y = WindFunc("HKS_growth_EPS_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_BPS_1Y(WINDCODE_ As Variant) As Variant
  HKS_growth_BPS_1Y = WindFunc("HKS_growth_BPS_1Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Function HKS_growth_BPS_3Y(WINDCODE_ As Variant) As Variant
  HKS_growth_BPS_3Y = WindFunc("HKS_growth_BPS_3Y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4ef||fffd||fffd|(PE)
Function HKS_val_PE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional RPTYEAR_ As Integer) As Variant
  HKS_val_PE = WindFunc("HKS_val_PE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetYear(RPTYEAR_), Null, Null, Null)
End Function

'|fffd||fffd||4ef||fffd||fffd|(TTM)
Function HKS_val_PE_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PE_TTM = WindFunc("HKS_val_PE_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate_New(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ef||fffd||fffd|(LYR)
Function HKS_val_PE_LYR(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PE_LYR = WindFunc("HKS_val_PE_LYR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate_New(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||43e||fffd||fffd||fffd|(PB)
Function HKS_val_PB(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional RPTYEAR_ As Integer) As Variant
  HKS_val_PB = WindFunc("HKS_val_PB", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetYear(RPTYEAR_), Null, Null, Null)
End Function

'|fffd||43e||fffd||fffd||fffd|(PB, MRQ)
Function HKS_val_PB_MRQ(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PB_MRQ = WindFunc("HKS_val_PB_MRQ", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate_New(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||43e||fffd||fffd||fffd|(PB, LYR)
Function HKS_val_PB_LYR(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PB_LYR = WindFunc("HKS_val_PB_LYR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate_New(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PS)
Function HKS_val_PS(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional RPTYEAR_ As Integer) As Variant
  HKS_val_PS = WindFunc("HKS_val_PS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetYear(RPTYEAR_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PS, TTM)
Function HKS_val_PS_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PS_TTM = WindFunc("HKS_val_PS_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PS, LYR)
Function HKS_val_PS_LYR(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PS_LYR = WindFunc("HKS_val_PS_LYR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF)
Function HKS_val_PCF(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional RPTYEAR_ As Integer) As Variant
  HKS_val_PCF = WindFunc("HKS_val_PCF", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetYear(RPTYEAR_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF, TTM)
Function HKS_val_PCF_TTM(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PCF_TTM = WindFunc("HKS_val_PCF_TTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF, LYR)
Function HKS_val_PCF_LYR(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  HKS_val_PCF_LYR = WindFunc("HKS_val_PCF_LYR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd|
Function HKS_val_Dividendyield(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional RPTYEAR_ As Integer) As Variant
  HKS_val_Dividendyield = WindFunc("HKS_val_Dividendyield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetYear(RPTYEAR_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5b5|
Function HKs_val_mv(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKs_val_mv = WindFunc("HKs_val_mv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
    If VarType(HKs_val_mv) <> vbString Then
        HKs_val_mv = HKs_val_mv / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||fffd||5b5|
Function HKS_DQ_MV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_DQ_MV = WindFunc("HKS_DQ_MV", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
    If VarType(HKS_DQ_MV) <> vbString Then
        HKS_DQ_MV = HKS_DQ_MV / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||228||fffd||fffd||5b5|
Function HKS_val_EV(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_val_EV = WindFunc("HKS_val_EV", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
    If VarType(HKS_val_EV) <> vbString Then
        HKS_val_EV = HKS_val_EV / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||73c||fffd||5b5|
Function HKS_val_EV1(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_val_EV1 = WindFunc("HKS_val_EV1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
    If VarType(HKS_val_EV1) <> vbString Then
        HKS_val_EV1 = HKS_val_EV1 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||73c||fffd||5b5|(|fffd||7b3||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd|)
Function HKS_val_EV2(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  HKS_val_EV2 = WindFunc("HKS_val_EV2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_), Null, Null, Null)
    If VarType(HKS_val_EV2) <> vbString Then
        HKS_val_EV2 = HKS_val_EV2 / UnitVal_
    End If
End Function

''|fffd||fffd||fffd||fffd|''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'|fffd||fffd||fffd||5f4||fffd||fffd||fffd|,F_Info_Code
Function F_Info_Code(WINDCODE_ As Variant) As Variant
  F_Info_Code = WindFunc("f_info_code", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'Wind|fffd||fffd||fffd||fffd|,F_Info_WindCode
Function F_Info_WindCode(WINDCODE_ As Variant) As Variant
  F_Info_WindCode = WindFunc("f_info_windcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_Name
Function F_Info_Name(WINDCODE_ As Variant) As Variant
  F_Info_Name = WindFunc("f_info_name", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||22b||fffd||fffd|,F_Info_FullName
Function F_Info_FullName(WINDCODE_ As Variant) As Variant
  F_Info_FullName = WindFunc("f_info_fullname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_Type
Function F_Info_Type(WINDCODE_ As Variant) As Variant
  F_Info_Type = WindFunc("f_info_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|376||fffd||2b7||fffd||fffd|,F_Info_InvestStyle
Function F_Info_InvestStyle(WINDCODE_ As Variant) As Variant
  F_Info_InvestStyle = WindFunc("f_info_investstyle", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_ManagementFeeRatio
Function F_Info_ManagementFeeRatio(WINDCODE_ As Variant) As Variant
  F_Info_ManagementFeeRatio = WindFunc("f_info_managementfeeratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||439||737||fffd||fffd||fffd|,F_Info_CustodianFeeRatio
Function F_Info_CustodianFeeRatio(WINDCODE_ As Variant) As Variant
  F_Info_CustodianFeeRatio = WindFunc("f_info_custodianfeeratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|,F_Info_PurchaseFeeRatio
Function F_Info_PurchaseFeeRatio(WINDCODE_ As Variant) As Variant
  F_Info_PurchaseFeeRatio = WindFunc("f_info_purchasefeeratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||637||fffd||fffd||fffd|,F_Info_RedemptionFeeRatio
Function F_Info_RedemptionFeeRatio(WINDCODE_ As Variant) As Variant
  F_Info_RedemptionFeeRatio = WindFunc("F_Info_RedemptionFeeRatio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_FundManager
Function F_Info_FundManager(WINDCODE_ As Variant) As Variant
  F_Info_FundManager = WindFunc("f_info_fundmanager", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_MgrComp
Function F_Info_MgrComp(WINDCODE_ As Variant) As Variant
  F_Info_MgrComp = WindFunc("f_info_mgrcomp", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||439||fffd||fffd||fffd|,F_Info_CustodianBank
Function F_Info_CustodianBank(WINDCODE_ As Variant) As Variant
  F_Info_CustodianBank = WindFunc("f_info_custodianbank", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_SetupDate
Function F_Info_SetupDate(WINDCODE_ As Variant) As Variant
  F_Info_SetupDate = WindFunc("f_info_setupdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_listedDate
Function F_Info_listedDate(WINDCODE_ As Variant) As Variant
  F_Info_listedDate = WindFunc("f_issue_cef_listdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||2bc||fffd||fffd|,F_Info_purchaseDate
Function F_Info_purchaseDate(WINDCODE_ As Variant) As Variant
  F_Info_purchaseDate = WindFunc("f_pchredm_pchstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_MaturityDate
Function F_Info_MaturityDate(WINDCODE_ As Variant) As Variant
  F_Info_MaturityDate = WindFunc("f_info_maturitydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,F_DQ_Close
Function F_DQ_Close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_DQ_Close = WindFunc("f_dq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|,F_DQ_Open
Function F_DQ_Open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_DQ_Open = WindFunc("f_dq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|,F_DQ_High
Function F_DQ_High(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_DQ_High = WindFunc("f_dq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|,F_DQ_Low
Function F_DQ_Low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_DQ_Low = WindFunc("f_dq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0||fffd||fffd||fffd||33c||fffd|,F_DQ_PreClose
Function F_DQ_PreClose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_DQ_PreClose = WindFunc("f_dq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,F_DQ_AvgPrice
Function F_DQ_AvgPrice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_DQ_AvgPrice = WindFunc("f_dq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f5||fffd|,F_DQ_Change
Function F_DQ_Change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_DQ_Change = WindFunc("f_dq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|,F_DQ_PctChange
Function F_DQ_PctChange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_DQ_PctChange = WindFunc("f_dq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|,F_DQ_Volume
Function F_DQ_Volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_DQ_Volume = WindFunc("f_dq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(F_DQ_Volume) <> vbString Then
        F_DQ_Volume = F_DQ_Volume / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|,F_DQ_Amount
Function F_DQ_Amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_DQ_Amount = WindFunc("f_dq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(F_DQ_Amount) <> vbString Then
        F_DQ_Amount = F_DQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,F_DQ_Turn
Function F_DQ_Turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_DQ_Turn = WindFunc("f_dq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||2ee|,F_DQ_Discount
Function F_DQ_Discount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_DQ_Discount = WindFunc("f_dq_discount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||2ee||fffd||fffd|,F_DQ_DiscountRatio
Function F_DQ_DiscountRatio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_DQ_DiscountRatio = WindFunc("f_dq_discountratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,F_PQ_Close
Function F_PQ_Close(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PQ_Close = WindFunc("f_pq_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|,F_PQ_Open
Function F_PQ_Open(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PQ_Open = WindFunc("f_pq_open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,F_PQ_High
Function F_PQ_High(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PQ_High = WindFunc("f_pq_high", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,F_PQ_Low
Function F_PQ_Low(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PQ_Low = WindFunc("f_pq_low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,F_PQ_PreClose
Function F_PQ_PreClose(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PQ_PreClose = WindFunc("f_pq_preclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), TYPE_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,F_PQ_AvgPrice
Function F_PQ_AvgPrice(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_PQ_AvgPrice = WindFunc("f_pq_avgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,F_PQ_Change
Function F_PQ_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_PQ_Change = WindFunc("f_pq_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,F_PQ_PctChange
Function F_PQ_PctChange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_PQ_PctChange = WindFunc("f_pq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,F_PQ_Volume
Function F_PQ_Volume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PQ_Volume = WindFunc("f_pq_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(F_PQ_Volume) <> vbString Then
        F_PQ_Volume = F_PQ_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,F_PQ_Amount
Function F_PQ_Amount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PQ_Amount = WindFunc("f_pq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(F_PQ_Amount) <> vbString Then
        F_PQ_Amount = F_PQ_Amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,F_PQ_AvgVolume  '''''''''|3b4||fffd||7b8||fffd|
Function F_PQ_AvgVolume(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PQ_AvgVolume = WindFunc("|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(F_PQ_AvgVolume) <> vbString Then
        F_PQ_AvgVolume = F_PQ_AvgVolume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,F_PQ_AvgAmount  ''''''''''|3b4||fffd||7b8||fffd|
Function F_PQ_AvgAmount(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_PQ_AvgAmount = WindFunc("|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4efb||fffd||fffd||fffd||fffd|,F_PQ_Turn
Function F_PQ_Turn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_PQ_Turn = WindFunc("f_pq_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_PQ_AvgTurn
Function F_PQ_AvgTurn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_PQ_AvgTurn = WindFunc("f_pq_avgturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4f7b||fffd||fffd||fffd||fffd||fffd||fffd|,F_PQ_TradeDays
Function F_PQ_TradeDays(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_PQ_TradeDays = WindFunc("f_pq_tradedays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||3bb||fffd||fffd||5b5|,F_NAV_Unit
Function F_NAV_Unit(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_NAV_Unit = WindFunc("f_nav_unit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5|,F_NAV_Adjusted
Function F_NAV_Adjusted(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_NAV_Adjusted = WindFunc("f_nav_adjusted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||6fc||1b5||fffd||3bb||fffd||fffd||5b5|,F_NAV_Accumulated
Function F_NAV_Accumulated(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_NAV_Accumulated = WindFunc("f_nav_accumulated", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,F_NAV_AdjustedReturn
Function F_NAV_AdjustedReturn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_NAV_AdjustedReturn = WindFunc("f_nav_adjustedreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||6fc||1b5||fffd||3bb||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,F_NAV_AccumulatedReturn
Function F_NAV_AccumulatedReturn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_NAV_AccumulatedReturn = WindFunc("f_nav_accumulatedreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||776||fffd|,F_Unit_Total
Function F_Unit_Total(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_Total = WindFunc("f_unit_total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_Total) <> vbString Then
        F_Unit_Total = F_Unit_Total / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||ae7a||fffd||776||fffd|,F_Unit_Purchase
Function F_Unit_Purchase(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_Purchase = WindFunc("f_unit_purchase", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_Purchase) <> vbString Then
        F_Unit_Purchase = F_Unit_Purchase / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||637||776||fffd|,F_Unit_Redemption
Function F_Unit_Redemption(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_Redemption = WindFunc("f_unit_redemption", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_Redemption) <> vbString Then
        F_Unit_Redemption = F_Unit_Redemption / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||63e||fffd||fffd||fffd|,F_Unit_NetPurchase
Function F_Unit_NetPurchase(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
 F_Unit_NetPurchase = WindFunc("f_unit_netpurchase", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_NetPurchase) <> vbString Then
        F_Unit_NetPurchase = F_Unit_NetPurchase / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||ae7a||fffd||776||fffd|,F_Unit_Purchase_QTY
Function F_Unit_Purchase_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_Purchase_QTY = WindFunc("F_Unit_Purchase_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_Purchase_QTY) <> vbString Then
        F_Unit_Purchase_QTY = F_Unit_Purchase_QTY / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||637||776||fffd|,F_Unit_Redemption_QTY
Function F_Unit_Redemption_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_Redemption_QTY = WindFunc("F_Unit_Redemption_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_Redemption_QTY) <> vbString Then
        F_Unit_Redemption_QTY = F_Unit_Redemption_QTY / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||63e||fffd||fffd||fffd|,F_Unit_NetPurchase_QTY
Function F_Unit_NetPurchase_QTY(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    F_Unit_NetPurchase_QTY = WindFunc("F_Unit_NetPurchase_QTY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_NetPurchase_QTY) <> vbString Then
        F_Unit_NetPurchase_QTY = F_Unit_NetPurchase_QTY / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,F_PRT_TotalAsset
Function F_PRT_TotalAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_TotalAsset = WindFunc("f_prt_totalasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_TotalAsset) <> vbString Then
        F_PRT_TotalAsset = F_PRT_TotalAsset / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,F_PRT_NetAsset
Function F_PRT_NetAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_NetAsset = WindFunc("f_prt_netasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_NetAsset) <> vbString Then
        F_PRT_NetAsset = F_PRT_NetAsset / UnitVal_
    End If
End Function

'|fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_StockValue
Function F_PRT_StockValue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_StockValue = WindFunc("f_prt_stockvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_StockValue) <> vbString Then
        F_PRT_StockValue = F_PRT_StockValue / UnitVal_
    End If
End Function

'|56e||22f||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_BondValue
Function F_PRT_BondValue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_BondValue = WindFunc("f_prt_bondvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_BondValue) <> vbString Then
        F_PRT_BondValue = F_PRT_BondValue / UnitVal_
    End If
End Function

'|228||5a4||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_WarrantValue
Function F_PRT_WarrantValue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_WarrantValue = WindFunc("f_prt_warrantvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_WarrantValue) <> vbString Then
        F_PRT_WarrantValue = F_PRT_WarrantValue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||434||fffd||fffd|,F_PRT_Cash
Function F_PRT_Cash(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_Cash = WindFunc("f_prt_cash", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_Cash) <> vbString Then
        F_PRT_Cash = F_PRT_Cash / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,F_PRT_Other
Function F_PRT_Other(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_Other = WindFunc("f_prt_other", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_Other) <> vbString Then
        F_PRT_Other = F_PRT_Other / UnitVal_
    End If
End Function

'|fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||4b5|),F_PRT_StockValue_Industry
Function F_PRT_StockValue_Industry(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
    Dim ItemStr As Integer
    Select Case TYPE_
        Case 1
                    ItemStr = 13
        Case 2
                    ItemStr = 1
        Case 3
                    ItemStr = 22
        Case 4
                    ItemStr = 18
        Case 5
                    ItemStr = 6
        Case 6
                    ItemStr = 12
        Case 7
                    ItemStr = 21
        Case 8
                    ItemStr = 17
        Case 9
                    ItemStr = 4
        Case 10
                    ItemStr = 11
        Case 11
                    ItemStr = 7
        Case 12
                    ItemStr = 20
        Case 13
                    ItemStr = 15
        Case 14
                    ItemStr = 3
        Case 15
                    ItemStr = 8
        Case 16
                    ItemStr = 9
        Case 17
                    ItemStr = 19
        Case 18
                    ItemStr = 14
        Case 19
                    ItemStr = 10
        Case 20
                    ItemStr = 5
        Case 21
                    ItemStr = 16
        Case 22
                    ItemStr = 2
        Case 23
                    ItemStr = 23
    End Select
  F_PRT_StockValue_Industry = WindFunc("f_prt_stockvalue_industry", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), ItemStr, Null, Null, Null)
    If VarType(F_PRT_StockValue_Industry) <> vbString Then
        F_PRT_StockValue_Industry = F_PRT_StockValue_Industry / UnitVal_
    End If
End Function

'|fffd||632||5b9||279||fffd||1b1||fffd||fffd||fffd||fffd|,F_PRT_TopStockName
Function F_PRT_TopStockName(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_TopStockName = WindFunc("f_prt_topstockname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||5b9||279||fffd||1b1||fffd||fffd||fffd||fffd|,F_PRT_TopStockCode
Function F_PRT_TopStockCode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_TopStockCode = WindFunc("f_prt_topstockcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||5b9||273||5b9||fffd||fffd||fffd||fffd||fffd|,F_PRT_TopStockQuantity
Function F_PRT_TopStockQuantity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_TopStockQuantity = WindFunc("f_prt_topstockquantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(F_PRT_TopStockQuantity) <> vbString Then
        F_PRT_TopStockQuantity = F_PRT_TopStockQuantity / UnitVal_
    End If
End Function

'|fffd||632||5b9||273||5b9||fffd||fffd||fffd||5b5|,F_PRT_TopStockValue
Function F_PRT_TopStockValue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_TopStockValue = WindFunc("f_prt_topstockvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(F_PRT_TopStockValue) <> vbString Then
        F_PRT_TopStockValue = F_PRT_TopStockValue / UnitVal_
    End If
End Function

'|fffd||fffd||56e||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_GovernmentBond
Function F_PRT_GovernmentBond(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_GovernmentBond = WindFunc("f_prt_governmentbond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_GovernmentBond) <> vbString Then
        F_PRT_GovernmentBond = F_PRT_GovernmentBond / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||56e||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_FinancialBond
Function F_PRT_FinancialBond(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_FinancialBond = WindFunc("f_prt_financialbond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_FinancialBond) <> vbString Then
        F_PRT_FinancialBond = F_PRT_FinancialBond / UnitVal_
    End If
End Function

'|fffd||fffd||56e||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_CorporateBond
Function F_PRT_CorporateBond(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_CorporateBond = WindFunc("f_prt_corporatebond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_CorporateBond) <> vbString Then
        F_PRT_CorporateBond = F_PRT_CorporateBond / UnitVal_
    End If
End Function

'|fffd||fffd||5ea||56e||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_ConvertibleBond
Function F_PRT_ConvertibleBond(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_ConvertibleBond = WindFunc("f_prt_convertiblebond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_ConvertibleBond) <> vbString Then
        F_PRT_ConvertibleBond = F_PRT_ConvertibleBond / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||376||fffd||fffd||fffd||fffd||5b5|,F_PRT_CentralBankBill
Function F_PRT_CentralBankBill(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_CentralBankBill = WindFunc("f_prt_centralbankbill", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_PRT_CentralBankBill) <> vbString Then
        F_PRT_CentralBankBill = F_PRT_CentralBankBill / UnitVal_
    End If
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||fffd||fffd|,F_PRT_TopBondCode
Function F_PRT_TopBondCode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_TopBondCode = WindFunc("f_prt_topbondsymbol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||fffd||fffd|,F_PRT_TopBondName
Function F_PRT_TopBondName(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_TopBondName = WindFunc("f_prt_topbondname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||5b5|,F_PRT_TopBondValue
Function F_PRT_TopBondValue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  F_PRT_TopBondValue = WindFunc("f_prt_topbondvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(F_PRT_TopBondValue) <> vbString Then
        F_PRT_TopBondValue = F_PRT_TopBondValue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Anal_NetIncome
Function F_Anal_NetIncome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Anal_NetIncome = WindFunc("f_anal_netincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Anal_NetIncome) <> vbString Then
        F_Anal_NetIncome = F_Anal_NetIncome / UnitVal_
    End If
End Function

'|fffd||fffd||129||fffd||279||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Anal_Distributable
Function F_Anal_Distributable(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Anal_Distributable = WindFunc("f_anal_distributable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Anal_Distributable) <> vbString Then
        F_Anal_Distributable = F_Anal_Distributable / UnitVal_
    End If
End Function

'|fffd||fffd||129||fffd||279||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd|,F_Anal_DistributablePerUnit
Function F_Anal_DistributablePerUnit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Anal_DistributablePerUnit = WindFunc("f_anal_distributableperunit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Anal_DistributablePerUnit) <> vbString Then
        F_Anal_DistributablePerUnit = F_Anal_DistributablePerUnit / UnitVal_
    End If
End Function

'|fffd||fffd||129||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,F_Anal_NetAsset
Function F_Anal_NetAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_Anal_NetAsset = WindFunc("f_anal_netasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||129||fffd||fffd||fffd||fffd||776||efbb||5b5|,F_Anal_NAV
Function F_Anal_NAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_Anal_NAV = WindFunc("F_Anal_NAV", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||129||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,F_QAnal_NetAsset
Function F_QAnal_NetAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
   F_QAnal_NetAsset = WindFunc("f_qanal_netasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_QAnal_NetAsset) <> vbString Then
        F_QAnal_NetAsset = F_QAnal_NetAsset / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||129||fffd||fffd||fffd||fffd||776||efbb||5b5|,F_QAnal_NAV
Function F_QAnal_NAV(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    F_QAnal_NAV = WindFunc("f_qanal_nav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_QAnal_NAV) <> vbString Then
        F_QAnal_NAV = F_QAnal_NAV / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|,F_Stm_BS
Function F_Stm_BS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional TYPE_ As Double = 1, Optional UnitVal_ As Double = 1) As Variant
  Dim TRUETYPE_ As Integer
  TRUETYPE_ = 1
  If ITEMSCODE_ <> 12 And UnitVal_ = 1 Then
    UnitVal_ = TYPE_
  ElseIf ITEMSCODE_ = 12 Then
    TRUETYPE_ = TYPE_
  End If
  F_Stm_BS = WindFunc("F_Stm_BS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ITEMSCODE_, GetValidDate(REPORTDATE_), TRUETYPE_, Null, Null)
    If VarType(F_Stm_BS) <> vbString Then
        F_Stm_BS = F_Stm_BS / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||71a31||fffd|/|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,F_Stm_IS
Function F_Stm_IS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Stm_IS = WindFunc("F_Stm_IS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
    If VarType(F_Stm_IS) <> vbString Then
        F_Stm_IS = F_Stm_IS / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||71a31||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Stm_DS
Function F_Stm_DS(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant) As Variant
  F_Stm_DS = WindFunc("F_Stm_DS", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||71a31||fffd|/|fffd||fffd||fffd||fffd||5b5||fffd||4daf||fffd||fffd|,F_Stm_NAVChange
Function F_Stm_NAVChange(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Stm_NAVChange = WindFunc("F_Stm_NAVChange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ITEMSCODE_, GetValidDate(REPORTDATE_), Null, Null, Null)
    If VarType(F_Stm_NAVChange) <> vbString Then
        F_Stm_NAVChange = F_Stm_NAVChange / UnitVal_
    End If
End Function

'|fffd||fffd||3bb||fffd||fffd||237||5ba||fffd|,F_Div_PerUnit
Function F_Div_PerUnit(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  F_Div_PerUnit = WindFunc("f_div_perunit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||fffd||3bb||fffd||6fc||1b7||5ba||fffd|,F_Div_AccumulatedPerUnit
Function F_Div_AccumulatedPerUnit(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_Div_AccumulatedPerUnit = WindFunc("f_div_accumulatedperunit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||237||5ba||fffd||fffd||736||fffd|,F_Div_Payout
Function F_Div_Payout(WINDCODE_ As Variant, RPTYEAR_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  F_Div_Payout = WindFunc("f_div_payout", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), RPTYEAR_, Null, Null, Null, Null)
    If VarType(F_Div_Payout) <> vbString Then
        F_Div_Payout = F_Div_Payout / UnitVal_
    End If
End Function

'|fffd||6fc||1b7||5ba||fffd||fffd||736||fffd|,F_Div_AccumulatedPayout
Function F_Div_AccumulatedPayout(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Div_AccumulatedPayout = WindFunc("f_div_accumulatedpayout", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(F_Div_AccumulatedPayout) <> vbString Then
        F_Div_AccumulatedPayout = F_Div_AccumulatedPayout / UnitVal_
    End If
End Function

'|fffd||fffd||237||5ba||fffd||fffd||fffd||fffd|,F_Div_Times
Function F_Div_Times(WINDCODE_ As Variant, RPTYEAR_ As Integer) As Variant
  F_Div_Times = WindFunc("f_div_times", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), RPTYEAR_, Null, Null, Null, Null)
End Function

'|fffd||6fc||1b7||5ba||fffd||fffd||fffd||fffd|,F_Div_AccumulatedTimes
Function F_Div_AccumulatedTimes(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_Div_AccumulatedTimes = WindFunc("f_div_accumulatedtimes", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||776||fffd|,F_UNIT_FLOORTRADING
Function F_UNIT_FLOORTRADING(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_UNIT_FLOORTRADING = WindFunc("f_unit_floortrading", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(F_UNIT_FLOORTRADING) <> vbString Then
        F_UNIT_FLOORTRADING = F_UNIT_FLOORTRADING / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_InvestType
Function F_Info_InvestType(WINDCODE_ As Variant) As Variant
  F_Info_InvestType = WindFunc("f_info_investtype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|376||fffd||fffd||13f||fffd||fffd|,F_Info_InvestObject
Function F_Info_InvestObject(WINDCODE_ As Variant) As Variant
  F_Info_InvestObject = WindFunc("f_info_investobject", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|376||fffd||2b7||fffd||3a7|,F_Info_InvestScope
Function F_Info_InvestScope(WINDCODE_ As Variant) As Variant
  F_Info_InvestScope = WindFunc("f_info_investscope", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|4b5||fffd||fffd||fffd||23d||3fb||fffd||5fc|,F_Info_Benchmark
Function F_Info_Benchmark(WINDCODE_ As Variant) As Variant
  F_Info_Benchmark = WindFunc("f_info_benchmark", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_PTM
Function F_Info_PTM(WINDCODE_ As Variant) As Variant
  F_Info_PTM = WindFunc("f_info_ptmday", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_CorpName
Function F_Info_CorpName(WINDCODE_ As Variant) As Variant
  F_Info_CorpName = WindFunc("f_info_corpname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4e2||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_CorpNameEng
Function F_Info_CorpNameEng(WINDCODE_ As Variant) As Variant
  F_Info_CorpNameEng = WindFunc("f_info_corpnameeng", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||5b7|,F_Info_CorpAddress
Function F_Info_CorpAddress(WINDCODE_ As Variant) As Variant
  F_Info_CorpAddress = WindFunc("f_info_corpaddress", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||ce6b||fffd||fffd||5b7|,F_Info_CorpOffice
Function F_Info_CorpOffice(WINDCODE_ As Variant) As Variant
  F_Info_CorpOffice = WindFunc("f_info_corpoffice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f7||fffd||fffd||2f4||fffd||fffd||fffd|,F_Info_CorpChairman
Function F_Info_CorpChairman(WINDCODE_ As Variant) As Variant
  F_Info_CorpChairman = WindFunc("f_info_corpchairman", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||73e||fffd||fffd||fffd|,F_Info_CorpManager
Function F_Info_CorpManager(WINDCODE_ As Variant) As Variant
  F_Info_CorpManager = WindFunc("f_info_corpmanager", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||7ef0|,F_Info_CorpPhone
Function F_Info_CorpPhone(WINDCODE_ As Variant) As Variant
  F_Info_CorpPhone = WindFunc("f_info_corpphone", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,F_Info_CorpFax
Function F_Info_CorpFax(WINDCODE_ As Variant) As Variant
  F_Info_CorpFax = WindFunc("f_info_corpfax", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_Info_CorpEmail
Function F_Info_CorpEmail(WINDCODE_ As Variant) As Variant
  F_Info_CorpEmail = WindFunc("f_info_corpemail", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||77b||fffd||fffd||fffd||3bb||fffd||fffd||fffd||fffd|,F_MMF_UnitYield
Function F_MMF_UnitYield(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_MMF_UnitYield = WindFunc("f_mmf_unityield", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'7|fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|,F_MMF_AnnualizedYield
Function F_MMF_AnnualizedYield(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  F_MMF_AnnualizedYield = WindFunc("f_mmf_annualizedyield", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||77b||fffd||fffd||fffd||3bb||fffd||fffd||fffd||fffd||fffd||5b5|,F_MMF_AvgUnitYield
Function F_MMF_AvgUnitYield(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_MMF_AvgUnitYield = WindFunc("f_mmf_avgunityield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|7|fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||2be||fffd||5b5|,F_MMF_AvgAnnualizedYield
Function F_MMF_AvgAnnualizedYield(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_MMF_AvgAnnualizedYield = WindFunc("f_mmf_avgannualizedyield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||77b||fffd||fffd||fffd||3bb||fffd||fffd||fffd||6dfd||fffd||fffd|,F_MMF_VarUnitYield
Function F_MMF_VarUnitYield(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_MMF_VarUnitYield = WindFunc("f_mmf_varunityield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|7|fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||2b7||fffd||fffd||fffd|,F_MMF_VarAnnualizedYield
Function F_MMF_VarAnnualizedYield(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_MMF_VarAnnualizedYield = WindFunc("f_mmf_varannualizedyield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||776||fffd||4eef|,F_Unit_Change
Function F_Unit_Change(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_Change = WindFunc("f_unit_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
    If VarType(F_Unit_Change) <> vbString Then
        F_Unit_Change = F_Unit_Change / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||776||fffd||4eef||fffd||fffd|,F_Unit_ChangeRate
Function F_Unit_ChangeRate(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  F_Unit_ChangeRate = WindFunc("f_unit_changerate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), Null, Null, Null)
End Function

'|3b4||fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2bd|),F_Unit_NonTradable
Function F_Unit_NonTradable(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_NonTradable = WindFunc("f_unit_nontradable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_NonTradable) <> vbString Then
        F_Unit_NonTradable = F_Unit_NonTradable / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2bd|),F_Unit_Tradable
Function F_Unit_Tradable(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Unit_Tradable = WindFunc("f_unit_tradable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(F_Unit_Tradable) <> vbString Then
        F_Unit_Tradable = F_Unit_Tradable / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd||2fb||fffd||fffd||fffd|,F_Holder_number
Function F_Holder_number(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_Holder_number = WindFunc("f_holder_number", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|1bd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||43b||fffd||fffd||fffd||776||fffd|,F_Holder_AvgHolding
Function F_Holder_AvgHolding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Holder_AvgHolding = WindFunc("f_holder_avgholding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Holder_AvgHolding) <> vbString Then
        F_Holder_AvgHolding = F_Holder_AvgHolding / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||437||776||fffd|,F_Holder_Institution_Holding
Function F_Holder_Institution_Holding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Holder_Institution_Holding = WindFunc("f_holder_institution_holding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Holder_Institution_Holding) <> vbString Then
        F_Holder_Institution_Holding = F_Holder_Institution_Holding / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||431||fffd||fffd||fffd|,F_Holder_Institution_HoldingPct
Function F_Holder_Institution_HoldingPct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_Holder_Institution_HoldingPct = WindFunc("f_holder_institution_holdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||437||776||fffd|,F_Holder_Personal_Holding
Function F_Holder_Personal_Holding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Holder_Personal_Holding = WindFunc("f_holder_personal_holding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Holder_Personal_Holding) <> vbString Then
        F_Holder_Personal_Holding = F_Holder_Personal_Holding / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||431||fffd||fffd||fffd|,F_Holder_Personal_HoldingPct
Function F_Holder_Personal_HoldingPct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_Holder_Personal_HoldingPct = WindFunc("f_holder_personal_holdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2bd|),F_Holder_Name
Function F_Holder_Name(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_Holder_Name = WindFunc("f_holder_name", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||437||776||fffd|(|fffd||fffd||fffd||2bd|),F_Holder_Holding
Function F_Holder_Holding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  F_Holder_Holding = WindFunc("f_holder_holding", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(F_Holder_Holding) <> vbString Then
        F_Holder_Holding = F_Holder_Holding / UnitVal_
    End If
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||431||fffd||fffd||fffd|(|fffd||fffd||fffd||2bd|),F_Holder_Pct
Function F_Holder_Pct(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_Holder_Pct = WindFunc("f_holder_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0||2ae||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||431||fffd||fffd||fffd||fffd||3fc||fffd|(|fffd||fffd||fffd||2bd|),F_Holder_Top10_Holding
Function F_Holder_Top10_Holding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_Holder_Top10_Holding = WindFunc("F_Holder_Top10_Holding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_Holder_Top10_Holding) <> vbString Then
        F_Holder_Top10_Holding = F_Holder_Top10_Holding / UnitVal_
    End If
End Function

'|1f0||2ae||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||437||776||fffd||3fc||fffd|(|fffd||fffd||fffd||2bd|),F_Holder_Top10_Pct
Function F_Holder_Top10_Pct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_Holder_Top10_Pct = WindFunc("F_Holder_Top10_Pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4f6||fffd||fffd|(|fffd||3fc||fffd||5b5|),F_commission_total
Function F_commission_total(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_commission_total = WindFunc("f_commission_total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_commission_total) <> vbString Then
        F_commission_total = F_commission_total / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4f6||fffd||fffd|(|fffd||fffd||3f8||5b5|),F_commission_Detailed
Function F_commission_Detailed(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  Dim ItemStr As String
  ItemStr = ComType2ComName(TYPE_)
  F_commission_Detailed = WindFunc("f_commission_detailed", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(F_commission_Detailed) <> vbString Then
        F_commission_Detailed = F_commission_Detailed / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b1||fffd||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,F_Stm_IssuingDate
Function F_Stm_IssuingDate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_Stm_IssuingDate = WindFunc("F_Stm_IssuingDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1b1||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_StockToNAV
Function F_PRT_StockToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_StockToNAV = WindFunc("f_prt_stocktonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_BondToNAV
Function F_PRT_BondToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_BondToNAV = WindFunc("f_prt_bondtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|228||5a4||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_WarrantToNAV
Function F_PRT_WarrantToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_WarrantToNAV = WindFunc("f_prt_warranttonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||434||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CashToNAV
Function F_PRT_CashToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CashToNAV = WindFunc("f_prt_cashtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_OtherToNAV
Function F_PRT_OtherToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_OtherToNAV = WindFunc("f_prt_othertonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1b1||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_StockToAsset
Function F_PRT_StockToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_StockToAsset = WindFunc("f_prt_stocktoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_BondToAsset
Function F_PRT_BondToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_BondToAsset = WindFunc("f_prt_bondtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|228||5a4||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_WarrantToAsset
Function F_PRT_WarrantToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_WarrantToAsset = WindFunc("f_prt_warranttoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||434||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CashToAsset
Function F_PRT_CashToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CashToAsset = WindFunc("f_prt_cashtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_OtherToAsset
Function F_PRT_OtherToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_OtherToAsset = WindFunc("f_prt_othertoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_NAVToAsset
Function F_PRT_NAVToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_NAVToAsset = WindFunc("f_prt_navtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_StockValue_IndustryToStock
Function F_PRT_StockValue_IndustryToStock(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Dim ItemStr As String
  ItemStr = ConvIndtype(TYPE_)
  F_PRT_StockValue_IndustryToStock = WindFunc("f_prt_stockvalue_industrytostock", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), ItemStr, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_StockValue_IndustryToNAV
Function F_PRT_StockValue_IndustryToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Dim ItemStr As String
  ItemStr = ConvIndtype(TYPE_)
  F_PRT_StockValue_IndustryToNAV = WindFunc("f_prt_stockvalue_industrytonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), ItemStr, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_StockValue_IndustryToAsset
Function F_PRT_StockValue_IndustryToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  Dim ItemStr As String
  ItemStr = ConvIndtype(TYPE_)
  F_PRT_StockValue_IndustryToAsset = WindFunc("f_prt_stockvalue_industrytoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), ItemStr, Null, Null, Null)
End Function

'|fffd||632||5b9||fffd||fffd||fffd||5b5||57c||fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_HeavilyHeldStockToStock
Function F_PRT_HeavilyHeldStockToStock(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_HeavilyHeldStockToStock = WindFunc("f_prt_heavilyheldstocktostock", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||5b9||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_HeavilyHeldStockToNAV
Function F_PRT_HeavilyHeldStockToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_HeavilyHeldStockToNAV = WindFunc("f_prt_heavilyheldstocktonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||5b9||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_HeavilyHeldStockToAsset
Function F_PRT_HeavilyHeldStockToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_HeavilyHeldStockToAsset = WindFunc("f_prt_heavilyheldstocktoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0|N|fffd||fffd||fffd||632||5b9||fffd||1b1||fffd||fffd||5b5||fffd||3fc||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_TopNStockToNAV
Function F_PRT_TopNStockToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_TopNStockToNAV = WindFunc("f_prt_topnstocktonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd||439||fffd||1b1||fffd||fffd||fffd||fffd|(|fffd||431||fffd||fffd||fffd||fffd||ac68|),F_PRT_Stockholding
Function F_PRT_Stockholding(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_Stockholding = WindFunc("f_prt_stockholding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||5b5||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_GovernmentBondToBond
Function F_PRT_GovernmentBondToBond(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_GovernmentBondToBond = WindFunc("f_prt_governmentbondtobond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_FinancialBondToBond
Function F_PRT_FinancialBondToBond(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_FinancialBondToBond = WindFunc("f_prt_financialbondtobond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CorporateBondToBond
Function F_PRT_CorporateBondToBond(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CorporateBondToBond = WindFunc("f_prt_corporatebondtobond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5ea||56e||fffd||fffd||5b5||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_ConvertibleBondToBond
Function F_PRT_ConvertibleBondToBond(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_ConvertibleBondToBond = WindFunc("f_prt_convertiblebondtobond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b5||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CentralBankBillToBond
Function F_PRT_CentralBankBillToBond(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CentralBankBillToBond = WindFunc("f_prt_centralbankbilltobond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_GovernmentBondToNAV
Function F_PRT_GovernmentBondToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_GovernmentBondToNAV = WindFunc("f_prt_governmentbondtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_FinancialBondToNAV
Function F_PRT_FinancialBondToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_FinancialBondToNAV = WindFunc("f_prt_financialbondtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CorporateBondToNAV
Function F_PRT_CorporateBondToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CorporateBondToNAV = WindFunc("f_prt_corporatebondtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5ea||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_ConvertibleBondToNAV
Function F_PRT_ConvertibleBondToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_ConvertibleBondToNAV = WindFunc("f_prt_convertiblebondtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CentralBankBillToNAV
Function F_PRT_CentralBankBillToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CentralBankBillToNAV = WindFunc("f_prt_centralbankbilltonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_GovernmentBondToAsset
Function F_PRT_GovernmentBondToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_GovernmentBondToAsset = WindFunc("f_prt_governmentbondtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_FinancialBondToAsset
Function F_PRT_FinancialBondToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_FinancialBondToAsset = WindFunc("f_prt_financialbondtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CorporateBondToAsset
Function F_PRT_CorporateBondToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CorporateBondToAsset = WindFunc("f_prt_corporatebondtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5ea||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_ConvertibleBondToAsset
Function F_PRT_ConvertibleBondToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_ConvertibleBondToAsset = WindFunc("f_prt_convertiblebondtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_CentralBankBillToAsset
Function F_PRT_CentralBankBillToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_PRT_CentralBankBillToAsset = WindFunc("f_prt_centralbankbilltoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||5b5||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_HeavilyHeldBondToBond
Function F_PRT_HeavilyHeldBondToBond(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_HeavilyHeldBondToBond = WindFunc("f_prt_heavilyheldbondtobond", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_HeavilyHeldBondToNAV
Function F_PRT_HeavilyHeldBondToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_HeavilyHeldBondToNAV = WindFunc("f_prt_heavilyheldbondtonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_HeavilyHeldBondToAsset
Function F_PRT_HeavilyHeldBondToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_PRT_HeavilyHeldBondToAsset = WindFunc("f_prt_heavilyheldbondtoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|1f0|5|fffd||fffd||fffd||632||fffd||56e||22f||fffd||fffd||5b5||fffd||3fc||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,F_PRT_Top5ToNAV
Function F_PRT_Top5ToNAV(WINDCODE_ As Variant, D_ As Variant, Optional COUNT_ As Integer) As Variant
  F_PRT_Top5ToNAV = WindFunc("F_PRT_Top5ToNAV", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), COUNT_)
End Function

'|56e||22f||376||fffd||2bd||fffd||fffd|,F_MMF_Bond
Function F_MMF_Bond(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_MMF_Bond = WindFunc("f_mmf_bond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_MMF_Bond) <> vbString Then
        F_MMF_Bond = F_MMF_Bond / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||fffd||5a4||22f||fffd||fffd||fffd|,F_MMF_ReverseREPO
Function F_MMF_ReverseREPO(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_MMF_ReverseREPO = WindFunc("f_mmf_reverserepo", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_MMF_ReverseREPO) <> vbString Then
        F_MMF_ReverseREPO = F_MMF_ReverseREPO / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||434||fffd||fffd||fffd||fffd||fffd||fffd||3c78||fffd||fffd||fffd||fffd|,F_MMF_Deposit
Function F_MMF_Deposit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_MMF_Deposit = WindFunc("f_mmf_deposit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_MMF_Deposit) <> vbString Then
        F_MMF_Deposit = F_MMF_Deposit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,F_MMF_Other
Function F_MMF_Other(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_MMF_Other = WindFunc("f_mmf_other", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_MMF_Other) <> vbString Then
        F_MMF_Other = F_MMF_Other / UnitVal_
    End If
End Function

'|56e||22f||376||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||131||fffd||fffd||fffd|,F_MMF_BondtoAsset
Function F_MMF_BondtoAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_BondtoAsset = WindFunc("f_mmf_bondtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||bdf5||fffd||fffd||5a4||22f||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||131||fffd||fffd||fffd|,F_MMF_ReverseREPOToAsset
Function F_MMF_ReverseREPOToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_ReverseREPOToAsset = WindFunc("f_mmf_reverserepotoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||434||fffd||fffd||fffd||fffd||fffd||fffd||3c78||fffd||fffd||fffd||fffd||3fc||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||131||fffd||fffd||fffd|,F_MMF_DepositToAsset
Function F_MMF_DepositToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_DepositToAsset = WindFunc("f_mmf_deposittoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||131||fffd||fffd||fffd|,F_MMF_OtherToAsset
Function F_MMF_OtherToAsset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_OtherToAsset = WindFunc("f_mmf_othertoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||22f||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_MMF_Repurchase1
Function F_MMF_Repurchase1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_MMF_Repurchase1 = WindFunc("f_mmf_repurchase1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_MMF_Repurchase1) <> vbString Then
        F_MMF_Repurchase1 = F_MMF_Repurchase1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||129||56e||22f||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,F_MMF_Repurchase2
Function F_MMF_Repurchase2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  F_MMF_Repurchase2 = WindFunc("f_mmf_repurchase2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(F_MMF_Repurchase2) <> vbString Then
        F_MMF_Repurchase2 = F_MMF_Repurchase2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||22f||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,F_MMF_Repurchase1ToNAV
Function F_MMF_Repurchase1ToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_Repurchase1ToNAV = WindFunc("f_mmf_repurchase1tonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||129||56e||22f||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,F_MMF_Repurchase2ToNAV
Function F_MMF_Repurchase2ToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_Repurchase2ToNAV = WindFunc("f_mmf_repurchase2tonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||129||376||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd|,F_MMF_AvgPTM
Function F_MMF_AvgPTM(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_AvgPTM = WindFunc("f_mmf_avgptm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,F_MMF_AvgPTM_Max
Function F_MMF_AvgPTM_Max(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_AvgPTM_Max = WindFunc("f_mmf_avgptm_max", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,F_MMF_AvgPTM_Min
Function F_MMF_AvgPTM_Min(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_AvgPTM_Min = WindFunc("f_mmf_avgptm_min", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1ab||fffd||fffd||235||13e||fffd||fffd||fffd||5b5||fffd||fffd|0.25%(|fffd||fffd|)-0.5%|fffd||fffd||134||fffd||fffd||fffd|,F_MMF_FrequencyOfDeviation
Function F_MMF_FrequencyOfDeviation(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_FrequencyOfDeviation = WindFunc("f_mmf_frequencyofdeviation", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1ab||fffd||fffd||235||fffd||fffd||fffd||fffd||5b5|,F_MMF_MaxDeviation
Function F_MMF_MaxDeviation(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_MaxDeviation = WindFunc("f_mmf_maxdeviation", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1ab||fffd||fffd||235||fffd||fffd||fffd||fffd||5b5|,F_MMF_MinDeviation
Function F_MMF_MinDeviation(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_MinDeviation = WindFunc("f_mmf_mindeviation", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1ab||fffd||fffd||235||13e||fffd||fffd||fffd||5b5||fffd||13c||fffd||1bd||fffd||fffd||5b5|,F_MMF_AvgDeviation
Function F_MMF_AvgDeviation(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  F_MMF_AvgDeviation = WindFunc("f_mmf_avgdeviation", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,F_MMF_DifferentPTMToNAV
Function F_MMF_DifferentPTMToNAV(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  F_MMF_DifferentPTMToNAV = WindFunc("f_mmf_differentptmtonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_morningstarfundType
Function f_info_morningstarfundType(WINDCODE_ As Variant) As Variant
  f_info_morningstarfundType = WindFunc("f_info_morningstarfundType", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||63b||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_lipperfundType
Function f_info_lipperfundType(WINDCODE_ As Variant) As Variant
  f_info_lipperfundType = WindFunc("f_info_lipperfundType", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||4fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_yinhefundType
Function f_info_yinhefundType(WINDCODE_ As Variant) As Variant
  f_info_yinhefundType = WindFunc("f_info_yinhefundType", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||123|,f_info_fundscale
Function f_info_fundscale(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_info_fundscale = WindFunc("f_info_fundscale", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
    If VarType(f_info_fundscale) <> vbString Then
        f_info_fundscale = f_info_fundscale / UnitVal_
    End If
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||123|,f_info_avgfundscale
Function f_info_avgfundscale(WINDCODE_ As Variant, Optional ATTRIBUTE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_info_avgfundscale = WindFunc("f_info_avgfundscale", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ATTRIBUTE_, Null, Null, Null, Null)
    If VarType(f_info_avgfundscale) <> vbString Then
        f_info_avgfundscale = f_info_avgfundscale / UnitVal_
    End If
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_similarfundno
Function f_info_similarfundno(WINDCODE_ As Variant, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_info_similarfundno = WindFunc("f_info_similarfundno", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ATTRIBUTE_, Null, Null, Null, Null)
End Function

'|fffd||fffd||123||36c||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_scaleranking
Function f_info_scaleranking(WINDCODE_ As Variant, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_info_scaleranking = WindFunc("f_info_scaleranking", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ATTRIBUTE_, Null, Null, Null, Null)
End Function

'|fffd||3f9||fffd||fffd||fffd||fffd||fffd|,f_info_subscriptionfee
Function f_info_subscriptionfee(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  f_info_subscriptionfee = WindFunc("f_info_subscriptionfee", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||ae7a||fffd||fffd||fffd||fffd|,f_info_purchasefee
Function f_info_purchasefee(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  f_info_purchasefee = WindFunc("f_info_purchasefee", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TYPE_, Null, Null, Null, Null)
End Function

'|fffd||fffd||637||fffd||fffd||fffd|,f_info_redemptionfee
Function f_info_redemptionfee(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  f_info_redemptionfee = WindFunc("f_info_redemptionfee", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TYPE_, Null, Null, Null, Null, Null)
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||fffd||17b||fffd|,f_info_feediscountornot
Function f_info_feediscountornot(WINDCODE_ As Variant) As Variant
  f_info_feediscountornot = WindFunc("f_info_feediscountornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||ae7a||fffd||6ff||fffd|,f_info_minpurchasediscounts
Function f_info_minpurchasediscounts(WINDCODE_ As Variant) As Variant
  f_info_minpurchasediscounts = WindFunc("f_info_minpurchasediscounts", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||376||fffd||376||fffd||6ff||fffd|,f_info_minaipdiscounts
Function f_info_minaipdiscounts(WINDCODE_ As Variant) As Variant
  f_info_minaipdiscounts = WindFunc("f_info_minaipdiscounts", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_LOFlistedDate
Function f_info_LOFlistedDate(WINDCODE_ As Variant) As Variant
  f_info_LOFlistedDate = WindFunc("f_info_LOFlistedDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||43d||fffd||fffd||5f7||776||fffd|,f_info_LOFdealShareOnMarket
Function f_info_lofdealshareonmarket(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_lofdealshareonmarket = WindFunc("f_info_lofdealshareonmarket", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_lofdealshareonmarket) <> vbString Then
        f_info_lofdealshareonmarket = f_info_lofdealshareonmarket / UnitVal_
    End If
End Function


'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||6f4||fffd||fffd||fffd|,f_info_onlineCashOfferingSymbol
Function f_info_onlineCashOfferingSymbol(WINDCODE_ As Variant) As Variant
  f_info_onlineCashOfferingSymbol = WindFunc("f_info_onlineCashOfferingSymbol", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|4bb||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_firstMarketFundCode
Function f_info_firstMarketFundCode(WINDCODE_ As Variant) As Variant
  f_info_firstMarketFundCode = WindFunc("f_info_firstMarketFundCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||3f9||fffd||fffd||fffd||2bc||fffd||fffd|,f_info_networkCashBuyStartDate
Function f_info_networkCashBuyStartDate(WINDCODE_ As Variant) As Variant
  f_info_networkCashBuyStartDate = WindFunc("f_info_networkCashBuyStartDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||3f9||fffd||fffd||fffd||5b9||fffd||fffd|,f_info_networkCashBuyEndDate
Function f_info_networkCashBuyEndDate(WINDCODE_ As Variant) As Variant
  f_info_networkCashBuyEndDate = WindFunc("f_info_networkCashBuyEndDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||3f9||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd|,f_info_networkCashBuyShareDownLimit
Function f_info_networkCashBuyShareDownLimit(WINDCODE_ As Variant) As Variant
  f_info_networkCashBuyShareDownLimit = WindFunc("f_info_networkCashBuyShareDownLimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||3f9||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd|,f_info_networkCashBuyShareUpLimit
Function f_info_networkCashBuyShareUpLimit(WINDCODE_ As Variant) As Variant
  f_info_networkCashBuyShareUpLimit = WindFunc("f_info_networkCashBuyShareUpLimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||3f9||fffd||fffd||fffd||2bc||fffd||fffd|,f_info_offNetworkBuyStartDate
Function f_info_offNetworkBuyStartDate(WINDCODE_ As Variant) As Variant
  f_info_offNetworkBuyStartDate = WindFunc("f_info_offNetworkBuyStartDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||3f9||fffd||fffd||fffd||5b9||fffd||fffd|,f_info_offNetworkBuyEndDate
Function f_info_offNetworkBuyEndDate(WINDCODE_ As Variant) As Variant
  f_info_offNetworkBuyEndDate = WindFunc("f_info_offNetworkBuyEndDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||3f9||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd|,f_info_offNetworkCashBuyShareDownLimit
Function f_info_offNetworkCashBuyShareDownLimit(WINDCODE_ As Variant) As Variant
  f_info_offNetworkCashBuyShareDownLimit = WindFunc("f_info_offNetworkCashBuyShareDownLimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||b9||fffd||1b1||fffd||3f9||fffd||fffd||fffd||2bc||fffd||fffd|,f_info_offNetworkStockBuyStartDate
Function f_info_offNetworkStockBuyStartDate(WINDCODE_ As Variant) As Variant
  f_info_offNetworkStockBuyStartDate = WindFunc("f_info_offNetworkStockBuyStartDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||b9||fffd||1b1||fffd||3f9||fffd||fffd||fffd||5b9||fffd||fffd|,f_info_offNetworkStockBuyEndDate
Function f_info_offNetworkStockBuyEndDate(WINDCODE_ As Variant) As Variant
  f_info_offNetworkStockBuyEndDate = WindFunc("f_info_offNetworkStockBuyEndDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||b9||fffd||1b1||fffd||3f9||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd|,f_info_offNetworkStockBuyShareDownLimit
Function f_info_offNetworkStockBuyShareDownLimit(WINDCODE_ As Variant) As Variant
  f_info_offNetworkStockBuyShareDownLimit = WindFunc("f_info_offNetworkStockBuyShareDownLimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_ETFlistedDate
Function f_info_ETFlistedDate(WINDCODE_ As Variant) As Variant
  f_info_ETFlistedDate = WindFunc("f_info_ETFlistedDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||43d||fffd||fffd||5f7||776||fffd|,f_info_ETFdealShareOnMarket
Function f_info_etfdealshareonmarket(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_etfdealshareonmarket = WindFunc("f_info_etfdealshareonmarket", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_etfdealshareonmarket) <> vbString Then
        f_info_etfdealshareonmarket = f_info_etfdealshareonmarket / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_fundShareTranslationDate
Function f_info_fundShareTranslationDate(WINDCODE_ As Variant) As Variant
  f_info_fundShareTranslationDate = WindFunc("f_info_fundShareTranslationDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_fundShareTranslationRatio
Function f_info_fundShareTranslationRatio(WINDCODE_ As Variant) As Variant
  f_info_fundShareTranslationRatio = WindFunc("f_info_fundShareTranslationRatio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||ae7a||fffd||fffd||63c||fffd||fffd|,f_info_purchaseandRedemptionAbbreviation
Function f_info_purchaseandRedemptionAbbreviation(WINDCODE_ As Variant) As Variant
  f_info_purchaseandRedemptionAbbreviation = WindFunc("f_info_purchaseandRedemptionAbbreviation", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_guaranteedCycle
Function f_info_guaranteedCycle(WINDCODE_ As Variant) As Variant
  f_info_guaranteedCycle = WindFunc("f_info_guaranteedCycle", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_guaranteedFeeRate
Function f_info_guaranteedFeeRate(WINDCODE_ As Variant) As Variant
  f_info_guaranteedFeeRate = WindFunc("f_info_guaranteedFeeRate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5a4||fffd||fffd|,f_info_warrantor
Function f_info_warrantor(WINDCODE_ As Variant) As Variant
  f_info_warrantor = WindFunc("f_info_warrantor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5a4||fffd||2fc||fffd||fffd|,f_info_warrantorIntroduction
Function f_info_warrantorIntroduction(WINDCODE_ As Variant) As Variant
  f_info_warrantorIntroduction = WindFunc("f_info_warrantorIntroduction", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_investmentRegion
Function f_info_investmentRegion(WINDCODE_ As Variant) As Variant
  f_info_investmentRegion = WindFunc("f_info_investmentRegion", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||4aa||376||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,f_info_investingRegionDescription
Function f_info_investingRegionDescription(WINDCODE_ As Variant) As Variant
  f_info_investingRegionDescription = WindFunc("f_info_investingRegionDescription", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||2b9||fffd||fffd||fffd|,f_info_foreignInvestmentAdvisor
Function f_info_foreignInvestmentAdvisor(WINDCODE_ As Variant) As Variant
  f_info_foreignInvestmentAdvisor = WindFunc("f_info_foreignInvestmentAdvisor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||439||fffd||fffd||fffd|,f_info_foreignCustodian
Function f_info_foreignCustodian(WINDCODE_ As Variant) As Variant
  f_info_foreignCustodian = WindFunc("f_info_foreignCustodian", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||fffd||fffd||ece4||fffd||fffd||fffd||fffd||fffd||3bb||fffd||fffd||fffd||fffd||fffd|,f_info_manager_longestfundmanager
Function f_info_manager_longestfundmanager(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_longestfundmanager = WindFunc("f_info_manager_longestfundmanager", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_birthyear
Function f_info_manager_birthyear(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_birthyear = WindFunc("f_info_manager_birthyear", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,f_info_manager_age
Function f_info_manager_age(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_age = WindFunc("f_info_manager_age", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|467||fffd||fffd|,f_info_manager_education
Function f_info_manager_education(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_education = WindFunc("f_info_manager_education", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,f_info_manager_nationality
Function f_info_manager_nationality(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_nationality = WindFunc("f_info_manager_nationality", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|,f_info_manager_resume
Function f_info_manager_resume(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_resume = WindFunc("f_info_manager_resume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||531||fffd|,f_info_manager_gender
Function f_info_manager_gender(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_gender = WindFunc("f_info_manager_gender", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||fffd|,f_info_manager_startdate
Function f_info_manager_startdate(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_startdate = WindFunc("f_info_manager_startdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||fffd|,f_info_manager_onthepostdays
Function f_info_manager_onthepostdays(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_onthepostdays = WindFunc("f_info_manager_onthepostdays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_managerworkingyears
Function f_info_manager_managerworkingyears(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_managerworkingyears = WindFunc("f_info_manager_managerworkingyears", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_averageworkingyears
Function f_info_averageworkingyears(WINDCODE_ As Variant) As Variant
  f_info_averageworkingyears = WindFunc("f_info_averageworkingyears", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_maxworkingyears
Function f_info_maxworkingyears(WINDCODE_ As Variant) As Variant
  f_info_maxworkingyears = WindFunc("f_info_maxworkingyears", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_fundno
Function f_info_manager_fundno(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_fundno = WindFunc("f_info_manager_fundno", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||3ce3a||fffd||fffd||73b||631||fffd|,f_info_manager_totalgeometricreturn
Function f_info_manager_totalgeometricreturn(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_totalgeometricreturn = WindFunc("f_info_manager_totalgeometricreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_geometricannualizedyield
Function f_info_manager_geometricannualizedyield(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1, Optional LT_ As Integer = 1) As Variant
  f_info_manager_geometricannualizedyield = WindFunc("f_info_manager_geometricannualizedyield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_arithmeticannualizedyield
Function f_info_manager_arithmeticannualizedyield(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1, Optional LT_ As Integer = 1) As Variant
  f_info_manager_arithmeticannualizedyield = WindFunc("f_info_manager_arithmeticannualizedyield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, LT_, Null, Null, Null)
End Function

'|fffd||fffd||53d||fffd||fffd||5fc||fffd||73b||631||fffd|,f_info_manager_totalreturnoverbenchmark
Function f_info_manager_totalreturnoverbenchmark(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_totalreturnoverbenchmark = WindFunc("f_info_manager_totalreturnoverbenchmark", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, Null, Null, Null, Null)
End Function

'|fffd||fffd||53d||fffd||fffd||5fc||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_geometricavgannualyieldoverbench
Function f_info_manager_geometricavgannualyieldoverbench(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1, Optional LT_ As Integer = 1) As Variant
  f_info_manager_geometricavgannualyieldoverbench = WindFunc("f_info_manager_geometricavgannualyieldoverbench", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, LT_, Null, Null, Null)
End Function

'|fffd||fffd||53d||fffd||fffd||5fc||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_arithmeticavgannualyieldoverbench
Function f_info_manager_arithmeticavgannualyieldoverbench(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1, Optional LT_ As Integer = 1) As Variant
  f_info_manager_arithmeticavgannualyieldoverbench = WindFunc("f_info_manager_arithmeticavgannualyieldoverbench", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_, LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fc||fffd||fffd|,f_info_corp_fundmanagementcompany
Function f_info_corp_fundmanagementcompany(WINDCODE_ As Variant) As Variant
  f_info_corp_fundmanagementcompany = WindFunc("f_info_corp_fundmanagementcompany", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||bb||fffd||fffd||fffd||fffd||fffd|,f_info_corp_FundNO
Function f_info_corp_FundNO(WINDCODE_ As Variant) As Variant
  f_info_corp_FundNO = WindFunc("f_info_corp_FundNO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_corp_fundmanagersNo
Function f_info_corp_fundmanagersNo(WINDCODE_ As Variant) As Variant
  f_info_corp_fundmanagersNo = WindFunc("f_info_corp_fundmanagersNo", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_corp_averageworkingyears
Function f_info_corp_averageworkingyears(WINDCODE_ As Variant) As Variant
  f_info_corp_averageworkingyears = WindFunc("f_info_corp_averageworkingyears", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_corp_maxworkingyears
Function f_info_corp_maxworkingyears(WINDCODE_ As Variant) As Variant
  f_info_corp_maxworkingyears = WindFunc("f_info_corp_maxworkingyears", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_corp_fundmanagermaturity
Function f_info_corp_fundmanagermaturity(WINDCODE_ As Variant) As Variant
  f_info_corp_fundmanagermaturity = WindFunc("f_info_corp_fundmanagermaturity", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||176||fffd||fffd||236||fffd||fffd||fffd|,f_info_corp_teamstability
Function f_info_corp_teamstability(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_info_corp_teamstability = WindFunc("f_info_corp_teamstability", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||1fb||fffd||fffd||fffd||57c||fffd||fffd|,f_info_corp_fivestarfundsprop
Function f_info_corp_fivestarfundsprop(WINDCODE_ As Variant, Optional Y1_ As Integer = 1, Optional M_ As Integer = 1, Optional INSTITUTION_ As Integer = 1) As Variant
  f_info_corp_fivestarfundsprop = WindFunc("f_info_corp_fivestarfundsprop", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Y1_, M_, INSTITUTION_, Null, Null)
End Function

'|fffd||fffd||fffd||1fb||fffd||fffd||fffd||57c||fffd||fffd|,f_info_corp_fourstarfundsprop
Function f_info_corp_fourstarfundsprop(WINDCODE_ As Variant, Optional Y1_ As Integer = 1, Optional M_ As Integer = 1, Optional INSTITUTION_ As Integer = 1) As Variant
  f_info_corp_fourstarfundsprop = WindFunc("f_info_corp_fourstarfundsprop", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Y1_, M_, INSTITUTION_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||2b1||fffd|,f_info_corpregisteredcapital
Function f_info_corpregisteredcapital(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_info_corpregisteredcapital = WindFunc("f_info_corpregisteredcapital", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
    If VarType(f_info_corpregisteredcapital) <> vbString Then
        f_info_corpregisteredcapital = f_info_corpregisteredcapital / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_corpestablishmentdate
Function f_info_corpestablishmentdate(WINDCODE_ As Variant) As Variant
  f_info_corpestablishmentdate = WindFunc("f_info_corpestablishmentdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd|,f_info_corpzip
Function f_info_corpzip(WINDCODE_ As Variant) As Variant
  f_info_corpzip = WindFunc("f_info_corpzip", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b3|,f_info_corpwebsite
Function f_info_corpwebsite(WINDCODE_ As Variant) As Variant
  f_info_corpwebsite = WindFunc("f_info_corpwebsite", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||5ba||cfbb||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_nav_cashdivreturn
Function f_nav_cashdivreturn(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_nav_cashdivreturn = WindFunc("f_nav_cashdivreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||4fbb||5b5||fffd||fffd||53d||fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|,f_nav_navoverbenchreturn
Function f_nav_navoverbenchreturn(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_nav_navoverbenchreturn = WindFunc("f_nav_navoverbenchreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_nav_similarperiodavgreturn
Function f_nav_similarperiodavgreturn(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_nav_similarperiodavgreturn = WindFunc("f_nav_similarperiodavgreturn", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), ATTRIBUTE_, Null, Null)
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_nav_periodreturnranking
Function f_nav_periodreturnranking(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_nav_periodreturnranking = WindFunc("f_nav_periodreturnranking", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), ATTRIBUTE_, Null, Null)
End Function
'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||677||5b1||223||fffd|,f_nav_periodreturnrankingper
Function f_nav_periodreturnrankingper(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_nav_periodreturnrankingper = WindFunc("f_nav_periodreturnrankingper", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), ATTRIBUTE_, Null, Null)
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_nav_sellprice
Function f_nav_sellprice(WINDCODE_ As Variant, DATE_ As Variant) As Variant
  f_nav_sellprice = WindFunc("f_nav_sellprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||77b||fffd||fffd||fffd||3bb||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,f_mmf_totalunityield
Function f_mmf_totalunityield(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_mmf_totalunityield = WindFunc("f_mmf_totalunityield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
    If VarType(f_mmf_totalunityield) <> vbString Then
        f_mmf_totalunityield = f_mmf_totalunityield / UnitVal_
    End If
End Function

'|fffd||433||fffd||fffd||6fa||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_marketavg
Function f_rating_marketavg(WINDCODE_ As Variant, Optional Y1_ As Integer = 1, Optional M_ As Integer = 1) As Variant
  f_rating_marketavg = WindFunc("f_rating_marketavg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Y1_, M_, Null, Null, Null)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_risk_avgriskreturn
Function f_risk_avgriskreturn(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  f_risk_avgriskreturn = WindFunc("f_risk_avgriskreturn", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_risk_gemavgriskreturn
Function f_risk_gemavgriskreturn(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  f_risk_gemavgriskreturn = WindFunc("f_risk_gemavgriskreturn", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_)
End Function

'|fffd||fffd||fffd||437||fffd||fffd||fffd|,f_risk_downsiderisk
Function f_risk_downsiderisk(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional LT_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  f_risk_downsiderisk = WindFunc("f_risk_downsiderisk", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), LT_, C_, Null)
End Function

'|fffd||fffd||fffd||4fbb||5b5||fffd||fffd||53d||fffd||fffd||5fc||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|,f_risk_navoverbenchannualreturn
Function f_risk_navoverbenchannualreturn(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_risk_navoverbenchannualreturn = WindFunc("f_risk_navoverbenchannualreturn", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), LT_, Null, Null)
End Function

'|fffd||fffd||fffd||3f5||fffd||fffd|,f_style_stylecoefficient
Function f_style_stylecoefficient(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_style_stylecoefficient = WindFunc("f_style_stylecoefficient", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_style_styleattribute
Function f_style_styleattribute(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_style_styleattribute = WindFunc("f_style_styleattribute", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5||fffd||fffd||fffd||fffd|,f_style_marketvalueattribute
Function f_style_marketvalueattribute(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_style_marketvalueattribute = WindFunc("f_style_marketvalueattribute", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_style_marketvaluestyleattribute
Function f_style_marketvaluestyleattribute(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_style_marketvaluestyleattribute = WindFunc("f_style_marketvaluestyleattribute", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|1bd||fffd||fffd||fffd||5b2||fffd||2b1||fffd||fffd|,f_style_averagepositiontime
Function f_style_averagepositiontime(WINDCODE_ As Variant, Optional Y1_ As Integer = 1) As Variant
  f_style_averagepositiontime = WindFunc("f_style_averagepositiontime", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Y1_, Null, Null, Null, Null)
End Function

'|1f0|N|fffd||fffd||fffd||1b1||57c||22b||fffd||fffd||fffd||fffd||1b1||376||fffd||2b1||fffd|,f_style_topNproportiontoallshares
Function f_style_topNproportiontoallshares(WINDCODE_ As Variant, Optional D_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  f_style_topNproportiontoallshares = WindFunc("f_style_topNproportiontoallshares", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), COUNT_, Null, Null, Null)
End Function

'|1f0|N|fffd||fffd||fffd||fffd||4b5||57c||22b||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,f_style_topNproportiontoallindustries
Function f_style_topNproportiontoallindustries(WINDCODE_ As Variant, Optional D_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  f_style_topNproportiontoallindustries = WindFunc("f_style_topNproportiontoallindustries", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), COUNT_, Null, Null, Null)
End Function

'|376||fffd||2bc||fffd||fffd||436||fffd|,f_style_invconcentration
Function f_style_invconcentration(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_style_invconcentration = WindFunc("f_style_invconcentration", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3bb||fffd||fffd||fffd||fffd||5ba||fffd|,f_div_periodperunit
Function f_div_periodperunit(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_div_periodperunit = WindFunc("f_div_periodperunit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
    If VarType(f_div_periodperunit) <> vbString Then
        f_div_periodperunit = f_div_periodperunit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5ba||fffd||fffd||736||fffd|,f_div_periodpayout
Function f_div_periodpayout(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_div_periodpayout = WindFunc("f_div_periodpayout", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
    If VarType(f_div_periodpayout) <> vbString Then
        f_div_periodpayout = f_div_periodpayout / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5ba||fffd||fffd||fffd||fffd|,f_div_periodtimes
Function f_div_periodtimes(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_div_periodtimes = WindFunc("f_div_periodtimes", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||776||fffd||fffd||1f7||fffd||3aa||fffd||3f2||fffd||fffd||fffd||fffd||fffd|,f_unit_mergedsharesornot
Function f_unit_mergedsharesornot(WINDCODE_ As Variant, Optional TD_ As Variant) As Variant
  f_unit_mergedsharesornot = WindFunc("f_unit_mergedsharesornot", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||23e||fffd||fffd||ae7a||fffd||fffd||fffd||fffd||fffd|,f_unit_netquarterlyratio
Function f_unit_netquarterlyratio(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_unit_netquarterlyratio = WindFunc("f_unit_netquarterlyratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||1f7||fffd||3aa||fffd||3f2||fffd||fffd||fffd||fffd||fffd|,f_prt_mergedNAVornot
Function f_prt_mergedNAVornot(WINDCODE_ As Variant) As Variant
  f_prt_mergedNAVornot = WindFunc("f_prt_mergedNAVornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||5b5|,f_prt_fundvalue
Function f_prt_fundvalue(WINDCODE_ As Variant, Optional D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_prt_fundvalue = WindFunc("f_prt_fundvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(f_prt_fundvalue) <> vbString Then
        f_prt_fundvalue = f_prt_fundvalue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_fundtonav
Function f_prt_fundtonav(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_fundtonav = WindFunc("f_prt_fundtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_fundtoasset
Function f_prt_fundtoasset(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_fundtoasset = WindFunc("f_prt_fundtoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1b1||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_stockvaluegrowth
Function f_prt_stockvaluegrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_stockvaluegrowth = WindFunc("f_prt_stockvaluegrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_bondvaluegrowth
Function f_prt_bondvaluegrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_bondvaluegrowth = WindFunc("f_prt_bondvaluegrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_fundvaluegrowth
Function f_prt_fundvaluegrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_fundvaluegrowth = WindFunc("f_prt_fundvaluegrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|228||5a4||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_warrantvaluegrowth
Function f_prt_warrantvaluegrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_warrantvaluegrowth = WindFunc("f_prt_warrantvaluegrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||434||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_cashvaluegrowth
Function f_prt_cashvaluegrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_cashvaluegrowth = WindFunc("f_prt_cashvaluegrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_othervaluegrowth
Function f_prt_othervaluegrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_othervaluegrowth = WindFunc("f_prt_othervaluegrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||4daf|,f_prt_netassetchange
Function f_prt_netassetchange(WINDCODE_ As Variant, Optional D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_prt_netassetchange = WindFunc("f_prt_netassetchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(f_prt_netassetchange) <> vbString Then
        f_prt_netassetchange = f_prt_netassetchange / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||4daf||fffd||fffd|,f_prt_netassetchangeratio
Function f_prt_netassetchangeratio(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_netassetchangeratio = WindFunc("f_prt_netassetchangeratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||4daf|,f_prt_totalassetchange
Function f_prt_totalassetchange(WINDCODE_ As Variant, Optional D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_prt_totalassetchange = WindFunc("f_prt_totalassetchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(f_prt_totalassetchange) <> vbString Then
        f_prt_totalassetchange = f_prt_totalassetchange / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||4daf||fffd||fffd|,f_prt_totalassetchangeratio
Function f_prt_totalassetchangeratio(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_totalassetchangeratio = WindFunc("f_prt_totalassetchangeratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1b1||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_stocktonavgrowth
Function f_prt_stocktonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_stocktonavgrowth = WindFunc("f_prt_stocktonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|56e||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_bondtonavgrowth
Function f_prt_bondtonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_bondtonavgrowth = WindFunc("f_prt_bondtonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_fundtonavgrowth
Function f_prt_fundtonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_fundtonavgrowth = WindFunc("f_prt_fundtonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|228||5a4||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_warranttonavgrowth
Function f_prt_warranttonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_warranttonavgrowth = WindFunc("f_prt_warranttonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||434||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_cashtonavgrowth
Function f_prt_cashtonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_cashtonavgrowth = WindFunc("f_prt_cashtonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_othertonavgrowth
Function f_prt_othertonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_othertonavgrowth = WindFunc("f_prt_othertonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||2b2||fffd||fffd||fffd||5b5||fffd||3fc||fffd|,f_prt_fundcototalnetassets
Function f_prt_fundcototalnetassets(WINDCODE_ As Variant, Optional D_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_prt_fundcototalnetassets = WindFunc("f_prt_fundcototalnetassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
    If VarType(f_prt_fundcototalnetassets) <> vbString Then
        f_prt_fundcototalnetassets = f_prt_fundcototalnetassets / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||2b2||fffd||fffd||fffd||5b5||fffd||3fc||fffd||fffd||fffd||fffd||fffd|,f_prt_fundcototalnetassetsranking
Function f_prt_fundcototalnetassetsranking(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_fundcototalnetassetsranking = WindFunc("f_prt_fundcototalnetassetsranking", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||2b2||fffd||fffd||fffd||5b5||fffd||3fc||1b1||4daf||fffd||fffd|,f_prt_fundcotnachangeratio
Function f_prt_fundcotnachangeratio(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_fundcotnachangeratio = WindFunc("f_prt_fundcotnachangeratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_stockvalue_industryvaluegrowth
Function f_prt_stockvalue_industryvaluegrowth(WINDCODE_ As Variant, Optional D_ As Variant, Optional IND_NO_ As Integer = 1) As Variant
  f_prt_stockvalue_industryvaluegrowth = WindFunc("f_prt_stockvalue_industryvaluegrowth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), IND_NO_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_stockvalue_industrytonavgrowth
Function f_prt_stockvalue_industrytonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant, Optional IND_NO_ As Integer = 1) As Variant
  f_prt_stockvalue_industrytonavgrowth = WindFunc("f_prt_stockvalue_industrytonavgrowth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), IND_NO_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,f_prt_stockvalue_topindustryname
Function f_prt_stockvalue_topindustryname(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_stockvalue_topindustryname = WindFunc("f_prt_stockvalue_topindustryname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,f_prt_stockvalue_topindustrysymbol
Function f_prt_stockvalue_topindustrysymbol(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_stockvalue_topindustrysymbol = WindFunc("f_prt_stockvalue_topindustrysymbol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5|,f_prt_stockvalue_topindustryvalue
Function f_prt_stockvalue_topindustryvalue(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_stockvalue_topindustryvalue = WindFunc("f_prt_stockvalue_topindustryvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
    If VarType(f_prt_stockvalue_topindustryvalue) <> vbString Then
        f_prt_stockvalue_topindustryvalue = f_prt_stockvalue_topindustryvalue / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_topindustrytostock
Function f_prt_stockvalue_topindustrytostock(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_stockvalue_topindustrytostock = WindFunc("f_prt_stockvalue_topindustrytostock", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_topindustrytonav
Function f_prt_stockvalue_topindustrytonav(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_stockvalue_topindustrytonav = WindFunc("f_prt_stockvalue_topindustrytonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_topindustrytoasset
Function f_prt_stockvalue_topindustrytoasset(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_stockvalue_topindustrytoasset = WindFunc("f_prt_stockvalue_topindustrytoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||5b8||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,f_prt_stockvalue_topindexpercentchange
Function f_prt_stockvalue_topindexpercentchange(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_prt_stockvalue_topindexpercentchange = WindFunc("f_prt_stockvalue_topindexpercentchange", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), GetValidDate(TD1_), GetValidDate(TD2_), SEQ_, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5|,f_prt_stockvalue_holdingindustrymktvalue
Function f_prt_stockvalue_holdingindustrymktvalue(WINDCODE_ As Variant, Optional D_ As Variant, Optional IND_NO_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_stockvalue_holdingindustrymktvalue = WindFunc("f_prt_stockvalue_holdingindustrymktvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), IND_NO_, Null, Null, Null)
    If VarType(f_prt_stockvalue_holdingindustrymktvalue) <> vbString Then
        f_prt_stockvalue_holdingindustrymktvalue = f_prt_stockvalue_holdingindustrymktvalue / UnitVal_
    End If
End Function

'|fffd||632||5b9||273||5b2||5b1||4daf|,f_prt_topstockholdingChanging
Function f_prt_topstockholdingChanging(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_topstockholdingChanging = WindFunc("f_prt_topstockholdingChanging", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
    If VarType(f_prt_topstockholdingChanging) <> vbString Then
        f_prt_topstockholdingChanging = f_prt_topstockholdingChanging / UnitVal_
    End If
End Function

'|fffd||632||5b9||273||5b2||fffd||57c||fffd||fffd||368||fffd||271||fffd||fffd||fffd|,f_prt_topProportionToFloating
Function f_prt_topProportionToFloating(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topProportionToFloating = WindFunc("f_prt_topProportionToFloating", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||5b9||fffd||fffd||1f5||fffd||fffd||fffd|,f_prt_heavilyheldstocksperchange
Function f_prt_heavilyheldstocksperchange(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_prt_heavilyheldstocksperchange = WindFunc("f_prt_heavilyheldstocksperchange", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, GetValidDate(TD1_), GetValidDate(TD2_), Null)
End Function

'|fffd||632||5b9||fffd||1b1||fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||fffd|,f_prt_fundnoofstocks
Function f_prt_fundnoofstocks(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_fundnoofstocks = WindFunc("f_prt_fundnoofstocks", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_governmentbondgrowth
Function f_prt_governmentbondgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_governmentbondgrowth = WindFunc("f_prt_governmentbondgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_financialbondgrowth
Function f_prt_financialbondgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_financialbondgrowth = WindFunc("f_prt_financialbondgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_corporatebondgrowth
Function f_prt_corporatebondgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_corporatebondgrowth = WindFunc("f_prt_corporatebondgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5ea||56e||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_convertiblebondgrowth
Function f_prt_convertiblebondgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_convertiblebondgrowth = WindFunc("f_prt_convertiblebondgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_centralbankbillgrowth
Function f_prt_centralbankbillgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_centralbankbillgrowth = WindFunc("f_prt_centralbankbillgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_governmentbondtonavgrowth
Function f_prt_governmentbondtonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_governmentbondtonavgrowth = WindFunc("f_prt_governmentbondtonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_financialbondtonavgrowth
Function f_prt_financialbondtonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_financialbondtonavgrowth = WindFunc("f_prt_financialbondtonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_corporatebondtonavgrowth
Function f_prt_corporatebondtonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_corporatebondtonavgrowth = WindFunc("f_prt_corporatebondtonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||5ea||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_convertiblebondtonavgrowth
Function f_prt_convertiblebondtonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_convertiblebondtonavgrowth = WindFunc("f_prt_convertiblebondtonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_centralbankbilltonavgrowth
Function f_prt_centralbankbilltonavgrowth(WINDCODE_ As Variant, Optional D_ As Variant) As Variant
  f_prt_centralbankbilltonavgrowth = WindFunc("f_prt_centralbankbilltonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||fffd||fffd|,f_prt_topbondsymbol
Function f_prt_topbondsymbol(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topbondsymbol = WindFunc("f_prt_topbondsymbol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||56e||22f||fffd||1f5||fffd||fffd||fffd|,f_prt_heavilyheldbondsperchange
Function f_prt_heavilyheldbondsperchange(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_prt_heavilyheldbondsperchange = WindFunc("f_prt_heavilyheldbondsperchange", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, GetValidDate(TD1_), GetValidDate(TD2_), LT_)
End Function

'|fffd||632||fffd||56e||22f||fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||fffd|,f_prt_fundnoofbonds
Function f_prt_fundnoofbonds(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_fundnoofbonds = WindFunc("f_prt_fundnoofbonds", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||fffd||fffd||fffd|,f_prt_topwarrantname
Function f_prt_topwarrantname(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topwarrantname = WindFunc("f_prt_topwarrantname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||fffd||fffd||fffd|,f_prt_topwarrantsymbol
Function f_prt_topwarrantsymbol(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topwarrantsymbol = WindFunc("f_prt_topwarrantsymbol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||5b2||fffd||fffd||fffd||fffd||fffd|,f_prt_topwarrantquantity
Function f_prt_topwarrantquantity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topwarrantquantity = WindFunc("f_prt_topwarrantquantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topwarrantquantity) <> vbString Then
        f_prt_topwarrantquantity = f_prt_topwarrantquantity / UnitVal_
    End If
End Function

'|fffd||632||fffd||228||5a4||fffd||5b2||fffd||fffd||fffd||5b5|,f_prt_topwarrantvalue
Function f_prt_topwarrantvalue(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_topwarrantvalue = WindFunc("f_prt_topwarrantvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
    If VarType(f_prt_topwarrantvalue) <> vbString Then
        f_prt_topwarrantvalue = f_prt_topwarrantvalue / UnitVal_
    End If
End Function

'|fffd||632||fffd||228||5a4||fffd||5b2||5b1||4daf|,f_prt_topwarrantholdingChanging
Function f_prt_topwarrantholdingchanging(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topwarrantholdingchanging = WindFunc("f_prt_topwarrantholdingchanging", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topwarrantholdingchanging) <> vbString Then
        f_prt_topwarrantholdingchanging = f_prt_topwarrantholdingchanging / UnitVal_
    End If
End Function

'|fffd||632||fffd||228||5a4||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_topporportiontoCirculating
Function f_prt_topporportiontoCirculating(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topporportiontoCirculating = WindFunc("f_prt_topporportiontoCirculating", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||5b2||fffd||fffd||fffd||5b5||57c||228||5a4||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,f_prt_heavilyheldwarranttowarrant
Function f_prt_heavilyheldwarranttowarrant(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldwarranttowarrant = WindFunc("f_prt_heavilyheldwarranttowarrant", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||5b2||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,f_prt_heavilyheldwarranttonav
Function f_prt_heavilyheldwarranttonav(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldwarranttonav = WindFunc("f_prt_heavilyheldwarranttonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||5b2||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,f_prt_heavilyheldwarranttoasset
Function f_prt_heavilyheldwarranttoasset(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldwarranttoasset = WindFunc("f_prt_heavilyheldwarranttoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||1f5||fffd||fffd||fffd|,f_prt_heavilyheldwarrantperchange
Function f_prt_heavilyheldwarrantperchange(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_prt_heavilyheldwarrantperchange = WindFunc("f_prt_heavilyheldwarrantperchange", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, GetValidDate(TD1_), GetValidDate(TD2_), Null)
End Function

'|fffd||632||fffd||228||5a4||fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||fffd|,f_prt_fundnoofwarrant
Function f_prt_fundnoofwarrant(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_fundnoofwarrant = WindFunc("f_prt_fundnoofwarrant", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||5b5|(QDII),f_prt_qdii_countryregioninvestment
Function f_prt_qdii_countryregioninvestment(WINDCODE_ As Variant, Optional D_ As Variant, Optional COUNTRY_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_qdii_countryregioninvestment = WindFunc("f_prt_qdii_countryregioninvestment", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), COUNTRY_, Null, Null, Null)
    If VarType(f_prt_qdii_countryregioninvestment) <> vbString Then
        f_prt_qdii_countryregioninvestment = f_prt_qdii_countryregioninvestment / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_countryregioninvestmenttonav
Function f_prt_qdii_countryregioninvestmenttonav(WINDCODE_ As Variant, Optional D_ As Variant, Optional COUNTRY_ As Integer = 1) As Variant
  f_prt_qdii_countryregioninvestmenttonav = WindFunc("f_prt_qdii_countryregioninvestmenttonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), COUNTRY_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topindustryname
Function f_prt_qdii_topindustryname(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_topindustryname = WindFunc("f_prt_qdii_topindustryname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(QDII),f_prt_qdii_topgicsindustryvalue
Function f_prt_qdii_topgicsindustryvalue(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_qdii_topgicsindustryvalue = WindFunc("f_prt_qdii_topgicsindustryvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
    If VarType(f_prt_qdii_topgicsindustryvalue) <> vbString Then
        f_prt_qdii_topgicsindustryvalue = f_prt_qdii_topgicsindustryvalue / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topgicsindustryvaluetonav
Function f_prt_qdii_topgicsindustryvaluetonav(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_topgicsindustryvaluetonav = WindFunc("f_prt_qdii_topgicsindustryvaluetonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(QDII),f_prt_qdii_gicsindustryvalue
Function f_prt_qdii_gicsindustryvalue(WINDCODE_ As Variant, Optional D_ As Variant, Optional IND_NO_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_qdii_gicsindustryvalue = WindFunc("f_prt_qdii_gicsindustryvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), IND_NO_, Null, Null, Null)
    If VarType(f_prt_qdii_gicsindustryvalue) <> vbString Then
        f_prt_qdii_gicsindustryvalue = f_prt_qdii_gicsindustryvalue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_gicsindustryvaluetonav
Function f_prt_qdii_gicsindustryvaluetonav(WINDCODE_ As Variant, Optional D_ As Variant, Optional IND_NO_ As Integer = 1) As Variant
  f_prt_qdii_gicsindustryvaluetonav = WindFunc("f_prt_qdii_gicsindustryvaluetonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), IND_NO_, Null, Null, Null)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topsecuritiesname
Function f_prt_qdii_topsecuritiesname(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_topsecuritiesname = WindFunc("f_prt_qdii_topsecuritiesname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topsecuritiessymbol
Function f_prt_qdii_topsecuritiessymbol(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_topsecuritiessymbol = WindFunc("f_prt_qdii_topsecuritiessymbol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topsecuritiestype
Function f_prt_qdii_topsecuritiestype(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_topsecuritiestype = WindFunc("f_prt_qdii_topsecuritiestype", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||5b3||5b2||fffd||fffd||fffd||5b5|(QDII),f_prt_qdii_toppositionvalue
Function f_prt_qdii_toppositionvalue(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_qdii_toppositionvalue = WindFunc("f_prt_qdii_toppositionvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
    If VarType(f_prt_qdii_toppositionvalue) <> vbString Then
        f_prt_qdii_toppositionvalue = f_prt_qdii_toppositionvalue / UnitVal_
    End If
End Function

'|fffd||632||5b3||5b2||fffd||fffd||fffd||5b5||fffd||4eef|(QDII),f_prt_qdii_toppositionvaluechanging
Function f_prt_qdii_toppositionvaluechanging(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_qdii_toppositionvaluechanging = WindFunc("f_prt_qdii_toppositionvaluechanging", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
    If VarType(f_prt_qdii_toppositionvaluechanging) <> vbString Then
        f_prt_qdii_toppositionvaluechanging = f_prt_qdii_toppositionvaluechanging / UnitVal_
    End If
End Function

'|fffd||632||5b3||5b2||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_toppositionvaluetonav
Function f_prt_qdii_toppositionvaluetonav(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_toppositionvaluetonav = WindFunc("f_prt_qdii_toppositionvaluetonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||435||635||fffd|(QDII),f_prt_qdii_topholdinglistingplace
Function f_prt_qdii_topholdinglistingplace(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_topholdinglistingplace = WindFunc("f_prt_qdii_topholdinglistingplace", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topholdingcountry
Function f_prt_qdii_topholdingcountry(WINDCODE_ As Variant, Optional D_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_qdii_topholdingcountry = WindFunc("f_prt_qdii_topholdingcountry", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), SEQ_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||23b||fffd||fffd||fffd||776||efbb||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_qanal_navreturn
Function f_qanal_navreturn(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_qanal_navreturn = WindFunc("f_qanal_navreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6fc||1bb||fffd||fffd||fffd||776||efbb||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_qanal_accumulatednavreturn
Function f_qanal_accumulatednavreturn(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_qanal_accumulatednavreturn = WindFunc("f_qanal_accumulatednavreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||23b||fffd||fffd||fffd||776||efbb||5b5||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd|,f_qanal_stdnavreturn
Function f_qanal_stdnavreturn(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_qanal_stdnavreturn = WindFunc("f_qanal_stdnavreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||23d||3fb||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|,f_qanal_benchreturn
Function f_qanal_benchreturn(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_qanal_benchreturn = WindFunc("f_qanal_benchreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||23d||3fb||fffd||5fc||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd|,f_qanal_stdbenchreturn
Function f_qanal_stdbenchreturn(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_qanal_stdbenchreturn = WindFunc("f_qanal_stdbenchreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||233||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_qanal_benchdevreturn
Function f_qanal_benchdevreturn(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_qanal_benchdevreturn = WindFunc("f_qanal_benchdevreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||233||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd|,f_qanal_stdbenchdevreturn
Function f_qanal_stdbenchdevreturn(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_qanal_stdbenchdevreturn = WindFunc("f_qanal_stdbenchdevreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|(|4bb||fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_info_firstinvesttype
Function f_info_firstinvesttype(WINDCODE_ As Variant) As Variant
  f_info_firstinvesttype = WindFunc("f_info_firstinvesttype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||435||635||fffd|(|fffd||fffd||fffd||fffd|),f_info_exchmarket
Function f_info_exchmarket(WINDCODE_ As Variant) As Variant
  f_info_exchmarket = WindFunc("f_info_exchmarket", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),f_info_parvalue
Function f_info_parvalue(WINDCODE_ As Variant) As Variant
  f_info_parvalue = WindFunc("f_info_parvalue", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_info_predfundmanager
Function f_info_predfundmanager(WINDCODE_ As Variant) As Variant
  f_info_predfundmanager = WindFunc("f_info_predfundmanager", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_ptmyear
Function f_info_ptmyear(WINDCODE_ As Variant) As Variant
  f_info_ptmyear = WindFunc("f_info_ptmyear", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_ptmday
Function f_info_ptmday(WINDCODE_ As Variant) As Variant
  f_info_ptmday = WindFunc("f_info_ptmday", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_redmstartdate
Function f_info_redmstartdate(WINDCODE_ As Variant) As Variant
  f_info_redmstartdate = WindFunc("f_info_redmstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||2bc||fffd||439||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_custstartdate
Function f_info_custstartdate(WINDCODE_ As Variant) As Variant
  f_info_custstartdate = WindFunc("f_info_custstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||439||73d||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_custenddate
Function f_info_custenddate(WINDCODE_ As Variant) As Variant
  f_info_custenddate = WindFunc("f_info_custenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_date
Function f_issue_date(WINDCODE_ As Variant) As Variant
  f_issue_date = WindFunc("f_issue_date", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||437||fffd||2bd|(|fffd||fffd||fffd||fffd|),f_issue_type
Function f_issue_type(WINDCODE_ As Variant) As Variant
  f_issue_type = WindFunc("f_issue_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||436||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_object
Function f_issue_object(WINDCODE_ As Variant) As Variant
  f_issue_object = WindFunc("f_issue_object", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||737||776||fffd|(|fffd||fffd||fffd||fffd|),f_issue_totalunit
Function f_issue_totalunit(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_issue_totalunit = WindFunc("f_issue_totalunit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_issue_totalunit) <> vbString Then
        f_issue_totalunit = f_issue_totalunit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||43c||6f8||fffd|(|fffd||fffd||fffd||fffd|),f_issue_price
Function f_issue_price(WINDCODE_ As Variant) As Variant
  f_issue_price = WindFunc("f_issue_price", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_initiator
Function f_issue_initiator(WINDCODE_ As Variant) As Variant
  f_issue_initiator = WindFunc("f_issue_initiator", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_leadunderwriter
Function f_issue_leadunderwriter(WINDCODE_ As Variant) As Variant
  f_issue_leadunderwriter = WindFunc("f_issue_leadunderwriter", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||42d||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_coordinator
Function f_issue_coordinator(WINDCODE_ As Variant) As Variant
  f_issue_coordinator = WindFunc("f_issue_coordinator", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f4||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_deputy
Function f_issue_deputy(WINDCODE_ As Variant) As Variant
  f_issue_deputy = WindFunc("f_issue_deputy", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1bc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_nominator
Function f_issue_nominator(WINDCODE_ As Variant) As Variant
  f_issue_nominator = WindFunc("f_issue_nominator", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_registrar
Function f_issue_registrar(WINDCODE_ As Variant) As Variant
  f_issue_registrar = WindFunc("f_issue_registrar", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_numpurchasers
Function f_issue_oef_numpurchasers(WINDCODE_ As Variant) As Variant
  f_issue_oef_numpurchasers = WindFunc("f_issue_oef_numpurchasers", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||437||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_clsperiod
Function f_issue_oef_clsperiod(WINDCODE_ As Variant) As Variant
  f_issue_oef_clsperiod = WindFunc("f_issue_oef_clsperiod", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_cndpurchasers
Function f_issue_oef_cndpurchasers(WINDCODE_ As Variant) As Variant
  f_issue_oef_cndpurchasers = WindFunc("f_issue_oef_cndpurchasers", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||2bd|(|fffd||fffd||fffd||fffd|),f_issue_oef_mthdind
Function f_issue_oef_mthdind(WINDCODE_ As Variant) As Variant
  f_issue_oef_mthdind = WindFunc("f_issue_oef_mthdind", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_minamtind
Function f_issue_oef_minamtind(WINDCODE_ As Variant) As Variant
  f_issue_oef_minamtind = WindFunc("f_issue_oef_minamtind", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_maxamtind
Function f_issue_oef_maxamtind(WINDCODE_ As Variant) As Variant
  f_issue_oef_maxamtind = WindFunc("f_issue_oef_maxamtind", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_startdateind
Function f_issue_oef_startdateind(WINDCODE_ As Variant) As Variant
  f_issue_oef_startdateind = WindFunc("f_issue_oef_startdateind", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||5b9||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_enddateind
Function f_issue_oef_enddateind(WINDCODE_ As Variant) As Variant
  f_issue_oef_enddateind = WindFunc("f_issue_oef_enddateind", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||2bd|(|fffd||fffd||fffd||fffd|),f_issue_oef_mthdinst
Function f_issue_oef_mthdinst(WINDCODE_ As Variant) As Variant
  f_issue_oef_mthdinst = WindFunc("f_issue_oef_mthdinst", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_startdateinst
Function f_issue_oef_startdateinst(WINDCODE_ As Variant) As Variant
  f_issue_oef_startdateinst = WindFunc("f_issue_oef_startdateinst", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||5b9||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_dnddateinst
Function f_issue_oef_dnddateinst(WINDCODE_ As Variant) As Variant
  f_issue_oef_dnddateinst = WindFunc("f_issue_oef_dnddateinst", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_minamtinst
Function f_issue_oef_minamtinst(WINDCODE_ As Variant) As Variant
  f_issue_oef_minamtinst = WindFunc("f_issue_oef_minamtinst", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_oef_maxamtinst
Function f_issue_oef_maxamtinst(WINDCODE_ As Variant) As Variant
  f_issue_oef_maxamtinst = WindFunc("f_issue_oef_maxamtinst", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||ae7a||fffd||fffd||2bc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pchredm_pchstartdate
Function f_pchredm_pchstartdate(WINDCODE_ As Variant) As Variant
  f_pchredm_pchstartdate = WindFunc("f_pchredm_pchstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pchredm_pchminamt
Function f_pchredm_pchminamt(WINDCODE_ As Variant) As Variant
  f_pchredm_pchminamt = WindFunc("f_pchredm_pchminamt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pchredm_pchmaxfee
Function f_pchredm_pchmaxfee(WINDCODE_ As Variant) As Variant
  f_pchredm_pchmaxfee = WindFunc("f_pchredm_pchmaxfee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||637||776||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pchredm_redmminamt
Function f_pchredm_redmminamt(WINDCODE_ As Variant) As Variant
  f_pchredm_redmminamt = WindFunc("f_pchredm_redmminamt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||637||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pchredm_maxredmfee
Function f_pchredm_maxredmfee(WINDCODE_ As Variant) As Variant
  f_pchredm_maxredmfee = WindFunc("f_pchredm_maxredmfee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_inipurchase
Function f_issue_cef_inipurchase(WINDCODE_ As Variant) As Variant
  f_issue_cef_inipurchase = WindFunc("f_issue_cef_inipurchase", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2bd||fffd||fffd||fffd||33b36||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_oversub
Function f_issue_cef_oversub(WINDCODE_ As Variant) As Variant
  f_issue_cef_oversub = WindFunc("f_issue_cef_oversub", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_succratio
Function f_issue_cef_succratio(WINDCODE_ As Variant) As Variant
  f_issue_cef_succratio = WindFunc("f_issue_cef_succratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_listdate
Function f_issue_cef_listdate(WINDCODE_ As Variant) As Variant
  f_issue_cef_listdate = WindFunc("f_issue_cef_listdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_pctchange
Function f_issue_cef_pctchange(WINDCODE_ As Variant) As Variant
  f_issue_cef_pctchange = WindFunc("f_issue_cef_pctchange", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_turn
Function f_issue_cef_turn(WINDCODE_ As Variant) As Variant
  f_issue_cef_turn = WindFunc("f_issue_cef_turn", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||43a||fffd|N|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_npctchange
Function f_issue_cef_npctchange(WINDCODE_ As Variant, Optional N_ As Integer = 5) As Variant
  f_issue_cef_npctchange = WindFunc("f_issue_cef_npctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), N_, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||43a||fffd|N|fffd||57b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_issue_cef_nturn
Function f_issue_cef_nturn(WINDCODE_ As Variant, Optional N_ As Integer = 5) As Variant
  f_issue_cef_nturn = WindFunc("f_issue_cef_nturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), N_, Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_adjustedchange
Function f_nav_adjustedchange(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  f_nav_adjustedchange = WindFunc("f_nav_adjustedchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||6fc||1b5||fffd||3bb||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_accumulatedchange
Function f_nav_accumulatedchange(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  f_nav_accumulatedchange = WindFunc("f_nav_accumulatedchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||533||fffd||fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_adjustedreturn_org
Function f_nav_adjustedreturn_org(WINDCODE_ As Variant, TD_ As Variant) As Variant
  f_nav_adjustedreturn_org = WindFunc("f_nav_adjustedreturn_org", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5||fffd||fffd||534||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_adjustedrelpctchange
Function f_nav_adjustedrelpctchange(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_nav_adjustedrelpctchange = WindFunc("f_nav_adjustedrelpctchange", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), LT_, Null, Null)
End Function

'|4b5||fffd||fffd||fffd||23d||3fb||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_quot_benchreturn
Function f_quot_benchreturn(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  f_quot_benchreturn = WindFunc("f_quot_benchreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6be||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_return
Function f_nav_return(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_nav_return = WindFunc("f_nav_return", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6be||fffd||5b5||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_stddevreturn
Function f_nav_stddevreturn(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_nav_stddevreturn = WindFunc("f_nav_stddevreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||23d||3fb||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_benchreturn
Function f_nav_benchreturn(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_nav_benchreturn = WindFunc("f_nav_benchreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||23d||3fb||fffd||5fc||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_benchstddev
Function f_nav_benchstddev(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_nav_benchstddev = WindFunc("f_nav_benchstddev", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6be||fffd||5b5||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_benchdevreturn
Function f_nav_benchdevreturn(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_nav_benchdevreturn = WindFunc("f_nav_benchdevreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6be||fffd||5b5||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||5fc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nav_stddevnavbench
Function f_nav_stddevnavbench(WINDCODE_ As Variant, D_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_nav_stddevnavbench = WindFunc("f_nav_stddevnavbench", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_dq_swing
Function f_dq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_dq_swing = WindFunc("f_dq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||ae7a||fffd||fffd||fffd||5f4||32c|(|fffd||fffd||fffd||fffd|),f_dq_status
Function f_dq_status(WINDCODE_ As Variant, D_ As Variant) As Variant
  f_dq_status = WindFunc("f_dq_status", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_wq_preclose
Function f_wq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_preclose = WindFunc("f_wq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||73f||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_wq_open
Function f_wq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_open = WindFunc("f_wq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),f_wq_high
Function f_wq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_high = WindFunc("f_wq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),f_wq_low
Function f_wq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_low = WindFunc("f_wq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_wq_close
Function f_wq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_close = WindFunc("f_wq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_wq_highclose
Function f_wq_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_highclose = WindFunc("f_wq_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_wq_lowclose
Function f_wq_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_lowclose = WindFunc("f_wq_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||73e||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_avgprice
Function f_wq_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_avgprice = WindFunc("f_wq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),f_wq_change
Function f_wq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_change = WindFunc("f_wq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_pctchange
Function f_wq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_pctchange = WindFunc("f_wq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||73b||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_turn
Function f_wq_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_turn = WindFunc("f_wq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_avgturn
Function f_wq_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_avgturn = WindFunc("f_wq_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_swing
Function f_wq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_swing = WindFunc("f_wq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_volume
Function f_wq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_wq_volume = WindFunc("f_wq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(f_wq_volume) <> vbString Then
        f_wq_volume = f_wq_volume / UnitVal_
    End If
End Function

'|fffd||733||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_amount
Function f_wq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_wq_amount = WindFunc("f_wq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(f_wq_amount) <> vbString Then
        f_wq_amount = f_wq_amount / UnitVal_
    End If
End Function

'|fffd||73e||fffd||fffd||fffd||2ee|(|fffd||fffd||fffd||fffd|),f_wq_discount
Function f_wq_discount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_discount = WindFunc("f_wq_discount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||73e||fffd||fffd||fffd||2ee||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_discountratio
Function f_wq_discountratio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_wq_discountratio = WindFunc("f_wq_discountratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_highdate
Function f_wq_highdate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_highdate = WindFunc("f_wq_highdate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_lowdate
Function f_wq_lowdate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_lowdate = WindFunc("f_wq_lowdate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_highclose_date
Function f_wq_highclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_highclose_date = WindFunc("f_wq_highclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_wq_lowclose_date
Function f_wq_lowclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_wq_lowclose_date = WindFunc("f_wq_lowclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_mq_preclose
Function f_mq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_preclose = WindFunc("f_mq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||bf||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_mq_open
Function f_mq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_open = WindFunc("f_mq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),f_mq_high
Function f_mq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_high = WindFunc("f_mq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),f_mq_low
Function f_mq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_low = WindFunc("f_mq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_mq_close
Function f_mq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_close = WindFunc("f_mq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_mq_highclose
Function f_mq_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_highclose = WindFunc("f_mq_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_mq_lowclose
Function f_mq_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_lowclose = WindFunc("f_mq_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||be||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_avgprice
Function f_mq_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_avgprice = WindFunc("f_mq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),f_mq_change
Function f_mq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_change = WindFunc("f_mq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_pctchange
Function f_mq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_pctchange = WindFunc("f_mq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||bb||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_turn
Function f_mq_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_turn = WindFunc("f_mq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_avgturn
Function f_mq_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_avgturn = WindFunc("f_mq_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_swing
Function f_mq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_swing = WindFunc("f_mq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_volume
Function f_mq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_mq_volume = WindFunc("f_mq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(f_mq_volume) <> vbString Then
        f_mq_volume = f_mq_volume / UnitVal_
    End If
End Function

'|fffd||b3||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_amount
Function f_mq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_mq_amount = WindFunc("f_mq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(f_mq_amount) <> vbString Then
        f_mq_amount = f_mq_amount / UnitVal_
    End If
End Function

'|fffd||be||fffd||fffd||fffd||2ee|(|fffd||fffd||fffd||fffd|),f_mq_discount
Function f_mq_discount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_discount = WindFunc("f_mq_discount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||be||fffd||fffd||fffd||2ee||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_discountratio
Function f_mq_discountratio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_mq_discountratio = WindFunc("f_mq_discountratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_highdate
Function f_mq_highdate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_highdate = WindFunc("f_mq_highdate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_lowdate
Function f_mq_lowdate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_lowdate = WindFunc("f_mq_lowdate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_highclose_date
Function f_mq_highclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_highclose_date = WindFunc("f_mq_highclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_lowclose_date
Function f_mq_lowclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_mq_lowclose_date = WindFunc("f_mq_lowclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||534||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_mq_relpctchange
Function f_mq_relpctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_mq_relpctchange = WindFunc("f_mq_relpctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_yq_preclose
Function f_yq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_preclose = WindFunc("f_yq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||afea||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_yq_open
Function f_yq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_open = WindFunc("f_yq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|(|fffd||fffd||fffd||fffd|),f_yq_high
Function f_yq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_high = WindFunc("f_yq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|(|fffd||fffd||fffd||fffd|),f_yq_low
Function f_yq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_low = WindFunc("f_yq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_yq_close
Function f_yq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_close = WindFunc("f_yq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_yq_highclose
Function f_yq_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_highclose = WindFunc("f_yq_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_yq_lowclose
Function f_yq_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_lowclose = WindFunc("f_yq_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_avgprice
Function f_yq_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_avgprice = WindFunc("f_yq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd|(|fffd||fffd||fffd||fffd|),f_yq_change
Function f_yq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_change = WindFunc("f_yq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_pctchange
Function f_yq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_pctchange = WindFunc("f_yq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||aefb||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_turn
Function f_yq_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_turn = WindFunc("f_yq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_avgturn
Function f_yq_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_avgturn = WindFunc("f_yq_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_swing
Function f_yq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_swing = WindFunc("f_yq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_volume
Function f_yq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_yq_volume = WindFunc("f_yq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(f_yq_volume) <> vbString Then
        f_yq_volume = f_yq_volume / UnitVal_
    End If
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_amount
Function f_yq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_yq_amount = WindFunc("f_yq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
    If VarType(f_yq_amount) <> vbString Then
        f_yq_amount = f_yq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2ee|(|fffd||fffd||fffd||fffd|),f_yq_discount
Function f_yq_discount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_discount = WindFunc("f_yq_discount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2ee||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_discountratio
Function f_yq_discountratio(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_yq_discountratio = WindFunc("f_yq_discountratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_highdate
Function f_yq_highdate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_highdate = WindFunc("f_yq_highdate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_lowdate
Function f_yq_lowdate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_lowdate = WindFunc("f_yq_lowdate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_highclose_date
Function f_yq_highclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_highclose_date = WindFunc("f_yq_highclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_lowclose_date
Function f_yq_lowclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional T_ As Integer = 1) As Variant
  f_yq_lowclose_date = WindFunc("f_yq_lowclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), T_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||534||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_yq_relpctchange
Function f_yq_relpctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_yq_relpctchange = WindFunc("f_yq_relpctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_), LT_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_pq_highclose
Function f_pq_highclose(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  f_pq_highclose = WindFunc("f_pq_highclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),f_pq_lowclose
Function f_pq_lowclose(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  f_pq_lowclose = WindFunc("f_pq_lowclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pq_swing
Function f_pq_swing(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  f_pq_swing = WindFunc("f_pq_swing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2ee|(|fffd||fffd||fffd||fffd|),f_pq_discount
Function f_pq_discount(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  f_pq_discount = WindFunc("f_pq_discount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2ee||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pq_discountratio
Function f_pq_discountratio(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant) As Variant
  f_pq_discountratio = WindFunc("f_pq_discountratio", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pq_highdate
Function f_pq_highdate(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  f_pq_highdate = WindFunc("f_pq_highdate", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pq_lowdate
Function f_pq_lowdate(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  f_pq_lowdate = WindFunc("f_pq_lowdate", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pq_highclose_date
Function f_pq_highclose_date(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  f_pq_highclose_date = WindFunc("f_pq_highclose_date", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pq_lowclose_date
Function f_pq_lowclose_date(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1) As Variant
  f_pq_lowclose_date = WindFunc("f_pq_lowclose_date", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, Null, Null)
End Function

'|fffd||fffd||534||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_pq_relpctchange
Function f_pq_relpctchange(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional LT_ As Integer = 1) As Variant
  f_pq_relpctchange = WindFunc("f_pq_relpctchange", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), LT_, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_mstar1y
Function f_rating_mstar1y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_mstar1y = WindFunc("f_rating_mstar1y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_mstar2y
Function f_rating_mstar2y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_mstar2y = WindFunc("f_rating_mstar2y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_mstar3y
Function f_rating_mstar3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_mstar3y = WindFunc("f_rating_mstar3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'Wind1|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_wind1y
Function f_rating_wind1y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_wind1y = WindFunc("f_rating_wind1y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'Wind2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_wind2y
Function f_rating_wind2y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_wind2y = WindFunc("f_rating_wind2y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'Wind3|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_wind3y
Function f_rating_wind3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_wind3y = WindFunc("f_rating_wind3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'Wind|fffd||6fa||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_windavg
Function f_rating_windavg(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_windavg = WindFunc("f_rating_windavg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_yinhe1y
Function f_rating_yinhe1y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_yinhe1y = WindFunc("f_rating_yinhe1y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_yinhe2y
Function f_rating_yinhe2y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_yinhe2y = WindFunc("f_rating_yinhe2y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_rating_yinhe3y
Function f_rating_yinhe3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_yinhe3y = WindFunc("f_rating_yinhe3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||73b||631||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip1ytotalret
Function f_rating_lip1ytotalret(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip1ytotalret = WindFunc("f_rating_lip1ytotalret", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip1ypre
Function f_rating_lip1ypre(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip1ypre = WindFunc("f_rating_lip1ypre", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||236||fffd||fffd||631||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip1ycon
Function f_rating_lip1ycon(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip1ycon = WindFunc("f_rating_lip1ycon", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip1yexp
Function f_rating_lip1yexp(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip1yexp = WindFunc("f_rating_lip1yexp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||73b||631||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip2ytotalret
Function f_rating_lip2ytotalret(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip2ytotalret = WindFunc("f_rating_lip2ytotalret", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip2yrre
Function f_rating_lip2yrre(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip2yrre = WindFunc("f_rating_lip2yrre", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||236||fffd||fffd||631||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip2ycon
Function f_rating_lip2ycon(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip2ycon = WindFunc("f_rating_lip2ycon", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip2yexp
Function f_rating_lip2yexp(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip2yexp = WindFunc("f_rating_lip2yexp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||73b||631||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip3ytotalret
Function f_rating_lip3ytotalret(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip3ytotalret = WindFunc("f_rating_lip3ytotalret", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip3ypre
Function f_rating_lip3ypre(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip3ypre = WindFunc("f_rating_lip3ypre", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||236||fffd||fffd||631||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip3yconsret
Function f_rating_lip3yconsret(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip3yconsret = WindFunc("f_rating_lip3yconsret", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|fffd||fffd||fffd||fffd|),f_rating_lip3yexp
Function f_rating_lip3yexp(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_lip3yexp = WindFunc("f_rating_lip3yexp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'Wind5|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_wind5y
Function f_rating_wind5y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_wind5y = WindFunc("f_rating_wind5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||368|3|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_haitong3y
Function f_rating_haitong3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_haitong3y = WindFunc("f_rating_haitong3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function
'|fffd||fffd||fffd||fffd|5|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_mstar5y
Function f_rating_mstar5y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_mstar5y = WindFunc("f_rating_mstar5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||3fa||fffd||5a4||22f|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_shanghaioverall3y
Function f_rating_shanghaioverall3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaioverall3y = WindFunc("f_rating_shanghaioverall3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||3fa||fffd||5a4||22f|5|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_shanghaioverall5y
Function f_rating_shanghaioverall5y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaioverall5y = WindFunc("f_rating_shanghaioverall5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||3fa||fffd||5a4||22f|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||571||fffd||fffd||2a3||fffd|,f_rating_shanghaisharpe3y
Function f_rating_shanghaisharpe3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaisharpe3y = WindFunc("f_rating_shanghaisharpe3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function
'|fffd||3fa||fffd||5a4||22f|5|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||571||fffd||fffd||2a3||fffd|,f_rating_shanghaisharpe5y
Function f_rating_shanghaisharpe5y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaisharpe5y = WindFunc("f_rating_shanghaisharpe5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||3fa||fffd||5a4||22f|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||461||5a4||fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_shanghaistocking3y
Function f_rating_shanghaistocking3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaistocking3y = WindFunc("f_rating_shanghaistocking3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||3fa||fffd||5a4||22f|5|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||461||5a4||fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_shanghaistocking5y
Function f_rating_shanghaistocking5y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaistocking5y = WindFunc("f_rating_shanghaistocking5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||3fa||fffd||5a4||22f|3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_shanghaitiming3y
Function f_rating_shanghaitiming3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaitiming3y = WindFunc("f_rating_shanghaitiming3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||3fa||fffd||5a4||22f|5|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_shanghaitiming5y
Function f_rating_shanghaitiming5y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_shanghaitiming5y = WindFunc("f_rating_shanghaitiming5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_zhaoshang3y
Function f_rating_zhaoshang3y(WINDCODE_ As Variant, D_ As Integer, M_ As Integer) As Variant
  f_rating_zhaoshang3y = WindFunc("f_rating_zhaoshang3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), D_, M_, Null, Null, Null)
End Function

'Alpha(|fffd||fffd||fffd||fffd|),f_risk_alpha
Function f_risk_alpha(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional INDEX_ As String) As Variant
  f_risk_alpha = WindFunc("f_risk_alpha", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, INDEX_)
End Function

'Beta(|fffd||fffd||fffd||fffd|),f_risk_beta
Function f_risk_beta(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional INDEX_ As String) As Variant
  f_risk_beta = WindFunc("f_risk_beta", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, INDEX_)
End Function

'Sharpe(|fffd||fffd||fffd||fffd|),f_risk_sharpe
Function f_risk_sharpe(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  f_risk_sharpe = WindFunc("f_risk_sharpe", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_)
End Function

'Treynor(|fffd||fffd||fffd||fffd|),f_risk_treynor
Function f_risk_treynor(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  f_risk_treynor = WindFunc("f_risk_treynor", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'Jensen(|fffd||fffd||fffd||fffd|),f_risk_jensen
Function f_risk_jensen(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  f_risk_jensen = WindFunc("f_risk_jensen", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'|461||2b1||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_time
Function f_risk_time(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  f_risk_time = WindFunc("f_risk_time", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'|461||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_stock
Function f_risk_stock(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  f_risk_stock = WindFunc("f_risk_stock", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_inforatio
Function f_risk_inforatio(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 1, Optional LT_ As Integer = 1, Optional C_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  f_risk_inforatio = WindFunc("f_risk_inforatio", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, C_, INDEX_)
End Function

'|461||2b1||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_timeranking
Function f_risk_timeranking(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 2, Optional CALCTHOD_ As Integer = 1, Optional NORISKYIELD_ As Integer = 1, Optional UNDERLYINGINDEX_ As String = "000001.SH", Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_risk_timeranking = WindFunc("f_risk_timeranking", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_, CALCTHOD_, NORISKYIELD_, UNDERLYINGINDEX_, ATTRIBUTE_)
End Function

'|461||fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_stockranking
Function f_risk_stockranking(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 2, Optional CALCTHOD_ As Integer = 1, Optional NORISKYIELD_ As Integer = 1, Optional UNDERLYINGINDEX_ As String = "000001.SH", Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_risk_stockranking = WindFunc("f_risk_stockranking", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_, CALCTHOD_, NORISKYIELD_, UNDERLYINGINDEX_, ATTRIBUTE_)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_inforatioranking
Function f_risk_inforatioranking(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 2, Optional CALCTHOD_ As Integer = 1, Optional NORISKYIELD_ As Integer = 1, Optional UNDERLYINGINDEX_ As String = "000001.SH", Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_risk_inforatioranking = WindFunc("f_risk_inforatioranking", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_, CALCTHOD_, NORISKYIELD_, UNDERLYINGINDEX_, ATTRIBUTE_)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_avgreturn
Function f_risk_avgreturn(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1) As Variant
  f_risk_avgreturn = WindFunc("f_risk_avgreturn", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_returnyearly
Function f_risk_returnyearly(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1) As Variant
  f_risk_returnyearly = WindFunc("f_risk_returnyearly", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, Null)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_gemreturn
Function f_risk_gemreturn(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1) As Variant
  f_risk_gemreturn = WindFunc("f_risk_gemreturn", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_stdev
Function f_risk_stdev(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1) As Variant
  f_risk_stdev = WindFunc("f_risk_stdev", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, Null)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_stdevyearly
Function f_risk_stdevyearly(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1) As Variant
  f_risk_stdevyearly = WindFunc("f_risk_stdevyearly", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, Null)
End Function

'|fffd||27e||fffd||3f5||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_r2
Function f_risk_r2(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional INDEX_ As String) As Variant
  f_risk_r2 = WindFunc("f_risk_r2", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, INDEX_)
End Function

'|fffd||fffd||3f5||373||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_nonsysrisk
Function f_risk_nonsysrisk(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional INDEX_ As String) As Variant
  f_risk_nonsysrisk = WindFunc("f_risk_nonsysrisk", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, INDEX_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_trackerror
Function f_risk_trackerror(WINDCODE_ As Variant, TD1_ As Variant, TD2_ As Variant, Optional T_ As Integer = 2, Optional LT_ As Integer = 1, Optional INDEX_ As String) As Variant
  f_risk_trackerror = WindFunc("f_risk_trackerror", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), T_, LT_, INDEX_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd||437||776||fffd|(|fffd||fffd||fffd||fffd|),f_holder_mngemp_holding
Function f_holder_mngemp_holding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_holder_mngemp_holding = WindFunc("f_holder_mngemp_holding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_holder_mngemp_holding) <> vbString Then
        f_holder_mngemp_holding = f_holder_mngemp_holding / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_holder_mngemp_holdingpct
Function f_holder_mngemp_holdingpct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  f_holder_mngemp_holdingpct = WindFunc("f_holder_mngemp_holdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||ba||3fc||1b3||fffd||fffd||437||776||fffd|(|fffd||fffd||fffd||fffd|),f_holder_director_holding
Function f_holder_director_holding(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  f_holder_director_holding = WindFunc("f_holder_director_holding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||ba||3fc||1b3||fffd||fffd||431||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_holder_director_holdingpct
Function f_holder_director_holdingpct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  f_holder_director_holdingpct = WindFunc("f_holder_director_holdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||437||776||fffd|(|fffd||fffd||fffd||fffd|),f_holder_fundmanager_holding
Function f_holder_fundmanager_holding(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  f_holder_fundmanager_holding = WindFunc("f_holder_fundmanager_holding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_holder_fundmanager_holdingpct
Function f_holder_fundmanager_holdingpct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  f_holder_fundmanager_holdingpct = WindFunc("f_holder_fundmanager_holdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_anal_income
Function f_anal_income(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_anal_income = WindFunc("f_anal_income", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_anal_income) <> vbString Then
        f_anal_income = f_anal_income / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6bc||fffd||228||1bd||fffd||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_anal_avgnetincomeperunit
Function f_anal_avgnetincomeperunit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_anal_avgnetincomeperunit = WindFunc("f_anal_avgnetincomeperunit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_anal_avgnetincomeperunit) <> vbString Then
        f_anal_avgnetincomeperunit = f_anal_avgnetincomeperunit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_anal_avgnavreturn
Function f_anal_avgnavreturn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  f_anal_avgnavreturn = WindFunc("f_anal_avgnavreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||23b||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_qanal_income
Function f_qanal_income(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_qanal_income = WindFunc("f_qanal_income", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_qanal_income) <> vbString Then
        f_qanal_income = f_qanal_income / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||fffd||fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_qanal_decutednetincome
Function f_qanal_decutednetincome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_qanal_decutednetincome = WindFunc("f_qanal_decutednetincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_qanal_decutednetincome) <> vbString Then
        f_qanal_decutednetincome = f_qanal_decutednetincome / UnitVal_
    End If
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||776||ec7e||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_qanal_avgnetincomeperunit
Function f_qanal_avgnetincomeperunit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_qanal_avgnetincomeperunit = WindFunc("f_qanal_avgnetincomeperunit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_qanal_avgnetincomeperunit) <> vbString Then
        f_qanal_avgnetincomeperunit = f_qanal_avgnetincomeperunit / UnitVal_
    End If
End Function

'|1f0|5|fffd||fffd||fffd||632||fffd||56e||22f||fffd||fffd||5b5||fffd||3fc||fffd||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_prt_top5tobond
Function f_prt_top5tobond(WINDCODE_ As Variant, D_ As Variant, Optional COUNT_ As Integer) As Variant
  f_prt_top5tobond = WindFunc("f_prt_top5tobond", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(D_), COUNT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_existingyear
Function f_info_existingyear(WINDCODE_ As Variant) As Variant
  f_info_existingyear = WindFunc("f_info_existingyear", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||7f5||fffd||fffd||bb||631||fffd|,f_absolute_highestmonthlyreturn
Function f_absolute_highestmonthlyreturn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_highestmonthlyreturn = WindFunc("f_absolute_highestmonthlyreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||375||fffd||fffd||bb||631||fffd|,f_absolute_lowestmonthlyreturn
Function f_absolute_lowestmonthlyreturn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_lowestmonthlyreturn = WindFunc("f_absolute_lowestmonthlyreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_absolute_conupsmonth
Function f_absolute_conupsmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_conupsmonth = WindFunc("f_absolute_conupsmonth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_absolute_condownsmonth
Function f_absolute_condownsmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_condownsmonth = WindFunc("f_absolute_condownsmonth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||ece4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_absolute_longestconupmonth
Function f_absolute_longestconupmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_longestconupmonth = WindFunc("f_absolute_longestconupmonth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||ece4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd|,f_absolute_maxincreaseofupmonth
Function f_absolute_maxincreaseofupmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_maxincreaseofupmonth = WindFunc("f_absolute_maxincreaseofupmonth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||ece4||fffd||fffd||fffd||fffd||fffd||b5||fffd||fffd||fffd||fffd||fffd|,f_absolute_longestcondownmonth
Function f_absolute_longestcondownmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_longestcondownmonth = WindFunc("f_absolute_longestcondownmonth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||ece4||fffd||fffd||fffd||fffd||fffd||b5||fffd||fffd||fffd||fffd||b5||fffd||fffd||fffd|,f_absolute_maxfallofdownmonth
Function f_absolute_maxfallofdownmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_maxfallofdownmonth = WindFunc("f_absolute_maxfallofdownmonth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||bb||631||fffd|,f_absolute_highestreturnofconmonth
Function f_absolute_highestreturnofconmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional MONTHS_ As Integer = 6) As Variant
  f_absolute_highestreturnofconmonth = WindFunc("f_absolute_highestreturnofconmonth", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), MONTHS_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|N|fffd||bb||631||fffd|,f_absolute_lowestreturnofconmonth
Function f_absolute_lowestreturnofconmonth(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional MONTHS_ As Integer = 6) As Variant
  f_absolute_lowestreturnofconmonth = WindFunc("f_absolute_lowestreturnofconmonth", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), MONTHS_)
End Function

'|fffd||fffd||fffd||fffd|/|fffd||b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_absolute_updownmonthratio
Function f_absolute_updownmonthratio(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_updownmonthratio = WindFunc("f_absolute_updownmonthratio", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||b7||fffd||57c||fffd||fffd|,f_absolute_profitmonthper
Function f_absolute_profitmonthper(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_profitmonthper = WindFunc("f_absolute_profitmonthper", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd|,f_absolute_avgincome
Function f_absolute_avgincome(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_avgincome = WindFunc("f_absolute_avgincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|1bd||fffd||fffd||fffd||fffd||2a7|,f_absolute_avgloss
Function f_absolute_avgloss(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_avgloss = WindFunc("f_absolute_avgloss", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||b6||238||fffd||fffd||3fb||631||fffd|,f_absolute_monthlycompositereturn
Function f_absolute_monthlycompositereturn(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_monthlycompositereturn = WindFunc("f_absolute_monthlycompositereturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||437||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd|,f_risk_downsideriskranking
Function f_risk_downsideriskranking(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CalcMethod_ As Integer = 1, Optional NRY_ As Integer = 1, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_risk_downsideriskranking = WindFunc("f_risk_downsideriskranking", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), CalcMethod_, NRY_, ATTRIBUTE_)
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd|,f_risk_annualvolranking
Function f_risk_annualvolranking(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 1, Optional CalcMethod_ As Integer = 1, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_risk_annualvolranking = WindFunc("f_risk_annualvolranking", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), CalcTerm_, CalcMethod_, ATTRIBUTE_)
End Function

'|fffd||fffd||fffd||fffd||175||fffd||fffd||fffd||fffd|,f_risk_sortino
Function f_risk_sortino(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 1, Optional CalcMethod_ As Integer = 1, Optional NRY_ As Integer = 1) As Variant
  f_risk_sortino = WindFunc("f_risk_sortino", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), CalcTerm_, CalcMethod_, NRY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_risk_trackerrorranking
Function f_risk_trackerrorranking(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 1, Optional CalcMethod_ As Integer = 1, Optional INDEX_ As String, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_risk_trackerrorranking = WindFunc("f_risk_trackerrorranking", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), CalcTerm_, CalcMethod_, INDEX_, ATTRIBUTE_)
End Function

'|1bd||fffd||fffd||fffd||5b2||fffd||2b1||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd|,f_style_avgpositiontimeranking
Function f_style_avgpositiontimeranking(WINDCODE_ As Variant, Optional Year_ As Integer = 1, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_style_avgpositiontimeranking = WindFunc("f_style_avgpositiontimeranking", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Year_, ATTRIBUTE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|,f_info_substartdate
Function f_info_substartdate(WINDCODE_ As Variant) As Variant
  f_info_substartdate = WindFunc("f_info_substartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1bb||fffd||fffd||fffd||fffd||fffd|,f_info_plantype
Function f_info_plantype(WINDCODE_ As Variant) As Variant
  f_info_plantype = WindFunc("f_info_plantype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd||fffd||fffd||221||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_performancefeeornot
Function f_info_performancefeeornot(WINDCODE_ As Variant) As Variant
  f_info_performancefeeornot = WindFunc("f_info_performancefeeornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd|,f_info_performancefeemethod
Function f_info_performancefeemethod(WINDCODE_ As Variant) As Variant
  f_info_performancefeemethod = WindFunc("f_info_performancefeemethod", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,f_info_mgntfeeexplain
Function f_info_mgntfeeexplain(WINDCODE_ As Variant) As Variant
  f_info_mgntfeeexplain = WindFunc("f_info_mgntfeeexplain", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||123||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||33c||fffd||fffd||fffd||fffd||fffd||fffd||1a3||fffd|,f_info_qsimilarproductsimilarranking
Function f_info_qsimilarproductsimilarranking(WINDCODE_ As Variant, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_info_qsimilarproductsimilarranking = WindFunc("f_info_qsimilarproductsimilarranking", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ATTRIBUTE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_trusttype
Function f_info_trusttype(WINDCODE_ As Variant) As Variant
  f_info_trusttype = WindFunc("f_info_trusttype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||2f9||336||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_trusteemgntfee
Function f_info_trusteemgntfee(WINDCODE_ As Variant) As Variant
  f_info_trusteemgntfee = WindFunc("f_info_trusteemgntfee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|376||fffd||2b9||fffd||fffd||2b9||336||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_invadvisermgntfee
Function f_info_invadvisermgntfee(WINDCODE_ As Variant) As Variant
  f_info_invadvisermgntfee = WindFunc("f_info_invadvisermgntfee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_expectedrateofreturn
Function f_info_expectedrateofreturn(WINDCODE_ As Variant) As Variant
  f_info_expectedrateofreturn = WindFunc("f_info_expectedrateofreturn", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd||1e79||fffd||fffd||fffd||fffd||1b7|,f_info_structuredornot
Function f_info_structuredornot(WINDCODE_ As Variant) As Variant
  f_info_structuredornot = WindFunc("f_info_structuredornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,f_info_trustee
Function f_info_trustee(WINDCODE_ As Variant) As Variant
  f_info_trustee = WindFunc("f_info_trustee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_securitiesbroker
Function f_info_securitiesbroker(WINDCODE_ As Variant) As Variant
  f_info_securitiesbroker = WindFunc("f_info_securitiesbroker", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||435||fffd|,f_info_issuingplace
Function f_info_issuingplace(WINDCODE_ As Variant) As Variant
  f_info_issuingplace = WindFunc("f_info_issuingplace", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,f_info_floatingratenote
Function f_info_floatingratenote(WINDCODE_ As Variant) As Variant
  f_info_floatingratenote = WindFunc("f_info_floatingratenote", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd|(|fffd||fffd||fffd||fffd|/|4bb||fffd||fffd|),f_info_prioritytogeneral
Function f_info_prioritytogeneral(WINDCODE_ As Variant) As Variant
  f_info_prioritytogeneral = WindFunc("f_info_prioritytogeneral", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||43a||fffd||36c||fffd||fffd||fffd||fffd|,f_info_issuedcontractamount
Function f_info_issuedcontractamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_issuedcontractamount = WindFunc("f_info_issuedcontractamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_issuedcontractamount) <> vbString Then
        f_info_issuedcontractamount = f_info_issuedcontractamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6fd||fffd||5b9||fffd||fffd||fffd||fffd|,f_info_subenddate
Function f_info_subenddate(WINDCODE_ As Variant) As Variant
  f_info_subenddate = WindFunc("f_info_subenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||427||fffd||3f9||fffd||fffd||fffd||fffd||fffd|,f_info_effsubscrholederno
Function f_info_effsubscrholederno(WINDCODE_ As Variant) As Variant
  f_info_effsubscrholederno = WindFunc("f_info_effsubscrholederno", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|5f7||fffd||fffd||fffd||3f9||fffd||fffd||fffd||37d||fffd||fffd|,f_info_minaddbuyamount
Function f_info_minaddbuyamount(WINDCODE_ As Variant) As Variant
  f_info_minaddbuyamount = WindFunc("f_info_minaddbuyamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,f_info_opendayillus
Function f_info_opendayillus(WINDCODE_ As Variant) As Variant
  f_info_opendayillus = WindFunc("f_info_opendayillus", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,f_info_closedayillus
Function f_info_closedayillus(WINDCODE_ As Variant) As Variant
  f_info_closedayillus = WindFunc("f_info_closedayillus", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_topfundname
Function f_prt_topfundname(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topfundname = WindFunc("f_prt_topfundname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_topfundcode
Function f_prt_topfundcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topfundcode = WindFunc("f_prt_topfundcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||5bb||fffd||fffd||fffd||5b2||fffd||fffd||fffd||fffd||fffd|,f_prt_topfundquantity
Function f_prt_topfundquantity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topfundquantity = WindFunc("f_prt_topfundquantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topfundquantity) <> vbString Then
        f_prt_topfundquantity = f_prt_topfundquantity / UnitVal_
    End If
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,f_prt_topfundvalue
Function f_prt_topfundvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_topfundvalue = WindFunc("f_prt_topfundvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
    If VarType(f_prt_topfundvalue) <> vbString Then
        f_prt_topfundvalue = f_prt_topfundvalue / UnitVal_
    End If
End Function

'|fffd||632||5bb||fffd||fffd||fffd||5b2||5b1||4daf|,f_prt_topfundholdingchanging
Function f_prt_topfundholdingchanging(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topfundholdingchanging = WindFunc("f_prt_topfundholdingchanging", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topfundholdingchanging) <> vbString Then
        f_prt_topfundholdingchanging = f_prt_topfundholdingchanging / UnitVal_
    End If
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_heavilyheldfundtofund
Function f_prt_heavilyheldfundtofund(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldfundtofund = WindFunc("f_prt_heavilyheldfundtofund", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_heavilyheldfundtonav
Function f_prt_heavilyheldfundtonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldfundtonav = WindFunc("f_prt_heavilyheldfundtonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_heavilyheldfundtoasset
Function f_prt_heavilyheldfundtoasset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldfundtoasset = WindFunc("f_prt_heavilyheldfundtoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|1f0|N|fffd||fffd||fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||5b5||fffd||3fc||fffd||57c||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_topfundtofund
Function f_prt_topfundtofund(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topfundtofund = WindFunc("f_prt_topfundtofund", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|1f0|N|fffd||fffd||fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||5b5||fffd||3fc||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_topnfundtonav
Function f_prt_topnfundtonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topnfundtonav = WindFunc("f_prt_topnfundtonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,f_prt_heavilyheldfundperchange
Function f_prt_heavilyheldfundperchange(WINDCODE_ As Variant, REPORTDATE_ As Variant, SEQ_ As Integer, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_prt_heavilyheldfundperchange = WindFunc("f_prt_heavilyheldfundperchange", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_, GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||632||5bb||fffd||fffd||fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||fffd|,f_prt_fundnooffunds
Function f_prt_fundnooffunds(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_fundnooffunds = WindFunc("f_prt_fundnooffunds", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||fffd|,f_prt_topsecuritiename
Function f_prt_topsecuritiename(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topsecuritiename = WindFunc("f_prt_topsecuritiename", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||fffd|,f_prt_topsecuritiecode
Function f_prt_topsecuritiecode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topsecuritiecode = WindFunc("f_prt_topsecuritiecode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||fffd|,f_prt_topsecuritietype
Function f_prt_topsecuritietype(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topsecuritietype = WindFunc("f_prt_topsecuritietype", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||fffd||5a4||22f||fffd||5b2||fffd||fffd||fffd||fffd||fffd|,f_prt_topsecuritiequantity
Function f_prt_topsecuritiequantity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topsecuritiequantity = WindFunc("f_prt_topsecuritiequantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topsecuritiequantity) <> vbString Then
        f_prt_topsecuritiequantity = f_prt_topsecuritiequantity / UnitVal_
    End If
End Function

'|fffd||632||fffd||5a4||22f||fffd||5b2||fffd||fffd||fffd||5b5|,f_prt_topsecuritievalue
Function f_prt_topsecuritievalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  f_prt_topsecuritievalue = WindFunc("f_prt_topsecuritievalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
    If VarType(f_prt_topsecuritievalue) <> vbString Then
        f_prt_topsecuritievalue = f_prt_topsecuritievalue / UnitVal_
    End If
End Function

'|fffd||632||fffd||5a4||22f||fffd||5b2||5b1||4daf|,f_prt_topsecuritieholdingchanging
Function f_prt_topsecuritieholdingchanging(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topsecuritieholdingchanging = WindFunc("f_prt_topsecuritieholdingchanging", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topsecuritieholdingchanging) <> vbString Then
        f_prt_topsecuritieholdingchanging = f_prt_topsecuritieholdingchanging / UnitVal_
    End If
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||5b5||57c||5a4||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_heavilyheldsectosec
Function f_prt_heavilyheldsectosec(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldsectosec = WindFunc("f_prt_heavilyheldsectosec", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_heavilyheldsectonav
Function f_prt_heavilyheldsectonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldsectonav = WindFunc("f_prt_heavilyheldsectonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_heavilyheldsectoasset
Function f_prt_heavilyheldsectoasset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_heavilyheldsectoasset = WindFunc("f_prt_heavilyheldsectoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|1f0|N|fffd||fffd||fffd||632||fffd||5a4||22f||fffd||fffd||5b5||fffd||3fc||fffd||57c||5a4||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_topsectosec
Function f_prt_topsectosec(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topsectosec = WindFunc("f_prt_topsectosec", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|1f0|N|fffd||fffd||fffd||632||fffd||5a4||22f||fffd||fffd||5b5||fffd||3fc||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_topnsectonav
Function f_prt_topnsectonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_topnsectonav = WindFunc("f_prt_topnsectonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||632||fffd||5a4||22f||fffd||1f5||fffd||fffd||fffd|,f_prt_heavilyheldsecperchange
Function f_prt_heavilyheldsecperchange(WINDCODE_ As Variant, REPORTDATE_ As Variant, SEQ_ As Integer, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_prt_heavilyheldsecperchange = WindFunc("f_prt_heavilyheldsecperchange", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_, GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||632||fffd||5a4||22f||fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||fffd|,f_prt_fundnoofsec
Function f_prt_fundnoofsec(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_prt_fundnoofsec = WindFunc("f_prt_fundnoofsec", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), SEQ_)
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||fffd|,f_info_manager_enddate
Function f_info_manager_enddate(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_info_manager_enddate = WindFunc("f_info_manager_enddate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_)
End Function

'|fffd||fffd||5b0||fffd||aeef||fffd||631||fffd|,f_nav_periodicannualizedreturn
Function f_nav_periodicannualizedreturn(WINDCODE_ As Variant, Optional SEQ_ As Integer = 1) As Variant
  f_nav_periodicannualizedreturn = WindFunc("f_nav_periodicannualizedreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), SEQ_)
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||33c||fffd||fffd||fffd||fffd||fffd||fffd||1a3||fffd|,f_nav_lcqperiodreturnranking
Function f_nav_lcqperiodreturnranking(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant, Optional ATTRIBUTE_ As Integer = 1) As Variant
  f_nav_lcqperiodreturnranking = WindFunc("f_nav_lcqperiodreturnranking", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_), ATTRIBUTE_)
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fd||13c||fffd||fffd|,f_nav_xtqperiodreturnranking
Function f_nav_xtqperiodreturnranking(WINDCODE_ As Variant, Optional TD1_ As Variant, Optional TD2_ As Variant) As Variant
  f_nav_xtqperiodreturnranking = WindFunc("f_nav_xtqperiodreturnranking", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TD1_), GetValidDate(TD2_))
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||776||ec7e||fffd||6be||fffd||fffd||fffd||fffd||fffd|,f_qanal_avgunitincome
Function f_qanal_avgunitincome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_qanal_avgunitincome = WindFunc("f_qanal_avgunitincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_qanal_avgunitincome) <> vbString Then
        f_qanal_avgunitincome = f_qanal_avgunitincome / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7f5||fffd||3bb||fffd||fffd||5b5|,f_nav_highestnav
Function f_nav_highestnav(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_nav_highestnav = WindFunc("f_nav_highestnav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||375||fffd||3bb||fffd||fffd||5b5|,f_nav_lowestnav
Function f_nav_lowestnav(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_nav_lowestnav = WindFunc("f_nav_lowestnav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7f8||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5|,f_nav_highestadjustednav
Function f_nav_highestadjustednav(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_nav_highestadjustednav = WindFunc("f_nav_highestadjustednav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||378||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5|,f_nav_lowestadjustednav
Function f_nav_lowestadjustednav(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_nav_lowestadjustednav = WindFunc("f_nav_lowestadjustednav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||1b5||fffd||3bb||fffd||fffd||5b5|,f_nav_highestaccumulatednav
Function f_nav_highestaccumulatednav(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_nav_highestaccumulatednav = WindFunc("f_nav_highestaccumulatednav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fc||1b5||fffd||3bb||fffd||fffd||5b5|,f_nav_lowestaccumulatednav
Function f_nav_lowestaccumulatednav(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_nav_lowestaccumulatednav = WindFunc("f_nav_lowestaccumulatednav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'IOPV(|fffd||fffd||fffd||fffd|),f_nav_iopv
Function f_nav_iopv(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
  f_nav_iopv = WindFunc("f_nav_iopv", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_))
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b1||fffd||733||271||fffd|(|fffd||fffd||fffd||fffd|),f_prt_buystockcost
Function f_prt_buystockcost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_prt_buystockcost = WindFunc("f_prt_buystockcost", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_buystockcost) <> vbString Then
        f_prt_buystockcost = f_prt_buystockcost / UnitVal_
    End If
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_prt_buystockcost
Function f_prt_sellstockincome(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_prt_sellstockincome = WindFunc("f_prt_sellstockincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_sellstockincome) <> vbString Then
        f_prt_sellstockincome = f_prt_sellstockincome / UnitVal_
    End If
End Function
'|fffd||1f7||fffd||5bc||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_structuredfundornot
Function f_info_structuredfundornot(WINDCODE_ As Variant) As Variant
  f_info_structuredfundornot = WindFunc("f_info_structuredfundornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function
'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_daystoconversion
Function f_info_daystoconversion(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
  f_info_daystoconversion = WindFunc("f_info_daystoconversion", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_))
End Function
'|fffd||fffd||fffd||431||fffd||5fc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_downsidestdev
Function f_risk_downsidestdev(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, TY_ As Integer) As Variant
  f_risk_downsidestdev = WindFunc("f_risk_downsidestdev", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, TY_)
End Function
'|fffd||fffd||fffd||431||fffd||5fc||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_risk_upsidestdev
Function f_risk_upsidestdev(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, TY_ As Integer) As Variant
  f_risk_upsidestdev = WindFunc("f_risk_upsidestdev", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, TY_)
End Function
'|fffd||fffd||fffd||fffd|N|fffd||57e||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_nq_navchange
Function f_nq_navchange(WINDCODE_ As Variant, Acount_ As Integer, DEALDATE_ As Variant) As Variant
  f_nq_navchange = WindFunc("f_nq_navchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Acount_, GetValidDate(DEALDATE_))
End Function

''|fffd||6bb||fffd|''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

'|fffd||6bb||fffd||fffd||fffd||fffd|,FS_INFO_NAME
Function FS_INFO_NAME(WINDCODE_ As Variant) As Variant
  FS_INFO_NAME = WindFunc("S_INFO_NAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||6bb||fffd||fffd||fffd||fffd||fffd|,FS_INFO_CODE
Function FS_INFO_CODE(WINDCODE_ As Variant) As Variant
  FS_INFO_CODE = WindFunc("S_INFO_CODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'Wind|fffd||fffd||fffd||fffd|,FS_INFO_WINDCODE
Function FS_INFO_WINDCODE(WINDCODE_ As Variant) As Variant
  FS_INFO_WINDCODE = WindFunc("S_INFO_WINDCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_INFO_EXNAME
Function FS_INFO_EXNAME(WINDCODE_ As Variant) As Variant
  FS_INFO_EXNAME = WindFunc("S_INFO_EXNAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_INFO_CHANGELT
Function FS_INFO_CHANGELT(WINDCODE_ As Variant) As Variant
  FS_INFO_CHANGELT = WindFunc("S_INFO_CHANGELT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||5f1||fffd||5a4||fffd||fffd|,FS_INFO_MARGIN
Function FS_INFO_MARGIN(WINDCODE_ As Variant) As Variant
  FS_INFO_MARGIN = WindFunc("S_INFO_MARGIN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|,FS_INFO_FTDATE
Function FS_INFO_FTDATE(WINDCODE_ As Variant) As Variant
  FS_INFO_FTDATE = WindFunc("S_INFO_FTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_INFO_LTDATE
Function FS_INFO_LTDATE(WINDCODE_ As Variant) As Variant
  FS_INFO_LTDATE = WindFunc("S_INFO_LTDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fdef8||fffd||fffd||fffd|,FS_INFO_LDDATE
Function FS_INFO_LDDATE(WINDCODE_ As Variant) As Variant
  FS_INFO_LDDATE = WindFunc("S_INFO_LDDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||b7||fffd|,FS_INFO_DLMONTH
Function FS_INFO_DLMONTH(WINDCODE_ As Variant) As Variant
  FS_INFO_DLMONTH = WindFunc("S_INFO_DLMONTH", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||1bb||fffd||5fc||fffd||fffd|,FS_INFO_LPRICE
Function FS_INFO_LPRICE(WINDCODE_ As Variant) As Variant
  FS_INFO_LPRICE = WindFunc("S_INFO_LPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||53c||4e2||fffd||13c||fffd||fffd|,FS_INFO_CEABB
Function FS_INFO_CEABB(WINDCODE_ As Variant) As Variant
  FS_INFO_CEABB = WindFunc("S_INFO_CEABB", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||53c||4e2||fffd||fffd||fffd||fffd||fffd||fffd|,FS_INFO_CENAME
Function FS_INFO_CENAME(WINDCODE_ As Variant) As Variant
  FS_INFO_CENAME = WindFunc("S_INFO_CENAME", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||5fc||fffd||fffd||53c||fffd||fffd||fffd||fffd|,FS_INFO_SCCODE
Function FS_INFO_SCCODE(WINDCODE_ As Variant) As Variant
  FS_INFO_SCCODE = WindFunc("S_INFO_SCCODE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||5f5||fffd||3bb|,FS_INFO_TUNIT
Function FS_INFO_TUNIT(WINDCODE_ As Variant) As Variant
  FS_INFO_TUNIT = WindFunc("S_INFO_TUNIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||6f5||fffd||3bb|,FS_INFO_PUNIT
Function FS_INFO_PUNIT(WINDCODE_ As Variant) As Variant
  FS_INFO_PUNIT = WindFunc("S_INFO_PUNIT", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||421||fffd||4daf||fffd||fffd||3bb|,FS_INFO_MFPRICE
Function FS_INFO_MFPRICE(WINDCODE_ As Variant) As Variant
  FS_INFO_MFPRICE = WindFunc("S_INFO_MFPRICE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||53c||fffd||b7||fffd||2f5||fffd||fffd|,FS_INFO_CDMONTHS
Function FS_INFO_CDMONTHS(WINDCODE_ As Variant) As Variant
  FS_INFO_CDMONTHS = WindFunc("S_INFO_CDMONTHS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||2f5||fffd||fffd|,FS_INFO_THOURS
Function FS_INFO_THOURS(WINDCODE_ As Variant) As Variant
  FS_INFO_THOURS = WindFunc("S_INFO_THOURS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,FS_INFO_LTDATED
Function FS_INFO_LTDATED(WINDCODE_ As Variant) As Variant
  FS_INFO_LTDATED = WindFunc("S_INFO_LTDATED", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_INFO_DDATE
Function FS_INFO_DDATE(WINDCODE_ As Variant) As Variant
  FS_INFO_DDATE = WindFunc("S_INFO_DDATE", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5f1||fffd||5a4||fffd||fffd|,FS_INFO_FTMARGINS
Function FS_INFO_FTMARGINS(WINDCODE_ As Variant) As Variant
  FS_INFO_FTMARGINS = WindFunc("S_INFO_FTMARGINS", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||33c||fffd|,FS_DQ_CLOSE
Function FS_DQ_CLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_CLOSE = WindFunc("S_DQ_CLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_DQ_CLOSE) <> vbString Then
        FS_DQ_CLOSE = FS_DQ_CLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||33c||fffd|,FS_DQ_OPEN
Function FS_DQ_OPEN(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_OPEN = WindFunc("S_DQ_OPEN", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_DQ_OPEN) <> vbString Then
        FS_DQ_OPEN = FS_DQ_OPEN / UnitVal_
    End If
End Function

'|fffd||fffd||7fc||fffd|,FS_DQ_HIGH
Function FS_DQ_HIGH(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_HIGH = WindFunc("S_DQ_HIGH", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_DQ_HIGH) <> vbString Then
        FS_DQ_HIGH = FS_DQ_HIGH / UnitVal_
    End If
End Function

'|fffd||fffd||37c||fffd|,FS_DQ_LOW
Function FS_DQ_LOW(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_LOW = WindFunc("S_DQ_LOW", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_DQ_LOW) <> vbString Then
        FS_DQ_LOW = FS_DQ_LOW / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd|,FS_DQ_SETTLE
Function FS_DQ_SETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_DQ_SETTLE = WindFunc("S_DQ_SETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|1f0||fffd||fffd||fffd||fffd||fffd|,FS_DQ_PRESETTLE
Function FS_DQ_PRESETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_DQ_PRESETTLE = WindFunc("S_DQ_PRESETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,FS_DQ_AVGPRICE
Function FS_DQ_AVGPRICE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_AVGPRICE = WindFunc("S_DQ_AVGPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_DQ_AVGPRICE) <> vbString Then
        FS_DQ_AVGPRICE = FS_DQ_AVGPRICE / UnitVal_
    End If
End Function

'|fffd||1f5||fffd|,FS_DQ_CHANGE
Function FS_DQ_CHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_CHANGE = WindFunc("S_DQ_CHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_DQ_CHANGE) <> vbString Then
        FS_DQ_CHANGE = FS_DQ_CHANGE / UnitVal_
    End If
End Function

'|fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_DQ_CHANGE_SETTLEMENT
Function FS_DQ_CHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_CHANGE_SETTLEMENT = WindFunc("S_DQ_CHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_DQ_CHANGE_SETTLEMENT) <> vbString Then
        FS_DQ_CHANGE_SETTLEMENT = FS_DQ_CHANGE_SETTLEMENT / UnitVal_
    End If
End Function

'|fffd||1f5||fffd||fffd||fffd|,FS_DQ_PCTCHANGE
Function FS_DQ_PCTCHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_DQ_PCTCHANGE = WindFunc("S_DQ_PCTCHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_DQ_PCTCHANGE_SETTLEMENT
Function FS_DQ_PCTCHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_DQ_PCTCHANGE_SETTLEMENT = WindFunc("S_DQ_PCTCHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd|,FS_DQ_SWING
Function FS_DQ_SWING(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_DQ_SWING = WindFunc("S_DQ_SWING", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||5b2||5b1||4eef|,FS_DQ_OICHANGE
Function FS_DQ_OICHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_DQ_OICHANGE = WindFunc("S_DQ_OICHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||27d||fffd||fffd||fffd|,FS_DQ_VOLUME
Function FS_DQ_VOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_VOLUME = WindFunc("S_DQ_VOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_DQ_VOLUME) <> vbString Then
        FS_DQ_VOLUME = FS_DQ_VOLUME / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|,FS_DQ_AMOUNT
Function FS_DQ_AMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_DQ_AMOUNT = WindFunc("S_DQ_AMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_DQ_AMOUNT) <> vbString Then
        FS_DQ_AMOUNT = FS_DQ_AMOUNT / UnitVal_
    End If
End Function

'|fffd||5b2||fffd||fffd||fffd|,FS_DQ_OI
Function FS_DQ_OI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_DQ_OI = WindFunc("S_DQ_OI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_WQ_CLOSE
Function FS_WQ_CLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_CLOSE = WindFunc("S_WQ_CLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_WQ_CLOSE) <> vbString Then
        FS_WQ_CLOSE = FS_WQ_CLOSE / UnitVal_
    End If
End Function

'|fffd||73f||fffd||fffd||33c||fffd|,FS_WQ_OPEN
Function FS_WQ_OPEN(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_OPEN = WindFunc("S_WQ_OPEN", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_WQ_OPEN) <> vbString Then
        FS_WQ_OPEN = FS_WQ_OPEN / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,FS_WQ_HIGH
Function FS_WQ_HIGH(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_HIGH = WindFunc("S_WQ_HIGH", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_WQ_HIGH) <> vbString Then
        FS_WQ_HIGH = FS_WQ_HIGH / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,FS_WQ_LOW
Function FS_WQ_LOW(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_LOW = WindFunc("S_WQ_LOW", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_WQ_LOW) <> vbString Then
        FS_WQ_LOW = FS_WQ_LOW / UnitVal_
    End If
End Function

'|fffd||73d||fffd||fffd||fffd||fffd|,FS_WQ_SETTLE
Function FS_WQ_SETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_SETTLE = WindFunc("S_WQ_SETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_SETTLE) <> vbString Then
        FS_WQ_SETTLE = FS_WQ_SETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_WQ_HIGHCLOSE
Function FS_WQ_HIGHCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_HIGHCLOSE = WindFunc("S_WQ_HIGHCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_WQ_HIGHCLOSE) <> vbString Then
        FS_WQ_HIGHCLOSE = FS_WQ_HIGHCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_WQ_LOWCLOSE
Function FS_WQ_LOWCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_LOWCLOSE = WindFunc("S_WQ_LOWCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_WQ_LOWCLOSE) <> vbString Then
        FS_WQ_LOWCLOSE = FS_WQ_LOWCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,FS_WQ_HIGHSETTLE
Function FS_WQ_HIGHSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_HIGHSETTLE = WindFunc("S_WQ_HIGHSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_HIGHSETTLE) <> vbString Then
        FS_WQ_HIGHSETTLE = FS_WQ_HIGHSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,FS_WQ_LOWSETTLE
Function FS_WQ_LOWSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_LOWSETTLE = WindFunc("S_WQ_LOWSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_LOWSETTLE) <> vbString Then
        FS_WQ_LOWSETTLE = FS_WQ_LOWSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,FS_WQ_PRECLOSE
Function FS_WQ_PRECLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_PRECLOSE = WindFunc("S_WQ_PRECLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_WQ_PRECLOSE) <> vbString Then
        FS_WQ_PRECLOSE = FS_WQ_PRECLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,FS_WQ_PRESETTLE
Function FS_WQ_PRESETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_PRESETTLE = WindFunc("S_WQ_PRESETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_PRESETTLE) <> vbString Then
        FS_WQ_PRESETTLE = FS_WQ_PRESETTLE / UnitVal_
    End If
End Function

'|fffd||733||27d||fffd||fffd||fffd||fffd||fffd|,FS_WQ_AVGPRICE
Function FS_WQ_AVGPRICE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_AVGPRICE = WindFunc("S_WQ_AVGPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_AVGPRICE) <> vbString Then
        FS_WQ_AVGPRICE = FS_WQ_AVGPRICE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd|,FS_WQ_CHANGE
Function FS_WQ_CHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_CHANGE = WindFunc("S_WQ_CHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_CHANGE) <> vbString Then
        FS_WQ_CHANGE = FS_WQ_CHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_WQ_CHANGE_SETTLEMENT
Function FS_WQ_CHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_CHANGE_SETTLEMENT = WindFunc("S_WQ_CHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_CHANGE_SETTLEMENT) <> vbString Then
        FS_WQ_CHANGE_SETTLEMENT = FS_WQ_CHANGE_SETTLEMENT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|,FS_WQ_PCTCHANGE
Function FS_WQ_PCTCHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_PCTCHANGE = WindFunc("S_WQ_PCTCHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_WQ_PCTCHANGE_SETTLEMENT
Function FS_WQ_PCTCHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_PCTCHANGE_SETTLEMENT = WindFunc("S_WQ_PCTCHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd|,FS_WQ_SWING
Function FS_WQ_SWING(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_SWING = WindFunc("S_WQ_SWING", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||733||5b2||5b1||4eef|,FS_WQ_OICHANGE
Function FS_WQ_OICHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_OICHANGE = WindFunc("S_WQ_OICHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_OICHANGE) <> vbString Then
        FS_WQ_OICHANGE = FS_WQ_OICHANGE / UnitVal_
    End If
End Function

'|fffd||733||27d||fffd||fffd||fffd|,FS_WQ_VOLUME
Function FS_WQ_VOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_VOLUME = WindFunc("S_WQ_VOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_VOLUME) <> vbString Then
        FS_WQ_VOLUME = FS_WQ_VOLUME / UnitVal_
    End If
End Function

'|fffd||733||27d||fffd||fffd||fffd|,FS_WQ_AMOUNT
Function FS_WQ_AMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_AMOUNT = WindFunc("S_WQ_AMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_AMOUNT) <> vbString Then
        FS_WQ_AMOUNT = FS_WQ_AMOUNT / UnitVal_
    End If
End Function

'|fffd||733||5b2||fffd||fffd||fffd|,FS_WQ_OI
Function FS_WQ_OI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_OI = WindFunc("S_WQ_OI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_OI) <> vbString Then
        FS_WQ_OI = FS_WQ_OI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_WQ_AVGVOLUME
Function FS_WQ_AVGVOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_AVGVOLUME = WindFunc("S_WQ_AVGVOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_AVGVOLUME) <> vbString Then
        FS_WQ_AVGVOLUME = FS_WQ_AVGVOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_WQ_AVGAMOUNT
Function FS_WQ_AVGAMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_AVGAMOUNT = WindFunc("S_WQ_AVGAMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_AVGAMOUNT) <> vbString Then
        FS_WQ_AVGAMOUNT = FS_WQ_AVGAMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,FS_WQ_AVGAOI
Function FS_WQ_AVGAOI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_WQ_AVGAOI = WindFunc("S_WQ_AVGAOI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_WQ_AVGAOI) <> vbString Then
        FS_WQ_AVGAOI = FS_WQ_AVGAOI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,FS_WQ_HIGH_DATE
Function FS_WQ_HIGH_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_HIGH_DATE = WindFunc("S_WQ_HIGH_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,FS_WQ_LOW_DATE
Function FS_WQ_LOW_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_LOW_DATE = WindFunc("S_WQ_LOW_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_WQ_HIGHCLOSE_DATE
Function FS_WQ_HIGHCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_HIGHCLOSE_DATE = WindFunc("S_WQ_HIGHCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_WQ_LOWCLOSE_DATE
Function FS_WQ_LOWCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_LOWCLOSE_DATE = WindFunc("S_WQ_LOWCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_WQ_HIGHSWING_DATE
Function FS_WQ_HIGHSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_HIGHSWING_DATE = WindFunc("S_WQ_HIGHSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,FS_WQ_LOWSWING_DATE
Function FS_WQ_LOWSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_WQ_LOWSWING_DATE = WindFunc("S_WQ_LOWSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_MQ_CLOSE
Function FS_MQ_CLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_CLOSE = WindFunc("S_MQ_CLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_MQ_CLOSE) <> vbString Then
        FS_MQ_CLOSE = FS_MQ_CLOSE / UnitVal_
    End If
End Function

'|fffd||bf||fffd||fffd||33c||fffd|,FS_MQ_OPEN
Function FS_MQ_OPEN(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_OPEN = WindFunc("S_MQ_OPEN", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_MQ_OPEN) <> vbString Then
        FS_MQ_OPEN = FS_MQ_OPEN / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,FS_MQ_HIGH
Function FS_MQ_HIGH(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_HIGH = WindFunc("S_MQ_HIGH", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_MQ_HIGH) <> vbString Then
        FS_MQ_HIGH = FS_MQ_HIGH / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,FS_MQ_LOW
Function FS_MQ_LOW(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_LOW = WindFunc("S_MQ_LOW", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_MQ_LOW) <> vbString Then
        FS_MQ_LOW = FS_MQ_LOW / UnitVal_
    End If
End Function

'|fffd||bd||fffd||fffd||fffd||fffd|,FS_MQ_SETTLE
Function FS_MQ_SETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_SETTLE = WindFunc("S_MQ_SETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_SETTLE) <> vbString Then
        FS_MQ_SETTLE = FS_MQ_SETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_MQ_HIGHCLOSE
Function FS_MQ_HIGHCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_HIGHCLOSE = WindFunc("S_MQ_HIGHCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_MQ_HIGHCLOSE) <> vbString Then
        FS_MQ_HIGHCLOSE = FS_MQ_HIGHCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_MQ_LOWCLOSE
Function FS_MQ_LOWCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_LOWCLOSE = WindFunc("S_MQ_LOWCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_MQ_LOWCLOSE) <> vbString Then
        FS_MQ_LOWCLOSE = FS_MQ_LOWCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,FS_MQ_HIGHSETTLE
Function FS_MQ_HIGHSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_HIGHSETTLE = WindFunc("S_MQ_HIGHSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_HIGHSETTLE) <> vbString Then
        FS_MQ_HIGHSETTLE = FS_MQ_HIGHSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,FS_MQ_LOWSETTLE
Function FS_MQ_LOWSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_LOWSETTLE = WindFunc("S_MQ_LOWSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_LOWSETTLE) <> vbString Then
        FS_MQ_LOWSETTLE = FS_MQ_LOWSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,FS_MQ_PRECLOSE
Function FS_MQ_PRECLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_PRECLOSE = WindFunc("S_MQ_PRECLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_MQ_PRECLOSE) <> vbString Then
        FS_MQ_PRECLOSE = FS_MQ_PRECLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,FS_MQ_PRESETTLE
Function FS_MQ_PRESETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_PRESETTLE = WindFunc("S_MQ_PRESETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_PRESETTLE) <> vbString Then
        FS_MQ_PRESETTLE = FS_MQ_PRESETTLE / UnitVal_
    End If
End Function

'|fffd||b3||27d||fffd||fffd||fffd||fffd||fffd|,FS_MQ_AVGPRICE
Function FS_MQ_AVGPRICE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_AVGPRICE = WindFunc("S_MQ_AVGPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_AVGPRICE) <> vbString Then
        FS_MQ_AVGPRICE = FS_MQ_AVGPRICE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd|,FS_MQ_CHANGE
Function FS_MQ_CHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_CHANGE = WindFunc("S_MQ_CHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_CHANGE) <> vbString Then
        FS_MQ_CHANGE = FS_MQ_CHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_MQ_CHANGE_SETTLEMENT
Function FS_MQ_CHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_CHANGE_SETTLEMENT = WindFunc("S_MQ_CHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_CHANGE_SETTLEMENT) <> vbString Then
        FS_MQ_CHANGE_SETTLEMENT = FS_MQ_CHANGE_SETTLEMENT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|,FS_MQ_PCTCHANGE
Function FS_MQ_PCTCHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_PCTCHANGE = WindFunc("S_MQ_PCTCHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_MQ_PCTCHANGE_SETTLEMENT
Function FS_MQ_PCTCHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_PCTCHANGE_SETTLEMENT = WindFunc("S_MQ_PCTCHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd|,FS_MQ_SWING
Function FS_MQ_SWING(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_SWING = WindFunc("S_MQ_SWING", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||b3||5b2||5b1||4eef|,FS_MQ_OICHANGE
Function FS_MQ_OICHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_OICHANGE = WindFunc("S_MQ_OICHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_OICHANGE) <> vbString Then
        FS_MQ_OICHANGE = FS_MQ_OICHANGE / UnitVal_
    End If
End Function

'|fffd||b3||27d||fffd||fffd||fffd|,FS_MQ_VOLUME
Function FS_MQ_VOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_VOLUME = WindFunc("S_MQ_VOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_VOLUME) <> vbString Then
        FS_MQ_VOLUME = FS_MQ_VOLUME / UnitVal_
    End If
End Function

'|fffd||b3||27d||fffd||fffd||fffd|,FS_MQ_AMOUNT
Function FS_MQ_AMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_AMOUNT = WindFunc("S_MQ_AMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_AMOUNT) <> vbString Then
        FS_MQ_AMOUNT = FS_MQ_AMOUNT / UnitVal_
    End If
End Function

'|fffd||b3||5b2||fffd||fffd||fffd|,FS_MQ_OI
Function FS_MQ_OI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_OI = WindFunc("S_MQ_OI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_OI) <> vbString Then
        FS_MQ_OI = FS_MQ_OI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_MQ_AVGVOLUME
Function FS_MQ_AVGVOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_AVGVOLUME = WindFunc("S_MQ_AVGVOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_AVGVOLUME) <> vbString Then
        FS_MQ_AVGVOLUME = FS_MQ_AVGVOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_MQ_AVGAMOUNT
Function FS_MQ_AVGAMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_AVGAMOUNT = WindFunc("S_MQ_AVGAMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_AVGAMOUNT) <> vbString Then
        FS_MQ_AVGAMOUNT = FS_MQ_AVGAMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,FS_MQ_AVGAOI
Function FS_MQ_AVGAOI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_MQ_AVGAOI = WindFunc("S_MQ_AVGAOI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_MQ_AVGAOI) <> vbString Then
        FS_MQ_AVGAOI = FS_MQ_AVGAOI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,FS_MQ_HIGH_DATE
Function FS_MQ_HIGH_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_HIGH_DATE = WindFunc("S_MQ_HIGH_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,FS_MQ_LOW_DATE
Function FS_MQ_LOW_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_LOW_DATE = WindFunc("S_MQ_LOW_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_MQ_HIGHCLOSE_DATE
Function FS_MQ_HIGHCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_HIGHCLOSE_DATE = WindFunc("S_MQ_HIGHCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_MQ_LOWCLOSE_DATE
Function FS_MQ_LOWCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_LOWCLOSE_DATE = WindFunc("S_MQ_LOWCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_MQ_HIGHSWING_DATE
Function FS_MQ_HIGHSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_HIGHSWING_DATE = WindFunc("S_MQ_HIGHSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,FS_MQ_LOWSWING_DATE
Function FS_MQ_LOWSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_MQ_LOWSWING_DATE = WindFunc("S_MQ_LOWSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_QQ_CLOSE
Function FS_QQ_CLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_CLOSE = WindFunc("S_QQ_CLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_QQ_CLOSE) <> vbString Then
        FS_QQ_CLOSE = FS_QQ_CLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_QQ_OPEN
Function FS_QQ_OPEN(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_OPEN = WindFunc("S_QQ_OPEN", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_QQ_OPEN) <> vbString Then
        FS_QQ_OPEN = FS_QQ_OPEN / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,FS_QQ_HIGH
Function FS_QQ_HIGH(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_HIGH = WindFunc("S_QQ_HIGH", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_QQ_HIGH) <> vbString Then
        FS_QQ_HIGH = FS_QQ_HIGH / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,FS_QQ_LOW
Function FS_QQ_LOW(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_LOW = WindFunc("S_QQ_LOW", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_QQ_LOW) <> vbString Then
        FS_QQ_LOW = FS_QQ_LOW / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_QQ_SETTLE
Function FS_QQ_SETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_SETTLE = WindFunc("S_QQ_SETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_SETTLE) <> vbString Then
        FS_QQ_SETTLE = FS_QQ_SETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_QQ_HIGHCLOSE
Function FS_QQ_HIGHCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_HIGHCLOSE = WindFunc("S_QQ_HIGHCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_QQ_HIGHCLOSE) <> vbString Then
        FS_QQ_HIGHCLOSE = FS_QQ_HIGHCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_QQ_LOWCLOSE
Function FS_QQ_LOWCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_LOWCLOSE = WindFunc("S_QQ_LOWCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_QQ_LOWCLOSE) <> vbString Then
        FS_QQ_LOWCLOSE = FS_QQ_LOWCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,FS_QQ_HIGHSETTLE
Function FS_QQ_HIGHSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_HIGHSETTLE = WindFunc("S_QQ_HIGHSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_HIGHSETTLE) <> vbString Then
        FS_QQ_HIGHSETTLE = FS_QQ_HIGHSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,FS_QQ_LOWSETTLE
Function FS_QQ_LOWSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_LOWSETTLE = WindFunc("S_QQ_LOWSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_LOWSETTLE) <> vbString Then
        FS_QQ_LOWSETTLE = FS_QQ_LOWSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,FS_QQ_PRECLOSE
Function FS_QQ_PRECLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_PRECLOSE = WindFunc("S_QQ_PRECLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_QQ_PRECLOSE) <> vbString Then
        FS_QQ_PRECLOSE = FS_QQ_PRECLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,FS_QQ_PRESETTLE
Function FS_QQ_PRESETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_PRESETTLE = WindFunc("S_QQ_PRESETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_PRESETTLE) <> vbString Then
        FS_QQ_PRESETTLE = FS_QQ_PRESETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,FS_QQ_AVGPRICE
Function FS_QQ_AVGPRICE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_AVGPRICE = WindFunc("S_QQ_AVGPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_AVGPRICE) <> vbString Then
        FS_QQ_AVGPRICE = FS_QQ_AVGPRICE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd|,FS_QQ_CHANGE
Function FS_QQ_CHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_CHANGE = WindFunc("S_QQ_CHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_CHANGE) <> vbString Then
        FS_QQ_CHANGE = FS_QQ_CHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_QQ_CHANGE_SETTLEMENT
Function FS_QQ_CHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_CHANGE_SETTLEMENT = WindFunc("S_QQ_CHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_CHANGE_SETTLEMENT) <> vbString Then
        FS_QQ_CHANGE_SETTLEMENT = FS_QQ_CHANGE_SETTLEMENT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|,FS_QQ_PCTCHANGE
Function FS_QQ_PCTCHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_PCTCHANGE = WindFunc("S_QQ_PCTCHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_QQ_PCTCHANGE_SETTLEMENT
Function FS_QQ_PCTCHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_PCTCHANGE_SETTLEMENT = WindFunc("S_QQ_PCTCHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd|,FS_QQ_SWING
Function FS_QQ_SWING(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_SWING = WindFunc("S_QQ_SWING", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||5b2||5b1||4eef|,FS_QQ_OICHANGE
Function FS_QQ_OICHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_OICHANGE = WindFunc("S_QQ_OICHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_OICHANGE) <> vbString Then
        FS_QQ_OICHANGE = FS_QQ_OICHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||27d||fffd||fffd||fffd|,FS_QQ_VOLUME
Function FS_QQ_VOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_VOLUME = WindFunc("S_QQ_VOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_VOLUME) <> vbString Then
        FS_QQ_VOLUME = FS_QQ_VOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||27d||fffd||fffd||fffd|,FS_QQ_AMOUNT
Function FS_QQ_AMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_AMOUNT = WindFunc("S_QQ_AMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_AMOUNT) <> vbString Then
        FS_QQ_AMOUNT = FS_QQ_AMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5b2||fffd||fffd||fffd|,FS_QQ_OI
Function FS_QQ_OI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_OI = WindFunc("S_QQ_OI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_OI) <> vbString Then
        FS_QQ_OI = FS_QQ_OI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_QQ_AVGVOLUME
Function FS_QQ_AVGVOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_AVGVOLUME = WindFunc("S_QQ_AVGVOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_AVGVOLUME) <> vbString Then
        FS_QQ_AVGVOLUME = FS_QQ_AVGVOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_QQ_AVGAMOUNT
Function FS_QQ_AVGAMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_AVGAMOUNT = WindFunc("S_QQ_AVGAMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_AVGAMOUNT) <> vbString Then
        FS_QQ_AVGAMOUNT = FS_QQ_AVGAMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,FS_QQ_AVGAOI
Function FS_QQ_AVGAOI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_QQ_AVGAOI = WindFunc("S_QQ_AVGAOI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_QQ_AVGAOI) <> vbString Then
        FS_QQ_AVGAOI = FS_QQ_AVGAOI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,FS_QQ_HIGH_DATE
Function FS_QQ_HIGH_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_HIGH_DATE = WindFunc("S_QQ_HIGH_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,FS_QQ_LOW_DATE
Function FS_QQ_LOW_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_LOW_DATE = WindFunc("S_QQ_LOW_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_QQ_HIGHCLOSE_DATE
Function FS_QQ_HIGHCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_HIGHCLOSE_DATE = WindFunc("S_QQ_HIGHCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_QQ_LOWCLOSE_DATE
Function FS_QQ_LOWCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_LOWCLOSE_DATE = WindFunc("S_QQ_LOWCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_QQ_HIGHSWING_DATE
Function FS_QQ_HIGHSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_HIGHSWING_DATE = WindFunc("S_QQ_HIGHSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,FS_QQ_LOWSWING_DATE
Function FS_QQ_LOWSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_QQ_LOWSWING_DATE = WindFunc("S_QQ_LOWSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_YQ_CLOSE
Function FS_YQ_CLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_CLOSE = WindFunc("S_YQ_CLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_YQ_CLOSE) <> vbString Then
        FS_YQ_CLOSE = FS_YQ_CLOSE / UnitVal_
    End If
End Function

'|fffd||afea||fffd||33c||fffd|,FS_YQ_OPEN
Function FS_YQ_OPEN(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_OPEN = WindFunc("S_YQ_OPEN", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_YQ_OPEN) <> vbString Then
        FS_YQ_OPEN = FS_YQ_OPEN / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,FS_YQ_HIGH
Function FS_YQ_HIGH(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_HIGH = WindFunc("S_YQ_HIGH", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_YQ_HIGH) <> vbString Then
        FS_YQ_HIGH = FS_YQ_HIGH / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,FS_YQ_LOW
Function FS_YQ_LOW(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_LOW = WindFunc("S_YQ_LOW", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_YQ_LOW) <> vbString Then
        FS_YQ_LOW = FS_YQ_LOW / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,FS_YQ_SETTLE
Function FS_YQ_SETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_SETTLE = WindFunc("S_YQ_SETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_SETTLE) <> vbString Then
        FS_YQ_SETTLE = FS_YQ_SETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,S_YQ_SETTLE
Function S_YQ_SETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  S_YQ_SETTLE = WindFunc("S_YQ_SETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(S_YQ_SETTLE) <> vbString Then
        S_YQ_SETTLE = S_YQ_SETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_YQ_HIGHCLOSE
Function FS_YQ_HIGHCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_HIGHCLOSE = WindFunc("S_YQ_HIGHCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_YQ_HIGHCLOSE) <> vbString Then
        FS_YQ_HIGHCLOSE = FS_YQ_HIGHCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_YQ_LOWCLOSE
Function FS_YQ_LOWCLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_LOWCLOSE = WindFunc("S_YQ_LOWCLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_YQ_LOWCLOSE) <> vbString Then
        FS_YQ_LOWCLOSE = FS_YQ_LOWCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,FS_YQ_HIGHSETTLE
Function FS_YQ_HIGHSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_HIGHSETTLE = WindFunc("S_YQ_HIGHSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_HIGHSETTLE) <> vbString Then
        FS_YQ_HIGHSETTLE = FS_YQ_HIGHSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,FS_YQ_LOWSETTLE
Function FS_YQ_LOWSETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_LOWSETTLE = WindFunc("S_YQ_LOWSETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_LOWSETTLE) <> vbString Then
        FS_YQ_LOWSETTLE = FS_YQ_LOWSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,FS_YQ_PRECLOSE
Function FS_YQ_PRECLOSE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_PRECLOSE = WindFunc("S_YQ_PRECLOSE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(FS_YQ_PRECLOSE) <> vbString Then
        FS_YQ_PRECLOSE = FS_YQ_PRECLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,FS_YQ_PRESETTLE
Function FS_YQ_PRESETTLE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_PRESETTLE = WindFunc("S_YQ_PRESETTLE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_PRESETTLE) <> vbString Then
        FS_YQ_PRESETTLE = FS_YQ_PRESETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,FS_YQ_AVGPRICE
Function FS_YQ_AVGPRICE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_AVGPRICE = WindFunc("S_YQ_AVGPRICE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_AVGPRICE) <> vbString Then
        FS_YQ_AVGPRICE = FS_YQ_AVGPRICE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd|,FS_YQ_CHANGE
Function FS_YQ_CHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_CHANGE = WindFunc("S_YQ_CHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_CHANGE) <> vbString Then
        FS_YQ_CHANGE = FS_YQ_CHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_YQ_CHANGE_SETTLEMENT
Function FS_YQ_CHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_CHANGE_SETTLEMENT = WindFunc("S_YQ_CHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_CHANGE_SETTLEMENT) <> vbString Then
        FS_YQ_CHANGE_SETTLEMENT = FS_YQ_CHANGE_SETTLEMENT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|,FS_YQ_PCTCHANGE
Function FS_YQ_PCTCHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_PCTCHANGE = WindFunc("S_YQ_PCTCHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_YQ_PCTCHANGE_SETTLEMENT
Function FS_YQ_PCTCHANGE_SETTLEMENT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_PCTCHANGE_SETTLEMENT = WindFunc("S_YQ_PCTCHANGE_SETTLEMENT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd|,FS_YQ_SWING
Function FS_YQ_SWING(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_SWING = WindFunc("S_YQ_SWING", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||5b2||5b1||4eef|,FS_YQ_OICHANGE
Function FS_YQ_OICHANGE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_OICHANGE = WindFunc("S_YQ_OICHANGE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_OICHANGE) <> vbString Then
        FS_YQ_OICHANGE = FS_YQ_OICHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|,FS_YQ_VOLUME
Function FS_YQ_VOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_VOLUME = WindFunc("S_YQ_VOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_VOLUME) <> vbString Then
        FS_YQ_VOLUME = FS_YQ_VOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||27d||fffd||fffd||fffd|,FS_YQ_AMOUNT
Function FS_YQ_AMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_AMOUNT = WindFunc("S_YQ_AMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_AMOUNT) <> vbString Then
        FS_YQ_AMOUNT = FS_YQ_AMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||5b2||fffd||fffd||fffd|,FS_YQ_OI
Function FS_YQ_OI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_OI = WindFunc("S_YQ_OI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_OI) <> vbString Then
        FS_YQ_OI = FS_YQ_OI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_YQ_AVGVOLUME
Function FS_YQ_AVGVOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_AVGVOLUME = WindFunc("S_YQ_AVGVOLUME", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_AVGVOLUME) <> vbString Then
        FS_YQ_AVGVOLUME = FS_YQ_AVGVOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_YQ_AVGAMOUNT
Function FS_YQ_AVGAMOUNT(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_AVGAMOUNT = WindFunc("S_YQ_AVGAMOUNT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_AVGAMOUNT) <> vbString Then
        FS_YQ_AVGAMOUNT = FS_YQ_AVGAMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,FS_YQ_AVGAOI
Function FS_YQ_AVGAOI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_YQ_AVGAOI = WindFunc("S_YQ_AVGAOI", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(FS_YQ_AVGAOI) <> vbString Then
        FS_YQ_AVGAOI = FS_YQ_AVGAOI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,FS_YQ_HIGH_DATE
Function FS_YQ_HIGH_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_HIGH_DATE = WindFunc("S_YQ_HIGH_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,FS_YQ_LOW_DATE
Function FS_YQ_LOW_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_LOW_DATE = WindFunc("S_YQ_LOW_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_YQ_HIGHCLOSE_DATE
Function FS_YQ_HIGHCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_HIGHCLOSE_DATE = WindFunc("S_YQ_HIGHCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_YQ_LOWCLOSE_DATE
Function FS_YQ_LOWCLOSE_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_LOWCLOSE_DATE = WindFunc("S_YQ_LOWCLOSE_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_YQ_HIGHSWING_DATE
Function FS_YQ_HIGHSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_HIGHSWING_DATE = WindFunc("S_YQ_HIGHSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,FS_YQ_LOWSWING_DATE
Function FS_YQ_LOWSWING_DATE(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_YQ_LOWSWING_DATE = WindFunc("S_YQ_LOWSWING_DATE", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_PQ_CLOSE
Function FS_PQ_CLOSE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_CLOSE = WindFunc("S_PQ_CLOSE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
    If VarType(FS_PQ_CLOSE) <> vbString Then
        FS_PQ_CLOSE = FS_PQ_CLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd|,FS_PQ_OPEN
Function FS_PQ_OPEN(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_OPEN = WindFunc("S_PQ_OPEN", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
    If VarType(FS_PQ_OPEN) <> vbString Then
        FS_PQ_OPEN = FS_PQ_OPEN / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,FS_PQ_HIGH
Function FS_PQ_HIGH(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_HIGH = WindFunc("S_PQ_HIGH", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
    If VarType(FS_PQ_HIGH) <> vbString Then
        FS_PQ_HIGH = FS_PQ_HIGH / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,FS_PQ_LOW
Function FS_PQ_LOW(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_LOW = WindFunc("S_PQ_LOW", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
    If VarType(FS_PQ_LOW) <> vbString Then
        FS_PQ_LOW = FS_PQ_LOW / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_PQ_SETTLE
Function FS_PQ_SETTLE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_SETTLE = WindFunc("S_PQ_SETTLE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_SETTLE) <> vbString Then
        FS_PQ_SETTLE = FS_PQ_SETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_PQ_HIGHCLOSE
Function FS_PQ_HIGHCLOSE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_HIGHCLOSE = WindFunc("S_PQ_HIGHCLOSE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
    If VarType(FS_PQ_HIGHCLOSE) <> vbString Then
        FS_PQ_HIGHCLOSE = FS_PQ_HIGHCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,FS_PQ_LOWCLOSE
Function FS_PQ_LOWCLOSE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_LOWCLOSE = WindFunc("S_PQ_LOWCLOSE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
    If VarType(FS_PQ_LOWCLOSE) <> vbString Then
        FS_PQ_LOWCLOSE = FS_PQ_LOWCLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,FS_PQ_HIGHSETTLE
Function FS_PQ_HIGHSETTLE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_HIGHSETTLE = WindFunc("S_PQ_HIGHSETTLE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_HIGHSETTLE) <> vbString Then
        FS_PQ_HIGHSETTLE = FS_PQ_HIGHSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,FS_PQ_LOWSETTLE
Function FS_PQ_LOWSETTLE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_LOWSETTLE = WindFunc("S_PQ_LOWSETTLE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_LOWSETTLE) <> vbString Then
        FS_PQ_LOWSETTLE = FS_PQ_LOWSETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,FS_PQ_PRECLOSE
Function FS_PQ_PRECLOSE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_PRECLOSE = WindFunc("S_PQ_PRECLOSE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
    If VarType(FS_PQ_PRECLOSE) <> vbString Then
        FS_PQ_PRECLOSE = FS_PQ_PRECLOSE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,FS_PQ_PRESETTLE
Function FS_PQ_PRESETTLE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_PRESETTLE = WindFunc("S_PQ_PRESETTLE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_PRESETTLE) <> vbString Then
        FS_PQ_PRESETTLE = FS_PQ_PRESETTLE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,FS_PQ_AVGPRICE
Function FS_PQ_AVGPRICE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_AVGPRICE = WindFunc("S_PQ_AVGPRICE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_AVGPRICE) <> vbString Then
        FS_PQ_AVGPRICE = FS_PQ_AVGPRICE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,FS_PQ_CHANGE
Function FS_PQ_CHANGE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_CHANGE = WindFunc("S_PQ_CHANGE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_CHANGE) <> vbString Then
        FS_PQ_CHANGE = FS_PQ_CHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_PQ_CHANGE_SETTLEMENT
Function FS_PQ_CHANGE_SETTLEMENT(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_CHANGE_SETTLEMENT = WindFunc("S_PQ_CHANGE_SETTLEMENT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_CHANGE_SETTLEMENT) <> vbString Then
        FS_PQ_CHANGE_SETTLEMENT = FS_PQ_CHANGE_SETTLEMENT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,FS_PQ_PCTCHANGE
Function FS_PQ_PCTCHANGE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_PCTCHANGE = WindFunc("S_PQ_PCTCHANGE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,FS_PQ_PCTCHANGE_SETTLEMENT
Function FS_PQ_PCTCHANGE_SETTLEMENT(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_PCTCHANGE_SETTLEMENT = WindFunc("S_PQ_PCTCHANGE_SETTLEMENT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_PQ_SWING
Function FS_PQ_SWING(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_SWING = WindFunc("S_PQ_SWING", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||5b2||5b1||4eef|,FS_PQ_OICHANGE
Function FS_PQ_OICHANGE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_OICHANGE = WindFunc("S_PQ_OICHANGE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_OICHANGE) <> vbString Then
        FS_PQ_OICHANGE = FS_PQ_OICHANGE / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,FS_PQ_VOLUME
Function FS_PQ_VOLUME(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_VOLUME = WindFunc("S_PQ_VOLUME", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_VOLUME) <> vbString Then
        FS_PQ_VOLUME = FS_PQ_VOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,FS_PQ_AMOUNT
Function FS_PQ_AMOUNT(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_AMOUNT = WindFunc("S_PQ_AMOUNT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_AMOUNT) <> vbString Then
        FS_PQ_AMOUNT = FS_PQ_AMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5b2||fffd||fffd||fffd|,FS_PQ_OI
Function FS_PQ_OI(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_OI = WindFunc("S_PQ_OI", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_OI) <> vbString Then
        FS_PQ_OI = FS_PQ_OI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_PQ_AVGVOLUME
Function FS_PQ_AVGVOLUME(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_AVGVOLUME = WindFunc("S_PQ_AVGVOLUME", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_AVGVOLUME) <> vbString Then
        FS_PQ_AVGVOLUME = FS_PQ_AVGVOLUME / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,FS_PQ_AVGAMOUNT
Function FS_PQ_AVGAMOUNT(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_AVGAMOUNT = WindFunc("S_PQ_AVGAMOUNT", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_AVGAMOUNT) <> vbString Then
        FS_PQ_AVGAMOUNT = FS_PQ_AVGAMOUNT / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,FS_PQ_AVGAOI
Function FS_PQ_AVGAOI(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  FS_PQ_AVGAOI = WindFunc("S_PQ_AVGAOI", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(FS_PQ_AVGAOI) <> vbString Then
        FS_PQ_AVGAOI = FS_PQ_AVGAOI / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,FS_PQ_HIGH_DATE
Function FS_PQ_HIGH_DATE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_HIGH_DATE = WindFunc("S_PQ_HIGH_DATE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,FS_PQ_LOW_DATE
Function FS_PQ_LOW_DATE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_LOW_DATE = WindFunc("S_PQ_LOW_DATE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_PQ_HIGHCLOSE_DATE
Function FS_PQ_HIGHCLOSE_DATE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_HIGHCLOSE_DATE = WindFunc("S_PQ_HIGHCLOSE_DATE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,FS_PQ_LOWCLOSE_DATE
Function FS_PQ_LOWCLOSE_DATE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_LOWCLOSE_DATE = WindFunc("S_PQ_LOWCLOSE_DATE", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_PQ_HIGHSWING_DATE
Function FS_PQ_HIGHSWING_DATE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_HIGHSWING_DATE = WindFunc("S_PQ_HIGHSWING_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,FS_PQ_LOWSWING_DATE
Function FS_PQ_LOWSWING_DATE(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  FS_PQ_LOWSWING_DATE = WindFunc("S_PQ_LOWSWING_DATE", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,FS_OI_LOI
Function FS_OI_LOI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  FS_OI_LOI = WindFunc("S_OI_LOI", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,FS_OI_SOI
Function FS_OI_SOI(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  FS_OI_SOI = WindFunc("S_OI_SOI", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||27d||fffd||fffd||fffd|,FS_OI_VOLUME
Function FS_OI_VOLUME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  FS_OI_VOLUME = WindFunc("S_OI_VOLUME", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,FS_OI_LNAME
Function FS_OI_LNAME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  FS_OI_LNAME = WindFunc("S_OI_LNAME", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,FS_OI_SNAME
Function FS_OI_SNAME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  FS_OI_SNAME = WindFunc("S_OI_SNAME", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,FS_OI_VNAME
Function FS_OI_VNAME(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  FS_OI_VNAME = WindFunc("S_OI_VNAME", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|5e2||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd|,FS_ST_STOCK
Function FS_ST_STOCK(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  FS_ST_STOCK = WindFunc("S_ST_STOCK", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,f_nav_date
Function f_nav_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_nav_date = WindFunc("f_nav_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||776||fffd||4daf||fffd||fffd||fffd||fffd|,f_unit_changedate
Function f_unit_changedate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_unit_changedate = WindFunc("f_unit_changedate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_thirdpartyfundtype
Function f_info_thirdpartyfundtype(WINDCODE_ As Variant, ORG_ As Integer) As Variant
  f_info_thirdpartyfundtype = WindFunc("f_info_thirdpartyfundtype", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ORG_)
End Function

'|fffd||fffd||fffd||fffd|1|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_1y
Function f_rating_1y(WINDCODE_ As Variant, ORG_ As Integer, Y_ As Integer, M_ As Integer) As Variant
  f_rating_1y = WindFunc("f_rating_1y", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ORG_, Y_, M_)
End Function

'|fffd||fffd||fffd||fffd|2|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_2y
Function f_rating_2y(WINDCODE_ As Variant, ORG_ As Integer, Y_ As Integer, M_ As Integer) As Variant
  f_rating_2y = WindFunc("f_rating_2y", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ORG_, Y_, M_)
End Function

'|fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_3y
Function f_rating_3y(WINDCODE_ As Variant, ORG_ As Integer, Y_ As Integer, M_ As Integer) As Variant
  f_rating_3y = WindFunc("f_rating_3y", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ORG_, Y_, M_)
End Function

'|fffd||fffd||fffd||fffd|5|fffd||fffd||fffd||fffd||fffd||fffd|,f_rating_5y
Function f_rating_5y(WINDCODE_ As Variant, ORG_ As Integer, Y_ As Integer, M_ As Integer) As Variant
  f_rating_5y = WindFunc("f_rating_5y", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ORG_, Y_, M_)
End Function

'|1bd||fffd||fffd||fffd||b6||23b||631||fffd|,f_absolute_avgmonthlyreturn
Function f_absolute_avgmonthlyreturn(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_avgmonthlyreturn = WindFunc("f_absolute_avgmonthlyreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||633||fffd|,f_risk_maxdownside
Function f_risk_maxdownside(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_risk_maxdownside = WindFunc("f_risk_maxdownside", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_risk_maxupside
Function f_risk_maxupside(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_risk_maxupside = WindFunc("f_risk_maxupside", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||3f5||fffd||fffd|,f_risk_correcoefficient
Function f_risk_correcoefficient(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, WINDCODE2_ As Variant) As Variant
  f_risk_correcoefficient = WindFunc("f_risk_correcoefficient", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, WindCodeVals(WINDCODE2_, "F"))
End Function

'Alpha(|fffd||aeef|),f_risk_annualpha
Function f_risk_annualpha(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, UI_ As String) As Variant
  f_risk_annualpha = WindFunc("f_risk_annualpha", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, UI_)
End Function

'Sharpe(|fffd||aeef|),f_risk_annusharpe
Function f_risk_annusharpe(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, NRY_ As Integer) As Variant
  f_risk_annusharpe = WindFunc("f_risk_annusharpe", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, NRY_)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|(|fffd||aeef|),f_risk_annuinforatio
Function f_risk_annuinforatio(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, NRY_ As Integer, UI_ As String) As Variant
  f_risk_annuinforatio = WindFunc("f_risk_annuinforatio", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, NRY_, UI_)
End Function

'|fffd||fffd||fffd||fffd||175||fffd||fffd||fffd||fffd|(|fffd||aeef|),f_risk_annuSortino
Function f_risk_annuSortino(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, NRY_ As Integer) As Variant
  f_risk_annuSortino = WindFunc("f_risk_annuSortino", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, NRY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|(|fffd||aeef|),f_risk_annustdev
Function f_risk_annustdev(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer) As Variant
  f_risk_annustdev = WindFunc("f_risk_annustdev", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|),f_risk_annutrackerror
Function f_risk_annutrackerror(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, UI_ As String) As Variant
  f_risk_annutrackerror = WindFunc("f_risk_annutrackerror", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, UI_)
End Function

'Treynor(|fffd||aeef|),f_risk_annutreynor
Function f_risk_annutreynor(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CT_ As Integer, CM_ As Integer, NRY_ As Integer, UI_ As String) As Variant
  f_risk_annutreynor = WindFunc("f_risk_annutreynor", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CT_, CM_, NRY_, UI_)
End Function

'Jensen(|fffd||aeef|),f_risk_annujensen
Function f_risk_annujensen(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CM_ As Integer, NRY_ As Integer, UI_ As Integer, CT_ As String) As Variant
  f_risk_annujensen = WindFunc("f_risk_annujensen", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CM_, NRY_, UI_, CT_)
End Function

'|fffd||fffd||7fc||fffd||fffd||23b||631||fffd|,f_absolute_highestquatreturn
Function f_absolute_highestquatreturn(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_highestquatreturn = WindFunc("f_absolute_highestquatreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||37c||fffd||fffd||23b||631||fffd|,f_absolute_lowestquatreturn
Function f_absolute_lowestquatreturn(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  f_absolute_lowestquatreturn = WindFunc("f_absolute_lowestquatreturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|5a4||22f||4e2||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_englishname
Function s_info_englishname(WINDCODE_ As Variant) As Variant
  s_info_englishname = WindFunc("s_info_englishname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd|,s_dq_settle
Function s_dq_settle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_dq_settle = WindFunc("s_dq_settle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_))
End Function

'|1f0||fffd||fffd||fffd||fffd||fffd|,s_dq_presettle
Function s_dq_presettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_dq_presettle = WindFunc("s_dq_presettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_))
    If VarType(s_dq_presettle) <> vbString Then
        s_dq_presettle = s_dq_presettle / UnitVal_
    End If
End Function

'|fffd||5b2||fffd||fffd||fffd|,s_dq_oi
Function s_dq_oi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_dq_oi = WindFunc("s_dq_oi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_))
    If VarType(s_dq_oi) <> vbString Then
        s_dq_oi = s_dq_oi / UnitVal_
    End If
End Function

'|fffd||5b2||fffd||fffd||fffd||fffd||4eef|,s_dq_oichange
Function s_dq_oichange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_dq_oichange = WindFunc("s_dq_oichange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_))
    If VarType(s_dq_oichange) <> vbString Then
        s_dq_oichange = s_dq_oichange / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_dq_close_lastradeday
Function s_dq_close_lastradeday(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_dq_close_lastradeday = WindFunc("s_dq_close_lastradeday", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_))
End Function

'(|fffd||fffd|)|fffd||2bd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_inflowproportion
Function s_mfd_inflowproportion(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mfd_inflowproportion = WindFunc("s_mfd_inflowproportion", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_))
End Function

'(|fffd||fffd||fffd||fffd|)|fffd||2bd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_periodmfd_inflowproportion
Function s_periodmfd_inflowproportion(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
  s_periodmfd_inflowproportion = WindFunc("s_periodmfd_inflowproportion", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||734||fffd||fffd||fffd||fffd||fffd|,w_info_totaltm
Function w_info_totaltm(WINDCODE_ As Variant) As Variant
  w_info_totaltm = WindFunc("w_info_totaltm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_info_issuernum
Function w_info_issuernum(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_info_issuernum = WindFunc("w_info_issuernum", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
    If VarType(w_info_issuernum) <> vbString Then
        w_info_issuernum = w_info_issuernum / UnitVal_
    End If
End Function

'|fffd||fffd||2bc||fffd||fffd||228||fffd||6f8||fffd|,w_info_inistrikeprice
Function w_info_inistrikeprice(WINDCODE_ As Variant) As Variant
  w_info_inistrikeprice = WindFunc("w_info_inistrikeprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||2bc||fffd||fffd||228||fffd||fffd||fffd||fffd|,w_info_inistrikeratio
Function w_info_inistrikeratio(WINDCODE_ As Variant) As Variant
  w_info_inistrikeratio = WindFunc("w_info_inistrikeratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||228||fffd||6fc||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd||fffd||fffd|,w_info_whetheradjust
Function w_info_whetheradjust(WINDCODE_ As Variant) As Variant
  w_info_whetheradjust = WindFunc("w_info_whetheradjust", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||228||fffd||6fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd|,w_info_adjustratio
Function w_info_adjustratio(WINDCODE_ As Variant) As Variant
  w_info_adjustratio = WindFunc("w_info_adjustratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||572||3bf||fffd||fffd||fffd|,w_info_refprice
Function w_info_refprice(WINDCODE_ As Variant) As Variant
  w_info_refprice = WindFunc("w_info_refprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||639||fffd||2f5||fffd||fffd|,w_info_repurchaseexpltn
Function w_info_repurchaseexpltn(WINDCODE_ As Variant) As Variant
  w_info_repurchaseexpltn = WindFunc("w_info_repurchaseexpltn", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|52d||fffd||276||fffd||fffd||fffd||fffd||6f1||fffd||fffd||fffd|,w_info_orgshareholderratio
Function w_info_orgshareholderratio(WINDCODE_ As Variant) As Variant
  w_info_orgshareholderratio = WindFunc("w_info_orgshareholderratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||fffd||fffd||2f5||fffd||fffd|,w_info_gurexpltn
Function w_info_gurexpltn(WINDCODE_ As Variant) As Variant
  w_info_gurexpltn = WindFunc("w_info_gurexpltn", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|,w_info_exercode
Function w_info_exercode(WINDCODE_ As Variant) As Variant
  w_info_exercode = WindFunc("w_info_exercode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||228||fffd||fffd||fffd|,w_info_exername
Function w_info_exername(WINDCODE_ As Variant) As Variant
  w_info_exername = WindFunc("w_info_exername", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||fffd|,w_dq_swing
Function w_dq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_dq_swing = WindFunc("w_dq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||363||fffd||fffd|,w_dq_highlimit
Function w_dq_highlimit(WINDCODE_ As Variant, Optional EndDate_ As Variant) As Variant
  w_dq_highlimit = WindFunc("w_dq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(EndDate_))
End Function

'|fffd||fffd||363||fffd||fffd|,w_dq_lowlimit
Function w_dq_lowlimit(WINDCODE_ As Variant, Optional EndDate_ As Variant) As Variant
  w_dq_lowlimit = WindFunc("w_dq_lowlimit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_dq_us_preclose,
Function w_dq_us_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_dq_us_preclose = WindFunc("w_dq_us_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), DEALDATE_, TYPE_)
End Function

'|fffd||fffd||fffd||27f||fffd||fffd||33c||fffd|,w_dq_us_open
Function w_dq_us_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_dq_us_open = WindFunc("w_dq_us_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,w_dq_us_high
Function w_dq_us_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_dq_us_high = WindFunc("w_dq_us_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,w_dq_us_low
Function w_dq_us_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_dq_us_low = WindFunc("w_dq_us_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_dq_us_close
Function w_dq_us_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_dq_us_close = WindFunc("w_dq_us_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||27e||fffd||fffd||fffd|,w_dq_us_avgprice
Function w_dq_us_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_dq_us_avgprice = WindFunc("w_dq_us_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||273||27d||fffd||fffd||fffd|,w_dq_us_volume
Function w_dq_us_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_dq_us_volume = WindFunc("w_dq_us_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_dq_us_volume) <> vbString Then
        w_dq_us_volume = w_dq_us_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||273||27d||fffd||fffd||fffd|,w_dq_us_amount
Function w_dq_us_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_dq_us_amount = WindFunc("w_dq_us_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_dq_us_amount) <> vbString Then
        w_dq_us_amount = w_dq_us_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd|,w_dq_us_change
Function w_dq_us_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_dq_us_change = WindFunc("w_dq_us_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,w_dq_us_pctchange
Function w_dq_us_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_dq_us_pctchange = WindFunc("w_dq_us_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||27b||fffd||fffd||fffd||fffd||fffd|,w_dq_us_turn
Function w_dq_us_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_dq_us_turn = WindFunc("w_dq_us_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_dq_us_swing
Function w_dq_us_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_dq_us_swing = WindFunc("w_dq_us_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_pq_us_preclose
Function w_pq_us_preclose(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_pq_us_preclose = WindFunc("w_pq_us_preclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4fea||fffd||33c||fffd|,w_pq_us_open
Function w_pq_us_open(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_pq_us_open = WindFunc("w_pq_us_open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,w_pq_us_high
Function w_pq_us_high(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_pq_us_high = WindFunc("w_pq_us_high", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,w_pq_us_low
Function w_pq_us_low(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_pq_us_low = WindFunc("w_pq_us_low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_pq_us_close
Function w_pq_us_close(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_pq_us_close = WindFunc("w_pq_us_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_pq_us_highclose
Function w_pq_us_highclose(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_pq_us_highclose = WindFunc("w_pq_us_highclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_pq_us_lowclose
Function w_pq_us_lowclose(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_pq_us_lowclose = WindFunc("w_pq_us_lowclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,w_pq_us_avgprice
Function w_pq_us_avgprice(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant) As Variant
  w_pq_us_avgprice = WindFunc("w_pq_us_avgprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,w_pq_us_volume
Function w_pq_us_volume(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_pq_us_volume = WindFunc("w_pq_us_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(w_pq_us_volume) <> vbString Then
        w_pq_us_volume = w_pq_us_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,w_pq_us_amount
Function w_pq_us_amount(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_pq_us_amount = WindFunc("w_pq_us_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(w_pq_us_amount) <> vbString Then
        w_pq_us_amount = w_pq_us_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|,w_pq_us_change
Function w_pq_us_change(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant) As Variant
  w_pq_us_change = WindFunc("w_pq_us_change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,w_pq_us_pctchange
Function w_pq_us_pctchange(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant) As Variant
  w_pq_us_pctchange = WindFunc("w_pq_us_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4efb||fffd||fffd||fffd||fffd|,w_pq_us_turn
Function w_pq_us_turn(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant) As Variant
  w_pq_us_turn = WindFunc("w_pq_us_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_pq_us_avgturn
Function w_pq_us_avgturn(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant) As Variant
  w_pq_us_avgturn = WindFunc("w_pq_us_avgturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_pq_us_swing
Function w_pq_us_swing(WINDCODE_ As Variant, Optional StartDate_ As Variant, Optional EndDate_ As Variant) As Variant
  w_pq_us_swing = WindFunc("w_pq_us_swing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||73f||fffd||fffd||33c||fffd|,w_wq_open
Function w_wq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_open = WindFunc("w_wq_open", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,w_wq_high
Function w_wq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_high = WindFunc("w_wq_open", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,w_wq_low
Function w_wq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_low = WindFunc("w_wq_low", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_wq_close
Function w_wq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_close = WindFunc("w_wq_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_wq_us_preclose
Function w_wq_us_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_wq_us_preclose = WindFunc("w_wq_us_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||73f||fffd||fffd||33c||fffd|,w_wq_us_open
Function w_wq_us_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_wq_us_open = WindFunc("w_wq_us_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,w_wq_us_high
Function w_wq_us_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_wq_us_high = WindFunc("w_wq_us_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,w_wq_us_low
Function w_wq_us_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_wq_us_low = WindFunc("w_wq_us_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_wq_us_close
Function w_wq_us_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_wq_us_close = WindFunc("w_wq_us_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_wq_us_highclose
Function w_wq_us_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_wq_us_highclose = WindFunc("w_wq_us_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_wq_us_lowclose
Function w_wq_us_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_wq_us_lowclose = WindFunc("w_wq_us_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||73e||fffd||fffd||fffd|,w_wq_us_avgprice
Function w_wq_us_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_us_avgprice = WindFunc("w_wq_us_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||733||27d||fffd||fffd||fffd|,w_wq_us_volume
Function w_wq_us_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_wq_us_volume = WindFunc("w_wq_us_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_wq_us_volume) <> vbString Then
        w_wq_us_volume = w_wq_us_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||733||27d||fffd||fffd||fffd|,w_wq_us_amount
Function w_wq_us_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_wq_us_amount = WindFunc("w_wq_us_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_wq_us_amount) <> vbString Then
        w_wq_us_amount = w_wq_us_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|,w_wq_us_change
Function w_wq_us_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_us_change = WindFunc("w_wq_us_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,w_wq_us_pctchange
Function w_wq_us_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_us_pctchange = WindFunc("w_wq_us_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||73b||fffd||fffd||fffd||fffd||fffd|,w_wq_us_turn
Function w_wq_us_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_us_turn = WindFunc("w_wq_us_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_wq_us_avgturn
Function w_wq_us_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_us_avgturn = WindFunc("w_wq_us_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_wq_us_swing
Function w_wq_us_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_us_swing = WindFunc("w_wq_us_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_mq_preclose
Function w_mq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_preclose = WindFunc("w_mq_preclose", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||bf||fffd||fffd||33c||fffd|,w_mq_open
Function w_mq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_open = WindFunc("w_mq_open", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,w_mq_high
Function w_mq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_high = WindFunc("w_mq_high", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,w_mq_low
Function w_mq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_low = WindFunc("w_mq_low", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_mq_close
Function w_mq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_close = WindFunc("w_mq_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_mq_us_preclose
Function w_mq_us_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_mq_us_preclose = WindFunc("w_mq_us_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||bf||fffd||fffd||33c||fffd|,w_mq_us_open
Function w_mq_us_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_mq_us_open = WindFunc("w_mq_us_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,w_mq_us_high
Function w_mq_us_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_mq_us_high = WindFunc("w_mq_us_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,w_mq_us_low
Function w_mq_us_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_mq_us_low = WindFunc("w_mq_us_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_mq_us_close
Function w_mq_us_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_mq_us_close = WindFunc("w_mq_us_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_mq_us_highclose
Function w_mq_us_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_mq_us_highclose = WindFunc("w_mq_us_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_mq_us_lowclose
Function w_mq_us_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_mq_us_lowclose = WindFunc("w_mq_us_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||be||fffd||fffd||fffd|,w_mq_us_avgprice
Function w_mq_us_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_us_avgprice = WindFunc("w_mq_us_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||b3||27d||fffd||fffd||fffd|,w_mq_us_volume
Function w_mq_us_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_mq_us_volume = WindFunc("w_mq_us_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_mq_us_volume) <> vbString Then
        w_mq_us_volume = w_mq_us_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||b3||27d||fffd||fffd||fffd|,w_mq_us_amount
Function w_mq_us_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_mq_us_amount = WindFunc("w_mq_us_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_mq_us_amount) <> vbString Then
        w_mq_us_amount = w_mq_us_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|,w_mq_us_change
Function w_mq_us_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_us_change = WindFunc("w_mq_us_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,w_mq_us_pctchange
Function w_mq_us_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_us_pctchange = WindFunc("w_mq_us_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||bb||fffd||fffd||fffd||fffd||fffd|,w_mq_us_turn
Function w_mq_us_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_us_turn = WindFunc("w_mq_us_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_mq_us_avgturn
Function w_mq_us_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_us_avgturn = WindFunc("w_mq_us_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_mq_us_swing
Function w_mq_us_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_mq_us_swing = WindFunc("w_mq_us_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_yq_preclose
Function w_yq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_preclose = WindFunc("w_yq_preclose", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||afea||fffd||33c||fffd|,w_yq_open
Function w_yq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_open = WindFunc("w_yq_open", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,w_yq_high
Function w_yq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_high = WindFunc("w_yq_high", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,w_yq_low
Function w_yq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_low = WindFunc("w_yq_low", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_yq_close
Function w_yq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_close = WindFunc("w_yq_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_yq_us_preclose
Function w_yq_us_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_yq_us_preclose = WindFunc("w_yq_us_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||afea||fffd||33c||fffd|,w_yq_us_open
Function w_yq_us_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_yq_us_open = WindFunc("w_yq_us_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd|,w_yq_us_high
Function w_yq_us_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_yq_us_high = WindFunc("w_yq_us_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd|,w_yq_us_low
Function w_yq_us_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_yq_us_low = WindFunc("w_yq_us_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_yq_us_close
Function w_yq_us_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_yq_us_close = WindFunc("w_yq_us_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_yq_us_highclose
Function w_yq_us_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_yq_us_highclose = WindFunc("w_yq_us_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,w_yq_us_lowclose
Function w_yq_us_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  w_yq_us_lowclose = WindFunc("w_yq_us_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_yq_us_avgprice
Function w_yq_us_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_us_avgprice = WindFunc("w_yq_us_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,w_yq_us_volume
Function w_yq_us_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_yq_us_volume = WindFunc("w_yq_us_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_yq_us_volume) <> vbString Then
        w_yq_us_volume = w_yq_us_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd|,w_yq_us_amount
Function w_yq_us_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_yq_us_amount = WindFunc("w_yq_us_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_yq_us_amount) <> vbString Then
        w_yq_us_amount = w_yq_us_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd|,w_yq_us_change
Function w_yq_us_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_us_change = WindFunc("w_yq_us_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd|,w_yq_us_pctchange
Function w_yq_us_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_us_pctchange = WindFunc("w_yq_us_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||aefb||fffd||fffd||fffd||fffd|,w_yq_us_turn
Function w_yq_us_turn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_us_turn = WindFunc("w_yq_us_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_yq_us_avgturn
Function w_yq_us_avgturn(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_us_avgturn = WindFunc("w_yq_us_avgturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,w_yq_us_swing
Function w_yq_us_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_yq_us_swing = WindFunc("w_yq_us_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||368||fffd||fffd||fffd|,w_unit_current
Function w_unit_current(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_unit_current = WindFunc("w_unit_current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
    If VarType(w_unit_current) <> vbString Then
        w_unit_current = w_unit_current / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|5%|fffd||fffd||fffd||fffd||fffd||fffd|,w_unit_over5pctholder
Function w_unit_over5pctholder(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_unit_over5pctholder = WindFunc("w_unit_over5pctholder", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||231||fffd||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,f_stm_issuingdate_qty
Function f_stm_issuingdate_qty(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  f_stm_issuingdate_qty = WindFunc("f_stm_issuingdate_qty", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),w_info_ptmday
Function w_info_ptmday(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_info_ptmday = WindFunc("w_info_ptmday", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||437||fffd||2bd| ,w_info_issuer_type
Function w_info_issuer_type(WINDCODE_ As Variant) As Variant
  w_info_issuer_type = WindFunc("w_info_issuer_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd|,w_info_issuer_iponum
Function w_info_issuer_iponum(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  w_info_issuer_iponum = WindFunc("w_info_issuer_iponum", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
    If VarType(w_info_issuer_iponum) <> vbString Then
        w_info_issuer_iponum = w_info_issuer_iponum / UnitVal_
    End If
End Function

' |fffd||fffd||fffd||436||fffd||fffd||fffd|w_info_issuer_obj
Function w_info_issuer_obj(WINDCODE_ As Variant) As Variant
  w_info_issuer_obj = WindFunc("w_info_issuer_obj", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,w_info_guarantor
Function w_info_guarantor(WINDCODE_ As Variant) As Variant
  w_info_guarantor = WindFunc("w_info_guarantor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,w_wq_preclose
Function w_wq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_wq_preclose = WindFunc("w_wq_preclose", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||437||fffd||2bd|,hks_ipo_type
Function hks_ipo_type(WINDCODE_ As Variant) As Variant
  hks_ipo_type = WindFunc("hks_ipo_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||fffd||476||fffd||fffd||fffd||fffd|,hks_ipo_HearingDate
Function hks_ipo_HearingDate(WINDCODE_ As Variant) As Variant
  hks_ipo_HearingDate = WindFunc("hks_ipo_HearingDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|,hks_ipo_WpipReleasingdate
Function hks_ipo_WpipReleasingdate(WINDCODE_ As Variant) As Variant
  hks_ipo_WpipReleasingdate = WindFunc("hks_ipo_WpipReleasingdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||ae7a||fffd||fffd||5b9||fffd||fffd|,hks_ipo_issuedate_e
Function hks_ipo_issuedate_e(WINDCODE_ As Variant) As Variant
  hks_ipo_issuedate_e = WindFunc("hks_ipo_issuedate_e", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||ae7a||fffd||fffd||2bc||fffd||fffd|,hks_ipo_issuedate_o
Function hks_ipo_issuedate_o(WINDCODE_ As Variant) As Variant
  hks_ipo_issuedate_o = WindFunc("hks_ipo_issuedate_o", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,hks_ipo_pricingdate
Function hks_ipo_pricingdate(WINDCODE_ As Variant) As Variant
  hks_ipo_pricingdate = WindFunc("hks_ipo_pricingdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_ipo_resultdate
Function hks_ipo_resultdate(WINDCODE_ As Variant) As Variant
  hks_ipo_resultdate = WindFunc("hks_ipo_resultdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||439||27c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_ipo_maxprice
Function hks_ipo_maxprice(WINDCODE_ As Variant) As Variant
  hks_ipo_maxprice = WindFunc("hks_ipo_maxprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||439||27c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_ipo_minprice
Function hks_ipo_minprice(WINDCODE_ As Variant) As Variant
  hks_ipo_minprice = WindFunc("hks_ipo_minprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|524||fffd||2de2||fffd||fffd||fffd||fffd||4ef||fffd||2a3||fffd||fffd||fffd||37c||6e3||fffd|,hks_ipo_pemin
Function hks_ipo_pemin(WINDCODE_ As Variant) As Variant
  hks_ipo_pemin = WindFunc("hks_ipo_pemin", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|524||fffd||2de2||fffd||fffd||fffd||fffd||4ef||fffd||2a3||fffd||fffd||fffd||fffd||43c||6e3||fffd|,hks_ipo_pe
Function hks_ipo_pe(WINDCODE_ As Variant) As Variant
  hks_ipo_pe = WindFunc("hks_ipo_pe", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|524||fffd||2de2||fffd||fffd||fffd||fffd||4ef||fffd||2a3||fffd||fffd||fffd||7fc||6e3||fffd|,hks_ipo_pemax
Function hks_ipo_pemax(WINDCODE_ As Variant) As Variant
  hks_ipo_pemax = WindFunc("hks_ipo_pemax", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|22b||fffd||fffd||fffd||fffd||fffd||57d||fffd||fffd|,hks_ss_Turnover
Function hks_ss_Turnover(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_ss_Turnover = WindFunc("hks_ss_Turnover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
    If VarType(hks_ss_Turnover) <> vbString Then
        hks_ss_Turnover = hks_ss_Turnover / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57d||fffd||fffd||57c||fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||fffd|,hks_ss_TurnoverPct
Function hks_ss_TurnoverPct(WINDCODE_ As Variant, EndDate_ As Variant) As Variant
  hks_ss_TurnoverPct = WindFunc("hks_ss_TurnoverPct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd||fffd|,hks_ss_Turnover_H
Function hks_ss_Turnover_H(WINDCODE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_ss_Turnover_H = WindFunc("hks_ss_Turnover_H", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(EndDate_))
    If VarType(hks_ss_Turnover_H) <> vbString Then
        hks_ss_Turnover_H = hks_ss_Turnover_H / UnitVal_
    End If
End Function

'|22b||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd||fffd|,hks_ss_Volume
Function hks_ss_Volume(WINDCODE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_ss_Volume = WindFunc("hks_ss_Volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(EndDate_))
    If VarType(hks_ss_Volume) <> vbString Then
        hks_ss_Volume = hks_ss_Volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||27d||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_ss_VolumePct
Function hks_ss_VolumePct(WINDCODE_ As Variant, EndDate_ As Variant) As Variant
  hks_ss_VolumePct = WindFunc("hks_ss_VolumePct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||368||fffd||270||677||5b1||fffd|,hks_ss_VolumeToHshares
Function hks_ss_VolumeToHshares(WINDCODE_ As Variant, EndDate_ As Variant) As Variant
  hks_ss_VolumeToHshares = WindFunc("hks_ss_VolumeToHshares", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd||fffd|,hks_ss_volume_H
Function hks_ss_volume_H(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_ss_volume_H = WindFunc("hks_ss_volume_H", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_))
    If VarType(hks_ss_volume_H) <> vbString Then
        hks_ss_volume_H = hks_ss_volume_H / UnitVal_
    End If
End Function

'|ff||fffd||5b9||fffd||fffd||fffd|,hks_info_Lotsize
Function hks_info_Lotsize(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
  hks_info_Lotsize = WindFunc("hks_info_Lotsize", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_))
End Function

'|ff||fffd||fffd|DR|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_info_RO
Function hks_info_RO(WINDCODE_ As Variant) As Variant
  hks_info_RO = WindFunc("hks_info_RO", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_country
Function s_info_country(WINDCODE_ As Variant) As Variant
  s_info_country = WindFunc("s_info_country", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_exchange_CN()
Function s_info_exchange_CN(WINDCODE_ As Variant) As Variant
  s_info_exchange_CN = WindFunc("s_info_exchange_CN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4e2||fffd||13c||fffd||fffd|,s_info_market
Function s_info_market(WINDCODE_ As Variant) As Variant
  s_info_market = WindFunc("s_info_market", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5a4||22f||fffd||fffd||fffd||fffd| ,s_info_type
Function s_info_type(WINDCODE_ As Variant) As Variant
  s_info_type = WindFunc("s_info_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5a4||22f||fffd||fffd||fffd||fffd|(|3f8||fffd||fffd|),s_info_typeII
Function s_info_typeII(WINDCODE_ As Variant) As Variant
  s_info_typeII = WindFunc("s_info_typeII", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||430||fffd|,s_info_Mkt
Function s_info_Mkt(WINDCODE_ As Variant) As Variant
  s_info_Mkt = WindFunc("s_info_Mkt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5|,hks_info_industry_HS
Function hks_info_industry_HS(WINDCODE_ As Variant, Category_ As String) As Variant
  hks_info_industry_HS = WindFunc("hks_info_industry_HS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Category_)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd|,s_info_Briefing
Function s_info_Briefing(WINDCODE_ As Variant) As Variant
  s_info_Briefing = WindFunc("s_info_Briefing", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5bd||fffd||fffd||3e2||ff||fffd||fffd||fffd||fffd||3e2|,hks_ev_CashDvd
Function hks_ev_CashDvd(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
  hks_ev_CashDvd = WindFunc("hks_ev_CashDvd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_))
End Function

'.............|fffd||fffd||fffd||71a31||fffd|:

'|fffd||fffd||fffd||6b1||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,hks_stm_issuingdate2
Function hks_stm_issuingdate2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  hks_stm_issuingdate2 = WindFunc("hks_stm_issuingdate2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||ffbb||fffd||fffd||fffd||4f6||fffd|(TTM),hks_fa_cashflow_ttm
Function hks_fa_cashflow_ttm(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_fa_cashflow_ttm = WindFunc("hks_fa_cashflow_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(TYPE_))
    If VarType(hks_fa_cashflow_ttm) <> vbString Then
        hks_fa_cashflow_ttm = hks_fa_cashflow_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_gr_ttm
Function hks_fa_gr_ttm(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_fa_gr_ttm = WindFunc("hks_fa_gr_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(TYPE_))
    If VarType(hks_fa_gr_ttm) <> vbString Then
        hks_fa_gr_ttm = hks_fa_gr_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_netprofit_ttm
Function hks_fa_netprofit_ttm(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_fa_netprofit_ttm = WindFunc("hks_fa_netprofit_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(TYPE_))
    If VarType(hks_fa_netprofit_ttm) <> vbString Then
        hks_fa_netprofit_ttm = hks_fa_netprofit_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_operatecashflow_ttm
Function hks_fa_operatecashflow_ttm(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_fa_operatecashflow_ttm = WindFunc("hks_fa_operatecashflow_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(TYPE_))
    If VarType(hks_fa_operatecashflow_ttm) <> vbString Then
        hks_fa_operatecashflow_ttm = hks_fa_operatecashflow_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_or_ttm
Function hks_fa_or_ttm(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_fa_or_ttm = WindFunc("hks_fa_or_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(DEALDATE_), GetValidCurType(TYPE_))
    If VarType(hks_fa_or_ttm) <> vbString Then
        hks_fa_or_ttm = hks_fa_or_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|,s_stm07_is_12
Function s_stm07_is_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_12 = WindFunc("s_stm07_is_12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_12) <> vbString Then
        s_stm07_is_12 = s_stm07_is_12 / UnitVal_
    End If
End Function

'|fffd||fffd||221||fffd||fffd||fffd||57a||fffd||36c||5fc||fffd||fffd||fffd||3eef6||fffd|,s_stm07_is_35
Function s_stm07_is_35(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_35 = WindFunc("s_stm07_is_35", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_35) <> vbString Then
        s_stm07_is_35 = s_stm07_is_35 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_22
Function s_stm07_is_22(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_22 = WindFunc("s_stm07_is_22", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_22) <> vbString Then
        s_stm07_is_22 = s_stm07_is_22 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_62
Function s_stm07_is_62(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_62 = WindFunc("s_stm07_is_62", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_62) <> vbString Then
        s_stm07_is_62 = s_stm07_is_62 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||5a7||fffd||fffd|,s_stm07_is_23
Function s_stm07_is_23(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_23 = WindFunc("s_stm07_is_23", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_23) <> vbString Then
        s_stm07_is_23 = s_stm07_is_23 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||271||fffd|,s_stm07_is_86
Function s_stm07_is_86(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_86 = WindFunc("s_stm07_is_86", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_86) <> vbString Then
        s_stm07_is_86 = s_stm07_is_86 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_85
Function s_stm07_is_85(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_85 = WindFunc("s_stm07_is_85", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_85) <> vbString Then
        s_stm07_is_85 = s_stm07_is_85 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_60
Function s_stm07_is_60(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_60 = WindFunc("s_stm07_is_60", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_60) <> vbString Then
        s_stm07_is_60 = s_stm07_is_60 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_61
Function s_stm07_is_61(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_61 = WindFunc("s_stm07_is_61", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_61) <> vbString Then
        s_stm07_is_61 = s_stm07_is_61 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fe||fffd||fffd||fffd||2a7|,s_stm07_is_51
Function s_stm07_is_51(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_51 = WindFunc("s_stm07_is_51", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_51) <> vbString Then
        s_stm07_is_51 = s_stm07_is_51 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||733||271||fffd|,s_stm07_is_84
Function s_stm07_is_84(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_84 = WindFunc("s_stm07_is_84", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_84) <> vbString Then
        s_stm07_is_84 = s_stm07_is_84 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_83
Function s_stm07_is_83(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_83 = WindFunc("s_stm07_is_83", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_83) <> vbString Then
        s_stm07_is_83 = s_stm07_is_83 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_14
Function s_stm07_is_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_14 = WindFunc("s_stm07_is_14", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_14) <> vbString Then
        s_stm07_is_14 = s_stm07_is_14 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||271||fffd|,s_stm07_is_10
Function s_stm07_is_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_10 = WindFunc("s_stm07_is_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_10) <> vbString Then
        s_stm07_is_10 = s_stm07_is_10 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|,s_stm07_is_48
Function s_stm07_is_48(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_48 = WindFunc("s_stm07_is_48", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_48) <> vbString Then
        s_stm07_is_48 = s_stm07_is_48 / UnitVal_
    End If
End Function

'|4ea||4b5||2f0||fffd||3cc38||fffd||fffd||fffd|,s_stm07_is_11
Function s_stm07_is_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_11 = WindFunc("s_stm07_is_11", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_11) <> vbString Then
        s_stm07_is_11 = s_stm07_is_11 / UnitVal_
    End If
End Function

'|376||fffd||2be||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_17
Function s_stm07_is_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_17 = WindFunc("s_stm07_is_17", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_17) <> vbString Then
        s_stm07_is_17 = s_stm07_is_17 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||5a7||fffd||fffd|,s_stm07_is_20
Function s_stm07_is_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_20 = WindFunc("s_stm07_is_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_20) <> vbString Then
        s_stm07_is_20 = s_stm07_is_20 / UnitVal_
    End If
End Function

'|fffd||fffd||5ec||fffd||fffd||fffd||fffd|,s_stm07_is_28
Function s_stm07_is_28(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_28 = WindFunc("s_stm07_is_28", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_28) <> vbString Then
        s_stm07_is_28 = s_stm07_is_28 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0|,s_stm07_is_56
Function s_stm07_is_56(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_56 = WindFunc("s_stm07_is_56", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_56) <> vbString Then
        s_stm07_is_56 = s_stm07_is_56 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|,s_stm07_is_9
Function s_stm07_is_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_9 = WindFunc("s_stm07_is_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_9) <> vbString Then
        s_stm07_is_9 = s_stm07_is_9 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||5a7||fffd||fffd|,s_stm07_is_50
Function s_stm07_is_50(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_50 = WindFunc("s_stm07_is_50", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_50) <> vbString Then
        s_stm07_is_50 = s_stm07_is_50 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|,s_stm07_is_15
Function s_stm07_is_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_15 = WindFunc("s_stm07_is_15", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_15) <> vbString Then
        s_stm07_is_15 = s_stm07_is_15 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_92
Function s_stm07_is_92(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_92 = WindFunc("s_stm07_is_92", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_92) <> vbString Then
        s_stm07_is_92 = s_stm07_is_92 / UnitVal_
    End If
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|,s_stm07_is_93
Function s_stm07_is_93(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_93 = WindFunc("s_stm07_is_93", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_93) <> vbString Then
        s_stm07_is_93 = s_stm07_is_93 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||fffd||368||fffd||276||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|,s_stm07_is_94
Function s_stm07_is_94(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_94 = WindFunc("s_stm07_is_94", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_94) <> vbString Then
        s_stm07_is_94 = s_stm07_is_94 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|,s_stm07_is_95
Function s_stm07_is_95(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_95 = WindFunc("s_stm07_is_95", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_95) <> vbString Then
        s_stm07_is_95 = s_stm07_is_95 / UnitVal_
    End If
End Function

'|3b4||237||fffd||3f5||fffd||376||fffd||fffd||fffd||fffd||2a7|,s_stm07_is_87
Function s_stm07_is_87(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_87 = WindFunc("s_stm07_is_87", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_87) <> vbString Then
        s_stm07_is_87 = s_stm07_is_87 / UnitVal_
    End If
End Function

'|fffd||2f1||fffd||fffd||fffd|,s_stm07_is_39
Function s_stm07_is_39(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_39 = WindFunc("s_stm07_is_39", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_39) <> vbString Then
        s_stm07_is_39 = s_stm07_is_39 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|,s_stm07_is_19
Function s_stm07_is_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_19 = WindFunc("s_stm07_is_19", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_19) <> vbString Then
        s_stm07_is_19 = s_stm07_is_19 / UnitVal_
    End If
End Function

'|4ea||4b5||5a7||fffd||fffd|,s_stm07_is_27
Function s_stm07_is_27(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_27 = WindFunc("s_stm07_is_27", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_27) <> vbString Then
        s_stm07_is_27 = s_stm07_is_27 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a7||fffd||fffd|,s_stm07_is_40
Function s_stm07_is_40(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_40 = WindFunc("s_stm07_is_40", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_40) <> vbString Then
        s_stm07_is_40 = s_stm07_is_40 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_49
Function s_stm07_is_49(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_49 = WindFunc("s_stm07_is_49", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_49) <> vbString Then
        s_stm07_is_49 = s_stm07_is_49 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_16
Function s_stm07_is_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_16 = WindFunc("s_stm07_is_16", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_16) <> vbString Then
        s_stm07_is_16 = s_stm07_is_16 / UnitVal_
    End If
End Function

'|fffd||fffd||4be||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_25
Function s_stm07_is_25(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_25 = WindFunc("s_stm07_is_25", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_25) <> vbString Then
        s_stm07_is_25 = s_stm07_is_25 / UnitVal_
    End If
End Function

'|fffd||5b1||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_38
Function s_stm07_is_38(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_38 = WindFunc("s_stm07_is_38", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_38) <> vbString Then
        s_stm07_is_38 = s_stm07_is_38 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|,s_stm07_is_55
Function s_stm07_is_55(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_55 = WindFunc("s_stm07_is_55", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_55) <> vbString Then
        s_stm07_is_55 = s_stm07_is_55 / UnitVal_
    End If
End Function

'|fffd||2e36||5a7||fffd||fffd|,s_stm07_is_33
Function s_stm07_is_33(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_33 = WindFunc("s_stm07_is_33", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_33) <> vbString Then
        s_stm07_is_33 = s_stm07_is_33 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_13
Function s_stm07_is_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_13 = WindFunc("s_stm07_is_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_13) <> vbString Then
        s_stm07_is_13 = s_stm07_is_13 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4ea||fffd||fffd||4b5||fffd||37a||fffd||4ea||fffd||fffd||4b5||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_82
Function s_stm07_is_82(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_is_82 = WindFunc("s_stm07_is_82", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_is_82) <> vbString Then
        s_stm07_is_82 = s_stm07_is_82 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_18
Function s_stm07_bs_18(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_18 = WindFunc("s_stm07_bs_18", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_18) <> vbString Then
        s_stm07_bs_18 = s_stm07_bs_18 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_51
Function s_stm07_bs_51(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_51 = WindFunc("s_stm07_bs_51", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_51) <> vbString Then
        s_stm07_bs_51 = s_stm07_bs_51 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_52
Function s_stm07_bs_52(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_52 = WindFunc("s_stm07_bs_52", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_52) <> vbString Then
        s_stm07_bs_52 = s_stm07_bs_52 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_10
Function s_stm07_bs_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_10 = WindFunc("s_stm07_bs_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_10) <> vbString Then
        s_stm07_bs_10 = s_stm07_bs_10 / UnitVal_
    End If
End Function

'|fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_68
Function s_stm07_bs_68(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_68 = WindFunc("s_stm07_bs_68", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_68) <> vbString Then
        s_stm07_bs_68 = s_stm07_bs_68 / UnitVal_
    End If
End Function

'|fffd||fffd||32f||fffd||fffd||fffd||fffd|,s_stm07_bs_19
Function s_stm07_bs_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_19 = WindFunc("s_stm07_bs_19", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_19) <> vbString Then
        s_stm07_bs_19 = s_stm07_bs_19 / UnitVal_
    End If
End Function

'|4e6||fffd||577||5b1||fffd||3b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_58
Function s_stm07_bs_58(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_58 = WindFunc("s_stm07_bs_58", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_58) <> vbString Then
        s_stm07_bs_58 = s_stm07_bs_58 / UnitVal_
    End If
End Function

'|4e6||fffd||577||5b1||fffd||3b4||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_59
Function s_stm07_bs_59(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_59 = WindFunc("s_stm07_bs_59", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_59) <> vbString Then
        s_stm07_bs_59 = s_stm07_bs_59 / UnitVal_
    End If
End Function

'|4e6||fffd||579||fffd||fffd||fffd|,s_stm07_bs_15
Function s_stm07_bs_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_15 = WindFunc("s_stm07_bs_15", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_15) <> vbString Then
        s_stm07_bs_15 = s_stm07_bs_15 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd|,s_stm07_bs_12
Function s_stm07_bs_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_12 = WindFunc("s_stm07_bs_12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_12) <> vbString Then
        s_stm07_bs_12 = s_stm07_bs_12 / UnitVal_
    End If
End Function

'|4e6||fffd||571||fffd||fffd||fffd|,s_stm07_bs_55
Function s_stm07_bs_55(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_55 = WindFunc("s_stm07_bs_55", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_55) <> vbString Then
        s_stm07_bs_55 = s_stm07_bs_55 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||6b5||fffd||fffd||6b5||137||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_20
Function s_stm07_bs_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_20 = WindFunc("s_stm07_bs_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_20) <> vbString Then
        s_stm07_bs_20 = s_stm07_bs_20 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_21
Function s_stm07_bs_21(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_21 = WindFunc("s_stm07_bs_21", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_21) <> vbString Then
        s_stm07_bs_21 = s_stm07_bs_21 / UnitVal_
    End If
End Function

'|4e6||fffd||577||5b1||fffd||fffd||2ff||fffd|,s_stm07_bs_57
Function s_stm07_bs_57(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_57 = WindFunc("s_stm07_bs_57", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_57) <> vbString Then
        s_stm07_bs_57 = s_stm07_bs_57 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||1b1||fffd||fffd|,s_stm07_bs_11
Function s_stm07_bs_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_11 = WindFunc("s_stm07_bs_11", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_11) <> vbString Then
        s_stm07_bs_11 = s_stm07_bs_11 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||57f||fffd|,s_stm07_bs_13
Function s_stm07_bs_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_13 = WindFunc("s_stm07_bs_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_13) <> vbString Then
        s_stm07_bs_13 = s_stm07_bs_13 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||2ff||fffd|,s_stm07_bs_14
Function s_stm07_bs_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_14 = WindFunc("s_stm07_bs_14", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_14) <> vbString Then
        s_stm07_bs_14 = s_stm07_bs_14 / UnitVal_
    End If
End Function

'|4e6||fffd||577||5b1||fffd||fffd||fffd||36c||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_152
Function s_stm07_bs_152(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_152 = WindFunc("s_stm07_bs_152", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_152) <> vbString Then
        s_stm07_bs_152 = s_stm07_bs_152 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||3c78||fffd||fffd||fffd||fffd|,s_stm07_bs_67
Function s_stm07_bs_67(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_67 = WindFunc("s_stm07_bs_67", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_67) <> vbString Then
        s_stm07_bs_67 = s_stm07_bs_67 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_49
Function s_stm07_bs_49(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_49 = WindFunc("s_stm07_bs_49", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_49) <> vbString Then
        s_stm07_bs_49 = s_stm07_bs_49 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stm07_bs_63
Function s_stm07_bs_63(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_63 = WindFunc("s_stm07_bs_63", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_63) <> vbString Then
        s_stm07_bs_63 = s_stm07_bs_63 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||5a4||fffd||fffd|,s_stm07_bs_62
Function s_stm07_bs_62(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_62 = WindFunc("s_stm07_bs_62", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_62) <> vbString Then
        s_stm07_bs_62 = s_stm07_bs_62 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd|,s_stm07_bs_17
Function s_stm07_bs_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_17 = WindFunc("s_stm07_bs_17", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_17) <> vbString Then
        s_stm07_bs_17 = s_stm07_bs_17 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_54
Function s_stm07_bs_54(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_54 = WindFunc("s_stm07_bs_54", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_54) <> vbString Then
        s_stm07_bs_54 = s_stm07_bs_54 / UnitVal_
    End If
End Function

'|4e6||fffd||577||5b1||fffd||fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_61
Function s_stm07_bs_61(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_61 = WindFunc("s_stm07_bs_61", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_61) <> vbString Then
        s_stm07_bs_61 = s_stm07_bs_61 / UnitVal_
    End If
End Function

'|4e6||fffd||574||fffd||3bb||5f7||fffd||fffd||fffd||fffd|,s_stm07_bs_56
Function s_stm07_bs_56(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_56 = WindFunc("s_stm07_bs_56", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_56) <> vbString Then
        s_stm07_bs_56 = s_stm07_bs_56 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||3fc||fffd|,s_stm07_bs_25
Function s_stm07_bs_25(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_25 = WindFunc("s_stm07_bs_25", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_25) <> vbString Then
        s_stm07_bs_25 = s_stm07_bs_25 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2bd||fffd|,s_stm07_bs_50
Function s_stm07_bs_50(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_50 = WindFunc("s_stm07_bs_50", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_50) <> vbString Then
        s_stm07_bs_50 = s_stm07_bs_50 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_stm07_bs_9
Function s_stm07_bs_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_9 = WindFunc("s_stm07_bs_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_9) <> vbString Then
        s_stm07_bs_9 = s_stm07_bs_9 / UnitVal_
    End If
End Function

'|4e6||fffd||577||5b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_60
Function s_stm07_bs_60(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_60 = WindFunc("s_stm07_bs_60", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_60) <> vbString Then
        s_stm07_bs_60 = s_stm07_bs_60 / UnitVal_
    End If
End Function

'|fffd||5bd||3cc34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43f||fffd||fffd||fffd|,s_stm07_bs_47
Function s_stm07_bs_47(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_47 = WindFunc("s_stm07_bs_47", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_47) <> vbString Then
        s_stm07_bs_47 = s_stm07_bs_47 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||36c||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_48
Function s_stm07_bs_48(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_48 = WindFunc("s_stm07_bs_48", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_48) <> vbString Then
        s_stm07_bs_48 = s_stm07_bs_48 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||fffd||3e2|,s_stm07_bs_16
Function s_stm07_bs_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_16 = WindFunc("s_stm07_bs_16", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_16) <> vbString Then
        s_stm07_bs_16 = s_stm07_bs_16 / UnitVal_
    End If
End Function

'|fffd||37b||fffd||fffd||2bd||fffd||fffd||fffd|,s_stm07_bs_66
Function s_stm07_bs_66(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_66 = WindFunc("s_stm07_bs_66", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_66) <> vbString Then
        s_stm07_bs_66 = s_stm07_bs_66 / UnitVal_
    End If
End Function

'|4e6||fffd||57f||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd|,s_stm07_bs_155
Function s_stm07_bs_155(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_155 = WindFunc("s_stm07_bs_155", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_155) <> vbString Then
        s_stm07_bs_155 = s_stm07_bs_155 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_37
Function s_stm07_bs_37(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_37 = WindFunc("s_stm07_bs_37", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_37) <> vbString Then
        s_stm07_bs_37 = s_stm07_bs_37 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_70
Function s_stm07_bs_70(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_70 = WindFunc("s_stm07_bs_70", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_70) <> vbString Then
        s_stm07_bs_70 = s_stm07_bs_70 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_35
Function s_stm07_bs_35(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_35 = WindFunc("s_stm07_bs_35", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_35) <> vbString Then
        s_stm07_bs_35 = s_stm07_bs_35 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||3ef||3bb||fffd||fffd|,s_stm07_bs_69
Function s_stm07_bs_69(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_69 = WindFunc("s_stm07_bs_69", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_69) <> vbString Then
        s_stm07_bs_69 = s_stm07_bs_69 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_26
Function s_stm07_bs_26(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_26 = WindFunc("s_stm07_bs_26", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_26) <> vbString Then
        s_stm07_bs_26 = s_stm07_bs_26 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_32
Function s_stm07_bs_32(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_32 = WindFunc("s_stm07_bs_32", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_32) <> vbString Then
        s_stm07_bs_32 = s_stm07_bs_32 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||fffd||2b2||fffd|,s_stm07_bs_41
Function s_stm07_bs_41(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_41 = WindFunc("s_stm07_bs_41", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_41) <> vbString Then
        s_stm07_bs_41 = s_stm07_bs_41 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2fb||fffd||fffd||2b2||fffd|,s_stm07_bs_65
Function s_stm07_bs_65(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_65 = WindFunc("s_stm07_bs_65", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_65) <> vbString Then
        s_stm07_bs_65 = s_stm07_bs_65 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||174||fffd||fffd||ef30||fffd||fffd||fffd|,s_stm07_bs_53
Function s_stm07_bs_53(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_53 = WindFunc("s_stm07_bs_53", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_53) <> vbString Then
        s_stm07_bs_53 = s_stm07_bs_53 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||73c||fffd|,s_stm07_bs_74
Function s_stm07_bs_74(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_74 = WindFunc("s_stm07_bs_74", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_74) <> vbString Then
        s_stm07_bs_74 = s_stm07_bs_74 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||5a4||fffd||fffd|,s_stm07_bs_64
Function s_stm07_bs_64(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_64 = WindFunc("s_stm07_bs_64", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_64) <> vbString Then
        s_stm07_bs_64 = s_stm07_bs_64 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_36
Function s_stm07_bs_36(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_36 = WindFunc("s_stm07_bs_36", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_36) <> vbString Then
        s_stm07_bs_36 = s_stm07_bs_36 / UnitVal_
    End If
End Function

'|fffd||6bd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_33
Function s_stm07_bs_33(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_33 = WindFunc("s_stm07_bs_33", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_33) <> vbString Then
        s_stm07_bs_33 = s_stm07_bs_33 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||32f||fffd||fffd||fffd||fffd|,s_stm07_bs_40
Function s_stm07_bs_40(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_40 = WindFunc("s_stm07_bs_40", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_40) <> vbString Then
        s_stm07_bs_40 = s_stm07_bs_40 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd|,s_stm07_bs_27
Function s_stm07_bs_27(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_27 = WindFunc("s_stm07_bs_27", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_27) <> vbString Then
        s_stm07_bs_27 = s_stm07_bs_27 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b9||fffd||228||376||fffd||fffd|,s_stm07_bs_29
Function s_stm07_bs_29(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_29 = WindFunc("s_stm07_bs_29", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_29) <> vbString Then
        s_stm07_bs_29 = s_stm07_bs_29 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||3fc||fffd|,s_stm07_bs_46
Function s_stm07_bs_46(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_46 = WindFunc("s_stm07_bs_46", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_46) <> vbString Then
        s_stm07_bs_46 = s_stm07_bs_46 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5a7||fffd||fffd|,s_stm07_bs_38
Function s_stm07_bs_38(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_38 = WindFunc("s_stm07_bs_38", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_38) <> vbString Then
        s_stm07_bs_38 = s_stm07_bs_38 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|,s_stm07_bs_39
Function s_stm07_bs_39(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_39 = WindFunc("s_stm07_bs_39", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_39) <> vbString Then
        s_stm07_bs_39 = s_stm07_bs_39 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||537||fffd||fffd||632||fffd|,s_stm07_bs_28
Function s_stm07_bs_28(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_28 = WindFunc("s_stm07_bs_28", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_28) <> vbString Then
        s_stm07_bs_28 = s_stm07_bs_28 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_34
Function s_stm07_bs_34(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_34 = WindFunc("s_stm07_bs_34", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_34) <> vbString Then
        s_stm07_bs_34 = s_stm07_bs_34 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd|,s_stm07_bs_146
Function s_stm07_bs_146(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_146 = WindFunc("s_stm07_bs_146", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_146) <> vbString Then
        s_stm07_bs_146 = s_stm07_bs_146 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||57f||fffd|,s_stm07_bs_30
Function s_stm07_bs_30(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_30 = WindFunc("s_stm07_bs_30", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_30) <> vbString Then
        s_stm07_bs_30 = s_stm07_bs_30 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd|,s_stm07_bs_31
Function s_stm07_bs_31(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_31 = WindFunc("s_stm07_bs_31", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_31) <> vbString Then
        s_stm07_bs_31 = s_stm07_bs_31 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stm07_bs_42
Function s_stm07_bs_42(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_42 = WindFunc("s_stm07_bs_42", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_42) <> vbString Then
        s_stm07_bs_42 = s_stm07_bs_42 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6b8||fffd||56e|,s_stm07_bs_107
Function s_stm07_bs_107(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_107 = WindFunc("s_stm07_bs_107", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_107) <> vbString Then
        s_stm07_bs_107 = s_stm07_bs_107 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||fffd||fffd||fffd||56e||22f|,s_stm07_bs_147
Function s_stm07_bs_147(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_147 = WindFunc("s_stm07_bs_147", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_147) <> vbString Then
        s_stm07_bs_147 = s_stm07_bs_147 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||5b1||fffd||fffd||2ff||fffd|,s_stm07_bs_114
Function s_stm07_bs_114(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_114 = WindFunc("s_stm07_bs_114", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_114) <> vbString Then
        s_stm07_bs_114 = s_stm07_bs_114 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||fffd||3e2|,s_stm07_bs_82
Function s_stm07_bs_82(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_82 = WindFunc("s_stm07_bs_82", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_82) <> vbString Then
        s_stm07_bs_82 = s_stm07_bs_82 / UnitVal_
    End If
End Function

'|3b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_117
Function s_stm07_bs_117(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_117 = WindFunc("s_stm07_bs_117", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_117) <> vbString Then
        s_stm07_bs_117 = s_stm07_bs_117 / UnitVal_
    End If
End Function

'|3b4||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_118
Function s_stm07_bs_118(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_118 = WindFunc("s_stm07_bs_118", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_118) <> vbString Then
        s_stm07_bs_118 = s_stm07_bs_118 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd|,s_stm07_bs_84
Function s_stm07_bs_84(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_84 = WindFunc("s_stm07_bs_84", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_84) <> vbString Then
        s_stm07_bs_84 = s_stm07_bs_84 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||2bf||fffd|,s_stm07_bs_116
Function s_stm07_bs_116(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_116 = WindFunc("s_stm07_bs_116", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_116) <> vbString Then
        s_stm07_bs_116 = s_stm07_bs_116 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_119
Function s_stm07_bs_119(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_119 = WindFunc("s_stm07_bs_119", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_119) <> vbString Then
        s_stm07_bs_119 = s_stm07_bs_119 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||6b8||fffd||56e|,s_stm07_bs_76
Function s_stm07_bs_76(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_76 = WindFunc("s_stm07_bs_76", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_76) <> vbString Then
        s_stm07_bs_76 = s_stm07_bs_76 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,s_stm07_bs_89
Function s_stm07_bs_89(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_89 = WindFunc("s_stm07_bs_89", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_89) <> vbString Then
        s_stm07_bs_89 = s_stm07_bs_89 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||574||fffd||fffd|,s_stm07_bs_109
Function s_stm07_bs_109(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_109 = WindFunc("s_stm07_bs_109", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_109) <> vbString Then
        s_stm07_bs_109 = s_stm07_bs_109 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a4||22f||fffd||fffd|,s_stm07_bs_124
Function s_stm07_bs_124(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_124 = WindFunc("s_stm07_bs_124", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_124) <> vbString Then
        s_stm07_bs_124 = s_stm07_bs_124 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||56e|,s_stm07_bs_110
Function s_stm07_bs_110(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_110 = WindFunc("s_stm07_bs_110", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_110) <> vbString Then
        s_stm07_bs_110 = s_stm07_bs_110 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_85
Function s_stm07_bs_85(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_85 = WindFunc("s_stm07_bs_85", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_85) <> vbString Then
        s_stm07_bs_85 = s_stm07_bs_85 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||1b1||fffd||fffd|,s_stm07_bs_77
Function s_stm07_bs_77(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_77 = WindFunc("s_stm07_bs_77", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_77) <> vbString Then
        s_stm07_bs_77 = s_stm07_bs_77 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd|,s_stm07_bs_78
Function s_stm07_bs_78(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_78 = WindFunc("s_stm07_bs_78", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_78) <> vbString Then
        s_stm07_bs_78 = s_stm07_bs_78 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||2f0||fffd||fffd|,s_stm07_bs_81
Function s_stm07_bs_81(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_81 = WindFunc("s_stm07_bs_81", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_81) <> vbString Then
        s_stm07_bs_81 = s_stm07_bs_81 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bc63||5a4||fffd||fffd|,s_stm07_bs_115
Function s_stm07_bs_115(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_115 = WindFunc("s_stm07_bs_115", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_115) <> vbString Then
        s_stm07_bs_115 = s_stm07_bs_115 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_120
Function s_stm07_bs_120(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_120 = WindFunc("s_stm07_bs_120", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_120) <> vbString Then
        s_stm07_bs_120 = s_stm07_bs_120 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||56e|,s_stm07_bs_87
Function s_stm07_bs_87(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_87 = WindFunc("s_stm07_bs_87", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_87) <> vbString Then
        s_stm07_bs_87 = s_stm07_bs_87 / UnitVal_
    End If
End Function

'|fffd||fffd||47a||fffd||fffd||fffd|,s_stm07_bs_122
Function s_stm07_bs_122(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_122 = WindFunc("s_stm07_bs_122", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_122) <> vbString Then
        s_stm07_bs_122 = s_stm07_bs_122 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2e36||fffd||fffd|,s_stm07_bs_149
Function s_stm07_bs_149(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_149 = WindFunc("s_stm07_bs_149", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_149) <> vbString Then
        s_stm07_bs_149 = s_stm07_bs_149 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||574||fffd||ef30||36c||4b5||fffd||fffd||fffd|,s_stm07_bs_153
Function s_stm07_bs_153(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_153 = WindFunc("s_stm07_bs_153", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_153) <> vbString Then
        s_stm07_bs_153 = s_stm07_bs_153 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd|,s_stm07_bs_105
Function s_stm07_bs_105(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_105 = WindFunc("s_stm07_bs_105", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_105) <> vbString Then
        s_stm07_bs_105 = s_stm07_bs_105 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|,s_stm07_bs_93
Function s_stm07_bs_93(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_93 = WindFunc("s_stm07_bs_93", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_93) <> vbString Then
        s_stm07_bs_93 = s_stm07_bs_93 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd|,s_stm07_bs_108
Function s_stm07_bs_108(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_108 = WindFunc("s_stm07_bs_108", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_108) <> vbString Then
        s_stm07_bs_108 = s_stm07_bs_108 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd|,s_stm07_bs_75
Function s_stm07_bs_75(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_75 = WindFunc("s_stm07_bs_75", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_75) <> vbString Then
        s_stm07_bs_75 = s_stm07_bs_75 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_83
Function s_stm07_bs_83(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_83 = WindFunc("s_stm07_bs_83", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_83) <> vbString Then
        s_stm07_bs_83 = s_stm07_bs_83 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||6b5||fffd||fffd||6b5||137||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,s_stm07_bs_88
Function s_stm07_bs_88(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_88 = WindFunc("s_stm07_bs_88", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_88) <> vbString Then
        s_stm07_bs_88 = s_stm07_bs_88 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd|,s_stm07_bs_113
Function s_stm07_bs_113(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_113 = WindFunc("s_stm07_bs_113", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_113) <> vbString Then
        s_stm07_bs_113 = s_stm07_bs_113 / UnitVal_
    End If
End Function

'|524||fffd||571||fffd||fffd||fffd|,s_stm07_bs_112
Function s_stm07_bs_112(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_112 = WindFunc("s_stm07_bs_112", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_112) <> vbString Then
        s_stm07_bs_112 = s_stm07_bs_112 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_stm07_bs_106
Function s_stm07_bs_106(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_106 = WindFunc("s_stm07_bs_106", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_106) <> vbString Then
        s_stm07_bs_106 = s_stm07_bs_106 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||5b0||fffd||fffd||43d||fffd||fffd|,s_stm07_bs_80
Function s_stm07_bs_80(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_80 = WindFunc("s_stm07_bs_80", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_80) <> vbString Then
        s_stm07_bs_80 = s_stm07_bs_80 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a4||22f||fffd||fffd|,s_stm07_bs_123
Function s_stm07_bs_123(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_123 = WindFunc("s_stm07_bs_123", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_123) <> vbString Then
        s_stm07_bs_123 = s_stm07_bs_123 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_150
Function s_stm07_bs_150(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_150 = WindFunc("s_stm07_bs_150", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_150) <> vbString Then
        s_stm07_bs_150 = s_stm07_bs_150 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57a||fffd||36c||5fc||fffd||fffd||fffd||fffd|,s_stm07_bs_154
Function s_stm07_bs_154(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_154 = WindFunc("s_stm07_bs_154", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_154) <> vbString Then
        s_stm07_bs_154 = s_stm07_bs_154 / UnitVal_
    End If
End Function

'|36c||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||fffd||17f||fffd||fffd||fffd|,s_stm07_bs_104
Function s_stm07_bs_104(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_104 = WindFunc("s_stm07_bs_104", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_104) <> vbString Then
        s_stm07_bs_104 = s_stm07_bs_104 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||2ff||fffd|,s_stm07_bs_79
Function s_stm07_bs_79(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_79 = WindFunc("s_stm07_bs_79", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_79) <> vbString Then
        s_stm07_bs_79 = s_stm07_bs_79 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e|,s_stm07_bs_111
Function s_stm07_bs_111(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_111 = WindFunc("s_stm07_bs_111", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_111) <> vbString Then
        s_stm07_bs_111 = s_stm07_bs_111 / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||3fc||fffd|,s_stm07_bs_128
Function s_stm07_bs_128(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_128 = WindFunc("s_stm07_bs_128", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_128) <> vbString Then
        s_stm07_bs_128 = s_stm07_bs_128 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,s_stm07_bs_148
Function s_stm07_bs_148(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_148 = WindFunc("s_stm07_bs_148", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_148) <> vbString Then
        s_stm07_bs_148 = s_stm07_bs_148 / UnitVal_
    End If
End Function

'|524||fffd||1b8||fffd||56e|,s_stm07_bs_86
Function s_stm07_bs_86(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_86 = WindFunc("s_stm07_bs_86", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_86) <> vbString Then
        s_stm07_bs_86 = s_stm07_bs_86 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd|,s_stm07_bs_96
Function s_stm07_bs_96(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_96 = WindFunc("s_stm07_bs_96", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_96) <> vbString Then
        s_stm07_bs_96 = s_stm07_bs_96 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||fffd||fffd||56e|,s_stm07_bs_98
Function s_stm07_bs_98(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_98 = WindFunc("s_stm07_bs_98", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_98) <> vbString Then
        s_stm07_bs_98 = s_stm07_bs_98 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd|,s_stm07_bs_94
Function s_stm07_bs_94(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_94 = WindFunc("s_stm07_bs_94", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_94) <> vbString Then
        s_stm07_bs_94 = s_stm07_bs_94 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|,s_stm07_bs_103
Function s_stm07_bs_103(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_103 = WindFunc("s_stm07_bs_103", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_103) <> vbString Then
        s_stm07_bs_103 = s_stm07_bs_103 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||56e||22f|,s_stm07_bs_95
Function s_stm07_bs_95(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_95 = WindFunc("s_stm07_bs_95", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_95) <> vbString Then
        s_stm07_bs_95 = s_stm07_bs_95 / UnitVal_
    End If
End Function

'|5e8||fffd||fffd||4e6||fffd||fffd||fffd||fffd|,s_stm07_bs_97
Function s_stm07_bs_97(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_97 = WindFunc("s_stm07_bs_97", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_97) <> vbString Then
        s_stm07_bs_97 = s_stm07_bs_97 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2fb||fffd||fffd||fffd||56e|,s_stm07_bs_121
Function s_stm07_bs_121(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_121 = WindFunc("s_stm07_bs_121", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_121) <> vbString Then
        s_stm07_bs_121 = s_stm07_bs_121 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,s_stm07_bs_99
Function s_stm07_bs_99(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_99 = WindFunc("s_stm07_bs_99", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_99) <> vbString Then
        s_stm07_bs_99 = s_stm07_bs_99 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_stm07_bs_134
Function s_stm07_bs_134(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_134 = WindFunc("s_stm07_bs_134", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_134) <> vbString Then
        s_stm07_bs_134 = s_stm07_bs_134 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd||3fc||fffd|,s_stm07_bs_141
Function s_stm07_bs_141(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_141 = WindFunc("s_stm07_bs_141", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_141) <> vbString Then
        s_stm07_bs_141 = s_stm07_bs_141 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_133
Function s_stm07_bs_133(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_133 = WindFunc("s_stm07_bs_133", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_133) <> vbString Then
        s_stm07_bs_133 = s_stm07_bs_133 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|,s_stm07_bs_140
Function s_stm07_bs_140(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_140 = WindFunc("s_stm07_bs_140", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_140) <> vbString Then
        s_stm07_bs_140 = s_stm07_bs_140 / UnitVal_
    End If
End Function

'|3b4||237||fffd||3f5||fffd||376||fffd||fffd||fffd||fffd||2a7|,s_stm07_bs_151
Function s_stm07_bs_151(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_151 = WindFunc("s_stm07_bs_151", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_151) <> vbString Then
        s_stm07_bs_151 = s_stm07_bs_151 / UnitVal_
    End If
End Function

'|3b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_132
Function s_stm07_bs_132(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_132 = WindFunc("s_stm07_bs_132", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_132) <> vbString Then
        s_stm07_bs_132 = s_stm07_bs_132 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||228||fffd||fffd|,s_stm07_bs_136
Function s_stm07_bs_136(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_136 = WindFunc("s_stm07_bs_136", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_136) <> vbString Then
        s_stm07_bs_136 = s_stm07_bs_136 / UnitVal_
    End If
End Function

'|4ef||fffd||e6b||fffd||fffd||fffd||fffd|,s_stm07_bs_131
Function s_stm07_bs_131(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_131 = WindFunc("s_stm07_bs_131", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_131) <> vbString Then
        s_stm07_bs_131 = s_stm07_bs_131 / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||276||fffd||228||fffd||fffd||fffd||73c||fffd|,s_stm07_bs_145
Function s_stm07_bs_145(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_145 = WindFunc("s_stm07_bs_145", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_145) <> vbString Then
        s_stm07_bs_145 = s_stm07_bs_145 / UnitVal_
    End If
End Function

'|fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_130
Function s_stm07_bs_130(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_130 = WindFunc("s_stm07_bs_130", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_130) <> vbString Then
        s_stm07_bs_130 = s_stm07_bs_130 / UnitVal_
    End If
End Function

'|fffd||fffd||4b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_135
Function s_stm07_bs_135(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_135 = WindFunc("s_stm07_bs_135", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_135) <> vbString Then
        s_stm07_bs_135 = s_stm07_bs_135 / UnitVal_
    End If
End Function

'|2b5||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||271||fffd|),s_stm07_bs_129
Function s_stm07_bs_129(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_bs_129 = WindFunc("s_stm07_bs_129", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_bs_129) <> vbString Then
        s_stm07_bs_129 = s_stm07_bs_129 / UnitVal_
    End If
End Function

'|fffd||575||fffd||fffd||fffd||2f0||fffd||477||fffd||fffd||fffd|,s_stm07_cs_10
Function s_stm07_cs_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_10 = WindFunc("s_stm07_cs_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_10) <> vbString Then
        s_stm07_cs_10 = s_stm07_cs_10 / UnitVal_
    End If
End Function

'|fffd||575||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bfad||4ea||fffd||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_stm07_cs_11
Function s_stm07_cs_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_11 = WindFunc("s_stm07_cs_11", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_11) <> vbString Then
        s_stm07_cs_11 = s_stm07_cs_11 / UnitVal_
    End If
End Function

'|fffd||575||fffd||fffd||fffd||52d||fffd||fffd||fffd||57a||fffd||36c||fffd||fffd||fffd||fffd||221||fffd||f5||fffd||fffd||5bd||fffd|,s_stm07_cs_16
Function s_stm07_cs_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_16 = WindFunc("s_stm07_cs_16", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_16) <> vbString Then
        s_stm07_cs_16 = s_stm07_cs_16 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||2e36||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_32
Function s_stm07_cs_32(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_32 = WindFunc("s_stm07_cs_32", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_32) <> vbString Then
        s_stm07_cs_32 = s_stm07_cs_32 / UnitVal_
    End If
End Function

'|fffd||fffd||221||fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||47e||fffd||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_15
Function s_stm07_cs_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_15 = WindFunc("s_stm07_cs_15", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_15) <> vbString Then
        s_stm07_cs_15 = s_stm07_cs_15 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_39
Function s_stm07_cs_39(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_39 = WindFunc("s_stm07_cs_39", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_39) <> vbString Then
        s_stm07_cs_39 = s_stm07_cs_39 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_stm07_cs_25
Function s_stm07_cs_25(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_25 = WindFunc("s_stm07_cs_25", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_25) <> vbString Then
        s_stm07_cs_25 = s_stm07_cs_25 / UnitVal_
    End If
End Function

'|fffd||37b||fffd||fffd||fffd||fffd||fffd||36c||4b5||fffd||fffd||17f||fffd||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_12
Function s_stm07_cs_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_12 = WindFunc("s_stm07_cs_12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_12) <> vbString Then
        s_stm07_cs_12 = s_stm07_cs_12 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_26
Function s_stm07_cs_26(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_26 = WindFunc("s_stm07_cs_26", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_26) <> vbString Then
        s_stm07_cs_26 = s_stm07_cs_26 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_20
Function s_stm07_cs_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_20 = WindFunc("s_stm07_cs_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_20) <> vbString Then
        s_stm07_cs_20 = s_stm07_cs_20 / UnitVal_
    End If
End Function

'|fffd||639||fffd||4b5||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_21
Function s_stm07_cs_21(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_21 = WindFunc("s_stm07_cs_21", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_21) <> vbString Then
        s_stm07_cs_21 = s_stm07_cs_21 / UnitVal_
    End If
End Function

'|fffd||37b||fffd||fffd||fffd||fffd||ef30||fffd||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_30
Function s_stm07_cs_30(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_30 = WindFunc("s_stm07_cs_30", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_30) <> vbString Then
        s_stm07_cs_30 = s_stm07_cs_30 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||fffd||5b0||fffd||fffd||fffd||53c||fffd||3aa||5b0||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_27
Function s_stm07_cs_27(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_27 = WindFunc("s_stm07_cs_27", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_27) <> vbString Then
        s_stm07_cs_27 = s_stm07_cs_27 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||475||fffd||fffd||5bd||fffd|,s_stm07_cs_33
Function s_stm07_cs_33(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_33 = WindFunc("s_stm07_cs_33", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_33) <> vbString Then
        s_stm07_cs_33 = s_stm07_cs_33 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43d||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_13
Function s_stm07_cs_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_13 = WindFunc("s_stm07_cs_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_13) <> vbString Then
        s_stm07_cs_13 = s_stm07_cs_13 / UnitVal_
    End If
End Function

'|fffd||575||fffd||fffd||fffd||fffd||671||fffd||4b5||fffd||fffd||fffd||5bd||3eef6||fffd|,s_stm07_cs_17
Function s_stm07_cs_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_17 = WindFunc("s_stm07_cs_17", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_17) <> vbString Then
        s_stm07_cs_17 = s_stm07_cs_17 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_18
Function s_stm07_cs_18(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_18 = WindFunc("s_stm07_cs_18", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_18) <> vbString Then
        s_stm07_cs_18 = s_stm07_cs_18 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_9
Function s_stm07_cs_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_9 = WindFunc("s_stm07_cs_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_9) <> vbString Then
        s_stm07_cs_9 = s_stm07_cs_9 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||43a||fffd||36c||4b5||fffd||fffd||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_31
Function s_stm07_cs_31(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_31 = WindFunc("s_stm07_cs_31", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_31) <> vbString Then
        s_stm07_cs_31 = s_stm07_cs_31 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||138||fffd||fffd||fffd||2f0||fffd||fffd|,s_stm07_cs_28
Function s_stm07_cs_28(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_28 = WindFunc("s_stm07_cs_28", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_28) <> vbString Then
        s_stm07_cs_28 = s_stm07_cs_28 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_stm07_cs_37
Function s_stm07_cs_37(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_37 = WindFunc("s_stm07_cs_37", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_37) <> vbString Then
        s_stm07_cs_37 = s_stm07_cs_37 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bfad||4ea||fffd||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_stm07_cs_29
Function s_stm07_cs_29(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_29 = WindFunc("s_stm07_cs_29", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_29) <> vbString Then
        s_stm07_cs_29 = s_stm07_cs_29 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_14
Function s_stm07_cs_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_14 = WindFunc("s_stm07_cs_14", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_14) <> vbString Then
        s_stm07_cs_14 = s_stm07_cs_14 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_59
Function s_stm07_cs_59(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_59 = WindFunc("s_stm07_cs_59", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_59) <> vbString Then
        s_stm07_cs_59 = s_stm07_cs_59 / UnitVal_
    End If
End Function

'|221||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_41
Function s_stm07_cs_41(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_41 = WindFunc("s_stm07_cs_41", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_41) <> vbString Then
        s_stm07_cs_41 = s_stm07_cs_41 / UnitVal_
    End If
End Function

'|fffd||57b||fffd||376||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_40
Function s_stm07_cs_40(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_40 = WindFunc("s_stm07_cs_40", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_40) <> vbString Then
        s_stm07_cs_40 = s_stm07_cs_40 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||4f9||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||3bb||fffd||575||fffd||fffd||fffd||fffd||5bd||3eef6||fffd|,s_stm07_cs_43
Function s_stm07_cs_43(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_43 = WindFunc("s_stm07_cs_43", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_43) <> vbString Then
        s_stm07_cs_43 = s_stm07_cs_43 / UnitVal_
    End If
End Function

'|221||fffd||fffd||fffd||4f9||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||3bb||5a7||fffd||fffd||fffd||fffd||fffd||5bd||3eef6||fffd|,s_stm07_cs_51
Function s_stm07_cs_51(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_51 = WindFunc("s_stm07_cs_51", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_51) <> vbString Then
        s_stm07_cs_51 = s_stm07_cs_51 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||f9||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||57b||635||fffd||fffd||5bd||3eef6||fffd|,s_stm07_cs_42
Function s_stm07_cs_42(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_42 = WindFunc("s_stm07_cs_42", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_42) <> vbString Then
        s_stm07_cs_42 = s_stm07_cs_42 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_stm07_cs_48
Function s_stm07_cs_48(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_48 = WindFunc("s_stm07_cs_48", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_48) <> vbString Then
        s_stm07_cs_48 = s_stm07_cs_48 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_49
Function s_stm07_cs_49(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_49 = WindFunc("s_stm07_cs_49", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_49) <> vbString Then
        s_stm07_cs_49 = s_stm07_cs_49 / UnitVal_
    End If
End Function

'|376||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_50
Function s_stm07_cs_50(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_50 = WindFunc("s_stm07_cs_50", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_50) <> vbString Then
        s_stm07_cs_50 = s_stm07_cs_50 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_stm07_cs_57
Function s_stm07_cs_57(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_57 = WindFunc("s_stm07_cs_57", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_57) <> vbString Then
        s_stm07_cs_57 = s_stm07_cs_57 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_stm07_cs_52
Function s_stm07_cs_52(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_52 = WindFunc("s_stm07_cs_52", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_52) <> vbString Then
        s_stm07_cs_52 = s_stm07_cs_52 / UnitVal_
    End If
End Function

'|fffd||575||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_stm07_cs_44
Function s_stm07_cs_44(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_44 = WindFunc("s_stm07_cs_44", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_44) <> vbString Then
        s_stm07_cs_44 = s_stm07_cs_44 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_60
Function s_stm07_cs_60(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_60 = WindFunc("s_stm07_cs_60", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_60) <> vbString Then
        s_stm07_cs_60 = s_stm07_cs_60 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_63
Function s_stm07_cs_63(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_63 = WindFunc("s_stm07_cs_63", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_63) <> vbString Then
        s_stm07_cs_63 = s_stm07_cs_63 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_77
Function s_stm07_cs_77(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_77 = WindFunc("s_stm07_cs_77", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_77) <> vbString Then
        s_stm07_cs_77 = s_stm07_cs_77 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_64
Function s_stm07_cs_64(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_64 = WindFunc("s_stm07_cs_64", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_64) <> vbString Then
        s_stm07_cs_64 = s_stm07_cs_64 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||373||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_70
Function s_stm07_cs_70(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_70 = WindFunc("s_stm07_cs_70", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_70) <> vbString Then
        s_stm07_cs_70 = s_stm07_cs_70 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_stm07_cs_71
Function s_stm07_cs_71(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_71 = WindFunc("s_stm07_cs_71", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_71) <> vbString Then
        s_stm07_cs_71 = s_stm07_cs_71 / UnitVal_
    End If
End Function

'|fffd||4f9||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||376||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_118
Function s_stm07_cs_118(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_118 = WindFunc("s_stm07_cs_118", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_118) <> vbString Then
        s_stm07_cs_118 = s_stm07_cs_118 / UnitVal_
    End If
End Function

'|221||fffd||fd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_61
Function s_stm07_cs_61(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_61 = WindFunc("s_stm07_cs_61", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_61) <> vbString Then
        s_stm07_cs_61 = s_stm07_cs_61 / UnitVal_
    End If
End Function

'|fffd||575||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_stm07_cs_62
Function s_stm07_cs_62(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_62 = WindFunc("s_stm07_cs_62", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_62) <> vbString Then
        s_stm07_cs_62 = s_stm07_cs_62 / UnitVal_
    End If
End Function

'|fffd||4f9||fffd||2fe||5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||139||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_119
Function s_stm07_cs_119(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_119 = WindFunc("s_stm07_cs_119", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_119) <> vbString Then
        s_stm07_cs_119 = s_stm07_cs_119 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_69
Function s_stm07_cs_69(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_69 = WindFunc("s_stm07_cs_69", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_69) <> vbString Then
        s_stm07_cs_69 = s_stm07_cs_69 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_stm07_cs_75
Function s_stm07_cs_75(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_75 = WindFunc("s_stm07_cs_75", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_75) <> vbString Then
        s_stm07_cs_75 = s_stm07_cs_75 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_stm07_cs_68
Function s_stm07_cs_68(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_68 = WindFunc("s_stm07_cs_68", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_68) <> vbString Then
        s_stm07_cs_68 = s_stm07_cs_68 / UnitVal_
    End If
End Function

'|fffd||fffd||129||fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_84
Function s_stm07_cs_84(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_84 = WindFunc("s_stm07_cs_84", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_84) <> vbString Then
        s_stm07_cs_84 = s_stm07_cs_84 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b1||4daf||fffd||fffd||fffd||5bd||fffd||fffd||4f0||fffd||fffd|,s_stm07_cs_78
Function s_stm07_cs_78(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_78 = WindFunc("s_stm07_cs_78", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_78) <> vbString Then
        s_stm07_cs_78 = s_stm07_cs_78 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||ffbb||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_82
Function s_stm07_cs_82(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_82 = WindFunc("s_stm07_cs_82", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_82) <> vbString Then
        s_stm07_cs_82 = s_stm07_cs_82 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_83
Function s_stm07_cs_83(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_83 = WindFunc("s_stm07_cs_83", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_83) <> vbString Then
        s_stm07_cs_83 = s_stm07_cs_83 / UnitVal_
    End If
End Function
'|4bb||fffd||fffd||fffd||6b5||fffd||fffd||6b5||13f||fffd||5ea||fffd||fffd||fffd||fffd||2fe||56e||22f|,s_stm07_cs_107
Function s_stm07_cs_107(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_107 = WindFunc("s_stm07_cs_107", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_107) <> vbString Then
        s_stm07_cs_107 = s_stm07_cs_107 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd|,s_stm07_cs_111
Function s_stm07_cs_111(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_111 = WindFunc("s_stm07_cs_111", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_111) <> vbString Then
        s_stm07_cs_111 = s_stm07_cs_111 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||2a7|,s_stm07_cs_96
Function s_stm07_cs_96(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_96 = WindFunc("s_stm07_cs_96", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_96) <> vbString Then
        s_stm07_cs_96 = s_stm07_cs_96 / UnitVal_
    End If
End Function

'|fffd||fffd||4f7||fffd|-|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||ffbb||fffd||fffd||fffd||4f6||fffd|,s_stm07_cs_116
Function s_stm07_cs_116(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_116 = WindFunc("s_stm07_cs_116", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_116) <> vbString Then
        s_stm07_cs_116 = s_stm07_cs_116 / UnitVal_
    End If
End Function

'|fffd||fffd||32f||fffd||fffd||fffd||fc||fffd||fffd||fffd|,s_stm07_cs_90
Function s_stm07_cs_90(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_90 = WindFunc("s_stm07_cs_90", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_90) <> vbString Then
        s_stm07_cs_90 = s_stm07_cs_90 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_91
Function s_stm07_cs_91(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_91 = WindFunc("s_stm07_cs_91", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_91) <> vbString Then
        s_stm07_cs_91 = s_stm07_cs_91 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||4e6||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_101
Function s_stm07_cs_101(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_101 = WindFunc("s_stm07_cs_101", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_101) <> vbString Then
        s_stm07_cs_101 = s_stm07_cs_101 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||336||fffd||fffd||2b2||fffd|,s_stm07_cs_108
Function s_stm07_cs_108(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_108 = WindFunc("s_stm07_cs_108", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_108) <> vbString Then
        s_stm07_cs_108 = s_stm07_cs_108 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||fffd||6b3||fffd||fffd||fffd||fffd|,s_stm07_cs_112
Function s_stm07_cs_112(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_112 = WindFunc("s_stm07_cs_112", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_112) <> vbString Then
        s_stm07_cs_112 = s_stm07_cs_112 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_85
Function s_stm07_cs_85(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_85 = WindFunc("s_stm07_cs_85", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_85) <> vbString Then
        s_stm07_cs_85 = s_stm07_cs_85 / UnitVal_
    End If
End Function

'|3b4||237||fffd||3f5||fffd||376||fffd||fffd||fffd||fffd||2a7|,s_stm07_cs_120
Function s_stm07_cs_120(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_120 = WindFunc("s_stm07_cs_120", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_120) <> vbString Then
        s_stm07_cs_120 = s_stm07_cs_120 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf||fffd||fffd||2a7|,s_stm07_cs_94
Function s_stm07_cs_94(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_94 = WindFunc("s_stm07_cs_94", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_94) <> vbString Then
        s_stm07_cs_94 = s_stm07_cs_94 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||fffd||fffd||56e||fffd||fffd||fffd||fffd|,s_stm07_cs_98
Function s_stm07_cs_98(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_98 = WindFunc("s_stm07_cs_98", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_98) <> vbString Then
        s_stm07_cs_98 = s_stm07_cs_98 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|,s_stm07_cs_99
Function s_stm07_cs_99(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_99 = WindFunc("s_stm07_cs_99", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_99) <> vbString Then
        s_stm07_cs_99 = s_stm07_cs_99 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||fffd||6b3||fffd||fffd||fffd||fffd|,s_stm07_cs_110
Function s_stm07_cs_110(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_110 = WindFunc("s_stm07_cs_110", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_110) <> vbString Then
        s_stm07_cs_110 = s_stm07_cs_110 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||32f||fffd||fffd|,s_stm07_cs_88
Function s_stm07_cs_88(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_88 = WindFunc("s_stm07_cs_88", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_88) <> vbString Then
        s_stm07_cs_88 = s_stm07_cs_88 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd|,s_stm07_cs_109
Function s_stm07_cs_109(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_109 = WindFunc("s_stm07_cs_109", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_109) <> vbString Then
        s_stm07_cs_109 = s_stm07_cs_109 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|,s_stm07_cs_117
Function s_stm07_cs_117(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_117 = WindFunc("s_stm07_cs_117", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_117) <> vbString Then
        s_stm07_cs_117 = s_stm07_cs_117 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||32f||fffd||fffd||fffd||fffd||32f||fffd||fffd|,s_stm07_cs_89
Function s_stm07_cs_89(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_89 = WindFunc("s_stm07_cs_89", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_89) <> vbString Then
        s_stm07_cs_89 = s_stm07_cs_89 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7|,s_stm07_cs_93
Function s_stm07_cs_93(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_93 = WindFunc("s_stm07_cs_93", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_93) <> vbString Then
        s_stm07_cs_93 = s_stm07_cs_93 / UnitVal_
    End If
End Function

'|fffd||fffd||4f7||fffd|-|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_105
Function s_stm07_cs_105(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_105 = WindFunc("s_stm07_cs_105", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_105) <> vbString Then
        s_stm07_cs_105 = s_stm07_cs_105 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_95
Function s_stm07_cs_95(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_95 = WindFunc("s_stm07_cs_95", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_95) <> vbString Then
        s_stm07_cs_95 = s_stm07_cs_95 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||4e6||fffd||fffd||fffd||fffd||13f||fffd||13c||fffd||fffd||fffd|,s_stm07_cs_100
Function s_stm07_cs_100(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_100 = WindFunc("s_stm07_cs_100", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_100) <> vbString Then
        s_stm07_cs_100 = s_stm07_cs_100 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||f9||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||2a7|,s_stm07_cs_92
Function s_stm07_cs_92(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_92 = WindFunc("s_stm07_cs_92", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_92) <> vbString Then
        s_stm07_cs_92 = s_stm07_cs_92 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||fffd||2b2||fffd||fffd||fffd||fffd||fffd|,s_stm07_cs_97
Function s_stm07_cs_97(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_97 = WindFunc("s_stm07_cs_97", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_97) <> vbString Then
        s_stm07_cs_97 = s_stm07_cs_97 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||5fc||fffd||fffd|,s_stm07_cs_86
Function s_stm07_cs_86(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_86 = WindFunc("s_stm07_cs_86", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_86) <> vbString Then
        s_stm07_cs_86 = s_stm07_cs_86 / UnitVal_
    End If
End Function

'|56e||fffd||fffd||5ea||3aa||fffd||2b1||fffd|,s_stm07_cs_106
Function s_stm07_cs_106(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_106 = WindFunc("s_stm07_cs_106", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_106) <> vbString Then
        s_stm07_cs_106 = s_stm07_cs_106 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||6fe||261||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||6fa||121||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||6fe||fffd|,s_stm07_cs_87
Function s_stm07_cs_87(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stm07_cs_87 = WindFunc("s_stm07_cs_87", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stm07_cs_87) <> vbString Then
        s_stm07_cs_87 = s_stm07_cs_87 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||5a7||fffd||fffd|,s_qstm07_is_50
Function s_qstm07_is_50(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_50 = WindFunc("s_qstm07_is_50", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_50) <> vbString Then
        s_qstm07_is_50 = s_qstm07_is_50 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||733||271||fffd|,s_qstm07_is_84
Function s_qstm07_is_84(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_84 = WindFunc("s_qstm07_is_84", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_84) <> vbString Then
        s_qstm07_is_84 = s_qstm07_is_84 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||3e2||5a7||fffd||fffd|,s_qstm07_is_20
Function s_qstm07_is_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_20 = WindFunc("s_qstm07_is_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_20) <> vbString Then
        s_qstm07_is_20 = s_qstm07_is_20 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_22
Function s_qstm07_is_22(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_22 = WindFunc("s_qstm07_is_22", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_22) <> vbString Then
        s_qstm07_is_22 = s_qstm07_is_22 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||5a7||fffd||fffd|,s_qstm07_is_23
Function s_qstm07_is_23(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_23 = WindFunc("s_qstm07_is_23", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_23) <> vbString Then
        s_qstm07_is_23 = s_qstm07_is_23 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||5b1||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_38
Function s_qstm07_is_38(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_38 = WindFunc("s_qstm07_is_38", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_38) <> vbString Then
        s_qstm07_is_38 = s_qstm07_is_38 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_60
Function s_qstm07_is_60(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_60 = WindFunc("s_qstm07_is_60", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_60) <> vbString Then
        s_qstm07_is_60 = s_qstm07_is_60 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4be||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_25
Function s_qstm07_is_25(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_25 = WindFunc("s_qstm07_is_25", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_25) <> vbString Then
        s_qstm07_is_25 = s_qstm07_is_25 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||5ec||fffd||fffd||fffd||fffd|,s_qstm07_is_28
Function s_qstm07_is_28(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_28 = WindFunc("s_qstm07_is_28", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_28) <> vbString Then
        s_qstm07_is_28 = s_qstm07_is_28 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a7||fffd||fffd|,s_qstm07_is_40
Function s_qstm07_is_40(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_40 = WindFunc("s_qstm07_is_40", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_40) <> vbString Then
        s_qstm07_is_40 = s_qstm07_is_40 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_61
Function s_qstm07_is_61(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_61 = WindFunc("s_qstm07_is_61", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_61) <> vbString Then
        s_qstm07_is_61 = s_qstm07_is_61 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|376||fffd||2be||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_17
Function s_qstm07_is_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_17 = WindFunc("s_qstm07_is_17", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_17) <> vbString Then
        s_qstm07_is_17 = s_qstm07_is_17 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||736||fffd|,s_qstm07_is_55
Function s_qstm07_is_55(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_55 = WindFunc("s_qstm07_is_55", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_55) <> vbString Then
        s_qstm07_is_55 = s_qstm07_is_55 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||4ea||fffd||fffd||4b5||fffd||37a||fffd||4ea||fffd||fffd||4b5||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_82
Function s_qstm07_is_82(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_82 = WindFunc("s_qstm07_is_82", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_82) <> vbString Then
        s_qstm07_is_82 = s_qstm07_is_82 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd|,s_qstm07_is_9
Function s_qstm07_is_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_9 = WindFunc("s_qstm07_is_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_9) <> vbString Then
        s_qstm07_is_9 = s_qstm07_is_9 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||6f7||fffd||fffd||fffd|,s_qstm07_is_12
Function s_qstm07_is_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_12 = WindFunc("s_qstm07_is_12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_12) <> vbString Then
        s_qstm07_is_12 = s_qstm07_is_12 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||2f0||fffd||3cc38||fffd||fffd||fffd|,s_qstm07_is_11
Function s_qstm07_is_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_11 = WindFunc("s_qstm07_is_11", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_11) <> vbString Then
        s_qstm07_is_11 = s_qstm07_is_11 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_14
Function s_qstm07_is_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_14 = WindFunc("s_qstm07_is_14", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_14) <> vbString Then
        s_qstm07_is_14 = s_qstm07_is_14 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_16
Function s_qstm07_is_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_16 = WindFunc("s_qstm07_is_16", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_16) <> vbString Then
        s_qstm07_is_16 = s_qstm07_is_16 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_92
Function s_qstm07_is_92(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_92 = WindFunc("s_qstm07_is_92", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_92) <> vbString Then
        s_qstm07_is_92 = s_qstm07_is_92 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|,s_qstm07_is_93
Function s_qstm07_is_93(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_93 = WindFunc("s_qstm07_is_93", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_93) <> vbString Then
        s_qstm07_is_93 = s_qstm07_is_93 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||fffd||368||fffd||276||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|,s_qstm07_is_94
Function s_qstm07_is_94(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_94 = WindFunc("s_qstm07_is_94", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_94) <> vbString Then
        s_qstm07_is_94 = s_qstm07_is_94 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|,s_qstm07_is_95
Function s_qstm07_is_95(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_95 = WindFunc("s_qstm07_is_95", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_95) <> vbString Then
        s_qstm07_is_95 = s_qstm07_is_95 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|3b4||237||fffd||3f5||fffd||376||fffd||fffd||fffd||fffd||2a7|,s_qstm07_is_87
Function s_qstm07_is_87(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_87 = WindFunc("s_qstm07_is_87", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_87) <> vbString Then
        s_qstm07_is_87 = s_qstm07_is_87 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_62
Function s_qstm07_is_62(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_62 = WindFunc("s_qstm07_is_62", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_62) <> vbString Then
        s_qstm07_is_62 = s_qstm07_is_62 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||221||fffd||fffd||fffd||57a||fffd||36c||5fc||fffd||fffd||fffd||3eef6||fffd|,s_qstm07_is_35
Function s_qstm07_is_35(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_35 = WindFunc("s_qstm07_is_35", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_35) <> vbString Then
        s_qstm07_is_35 = s_qstm07_is_35 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fe||fffd||fffd||fffd||2a7|,s_qstm07_is_51
Function s_qstm07_is_51(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_51 = WindFunc("s_qstm07_is_51", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_51) <> vbString Then
        s_qstm07_is_51 = s_qstm07_is_51 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2f1||fffd||fffd||fffd|,s_qstm07_is_39
Function s_qstm07_is_39(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_39 = WindFunc("s_qstm07_is_39", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_39) <> vbString Then
        s_qstm07_is_39 = s_qstm07_is_39 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_49
Function s_qstm07_is_49(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_49 = WindFunc("s_qstm07_is_49", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_49) <> vbString Then
        s_qstm07_is_49 = s_qstm07_is_49 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||3e2||fffd||fffd||fffd||fffd|,s_qstm07_is_19
Function s_qstm07_is_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_19 = WindFunc("s_qstm07_is_19", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_19) <> vbString Then
        s_qstm07_is_19 = s_qstm07_is_19 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd|,s_qstm07_is_48
Function s_qstm07_is_48(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_48 = WindFunc("s_qstm07_is_48", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_48) <> vbString Then
        s_qstm07_is_48 = s_qstm07_is_48 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_83
Function s_qstm07_is_83(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_83 = WindFunc("s_qstm07_is_83", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_83) <> vbString Then
        s_qstm07_is_83 = s_qstm07_is_83 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2e36||5a7||fffd||fffd|,s_qstm07_is_33
Function s_qstm07_is_33(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_33 = WindFunc("s_qstm07_is_33", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_33) <> vbString Then
        s_qstm07_is_33 = s_qstm07_is_33 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_is_13
Function s_qstm07_is_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_13 = WindFunc("s_qstm07_is_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_13) <> vbString Then
        s_qstm07_is_13 = s_qstm07_is_13 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||271||fffd|,s_qstm07_is_10
Function s_qstm07_is_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_10 = WindFunc("s_qstm07_is_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_10) <> vbString Then
        s_qstm07_is_10 = s_qstm07_is_10 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|,s_qstm07_is_15
Function s_qstm07_is_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_15 = WindFunc("s_qstm07_is_15", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_15) <> vbString Then
        s_qstm07_is_15 = s_qstm07_is_15 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||2f0|,s_qstm07_is_56
Function s_qstm07_is_56(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_is_56 = WindFunc("s_qstm07_is_56", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_is_56) <> vbString Then
        s_qstm07_is_56 = s_qstm07_is_56 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43d||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_13
Function s_qstm07_cs_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_13 = WindFunc("s_qstm07_cs_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_13) <> vbString Then
        s_qstm07_cs_13 = s_qstm07_cs_13 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_9
Function s_qstm07_cs_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_9 = WindFunc("s_qstm07_cs_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_9) <> vbString Then
        s_qstm07_cs_9 = s_qstm07_cs_9 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||221||fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||47e||fffd||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_15
Function s_qstm07_cs_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_15 = WindFunc("s_qstm07_cs_15", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_15) <> vbString Then
        s_qstm07_cs_15 = s_qstm07_cs_15 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_26
Function s_qstm07_cs_26(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_26 = WindFunc("s_qstm07_cs_26", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_26) <> vbString Then
        s_qstm07_cs_26 = s_qstm07_cs_26 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_39
Function s_qstm07_cs_39(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_39 = WindFunc("s_qstm07_cs_39", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_39) <> vbString Then
        s_qstm07_cs_39 = s_qstm07_cs_39 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_18
Function s_qstm07_cs_18(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_18 = WindFunc("s_qstm07_cs_18", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_18) <> vbString Then
        s_qstm07_cs_18 = s_qstm07_cs_18 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_20
Function s_qstm07_cs_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_20 = WindFunc("s_qstm07_cs_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_20) <> vbString Then
        s_qstm07_cs_20 = s_qstm07_cs_20 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||639||fffd||4b5||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_21
Function s_qstm07_cs_21(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_21 = WindFunc("s_qstm07_cs_21", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_21) <> vbString Then
        s_qstm07_cs_21 = s_qstm07_cs_21 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_14
Function s_qstm07_cs_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_14 = WindFunc("s_qstm07_cs_14", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_14) <> vbString Then
        s_qstm07_cs_14 = s_qstm07_cs_14 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||43a||fffd||36c||4b5||fffd||fffd||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_31
Function s_qstm07_cs_31(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_31 = WindFunc("s_qstm07_cs_31", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_31) <> vbString Then
        s_qstm07_cs_31 = s_qstm07_cs_31 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||475||fffd||fffd||5bd||fffd|,s_qstm07_cs_33
Function s_qstm07_cs_33(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_33 = WindFunc("s_qstm07_cs_33", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_33) <> vbString Then
        s_qstm07_cs_33 = s_qstm07_cs_33 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_qstm07_cs_37
Function s_qstm07_cs_37(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_37 = WindFunc("s_qstm07_cs_37", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_37) <> vbString Then
        s_qstm07_cs_37 = s_qstm07_cs_37 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||2e36||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_32
Function s_qstm07_cs_32(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_32 = WindFunc("s_qstm07_cs_32", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_32) <> vbString Then
        s_qstm07_cs_32 = s_qstm07_cs_32 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||575||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bfad||4ea||fffd||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_qstm07_cs_11
Function s_qstm07_cs_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_11 = WindFunc("s_qstm07_cs_11", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_11) <> vbString Then
        s_qstm07_cs_11 = s_qstm07_cs_11 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||138||fffd||fffd||fffd||2f0||fffd||fffd|,s_qstm07_cs_28
Function s_qstm07_cs_28(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_28 = WindFunc("s_qstm07_cs_28", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_28) <> vbString Then
        s_qstm07_cs_28 = s_qstm07_cs_28 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||bfad||4ea||fffd||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_qstm07_cs_29
Function s_qstm07_cs_29(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_29 = WindFunc("s_qstm07_cs_29", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_29) <> vbString Then
        s_qstm07_cs_29 = s_qstm07_cs_29 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||37b||fffd||fffd||fffd||fffd||fffd||36c||4b5||fffd||fffd||17f||fffd||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_12
Function s_qstm07_cs_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_12 = WindFunc("s_qstm07_cs_12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_12) <> vbString Then
        s_qstm07_cs_12 = s_qstm07_cs_12 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||575||fffd||fffd||fffd||2f0||fffd||477||fffd||fffd||fffd|,s_qstm07_cs_10
Function s_qstm07_cs_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_10 = WindFunc("s_qstm07_cs_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_10) <> vbString Then
        s_qstm07_cs_10 = s_qstm07_cs_10 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_qstm07_cs_25
Function s_qstm07_cs_25(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_25 = WindFunc("s_qstm07_cs_25", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_25) <> vbString Then
        s_qstm07_cs_25 = s_qstm07_cs_25 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||575||fffd||fffd||fffd||fffd||671||fffd||4b5||fffd||fffd||fffd||5bd||3eef6||fffd|,s_qstm07_cs_17
Function s_qstm07_cs_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_17 = WindFunc("s_qstm07_cs_17", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_17) <> vbString Then
        s_qstm07_cs_17 = s_qstm07_cs_17 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||fffd||5b0||fffd||fffd||fffd||53c||fffd||3aa||5b0||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_27
Function s_qstm07_cs_27(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_27 = WindFunc("s_qstm07_cs_27", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_27) <> vbString Then
        s_qstm07_cs_27 = s_qstm07_cs_27 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||37b||fffd||fffd||fffd||fffd||ef30||fffd||fffd||efbb||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_30
Function s_qstm07_cs_30(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_30 = WindFunc("s_qstm07_cs_30", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_30) <> vbString Then
        s_qstm07_cs_30 = s_qstm07_cs_30 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||575||fffd||fffd||fffd||52d||fffd||fffd||fffd||57a||fffd||36c||fffd||fffd||fffd||fffd||221||fffd||f5||fffd||fffd||5bd||fffd|,s_qstm07_cs_16
Function s_qstm07_cs_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_16 = WindFunc("s_qstm07_cs_16", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_16) <> vbString Then
        s_qstm07_cs_16 = s_qstm07_cs_16 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||f9||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||57b||635||fffd||fffd||5bd||3eef6||fffd|,s_qstm07_cs_42
Function s_qstm07_cs_42(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_42 = WindFunc("s_qstm07_cs_42", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_42) <> vbString Then
        s_qstm07_cs_42 = s_qstm07_cs_42 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||4f9||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||3bb||fffd||575||fffd||fffd||fffd||fffd||5bd||3eef6||fffd|,s_qstm07_cs_43
Function s_qstm07_cs_43(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_43 = WindFunc("s_qstm07_cs_43", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_43) <> vbString Then
        s_qstm07_cs_43 = s_qstm07_cs_43 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|221||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_41
Function s_qstm07_cs_41(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_41 = WindFunc("s_qstm07_cs_41", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_41) <> vbString Then
        s_qstm07_cs_41 = s_qstm07_cs_41 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_qstm07_cs_48
Function s_qstm07_cs_48(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_48 = WindFunc("s_qstm07_cs_48", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_48) <> vbString Then
        s_qstm07_cs_48 = s_qstm07_cs_48 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|376||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_59
Function s_qstm07_cs_59(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_59 = WindFunc("s_qstm07_cs_59", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_59) <> vbString Then
        s_qstm07_cs_59 = s_qstm07_cs_59 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|376||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_50
Function s_qstm07_cs_50(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_50 = WindFunc("s_qstm07_cs_50", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_50) <> vbString Then
        s_qstm07_cs_50 = s_qstm07_cs_50 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|221||fffd||fffd||fffd||4f9||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||3bb||5a7||fffd||fffd||fffd||fffd||fffd||5bd||3eef6||fffd|,s_qstm07_cs_51
Function s_qstm07_cs_51(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_51 = WindFunc("s_qstm07_cs_51", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_51) <> vbString Then
        s_qstm07_cs_51 = s_qstm07_cs_51 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||57b||fffd||376||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_40
Function s_qstm07_cs_40(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_40 = WindFunc("s_qstm07_cs_40", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_40) <> vbString Then
        s_qstm07_cs_40 = s_qstm07_cs_40 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_qstm07_cs_57
Function s_qstm07_cs_57(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_57 = WindFunc("s_qstm07_cs_57", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_57) <> vbString Then
        s_qstm07_cs_57 = s_qstm07_cs_57 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_49
Function s_qstm07_cs_49(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_49 = WindFunc("s_qstm07_cs_49", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_49) <> vbString Then
        s_qstm07_cs_49 = s_qstm07_cs_49 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||575||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_qstm07_cs_44
Function s_qstm07_cs_44(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_44 = WindFunc("s_qstm07_cs_44", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_44) <> vbString Then
        s_qstm07_cs_44 = s_qstm07_cs_44 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_qstm07_cs_52
Function s_qstm07_cs_52(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_52 = WindFunc("s_qstm07_cs_52", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_52) <> vbString Then
        s_qstm07_cs_52 = s_qstm07_cs_52 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_qstm07_cs_75
Function s_qstm07_cs_75(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_75 = WindFunc("s_qstm07_cs_75", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_75) <> vbString Then
        s_qstm07_cs_75 = s_qstm07_cs_75 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_60
Function s_qstm07_cs_60(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_60 = WindFunc("s_qstm07_cs_60", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_60) <> vbString Then
        s_qstm07_cs_60 = s_qstm07_cs_60 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_qstm07_cs_71
Function s_qstm07_cs_71(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_71 = WindFunc("s_qstm07_cs_71", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_71) <> vbString Then
        s_qstm07_cs_71 = s_qstm07_cs_71 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|221||fffd||fd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_61
Function s_qstm07_cs_61(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_61 = WindFunc("s_qstm07_cs_61", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_61) <> vbString Then
        s_qstm07_cs_61 = s_qstm07_cs_61 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||575||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bb||edaf||fffd||439||635||fffd||fffd||5bd||fffd|,s_qstm07_cs_62
Function s_qstm07_cs_62(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_62 = WindFunc("s_qstm07_cs_62", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_62) <> vbString Then
        s_qstm07_cs_62 = s_qstm07_cs_62 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||373||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_70
Function s_qstm07_cs_70(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_70 = WindFunc("s_qstm07_cs_70", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_70) <> vbString Then
        s_qstm07_cs_70 = s_qstm07_cs_70 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_77
Function s_qstm07_cs_77(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_77 = WindFunc("s_qstm07_cs_77", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_77) <> vbString Then
        s_qstm07_cs_77 = s_qstm07_cs_77 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_64
Function s_qstm07_cs_64(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_64 = WindFunc("s_qstm07_cs_64", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_64) <> vbString Then
        s_qstm07_cs_64 = s_qstm07_cs_64 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_69
Function s_qstm07_cs_69(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_69 = WindFunc("s_qstm07_cs_69", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_69) <> vbString Then
        s_qstm07_cs_69 = s_qstm07_cs_69 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||4f9||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||376||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_118
Function s_qstm07_cs_118(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_118 = WindFunc("s_qstm07_cs_118", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_118) <> vbString Then
        s_qstm07_cs_118 = s_qstm07_cs_118 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||56e||22f||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_63
Function s_qstm07_cs_63(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_63 = WindFunc("s_qstm07_cs_63", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_63) <> vbString Then
        s_qstm07_cs_63 = s_qstm07_cs_63 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||421||fffd||fffd|,s_qstm07_cs_68
Function s_qstm07_cs_68(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_68 = WindFunc("s_qstm07_cs_68", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_68) <> vbString Then
        s_qstm07_cs_68 = s_qstm07_cs_68 / UnitVal_
    End If
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||4f9||fffd||2fe||5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||139||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_119
Function s_qstm07_cs_119(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_119 = WindFunc("s_qstm07_cs_119", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_119) <> vbString Then
        s_qstm07_cs_119 = s_qstm07_cs_119 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||129||fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_84
Function s_qstm07_cs_84(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_84 = WindFunc("s_qstm07_cs_84", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_84) <> vbString Then
        s_qstm07_cs_84 = s_qstm07_cs_84 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||ffbb||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_82
Function s_qstm07_cs_82(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_82 = WindFunc("s_qstm07_cs_82", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_82) <> vbString Then
        s_qstm07_cs_82 = s_qstm07_cs_82 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b1||4daf||fffd||fffd||fffd||5bd||fffd||fffd||4f0||fffd||fffd|,s_qstm07_cs_78
Function s_qstm07_cs_78(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_78 = WindFunc("s_qstm07_cs_78", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_78) <> vbString Then
        s_qstm07_cs_78 = s_qstm07_cs_78 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||2b2||fffd||32f||fffd||fffd|,s_qstm07_cs_88
Function s_qstm07_cs_88(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_88 = WindFunc("s_qstm07_cs_88", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_88) <> vbString Then
        s_qstm07_cs_88 = s_qstm07_cs_88 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||6b4||fffd||32f||fffd||fffd||fffd||fffd||32f||fffd||fffd|,s_qstm07_cs_89
Function s_qstm07_cs_89(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_89 = WindFunc("s_qstm07_cs_89", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_89) <> vbString Then
        s_qstm07_cs_89 = s_qstm07_cs_89 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||fffd||fffd||56e||fffd||fffd||fffd||fffd|,s_qstm07_cs_98
Function s_qstm07_cs_98(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_98 = WindFunc("s_qstm07_cs_98", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_98) <> vbString Then
        s_qstm07_cs_98 = s_qstm07_cs_98 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd|,s_qstm07_cs_99
Function s_qstm07_cs_99(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_99 = WindFunc("s_qstm07_cs_99", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_99) <> vbString Then
        s_qstm07_cs_99 = s_qstm07_cs_99 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4f7||fffd|-|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_105
Function s_qstm07_cs_105(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_105 = WindFunc("s_qstm07_cs_105", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_105) <> vbString Then
        s_qstm07_cs_105 = s_qstm07_cs_105 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd|,s_qstm07_cs_117
Function s_qstm07_cs_117(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_117 = WindFunc("s_qstm07_cs_117", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_117) <> vbString Then
        s_qstm07_cs_117 = s_qstm07_cs_117 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_85
Function s_qstm07_cs_85(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_85 = WindFunc("s_qstm07_cs_85", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_85) <> vbString Then
        s_qstm07_cs_85 = s_qstm07_cs_85 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf||fffd||fffd||2a7|,s_qstm07_cs_94
Function s_qstm07_cs_94(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_94 = WindFunc("s_qstm07_cs_94", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_94) <> vbString Then
        s_qstm07_cs_94 = s_qstm07_cs_94 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|376||fffd||fffd||fffd||fffd||2a7|,s_qstm07_cs_96
Function s_qstm07_cs_96(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_96 = WindFunc("s_qstm07_cs_96", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_96) <> vbString Then
        s_qstm07_cs_96 = s_qstm07_cs_96 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||336||fffd||fffd||2b2||fffd|,s_qstm07_cs_108
Function s_qstm07_cs_108(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_108 = WindFunc("s_qstm07_cs_108", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_108) <> vbString Then
        s_qstm07_cs_108 = s_qstm07_cs_108 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|56e||fffd||fffd||5ea||3aa||fffd||2b1||fffd|,s_qstm07_cs_106
Function s_qstm07_cs_106(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_106 = WindFunc("s_qstm07_cs_106", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_106) <> vbString Then
        s_qstm07_cs_106 = s_qstm07_cs_106 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2b2||fffd||fffd||fffd||5b5||5fc||fffd||fffd|,s_qstm07_cs_86
Function s_qstm07_cs_86(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_86 = WindFunc("s_qstm07_cs_86", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_86) <> vbString Then
        s_qstm07_cs_86 = s_qstm07_cs_86 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||fffd||2b2||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_97
Function s_qstm07_cs_97(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_97 = WindFunc("s_qstm07_cs_97", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_97) <> vbString Then
        s_qstm07_cs_97 = s_qstm07_cs_97 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7|,s_qstm07_cs_93
Function s_qstm07_cs_93(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_93 = WindFunc("s_qstm07_cs_93", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_93) <> vbString Then
        s_qstm07_cs_93 = s_qstm07_cs_93 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4f7||fffd|-|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||ffbb||fffd||fffd||fffd||4f6||fffd|,s_qstm07_cs_116
Function s_qstm07_cs_116(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_116 = WindFunc("s_qstm07_cs_116", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_116) <> vbString Then
        s_qstm07_cs_116 = s_qstm07_cs_116 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||f9||336||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||2a7|,s_qstm07_cs_92
Function s_qstm07_cs_92(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_92 = WindFunc("s_qstm07_cs_92", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_92) <> vbString Then
        s_qstm07_cs_92 = s_qstm07_cs_92 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||fffd||4e6||fffd||fffd||fffd||fffd||13f||fffd||13c||fffd||fffd||fffd|,s_qstm07_cs_100
Function s_qstm07_cs_100(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_100 = WindFunc("s_qstm07_cs_100", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_100) <> vbString Then
        s_qstm07_cs_100 = s_qstm07_cs_100 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_91
Function s_qstm07_cs_91(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_91 = WindFunc("s_qstm07_cs_91", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_91) <> vbString Then
        s_qstm07_cs_91 = s_qstm07_cs_91 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||fffd||4e6||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_101
Function s_qstm07_cs_101(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_101 = WindFunc("s_qstm07_cs_101", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_101) <> vbString Then
        s_qstm07_cs_101 = s_qstm07_cs_101 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd|,s_qstm07_cs_111
Function s_qstm07_cs_111(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_111 = WindFunc("s_qstm07_cs_111", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_111) <> vbString Then
        s_qstm07_cs_111 = s_qstm07_cs_111 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qstm07_cs_95
Function s_qstm07_cs_95(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_95 = WindFunc("s_qstm07_cs_95", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_95) <> vbString Then
        s_qstm07_cs_95 = s_qstm07_cs_95 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|3b4||237||fffd||3f5||fffd||376||fffd||fffd||fffd||fffd||2a7|,s_qstm07_cs_120
Function s_qstm07_cs_120(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_120 = WindFunc("s_qstm07_cs_120", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_120) <> vbString Then
        s_qstm07_cs_120 = s_qstm07_cs_120 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||5bd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd|,s_qstm07_cs_109
Function s_qstm07_cs_109(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_109 = WindFunc("s_qstm07_cs_109", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_109) <> vbString Then
        s_qstm07_cs_109 = s_qstm07_cs_109 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4bb||fffd||fffd||fffd||6b5||fffd||fffd||6b5||13f||fffd||5ea||fffd||fffd||fffd||fffd||2fe||56e||22f|,s_qstm07_cs_107
Function s_qstm07_cs_107(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_107 = WindFunc("s_qstm07_cs_107", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_107) <> vbString Then
        s_qstm07_cs_107 = s_qstm07_cs_107 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||32f||fffd||fffd||fffd||fc||fffd||fffd||fffd|,s_qstm07_cs_90
Function s_qstm07_cs_90(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_90 = WindFunc("s_qstm07_cs_90", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_90) <> vbString Then
        s_qstm07_cs_90 = s_qstm07_cs_90 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||336||fffd||fffd||2b2||fffd||fffd||6fe||261||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||6fa||121||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||6fe||fffd|,s_qstm07_cs_87
Function s_qstm07_cs_87(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_qstm07_cs_87 = WindFunc("s_qstm07_cs_87", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_qstm07_cs_87) <> vbString Then
        s_qstm07_cs_87 = s_qstm07_cs_87 / UnitVal_
    End If
End Function

'|fffd||fffd||129||fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd|(|fffd||fffd||fffd||fffd||5b5|),f_stm_navchange_11
Function f_stm_navchange_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_stm_navchange_11 = WindFunc("f_stm_navchange_11", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_stm_navchange_11) <> vbString Then
        f_stm_navchange_11 = f_stm_navchange_11 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd|(|fffd||fffd||fffd||fffd||5b5|),f_stm_navchange_1
Function f_stm_navchange_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  f_stm_navchange_1 = WindFunc("f_stm_navchange_1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(f_stm_navchange_1) <> vbString Then
        f_stm_navchange_1 = f_stm_navchange_1 / UnitVal_
    End If
End Function


'|fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd|,s_stmnote_bank_12
Function s_stmnote_bank_12(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_12 = WindFunc("s_stmnote_bank_12", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_7
Function s_stmnote_bank_7(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_7 = WindFunc("s_stmnote_bank_7", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_16
Function s_stmnote_bank_16(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_16 = WindFunc("s_stmnote_bank_16", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2ae||fffd||4bf||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_18
Function s_stmnote_bank_18(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_18 = WindFunc("s_stmnote_bank_18", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_5
Function s_stmnote_bank_5(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_5 = WindFunc("s_stmnote_bank_5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_4
Function s_stmnote_bank_4(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_4 = WindFunc("s_stmnote_bank_4", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_8
Function s_stmnote_bank_8(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_8 = WindFunc("s_stmnote_bank_8", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd|,s_stmnote_bank_11
Function s_stmnote_bank_11(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_11 = WindFunc("s_stmnote_bank_11", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_13
Function s_stmnote_bank_13(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_13 = WindFunc("s_stmnote_bank_13", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_15
Function s_stmnote_bank_15(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_15 = WindFunc("s_stmnote_bank_15", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4bb||fffd||fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_17
Function s_stmnote_bank_17(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_17 = WindFunc("s_stmnote_bank_17", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_20
Function s_stmnote_bank_20(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_20 = WindFunc("s_stmnote_bank_20", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_6
Function s_stmnote_bank_6(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_6 = WindFunc("s_stmnote_bank_6", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||736||fffd|,s_stmnote_bank_2
Function s_stmnote_bank_2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_2 = WindFunc("s_stmnote_bank_2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_3
Function s_stmnote_bank_3(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_3 = WindFunc("s_stmnote_bank_3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_stmnote_bank_22
Function s_stmnote_bank_22(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_22 = WindFunc("s_stmnote_bank_22", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||eca6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_23
Function s_stmnote_bank_23(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_23 = WindFunc("s_stmnote_bank_23", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_133
Function s_stmnote_bank_133(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_133 = WindFunc("s_stmnote_bank_133", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_132
Function s_stmnote_bank_132(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_132 = WindFunc("s_stmnote_bank_132", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|fffd||271||fffd||fffd||fffd||fffd||fffd||fffd|(%),s_stmnote_bank_129
Function s_stmnote_bank_129(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_129 = WindFunc("s_stmnote_bank_129", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|fffd||2b1||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_131
Function s_stmnote_bank_131(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_131 = WindFunc("s_stmnote_bank_131", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(%),s_stmnote_bank_147
Function s_stmnote_bank_147(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_147 = WindFunc("s_stmnote_bank_147", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_9
Function s_stmnote_bank_9(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_9 = WindFunc("s_stmnote_bank_9", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_10
Function s_stmnote_bank_10(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_10 = WindFunc("s_stmnote_bank_10", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_14
Function s_stmnote_bank_14(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_14 = WindFunc("s_stmnote_bank_14", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_19
Function s_stmnote_bank_19(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_19 = WindFunc("s_stmnote_bank_19", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||f1||fffd||fffd||fffd|,s_stmnote_bank_21
Function s_stmnote_bank_21(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_21 = WindFunc("s_stmnote_bank_21", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|,s_stmnote_bank_1
Function s_stmnote_bank_1(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_1 = WindFunc("s_stmnote_bank_1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||fffd|(%),s_stmnote_bank_144
Function s_stmnote_bank_144(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_144 = WindFunc("s_stmnote_bank_144", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null)
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd|-|1bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_46
Function s_stmnote_bank_46(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_bank_46 = WindFunc("s_stmnote_bank_46", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_bank_46) <> vbString Then
        s_stmnote_bank_46 = s_stmnote_bank_46 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd|-|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_47
Function s_stmnote_bank_47(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_47 = WindFunc("s_stmnote_bank_47", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd|-|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_49
Function s_stmnote_bank_49(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_49 = WindFunc("s_stmnote_bank_49", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd|-|1bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_48
Function s_stmnote_bank_48(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_bank_48 = WindFunc("s_stmnote_bank_48", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_bank_48) <> vbString Then
        s_stmnote_bank_48 = s_stmnote_bank_48 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd|-|1bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_50
Function s_stmnote_bank_50(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_bank_50 = WindFunc("s_stmnote_bank_50", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_bank_50) <> vbString Then
        s_stmnote_bank_50 = s_stmnote_bank_50 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|-|1bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_52
Function s_stmnote_bank_52(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_bank_52 = WindFunc("s_stmnote_bank_52", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_bank_52) <> vbString Then
        s_stmnote_bank_52 = s_stmnote_bank_52 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd|-|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_51
Function s_stmnote_bank_51(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_51 = WindFunc("s_stmnote_bank_51", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_53
Function s_stmnote_bank_53(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_53 = WindFunc("s_stmnote_bank_53", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(13|fffd||fffd||fffd||fffd|),s_stmnote_insur_1
Function s_stmnote_insur_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_1 = WindFunc("s_stmnote_insur_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(14|fffd||fffd||fffd||fffd|),s_stmnote_insur_2
Function s_stmnote_insur_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_2 = WindFunc("s_stmnote_insur_2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(25|fffd||fffd||fffd||fffd|),s_stmnote_insur_3
Function s_stmnote_insur_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_3 = WindFunc("s_stmnote_insur_3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(26|fffd||fffd||fffd||fffd|),s_stmnote_insur_4
Function s_stmnote_insur_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_4 = WindFunc("s_stmnote_insur_4", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_insur_5
Function s_stmnote_insur_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_5 = WindFunc("s_stmnote_insur_5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_insur_6
Function s_stmnote_insur_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_6 = WindFunc("s_stmnote_insur_6", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||88fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_insur_7
Function s_stmnote_insur_7(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_7 = WindFunc("s_stmnote_insur_7", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||2f1||fffd||fffd||fffd|,s_stmnote_insur_8
Function s_stmnote_insur_8(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_8 = WindFunc("s_stmnote_insur_8", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||6fa||3f3||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_9
Function s_stmnote_insur_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_9 = WindFunc("s_stmnote_insur_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||2e36||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_10
Function s_stmnote_insur_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_10 = WindFunc("s_stmnote_insur_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_11
Function s_stmnote_insur_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_11 = WindFunc("s_stmnote_insur_11", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_12
Function s_stmnote_insur_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_12 = WindFunc("s_stmnote_insur_12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|2b5||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_13
Function s_stmnote_insur_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_insur_13 = WindFunc("s_stmnote_insur_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_insur_13) <> vbString Then
        s_stmnote_insur_13 = s_stmnote_insur_13 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_14
Function s_stmnote_insur_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_insur_14 = WindFunc("s_stmnote_insur_14", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_insur_14) <> vbString Then
        s_stmnote_insur_14 = s_stmnote_insur_14 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_15
Function s_stmnote_insur_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_insur_15 = WindFunc("s_stmnote_insur_15", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||6ba||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_16
Function s_stmnote_insur_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_insur_16 = WindFunc("s_stmnote_insur_16", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_insur_16) <> vbString Then
        s_stmnote_insur_16 = s_stmnote_insur_16 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_17
Function s_stmnote_insur_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_insur_17 = WindFunc("s_stmnote_insur_17", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_insur_17) <> vbString Then
        s_stmnote_insur_17 = s_stmnote_insur_17 / UnitVal_
    End If
End Function

'|fffd||fffd||427||4b5||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_18
Function s_stmnote_insur_18(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_insur_18 = WindFunc("s_stmnote_insur_18", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_insur_18) <> vbString Then
        s_stmnote_insur_18 = s_stmnote_insur_18 / UnitVal_
    End If
End Function

'|2b5||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_19
Function s_stmnote_insur_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_insur_19 = WindFunc("s_stmnote_insur_19", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_insur_19) <> vbString Then
        s_stmnote_insur_19 = s_stmnote_insur_19 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_20
Function s_stmnote_insur_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_insur_20 = WindFunc("s_stmnote_insur_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_insur_20) <> vbString Then
        s_stmnote_insur_20 = s_stmnote_insur_20 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b1||fffd|,s_stmnote_sec_1
Function s_stmnote_sec_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_sec_1 = WindFunc("s_stmnote_sec_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_sec_1) <> vbString Then
        s_stmnote_sec_1 = s_stmnote_sec_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd|,s_stmnote_sec_2
Function s_stmnote_sec_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_sec_2 = WindFunc("s_stmnote_sec_2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
    If VarType(s_stmnote_sec_2) <> vbString Then
        s_stmnote_sec_2 = s_stmnote_sec_2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b1||fffd||fffd||fffd||56e||fffd||fffd|,s_stmnote_sec_3
Function s_stmnote_sec_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_sec_3 = WindFunc("s_stmnote_sec_3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_4
Function s_stmnote_sec_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_sec_4 = WindFunc("s_stmnote_sec_4", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b1||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||5ae||fffd||fffd|,s_stmnote_sec_5
Function s_stmnote_sec_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_sec_5 = WindFunc("s_stmnote_sec_5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2b1||fffd|/|fffd||fffd||fffd||2b2||fffd|,s_stmnote_sec_6
Function s_stmnote_sec_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_sec_6 = WindFunc("s_stmnote_sec_6", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||4ea||228||fffd||fffd||fffd||fffd||5a4||22f||fffd||fffd||5a4||22f||fffd||fffd||fffd||fffd||1b7|/|fffd||fffd||fffd||2b1||fffd|,s_stmnote_sec_7
Function s_stmnote_sec_7(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_sec_7 = WindFunc("s_stmnote_sec_7", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||336||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a4||22f|/|fffd||fffd||fffd||2b1||fffd|,s_stmnote_sec_8
Function s_stmnote_sec_8(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_stmnote_sec_8 = WindFunc("s_stmnote_sec_8", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||3f8|-|fffd||6b2||fffd||1b7|,s_stmnote_inv_2
Function s_stmnote_inv_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_inv_2 = WindFunc("s_stmnote_inv_2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_inv_2) <> vbString Then
        s_stmnote_inv_2 = s_stmnote_inv_2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3f8|-|52d||fffd||fffd||fffd||fffd|,s_stmnote_inv_1
Function s_stmnote_inv_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_inv_1 = WindFunc("s_stmnote_inv_1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_inv_1) <> vbString Then
        s_stmnote_inv_1 = s_stmnote_inv_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3f8|-|fffd||fffd||fffd||fffd||1b7|,s_stmnote_inv_3
Function s_stmnote_inv_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_inv_3 = WindFunc("s_stmnote_inv_3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_inv_3) <> vbString Then
        s_stmnote_inv_3 = s_stmnote_inv_3 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3f8|-|fffd||fffd||5b5||fffd||5fa||fffd||1b7|,s_stmnote_inv_4
Function s_stmnote_inv_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_inv_4 = WindFunc("s_stmnote_inv_4", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_inv_4) <> vbString Then
        s_stmnote_inv_4 = s_stmnote_inv_4 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3f8|-|fffd||fffd||5f0||fffd||fffd|,s_stmnote_inv_5
Function s_stmnote_inv_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_inv_5 = WindFunc("s_stmnote_inv_5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_inv_5) <> vbString Then
        s_stmnote_inv_5 = s_stmnote_inv_5 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3f8|-|3af||fffd||434||fffd||fffd||fffd||fffd||fffd||1b7|,s_stmnote_inv_7
Function s_stmnote_inv_7(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_inv_7 = WindFunc("s_stmnote_inv_7", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_inv_7) <> vbString Then
        s_stmnote_inv_7 = s_stmnote_inv_7 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3f8|-|3af||fffd||43c||4f9||fffd||fffd||fffd||fffd||fffd|,s_stmnote_inv_6
Function s_stmnote_inv_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_inv_6 = WindFunc("s_stmnote_inv_6", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_inv_6) <> vbString Then
        s_stmnote_inv_6 = s_stmnote_inv_6 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd|-|fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_stmnote_ar_3
Function s_stmnote_ar_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional Year_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_ar_3 = WindFunc("s_stmnote_ar_3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Year_, Null, Null, Null)
    If VarType(s_stmnote_ar_3) <> vbString Then
        s_stmnote_ar_3 = s_stmnote_ar_3 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd|-|fffd||fffd||fffd|,s_stmnote_ar_1
Function s_stmnote_ar_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional Year_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_ar_1 = WindFunc("s_stmnote_ar_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Year_, Null, Null, Null)
    If VarType(s_stmnote_ar_1) <> vbString Then
        s_stmnote_ar_1 = s_stmnote_ar_1 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd|-|fffd||fffd||fffd||fffd|,s_stmnote_ar_2
Function s_stmnote_ar_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional Year_ As Integer = 1) As Variant
  s_stmnote_ar_2 = WindFunc("s_stmnote_ar_2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Year_, Null, Null, Null)
End Function

'|3a5||fffd||6d63||fffd||fffd||fffd||736||fffd|,s_stmnote_guarantee_5
Function s_stmnote_guarantee_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_guarantee_5 = WindFunc("s_stmnote_guarantee_5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_guarantee_5) <> vbString Then
        s_stmnote_guarantee_5 = s_stmnote_guarantee_5 / UnitVal_
    End If
End Function

'|fffd||53f||639||fffd||fffd||4f9||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_guarantee_4
Function s_stmnote_guarantee_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_guarantee_4 = WindFunc("s_stmnote_guarantee_4", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_guarantee_4) <> vbString Then
        s_stmnote_guarantee_4 = s_stmnote_guarantee_4 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_guarantee_2
Function s_stmnote_guarantee_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_guarantee_2 = WindFunc("s_stmnote_guarantee_2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_guarantee_2) <> vbString Then
        s_stmnote_guarantee_2 = s_stmnote_guarantee_2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_guarantee_3
Function s_stmnote_guarantee_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_guarantee_3 = WindFunc("s_stmnote_guarantee_3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_guarantee_3) <> vbString Then
        s_stmnote_guarantee_3 = s_stmnote_guarantee_3 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd||57c||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd|,s_stmnote_guarantee_6
Function s_stmnote_guarantee_6(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_guarantee_6 = WindFunc("s_stmnote_guarantee_6", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_guarantee_1
Function s_stmnote_guarantee_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_guarantee_1 = WindFunc("s_stmnote_guarantee_1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_guarantee_1) <> vbString Then
        s_stmnote_guarantee_1 = s_stmnote_guarantee_1 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||3b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_profitapr_1
Function s_stmnote_profitapr_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_1 = WindFunc("s_stmnote_profitapr_1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_1) <> vbString Then
        s_stmnote_profitapr_1 = s_stmnote_profitapr_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b5||fffd||5be||fffd||fffd||fffd||fffd||fffd|,s_stmnote_profitapr_2
Function s_stmnote_profitapr_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_2 = WindFunc("s_stmnote_profitapr_2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_2) <> vbString Then
        s_stmnote_profitapr_2 = s_stmnote_profitapr_2 / UnitVal_
    End If
End Function

'|fffd||fffd||129||fffd||277||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_profitapr_3
Function s_stmnote_profitapr_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_3 = WindFunc("s_stmnote_profitapr_3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_3) <> vbString Then
        s_stmnote_profitapr_3 = s_stmnote_profitapr_3 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||fffd||368||fffd||279||fffd||fffd||fffd|,s_stmnote_profitapr_4
Function s_stmnote_profitapr_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_4 = WindFunc("s_stmnote_profitapr_4", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_4) <> vbString Then
        s_stmnote_profitapr_4 = s_stmnote_profitapr_4 / UnitVal_
    End If
End Function

'|fffd||fffd||221||fffd||fffd||fffd||fffd||4ef||fffd||e6b||fffd||fffd|,s_stmnote_profitapr_5
Function s_stmnote_profitapr_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_5 = WindFunc("s_stmnote_profitapr_5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_5) <> vbString Then
        s_stmnote_profitapr_5 = s_stmnote_profitapr_5 / UnitVal_
    End If
End Function

'|fffd||fffd||221||fffd||fffd||fffd||2e6b||fffd||fffd||fffd||fffd|,s_stmnote_profitapr_6
Function s_stmnote_profitapr_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_6 = WindFunc("s_stmnote_profitapr_6", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_6) <> vbString Then
        s_stmnote_profitapr_6 = s_stmnote_profitapr_6 / UnitVal_
    End If
End Function

'|5ea||fffd||fffd||fffd||271||fffd|,s_stmnote_profitapr_8
Function s_stmnote_profitapr_8(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_8 = WindFunc("s_stmnote_profitapr_8", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_8) <> vbString Then
        s_stmnote_profitapr_8 = s_stmnote_profitapr_8 / UnitVal_
    End If
End Function

'|fffd||fffd||129||3b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_profitapr_9
Function s_stmnote_profitapr_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_profitapr_9 = WindFunc("s_stmnote_profitapr_9", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_profitapr_9) <> vbString Then
        s_stmnote_profitapr_9 = s_stmnote_profitapr_9 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd|-|fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_assetdetail_3
Function s_stmnote_assetdetail_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_3 = WindFunc("s_stmnote_assetdetail_3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_3) <> vbString Then
        s_stmnote_assetdetail_3 = s_stmnote_assetdetail_3 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||537||fffd||fffd||632||fffd|-|fffd||fffd||fffd||fffd|,s_stmnote_assetdetail_8
Function s_stmnote_assetdetail_8(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_8 = WindFunc("s_stmnote_assetdetail_8", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_8) <> vbString Then
        s_stmnote_assetdetail_8 = s_stmnote_assetdetail_8 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||fffd||fffd||fffd|,s_stmnote_assetdetail_16
Function s_stmnote_assetdetail_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_16 = WindFunc("s_stmnote_assetdetail_16", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_16) <> vbString Then
        s_stmnote_assetdetail_16 = s_stmnote_assetdetail_16 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_assetdetail_11
Function s_stmnote_assetdetail_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_11 = WindFunc("s_stmnote_assetdetail_11", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_11) <> vbString Then
        s_stmnote_assetdetail_11 = s_stmnote_assetdetail_11 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||537||fffd||fffd||632||fffd|-|fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_assetdetail_7
Function s_stmnote_assetdetail_7(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_7 = WindFunc("s_stmnote_assetdetail_7", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_7) <> vbString Then
        s_stmnote_assetdetail_7 = s_stmnote_assetdetail_7 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|52d||5b5|,s_stmnote_assetdetail_17
Function s_stmnote_assetdetail_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_17 = WindFunc("s_stmnote_assetdetail_17", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_17) <> vbString Then
        s_stmnote_assetdetail_17 = s_stmnote_assetdetail_17 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|52d||5b5|,s_stmnote_assetdetail_9
Function s_stmnote_assetdetail_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_9 = WindFunc("s_stmnote_assetdetail_9", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_9) <> vbString Then
        s_stmnote_assetdetail_9 = s_stmnote_assetdetail_9 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_assetdetail_19
Function s_stmnote_assetdetail_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_19 = WindFunc("s_stmnote_assetdetail_19", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_19) <> vbString Then
        s_stmnote_assetdetail_19 = s_stmnote_assetdetail_19 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd|-|fffd||fffd||fffd||fffd|,s_stmnote_assetdetail_4
Function s_stmnote_assetdetail_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_4 = WindFunc("s_stmnote_assetdetail_4", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_4) <> vbString Then
        s_stmnote_assetdetail_4 = s_stmnote_assetdetail_4 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd|-|fffd||6fc||fffd||fffd||6fe||fffd|,s_stmnote_assetdetail_2
Function s_stmnote_assetdetail_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_2 = WindFunc("s_stmnote_assetdetail_2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_2) <> vbString Then
        s_stmnote_assetdetail_2 = s_stmnote_assetdetail_2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||fffd||fffd||fffd|,s_stmnote_assetdetail_12
Function s_stmnote_assetdetail_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_12 = WindFunc("s_stmnote_assetdetail_12", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_12) <> vbString Then
        s_stmnote_assetdetail_12 = s_stmnote_assetdetail_12 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|52d||5b5|,s_stmnote_assetdetail_13
Function s_stmnote_assetdetail_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_13 = WindFunc("s_stmnote_assetdetail_13", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_13) <> vbString Then
        s_stmnote_assetdetail_13 = s_stmnote_assetdetail_13 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||6fc||fffd||32f||fffd||fffd|,s_stmnote_assetdetail_18
Function s_stmnote_assetdetail_18(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_18 = WindFunc("s_stmnote_assetdetail_18", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_18) <> vbString Then
        s_stmnote_assetdetail_18 = s_stmnote_assetdetail_18 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd|-|52d||5b5|,s_stmnote_assetdetail_1
Function s_stmnote_assetdetail_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_1 = WindFunc("s_stmnote_assetdetail_1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_1) <> vbString Then
        s_stmnote_assetdetail_1 = s_stmnote_assetdetail_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||6fc||fffd||fffd||6fe||fffd|,s_stmnote_assetdetail_10
Function s_stmnote_assetdetail_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_10 = WindFunc("s_stmnote_assetdetail_10", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_10) <> vbString Then
        s_stmnote_assetdetail_10 = s_stmnote_assetdetail_10 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||537||fffd||fffd||632||fffd|-|fffd||6fc||fffd||fffd||6fe||fffd|,s_stmnote_assetdetail_6
Function s_stmnote_assetdetail_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_6 = WindFunc("s_stmnote_assetdetail_6", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_6) <> vbString Then
        s_stmnote_assetdetail_6 = s_stmnote_assetdetail_6 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||fffd||fffd||fffd|,s_stmnote_assetdetail_20
Function s_stmnote_assetdetail_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_20 = WindFunc("s_stmnote_assetdetail_20", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_20) <> vbString Then
        s_stmnote_assetdetail_20 = s_stmnote_assetdetail_20 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_assetdetail_15
Function s_stmnote_assetdetail_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_15 = WindFunc("s_stmnote_assetdetail_15", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_15) <> vbString Then
        s_stmnote_assetdetail_15 = s_stmnote_assetdetail_15 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|-|fffd||6fc||fffd||fffd||6fa||fffd|,s_stmnote_assetdetail_14
Function s_stmnote_assetdetail_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_14 = WindFunc("s_stmnote_assetdetail_14", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_14) <> vbString Then
        s_stmnote_assetdetail_14 = s_stmnote_assetdetail_14 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||537||fffd||fffd||632||fffd|-|52d||5b5|,s_stmnote_assetdetail_5
Function s_stmnote_assetdetail_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_assetdetail_5 = WindFunc("s_stmnote_assetdetail_5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_assetdetail_5) <> vbString Then
        s_stmnote_assetdetail_5 = s_stmnote_assetdetail_5 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f2||fffd||1b7||fffd||fffd||fffd||1e69||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_associated_1
Function s_stmnote_associated_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_associated_1 = WindFunc("s_stmnote_associated_1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_associated_1) <> vbString Then
        s_stmnote_associated_1 = s_stmnote_associated_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||279||fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_associated_2
Function s_stmnote_associated_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_associated_2 = WindFunc("s_stmnote_associated_2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_associated_2) <> vbString Then
        s_stmnote_associated_2 = s_stmnote_associated_2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e69||fffd||2bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_associated_3
Function s_stmnote_associated_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_associated_3 = WindFunc("s_stmnote_associated_3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_associated_3) <> vbString Then
        s_stmnote_associated_3 = s_stmnote_associated_3 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1e69||fffd||2bd||fffd||fffd||fffd||fffd|,s_stmnote_associated_4
Function s_stmnote_associated_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_associated_4 = WindFunc("s_stmnote_associated_4", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_associated_4) <> vbString Then
        s_stmnote_associated_4 = s_stmnote_associated_4 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||439||fffd||2fe||fffd||1e69||fffd||2bd||fffd||fffd||fffd||fffd|,s_stmnote_associated_6
Function s_stmnote_associated_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_associated_6 = WindFunc("s_stmnote_associated_6", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_associated_6) <> vbString Then
        s_stmnote_associated_6 = s_stmnote_associated_6 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||439||fffd||2fe||fffd||1e69||fffd||2bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_associated_5
Function s_stmnote_associated_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_associated_5 = WindFunc("s_stmnote_associated_5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(s_stmnote_associated_5) <> vbString Then
        s_stmnote_associated_5 = s_stmnote_associated_5 / UnitVal_
    End If
End Function




'|fffd||fffd||fffd||fffd||fffd||fffd||2a7||5fc||fffd||fffd|,hks_stm_is_1060
Function hks_stm_is_1060(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1060 = WindFunc("hks_stm_is_1060", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1060) <> vbString Then
        hks_stm_is_1060 = hks_stm_is_1060 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5ec||fffd||fffd||fffd||fffd|,hks_stm_is_1063
Function hks_stm_is_1063(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1063 = WindFunc("hks_stm_is_1063", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1063) <> vbString Then
        hks_stm_is_1063 = hks_stm_is_1063 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||239||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1074
Function hks_stm_is_1074(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1074 = WindFunc("hks_stm_is_1074", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1074) <> vbString Then
        hks_stm_is_1074 = hks_stm_is_1074 / UnitVal_
    End If
End Function

'|fffd||1fe||fffd||fffd||fffd||fffd||fffd||13f||1f0||fffd||fffd||fffd||fffd|,hks_stm_is_1076
Function hks_stm_is_1076(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1076 = WindFunc("hks_stm_is_1076", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1076) <> vbString Then
        hks_stm_is_1076 = hks_stm_is_1076 / UnitVal_
    End If
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1078
Function hks_stm_is_1078(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1078 = WindFunc("hks_stm_is_1078", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1078) <> vbString Then
        hks_stm_is_1078 = hks_stm_is_1078 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||437||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1080
Function hks_stm_is_1080(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1080 = WindFunc("hks_stm_is_1080", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1080) <> vbString Then
        hks_stm_is_1080 = hks_stm_is_1080 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1082
Function hks_stm_is_1082(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1082 = WindFunc("hks_stm_is_1082", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1082) <> vbString Then
        hks_stm_is_1082 = hks_stm_is_1082 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1084
Function hks_stm_is_1084(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1084 = WindFunc("hks_stm_is_1084", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1084) <> vbString Then
        hks_stm_is_1084 = hks_stm_is_1084 / UnitVal_
    End If
End Function

'|fffd||2ee7||fffd||3fd||fffd||fffd||fffd||4b5||3ac||fffd||fffd||fffd||6fa||3f7||fffd|,hks_stm_is_1085
Function hks_stm_is_1085(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1085 = WindFunc("hks_stm_is_1085", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1085) <> vbString Then
        hks_stm_is_1085 = hks_stm_is_1085 / UnitVal_
    End If
End Function

'|fffd||fffd||47a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1087
Function hks_stm_is_1087(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1087 = WindFunc("hks_stm_is_1087", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1087) <> vbString Then
        hks_stm_is_1087 = hks_stm_is_1087 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||271||fffd|,hks_stm_is_10
Function hks_stm_is_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_10 = WindFunc("hks_stm_is_10", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_10) <> vbString Then
        hks_stm_is_10 = hks_stm_is_10 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_62
Function hks_stm_is_62(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_62 = WindFunc("hks_stm_is_62", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_62) <> vbString Then
        hks_stm_is_62 = hks_stm_is_62 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,hks_stm_is_83
Function hks_stm_is_83(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_83 = WindFunc("hks_stm_is_83", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_83) <> vbString Then
        hks_stm_is_83 = hks_stm_is_83 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,hks_stm_is_1011
Function hks_stm_is_1011(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1011 = WindFunc("hks_stm_is_1011", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1011) <> vbString Then
        hks_stm_is_1011 = hks_stm_is_1011 / UnitVal_
    End If
End Function

'|fffd||fffd||2f0||1f0||fffd||fffd||fffd||fffd|,hks_stm_is_1016
Function hks_stm_is_1016(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1016 = WindFunc("hks_stm_is_1016", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1016) <> vbString Then
        hks_stm_is_1016 = hks_stm_is_1016 / UnitVal_
    End If
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1030
Function hks_stm_is_1030(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1030 = WindFunc("hks_stm_is_1030", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1030) <> vbString Then
        hks_stm_is_1030 = hks_stm_is_1030 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||5a7||fffd||fffd|,hks_stm_is_1033
Function hks_stm_is_1033(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1033 = WindFunc("hks_stm_is_1033", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1033) <> vbString Then
        hks_stm_is_1033 = hks_stm_is_1033 / UnitVal_
    End If
End Function

'|228||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1034
Function hks_stm_is_1034(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1034 = WindFunc("hks_stm_is_1034", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1034) <> vbString Then
        hks_stm_is_1034 = hks_stm_is_1034 / UnitVal_
    End If
End Function

'|fffd||1f3||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1038
Function hks_stm_is_1038(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1038 = WindFunc("hks_stm_is_1038", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1038) <> vbString Then
        hks_stm_is_1038 = hks_stm_is_1038 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1039
Function hks_stm_is_1039(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1039 = WindFunc("hks_stm_is_1039", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1039) <> vbString Then
        hks_stm_is_1039 = hks_stm_is_1039 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1040
Function hks_stm_is_1040(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1040 = WindFunc("hks_stm_is_1040", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1040) <> vbString Then
        hks_stm_is_1040 = hks_stm_is_1040 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1045
Function hks_stm_is_1045(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1045 = WindFunc("hks_stm_is_1045", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1045) <> vbString Then
        hks_stm_is_1045 = hks_stm_is_1045 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|,hks_stm_is_1048
Function hks_stm_is_1048(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1048 = WindFunc("hks_stm_is_1048", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1048) <> vbString Then
        hks_stm_is_1048 = hks_stm_is_1048 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1050
Function hks_stm_is_1050(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1050 = WindFunc("hks_stm_is_1050", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1050) <> vbString Then
        hks_stm_is_1050 = hks_stm_is_1050 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1053
Function hks_stm_is_1053(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1053 = WindFunc("hks_stm_is_1053", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1053) <> vbString Then
        hks_stm_is_1053 = hks_stm_is_1053 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1058
Function hks_stm_is_1058(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1058 = WindFunc("hks_stm_is_1058", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1058) <> vbString Then
        hks_stm_is_1058 = hks_stm_is_1058 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1051
Function hks_stm_is_1051(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1051 = WindFunc("hks_stm_is_1051", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1051) <> vbString Then
        hks_stm_is_1051 = hks_stm_is_1051 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1054
Function hks_stm_is_1054(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1054 = WindFunc("hks_stm_is_1054", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1054) <> vbString Then
        hks_stm_is_1054 = hks_stm_is_1054 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_61
Function hks_stm_is_61(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_61 = WindFunc("hks_stm_is_61", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_61) <> vbString Then
        hks_stm_is_61 = hks_stm_is_61 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|,hks_stm_is_9
Function hks_stm_is_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_9 = WindFunc("hks_stm_is_9", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_9) <> vbString Then
        hks_stm_is_9 = hks_stm_is_9 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|,hks_stm_is_1073
Function hks_stm_is_1073(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1073 = WindFunc("hks_stm_is_1073", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1073) <> vbString Then
        hks_stm_is_1073 = hks_stm_is_1073 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1075
Function hks_stm_is_1075(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1075 = WindFunc("hks_stm_is_1075", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1075) <> vbString Then
        hks_stm_is_1075 = hks_stm_is_1075 / UnitVal_
    End If
End Function

'|fffd||1fe||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd||fffd|,hks_stm_is_1077
Function hks_stm_is_1077(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1077 = WindFunc("hks_stm_is_1077", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1077) <> vbString Then
        hks_stm_is_1077 = hks_stm_is_1077 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1081
Function hks_stm_is_1081(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1081 = WindFunc("hks_stm_is_1081", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1081) <> vbString Then
        hks_stm_is_1081 = hks_stm_is_1081 / UnitVal_
    End If
End Function

'|fffd||6f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7||5fc||fffd||fffd||1f0||fffd||fffd||fffd||fffd|,hks_stm_is_1083
Function hks_stm_is_1083(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1083 = WindFunc("hks_stm_is_1083", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1083) <> vbString Then
        hks_stm_is_1083 = hks_stm_is_1083 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||632||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1086
Function hks_stm_is_1086(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1086 = WindFunc("hks_stm_is_1086", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1086) <> vbString Then
        hks_stm_is_1086 = hks_stm_is_1086 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0|,hks_stm_is_56
Function hks_stm_is_56(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_56 = WindFunc("hks_stm_is_56", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_56) <> vbString Then
        hks_stm_is_56 = hks_stm_is_56 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||4b5||5a7||fffd||fffd|,hks_stm_is_1032
Function hks_stm_is_1032(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1032 = WindFunc("hks_stm_is_1032", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1032) <> vbString Then
        hks_stm_is_1032 = hks_stm_is_1032 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1fe||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1035
Function hks_stm_is_1035(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1035 = WindFunc("hks_stm_is_1035", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1035) <> vbString Then
        hks_stm_is_1035 = hks_stm_is_1035 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|,hks_stm_is_1041
Function hks_stm_is_1041(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1041 = WindFunc("hks_stm_is_1041", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1041) <> vbString Then
        hks_stm_is_1041 = hks_stm_is_1041 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_is_1079
Function hks_stm_is_1079(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1079 = WindFunc("hks_stm_is_1079", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1079) <> vbString Then
        hks_stm_is_1079 = hks_stm_is_1079 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||5a7|,hks_stm_is_1052
Function hks_stm_is_1052(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_is_1052 = WindFunc("hks_stm_is_1052", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_is_1052) <> vbString Then
        hks_stm_is_1052 = hks_stm_is_1052 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||ef30||1b1||fffd||fffd|,hks_stm_bs_78
Function hks_stm_bs_78(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_78 = WindFunc("hks_stm_bs_78", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_78) <> vbString Then
        hks_stm_bs_78 = hks_stm_bs_78 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd|,hks_stm_bs_1041
Function hks_stm_bs_1041(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1041 = WindFunc("hks_stm_bs_1041", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1041) <> vbString Then
        hks_stm_bs_1041 = hks_stm_bs_1041 / UnitVal_
    End If
End Function

'|228||fffd||fffd||fffd||fffd||376||fffd||fffd|,hks_stm_bs_29
Function hks_stm_bs_29(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_29 = WindFunc("hks_stm_bs_29", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_29) <> vbString Then
        hks_stm_bs_29 = hks_stm_bs_29 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||fffd||2b2||fffd|,hks_stm_bs_10
Function hks_stm_bs_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_10 = WindFunc("hks_stm_bs_10", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_10) <> vbString Then
        hks_stm_bs_10 = hks_stm_bs_10 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||fffd|,hks_stm_bs_9
Function hks_stm_bs_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_9 = WindFunc("hks_stm_bs_9", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_9) <> vbString Then
        hks_stm_bs_9 = hks_stm_bs_9 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|,hks_stm_bs_93
Function hks_stm_bs_93(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_93 = WindFunc("hks_stm_bs_93", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_93) <> vbString Then
        hks_stm_bs_93 = hks_stm_bs_93 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||228||fffd||fffd|,hks_stm_bs_140
Function hks_stm_bs_140(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_140 = WindFunc("hks_stm_bs_140", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_140) <> vbString Then
        hks_stm_bs_140 = hks_stm_bs_140 / UnitVal_
    End If
End Function

'|fffd||738||fffd||56e|,hks_stm_bs_128
Function hks_stm_bs_128(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_128 = WindFunc("hks_stm_bs_128", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_128) <> vbString Then
        hks_stm_bs_128 = hks_stm_bs_128 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,hks_stm_bs_31
Function hks_stm_bs_31(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_31 = WindFunc("hks_stm_bs_31", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_31) <> vbString Then
        hks_stm_bs_31 = hks_stm_bs_31 / UnitVal_
    End If
End Function

'|fffd||37b||fffd||fffd||fffd||fffd||ef30||fffd||fffd||efbb||fffd||fffd|,hks_stm_bs_1062
Function hks_stm_bs_1062(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1062 = WindFunc("hks_stm_bs_1062", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1062) <> vbString Then
        hks_stm_bs_1062 = hks_stm_bs_1062 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||6b8||fffd||56e|,hks_stm_bs_1065
Function hks_stm_bs_1065(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1065 = WindFunc("hks_stm_bs_1065", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1065) <> vbString Then
        hks_stm_bs_1065 = hks_stm_bs_1065 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||671||fffd|,hks_stm_bs_1073
Function hks_stm_bs_1073(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1073 = WindFunc("hks_stm_bs_1073", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1073) <> vbString Then
        hks_stm_bs_1073 = hks_stm_bs_1073 / UnitVal_
    End If
End Function

'|4e6||fffd||571||fffd||fffd||fffd|,hks_stm_bs_1074
Function hks_stm_bs_1074(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1074 = WindFunc("hks_stm_bs_1074", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1074) <> vbString Then
        hks_stm_bs_1074 = hks_stm_bs_1074 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57a||fffd||36c||fffd||fffd||56e|,hks_stm_bs_1076
Function hks_stm_bs_1076(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1076 = WindFunc("hks_stm_bs_1076", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1076) <> vbString Then
        hks_stm_bs_1076 = hks_stm_bs_1076 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_bs_1080
Function hks_stm_bs_1080(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1080 = WindFunc("hks_stm_bs_1080", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1080) <> vbString Then
        hks_stm_bs_1080 = hks_stm_bs_1080 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e|,hks_stm_bs_1083
Function hks_stm_bs_1083(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1083 = WindFunc("hks_stm_bs_1083", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1083) <> vbString Then
        hks_stm_bs_1083 = hks_stm_bs_1083 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_bs_1086
Function hks_stm_bs_1086(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1086 = WindFunc("hks_stm_bs_1086", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1086) <> vbString Then
        hks_stm_bs_1086 = hks_stm_bs_1086 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||6f4||fffd||fffd||fffd|,hks_stm_bs_1094
Function hks_stm_bs_1094(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1094 = WindFunc("hks_stm_bs_1094", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1094) <> vbString Then
        hks_stm_bs_1094 = hks_stm_bs_1094 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd|,hks_stm_bs_1096
Function hks_stm_bs_1096(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1096 = WindFunc("hks_stm_bs_1096", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1096) <> vbString Then
        hks_stm_bs_1096 = hks_stm_bs_1096 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd||fffd||6b5||fffd||fffd||6b2||fffd||fffd||fffd|,hks_stm_bs_88
Function hks_stm_bs_88(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_88 = WindFunc("hks_stm_bs_88", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_88) <> vbString Then
        hks_stm_bs_88 = hks_stm_bs_88 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd|,hks_stm_bs_94
Function hks_stm_bs_94(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_94 = WindFunc("hks_stm_bs_94", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_94) <> vbString Then
        hks_stm_bs_94 = hks_stm_bs_94 / UnitVal_
    End If
End Function

'|fffd||271||fffd||fffd||fffd||fffd|,hks_stm_bs_130
Function hks_stm_bs_130(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_130 = WindFunc("hks_stm_bs_130", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_130) <> vbString Then
        hks_stm_bs_130 = hks_stm_bs_130 / UnitVal_
    End If
End Function

'|fffd||276||fffd||228||fffd||fffd||3fc||fffd|,hks_stm_bs_145
Function hks_stm_bs_145(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_145 = WindFunc("hks_stm_bs_145", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_145) <> vbString Then
        hks_stm_bs_145 = hks_stm_bs_145 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||239||fffd|,hks_stm_bs_1053
Function hks_stm_bs_1053(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1053 = WindFunc("hks_stm_bs_1053", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1053) <> vbString Then
        hks_stm_bs_1053 = hks_stm_bs_1053 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||671||fffd|,hks_stm_bs_1102
Function hks_stm_bs_1102(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1102 = WindFunc("hks_stm_bs_1102", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1102) <> vbString Then
        hks_stm_bs_1102 = hks_stm_bs_1102 / UnitVal_
    End If
End Function

'|fffd||fffd||47a||fffd||fffd||fffd||fffd||fffd||fffd||1b1||fffd||77e||fffd||fffd||fffd|,hks_stm_bs_1109
Function hks_stm_bs_1109(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1109 = WindFunc("hks_stm_bs_1109", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1109) <> vbString Then
        hks_stm_bs_1109 = hks_stm_bs_1109 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,hks_stm_bs_1110
Function hks_stm_bs_1110(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1110 = WindFunc("hks_stm_bs_1110", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1110) <> vbString Then
        hks_stm_bs_1110 = hks_stm_bs_1110 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||3fc||fffd|,hks_stm_bs_1017
Function hks_stm_bs_1017(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1017 = WindFunc("hks_stm_bs_1017", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1017) <> vbString Then
        hks_stm_bs_1017 = hks_stm_bs_1017 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b9||fffd||fffd||228|,hks_stm_bs_1030
Function hks_stm_bs_1030(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1030 = WindFunc("hks_stm_bs_1030", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1030) <> vbString Then
        hks_stm_bs_1030 = hks_stm_bs_1030 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||57f||fffd|,hks_stm_bs_1037
Function hks_stm_bs_1037(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1037 = WindFunc("hks_stm_bs_1037", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1037) <> vbString Then
        hks_stm_bs_1037 = hks_stm_bs_1037 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd|,hks_stm_bs_1042
Function hks_stm_bs_1042(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1042 = WindFunc("hks_stm_bs_1042", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1042) <> vbString Then
        hks_stm_bs_1042 = hks_stm_bs_1042 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,hks_stm_bs_1045
Function hks_stm_bs_1045(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1045 = WindFunc("hks_stm_bs_1045", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1045) <> vbString Then
        hks_stm_bs_1045 = hks_stm_bs_1045 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,hks_stm_bs_1052
Function hks_stm_bs_1052(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1052 = WindFunc("hks_stm_bs_1052", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1052) <> vbString Then
        hks_stm_bs_1052 = hks_stm_bs_1052 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||2f0||fffd||fffd|,hks_stm_bs_81
Function hks_stm_bs_81(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_81 = WindFunc("hks_stm_bs_81", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_81) <> vbString Then
        hks_stm_bs_81 = hks_stm_bs_81 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_bs_131
Function hks_stm_bs_131(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_131 = WindFunc("hks_stm_bs_131", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_131) <> vbString Then
        hks_stm_bs_131 = hks_stm_bs_131 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd|,hks_stm_bs_17
Function hks_stm_bs_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_17 = WindFunc("hks_stm_bs_17", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_17) <> vbString Then
        hks_stm_bs_17 = hks_stm_bs_17 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||3fc||fffd|,hks_stm_bs_46
Function hks_stm_bs_46(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_46 = WindFunc("hks_stm_bs_46", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_46) <> vbString Then
        hks_stm_bs_46 = hks_stm_bs_46 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||3fc||fffd|,hks_stm_bs_25
Function hks_stm_bs_25(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_25 = WindFunc("hks_stm_bs_25", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_25) <> vbString Then
        hks_stm_bs_25 = hks_stm_bs_25 / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||279||271||fffd|,hks_stm_bs_129
Function hks_stm_bs_129(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_129 = WindFunc("hks_stm_bs_129", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_129) <> vbString Then
        hks_stm_bs_129 = hks_stm_bs_129 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b2||fffd|,hks_stm_bs_74
Function hks_stm_bs_74(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_74 = WindFunc("hks_stm_bs_74", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_74) <> vbString Then
        hks_stm_bs_74 = hks_stm_bs_74 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||efbb||fffd||fffd|,hks_stm_bs_12
Function hks_stm_bs_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_12 = WindFunc("hks_stm_bs_12", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_12) <> vbString Then
        hks_stm_bs_12 = hks_stm_bs_12 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4f1||fffd||fffd||fffd||fffd||fffd||f3||271||fffd|,hks_stm_bs_1075
Function hks_stm_bs_1075(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1075 = WindFunc("hks_stm_bs_1075", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1075) <> vbString Then
        hks_stm_bs_1075 = hks_stm_bs_1075 / UnitVal_
    End If
End Function

'|376||fffd||2ba||fffd||36c||fffd||fffd||56e|,hks_stm_bs_1077
Function hks_stm_bs_1077(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1077 = WindFunc("hks_stm_bs_1077", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1077) <> vbString Then
        hks_stm_bs_1077 = hks_stm_bs_1077 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,hks_stm_bs_1082
Function hks_stm_bs_1082(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1082 = WindFunc("hks_stm_bs_1082", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1082) <> vbString Then
        hks_stm_bs_1082 = hks_stm_bs_1082 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|,hks_stm_bs_1085
Function hks_stm_bs_1085(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1085 = WindFunc("hks_stm_bs_1085", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1085) <> vbString Then
        hks_stm_bs_1085 = hks_stm_bs_1085 / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||fffd||228||fffd||fffd||fffd||736||fffd|,hks_stm_bs_1087
Function hks_stm_bs_1087(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1087 = WindFunc("hks_stm_bs_1087", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1087) <> vbString Then
        hks_stm_bs_1087 = hks_stm_bs_1087 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2bd||fffd|,hks_stm_bs_1092
Function hks_stm_bs_1092(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1092 = WindFunc("hks_stm_bs_1092", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1092) <> vbString Then
        hks_stm_bs_1092 = hks_stm_bs_1092 / UnitVal_
    End If
End Function

'|fffd||fffd||47a||fffd||fffd||fffd||fffd||5a4||22f|,hks_stm_bs_1093
Function hks_stm_bs_1093(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1093 = WindFunc("hks_stm_bs_1093", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1093) <> vbString Then
        hks_stm_bs_1093 = hks_stm_bs_1093 / UnitVal_
    End If
End Function

'|fffd||734||fffd||fffd|,hks_stm_bs_1095
Function hks_stm_bs_1095(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1095 = WindFunc("hks_stm_bs_1095", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1095) <> vbString Then
        hks_stm_bs_1095 = hks_stm_bs_1095 / UnitVal_
    End If
End Function

'|fffd||fffd||47a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_bs_1097
Function hks_stm_bs_1097(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1097 = WindFunc("hks_stm_bs_1097", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1097) <> vbString Then
        hks_stm_bs_1097 = hks_stm_bs_1097 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd|,hks_stm_bs_1099
Function hks_stm_bs_1099(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1099 = WindFunc("hks_stm_bs_1099", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1099) <> vbString Then
        hks_stm_bs_1099 = hks_stm_bs_1099 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||228||fffd||fffd|,hks_stm_bs_136
Function hks_stm_bs_136(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_136 = WindFunc("hks_stm_bs_136", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_136) <> vbString Then
        hks_stm_bs_136 = hks_stm_bs_136 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|,hks_stm_bs_1021
Function hks_stm_bs_1021(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1021 = WindFunc("hks_stm_bs_1021", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1021) <> vbString Then
        hks_stm_bs_1021 = hks_stm_bs_1021 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,hks_stm_bs_1070
Function hks_stm_bs_1070(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1070 = WindFunc("hks_stm_bs_1070", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1070) <> vbString Then
        hks_stm_bs_1070 = hks_stm_bs_1070 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,hks_stm_bs_1111
Function hks_stm_bs_1111(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1111 = WindFunc("hks_stm_bs_1111", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1111) <> vbString Then
        hks_stm_bs_1111 = hks_stm_bs_1111 / UnitVal_
    End If
End Function

'|fffd||738||fffd||56e||fffd||fffd||fffd||fffd||228||fffd||fffd|,hks_stm_bs_1028
Function hks_stm_bs_1028(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1028 = WindFunc("hks_stm_bs_1028", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1028) <> vbString Then
        hks_stm_bs_1028 = hks_stm_bs_1028 / UnitVal_
    End If
End Function

'|4e6||fffd||57f||fffd||fffd||fffd||3fc||fffd|,hks_stm_bs_1035
Function hks_stm_bs_1035(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1035 = WindFunc("hks_stm_bs_1035", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1035) <> vbString Then
        hks_stm_bs_1035 = hks_stm_bs_1035 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,hks_stm_bs_1039
Function hks_stm_bs_1039(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1039 = WindFunc("hks_stm_bs_1039", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1039) <> vbString Then
        hks_stm_bs_1039 = hks_stm_bs_1039 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd|,hks_stm_bs_1043
Function hks_stm_bs_1043(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1043 = WindFunc("hks_stm_bs_1043", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1043) <> vbString Then
        hks_stm_bs_1043 = hks_stm_bs_1043 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,hks_stm_bs_1049
Function hks_stm_bs_1049(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1049 = WindFunc("hks_stm_bs_1049", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1049) <> vbString Then
        hks_stm_bs_1049 = hks_stm_bs_1049 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd|,hks_stm_bs_1084
Function hks_stm_bs_1084(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_bs_1084 = WindFunc("hks_stm_bs_1084", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_bs_1084) <> vbString Then
        hks_stm_bs_1084 = hks_stm_bs_1084 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||6b3||fffd||fffd||fffd||fffd|,hks_stm_cs_83
Function hks_stm_cs_83(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_83 = WindFunc("hks_stm_cs_83", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_83) <> vbString Then
        hks_stm_cs_83 = hks_stm_cs_83 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_59
Function hks_stm_cs_59(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_59 = WindFunc("hks_stm_cs_59", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_59) <> vbString Then
        hks_stm_cs_59 = hks_stm_cs_59 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||ffbb||fffd||fffd||fffd||4f6||fffd|,hks_stm_cs_82
Function hks_stm_cs_82(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_82 = WindFunc("hks_stm_cs_82", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_82) <> vbString Then
        hks_stm_cs_82 = hks_stm_cs_82 / UnitVal_
    End If
End Function

'|fffd||2b1||fffd||fffd||fffd||5a7||fffd||fffd|,hks_stm_cs_1020
Function hks_stm_cs_1020(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1020 = WindFunc("hks_stm_cs_1020", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1020) <> vbString Then
        hks_stm_cs_1020 = hks_stm_cs_1020 / UnitVal_
    End If
End Function

'|56e||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1022
Function hks_stm_cs_1022(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1022 = WindFunc("hks_stm_cs_1022", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1022) <> vbString Then
        hks_stm_cs_1022 = hks_stm_cs_1022 / UnitVal_
    End If
End Function

'|4ea||fffd||fffd||fffd||2b1||fffd||fffd||4daf|,hks_stm_cs_1026
Function hks_stm_cs_1026(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1026 = WindFunc("hks_stm_cs_1026", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1026) <> vbString Then
        hks_stm_cs_1026 = hks_stm_cs_1026 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||336||fffd||fffd||2b2||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|,hks_stm_cs_1028
Function hks_stm_cs_1028(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1028 = WindFunc("hks_stm_cs_1028", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1028) <> vbString Then
        hks_stm_cs_1028 = hks_stm_cs_1028 / UnitVal_
    End If
End Function

'|376||fffd||2bc||fffd||fffd||fffd|,hks_stm_cs_1030
Function hks_stm_cs_1030(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1030 = WindFunc("hks_stm_cs_1030", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1030) <> vbString Then
        hks_stm_cs_1030 = hks_stm_cs_1030 / UnitVal_
    End If
End Function

'|fffd||271||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1032
Function hks_stm_cs_1032(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1032 = WindFunc("hks_stm_cs_1032", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1032) <> vbString Then
        hks_stm_cs_1032 = hks_stm_cs_1032 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||139||fffd||fffd||fffd||fffd||3fc||fffd|,hks_stm_cs_1034
Function hks_stm_cs_1034(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1034 = WindFunc("hks_stm_cs_1034", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1034) <> vbString Then
        hks_stm_cs_1034 = hks_stm_cs_1034 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b1||4daf||4f0||fffd||fffd|,hks_stm_cs_78
Function hks_stm_cs_78(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_78 = WindFunc("hks_stm_cs_78", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_78) <> vbString Then
        hks_stm_cs_78 = hks_stm_cs_78 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_39
Function hks_stm_cs_39(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_39 = WindFunc("hks_stm_cs_39", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_39) <> vbString Then
        hks_stm_cs_39 = hks_stm_cs_39 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_77
Function hks_stm_cs_77(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_77 = WindFunc("hks_stm_cs_77", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_77) <> vbString Then
        hks_stm_cs_77 = hks_stm_cs_77 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd|,hks_stm_cs_84
Function hks_stm_cs_84(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_84 = WindFunc("hks_stm_cs_84", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_84) <> vbString Then
        hks_stm_cs_84 = hks_stm_cs_84 / UnitVal_
    End If
End Function

'|fffd||6fe||fffd||fffd||fffd||32f||fffd||fffd|,hks_stm_cs_1019
Function hks_stm_cs_1019(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1019 = WindFunc("hks_stm_cs_1019", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1019) <> vbString Then
        hks_stm_cs_1019 = hks_stm_cs_1019 / UnitVal_
    End If
End Function

'|56e||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1021
Function hks_stm_cs_1021(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1021 = WindFunc("hks_stm_cs_1021", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1021) <> vbString Then
        hks_stm_cs_1021 = hks_stm_cs_1021 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1025
Function hks_stm_cs_1025(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1025 = WindFunc("hks_stm_cs_1025", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1025) <> vbString Then
        hks_stm_cs_1025 = hks_stm_cs_1025 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd|,hks_stm_cs_1027
Function hks_stm_cs_1027(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1027 = WindFunc("hks_stm_cs_1027", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1027) <> vbString Then
        hks_stm_cs_1027 = hks_stm_cs_1027 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1029
Function hks_stm_cs_1029(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1029 = WindFunc("hks_stm_cs_1029", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1029) <> vbString Then
        hks_stm_cs_1029 = hks_stm_cs_1029 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1031
Function hks_stm_cs_1031(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1031 = WindFunc("hks_stm_cs_1031", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1031) <> vbString Then
        hks_stm_cs_1031 = hks_stm_cs_1031 / UnitVal_
    End If
End Function

'|fffd||271||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1033
Function hks_stm_cs_1033(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1033 = WindFunc("hks_stm_cs_1033", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1033) <> vbString Then
        hks_stm_cs_1033 = hks_stm_cs_1033 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1035
Function hks_stm_cs_1035(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1035 = WindFunc("hks_stm_cs_1035", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1035) <> vbString Then
        hks_stm_cs_1035 = hks_stm_cs_1035 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_stm_cs_1036
Function hks_stm_cs_1036(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_stm_cs_1036 = WindFunc("hks_stm_cs_1036", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_stm_cs_1036) <> vbString Then
        hks_stm_cs_1036 = hks_stm_cs_1036 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6fa||fffd||fffd||fffd||fffd||fffd|,hks_qstm_is_1078
Function hks_qstm_is_1078(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional CURTYPE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  hks_qstm_is_1078 = WindFunc("hks_qstm_is_1078", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_), Null, Null)
    If VarType(hks_qstm_is_1078) <> vbString Then
        hks_qstm_is_1078 = hks_qstm_is_1078 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|,s_stmnote_bank_31
Function s_stmnote_bank_31(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_31 = WindFunc("s_stmnote_bank_31", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||3bc||fffd|-|fffd||fffd||fffd|,s_stmnote_bank_37
Function s_stmnote_bank_37(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_37 = WindFunc("s_stmnote_bank_37", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||3bc||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7||5fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_38
'Function s_stmnote_bank_38(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
'  s_stmnote_bank_38 = WindFunc("s_stmnote_bank_38", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
'    If VarType(s_stmnote_bank_38) <> vbString Then
'        s_stmnote_bank_38 = s_stmnote_bank_38 / UnitVal_
'    End If
'End Function

'|fffd||fffd||3e2||fffd||fffd||56e|,s_stmnote_bank_38
Function s_stmnote_bank_38(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_38 = WindFunc("s_stmnote_bank_38", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_38) <> vbString Then
        s_stmnote_bank_38 = s_stmnote_bank_38 / UnitVal_
    End If
End Function

'|fffd||fffd||5e2|-|fffd||fffd||fffd|,s_stmnote_bank_34
'Function s_stmnote_bank_34(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
'  s_stmnote_bank_34 = WindFunc("s_stmnote_bank_34", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
'    If VarType(s_stmnote_bank_34) <> vbString Then
'        s_stmnote_bank_34 = s_stmnote_bank_34 / UnitVal_
'    End If
'End Function

'|fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd|,s_stmnote_bank_34
Function s_stmnote_bank_34(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_34 = WindFunc("s_stmnote_bank_34", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_34) <> vbString Then
        s_stmnote_bank_34 = s_stmnote_bank_34 / UnitVal_
    End If
End Function

'|fffd||fffd||5e2|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7||5fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_35
'Function s_stmnote_bank_35(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
'  s_stmnote_bank_35 = WindFunc("s_stmnote_bank_35", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
'    If VarType(s_stmnote_bank_35) <> vbString Then
'        s_stmnote_bank_35 = s_stmnote_bank_35 / UnitVal_
'    End If
'End Function

'|fffd||fffd||3e2||fffd||2b2||fffd|,s_stmnote_bank_35
Function s_stmnote_bank_35(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_35 = WindFunc("s_stmnote_bank_35", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_35) <> vbString Then
        s_stmnote_bank_35 = s_stmnote_bank_35 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd|,s_stmnote_bank_40
Function s_stmnote_bank_40(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  s_stmnote_bank_40 = WindFunc("s_stmnote_bank_40", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||2a7|-|fffd||fffd||fffd|,s_stmnote_bank_43
'Function s_stmnote_bank_43(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
'  s_stmnote_bank_43 = WindFunc("s_stmnote_bank_43", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
'    If VarType(s_stmnote_bank_43) <> vbString Then
'        s_stmnote_bank_43 = s_stmnote_bank_43 / UnitVal_
'    End If
'End Function

'|fffd||1fc||fffd||3e2||fffd||fffd||56e|,s_stmnote_bank_43
Function s_stmnote_bank_43(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_43 = WindFunc("s_stmnote_bank_43", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_43) <> vbString Then
        s_stmnote_bank_43 = s_stmnote_bank_43 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7||5fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_41
'Function s_stmnote_bank_41(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
'  s_stmnote_bank_41 = WindFunc("s_stmnote_bank_41", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
'    If VarType(s_stmnote_bank_41) <> vbString Then
'        s_stmnote_bank_41 = s_stmnote_bank_41 / UnitVal_
'    End If
'End Function

'|fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|,s_stmnote_bank_41
Function s_stmnote_bank_41(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_41 = WindFunc("s_stmnote_bank_41", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_41) <> vbString Then
        s_stmnote_bank_41 = s_stmnote_bank_41 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||2f0||fffd||fffd|,s_stmnote_txp
Function s_stmnote_txp(WINDCODE_ As Variant, ITEMSCODE_ As Integer, Optional REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
  s_stmnote_txp = WindFunc("s_stmnote_txp", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), ITEMSCODE_, GetValidDate(REPORTDATE_), TYPE_, Null, Null)
    If VarType(s_stmnote_txp) <> vbString Then
        s_stmnote_txp = s_stmnote_txp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,S_OI_LOI
Function S_OI_LOI(WINDCODE_ As Variant, Optional TRADEDATE_ As Variant, Optional TopN_ As Integer = 1) As Variant
  S_OI_LOI = WindFunc("S_OI_LOI", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TopN_)
End Function

Function IsDigit(char As String)
    If (Asc(char) > Asc(0) - 1 And Asc(char) < Asc(9) + 1) Then
        IsDigit = True
    Else
        IsDigit = False
    End If
End Function
    
Function IsLetter(char As String)
    If (Asc(char) > 64 And Asc(char) < 91) Or (Asc(char) > 96 And Asc(char) < 123) Then
        IsLetter = True
    Else
        IsLetter = False
    End If
End Function
    
Function CheckValidPos(pos As String)
    Dim n As Integer
    Dim rightStr As String, leftStr As String, char As String
    Trim (pos)
    n = Len(pos)
    
    For i = 1 To n
        If (Mid(pos, i, 1) = "$") Then
            rightStr = Mid(pos, i + 1, n - i)
            leftStr = Mid(pos, 1, i - 1)
            pos = leftStr + rightStr
            i = i - 1
        End If
    Next
            
    Dim flag As String
    n = Len(pos)
    For i = 1 To n
        flag = flag + "3"
    Next
   
    For i = 1 To n
        char = Mid(pos, i, 1)
        rightStr = Mid(flag, i + 1, n - i)
        leftStr = Mid(flag, 1, i - 1)
                
                
        If (IsLetter(char)) Then
            flag = leftStr + "1" + rightStr
        ElseIf (IsDigit(char)) Then
            flag = leftStr + "0" + rightStr
        Else
            CheckValidPos = False
            Exit Function
        End If
    Next
            
    Dim j As Integer
    j = InStr(1, flag, "0")
    If j < 1 Then
        CheckValidPos = False
        Exit Function
    End If
    For i = 1 To j - 1
        char = Mid(flag, i, 1)
        If char <> "1" Then
            CheckValidPos = False
            Exit Function
        End If
    Next
            
    For i = j To n - k
        char = Mid(flag, i, 1)
        If char <> 0 Then
            CheckValidPos = False
            Exit Function
        End If
    Next
            
    CheckValidPos = True
         
End Function
        
        
Function IsRangeParam(str As String)
    Dim n As Integer, index As Integer
        
    Trim (str)
    n = Len(str)
    index = InStr(1, str, ":")
    If (index < 3 And index > 0) Or index = n Then
        IsRangeParam = False
        Exit Function
    End If
        
    If index = 0 Then
        IsRangeParam = CheckValidPos(str)
    Else
        Dim str1 As String, str2 As String
        str1 = Mid(str, 1, index - 1)
        str2 = Mid(str, index + 1, n - index)
        IsRangeParam = CheckValidPos(str1) And CheckValidPos(str2)
            
    End If
End Function

Function GetNameByCitation(str As String)
    Dim name As String
    If IsRangeParam(str) Then
        myValue = Range(str)
        myType = TypeName(myValue)
        If myType = "String" Then
            name = myValue
        ElseIf myType = "Variant()" Then
            Dim i As Integer
            
            For i = LBound(myValue, 2) To UBound(myValue, 2)
                If i <> UBound(myValue, 2) Then
                    name = name + myValue(1, i) + ","
                Else
                    name = name + myValue(1, i)
                End If
            Next
           
        End If
        
        GetNameByCitation = name
    Else
        GetNameByCitation = str
    End If

End Function

Function GetNameByRow(str As String)
    Dim name As String
    If IsRangeParam(str) Then
        myValue = Range(str)
        myType = TypeName(myValue)
        If myType = "String" Then
            name = myValue
        ElseIf myType = "Variant()" Then
            Dim i As Integer
            
            For i = LBound(myValue, 1) To UBound(myValue, 1)
                If i <> UBound(myValue, 1) Then
                    name = name + myValue(i, 1) + ","
                Else
                    name = name + myValue(i, 1)
                End If
            Next
           
        End If
        
        GetNameByRow = name
    Else
        GetNameByRow = str
    End If

End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd||fffd||5b8||fffd||fffd|

'|4e6||fffd||fffd||fffd||fffd||3e2|(|fffd||fffd||5a4||5b8||fffd||fffd|),b_anal_accrint_csi
Function b_anal_accrint_csi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_accrint_csi = WindFunc("b_anal_accrint_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|4e6||fffd||fffd||fffd||fffd||3e2|(|fffd||3fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_accrint_shc
Function b_anal_accrint_shc(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_accrint_shc = WindFunc("b_anal_accrint_shc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||379||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|),b_anal_cnvxty_csi
Function b_anal_cnvxty_csi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_cnvxty_csi = WindFunc("b_anal_cnvxty_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||379||fffd||fffd|(|fffd||3fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_cnvxty_shc
Function b_anal_cnvxty_shc(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_cnvxty_shc = WindFunc("b_anal_cnvxty_shc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|5b8||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd|,b_anal_dailycf
Function b_anal_dailycf(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_dailycf = WindFunc("b_anal_dailycf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||5b5||fffd||fffd||534|,b_anal_defaultsource
Function b_anal_defaultsource(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_defaultsource = WindFunc("b_anal_defaultsource", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||22b||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|),b_anal_dirty_csi
Function b_anal_dirty_csi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_dirty_csi = WindFunc("b_anal_dirty_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||22b||fffd||fffd|(|fffd||3fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_dirty_shc
Function b_anal_dirty_shc(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_dirty_shc = WindFunc("b_anal_dirty_shc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|),b_anal_modidura_csi
Function b_anal_modidura_csi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_modidura_csi = WindFunc("b_anal_modidura_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_modidura_shc
Function b_anal_modidura_shc(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_modidura_shc = WindFunc("b_anal_modidura_shc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|),b_anal_net_csi
Function b_anal_net_csi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_net_csi = WindFunc("b_anal_net_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd|(|fffd||3fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_net_shc
Function b_anal_net_shc(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_net_shc = WindFunc("b_anal_net_shc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||4bb||fffd||fffd||228||fffd||fffd|,b_anal_nxoptiondate
Function b_anal_nxoptiondate(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As String) As Variant
  b_anal_nxoptiondate = WindFunc("b_anal_nxoptiondate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||6fb||fffd||fffd||fffd||fffd||5b5|(|fffd||3fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_vobp_shc
Function b_anal_vobp_shc(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_vobp_shc = WindFunc("b_anal_vobp_shc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|),b_anal_yield_csi
Function b_anal_yield_csi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_yield_csi = WindFunc("b_anal_yield_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_yield_shc
Function b_anal_yield_shc(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_anal_yield_shc = WindFunc("b_anal_yield_shc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|5b8||fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||3e2|,b_calc_accrint
Function b_calc_accrint(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_calc_accrint = WindFunc("b_calc_accrint", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||33c||fffd|,b_dq_originclose
Function b_dq_originclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 2) As Variant
  b_dq_originclose = WindFunc("b_dq_originclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||fffd|,b_info_clauseitem
Function b_info_clauseitem(WINDCODE_ As Variant, Optional TYPE_ As String) As Variant
  b_info_clauseitem = WindFunc("b_info_clauseitem", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), TYPE_)
End Function

'|fffd||fffd||228||56e||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_prepaymentdate
Function b_info_prepaymentdate(WINDCODE_ As Variant, Optional Serial_ As String) As Variant
  b_info_prepaymentdate = WindFunc("b_info_prepaymentdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Serial_)
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||57d||fffd||fffd||fffd||fffd|),b_nq_close
Function b_nq_close(WINDCODE_ As Variant, Optional N_ As Integer, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_nq_close = WindFunc("b_nq_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), N_, DEALDATE_, TYPE_)
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||33c||fffd|(|56e||22f|),b_nq_originclose
Function b_nq_originclose(WINDCODE_ As Variant, Optional N_ As Integer, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  b_nq_originclose = WindFunc("b_nq_originclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), N_, DEALDATE_, TYPE_)
End Function

'|53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_agreedannuyield
Function f_info_agreedannuyield(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_info_agreedannuyield = WindFunc("f_info_agreedannuyield", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_))
End Function

'|fffd||433||fffd||579||fffd||fffd|,f_info_marketoutlook
Function f_info_marketoutlook(WINDCODE_ As Variant, Optional DEALDATE_ As Integer, Optional Year_ As Integer = 1) As Variant
  f_info_marketoutlook = WindFunc("f_info_marketoutlook", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), DEALDATE_, Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_cptonav
Function f_prt_cptonav(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_prt_cptonav = WindFunc("f_prt_cptonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_mtntonav
Function f_prt_mtntonav(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  f_prt_mtntonav = WindFunc("f_prt_mtntonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DEALDATE_))
End Function

'|1e3||377||fffd||fffd||fffd||fffd||fffd||fffd|,b_agency_underwriter
Function b_agency_underwriter(WINDCODE_ As Variant) As Variant
  b_agency_underwriter = WindFunc("b_agency_underwriter", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||2f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_agency_bookkeeper
Function b_agency_bookkeeper(WINDCODE_ As Variant) As Variant
  b_agency_bookkeeper = WindFunc("b_agency_bookkeeper", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|56e||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_issuerupdated
Function b_info_issuerupdated(WINDCODE_ As Variant) As Variant
  b_info_issuerupdated = WindFunc("b_info_issuerupdated", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||2f5||fffd||fffd|,b_info_coupontxt
Function b_info_coupontxt(WINDCODE_ As Variant) As Variant
  b_info_coupontxt = WindFunc("b_info_coupontxt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||3e2||fffd||fffd||2f5||fffd||fffd|,b_info_coupondatetxt
Function b_info_coupondatetxt(WINDCODE_ As Variant) As Variant
  b_info_coupondatetxt = WindFunc("b_info_coupondatetxt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,b_info_clausetxt
Function b_info_clausetxt(WINDCODE_ As Variant) As Variant
  b_info_clausetxt = WindFunc("b_info_clausetxt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||1f7||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd|,b_info_multimktornot
Function b_info_multimktornot(WINDCODE_ As Variant) As Variant
  b_info_multimktornot = WindFunc("b_info_multimktornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||4e6||52d||56e||22f|,b_info_additionalto
Function b_info_additionalto(WINDCODE_ As Variant) As Variant
  b_info_additionalto = WindFunc("b_info_additionalto", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||1f7||fffd||fffd||fffd||2a7||fffd||fffd|,b_info_issueok
Function b_info_issueok(WINDCODE_ As Variant) As Variant
  b_info_issueok = WindFunc("b_info_issueok", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_latestratingofguarantor
Function b_info_latestratingofguarantor(WINDCODE_ As Variant) As Variant
  b_info_latestratingofguarantor = WindFunc("b_info_latestratingofguarantor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||1f7||fffd||fffd||376||56e|,b_info_municipalbond
Function b_info_municipalbond(WINDCODE_ As Variant) As Variant
  b_info_municipalbond = WindFunc("b_info_municipalbond", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5f4||fffd||fffd||fffd|,b_crm_issuercode
Function b_crm_issuercode(WINDCODE_ As Variant) As Variant
  b_crm_issuercode = WindFunc("b_crm_issuercode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||2b5||fffd||5f7b||fffd||5f4||fffd||fffd||fffd|,b_crm_subjectcode
Function b_crm_subjectcode(WINDCODE_ As Variant) As Variant
  b_crm_subjectcode = WindFunc("b_crm_subjectcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||2b7||fffd||fffd||fffd||f5||23c||fffd|,b_rate_issuer
Function b_rate_issuer(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  b_rate_issuer = WindFunc("b_rate_issuer", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,b_anal_lastdate_cnbd
Function b_anal_lastdate_cnbd(WINDCODE_ As Variant) As Variant
  b_anal_lastdate_cnbd = WindFunc("b_anal_lastdate_cnbd", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5a4||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,b_anal_lastdate_csi
Function b_anal_lastdate_csi(WINDCODE_ As Variant) As Variant
  b_anal_lastdate_csi = WindFunc("b_anal_lastdate_csi", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,b_anal_lastdate_shc
Function b_anal_lastdate_shc(WINDCODE_ As Variant) As Variant
  b_anal_lastdate_shc = WindFunc("b_anal_lastdate_shc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd|,b_issuer_issuershortened
Function b_issuer_issuershortened(WINDCODE_ As Variant) As Variant
  b_issuer_issuershortened = WindFunc("b_issuer_issuershortened", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||43c||fffd||fffd||fffd||fffd||fffd|,b_info_mktpricetype
Function b_info_mktpricetype(WINDCODE_ As Variant) As Variant
  b_info_mktpricetype = WindFunc("b_info_mktpricetype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|1b7||fffd||5bc||fffd||fffd|,b_info_repo_briefing
Function b_info_repo_briefing(WINDCODE_ As Variant) As Variant
  b_info_repo_briefing = WindFunc("b_info_repo_briefing", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||434|),b_info_clauseabbr
Function b_info_clauseabbr(WINDCODE_ As Variant) As Variant
  b_info_clauseabbr = WindFunc("b_info_clauseabbr", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22b||fffd||fffd|,cb_clause_reset_item
Function cb_clause_reset_item(WINDCODE_ As Variant) As Variant
  cb_clause_reset_item = WindFunc("cb_clause_reset_item", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"))
End Function

'|fffd||675||fffd||fffd||fffd||fffd||fffd|,b_agency_reguarantor
Function b_agency_reguarantor(WINDCODE_ As Variant) As Variant
  b_agency_reguarantor = WindFunc("b_agency_reguarantor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd|,b_tbf_cvf
Function b_tbf_cvf(WINDCODE_ As Variant, Optional TYPE_ As String) As Variant
  b_tbf_cvf = WindFunc("b_tbf_cvf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), TYPE_)
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_investconception
Function f_info_investconception(WINDCODE_ As Variant) As Variant
  f_info_investconception = WindFunc("f_info_investconception", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd|,s_info_Nature
Function s_info_Nature(WINDCODE_ As Variant) As Variant
  s_info_Nature = WindFunc("s_info_Nature", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|13c||fffd||fffd||fffd||2bd||fffd||fffd||fffd||37e|,s_info_funduse
Function s_info_funduse(WINDCODE_ As Variant) As Variant
  s_info_funduse = WindFunc("s_info_funduse", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),w_info_ptmyear
Function w_info_ptmyear(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  w_info_ptmyear = WindFunc("w_info_ptmyear", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(DEALDATE_))
End Function

Function GetParaStrEx(param As Variant) As String
Dim i As Integer
Dim j As Integer
Dim str As String
Dim MyRange As Range
Dim TmpRange As Range

If TypeName(param) = "String" Then
  GetParaStrEx = param
End If

If TypeName(param) = "Range" Then
  Set MyRange = param
  For i = 1 To MyRange.Rows.Count
    For j = 1 To MyRange.Columns.Count
      Set TmpRange = MyRange.Cells(i, j)
      
      If IsNull(TmpRange.Value) Or IsEmpty(TmpRange.Value) Then
        str = str & TmpRange.Text & ","
      Else
        str = str & TmpRange.Value & ","
      End If
    Next j
  Next i
  str = Left(str, Len(str) - 1)
  GetParaStrEx = str
End If

End Function

'|fffd||43e||fffd||fffd||fffd|(PB),pb_O
Function pb_O(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  pb_O = WindFunc("pb_O", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF,|fffd||5bd||fffd||fffd||fffd||fffd||fffd|),pcf_ncf_O
Function pcf_ncf_O(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  pcf_ncf_O = WindFunc("pcf_ncf_O", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PCF,|fffd||fffd||4ea||fffd||5bd||fffd||fffd||fffd|),pcf_ocf_O
Function pcf_ocf_O(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  pcf_ocf_O = WindFunc("pcf_ocf_O", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||4ef||fffd||fffd|(PE),pe_O
Function pe_O(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  pe_O = WindFunc("pe_O", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(PS),ps_O
Function ps_O(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  ps_O = WindFunc("ps_O", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), TYPE_, Null, Null, Null)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,risk_avgreturn
Function risk_avgreturn(WINDCODE_ As Variant, Optional StartDate As Variant, Optional EndDate_ As Variant, Optional Period As Integer = 2, Optional TYPE_ As Integer = 1) As Variant
  risk_avgreturn = WindFunc("risk_avgreturn", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate), GetValidDate(EndDate_), Period, TYPE_, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,risk_stdev
Function risk_stdev(WINDCODE_ As Variant, Optional StartDate As Variant, Optional EndDate_ As Variant, Optional Period As Integer = 2, Optional TYPE_ As Integer = 1) As Variant
  risk_stdev = WindFunc("risk_stdev", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate), GetValidDate(EndDate_), Period, TYPE_, Null)
End Function

'|fffd||fffd|Beta
Function risk_beta(WINDCODE_ As Variant, Optional StartDate As Variant, Optional EndDate_ As Variant, Optional Period As Integer = 2, Optional TYPE_ As Integer = 1, Optional INDEX_ As String = "000001.SH") As Variant
  risk_beta = WindFunc("risk_beta", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate), GetValidDate(EndDate_), Period, TYPE_, INDEX_)
End Function

'|fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||4b5|),fund_stockvalue_industry
Function fund_stockvalue_industry(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 13) As Variant
  fund_stockvalue_industry = WindFunc("fund_stockvalue_industry", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,fund_stockvalue_industrytonav
Function fund_stockvalue_industrytonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 13) As Variant
  fund_stockvalue_industrytonav = WindFunc("fund_stockvalue_industrytonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,fund_stockvalue_industrytoasset
Function fund_stockvalue_industrytoasset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 13) As Variant
  fund_stockvalue_industrytoasset = WindFunc("fund_stockvalue_industrytoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_dq_change_settlement
Function s_dq_change_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_dq_change_settlement = WindFunc("s_dq_change_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_dq_change_settlement) <> vbString Then
        s_dq_change_settlement = s_dq_change_settlement / UnitVal_
    End If
End Function

'|fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_dq_pctchange_settlement
Function s_dq_pctchange_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_dq_pctchange_settlement = WindFunc("s_dq_pctchange_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||53c||fffd||b7||fffd||2f5||fffd||fffd|,fs_info_cdmonths
Function s_info_cdmonths(WINDCODE_ As Variant) As Variant
  s_info_cdmonths = WindFunc("s_info_cdmonths", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||53c||4e2||fffd||13c||fffd||fffd|,s_info_ceabb
Function s_info_ceabb(WINDCODE_ As Variant) As Variant
  s_info_ceabb = WindFunc("s_info_ceabb", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||53c||4e2||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_cename
Function s_info_cename(WINDCODE_ As Variant) As Variant
  s_info_cename = WindFunc("s_info_cename", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_changelt
Function s_info_changelt(WINDCODE_ As Variant) As Variant
  s_info_changelt = WindFunc("s_info_changelt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_ddate
Function s_info_ddate(WINDCODE_ As Variant) As Variant
  s_info_ddate = WindFunc("s_info_ddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||b7||fffd|,s_info_dlmonth
Function s_info_dlmonth(WINDCODE_ As Variant) As Variant
  s_info_dlmonth = WindFunc("s_info_dlmonth", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_exname
Function s_info_exname(WINDCODE_ As Variant) As Variant
  s_info_exname = WindFunc("s_info_exname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||2bc||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_ftdate
Function s_info_ftdate(WINDCODE_ As Variant) As Variant
  s_info_ftdate = WindFunc("s_info_ftdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5f1||fffd||5a4||fffd||fffd|,s_info_ftmargins
Function s_info_ftmargins(WINDCODE_ As Variant) As Variant
  s_info_ftmargins = WindFunc("s_info_ftmargins", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fdef8||fffd||fffd||fffd|,s_info_lddate
Function s_info_lddate(WINDCODE_ As Variant) As Variant
  s_info_lddate = WindFunc("s_info_lddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||1bb||fffd||5fc||fffd||fffd|,s_info_lprice
Function s_info_lprice(WINDCODE_ As Variant) As Variant
  s_info_lprice = WindFunc("s_info_lprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_ltdate
Function s_info_ltdate(WINDCODE_ As Variant) As Variant
  s_info_ltdate = WindFunc("s_info_ltdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,s_info_ltdated
Function s_info_ltdated(WINDCODE_ As Variant) As Variant
  s_info_ltdated = WindFunc("s_info_ltdated", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||5f1||fffd||5a4||fffd||fffd|,s_info_margin
Function s_info_margin(WINDCODE_ As Variant) As Variant
  s_info_margin = WindFunc("s_info_margin", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||421||fffd||4daf||fffd||fffd||3bb|,s_info_mfprice
Function s_info_mfprice(WINDCODE_ As Variant) As Variant
  s_info_mfprice = WindFunc("s_info_mfprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||6f5||fffd||3bb|,s_info_punit
Function s_info_punit(WINDCODE_ As Variant) As Variant
  s_info_punit = WindFunc("s_info_punit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||5fc||fffd||fffd||53c||fffd||fffd||fffd||fffd|,s_info_sccode
Function s_info_sccode(WINDCODE_ As Variant) As Variant
  s_info_sccode = WindFunc("s_info_sccode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||2f5||fffd||fffd|,s_info_thours
Function s_info_thours(WINDCODE_ As Variant) As Variant
  s_info_thours = WindFunc("s_info_thours", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||5f5||fffd||3bb|,s_info_tunit
Function s_info_tunit(WINDCODE_ As Variant) As Variant
  s_info_tunit = WindFunc("s_info_tunit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"))
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_mq_avgamount
Function s_mq_avgamount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_avgamount = WindFunc("s_mq_avgamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_mq_avgamount) <> vbString Then
        s_mq_avgamount = s_mq_avgamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,s_mq_avgaoi
Function s_mq_avgaoi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_avgaoi = WindFunc("s_mq_avgaoi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_mq_avgvolume
Function s_mq_avgvolume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_avgvolume = WindFunc("s_mq_avgvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_mq_change_settlement
Function s_mq_change_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_change_settlement = WindFunc("s_mq_change_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_mq_change_settlement) <> vbString Then
        s_mq_change_settlement = s_mq_change_settlement / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,s_mq_highsettle
Function s_mq_highsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_highsettle = WindFunc("s_mq_highsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_mq_highsettle) <> vbString Then
        s_mq_highsettle = s_mq_highsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mq_highswing_date
Function s_mq_highswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_highswing_date = WindFunc("s_mq_highswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,s_mq_lowsettle
Function s_mq_lowsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_lowsettle = WindFunc("s_mq_lowsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_mq_lowsettle) <> vbString Then
        s_mq_lowsettle = s_mq_lowsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,s_mq_lowswing_date
Function s_mq_lowswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_lowswing_date = WindFunc("s_mq_lowswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||b3||5b2||fffd||fffd||fffd|,s_mq_oi
Function s_mq_oi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_oi = WindFunc("s_mq_oi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||b3||5b2||5b1||4eef|,s_mq_oichange
Function s_mq_oichange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_oichange = WindFunc("s_mq_oichange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_mq_pctchange_settlement
Function s_mq_pctchange_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_mq_pctchange_settlement = WindFunc("s_mq_pctchange_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,s_mq_presettle
Function s_mq_presettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_presettle = WindFunc("s_mq_presettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_mq_presettle) <> vbString Then
        s_mq_presettle = s_mq_presettle / UnitVal_
    End If
End Function

'|fffd||bd||fffd||fffd||fffd||fffd|,s_mq_settle
Function s_mq_settle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_mq_settle = WindFunc("s_mq_settle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_mq_settle) <> vbString Then
        s_mq_settle = s_mq_settle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_oi_lname
Function s_oi_lname(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  s_oi_lname = WindFunc("s_oi_lname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_oi_sname
Function s_oi_sname(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  s_oi_sname = WindFunc("s_oi_sname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_oi_soi
Function s_oi_soi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  s_oi_soi = WindFunc("s_oi_soi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_oi_vname
Function s_oi_vname(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  s_oi_vname = WindFunc("s_oi_vname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||27d||fffd||fffd||fffd|,s_oi_volume
Function s_oi_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional COUNT_ As Integer = 1) As Variant
  s_oi_volume = WindFunc("s_oi_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), COUNT_)
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,s_pq_avgaoi
Function s_pq_avgaoi(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  s_pq_avgaoi = WindFunc("s_pq_avgaoi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_pq_change_settlement
Function s_pq_change_settlement(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_pq_change_settlement = WindFunc("s_pq_change_settlement", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(s_pq_change_settlement) <> vbString Then
        s_pq_change_settlement = s_pq_change_settlement / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,s_pq_highsettle
Function s_pq_highsettle(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_pq_highsettle = WindFunc("s_pq_highsettle", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(s_pq_highsettle) <> vbString Then
        s_pq_highsettle = s_pq_highsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,s_pq_highswing_date
Function s_pq_highswing_date(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  s_pq_highswing_date = WindFunc("s_pq_highswing_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,s_pq_lowsettle
Function s_pq_lowsettle(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_pq_lowsettle = WindFunc("s_pq_lowsettle", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(s_pq_lowsettle) <> vbString Then
        s_pq_lowsettle = s_pq_lowsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,s_pq_lowswing_date
Function s_pq_lowswing_date(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  s_pq_lowswing_date = WindFunc("s_pq_lowswing_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||5b2||fffd||fffd||fffd|,s_pq_oi
Function s_pq_oi(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  s_pq_oi = WindFunc("s_pq_oi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||5b2||5b1||4eef|,s_pq_oichange
Function s_pq_oichange(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  s_pq_oichange = WindFunc("s_pq_oichange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_pq_pctchange_settlement
Function s_pq_pctchange_settlement(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant) As Variant
  s_pq_pctchange_settlement = WindFunc("s_pq_pctchange_settlement", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,s_pq_presettle
Function s_pq_presettle(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_pq_presettle = WindFunc("s_pq_presettle", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(s_pq_presettle) <> vbString Then
        s_pq_presettle = s_pq_presettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_pq_settle
Function s_pq_settle(WINDCODE_ As Variant, BEGINDATE_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_pq_settle = WindFunc("s_pq_settle", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(BEGINDATE_), GetValidDate(EndDate_))
    If VarType(s_pq_settle) <> vbString Then
        s_pq_settle = s_pq_settle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||27d||fffd||fffd||fffd|,s_qq_amount
Function s_qq_amount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_amount = WindFunc("s_qq_amount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_amount) <> vbString Then
        s_qq_amount = s_qq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_qq_avgamount
Function s_qq_avgamount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_avgamount = WindFunc("s_qq_avgamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_avgamount) <> vbString Then
        s_qq_avgamount = s_qq_avgamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,s_qq_avgaoi
Function s_qq_avgaoi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_avgaoi = WindFunc("s_qq_avgaoi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|,s_qq_avgprice
Function s_qq_avgprice(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_avgprice = WindFunc("s_qq_avgprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_avgprice) <> vbString Then
        s_qq_avgprice = s_qq_avgprice / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_qq_avgvolume
Function s_qq_avgvolume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_avgvolume = WindFunc("s_qq_avgvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd|,s_qq_change
Function s_qq_change(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_change = WindFunc("s_qq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_change) <> vbString Then
        s_qq_change = s_qq_change / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_qq_change_settlement
Function s_qq_change_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_change_settlement = WindFunc("s_qq_change_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_change_settlement) <> vbString Then
        s_qq_change_settlement = s_qq_change_settlement / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,s_qq_close
Function s_qq_close(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_close = WindFunc("s_qq_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(s_qq_close) <> vbString Then
        s_qq_close = s_qq_close / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd|,s_qq_high
Function s_qq_high(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_high = WindFunc("s_qq_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(s_qq_high) <> vbString Then
        s_qq_high = s_qq_high / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fc||fffd||fffd||fffd|,s_qq_high_date
Function s_qq_high_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_high_date = WindFunc("s_qq_high_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,s_qq_highclose
Function s_qq_highclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_highclose = WindFunc("s_qq_highclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(s_qq_highclose) <> vbString Then
        s_qq_highclose = s_qq_highclose / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,s_qq_highclose_date
Function s_qq_highclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_highclose_date = WindFunc("s_qq_highclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,s_qq_highsettle
Function s_qq_highsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_highsettle = WindFunc("s_qq_highsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_highsettle) <> vbString Then
        s_qq_highsettle = s_qq_highsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qq_highswing_date
Function s_qq_highswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_highswing_date = WindFunc("s_qq_highswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37c||fffd|,s_qq_low
Function s_qq_low(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_low = WindFunc("s_qq_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(s_qq_low) <> vbString Then
        s_qq_low = s_qq_low / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37c||fffd||fffd||fffd|,s_qq_low_date
Function s_qq_low_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_low_date = WindFunc("s_qq_low_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd|,s_qq_lowclose
Function s_qq_lowclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_lowclose = WindFunc("s_qq_lowclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(s_qq_lowclose) <> vbString Then
        s_qq_lowclose = s_qq_lowclose / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,s_qq_lowclose_date
Function s_qq_lowclose_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_lowclose_date = WindFunc("s_qq_lowclose_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,s_qq_lowsettle
Function s_qq_lowsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_lowsettle = WindFunc("s_qq_lowsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_lowsettle) <> vbString Then
        s_qq_lowsettle = s_qq_lowsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,s_qq_lowswing_date
Function s_qq_lowswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_lowswing_date = WindFunc("s_qq_lowswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||5b2||fffd||fffd||fffd|,s_qq_oi
Function s_qq_oi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_oi = WindFunc("s_qq_oi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||5b2||5b1||4eef|,s_qq_oichange
Function s_qq_oichange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_oichange = WindFunc("s_qq_oichange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd|,s_qq_open
Function s_qq_open(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_open = WindFunc("s_qq_open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(s_qq_open) <> vbString Then
        s_qq_open = s_qq_open / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd|,s_qq_pctchange
Function s_qq_pctchange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_pctchange = WindFunc("s_qq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_qq_pctchange_settlement
Function s_qq_pctchange_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_pctchange_settlement = WindFunc("s_qq_pctchange_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||33c||fffd|,s_qq_preclose
Function s_qq_preclose(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_preclose = WindFunc("s_qq_preclose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_), 1)
    If VarType(s_qq_preclose) <> vbString Then
        s_qq_preclose = s_qq_preclose / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,s_qq_presettle
Function s_qq_presettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_presettle = WindFunc("s_qq_presettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_presettle) <> vbString Then
        s_qq_presettle = s_qq_presettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qq_settle
Function s_qq_settle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_qq_settle = WindFunc("s_qq_settle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_qq_settle) <> vbString Then
        s_qq_settle = s_qq_settle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd|,s_qq_swing
Function s_qq_swing(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_swing = WindFunc("s_qq_swing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||27d||fffd||fffd||fffd|,s_qq_volume
Function s_qq_volume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_qq_volume = WindFunc("s_qq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|5e2||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd|,s_st_stock
Function s_st_stock(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_st_stock = WindFunc("s_st_stock", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_wq_avgamount
Function s_wq_avgamount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_avgamount = WindFunc("s_wq_avgamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_wq_avgamount) <> vbString Then
        s_wq_avgamount = s_wq_avgamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,s_wq_avgaoi
Function s_wq_avgaoi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_avgaoi = WindFunc("s_wq_avgaoi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_wq_avgvolume
Function s_wq_avgvolume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_avgvolume = WindFunc("s_wq_avgvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_wq_change_settlement
Function s_wq_change_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_change_settlement = WindFunc("s_wq_change_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_wq_change_settlement) <> vbString Then
        s_wq_change_settlement = s_wq_change_settlement / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,s_wq_highsettle
Function s_wq_highsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_highsettle = WindFunc("s_wq_highsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_wq_highsettle) <> vbString Then
        s_wq_highsettle = s_wq_highsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,s_wq_highswing_date
Function s_wq_highswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_highswing_date = WindFunc("s_wq_highswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,s_wq_lowsettle
Function s_wq_lowsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_lowsettle = WindFunc("s_wq_lowsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_wq_lowsettle) <> vbString Then
        s_wq_lowsettle = s_wq_lowsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,s_wq_lowswing_date
Function s_wq_lowswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_lowswing_date = WindFunc("s_wq_lowswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||733||5b2||fffd||fffd||fffd|,s_wq_oi
Function s_wq_oi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_oi = WindFunc("s_wq_oi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||733||5b2||5b1||4eef|,s_wq_oichange
Function s_wq_oichange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_oichange = WindFunc("s_wq_oichange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_wq_pctchange_settlement
Function s_wq_pctchange_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_wq_pctchange_settlement = WindFunc("s_wq_pctchange_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'16.11.11 unit added
'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,s_wq_presettle
Function s_wq_presettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_presettle = WindFunc("s_wq_presettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_wq_presettle) <> vbString Then
        s_wq_presettle = s_wq_presettle / UnitVal_
    End If
End Function

'|fffd||73d||fffd||fffd||fffd||fffd|,s_wq_settle
Function s_wq_settle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_wq_settle = WindFunc("s_wq_settle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_wq_settle) <> vbString Then
        s_wq_settle = s_wq_settle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_yq_avgamount
Function s_yq_avgamount(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_avgamount = WindFunc("s_yq_avgamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_yq_avgamount) <> vbString Then
        s_yq_avgamount = s_yq_avgamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||5b2||fffd||fffd||fffd|,s_yq_avgaoi
Function s_yq_avgaoi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_avgaoi = WindFunc("s_yq_avgaoi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||57e||fffd||fffd||27d||fffd||fffd||fffd|,s_yq_avgvolume
Function s_yq_avgvolume(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_avgvolume = WindFunc("s_yq_avgvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_yq_change_settlement
Function s_yq_change_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_change_settlement = WindFunc("s_yq_change_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_yq_change_settlement) <> vbString Then
        s_yq_change_settlement = s_yq_change_settlement / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd|,s_yq_highsettle
Function s_yq_highsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_highsettle = WindFunc("s_yq_highsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_yq_highsettle) <> vbString Then
        s_yq_highsettle = s_yq_highsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||7fd||fffd||fffd||fffd||fffd||fffd||fffd|,s_yq_highswing_date
Function s_yq_highswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_highswing_date = WindFunc("s_yq_highswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd|,s_yq_lowsettle
Function s_yq_lowsettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_lowsettle = WindFunc("s_yq_lowsettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_yq_lowsettle) <> vbString Then
        s_yq_lowsettle = s_yq_lowsettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||37d||fffd||fffd||fffd||fffd||fffd||fffd|,s_yq_lowswing_date
Function s_yq_lowswing_date(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_lowswing_date = WindFunc("s_yq_lowswing_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||5b2||fffd||fffd||fffd|,s_yq_oi
Function s_yq_oi(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_oi = WindFunc("s_yq_oi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||5b2||5b1||4eef|,s_yq_oichange
Function s_yq_oichange(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_oichange = WindFunc("s_yq_oichange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||1f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6e3||fffd|,s_yq_pctchange_settlement
Function s_yq_pctchange_settlement(WINDCODE_ As Variant, Optional DEALDATE_ As Variant) As Variant
  s_yq_pctchange_settlement = WindFunc("s_yq_pctchange_settlement", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd|,s_yq_presettle
Function s_yq_presettle(WINDCODE_ As Variant, Optional DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  s_yq_presettle = WindFunc("s_yq_presettle", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "FS"), GetValidDate(DEALDATE_))
    If VarType(s_yq_presettle) <> vbString Then
        s_yq_presettle = s_yq_presettle / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_salefeeratio
Function f_info_salefeeratio(WINDCODE_ As Variant) As Variant
  f_info_salefeeratio = WindFunc("f_info_salefeeratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,trust_investfield
Function trust_investfield(WINDCODE_ As Variant) As Variant
  trust_investfield = WindFunc("trust_investfield", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||432||fffd||1b7||fffd||fffd||fffd|,trust_sourcetype
Function trust_sourcetype(WINDCODE_ As Variant) As Variant
  trust_sourcetype = WindFunc("trust_sourcetype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,advancecredit_desc
Function advancecredit_desc(WINDCODE_ As Variant) As Variant
  advancecredit_desc = WindFunc("advancecredit_desc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,anticipateyield_desc
Function anticipateyield_desc(WINDCODE_ As Variant) As Variant
  anticipateyield_desc = WindFunc("anticipateyield_desc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,trust_relatedfirm
Function trust_relatedfirm(WINDCODE_ As Variant) As Variant
  trust_relatedfirm = WindFunc("trust_relatedfirm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_24
Function s_stm07_is_24(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_24 = WindFunc("s_stm07_is_24", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_24) <> vbString Then
        s_stm07_is_24 = s_stm07_is_24 / UnitVal_
    End If
End Function

'|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_stm07_cs_121
Function s_stm07_cs_121(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_121 = WindFunc("s_stm07_cs_121", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_121) <> vbString Then
        s_stm07_cs_121 = s_stm07_cs_121 / UnitVal_
    End If
End Function

'|5e8||fffd||ed22||fffd||fffd|,s_stm07_bs_158
Function s_stm07_bs_158(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_158 = WindFunc("s_stm07_bs_158", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_158) <> vbString Then
        s_stm07_bs_158 = s_stm07_bs_158 / UnitVal_
    End If
End Function

'|fffd||5bc||fffd||fffd||776||fffd||57c||fffd||fffd|,fund_subshareproportion
Function fund_subshareproportion(WINDCODE_ As Variant) As Variant
  fund_subshareproportion = WindFunc("fund_subshareproportion", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|),b_calc_curve_shc
Function b_calc_curve_shc(Optional CURVECODE_ As String = "NULL", Optional DEALDATE_ As Variant, Optional DEADLINE_ As String = "NULL") As Variant
  b_calc_curve_shc = WindFunc("b_calc_curve_shc", 3, 1, CURVECODE_, GetValidDate(DEALDATE_, 0), DEADLINE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5a4|),b_calc_curve_csi
Function b_calc_curve_csi(Optional CURVECODE_ As String = "NULL", Optional DEALDATE_ As Variant, Optional DEADLINE_ As String = "NULL") As Variant
  b_calc_curve_csi = WindFunc("b_calc_curve_csi", 3, 1, CURVECODE_, GetValidDate(DEALDATE_, 0), DEADLINE_)
End Function

'|fffd||271||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,fa_NPtoCostExpense
Function fa_NPtoCostExpense(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_NPtoCostExpense = WindFunc("fa_NPtoCostExpense", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|/|4ea||4b5||fffd||fffd||fffd||fffd|,fa_impairtoOP
Function fa_impairtoOP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_impairtoOP = WindFunc("fa_impairtoOP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd|,fa_OPtoEBT
Function fa_OPtoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OPtoEBT = WindFunc("fa_OPtoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||4ea||fffd||fffd||5b8||fffd||fffd|,fa_OcftoOP
Function fa_OcftoOP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OcftoOP = WindFunc("fa_OcftoOP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd||376||fffd||2b1||fffd||fffd||fffd|,fa_OCFtoInvestStockDividend
Function fa_OCFtoInvestStockDividend(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFtoInvestStockDividend = WindFunc("fa_OCFtoInvestStockDividend", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|22b||fffd||fffd||fffd||2b2||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd|,fa_OCFtoAssets
Function fa_OCFtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFtoAssets = WindFunc("fa_OCFtoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f1||fffd||fffd||fffd|,fa_OCFtoDividend
Function fa_OCFtoDividend(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFtoDividend = WindFunc("fa_OCFtoDividend", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,fa_OCFtoCF
Function fa_OCFtoCF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFtoCF = WindFunc("fa_OCFtoCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|376||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,fa_ICFtoCF
Function fa_ICFtoCF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_ICFtoCF = WindFunc("fa_ICFtoCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,fa_FCFtoCF
Function fa_FCFtoCF(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_FCFtoCF = WindFunc("fa_FCFtoCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b1||fffd||fffd||336||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,fa_NCAtoEquity
Function fa_NCAtoEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_NCAtoEquity = WindFunc("fa_NCAtoEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||56e||fffd||fffd|,fa_LongDebttoLongCaptial
Function fa_LongDebttoLongCaptial(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_LongDebttoLongCaptial = WindFunc("fa_LongDebttoLongCaptial", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||7b3||fffd||524||fffd||fffd||fffd||2ff||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd|,fa_DeductedDebttoAssets
Function fa_DeductedDebttoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_DeductedDebttoAssets = WindFunc("fa_DeductedDebttoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||2ba||fffd||fffd||fffd|,fa_LongCapitaltoInvestment
Function fa_LongCapitaltoInvestment(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_LongCapitaltoInvestment = WindFunc("fa_LongCapitaltoInvestment", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||228||fffd||fffd||fffd||fffd||fffd|,fa_CurrentDebttoEquity
Function fa_CurrentDebttoEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_CurrentDebttoEquity = WindFunc("fa_CurrentDebttoEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||228||fffd||fffd||fffd||fffd||fffd|,fa_LongDebttoEquity
Function fa_LongDebttoEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_LongDebttoEquity = WindFunc("fa_LongDebttoEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||6b8||fffd||56e||57c||fffd||fffd|,fa_LongDebttoDebt
Function fa_LongDebttoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_LongDebttoDebt = WindFunc("fa_LongDebttoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||3be||fffd||5b5||56e||fffd||fffd||fffd||fffd|,fa_DebttoTangibleEquity
Function fa_DebttoTangibleEquity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_DebttoTangibleEquity = WindFunc("fa_DebttoTangibleEquity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd|,fa_CashtoCurrentDebt
Function fa_CashtoCurrentDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_CashtoCurrentDebt = WindFunc("fa_CashtoCurrentDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||fffd||56e||fffd||fffd||fffd|,fa_OCFtoQuickDebt
Function fa_OCFtoQuickDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFtoQuickDebt = WindFunc("fa_OCFtoQuickDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,fa_OCFtoLongDebt
Function fa_OCFtoLongDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFtoLongDebt = WindFunc("fa_OCFtoLongDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||3f1||fffd||fffd||fffd|,fa_OCFtoInterest
Function fa_OCFtoInterest(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFtoInterest = WindFunc("fa_OCFtoInterest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f3||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||131||fffd||fffd||fffd|,fa_OCFICFtoCurrentDebt
Function fa_OCFICFtoCurrentDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFICFtoCurrentDebt = WindFunc("fa_OCFICFtoCurrentDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||1f3||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||be3a||56e||fffd||736||fffd||131||fffd||fffd||fffd|,fa_OCFICFtoDebt
Function fa_OCFICFtoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OCFICFtoDebt = WindFunc("fa_OCFICFtoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||5ea||fffd||fffd|,fa_APTurn
Function fa_APTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_APTurn = WindFunc("fa_APTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||5ea||fffd||fffd||fffd||fffd|,fa_APTurnDays
Function fa_APTurnDays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_APTurnDays = WindFunc("fa_APTurnDays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,fa_NetTurnDays
Function fa_NetTurnDays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_NetTurnDays = WindFunc("fa_NetTurnDays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||fffd||fffd||fffd||2b1||fffd||fffd||fffd||5ea||fffd||fffd|,fa_OperateCaptialTurn
Function fa_OperateCaptialTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_OperateCaptialTurn = WindFunc("fa_OperateCaptialTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,fa_yoy_cash
Function fa_yoy_cash(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_yoy_cash = WindFunc("fa_yoy_cash", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||2b1||fffd||fffd||fffd||13f||fffd||fffd||123||3ac||fffd||fffd||fffd||fffd|,fa_Maintenance
Function fa_Maintenance(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_Maintenance = WindFunc("fa_Maintenance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||271||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,qfa_NPtoCostExpense
Function qfa_NPtoCostExpense(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  qfa_NPtoCostExpense = WindFunc("qfa_NPtoCostExpense", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|/|4ea||4b5||fffd||fffd||fffd||fffd|,qfa_impairtoOP
Function qfa_impairtoOP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  qfa_impairtoOP = WindFunc("qfa_impairtoOP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd|,qfa_OPtoEBT
Function qfa_OPtoEBT(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  qfa_OPtoEBT = WindFunc("qfa_OPtoEBT", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,qfa_OCFtoCF
Function qfa_OCFtoCF(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  qfa_OCFtoCF = WindFunc("qfa_OCFtoCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(qfa_OCFtoCF) <> vbString Then
        qfa_OCFtoCF = qfa_OCFtoCF / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|376||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,qfa_ICFtoCF
Function qfa_ICFtoCF(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  qfa_ICFtoCF = WindFunc("qfa_ICFtoCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(qfa_ICFtoCF) <> vbString Then
        qfa_ICFtoCF = qfa_ICFtoCF / UnitVal_
    End If
End Function

'|4ea||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,fa_WorkingcapitaltoAssets
Function fa_WorkingcapitaltoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_WorkingcapitaltoAssets = WindFunc("fa_WorkingcapitaltoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||68ef||fffd||fffd||fffd||2b2||fffd|,fa_RetainedearningstoAssets
Function fa_RetainedearningstoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_RetainedearningstoAssets = WindFunc("fa_RetainedearningstoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd|,fa_EBITtoAssets
Function fa_EBITtoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_EBITtoAssets = WindFunc("fa_EBITtoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|4ea||4b5||fffd||fffd||fffd||b8ef||fffd||fffd||fffd||2b2||fffd|,fa_RevenuetoAssets
Function fa_RevenuetoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_RevenuetoAssets = WindFunc("fa_RevenuetoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||56e||fffd||73c||fffd|,fa_EquitytoDebt
Function fa_EquitytoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_EquitytoDebt = WindFunc("fa_EquitytoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||276||fffd||228||fffd||fffd||3fc||1a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||73c||fffd|,fa_BookvaluetoDebt
Function fa_BookvaluetoDebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_BookvaluetoDebt = WindFunc("fa_BookvaluetoDebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,qfa_FCFtoCF
Function qfa_FCFtoCF(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  qfa_FCFtoCF = WindFunc("qfa_FCFtoCF", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(qfa_FCFtoCF) <> vbString Then
        qfa_FCFtoCF = qfa_FCFtoCF / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||33c||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Close
Function His_Close(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_Close = WindFunc("His_Close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||33c||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Open
Function His_Open(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_Open = WindFunc("His_Open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||fffd||7fc||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_High
Function His_High(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_High = WindFunc("His_High", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||fffd||37c||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Low
Function His_Low(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_Low = WindFunc("His_Low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Settle
Function His_Settle(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_Settle = WindFunc("His_Settle", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|1f0||fffd||fffd||fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_PreSettle
Function His_PreSettle(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_PreSettle = WindFunc("His_PreSettle", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_AvgPrice
Function His_AvgPrice(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_AvgPrice = WindFunc("His_AvgPrice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||1f5||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Change
Function His_Change(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_Change = WindFunc("His_Change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||1f5||fffd|(|fffd||fffd||fffd||fffd||fffd|)_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Change_Settlement
Function His_Change_Settlement(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_Change_Settlement = WindFunc("His_Change_Settlement", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_PctChange
Function His_PctChange(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_PctChange = WindFunc("His_PctChange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|)_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_PctChange_Settlement
Function His_PctChange_Settlement(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_PctChange_Settlement = WindFunc("His_PctChange_Settlement", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Swing
Function His_Swing(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer) As Variant
  His_Swing = WindFunc("His_Swing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
End Function

'|fffd||27d||fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Volume
Function His_Volume(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  His_Volume = WindFunc("His_Volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
    If VarType(His_Volume) <> vbString Then
        His_Volume = His_Volume / UnitVal_
    End If
End Function

'|fffd||5b2||fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Oi
Function His_Oi(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  His_Oi = WindFunc("His_Oi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
    If VarType(His_Oi) <> vbString Then
        His_Oi = His_Oi / UnitVal_
    End If
End Function

'|fffd||5b2||5b1||4eef|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_OiChange
Function His_OiChange(WINDCODE_ As Variant, DATE_ As Variant, Optional Cycle_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  His_OiChange = WindFunc("His_OiChange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), Cycle_, Null, Null, Null)
    If VarType(His_OiChange) <> vbString Then
        His_OiChange = His_OiChange / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,fa_yoy_FixedAssets
Function fa_yoy_FixedAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_yoy_FixedAssets = WindFunc("fa_yoy_FixedAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|,fa_Non_currentAssetsTurn
Function fa_Non_currentAssetsTurn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_Non_currentAssetsTurn = WindFunc("fa_Non_currentAssetsTurn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||631||fffd||fffd||2a3||fffd|ROP),fa_ROP
Function fa_ROP(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_ROP = WindFunc("fa_ROP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'Z|5b5|,fa_score
Function fa_score(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_score = WindFunc("fa_score", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
End Function

'|fffd||fffd||3e2||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd|,stmnote_finexp_13
Function stmnote_finexp_13(WINDCODE_ As Variant, DATE_ As Variant, Optional TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
  stmnote_finexp_13 = WindFunc("stmnote_finexp_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), TYPE_, Null, Null, Null)
    If VarType(stmnote_finexp_13) <> vbString Then
        stmnote_finexp_13 = stmnote_finexp_13 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||579||fffd||fffd||fffd||22b||fffd||fffd|,dirty_dayend_cnbd
Function dirty_dayend_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As Integer) As Variant
  dirty_dayend_cnbd = WindFunc("dirty_dayend_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||fffd||fffd||1f9||fffd||fffd||fffd||fffd||fffd|,Bookrunner
Function Bookrunner(WINDCODE_ As Variant) As Variant
  Bookrunner = WindFunc("Bookrunner", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||6ba||fffd|,b_info_issuenumber
Function b_info_issuenumber(WINDCODE_ As Variant) As Variant
  b_info_issuenumber = WindFunc("b_info_issuenumber", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_issueyear
Function b_info_issueyear(WINDCODE_ As Variant) As Variant
  b_info_issueyear = WindFunc("b_info_issueyear", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||1f7||fffd||fffd||fffd||2f0|,b_info_taxfree
Function b_info_taxfree(WINDCODE_ As Variant) As Variant
  b_info_taxfree = WindFunc("b_info_taxfree", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,IssuerRating
Function IssuerRating(WINDCODE_ As Variant) As Variant
  IssuerRating = WindFunc("IssuerRating", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,prt_stockvalue_industrytostock
Function prt_stockvalue_industrytostock(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  prt_stockvalue_industrytostock = WindFunc("prt_stockvalue_industrytostock", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TYPE_, Null, Null, Null)
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5|(|fffd||3fc||fffd|),fundnetasset_total
Function fundnetasset_total(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  fundnetasset_total = WindFunc("fundnetasset_total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), Null, Null, Null, Null)
    If VarType(fundnetasset_total) <> vbString Then
        fundnetasset_total = fundnetasset_total / UnitVal_
    End If
End Function

'|12c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7f4||fffd||fffd||fffd|,YCCode
Function YCCode(WINDCODE_ As Variant, Optional agency_ As Integer) As Variant
  YCCode = WindFunc("YCCode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), agency_)
End Function

'|fffd||fffd||4bb||fffd||fffd||3e2||fffd||57e||fffd||fffd||fffd|,kduration_NextCash
Function kduration_NextCash(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional YIELD_ As Integer) As Variant
  kduration_NextCash = WindFunc("kduration_NextCash", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), YIELD_)
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||3e2|,accrint_dayend_cnbd
Function accrint_dayend_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  accrint_dayend_cnbd = WindFunc("accrint_dayend_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,modidura_cnbd
Function modidura_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  modidura_cnbd = WindFunc("modidura_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd|,cnvxty_cnbd
Function cnvxty_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  cnvxty_cnbd = WindFunc("cnvxty_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||6fb||fffd||fffd||fffd||fffd||5b5|,vobp_cnbd
Function vobp_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  vobp_cnbd = WindFunc("vobp_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,sprdura_cnbd
Function sprdura_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  sprdura_cnbd = WindFunc("sprdura_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd|,sprcnxt_cnbd
Function sprcnxt_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  sprcnxt_cnbd = WindFunc("sprcnxt_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd|,idxdura_cnbd
Function idxdura_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  idxdura_cnbd = WindFunc("idxdura_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd|,idxcnxt_cnbd
Function idxcnxt_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  idxcnxt_cnbd = WindFunc("idxcnxt_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,spreadyield_cnbd
Function spreadyield_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CRED_ As Integer) As Variant
  spreadyield_cnbd = WindFunc("spreadyield_cnbd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), CRED_)
End Function

'EBITDA/|fffd||fffd||3e2||fffd||fffd||fffd||fffd|,fa_EBITDAtoInterest
Function fa_EBITDAtoInterest(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
  fa_EBITDAtoInterest = WindFunc("fa_EBITDAtoInterest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|(TTM),fa_roic_ttm
Function fa_roic_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Integer) As Variant
  fa_roic_ttm = WindFunc("fa_roic_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|1f0||4bb||fffd||fffd||fffd||fffd||fffd||fffd| S_trade_Date_Current,
Function S_trade_Date_Current(WINDCODE_ As Variant, Optional ADate As Variant) As Variant
  S_trade_Date_Current = WindFunc("S_trade_Date_Current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(ADate))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,trust_type
Function trust_type(WINDCODE_ As Variant) As Variant
  trust_type = WindFunc("trust_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||776||fffd|(|fffd||3fc||fffd|),fundshare_total
Function fundshare_total(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  fundshare_total = WindFunc("fundshare_total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|22b||fffd||fffd||56e||fffd||fffd|/EBITDA,s_fa_tltoebitda
Function s_fa_tltoebitda(WINDCODE_ As Variant, Optional REPORTDATE_ As Variant) As Variant
  s_fa_tltoebitda = WindFunc("s_fa_tltoebitda", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd||5b5|,share_freesharesMV
Function share_freesharesMV(WINDCODE_ As Variant, Optional TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  share_freesharesMV = WindFunc("share_freesharesMV", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate_New(TRADEDATE_))
    If VarType(share_freesharesMV) <> vbString Then
        share_freesharesMV = share_freesharesMV / UnitVal_
    End If
End Function

'DMI|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,DMI
Function DMI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional N1_ As Integer = 6, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  DMI = WindFunc("DMI", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, N1_, IO_, ADJ_, C_)
End Function

'EXPMA|5b8||fffd||fffd||1bd||fffd||fffd||fffd||fffd|,EXPMA
Function EXPMA(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  EXPMA = WindFunc("EXPMA", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'MA|fffd||fffd||fffd||1b6||fffd||1bd||fffd||fffd|,MA
Function MA(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 5, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MA = WindFunc("MA", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'MACD|5b8||fffd||fffd||1bd||fffd||fffd||fffd||fffd||36c||1bd||fffd||fffd|,MACD
Function MACD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional L_ As Integer = 26, Optional S_ As Integer = 12, Optional N_ As Integer = 9, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MACD = WindFunc("MACD", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), L_, S_, N_, IO_, ADJ_, C_)
End Function

'BBI|fffd||fffd||fffd||5b8||fffd||fffd|,BBI
Function BBI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 3, Optional N2_ As Integer = 6, Optional N3_ As Integer = 12, Optional N4_ As Integer = 24, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  BBI = WindFunc("BBI", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, N4_, ADJ_, C_)
End Function

'DDI|fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||5b8||fffd||fffd|,DDI
Function DDI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 13, Optional N2_ As Integer = 30, Optional N3_ As Integer = 5, Optional M_ As Integer = 10, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  DDI = WindFunc("DDI", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, M_, IO_, ADJ_, C_)
End Function

'DMA|1bd||fffd||fffd||fffd||7f2||fffd|,DMA
Function DMA(WINDCODE_ As Variant, Optional TD_ As Variant, Optional S_ As Integer = 10, Optional L_ As Integer = 50, Optional N_ As Integer = 10, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  DMA = WindFunc("DMA", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), S_, L_, N_, IO_, ADJ_, C_)
End Function

'MTM|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,MTM
Function MTM(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6, Optional N1_ As Integer = 6, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MTM = WindFunc("MTM", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, N1_, IO_, ADJ_, C_)
End Function

'PRICEOSC|fffd||6f8||fffd||fffd||fffd||5b8||fffd||fffd|,PRICEOSC
Function PRICEOSC(WINDCODE_ As Variant, Optional TD_ As Variant, Optional L_ As Integer = 26, Optional S_ As Integer = 12, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  PRICEOSC = WindFunc("PRICEOSC", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), L_, S_, ADJ_, C_)
End Function

'SAR|fffd||fffd||fffd||fffd||5ea||fffd||fffd|,SAR
Function SAR(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10, Optional SP_ As Integer = 2, Optional MP_ As Integer = 20, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  SAR = WindFunc("SAR", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, SP_, MP_, ADJ_, C_)
End Function

'TRIX|fffd||fffd||fffd||fffd||5b8||fffd||fffd||1bd||fffd||fffd||1bd||fffd||fffd|,TRIX
Function TRIX(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 12, Optional N2_ As Integer = 20, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  TRIX = WindFunc("TRIX", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, IO_, ADJ_, C_)
End Function

'BIAS|fffd||fffd||fffd||fffd||fffd||fffd|,BIAS
Function BIAS(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  BIAS = WindFunc("BIAS", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'CCI|2f3||fffd||fffd||5b8||fffd||fffd|,CCI
Function CCI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  CCI = WindFunc("CCI", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'DBCD|fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,DBCD
Function DBCD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 5, Optional N2_ As Integer = 16, Optional N3_ As Integer = 76, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  DBCD = WindFunc("DBCD", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, IO_, ADJ_, C_)
End Function

'DPO|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,DPO
Function DPO(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 20, Optional M_ As Integer = 6, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  DPO = WindFunc("DPO", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M_, IO_, ADJ_, C_)
End Function

'KDJ|fffd||fffd||fffd||5b8||fffd||fffd|,KDJ
Function KDJ(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional M1_ As Integer = 3, Optional M2_ As Integer = 3, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  KDJ = WindFunc("KDJ", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M1_, M2_, IO_, ADJ_, C_)
End Function

'LWR|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,LWR
Function LWR(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional M1_ As Integer = 3, Optional M2_ As Integer = 3, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  LWR = WindFunc("LWR", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, M1_, M2_, IO_, ADJ_, C_)
End Function

'ROC|fffd||4daf||fffd||fffd||fffd||fffd|,ROC
Function ROC(WINDCODE_ As Variant, Optional TD_ As Variant, Optional ID_ As Integer = 12, Optional N_ As Integer = 6, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  ROC = WindFunc("ROC", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), ID_, N_, IO_, ADJ_, C_)
End Function

'RSI|fffd||fffd||fffd||1ff||fffd||fffd||5b8||fffd||fffd|,RSI
Function RSI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  RSI = WindFunc("RSI", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'SI|fffd||6b6||fffd||5b8||fffd||fffd|,SI
Function SI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  SI = WindFunc("SI", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), ADJ_, C_)
End Function

'SLOWKD|fffd||fffd||fffd||fffd|KD,SLOWKD
Function SLOWKD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 9, Optional N2_ As Integer = 3, Optional N3_ As Integer = 3, Optional N4_ As Integer = 5, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  SLOWKD = WindFunc("SLOWKD", 9, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, N4_, IO_, ADJ_, C_)
End Function

'SRDM|fffd||fffd||fffd||fffd||fffd||676||231||fffd||fffd||fffd|,SRDM
Function SRDM(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 30, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  SRDM = WindFunc("SRDM", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'VROC|fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,VROC
Function VROC(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional C_ As Integer = 1) As Variant
  VROC = WindFunc("VROC", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, C_)
End Function

'VRSI|fffd||fffd||fffd||fffd||fffd||1ff||fffd||fffd|,VRSI
Function VRSI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6, Optional C_ As Integer = 1) As Variant
  VRSI = WindFunc("VRSI", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, C_)
End Function

'WR|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,WR
Function WR(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  WR = WindFunc("WR", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'ARBR|fffd||fffd||fffd||fffd||fffd||fffd||538||5b8||fffd||fffd|,ARBR
Function ARBR(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  ARBR = WindFunc("ARBR", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'CR|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,CR
Function CR(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  CR = WindFunc("CR", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'PSY|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,PSY
Function PSY(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 12, Optional N2_ As Integer = 6, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  PSY = WindFunc("PSY", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, IO_, ADJ_, C_)
End Function

'VR|fffd||27d||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,VR
Function VR(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional C_ As Integer = 1) As Variant
  VR = WindFunc("VR", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, C_)
End Function

'WAD|fffd||fffd||fffd||fffd||fffd||fffd||262||5b8||fffd||fffd|,WAD
Function WAD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 30, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  WAD = WindFunc("WAD", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'MFI|fffd||2bd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,MFI
Function MFI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MFI = WindFunc("MFI", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'OBV|fffd||fffd||fffd||fffd||fffd||fffd|,OBV
Function OBV(WINDCODE_ As Variant, Optional TD_ As Variant, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  OBV = WindFunc("OBV", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), IO_, ADJ_, C_)
End Function

'PVT|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,PVT
Function PVT(WINDCODE_ As Variant, Optional TD_ As Variant, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  PVT = WindFunc("PVT", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), ADJ_, C_)
End Function

'SOBV|fffd||fffd||fffd||fffd||fffd||fffd|,SOBV
Function SOBV(WINDCODE_ As Variant, Optional TD_ As Variant, Optional C_ As Integer = 1) As Variant
  SOBV = WindFunc("SOBV", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), C_)
End Function

'WVAD|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||262||fffd||fffd|,WVAD
Function WVAD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 24, Optional N2_ As Integer = 6, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  WVAD = WindFunc("WVAD", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, IO_, ADJ_, C_)
End Function

'BBIBOLL|fffd||fffd||572||fffd||fffd||fffd||fffd||fffd|,BBIBOLL
Function BBIBOLL(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10, Optional W_ As Integer = 3, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  BBIBOLL = WindFunc("BBIBOLL", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, W_, IO_, ADJ_, C_)
End Function

'BOLL|fffd||fffd||fffd||5b4||fffd|,BOLL
Function BOLL(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional W_ As Integer = 2, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  BOLL = WindFunc("BOLL", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, W_, IO_, ADJ_, C_)
End Function

'CDP|fffd||fffd||fffd||1b2||fffd||fffd||fffd|,CDP
Function CDP(WINDCODE_ As Variant, Optional TD_ As Variant, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  CDP = WindFunc("CDP", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), IO_, ADJ_, C_)
End Function

'ENV|5b8||fffd||fffd|,ENV
Function ENV(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  ENV = WindFunc("ENV", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'MIKE|fffd||fffd||fffd||5b8||fffd||fffd|,MIKE
Function MIKE(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MIKE = WindFunc("MIKE", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'|fffd||fffd||fffd||fffd|,VolumeRatio
Function VolumeRatio(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 5, Optional C_ As Integer = 1) As Variant
  VolumeRatio = WindFunc("VolumeRatio", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, C_)
End Function

'VMA|fffd||fffd||fffd||fffd||fffd||1b6||fffd||1bd||fffd||fffd|,VMA
Function VMA(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 5, Optional C_ As Integer = 1) As Variant
  VMA = WindFunc("VMA", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, C_)
End Function

'VMACD|fffd||fffd||5b8||fffd||fffd||1bd||fffd||fffd||fffd||fffd||36c||1bd||fffd||fffd|,VMACD
Function VMACD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional S_ As Integer = 12, Optional L_ As Integer = 26, Optional N_ As Integer = 9, Optional IO_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  VMACD = WindFunc("VMACD", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), S_, L_, N_, IO_, C_)
End Function

'VOSC|fffd||27d||fffd||fffd||fffd||fffd||fffd|,VOSC
Function VOSC(WINDCODE_ As Variant, Optional TD_ As Variant, Optional S_ As Integer = 12, Optional L_ As Integer = 26, Optional C_ As Integer = 1) As Variant
  VOSC = WindFunc("VOSC", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), S_, L_, C_)
End Function

'TAPI|fffd||fffd||228||5b8||fffd||fffd||fffd||27d||fffd||5b5|,TAPI
Function TAPI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 6, Optional IO_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  TAPI = WindFunc("TAPI", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, C_)
End Function

'VSTD|fffd||27d||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,VSTD
Function VSTD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10, Optional C_ As Integer = 1) As Variant
  VSTD = WindFunc("VSTD", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, C_)
End Function

'ADTM|fffd||fffd||32c||fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,ADTM
Function ADTM(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 23, Optional N2_ As Integer = 8, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  ADTM = WindFunc("ADTM", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, IO_, ADJ_, C_)
End Function

'MI|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,MI
Function MI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 12, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MI = WindFunc("MI", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'MICD|fffd||fffd||36c||fffd||fffd||edaf||fffd||fffd||5b8||fffd||fffd|,MICD
Function MICD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 3, Optional N2_ As Integer = 10, Optional N3_ As Integer = 20, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MICD = WindFunc("MICD", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, IO_, ADJ_, C_)
End Function

'RC|fffd||4eef||fffd||fffd||5b8||fffd||fffd|,RC
'Function RC(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 50, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
'  RC = WindFunc("RC", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
'End Function

'RCCD|fffd||fffd||36c||fffd||fffd||fffd||4eef||fffd||fffd||5b8||fffd||fffd|,RCCD
Function RCCD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 59, Optional N1_ As Integer = 21, Optional N2_ As Integer = 28, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  RCCD = WindFunc("RCCD", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, N1_, N2_, IO_, ADJ_, C_)
End Function

'SRMI MI|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,SRMI
Function SRMI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  SRMI = WindFunc("SRMI", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'|fffd||fffd||fffd||fffd||36c||fffd||fffd||5b8||fffd||fffd|,PWMI
Function PWMI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 7, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  PWMI = WindFunc("PWMI", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'|fffd||5f6||fffd||1ff||fffd||fffd||5b8||fffd||fffd|,PRDStrong
Function PRDStrong(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 20, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  PRDStrong = WindFunc("PRDStrong", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'|fffd||5f6||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd|,PRDWeak
Function PRDWeak(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 20, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  PRDWeak = WindFunc("PRDWeak", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'|fffd||fffd||fffd||fffd||5b8||fffd||fffd|,BOTTOM
Function BOTTOM(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N1_ As Integer = 125, Optional N2_ As Integer = 5, Optional N3_ As Integer = 20, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  BOTTOM = WindFunc("BOTTOM", 8, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N1_, N2_, N3_, IO_, ADJ_, C_)
End Function

'ATR|fffd||fffd||2b5||fffd||fffd||fffd||fffd|,ATR
Function ATR(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 14, Optional IO_ As Integer = 1, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  ATR = WindFunc("ATR", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, IO_, ADJ_, C_)
End Function

'MASS|f7||2ff||5b8||fffd||fffd|,MASS
Function MASS(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 9, Optional N2_ As Integer = 25, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  MASS = WindFunc("MASS", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, N2_, ADJ_, C_)
End Function

'STD|fffd||fffd||5fc||fffd||fffd|,STD
Function STD(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 26, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  STD = WindFunc("STD", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'VHF|fffd||77a||fffd||5b8||fffd||fffd|,VHF
Function VHF(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 28, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  VHF = WindFunc("VHF", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'VOLATI|fffd||fffd||fffd||cca8||fffd||fffd||fffd||fffd|,VOLATI
Function VOLATI(WINDCODE_ As Variant, Optional TD_ As Variant, Optional N_ As Integer = 10, Optional ADJ_ As Integer = 1, Optional C_ As Integer = 1) As Variant
  VOLATI = WindFunc("VOLATI", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TD_), N_, ADJ_, C_)
End Function

'|fffd||fffd||fffd||fffd||2fd||13c||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,holder_totalbyhf
Function holder_totalbyhf(WINDCODE_ As Variant, Optional RPTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  holder_totalbyhf = WindFunc("holder_totalbyhf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(RPTDATE_))
    If VarType(holder_totalbyhf) <> vbString Then
        holder_totalbyhf = holder_totalbyhf / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2fd||13c||fffd||5b9||271||fffd||fffd||fffd|,holder_pctbyhf
Function holder_pctbyhf(WINDCODE_ As Variant, Optional RPTDATE_ As Variant) As Variant
  holder_pctbyhf = WindFunc("holder_pctbyhf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(RPTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,lastradeday_s
Function lastradeday_s(WINDCODE_ As Variant, Optional RPTDATE_ As Variant) As Variant
  lastradeday_s = WindFunc("lastradeday_s", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(RPTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,mrg_long_amt_int
Function mrg_long_amt_int(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_long_amt_int = WindFunc("mrg_long_amt_int", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_long_amt_int) <> vbString Then
        mrg_long_amt_int = mrg_long_amt_int / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b3||fffd||fffd||fffd||fffd||fffd|,mrg_long_repay_int
Function mrg_long_repay_int(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_long_repay_int = WindFunc("mrg_long_repay_int", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_long_repay_int) <> vbString Then
        mrg_long_repay_int = mrg_long_repay_int / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,mrg_long_bal_int_avg
Function mrg_long_bal_int_avg(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_long_bal_int_avg = WindFunc("mrg_long_bal_int_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_long_bal_int_avg) <> vbString Then
        mrg_long_bal_int_avg = mrg_long_bal_int_avg / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|,mrg_short_vol_int
Function mrg_short_vol_int(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_short_vol_int = WindFunc("mrg_short_vol_int", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_short_vol_int) <> vbString Then
        mrg_short_vol_int = mrg_short_vol_int / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|,mrg_short_vol_repay_int
Function mrg_short_vol_repay_int(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_short_vol_repay_int = WindFunc("mrg_short_vol_repay_int", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_short_vol_repay_int) <> vbString Then
        mrg_short_vol_repay_int = mrg_short_vol_repay_int / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,mrg_short_vol_bal_int_avg
Function mrg_short_vol_bal_int_avg(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_short_vol_bal_int_avg = WindFunc("mrg_short_vol_bal_int_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_short_vol_bal_int_avg) <> vbString Then
        mrg_short_vol_bal_int_avg = mrg_short_vol_bal_int_avg / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd||fffd||5b5|,mrg_short_bal_int_avg
Function mrg_short_bal_int_avg(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_short_bal_int_avg = WindFunc("mrg_short_bal_int_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_short_bal_int_avg) <> vbString Then
        mrg_short_bal_int_avg = mrg_short_bal_int_avg / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd||fffd||5b5|,mrg_bal_int_avg
Function mrg_bal_int_avg(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  mrg_bal_int_avg = WindFunc("mrg_bal_int_avg", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_))
    If VarType(mrg_bal_int_avg) <> vbString Then
        mrg_bal_int_avg = mrg_bal_int_avg / UnitVal_
    End If
End Function

'|fffd||ae36||3e2||fffd||fffd|,PaymentDate
Function PaymentDate(WINDCODE_ As Variant, Optional N_ As Integer) As Variant
  PaymentDate = WindFunc("PaymentDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), N_, Null, Null, Null, Null)
End Function

'|fffd||fffd||3bb||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,fund_navcur
Function fund_navcur(WINDCODE_ As Variant) As Variant
  fund_navcur = WindFunc("fund_navcur", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Null, Null, Null, Null, Null)
End Function

'|fffd||5bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_smftype
Function f_info_smftype(WINDCODE_ As Variant) As Variant
  f_info_smftype = WindFunc("f_info_smftype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||5bc||fffd||fffd||fffd||fffd||fffd||138||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_smfcode
Function f_info_smfcode(WINDCODE_ As Variant) As Variant
  f_info_smfcode = WindFunc("f_info_smfcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||5bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||23c||fffd||fffd||fffd||fffd||fffd|,f_info_smfacode
Function f_info_smfacode(WINDCODE_ As Variant) As Variant
  f_info_smfacode = WindFunc("f_info_smfacode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||5bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_smfbcode
Function f_info_smfbcode(WINDCODE_ As Variant) As Variant
  f_info_smfbcode = WindFunc("f_info_smfbcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||5b1||fffd||fffd||fffd|,f_info_splitratio
Function f_info_splitratio(WINDCODE_ As Variant) As Variant
  f_info_splitratio = WindFunc("f_info_splitratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||2bc||fffd||738||fffd|,f_info_initiallever
Function f_info_initiallever(WINDCODE_ As Variant) As Variant
  f_info_initiallever = WindFunc("f_info_initiallever", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||2bd|,f_info_aayeildinfo
Function f_info_aayeildinfo(WINDCODE_ As Variant) As Variant
  f_info_aayeildinfo = WindFunc("f_info_aayeildinfo", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||5ea||fffd||fffd|,f_info_pairconversion
Function f_info_pairconversion(WINDCODE_ As Variant) As Variant
  f_info_pairconversion = WindFunc("f_info_pairconversion", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_discountperiod
Function f_info_discountperiod(WINDCODE_ As Variant) As Variant
  f_info_discountperiod = WindFunc("f_info_discountperiod", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_discountmethod
Function f_info_discountmethod(WINDCODE_ As Variant) As Variant
  f_info_discountmethod = WindFunc("f_info_discountmethod", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||3f4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_updiscount
Function f_info_updiscount(WINDCODE_ As Variant) As Variant
  f_info_updiscount = WindFunc("f_info_updiscount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||b4||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_downdiscount
Function f_info_downdiscount(WINDCODE_ As Variant) As Variant
  f_info_downdiscount = WindFunc("f_info_downdiscount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||5bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4dfd||2bd|,f_anal_smfearning
Function f_anal_smfearning(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_smfearning = WindFunc("f_anal_smfearning", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_anal_tdiscountratio
Function f_anal_tdiscountratio(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_tdiscountratio = WindFunc("f_anal_tdiscountratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||fffd||6f1||fffd||fffd||fffd||1ab||fffd||fffd||3f5||fffd||fffd|,f_anal_disratiodevi
Function f_anal_disratiodevi(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant) As Variant
  f_anal_disratiodevi = WindFunc("f_anal_disratiodevi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(SDATE_), GetValidDate(EDATE_))
End Function

'|fffd||fffd||5b5||fffd||738||fffd|,f_anal_navlever
Function f_anal_navlever(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_navlever = WindFunc("f_anal_navlever", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function

'|fffd||6f8||fffd||738||fffd|,f_anal_pricelever
Function f_anal_pricelever(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_pricelever = WindFunc("f_anal_pricelever", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||271||fffd|,f_anal_smfbnamedcost
Function f_anal_smfbnamedcost(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_smfbnamedcost = WindFunc("f_anal_smfbnamedcost", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_trackindexcode
Function f_info_trackindexcode(WINDCODE_ As Variant) As Variant
  f_info_trackindexcode = WindFunc("f_info_trackindexcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||5fc||5b8||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_benchindexcode
Function f_info_benchindexcode(WINDCODE_ As Variant) As Variant
  f_info_benchindexcode = WindFunc("f_info_benchindexcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|2b5||fffd||fffd||fffd||2bd||fffd||271||fffd|,f_anal_smfbfactualcost
Function f_anal_smfbfactualcost(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_smfbfactualcost = WindFunc("f_anal_smfbfactualcost", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function

'|fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_anal_nextdiscountdate
Function f_anal_nextdiscountdate(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_nextdiscountdate = WindFunc("f_anal_nextdiscountdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_anal_nextaayield
Function f_anal_nextaayield(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  f_anal_nextaayield = WindFunc("f_anal_nextaayield", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(DATE_))
End Function


'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|),s_risk_avgreturny2
Function s_risk_avgreturny2(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional PERIOD_ As Integer, Optional TYPE_ As Integer) As Variant
  s_risk_avgreturny2 = WindFunc("s_risk_avgreturny2", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_), PERIOD_, TYPE_)
End Function

'|fffd||fffd||5fc||fffd||fffd||3f5||fffd||fffd|,s_risk_stdcof
Function s_risk_stdcof(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional PERIOD_ As Integer, Optional TYPE_ As Integer) As Variant
  s_risk_stdcof = WindFunc("s_risk_stdcof", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_), PERIOD_, TYPE_)
End Function

'|fffd||fffd||3f5||373||fffd||fffd||fffd||fffd|,s_risk_nonsysrisk
Function s_risk_nonsysrisk(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional PERIOD_ As Integer, Optional TYPE_ As Integer, Optional INDEX_ As String) As Variant
  s_risk_nonsysrisk = WindFunc("s_risk_nonsysrisk", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_), PERIOD_, TYPE_, INDEX_)
End Function

'R-Square,s_risk_r2
Function s_risk_r2(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional PERIOD_ As Integer, Optional TYPE_ As Integer, Optional INDEX_ As String) As Variant
  s_risk_r2 = WindFunc("s_risk_r2", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_), PERIOD_, TYPE_, INDEX_)
End Function

'Alpha,s_risk_alpha2
Function s_risk_alpha2(WINDCODE_ As Variant, Optional SDATE_ As Variant, Optional EDATE_ As Variant, Optional PERIOD_ As Integer, Optional TYPE_ As Integer, Optional INDEX_ As String) As Variant
  s_risk_alpha2 = WindFunc("s_risk_alpha2", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(SDATE_), GetValidDate(EDATE_), PERIOD_, TYPE_, INDEX_)
End Function

'|fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd|,s_info_relationCode
Function s_info_relationCode(WINDCODE_ As Variant, Optional TYPE_ As String) As Variant
  s_info_relationCode = WindFunc("s_info_relationCode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|,f_prt_stockvalue_industry2
Function f_prt_stockvalue_industry2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional INDUSTRY_ As Byte, Optional UnitVal_ As Double = 1) As Variant
  f_prt_stockvalue_industry2 = WindFunc("f_prt_stockvalue_industry2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), INDUSTRY_)
    If VarType(f_prt_stockvalue_industry2) <> vbString Then
        f_prt_stockvalue_industry2 = f_prt_stockvalue_industry2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_stockvalue_industryvaluegrowth2
Function f_prt_stockvalue_industryvaluegrowth2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional INDUSTRY_ As Byte) As Variant
  f_prt_stockvalue_industryvaluegrowth2 = WindFunc("f_prt_stockvalue_industryvaluegrowth2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), INDUSTRY_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_industrytostock2
Function f_prt_stockvalue_industrytostock2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional INDUSTRY_ As Byte) As Variant
  f_prt_stockvalue_industrytostock2 = WindFunc("f_prt_stockvalue_industrytostock2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), INDUSTRY_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_industrytonav2
Function f_prt_stockvalue_industrytonav2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional INDUSTRY_ As Byte) As Variant
  f_prt_stockvalue_industrytonav2 = WindFunc("f_prt_stockvalue_industrytonav2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), INDUSTRY_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_industrytoasset2
Function f_prt_stockvalue_industrytoasset2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional INDUSTRY_ As Byte) As Variant
  f_prt_stockvalue_industrytoasset2 = WindFunc("f_prt_stockvalue_industrytoasset2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), INDUSTRY_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_prt_stockvalue_industrytonavgrowth2
Function f_prt_stockvalue_industrytonavgrowth2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional INDUSTRY_ As Byte) As Variant
  f_prt_stockvalue_industrytonavgrowth2 = WindFunc("f_prt_stockvalue_industrytonavgrowth2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), INDUSTRY_)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,f_prt_stockvalue_topindustryname2
Function f_prt_stockvalue_topindustryname2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional ORDER_ As Byte) As Variant
  f_prt_stockvalue_topindustryname2 = WindFunc("f_prt_stockvalue_topindustryname2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), ORDER_)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,f_prt_stockvalue_topindustrysymbol2
Function f_prt_stockvalue_topindustrysymbol2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional ORDER_ As Byte) As Variant
  f_prt_stockvalue_topindustrysymbol2 = WindFunc("f_prt_stockvalue_topindustrysymbol2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), ORDER_)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5|,f_prt_stockvalue_topindustryvalue2
Function f_prt_stockvalue_topindustryvalue2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional ORDER_ As Byte, Optional UnitVal_ As Double = 1) As Variant
  f_prt_stockvalue_topindustryvalue2 = WindFunc("f_prt_stockvalue_topindustryvalue2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), ORDER_)
    If VarType(f_prt_stockvalue_topindustryvalue2) <> vbString Then
        f_prt_stockvalue_topindustryvalue2 = f_prt_stockvalue_topindustryvalue2 / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||1b1||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_topindustrytostock2
Function f_prt_stockvalue_topindustrytostock2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional ORDER_ As Byte) As Variant
  f_prt_stockvalue_topindustrytostock2 = WindFunc("f_prt_stockvalue_topindustrytostock2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), ORDER_)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_topindustrytonav2
Function f_prt_stockvalue_topindustrytonav2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional ORDER_ As Byte) As Variant
  f_prt_stockvalue_topindustrytonav2 = WindFunc("f_prt_stockvalue_topindustrytonav2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), ORDER_)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_stockvalue_topindustrytoasset2
Function f_prt_stockvalue_topindustrytoasset2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional ORDER_ As Byte) As Variant
  f_prt_stockvalue_topindustrytoasset2 = WindFunc("f_prt_stockvalue_topindustrytoasset2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), ORDER_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||5b5|,f_prt_stockvalue_holdingindustrymktvalue2
Function f_prt_stockvalue_holdingindustrymktvalue2(WINDCODE_ As Variant, Optional RDATE_ As Variant, Optional INDUSTRY_ As Byte, Optional UnitVal_ As Double = 1) As Variant
  f_prt_stockvalue_holdingindustrymktvalue2 = WindFunc("f_prt_stockvalue_topindustrytoasset2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(RDATE_), INDUSTRY_)
    If VarType(f_prt_stockvalue_holdingindustrymktvalue2) <> vbString Then
        f_prt_stockvalue_holdingindustrymktvalue2 = f_prt_stockvalue_holdingindustrymktvalue2 / UnitVal_
    End If
End Function

'|fffd||fffd||47a||22f||fffd||fffd||fffd||fffd|,CollateralCode
Function CollateralCode(WINDCODE_ As Variant) As Variant
  CollateralCode = WindFunc("CollateralCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||47a||22f||fffd||fffd||fffd|,CollateralName
Function CollateralName(WINDCODE_ As Variant) As Variant
  CollateralName = WindFunc("CollateralName", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||13c||fffd||fffd||fffd|,b_info_regnumber
Function b_info_regnumber(WINDCODE_ As Variant) As Variant
  b_info_regnumber = WindFunc("b_info_regnumber", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_regdate
Function b_info_regdate(WINDCODE_ As Variant) As Variant
  b_info_regdate = WindFunc("b_info_regdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd|,b_info_regamount
Function b_info_regamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
  b_info_regamount = WindFunc("b_info_regamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
    If VarType(b_info_regamount) <> vbString Then
        b_info_regamount = b_info_regamount / UnitVal_
    End If
End Function

'NAFMII|56e||22f||4bb||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_nafmiiL1type
Function b_info_nafmiiL1type(WINDCODE_ As Variant) As Variant
  b_info_nafmiiL1type = WindFunc("b_info_nafmiiL1type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'NAFMII|56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_nafmiiL2type
Function b_info_nafmiiL2type(WINDCODE_ As Variant) As Variant
  b_info_nafmiiL2type = WindFunc("b_info_nafmiiL2type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|1b1||fffd||fffd||fffd||fffd||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_couponadj_max
Function b_info_couponadj_max(WINDCODE_ As Variant) As Variant
  b_info_couponadj_max = WindFunc("b_info_couponadj_max", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|1b1||fffd||fffd||fffd||fffd||fffd||2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_couponadj_min
Function b_info_couponadj_min(WINDCODE_ As Variant) As Variant
  b_info_couponadj_min = WindFunc("b_info_couponadj_min", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||53c||fffd||fffd||fffd||fffd|,s_info_contractmultiplier
Function s_info_contractmultiplier(WINDCODE_ As Variant) As Variant
  s_info_contractmultiplier = WindFunc("s_info_contractmultiplier", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||3e2||fffd||fffd|(|fffd||fffd|12|fffd||fffd|),s_val_dividendyield2
Function s_val_dividendyield2(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  s_val_dividendyield2 = WindFunc("s_val_dividendyield2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|,s_dq_adjfactor2
Function s_dq_adjfactor2(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  s_dq_adjfactor2 = WindFunc("s_dq_adjfactor2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd|,s_dq_dealnum
Function s_dq_dealnum(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  s_dq_dealnum = WindFunc("s_dq_dealnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
End Function

'2013|fffd||fffd|6|fffd||fffd|21|fffd||fffd| |fffd||fffd||fffd||fffd|

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,BondSettle_Transaction
Function BondSettle_Transaction(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  BondSettle_Transaction = WindFunc("BondSettle_Transaction", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_))
End Function

'|1bd||fffd||fffd||ff||fffd||2bd||fffd||fffd||fffd||fffd||fffd|,BondSettle_AvgVolume
Function BondSettle_AvgVolume(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  BondSettle_AvgVolume = WindFunc("BondSettle_AvgVolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_))
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||fffd|,BondSettle_Average
Function BondSettle_Average(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional TYPE_ As Byte) As Variant
  BondSettle_Average = WindFunc("BondSettle_Average", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||fffd||33d||fffd||fffd||fffd||6f8||fffd|,BondSettle_Open
Function BondSettle_Open(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional TYPE_ As Byte) As Variant
  BondSettle_Open = WindFunc("BondSettle_Open", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||7fd||fffd||fffd||fffd||6f8||fffd|,BondSettle_High
Function BondSettle_High(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional TYPE_ As Byte) As Variant
  BondSettle_High = WindFunc("BondSettle_High", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||37d||fffd||fffd||fffd||6f8||fffd|,BondSettle_Low
Function BondSettle_Low(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional TYPE_ As Byte) As Variant
  BondSettle_Low = WindFunc("BondSettle_Low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||fffd||33d||fffd||fffd||fffd||6f8||fffd|,BondSettle_Close
Function BondSettle_Close(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional TYPE_ As Byte) As Variant
  BondSettle_Close = WindFunc("BondSettle_Close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||6f8||fffd||fffd||1f5||fffd||fffd||fffd|,BondSettle_Change
Function BondSettle_Change(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional TYPE_ As Byte) As Variant
  BondSettle_Change = WindFunc("BondSettle_Change", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), TYPE_)
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,BondSettle_YTM
Function BondSettle_YTM(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional TYPE_ As Byte) As Variant
  BondSettle_YTM = WindFunc("BondSettle_YTM", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), TYPE_)
End Function

'2013|fffd||fffd|6|fffd||fffd|24|fffd||fffd| |fffd||fffd||fffd||fffd|

'|1b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_anal_RCYTM
Function b_anal_RCYTM(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional ExtraCoupon_ As Double) As Variant
  b_anal_RCYTM = WindFunc("b_anal_RCYTM", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DATE_), ExtraCoupon_)
End Function

'2013|fffd||fffd|8|fffd||fffd|6|fffd||fffd| |fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||4b5|(|fffd||fffd|),s_info_industry_csrc12
Function s_info_industry_csrc12(WINDCODE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
  s_info_industry_csrc12 = WindFunc("s_info_industry_csrc12", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_)
End Function

'Get the start date of report
Function s_stm_rpt_s(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional DATETYPE_ As Integer = 0) As Variant
  s_stm_rpt_s = WindFunc("s_stm_rpt_s", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), DATETYPE_)
End Function

'Get the end date of report
Function s_stm_rpt_e(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional DATETYPE_ As Integer = 0) As Variant
  s_stm_rpt_e = WindFunc("s_stm_rpt_e", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), DATETYPE_)
End Function

'Get the original currency type of report
Function s_info_rptCurrency(WINDCODE_ As Variant, Optional DATE_ As Variant) As Variant
  s_info_rptCurrency = WindFunc("s_info_rptCurrency", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_))
End Function

'Get the exchange rate
Function s_fa_exchangeRate(WINDCODE_ As Variant, Optional DATE_ As Variant, Optional CURRENCY_ As Variant) As Variant
  s_fa_exchangeRate = WindFunc("s_fa_exchangeRate", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), CURRENCY_)
End Function

'2013|fffd||fffd|11|fffd||fffd|13|fffd||fffd| |fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd||3e34||228|
Function s_dq_close2(WINDCODE_ As Variant, TRADEDATE As Variant, TYPE_ As Byte, ADJDATE As Variant) As Variant
  s_dq_close2 = WindFunc("s_dq_close2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE), TYPE_, GetValidDate(ADJDATE), Null, Null, Null)
End Function

Function WFR(WINDCODE_ As Variant, IndexList_ As Variant, ParamArray Paramset())
    Dim ValArray(2) As Variant
    Dim Subfunc As Long
    Dim WindCode As String
    Dim index As String
  
    WindCode = GetParaStrEx(WINDCODE_)
    index = GetParaStrEx(IndexList_)
    Subfunc = 17
    
    ValArray(0) = GetParaStr(WindCode)
    ValArray(1) = GetParaStr(index)
    ValArray(2) = Paramset
    
    WFR = WindWsx(Subfunc, ValArray)
End Function

'BCHZ |fffd||fffd||fffd||fffd|

Function WindContribute(OrgName As Variant, DataSource As Variant, SectorID As Variant, Value As Variant, Options As Variant) As Variant

  Dim tem As Variant
  tem = WindBCHZFunc(VariantToString(OrgName), VariantToString(DataSource), VariantToString(SectorID), VariantToString(Value), VariantToString(Options))
  
  If InStr(tem, "#") <> 0 Then
    WindContribute = tem
  Else
    WindContribute = VariantToDouble(Value)
  End If
  
End Function



Function VariantToString(Src As Variant)
    Dim s As String
    
    s = CStr(Src)
    VariantToString = s
    
End Function

Function VariantToDouble(Src As Variant)
    Dim s As Double
    
    s = CDbl(Src)
    VariantToDouble = s
    
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_fa_grps2
Function s_fa_grps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_grps2 = WindFunc("s_fa_grps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|,s_fa_ebitps2
Function s_fa_ebitps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_ebitps2 = WindFunc("s_fa_ebitps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_fa_retainedps2
Function s_fa_retainedps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_retainedps2 = WindFunc("s_fa_retainedps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||b9||271||fffd||32f||fffd||fffd|,s_fa_eps_adjust2
Function s_fa_eps_adjust2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_eps_adjust2 = WindFunc("s_fa_eps_adjust2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||129||fffd||271||fffd||32f||fffd||fffd|,s_fa_eps_diluted3
Function s_fa_eps_diluted3(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_eps_diluted3 = WindFunc("s_fa_eps_diluted3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|,s_fa_fcffps2
Function s_fa_fcffps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_fcffps2 = WindFunc("s_fa_fcffps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||279||276||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|,s_fa_fcfeps2
Function s_fa_fcfeps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_fcfeps2 = WindFunc("s_fa_fcfeps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'EBIT(|fffd||fffd||fffd||1b7||fffd|),hks_fa_ebit
Function hks_fa_ebit(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebit = WindFunc("hks_fa_ebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebit) <> vbString Then
        hks_fa_ebit = hks_fa_ebit / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||fffd|2(EV2/EBITDA),s_val_evtoebitda2
Function s_val_evtoebitda2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_evtoebitda2 = WindFunc("s_val_evtoebitda2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||4ef||fffd||fffd|PE(TTM,|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_val_pe_deducted_ttm
Function s_val_pe_deducted_ttm(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_pe_deducted_ttm = WindFunc("s_val_pe_deducted_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_deductedprofit_ttm
Function s_fa_deductedprofit_ttm(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_deductedprofit_ttm = WindFunc("s_fa_deductedprofit_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_fa_deductedprofit_ttm) <> vbString Then
        s_fa_deductedprofit_ttm = s_fa_deductedprofit_ttm / UnitVal_
    End If
End Function

'|fffd||ba||fffd||53c||fffd||fffd||fffd||fffd|,s_info_code2
Function s_info_code2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_code2 = WindFunc("s_info_code2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'N|fffd||fffd||fffd||fffd||fffd||33c||fffd|1/4|fffd||fffd||3bb||fffd||fffd|,s_nq_1stQuartile
Function s_nq_1stQuartile(WINDCODE_ As Variant, Optional N_ As Integer = -5, Optional TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1) As Variant
    s_nq_1stQuartile = WindFunc("s_nq_1stQuartile", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), N_, GetValidDate(TRADEDATE_), AdjustType_)
End Function

'N|fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd||3bb||fffd||fffd|,s_nq_median
Function s_nq_median(WINDCODE_ As Variant, Optional N_ As Integer = -5, Optional TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1) As Variant
    s_nq_median = WindFunc("s_nq_median", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), N_, GetValidDate(TRADEDATE_), AdjustType_)
End Function

'N|fffd||fffd||fffd||fffd||fffd||33c||fffd|3/4|fffd||fffd||3bb||fffd||fffd|,s_nq_3rdQuartile
Function s_nq_3rdQuartile(WINDCODE_ As Variant, Optional N_ As Integer = -5, Optional TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1) As Variant
    s_nq_3rdQuartile = WindFunc("s_nq_3rdQuartile", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), N_, GetValidDate(TRADEDATE_), AdjustType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,s_info_industry_citic
Function s_info_industry_citic(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_industry_citic = WindFunc("s_info_industry_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,s_info_industry_citiccode
Function s_info_industry_citiccode(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_industry_citiccode = WindFunc("s_info_industry_citiccode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,s_info_industry_swcode
Function s_info_industry_swcode(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_industry_swcode = WindFunc("s_info_industry_swcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||5b8||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_indexcode_sw
Function s_info_indexcode_sw(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_indexcode_sw = WindFunc("s_info_indexcode_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_concept
Function s_info_concept(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_concept = WindFunc("s_info_concept", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||5f7||fffd||fffd||fffd||1bb||fffd||fffd||fffd|,s_ipo_auditor
Function s_ipo_auditor(WINDCODE_ As Variant) As Variant
    s_ipo_auditor = WindFunc("s_ipo_auditor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5f7||fffd||fffd||fffd||1b7||fffd||fffd||fffd|,s_ipo_auditfee
Function s_ipo_auditfee(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_auditfee = WindFunc("s_ipo_auditfee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_auditfee) <> vbString Then
        s_ipo_auditfee = s_ipo_auditfee / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||5a7|,hks_stm_is_92
Function hks_stm_is_92(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_stm_is_92 = WindFunc("hks_stm_is_92", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_stm_is_92) <> vbString Then
        hks_stm_is_92 = hks_stm_is_92 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||1b1|,s_stmnote_sec_op_2
Function s_stmnote_sec_op_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_op_2 = WindFunc("s_stmnote_sec_op_2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_op_2) <> vbString Then
        s_stmnote_sec_op_2 = s_stmnote_sec_op_2 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||56e|,s_stmnote_sec_op_3
Function s_stmnote_sec_op_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_op_3 = WindFunc("s_stmnote_sec_op_3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_op_3) <> vbString Then
        s_stmnote_sec_op_3 = s_stmnote_sec_op_3 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|,s_stmnote_sec_op_4
Function s_stmnote_sec_op_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_op_4 = WindFunc("s_stmnote_sec_op_4", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_op_4) <> vbString Then
        s_stmnote_sec_op_4 = s_stmnote_sec_op_4 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||5a4||fffd||fffd||5ea||56e|,s_stmnote_sec_op_5
Function s_stmnote_sec_op_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_op_5 = WindFunc("s_stmnote_sec_op_5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_op_5) <> vbString Then
        s_stmnote_sec_op_5 = s_stmnote_sec_op_5 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||5a4||22f||fffd||3fc||fffd|,s_stmnote_sec_op_1
Function s_stmnote_sec_op_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_op_1 = WindFunc("s_stmnote_sec_op_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_op_1) <> vbString Then
        s_stmnote_sec_op_1 = s_stmnote_sec_op_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd|(2013),s_stmnote_bank_CoreTier1Cap
Function s_stmnote_bank_CoreTier1Cap(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_CoreTier1Cap = WindFunc("s_stmnote_bank_CoreTier1Cap", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_CoreTier1Cap) <> vbString Then
        s_stmnote_bank_CoreTier1Cap = s_stmnote_bank_CoreTier1Cap / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd|(2013),s_stmnote_bank_Tier1Cap
Function s_stmnote_bank_Tier1Cap(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_Tier1Cap = WindFunc("s_stmnote_bank_Tier1Cap", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_Tier1Cap) <> vbString Then
        s_stmnote_bank_Tier1Cap = s_stmnote_bank_Tier1Cap / UnitVal_
    End If
End Function

'|fffd||2b1||fffd||fffd||fffd||fffd||fffd|(2013),s_stmnote_bank_NetEquityCap
Function s_stmnote_bank_NetEquityCap(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_NetEquityCap = WindFunc("s_stmnote_bank_NetEquityCap", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_NetEquityCap) <> vbString Then
        s_stmnote_bank_NetEquityCap = s_stmnote_bank_NetEquityCap / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(2013),s_stmnote_bank_CapAdequacyRatio_CT1
Function s_stmnote_bank_CapAdequacyRatio_CT1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_CapAdequacyRatio_CT1 = WindFunc("s_stmnote_bank_CapAdequacyRatio_CT1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|4bb||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(2013),s_stmnote_bank_CapAdequacyRatio_T1
Function s_stmnote_bank_CapAdequacyRatio_T1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_CapAdequacyRatio_T1 = WindFunc("s_stmnote_bank_CapAdequacyRatio_T1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(2013),s_stmnote_bank_CapAdequacyRatio
Function s_stmnote_bank_CapAdequacyRatio(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_CapAdequacyRatio = WindFunc("s_stmnote_bank_CapAdequacyRatio", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd|(2013),s_stmnote_bank_RweightedAssets
Function s_stmnote_bank_RweightedAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_RweightedAssets = WindFunc("s_stmnote_bank_RweightedAssets", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_RweightedAssets) <> vbString Then
        s_stmnote_bank_RweightedAssets = s_stmnote_bank_RweightedAssets / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|,s_margin_saletradingamount
Function s_margin_saletradingamount(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_margin_saletradingamount = WindFunc("s_margin_saletradingamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_margin_saletradingamount) <> vbString Then
        s_margin_saletradingamount = s_margin_saletradingamount / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|,s_margin_salerepayamount
Function s_margin_salerepayamount(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_margin_salerepayamount = WindFunc("s_margin_salerepayamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_margin_salerepayamount) <> vbString Then
        s_margin_salerepayamount = s_margin_salerepayamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|,s_margin_shortamountint
Function s_margin_shortamountint(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_margin_shortamountint = WindFunc("s_margin_shortamountint", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_margin_shortamountint) <> vbString Then
        s_margin_shortamountint = s_margin_shortamountint / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|,s_margin_shortamountrepayint
Function s_margin_shortamountrepayint(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_margin_shortamountrepayint = WindFunc("s_margin_shortamountrepayint", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_margin_shortamountrepayint) <> vbString Then
        s_margin_shortamountrepayint = s_margin_shortamountrepayint / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||363||fffd||fffd||fffd||fffd|,s_techanal_limitupdays
Function s_techanal_limitupdays(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_techanal_limitupdays = WindFunc("s_techanal_limitupdays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||363||fffd||fffd||fffd||fffd|,s_techanal_limitdowndays
Function s_techanal_limitdowndays(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_techanal_limitdowndays = WindFunc("s_techanal_limitdowndays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||3e2||fffd||2b2||fffd|,s_stmnote_bank_42
Function s_stmnote_bank_42(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_42 = WindFunc("s_stmnote_bank_42", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_42) <> vbString Then
        s_stmnote_bank_42 = s_stmnote_bank_42 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_stmnote_bank_30
Function s_stmnote_bank_30(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_30 = WindFunc("s_stmnote_bank_30", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_6
Function s_stmnote_Eoitems_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_6 = WindFunc("s_stmnote_Eoitems_6", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_6) <> vbString Then
        s_stmnote_Eoitems_6 = s_stmnote_Eoitems_6 / UnitVal_
    End If
End Function

'|2f0||fffd||577||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_7
Function s_stmnote_Eoitems_7(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_7 = WindFunc("s_stmnote_Eoitems_7", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_7) <> vbString Then
        s_stmnote_Eoitems_7 = s_stmnote_Eoitems_7 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_8
Function s_stmnote_Eoitems_8(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_8 = WindFunc("s_stmnote_Eoitems_8", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_8) <> vbString Then
        s_stmnote_Eoitems_8 = s_stmnote_Eoitems_8 / UnitVal_
    End If
End Function

'|fffd||2bd||fffd||57c||fffd||f7||fffd|,s_stmnote_Eoitems_9
Function s_stmnote_Eoitems_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_9 = WindFunc("s_stmnote_Eoitems_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_9) <> vbString Then
        s_stmnote_Eoitems_9 = s_stmnote_Eoitems_9 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||3f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_10
Function s_stmnote_Eoitems_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_10 = WindFunc("s_stmnote_Eoitems_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_10) <> vbString Then
        s_stmnote_Eoitems_10 = s_stmnote_Eoitems_10 / UnitVal_
    End If
End Function

'|fffd||1fb||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_11
Function s_stmnote_Eoitems_11(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_11 = WindFunc("s_stmnote_Eoitems_11", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_11) <> vbString Then
        s_stmnote_Eoitems_11 = s_stmnote_Eoitems_11 / UnitVal_
    End If
End Function

'|3af||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_12
Function s_stmnote_Eoitems_12(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_12 = WindFunc("s_stmnote_Eoitems_12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_12) <> vbString Then
        s_stmnote_Eoitems_12 = s_stmnote_Eoitems_12 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_Eoitems_13
Function s_stmnote_Eoitems_13(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_13 = WindFunc("s_stmnote_Eoitems_13", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_13) <> vbString Then
        s_stmnote_Eoitems_13 = s_stmnote_Eoitems_13 / UnitVal_
    End If
End Function

'|56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_14
Function s_stmnote_Eoitems_14(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_14 = WindFunc("s_stmnote_Eoitems_14", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_14) <> vbString Then
        s_stmnote_Eoitems_14 = s_stmnote_Eoitems_14 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_15
Function s_stmnote_Eoitems_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_15 = WindFunc("s_stmnote_Eoitems_15", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_15) <> vbString Then
        s_stmnote_Eoitems_15 = s_stmnote_Eoitems_15 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_16
Function s_stmnote_Eoitems_16(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_16 = WindFunc("s_stmnote_Eoitems_16", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_16) <> vbString Then
        s_stmnote_Eoitems_16 = s_stmnote_Eoitems_16 / UnitVal_
    End If
End Function

'|36c||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||3f2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4f9||fffd||2fe||fffd||fffd||fffd||6be||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_17
Function s_stmnote_Eoitems_17(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_17 = WindFunc("s_stmnote_Eoitems_17", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_17) <> vbString Then
        s_stmnote_Eoitems_17 = s_stmnote_Eoitems_17 / UnitVal_
    End If
End Function

'|524||fffd||1b8||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_18
Function s_stmnote_Eoitems_18(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_18 = WindFunc("s_stmnote_Eoitems_18", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_18) <> vbString Then
        s_stmnote_Eoitems_18 = s_stmnote_Eoitems_18 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_19
Function s_stmnote_Eoitems_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_19 = WindFunc("s_stmnote_Eoitems_19", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_19) <> vbString Then
        s_stmnote_Eoitems_19 = s_stmnote_Eoitems_19 / UnitVal_
    End If
End Function

'|fffd||439||fffd||5a4||fffd||fffd||fffd||fffd||3f6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f|,s_stmnote_Eoitems_20
Function s_stmnote_Eoitems_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_20 = WindFunc("s_stmnote_Eoitems_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_20) <> vbString Then
        s_stmnote_Eoitems_20 = s_stmnote_Eoitems_20 / UnitVal_
    End If
End Function

'|fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||421||fffd||fffd|,s_stmnote_Eoitems_21
Function s_stmnote_Eoitems_21(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_21 = WindFunc("s_stmnote_Eoitems_21", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_21) <> vbString Then
        s_stmnote_Eoitems_21 = s_stmnote_Eoitems_21 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0||4f0||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_22
Function s_stmnote_Eoitems_22(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_22 = WindFunc("s_stmnote_Eoitems_22", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_22) <> vbString Then
        s_stmnote_Eoitems_22 = s_stmnote_Eoitems_22 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd||4f0||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_23
Function s_stmnote_Eoitems_23(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_23 = WindFunc("s_stmnote_Eoitems_23", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_23) <> vbString Then
        s_stmnote_Eoitems_23 = s_stmnote_Eoitems_23 / UnitVal_
    End If
End Function

'|fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||3fc||fffd|,s_stmnote_Eoitems_24
Function s_stmnote_Eoitems_24(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_24 = WindFunc("s_stmnote_Eoitems_24", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_24) <> vbString Then
        s_stmnote_Eoitems_24 = s_stmnote_Eoitems_24 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|(FY1),s_west_netprofit_FY1
Function s_west_netprofit_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_netprofit_FY1 = WindFunc("s_west_netprofit_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_netprofit_FY1) <> vbString Then
        s_west_netprofit_FY1 = s_west_netprofit_FY1 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|(FY2),s_west_netprofit_FY2
Function s_west_netprofit_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_netprofit_FY2 = WindFunc("s_west_netprofit_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_netprofit_FY2) <> vbString Then
        s_west_netprofit_FY2 = s_west_netprofit_FY2 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|(FY3),s_west_netprofit_FY3
Function s_west_netprofit_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_netprofit_FY3 = WindFunc("s_west_netprofit_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_netprofit_FY3) <> vbString Then
        s_west_netprofit_FY3 = s_west_netprofit_FY3 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_netprofit_FTM
Function s_west_netprofit_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_netprofit_FTM = WindFunc("s_west_netprofit_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_netprofit_FTM) <> vbString Then
        s_west_netprofit_FTM = s_west_netprofit_FTM / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd||36c||fffd||fffd|,s_west_netprofit_YOY
Function s_west_netprofit_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_netprofit_YOY = WindFunc("s_west_netprofit_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|2|fffd||ae34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_netprofit_CAGR
Function s_west_netprofit_CAGR(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_netprofit_CAGR = WindFunc("s_west_netprofit_CAGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|1|fffd||731||4eef||fffd||fffd|,s_west_nproc_1w
Function s_west_nproc_1w(WINDCODE_ As Variant, Year_ As Integer, TRADEDATE_ As Variant) As Variant
    s_west_nproc_1w = WindFunc("s_west_nproc_1w", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|4|fffd||731||4eef||fffd||fffd|,s_west_nproc_4w
Function s_west_nproc_4w(WINDCODE_ As Variant, Year_ As Integer, TRADEDATE_ As Variant) As Variant
    s_west_nproc_4w = WindFunc("s_west_nproc_4w", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|13|fffd||731||4eef||fffd||fffd|,s_west_nproc_13w
Function s_west_nproc_13w(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer) As Variant
    s_west_nproc_13w = WindFunc("s_west_nproc_13w", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_)
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|26|fffd||731||4eef||fffd||fffd|,s_west_nproc_26w
Function s_west_nproc_26w(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer) As Variant
    s_west_nproc_26w = WindFunc("s_west_nproc_26w", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_)
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(FY1),s_west_eps_FY1
Function s_west_eps_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_eps_FY1 = WindFunc("s_west_eps_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(FY2),s_west_eps_FY2
Function s_west_eps_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_eps_FY2 = WindFunc("s_west_eps_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(FY3),s_west_eps_FY3
Function s_west_eps_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_eps_FY3 = WindFunc("s_west_eps_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_eps_FTM
Function s_west_eps_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_eps_FTM = WindFunc("s_west_eps_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd|ROE(FY1),s_west_avgroe_FY1
Function s_west_avgroe_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgroe_FY1 = WindFunc("s_west_avgroe_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd|ROE(FY2),s_west_avgroe_FY2
Function s_west_avgroe_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgroe_FY2 = WindFunc("s_west_avgroe_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd|ROE(FY3),s_west_avgroe_FY3
Function s_west_avgroe_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgroe_FY3 = WindFunc("s_west_avgroe_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd|ROE|36c||fffd||fffd|,s_west_avgroe_YOY
Function s_west_avgroe_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgroe_YOY = WindFunc("s_west_avgroe_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(FY1),s_west_sales_FY1
Function s_west_sales_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_sales_FY1 = WindFunc("s_west_sales_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_sales_FY1) <> vbString Then
        s_west_sales_FY1 = s_west_sales_FY1 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(FY2),s_west_sales_FY2
Function s_west_sales_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_sales_FY2 = WindFunc("s_west_sales_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_sales_FY2) <> vbString Then
        s_west_sales_FY2 = s_west_sales_FY2 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(FY3),s_west_sales_FY3
Function s_west_sales_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_sales_FY3 = WindFunc("s_west_sales_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_sales_FY3) <> vbString Then
        s_west_sales_FY3 = s_west_sales_FY3 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_sales_FTM
Function s_west_sales_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_sales_FTM = WindFunc("s_west_sales_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_sales_FTM) <> vbString Then
        s_west_sales_FTM = s_west_sales_FTM / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||36c||fffd||fffd|,s_west_sales_YOY
Function s_west_sales_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_sales_YOY = WindFunc("s_west_sales_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|2|fffd||ae34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_sales_CAGR
Function s_west_sales_CAGR(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_sales_CAGR = WindFunc("s_west_sales_CAGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(FY1),s_west_avgcps_FY1
Function s_west_avgcps_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgcps_FY1 = WindFunc("s_west_avgcps_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(FY2),s_west_avgcps_FY2
Function s_west_avgcps_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgcps_FY2 = WindFunc("s_west_avgcps_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(FY3),s_west_avgcps_FY3
Function s_west_avgcps_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgcps_FY3 = WindFunc("s_west_avgcps_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_avgcps_FTM
Function s_west_avgcps_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgcps_FTM = WindFunc("s_west_avgcps_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(FY1),s_west_avgdps_FY1
Function s_west_avgdps_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgdps_FY1 = WindFunc("s_west_avgdps_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(FY2),s_west_avgdps_FY2
Function s_west_avgdps_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgdps_FY2 = WindFunc("s_west_avgdps_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(FY3),s_west_avgdps_FY3
Function s_west_avgdps_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgdps_FY3 = WindFunc("s_west_avgdps_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(FY1),s_west_avgbps_FY1
Function s_west_avgbps_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgbps_FY1 = WindFunc("s_west_avgbps_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(FY2),s_west_avgbps_FY2
Function s_west_avgbps_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgbps_FY2 = WindFunc("s_west_avgbps_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(FY3),s_west_avgbps_FY3
Function s_west_avgbps_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgbps_FY3 = WindFunc("s_west_avgbps_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(FY1),s_west_avgebit_FY1
Function s_west_avgebit_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebit_FY1 = WindFunc("s_west_avgebit_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebit_FY1) <> vbString Then
        s_west_avgebit_FY1 = s_west_avgebit_FY1 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(FY2),s_west_avgebit_FY2
Function s_west_avgebit_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebit_FY2 = WindFunc("s_west_avgebit_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebit_FY2) <> vbString Then
        s_west_avgebit_FY2 = s_west_avgebit_FY2 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(FY3),s_west_avgebit_FY3
Function s_west_avgebit_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebit_FY3 = WindFunc("s_west_avgebit_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebit_FY3) <> vbString Then
        s_west_avgebit_FY3 = s_west_avgebit_FY3 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_avgebit_FTM
Function s_west_avgebit_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebit_FTM = WindFunc("s_west_avgebit_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebit_FTM) <> vbString Then
        s_west_avgebit_FTM = s_west_avgebit_FTM / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd||36c||fffd||fffd|,s_west_avgebit_YOY
Function s_west_avgebit_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgebit_YOY = WindFunc("s_west_avgebit_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd||fffd||ae34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_avgebit_CAGR
Function s_west_avgebit_CAGR(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgebit_CAGR = WindFunc("s_west_avgebit_CAGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(FY1),s_west_avgebitda_FY1
Function s_west_avgebitda_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebitda_FY1 = WindFunc("s_west_avgebitda_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebitda_FY1) <> vbString Then
        s_west_avgebitda_FY1 = s_west_avgebitda_FY1 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(FY2),s_west_avgebitda_FY2
Function s_west_avgebitda_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebitda_FY2 = WindFunc("s_west_avgebitda_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebitda_FY2) <> vbString Then
        s_west_avgebitda_FY2 = s_west_avgebitda_FY2 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(FY3),s_west_avgebitda_FY3
Function s_west_avgebitda_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebitda_FY3 = WindFunc("s_west_avgebitda_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebitda_FY3) <> vbString Then
        s_west_avgebitda_FY3 = s_west_avgebitda_FY3 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_avgebitda_FTM
Function s_west_avgebitda_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebitda_FTM = WindFunc("s_west_avgebitda_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebitda_FTM) <> vbString Then
        s_west_avgebitda_FTM = s_west_avgebitda_FTM / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd||36c||fffd||fffd|,s_west_avgebitda_YOY
Function s_west_avgebitda_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgebitda_YOY = WindFunc("s_west_avgebitda_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|2|fffd||ae34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_avgebitda_CAGR
Function s_west_avgebitda_CAGR(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgebitda_CAGR = WindFunc("s_west_avgebitda_CAGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(FY1),s_west_avgebt_FY1
Function s_west_avgebt_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebt_FY1 = WindFunc("s_west_avgebt_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebt_FY1) <> vbString Then
        s_west_avgebt_FY1 = s_west_avgebt_FY1 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(FY2),s_west_avgebt_FY2
Function s_west_avgebt_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebt_FY2 = WindFunc("s_west_avgebt_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebt_FY2) <> vbString Then
        s_west_avgebt_FY2 = s_west_avgebt_FY2 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(FY3),s_west_avgebt_FY3
Function s_west_avgebt_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebt_FY3 = WindFunc("s_west_avgebt_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebt_FY3) <> vbString Then
        s_west_avgebt_FY3 = s_west_avgebt_FY3 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_avgebt_FTM
Function s_west_avgebt_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebt_FTM = WindFunc("s_west_avgebt_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgebt_FTM) <> vbString Then
        s_west_avgebt_FTM = s_west_avgebt_FTM / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||36c||fffd||fffd|,s_west_avgebt_YOY
Function s_west_avgebt_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgebt_YOY = WindFunc("s_west_avgebt_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|2|fffd||ae34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_avgebt_CAGR
Function s_west_avgebt_CAGR(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgebt_CAGR = WindFunc("s_west_avgebt_CAGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(FY1),s_west_avgoperatingprofit_FY1
Function s_west_avgoperatingprofit_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoperatingprofit_FY1 = WindFunc("s_west_avgoperatingprofit_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoperatingprofit_FY1) <> vbString Then
        s_west_avgoperatingprofit_FY1 = s_west_avgoperatingprofit_FY1 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(FY2),s_west_avgoperatingprofit_FY2
Function s_west_avgoperatingprofit_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoperatingprofit_FY2 = WindFunc("s_west_avgoperatingprofit_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoperatingprofit_FY2) <> vbString Then
        s_west_avgoperatingprofit_FY2 = s_west_avgoperatingprofit_FY2 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(FY3),s_west_avgoperatingprofit_FY3
Function s_west_avgoperatingprofit_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoperatingprofit_FY3 = WindFunc("s_west_avgoperatingprofit_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoperatingprofit_FY3) <> vbString Then
        s_west_avgoperatingprofit_FY3 = s_west_avgoperatingprofit_FY3 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_avgoperatingprofit_FTM
Function s_west_avgoperatingprofit_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoperatingprofit_FTM = WindFunc("s_west_avgoperatingprofit_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoperatingprofit_FTM) <> vbString Then
        s_west_avgoperatingprofit_FTM = s_west_avgoperatingprofit_FTM / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||36c||fffd||fffd|,s_west_avgoperatingprofit_YOY
Function s_west_avgoperatingprofit_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgoperatingprofit_YOY = WindFunc("s_west_avgoperatingprofit_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|2|fffd||ae34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_avgoperatingprofit_CAGR
Function s_west_avgoperatingprofit_CAGR(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgoperatingprofit_CAGR = WindFunc("s_west_avgoperatingprofit_CAGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||271||fffd|(FY1),s_west_avgoc_FY1
Function s_west_avgoc_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoc_FY1 = WindFunc("s_west_avgoc_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoc_FY1) <> vbString Then
        s_west_avgoc_FY1 = s_west_avgoc_FY1 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||271||fffd|(FY2),s_west_avgoc_FY2
Function s_west_avgoc_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoc_FY2 = WindFunc("s_west_avgoc_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoc_FY2) <> vbString Then
        s_west_avgoc_FY2 = s_west_avgoc_FY2 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||271||fffd|(FY3),s_west_avgoc_FY3
Function s_west_avgoc_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoc_FY3 = WindFunc("s_west_avgoc_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoc_FY3) <> vbString Then
        s_west_avgoc_FY3 = s_west_avgoc_FY3 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||271||fffd|(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_west_avgoc_FTM
Function s_west_avgoc_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoc_FTM = WindFunc("s_west_avgoc_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_west_avgoc_FTM) <> vbString Then
        s_west_avgoc_FTM = s_west_avgoc_FTM / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||271||fffd||36c||fffd||fffd|,s_west_avgoc_YOY
Function s_west_avgoc_YOY(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgoc_YOY = WindFunc("s_west_avgoc_YOY", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||271||fffd|2|fffd||ae34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_west_avgoc_CAGR
Function s_west_avgoc_CAGR(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgoc_CAGR = WindFunc("s_west_avgoc_CAGR", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PE(FY1),s_val_estpe_FY1
Function s_val_estpe_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpe_FY1 = WindFunc("s_val_estpe_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PE(FY2),s_val_estpe_FY2
Function s_val_estpe_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpe_FY2 = WindFunc("s_val_estpe_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PE(FY3),s_val_estpe_FY3
Function s_val_estpe_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpe_FY3 = WindFunc("s_val_estpe_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PEG(FY1),s_val_estpeg_FY1
Function s_val_estpeg_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpeg_FY1 = WindFunc("s_val_estpeg_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PEG(FY2),s_val_estpeg_FY2
Function s_val_estpeg_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpeg_FY2 = WindFunc("s_val_estpeg_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PEG(|3b4||fffd||fffd|12|fffd||fffd||fffd||fffd|),s_val_estpeg_FTM
Function s_val_estpeg_FTM(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpeg_FTM = WindFunc("s_val_estpeg_FTM", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PB,s_val_estpb
Function s_val_estpb(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer) As Variant
    s_val_estpb = WindFunc("s_val_estpb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_)
End Function

'|524||fffd||fffd|PB(FY1),s_val_estpb_FY1
Function s_val_estpb_FY1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpb_FY1 = WindFunc("s_val_estpb_FY1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PB(FY2),s_val_estpb_FY2
Function s_val_estpb_FY2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpb_FY2 = WindFunc("s_val_estpb_FY2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd|PB(FY3),s_val_estpb_FY3
Function s_val_estpb_FY3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_estpb_FY3 = WindFunc("s_val_estpb_FY3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||1bd||fffd||fffd||5b5|,s_west_avgoc
Function s_west_avgoc(WINDCODE_ As Variant, Year_ As Integer, TRADEDATE_ As Variant, Optional TYPE_ As Integer = 180, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoc = WindFunc("s_west_avgoc", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_west_avgoc) <> vbString Then
        s_west_avgoc = s_west_avgoc / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||fffd||5b5|,s_west_maxoc
Function s_west_maxoc(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxoc = WindFunc("s_west_maxoc", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_)
    If VarType(s_west_maxoc) <> vbString Then
        s_west_maxoc = s_west_maxoc / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||421||5b5|,s_west_minoc
Function s_west_minoc(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional UnitVal_ As Double = 1) As Variant
    s_west_minoc = WindFunc("s_west_minoc", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_)
    If VarType(s_west_minoc) <> vbString Then
        s_west_minoc = s_west_minoc / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||5b5|,s_west_mediaoc
Function s_west_mediaoc(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional UnitVal_ As Double = 1) As Variant
    s_west_mediaoc = WindFunc("s_west_mediaoc", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_)
    If VarType(s_west_mediaoc) <> vbString Then
        s_west_mediaoc = s_west_mediaoc / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stoc
Function s_west_stoc(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional UnitVal_ As Double = 1) As Variant
    s_west_stoc = WindFunc("s_west_stoc", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_)
    If VarType(s_west_stoc) <> vbString Then
        s_west_stoc = s_west_stoc / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||5fc||fffd||271||fffd||fffd||6fa||fffd||5b5|,s_west_avgshares
Function s_west_avgshares(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgshares = WindFunc("s_west_avgshares", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_)
    If VarType(s_west_avgshares) <> vbString Then
        s_west_avgshares = s_west_avgshares / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||524||fffd||fffd||13f||fffd||fffd||fffd|,s_wrating_targetprice
Function s_wrating_targetprice(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_wrating_targetprice = WindFunc("s_wrating_targetprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|524||fffd||fffd||fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|,|fffd||fffd||37c||fffd|),s_est_pctchange
Function s_est_pctchange(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As String) As Variant
    s_est_pctchange = WindFunc("s_est_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|228||fffd||fffd||fffd||fffd||fffd|(|fffd||7b3||fffd||fffd||37b||fffd||fffd||fffd||fffd||5f1||fffd||5a4||fffd||fffd|),s_stmnote_sec_1853
Function s_stmnote_sec_1853(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_sec_1853 = WindFunc("s_stmnote_sec_1853", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_sec_1500
Function s_stmnote_sec_1500(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1500 = WindFunc("s_stmnote_sec_1500", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1500) <> vbString Then
        s_stmnote_sec_1500 = s_stmnote_sec_1500 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|5a4||22f||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1501
Function s_stmnote_sec_1501(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1501 = WindFunc("s_stmnote_sec_1501", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1501) <> vbString Then
        s_stmnote_sec_1501 = s_stmnote_sec_1501 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||43f||37b||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1502
Function s_stmnote_sec_1502(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1502 = WindFunc("s_stmnote_sec_1502", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1502) <> vbString Then
        s_stmnote_sec_1502 = s_stmnote_sec_1502 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|5a4||22f||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1503
Function s_stmnote_sec_1503(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1503 = WindFunc("s_stmnote_sec_1503", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1503) <> vbString Then
        s_stmnote_sec_1503 = s_stmnote_sec_1503 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1504
Function s_stmnote_sec_1504(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1504 = WindFunc("s_stmnote_sec_1504", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1504) <> vbString Then
        s_stmnote_sec_1504 = s_stmnote_sec_1504 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1505
Function s_stmnote_sec_1505(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1505 = WindFunc("s_stmnote_sec_1505", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1505) <> vbString Then
        s_stmnote_sec_1505 = s_stmnote_sec_1505 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|376||fffd||fffd||fffd||fffd||46f||4b5||fffd||fffd|,s_stmnote_sec_1506
Function s_stmnote_sec_1506(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1506 = WindFunc("s_stmnote_sec_1506", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1506) <> vbString Then
        s_stmnote_sec_1506 = s_stmnote_sec_1506 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||6bb||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1507
Function s_stmnote_sec_1507(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1507 = WindFunc("s_stmnote_sec_1507", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1507) <> vbString Then
        s_stmnote_sec_1507 = s_stmnote_sec_1507 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_sec_1520
Function s_stmnote_sec_1520(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1520 = WindFunc("s_stmnote_sec_1520", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1520) <> vbString Then
        s_stmnote_sec_1520 = s_stmnote_sec_1520 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|5a4||22f||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1521
Function s_stmnote_sec_1521(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1521 = WindFunc("s_stmnote_sec_1521", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1521) <> vbString Then
        s_stmnote_sec_1521 = s_stmnote_sec_1521 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||43f||37b||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1522
Function s_stmnote_sec_1522(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1522 = WindFunc("s_stmnote_sec_1522", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1522) <> vbString Then
        s_stmnote_sec_1522 = s_stmnote_sec_1522 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|5a4||22f||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1523
Function s_stmnote_sec_1523(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1523 = WindFunc("s_stmnote_sec_1523", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1523) <> vbString Then
        s_stmnote_sec_1523 = s_stmnote_sec_1523 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1524
Function s_stmnote_sec_1524(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1524 = WindFunc("s_stmnote_sec_1524", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1524) <> vbString Then
        s_stmnote_sec_1524 = s_stmnote_sec_1524 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1525
Function s_stmnote_sec_1525(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1525 = WindFunc("s_stmnote_sec_1525", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1525) <> vbString Then
        s_stmnote_sec_1525 = s_stmnote_sec_1525 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|376||fffd||fffd||fffd||fffd||46f||4b5||fffd||fffd|,s_stmnote_sec_1526
Function s_stmnote_sec_1526(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1526 = WindFunc("s_stmnote_sec_1526", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1526) <> vbString Then
        s_stmnote_sec_1526 = s_stmnote_sec_1526 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||47c||fffd||4f6||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||6bb||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd|,s_stmnote_sec_1527
Function s_stmnote_sec_1527(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1527 = WindFunc("s_stmnote_sec_1527", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1527) <> vbString Then
        s_stmnote_sec_1527 = s_stmnote_sec_1527 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_sec_1510
Function s_stmnote_sec_1510(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1510 = WindFunc("s_stmnote_sec_1510", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1510) <> vbString Then
        s_stmnote_sec_1510 = s_stmnote_sec_1510 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||22f||4b5||fffd||fffd|,s_stmnote_sec_1511
Function s_stmnote_sec_1511(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1511 = WindFunc("s_stmnote_sec_1511", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1511) <> vbString Then
        s_stmnote_sec_1511 = s_stmnote_sec_1511 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1512
Function s_stmnote_sec_1512(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1512 = WindFunc("s_stmnote_sec_1512", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1512) <> vbString Then
        s_stmnote_sec_1512 = s_stmnote_sec_1512 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||639||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1513
Function s_stmnote_sec_1513(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1513 = WindFunc("s_stmnote_sec_1513", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1513) <> vbString Then
        s_stmnote_sec_1513 = s_stmnote_sec_1513 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_sec_1530
Function s_stmnote_sec_1530(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1530 = WindFunc("s_stmnote_sec_1530", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1530) <> vbString Then
        s_stmnote_sec_1530 = s_stmnote_sec_1530 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||22f||4b5||fffd||fffd|,s_stmnote_sec_1531
Function s_stmnote_sec_1531(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1531 = WindFunc("s_stmnote_sec_1531", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1531) <> vbString Then
        s_stmnote_sec_1531 = s_stmnote_sec_1531 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1532
Function s_stmnote_sec_1532(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1532 = WindFunc("s_stmnote_sec_1532", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1532) <> vbString Then
        s_stmnote_sec_1532 = s_stmnote_sec_1532 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||639||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1533
Function s_stmnote_sec_1533(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1533 = WindFunc("s_stmnote_sec_1533", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1533) <> vbString Then
        s_stmnote_sec_1533 = s_stmnote_sec_1533 / UnitVal_
    End If
End Function

'|5a4||22f||376||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1540
Function s_stmnote_sec_1540(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1540 = WindFunc("s_stmnote_sec_1540", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1540) <> vbString Then
        s_stmnote_sec_1540 = s_stmnote_sec_1540 / UnitVal_
    End If
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1541
Function s_stmnote_sec_1541(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1541 = WindFunc("s_stmnote_sec_1541", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1541) <> vbString Then
        s_stmnote_sec_1541 = s_stmnote_sec_1541 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1542
Function s_stmnote_sec_1542(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1542 = WindFunc("s_stmnote_sec_1542", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1542) <> vbString Then
        s_stmnote_sec_1542 = s_stmnote_sec_1542 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1543
Function s_stmnote_sec_1543(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1543 = WindFunc("s_stmnote_sec_1543", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1543) <> vbString Then
        s_stmnote_sec_1543 = s_stmnote_sec_1543 / UnitVal_
    End If
End Function

'|5a4||22f||376||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1550
Function s_stmnote_sec_1550(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1550 = WindFunc("s_stmnote_sec_1550", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1550) <> vbString Then
        s_stmnote_sec_1550 = s_stmnote_sec_1550 / UnitVal_
    End If
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1551
Function s_stmnote_sec_1551(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1551 = WindFunc("s_stmnote_sec_1551", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1551) <> vbString Then
        s_stmnote_sec_1551 = s_stmnote_sec_1551 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1552
Function s_stmnote_sec_1552(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1552 = WindFunc("s_stmnote_sec_1552", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1552) <> vbString Then
        s_stmnote_sec_1552 = s_stmnote_sec_1552 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_sec_1553
Function s_stmnote_sec_1553(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_1553 = WindFunc("s_stmnote_sec_1553", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_sec_1553) <> vbString Then
        s_stmnote_sec_1553 = s_stmnote_sec_1553 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_26
Function s_stmnote_bank_26(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_26 = WindFunc("s_stmnote_bank_26", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_26) <> vbString Then
        s_stmnote_bank_26 = s_stmnote_bank_26 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_58
Function s_stmnote_bank_58(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_58 = WindFunc("s_stmnote_bank_58", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||3e2||fffd||fffd||56e||fffd||271||fffd||fffd||fffd|,s_stmnote_bank_60
Function s_stmnote_bank_60(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_60 = WindFunc("s_stmnote_bank_60", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2a7||5fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_AR
Function s_stmnote_bank_AR(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_AR = WindFunc("s_stmnote_bank_AR", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_seg_1501
Function s_stmnote_seg_1501(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_seg_1501 = WindFunc("s_stmnote_seg_1501", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_seg_1501) <> vbString Then
        s_stmnote_seg_1501 = s_stmnote_seg_1501 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||ae7a||fffd||1fc||fffd||fffd||fffd|,s_ipo_MVRegDate
Function s_ipo_MVRegDate(WINDCODE_ As Variant) As Variant
    s_ipo_MVRegDate = WindFunc("s_ipo_MVRegDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|13c||fffd||fffd||fffd||2bd||fffd||fffd||736||fffd|(|fffd||fffd||fffd||276||fffd||fffd||6f9||fffd|),s_ipo_collection_total
Function s_ipo_collection_total(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_collection_total = WindFunc("s_ipo_collection_total", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_collection_total) <> vbString Then
        s_ipo_collection_total = s_ipo_collection_total / UnitVal_
    End If
End Function

'|fffd||276||fffd||fffd||6f9||27d||fffd||fffd|,s_ipo_collection_oldshares
Function s_ipo_collection_oldshares(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_collection_oldshares = WindFunc("s_ipo_collection_oldshares", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_collection_oldshares) <> vbString Then
        s_ipo_collection_oldshares = s_ipo_collection_oldshares / UnitVal_
    End If
End Function

'|fffd||b9||277||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_newshares
Function s_ipo_newshares(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_newshares = WindFunc("s_ipo_newshares", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_newshares) <> vbString Then
        s_ipo_newshares = s_ipo_newshares / UnitVal_
    End If
End Function

'|fffd||276||fffd||fffd||6f9||fffd||fffd||fffd||fffd||fffd|,s_ipo_oldshares
Function s_ipo_oldshares(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_oldshares = WindFunc("s_ipo_oldshares", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_oldshares) <> vbString Then
        s_ipo_oldshares = s_ipo_oldshares / UnitVal_
    End If
End Function

'|fffd||6f9||279||276||fffd||4e6||32f||fffd||fffd||fffd||fffd||fffd||bc63||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_underwritingfees_shareholder
Function s_ipo_underwritingfees_shareholder(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_underwritingfees_shareholder = WindFunc("s_ipo_underwritingfees_shareholder", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_underwritingfees_shareholder) <> vbString Then
        s_ipo_underwritingfees_shareholder = s_ipo_underwritingfees_shareholder / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||fffd||fffd||fffd|,s_ipo_ReallocationPct
Function s_ipo_ReallocationPct(WINDCODE_ As Variant) As Variant
    s_ipo_ReallocationPct = WindFunc("s_ipo_ReallocationPct", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_SShares_uplimit
Function s_ipo_SShares_uplimit(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_SShares_uplimit = WindFunc("s_ipo_SShares_uplimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_SShares_uplimit) <> vbString Then
        s_ipo_SShares_uplimit = s_ipo_SShares_uplimit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||2bd||fffd||fffd||fffd||fffd||fffd|,s_ipo_SAmt_uplimit
Function s_ipo_SAmt_uplimit(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_SAmt_uplimit = WindFunc("s_ipo_SAmt_uplimit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_SAmt_uplimit) <> vbString Then
        s_ipo_SAmt_uplimit = s_ipo_SAmt_uplimit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||3f7||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd|,s_ipo_VSShares_s
Function s_ipo_VSShares_s(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_VSShares_s = WindFunc("s_ipo_VSShares_s", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_VSShares_s) <> vbString Then
        s_ipo_VSShares_s = s_ipo_VSShares_s / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||4ef||fffd||fffd|,s_ipo_industryPe
Function s_ipo_industryPe(WINDCODE_ As Variant) As Variant
    s_ipo_industryPe = WindFunc("s_ipo_industryPe", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd||fffd|,s_ipo_pDate
Function s_ipo_pDate(WINDCODE_ As Variant) As Variant
    s_ipo_pDate = WindFunc("s_ipo_pDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_SPrice_min
Function s_ipo_SPrice_min(WINDCODE_ As Variant) As Variant
    s_ipo_SPrice_min = WindFunc("s_ipo_SPrice_min", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_SPrice_max
Function s_ipo_SPrice_max(WINDCODE_ As Variant) As Variant
    s_ipo_SPrice_max = WindFunc("s_ipo_SPrice_max", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|,s_ipo_SShares_t
Function s_ipo_SShares_t(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_SShares_t = WindFunc("s_ipo_SShares_t", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_SShares_t) <> vbString Then
        s_ipo_SShares_t = s_ipo_SShares_t / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|(|fffd||632||fffd||1f0|),s_ipo_Sratio
Function s_ipo_Sratio(WINDCODE_ As Variant) As Variant
    s_ipo_Sratio = WindFunc("s_ipo_Sratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_VSPrice_max
Function s_ipo_VSPrice_max(WINDCODE_ As Variant) As Variant
    s_ipo_VSPrice_max = WindFunc("s_ipo_VSPrice_max", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd|,s_ipo_VSShares
Function s_ipo_VSShares(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_VSShares = WindFunc("s_ipo_VSShares", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_VSShares) <> vbString Then
        s_ipo_VSShares = s_ipo_VSShares / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b3||fffd||fffd||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd|(|fffd||632||fffd||1f0|),s_ipo_VSRatio
Function s_ipo_VSRatio(WINDCODE_ As Variant) As Variant
    s_ipo_VSRatio = WindFunc("s_ipo_VSRatio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_VSSharesPct
Function s_ipo_VSSharesPct(WINDCODE_ As Variant) As Variant
    s_ipo_VSSharesPct = WindFunc("s_ipo_VSSharesPct", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||b8||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7b5||fffd||fffd||ae7a||fffd||fffd|,s_ipo_InvSShares_a
Function s_ipo_InvSShares_a(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_InvSShares_a = WindFunc("s_ipo_InvSShares_a", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_InvSShares_a) <> vbString Then
        s_ipo_InvSShares_a = s_ipo_InvSShares_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b8||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7b5||fffd||fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_InvSSharesPct_a
Function s_ipo_InvSSharesPct_a(WINDCODE_ As Variant) As Variant
    s_ipo_InvSSharesPct_a = WindFunc("s_ipo_InvSSharesPct_a", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5b3||fffd||fffd||1bd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|,s_ipo_RSDate_s
Function s_ipo_RSDate_s(WINDCODE_ As Variant) As Variant
    s_ipo_RSDate_s = WindFunc("s_ipo_RSDate_s", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5b3||fffd||fffd||1bd||fffd||fffd||5b9||fffd||fffd||fffd||fffd|,s_ipo_RSDate_e
Function s_ipo_RSDate_e(WINDCODE_ As Variant) As Variant
    s_ipo_RSDate_e = WindFunc("s_ipo_RSDate_e", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||3f6||fffd||fffd||fffd||fffd||2bd||fffd|,s_ipo_Bfund
Function s_ipo_Bfund(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_Bfund = WindFunc("s_ipo_Bfund", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_Bfund) <> vbString Then
        s_ipo_Bfund = s_ipo_Bfund / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b9||fffd||13c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_PShares_mf
Function s_ipo_PShares_mf(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_PShares_mf = WindFunc("s_ipo_PShares_mf", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_PShares_mf) <> vbString Then
        s_ipo_PShares_mf = s_ipo_PShares_mf / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||7c63||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_PShares_ssf
Function s_ipo_PShares_ssf(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_PShares_ssf = WindFunc("s_ipo_PShares_ssf", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_PShares_ssf) <> vbString Then
        s_ipo_PShares_ssf = s_ipo_PShares_ssf / UnitVal_
    End If
End Function

'|fffd||1f5||fffd||363||5f4||32c|,s_dq_maxupordown
Function s_dq_maxupordown(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_maxupordown = WindFunc("s_dq_maxupordown", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_fellow_pricemax
Function s_fellow_pricemax(WINDCODE_ As Variant, Optional Year_ As Integer = 2014) As Variant
    s_fellow_pricemax = WindFunc("s_fellow_pricemax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_fellow_pricemin
Function s_fellow_pricemin(WINDCODE_ As Variant, Optional Year_ As Integer = 2014) As Variant
    s_fellow_pricemin = WindFunc("s_fellow_pricemin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||43d||fffd||fffd|(|fffd||fffd||fffd||6f7||fffd||fffd||fffd|),s_stmnote_others_7626
Function s_stmnote_others_7626(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7626 = WindFunc("s_stmnote_others_7626", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7626) <> vbString Then
        s_stmnote_others_7626 = s_stmnote_others_7626 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||43d||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_others_7627
Function s_stmnote_others_7627(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7627 = WindFunc("s_stmnote_others_7627", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7627) <> vbString Then
        s_stmnote_others_7627 = s_stmnote_others_7627 / UnitVal_
    End If
End Function

'|fffd||6fe||fffd||32f||fffd||fffd|(|fffd||fffd||fffd||6f7||fffd||fffd||fffd|),s_stmnote_others_7628
Function s_stmnote_others_7628(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7628 = WindFunc("s_stmnote_others_7628", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7628) <> vbString Then
        s_stmnote_others_7628 = s_stmnote_others_7628 / UnitVal_
    End If
End Function

'|fffd||6fe||fffd||32f||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_others_7629
Function s_stmnote_others_7629(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7629 = WindFunc("s_stmnote_others_7629", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7629) <> vbString Then
        s_stmnote_others_7629 = s_stmnote_others_7629 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||7b7||fffd|(|fffd||fffd||fffd||6f7||fffd||fffd||fffd|),s_stmnote_others_7630
Function s_stmnote_others_7630(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7630 = WindFunc("s_stmnote_others_7630", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7630) <> vbString Then
        s_stmnote_others_7630 = s_stmnote_others_7630 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||7b7||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_others_7631
Function s_stmnote_others_7631(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7631 = WindFunc("s_stmnote_others_7631", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7631) <> vbString Then
        s_stmnote_others_7631 = s_stmnote_others_7631 / UnitVal_
    End If
End Function

'|fffd||5b4||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||6f7||fffd||fffd||fffd|),s_stmnote_others_7632
Function s_stmnote_others_7632(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7632 = WindFunc("s_stmnote_others_7632", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7632) <> vbString Then
        s_stmnote_others_7632 = s_stmnote_others_7632 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||fffd|(|fffd||fffd||fffd||6f7||fffd||fffd||fffd|),s_stmnote_others_7633
Function s_stmnote_others_7633(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7633 = WindFunc("s_stmnote_others_7633", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7633) <> vbString Then
        s_stmnote_others_7633 = s_stmnote_others_7633 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_others_4504
Function s_stmnote_others_4504(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_4504 = WindFunc("s_stmnote_others_4504", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_4504) <> vbString Then
        s_stmnote_others_4504 = s_stmnote_others_4504 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_PShares_SP
Function s_ipo_PShares_SP(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_PShares_SP = WindFunc("s_ipo_PShares_SP", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_PShares_SP) <> vbString Then
        s_ipo_PShares_SP = s_ipo_PShares_SP / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||b1||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_PShares_IF
Function s_ipo_PShares_IF(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_PShares_IF = WindFunc("s_ipo_PShares_IF", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_PShares_IF) <> vbString Then
        s_ipo_PShares_IF = s_ipo_PShares_IF / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_audit_am
Function s_stmnote_audit_am(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_audit_am = WindFunc("s_stmnote_audit_am", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4aa||5b8||fffd||fffd||fffd||277||fffd|,s_info_compindex2
Function s_info_compindex2(WINDCODE_ As Variant, IndexBelong_ As Integer, TRADEDATE_ As Variant) As Variant
    s_info_compindex2 = WindFunc("s_info_compindex2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), IndexBelong_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),s_info_industry2
Function s_info_industry2(WINDCODE_ As Variant, TYPE_ As Integer, IndustryStandard_ As Integer, TRADEDATE_ As Variant) As Variant
    s_info_industry2 = WindFunc("s_info_industry2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, IndustryStandard_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),s_info_industrycode
Function s_info_industrycode(WINDCODE_ As Variant, IndustryStandard_ As Integer, TYPE_ As Integer, TRADEDATE_ As Variant) As Variant
    s_info_industrycode = WindFunc("s_info_industrycode", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), IndustryStandard_, TYPE_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|eb||fffd||fffd|,s_qfa_grossmargin
Function s_qfa_grossmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qfa_grossmargin = WindFunc("s_qfa_grossmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qfa_grossmargin) <> vbString Then
        s_qfa_grossmargin = s_qfa_grossmargin / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_VSprice_min
Function s_ipo_VSprice_min(WINDCODE_ As Variant) As Variant
    s_ipo_VSprice_min = WindFunc("s_ipo_VSprice_min", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||3f9||fffd||5ea||fffd||f1||fffd||fffd||fffd|,s_ipo_oldsharesratio
Function s_ipo_oldsharesratio(WINDCODE_ As Variant) As Variant
    s_ipo_oldsharesratio = WindFunc("s_ipo_oldsharesratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|524||fffd||1b7||fffd||fffd||439||fffd||fffd||fffd|,s_ipo_amount_est
Function s_ipo_amount_est(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_amount_est = WindFunc("s_ipo_amount_est", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_amount_est) <> vbString Then
        s_ipo_amount_est = s_ipo_amount_est / UnitVal_
    End If
End Function

'|524||fffd||1b7||fffd||fffd||43a||fffd||fffd||739||271||fffd|,s_ipo_totcapafterissue_est
Function s_ipo_totcapafterissue_est(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_totcapafterissue_est = WindFunc("s_ipo_totcapafterissue_est", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_totcapafterissue_est) <> vbString Then
        s_ipo_totcapafterissue_est = s_ipo_totcapafterissue_est / UnitVal_
    End If
End Function

'|524||fffd||fffd||13c||376||fffd||fffd||13f||376||fffd||fffd||fffd||736||fffd|,s_ipo_netcollection_est
Function s_ipo_netcollection_est(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_netcollection_est = WindFunc("s_ipo_netcollection_est", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_netcollection_est) <> vbString Then
        s_ipo_netcollection_est = s_ipo_netcollection_est / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_7n
Function s_stmnote_bank_7n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_7n = WindFunc("s_stmnote_bank_7n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_16n
Function s_stmnote_bank_16n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_16n = WindFunc("s_stmnote_bank_16n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_5n
Function s_stmnote_bank_5n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_5n = WindFunc("s_stmnote_bank_5n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_4n
Function s_stmnote_bank_4n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_4n = WindFunc("s_stmnote_bank_4n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_8n
Function s_stmnote_bank_8n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_8n = WindFunc("s_stmnote_bank_8n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_13n
Function s_stmnote_bank_13n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_13n = WindFunc("s_stmnote_bank_13n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_15n
Function s_stmnote_bank_15n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_15n = WindFunc("s_stmnote_bank_15n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_20n
Function s_stmnote_bank_20n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_20n = WindFunc("s_stmnote_bank_20n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_6n
Function s_stmnote_bank_6n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_6n = WindFunc("s_stmnote_bank_6n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_3n
Function s_stmnote_bank_3n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_3n = WindFunc("s_stmnote_bank_3n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_bank_22n
Function s_stmnote_bank_22n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_22n = WindFunc("s_stmnote_bank_22n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_22n) <> vbString Then
        s_stmnote_bank_22n = s_stmnote_bank_22n / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||eca6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_23n
Function s_stmnote_bank_23n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_23n = WindFunc("s_stmnote_bank_23n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_132n
Function s_stmnote_bank_132n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_132n = WindFunc("s_stmnote_bank_132n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_132n) <> vbString Then
        s_stmnote_bank_132n = s_stmnote_bank_132n / UnitVal_
    End If
End Function

'|fffd||271||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_129n
Function s_stmnote_bank_129n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_129n = WindFunc("s_stmnote_bank_129n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||2b1||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_131n
Function s_stmnote_bank_131n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_131n = WindFunc("s_stmnote_bank_131n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_131n) <> vbString Then
        s_stmnote_bank_131n = s_stmnote_bank_131n / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_9n
Function s_stmnote_bank_9n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_9n = WindFunc("s_stmnote_bank_9n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_10n
Function s_stmnote_bank_10n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_10n = WindFunc("s_stmnote_bank_10n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_stmnote_bank_14n
Function s_stmnote_bank_14n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_14n = WindFunc("s_stmnote_bank_14n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||f1||fffd||fffd||fffd|,s_stmnote_bank_21n
Function s_stmnote_bank_21n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_21n = WindFunc("s_stmnote_bank_21n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|,s_stmnote_bank_1n
Function s_stmnote_bank_1n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_1n = WindFunc("s_stmnote_bank_1n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_1n) <> vbString Then
        s_stmnote_bank_1n = s_stmnote_bank_1n / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd|,s_stmnote_bank_144n
Function s_stmnote_bank_144n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_144n = WindFunc("s_stmnote_bank_144n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd|,s_stmnote_bank_12n
Function s_stmnote_bank_12n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_12n = WindFunc("s_stmnote_bank_12n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2ae||fffd||4bf||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_18n
Function s_stmnote_bank_18n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_18n = WindFunc("s_stmnote_bank_18n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd|,s_stmnote_bank_11n
Function s_stmnote_bank_11n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_11n = WindFunc("s_stmnote_bank_11n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||4bb||fffd||fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_17n
Function s_stmnote_bank_17n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_17n = WindFunc("s_stmnote_bank_17n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||736||fffd|,s_stmnote_bank_2n
Function s_stmnote_bank_2n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_2n = WindFunc("s_stmnote_bank_2n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_2n) <> vbString Then
        s_stmnote_bank_2n = s_stmnote_bank_2n / UnitVal_
    End If
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_133n
Function s_stmnote_bank_133n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_133n = WindFunc("s_stmnote_bank_133n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_133n) <> vbString Then
        s_stmnote_bank_133n = s_stmnote_bank_133n / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_147n
Function s_stmnote_bank_147n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_147n = WindFunc("s_stmnote_bank_147n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd|),s_stmnote_bank_19n
Function s_stmnote_bank_19n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_19n = WindFunc("s_stmnote_bank_19n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'N|fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd||1bd||fffd||fffd|),s_nq_avgclose
Function s_nq_avgclose(WINDCODE_ As Variant, Optional N_ As Integer = -5, Optional TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_nq_avgclose = WindFunc("s_nq_avgclose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), N_, GetValidDate(TRADEDATE_), AdjustType_)
    If VarType(s_nq_avgclose) <> vbString Then
        s_nq_avgclose = s_nq_avgclose / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5bd||fffd||5ba||fffd||fffd||fffd||fffd|,s_div_payoutRatio
Function s_div_payoutRatio(WINDCODE_ As Variant, Year_ As Integer) As Variant
    s_div_payoutRatio = WindFunc("s_div_payoutRatio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd|Wind|fffd||fffd||4b5||5b8||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_indexcode_wind
Function s_info_indexcode_wind(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_indexcode_wind = WindFunc("s_info_indexcode_wind", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||1f7||fffd||fffd||434||fffd||fffd||fffd|,s_info_parallelCode
Function s_info_parallelCode(WINDCODE_ As Variant) As Variant
    s_info_parallelCode = WindFunc("s_info_parallelCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,s_info_industry_csrccode12
Function s_info_industry_csrccode12(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As Integer = 1) As Variant
    s_info_industry_csrccode12 = WindFunc("s_info_industry_csrccode12", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd|/|fffd||fffd||fffd||fffd||56e||fffd||fffd|,s_fa_cashtostdebt
Function s_fa_cashtostdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_fa_cashtostdebt = WindFunc("s_fa_cashtostdebt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,s_ipo_sponsorRepresentative
Function s_ipo_sponsorRepresentative(WINDCODE_ As Variant) As Variant
    s_ipo_sponsorRepresentative = WindFunc("s_ipo_sponsorRepresentative", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||b3||fffd|,s_info_boardchairmen
Function s_info_boardchairmen(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_boardchairmen = WindFunc("s_info_boardchairmen", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||73e||fffd||fffd||fffd|,s_info_ceo
Function s_info_ceo(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_ceo = WindFunc("s_info_ceo", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'EBITDA(|fffd||fffd||fffd||1b7||fffd|),hks_fa_ebitda
Function hks_fa_ebitda(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebitda = WindFunc("hks_fa_ebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebitda) <> vbString Then
        hks_fa_ebitda = hks_fa_ebitda / UnitVal_
    End If
End Function

'|fffd||477||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_share_issuing
Function s_share_issuing(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_issuing = WindFunc("s_share_issuing", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_issuing) <> vbString Then
        s_share_issuing = s_share_issuing / UnitVal_
    End If
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_dupont_roe
Function hks_fa_dupont_roe(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_dupont_roe = WindFunc("hks_fa_dupont_roe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|/|fffd||fffd||56e||fffd||3fc||fffd|,hks_fa_tangibleassettodebt
Function hks_fa_tangibleassettodebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_tangibleassettodebt = WindFunc("hks_fa_tangibleassettodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||47b||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|(EBIT/|fffd||fffd||3e2||fffd||fffd||fffd||fffd|),hks_fa_ebittointerest
Function hks_fa_ebittointerest(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ebittointerest = WindFunc("hks_fa_ebittointerest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|-|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoynetprofit_deducted
Function hks_fa_yoynetprofit_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoynetprofit_deducted = WindFunc("hks_fa_yoynetprofit_deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||3e2||56e||fffd||fffd|,hks_fa_ocftointerestdebt
Function hks_fa_ocftointerestdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ocftointerestdebt = WindFunc("hks_fa_ocftointerestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_operateincome_ttm
Function hks_fa_operateincome_ttm(WINDCODE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_operateincome_ttm = WindFunc("hks_fa_operateincome_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_operateincome_ttm) <> vbString Then
        hks_fa_operateincome_ttm = hks_fa_operateincome_ttm / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||73c||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyassets
Function hks_fa_yoyassets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyassets = WindFunc("hks_fa_yoyassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|/|fffd||fffd||3e2||56e||fffd||fffd|,hks_fa_tangibleassettointerestdebt
Function hks_fa_tangibleassettointerestdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_tangibleassettointerestdebt = WindFunc("hks_fa_tangibleassettointerestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|/|fffd||fffd||56e||fffd||fffd|,hks_fa_tangibleassettonetdebt
Function hks_fa_tangibleassettonetdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_tangibleassettonetdebt = WindFunc("hks_fa_tangibleassettonetdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyequity
Function hks_fa_yoyequity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyequity = WindFunc("hks_fa_yoyequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|/|fffd||fffd||3e2||56e||fffd||fffd|,hks_fa_equitytointerestdebt
Function hks_fa_equitytointerestdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_equitytointerestdebt = WindFunc("hks_fa_equitytointerestdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoynetprofit
Function hks_fa_yoynetprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoynetprofit = WindFunc("hks_fa_yoynetprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_investincome_ttm
Function hks_fa_investincome_ttm(WINDCODE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_investincome_ttm = WindFunc("hks_fa_investincome_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_investincome_ttm) <> vbString Then
        hks_fa_investincome_ttm = hks_fa_investincome_ttm / UnitVal_
    End If
End Function

'|228||fffd||fffd||fffd||fffd||fffd|(|fffd||170||fffd||fffd||fffd||fffd|),hks_fa_dupont_assetstoequity
Function hks_fa_dupont_assetstoequity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_dupont_assetstoequity = WindFunc("hks_fa_dupont_assetstoequity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_dupont_np
Function hks_fa_dupont_np(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_dupont_np = WindFunc("hks_fa_dupont_np", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|/|fffd||fffd||fffd||2b2||fffd|,hks_fa_tangibleassetstoassets
Function hks_fa_tangibleassetstoassets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_tangibleassetstoassets = WindFunc("hks_fa_tangibleassetstoassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|3e1||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyeps_diluted
Function hks_fa_yoyeps_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyeps_diluted = WindFunc("hks_fa_yoyeps_diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoy_tr
Function hks_fa_yoy_tr(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoy_tr = WindFunc("hks_fa_yoy_tr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyebt
Function hks_fa_yoyebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyebt = WindFunc("hks_fa_yoyebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyocf
Function hks_fa_yoyocf(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyocf = WindFunc("hks_fa_yoyocf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||676||fffd||fffd||fffd||fffd||fffd|,hks_fa_cashratio
Function hks_fa_cashratio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_cashratio = WindFunc("hks_fa_cashratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|,hks_fa_turndays
Function hks_fa_turndays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_turndays = WindFunc("hks_fa_turndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||3e2||56e||fffd||fffd|/|22b||fffd||fffd||376||fffd||fffd||fffd||2b1||fffd|,hks_fa_interestdebttototalcapital
Function hks_fa_interestdebttototalcapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_interestdebttototalcapital = WindFunc("hks_fa_interestdebttototalcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd|,hks_fa_longdebttoworkingcapital
Function hks_fa_longdebttoworkingcapital(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_longdebttoworkingcapital = WindFunc("hks_fa_longdebttoworkingcapital", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_dupont_nptosales
Function hks_fa_dupont_nptosales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_dupont_nptosales = WindFunc("hks_fa_dupont_nptosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|/|3e2||2f0||1f0||fffd||fffd||fffd||fffd|,hks_fa_dupont_intburden
Function hks_fa_dupont_intburden(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_dupont_intburden = WindFunc("hks_fa_dupont_intburden", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||5ea||fffd||fffd|,hks_fa_arturn
Function hks_fa_arturn(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_arturn = WindFunc("hks_fa_arturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||5ea||fffd||fffd||fffd||fffd|,hks_fa_arturndays
Function hks_fa_arturndays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_arturndays = WindFunc("hks_fa_arturndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|/|fffd||fffd||56e||fffd||3fc||fffd|,hks_fa_ebitdatodebt
Function hks_fa_ebitdatodebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ebitdatodebt = WindFunc("hks_fa_ebitdatodebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoybps
Function hks_fa_yoybps(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoybps = WindFunc("hks_fa_yoybps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),hks_fa_ebit2
Function hks_fa_ebit2(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebit2 = WindFunc("hks_fa_ebit2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(hks_fa_ebit2) <> vbString Then
        hks_fa_ebit2 = hks_fa_ebit2 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||56e||fffd||fffd|,hks_fa_ocftonetdebt
Function hks_fa_ocftonetdebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ocftonetdebt = WindFunc("hks_fa_ocftonetdebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|ff||fffd||27e||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyocfps
Function hks_fa_yoyocfps(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyocfps = WindFunc("hks_fa_yoyocfps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|32f||fffd||fffd|)(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyroe
Function hks_fa_yoyroe(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyroe = WindFunc("hks_fa_yoyroe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyeps_basic
Function hks_fa_yoyeps_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyeps_basic = WindFunc("hks_fa_yoyeps_basic", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoy_or
Function hks_fa_yoy_or(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoy_or = WindFunc("hks_fa_yoy_or", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||5ea||fffd||fffd||fffd||fffd|,hks_fa_invturndays
Function hks_fa_invturndays(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_invturndays = WindFunc("hks_fa_invturndays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|,hks_fa_dupont_taxburden
Function hks_fa_dupont_taxburden(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_dupont_taxburden = WindFunc("hks_fa_dupont_taxburden", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_dupont_ebittosales
Function hks_fa_dupont_ebittosales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_dupont_ebittosales = WindFunc("hks_fa_dupont_ebittosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|eb||fffd||fffd|,hks_fa_grossmargin2
Function hks_fa_grossmargin2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_grossmargin2 = WindFunc("hks_fa_grossmargin2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_grossmargin2) <> vbString Then
        hks_fa_grossmargin2 = hks_fa_grossmargin2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_retainedearnings2
Function hks_fa_retainedearnings2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_retainedearnings2 = WindFunc("hks_fa_retainedearnings2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_retainedearnings2) <> vbString Then
        hks_fa_retainedearnings2 = hks_fa_retainedearnings2 / UnitVal_
    End If
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|FCFE,hks_fa_fcfe2
Function hks_fa_fcfe2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_fcfe2 = WindFunc("hks_fa_fcfe2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_fcfe2) <> vbString Then
        hks_fa_fcfe2 = hks_fa_fcfe2 / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|,hks_fa_fcff2
Function hks_fa_fcff2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_fcff2 = WindFunc("hks_fa_fcff2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_fcff2) <> vbString Then
        hks_fa_fcff2 = hks_fa_fcff2 / UnitVal_
    End If
End Function

'|4ea||fffd||fffd||fffd||2b1||fffd|,hks_fa_workingcapital2
Function hks_fa_workingcapital2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_workingcapital2 = WindFunc("hks_fa_workingcapital2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_workingcapital2) <> vbString Then
        hks_fa_workingcapital2 = hks_fa_workingcapital2 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||2b1||fffd|,hks_fa_networkingcapital2
Function hks_fa_networkingcapital2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_networkingcapital2 = WindFunc("hks_fa_networkingcapital2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_networkingcapital2) <> vbString Then
        hks_fa_networkingcapital2 = hks_fa_networkingcapital2 / UnitVal_
    End If
End Function

'|22b||fffd||fffd||376||fffd||fffd||fffd||2b1||fffd|,hks_fa_investcapital2
Function hks_fa_investcapital2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_investcapital2 = WindFunc("hks_fa_investcapital2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_investcapital2) <> vbString Then
        hks_fa_investcapital2 = hks_fa_investcapital2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,hks_fa_tangibleasset2
Function hks_fa_tangibleasset2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_tangibleasset2 = WindFunc("hks_fa_tangibleasset2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_tangibleasset2) <> vbString Then
        hks_fa_tangibleasset2 = hks_fa_tangibleasset2 / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd|,hks_fa_netdebt2
Function hks_fa_netdebt2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_netdebt2 = WindFunc("hks_fa_netdebt2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_netdebt2) <> vbString Then
        hks_fa_netdebt2 = hks_fa_netdebt2 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||56e||fffd||fffd|,hks_fa_interestdebt2
Function hks_fa_interestdebt2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_interestdebt2 = WindFunc("hks_fa_interestdebt2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_interestdebt2) <> vbString Then
        hks_fa_interestdebt2 = hks_fa_interestdebt2 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|,hks_fa_exinterestdebt_noncurrent2
Function hks_fa_exinterestdebt_noncurrent2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_exinterestdebt_noncurrent2 = WindFunc("hks_fa_exinterestdebt_noncurrent2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_exinterestdebt_noncurrent2) <> vbString Then
        hks_fa_exinterestdebt_noncurrent2 = hks_fa_exinterestdebt_noncurrent2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bc||fffd||fffd||fffd||fffd||6fe||fffd||fffd||fffd||32f||fffd||fffd|,hks_fa_da2
Function hks_fa_da2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_da2 = WindFunc("hks_fa_da2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),hks_fa_yoyop2
Function hks_fa_yoyop2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_yoyop2 = WindFunc("hks_fa_yoyop2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),s_info_industryName
Function s_info_industryName(WINDCODE_ As Variant, IndustryStandard_ As Integer, TYPE_ As Integer, TRADEDATE_ As Variant) As Variant
    s_info_industryName = WindFunc("s_info_industryName", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), IndustryStandard_, TYPE_, GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_nq_tradeday
Function s_nq_tradeday(WINDCODE_ As Variant, TRADEDATE_ As Variant, N_ As Integer) As Variant
    s_nq_tradeday = WindFunc("s_nq_tradeday", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), N_)
End Function

'|fffd||1f7||7b9b8||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_SHSC
Function s_info_SHSC(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_SHSC = WindFunc("s_info_SHSC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||2b1||ff||fffd||fffd||fffd||fffd||5b5|,s_ipo_par
Function s_ipo_par(WINDCODE_ As Variant) As Variant
    s_ipo_par = WindFunc("s_ipo_par", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|4bb||fffd||fffd||fffd||6b5||fffd||fffd||6b5||133||fffd||fffd||6bd||fffd||fffd|,s_stmnote_others_7636
Function s_stmnote_others_7636(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7636 = WindFunc("s_stmnote_others_7636", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7636) <> vbString Then
        s_stmnote_others_7636 = s_stmnote_others_7636 / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||6b5||fffd||fffd||6b5||fffd||4e6||fffd||fffd||56e||22f|,s_stmnote_others_7637
Function s_stmnote_others_7637(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7637 = WindFunc("s_stmnote_others_7637", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7637) <> vbString Then
        s_stmnote_others_7637 = s_stmnote_others_7637 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e|),s_stmnote_others_7639
Function s_stmnote_others_7639(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_others_7639 = WindFunc("s_stmnote_others_7639", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_others_7639) <> vbString Then
        s_stmnote_others_7639 = s_stmnote_others_7639 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5b5|2,hks_val_mv_ARD
Function hks_val_mv_ARD(WINDCODE_ As Variant, TRADEDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_val_mv_ARD = WindFunc("hks_val_mv_ARD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_val_mv_ARD) <> vbString Then
        hks_val_mv_ARD = hks_val_mv_ARD / UnitVal_
    End If
End Function

'|fffd||fffd||4ef||fffd||fffd|PE(LYR),s_val_pe_lyr_ARD
Function s_val_pe_lyr_ARD(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_pe_lyr_ARD = WindFunc("s_val_pe_lyr_ARD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||43e||fffd||fffd||fffd|PB(MRQ),s_val_pb_mrq_ARD
Function s_val_pb_mrq_ARD(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_pb_mrq_ARD = WindFunc("s_val_pb_mrq_ARD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|PCF(|fffd||fffd||4ea||fffd||5bd||fffd||fffd||fffd|TTM),s_val_pcf_ocfttm_ARD
Function s_val_pcf_ocfttm_ARD(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_pcf_ocfttm_ARD = WindFunc("s_val_pcf_ocfttm_ARD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|PCF(|fffd||fffd||4ea||fffd||5bd||fffd||fffd||fffd|LYR),s_val_pcf_ocflyr_ARD
Function s_val_pcf_ocflyr_ARD(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_pcf_ocflyr_ARD = WindFunc("s_val_pcf_ocflyr_ARD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|PCF(|fffd||5bd||fffd||fffd||fffd||fffd||fffd|LYR),s_val_pcf_nflyr_ARD
Function s_val_pcf_nflyr_ARD(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_pcf_nflyr_ARD = WindFunc("s_val_pcf_nflyr_ARD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|PS(LYR),s_val_ps_lyr_ARD
Function s_val_ps_lyr_ARD(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_ps_lyr_ARD = WindFunc("s_val_ps_lyr_ARD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||228||fffd||fffd|(MRQ),s_fa_equity_mrq2
Function s_fa_equity_mrq2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_equity_mrq2 = WindFunc("s_fa_equity_mrq2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_fa_equity_mrq2) <> vbString Then
        s_fa_equity_mrq2 = s_fa_equity_mrq2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_marketMaker
Function s_ipo_marketMaker(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_ipo_marketMaker = WindFunc("s_ipo_marketMaker", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||3af||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_fellow_IECApprovalDate
Function s_fellow_IECApprovalDate(WINDCODE_ As Variant, Year_ As Integer) As Variant
    s_fellow_IECApprovalDate = WindFunc("s_fellow_IECApprovalDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_fa_yoyprofit
Function s_fa_yoyprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_yoyprofit = WindFunc("s_fa_yoyprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||be34||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_cagr_tr
Function hks_fa_cagr_tr(WINDCODE_ As Variant, Year_ As Integer, N_ As Integer) As Variant
    hks_fa_cagr_tr = WindFunc("hks_fa_cagr_tr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Year_, N_)
End Function

'|fffd||fffd||fffd||fffd||fffd||f8d3a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_cagr_netprofit
Function hks_fa_cagr_netprofit(WINDCODE_ As Variant, Year_ As Integer, N_ As Integer) As Variant
    hks_fa_cagr_netprofit = WindFunc("hks_fa_cagr_netprofit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Year_, N_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_gr
Function hks_growth_gr(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_gr = WindFunc("hks_growth_gr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|4ea||4b5||fffd||733||271||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_gc
Function hks_growth_gc(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_gc = WindFunc("hks_growth_gc", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_or
Function hks_growth_or(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_or = WindFunc("hks_growth_or", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_op
Function hks_growth_op(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_op = WindFunc("hks_growth_op", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_operateincome
Function hks_growth_operateincome(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_operateincome = WindFunc("hks_growth_operateincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_investincome
Function hks_growth_investincome(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_investincome = WindFunc("hks_growth_investincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_ebt
Function hks_growth_ebt(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_ebt = WindFunc("hks_growth_ebt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_netprofit
Function hks_growth_netprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_netprofit = WindFunc("hks_growth_netprofit", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_ocf
Function hks_growth_ocf(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_ocf = WindFunc("hks_growth_ocf", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||2b2||fffd||fffd||73c||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_assets
Function hks_growth_assets(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_assets = WindFunc("hks_growth_assets", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||276||fffd||228||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_totalequity
Function hks_growth_totalequity(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_totalequity = WindFunc("hks_growth_totalequity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||228||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_equity
Function hks_growth_equity(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_equity = WindFunc("hks_growth_equity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_profittosales
Function hks_growth_profittosales(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_profittosales = WindFunc("hks_growth_profittosales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(N|fffd||fffd|,|fffd||fffd||fffd||fffd||fffd||fffd|),hks_growth_roe
Function hks_growth_roe(WINDCODE_ As Variant, REPORTDATE_ As Variant, N_ As Integer) As Variant
    hks_growth_roe = WindFunc("hks_growth_roe", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), N_)
End Function

'|524||fffd||fffd||b6||fffd||fffd||fffd||fffd||fffd||fffd|,s_div_preDisclosureDate
Function s_div_preDisclosureDate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_div_preDisclosureDate = WindFunc("s_div_preDisclosureDate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|ff||fffd||fffd|DR|fffd||fffd||fffd||fffd||fffd||277||fffd||fffd||fffd|,hks_info_RO2
Function hks_info_RO2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_info_RO2 = WindFunc("hks_info_RO2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||2f1||fffd||3bb||fffd||fffd|,hks_info_cur2
Function hks_info_cur2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_info_cur2 = WindFunc("hks_info_cur2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS(TTM),s_fa_eps_ttm2
Function s_fa_eps_ttm2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_fa_eps_ttm2 = WindFunc("s_fa_eps_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|ff||fffd||27e||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_ocfps_ttm2
Function s_fa_ocfps_ttm2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_fa_ocfps_ttm2 = WindFunc("s_fa_ocfps_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_orps_ttm2
Function s_fa_orps_ttm2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_fa_orps_ttm2 = WindFunc("s_fa_orps_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_cfps_ttm2
Function s_fa_cfps_ttm2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_fa_cfps_ttm2 = WindFunc("s_fa_cfps_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||139||276||fffd||228||fffd||fffd|(LF),s_fa_equity_new2
Function s_fa_equity_new2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_equity_new2 = WindFunc("s_fa_equity_new2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_fa_equity_new2) <> vbString Then
        s_fa_equity_new2 = s_fa_equity_new2 / UnitVal_
    End If
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_eps_ttm2
Function hks_fa_eps_ttm2(WINDCODE_ As Variant, TRADEDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_eps_ttm2 = WindFunc("hks_fa_eps_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||27e||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_ocfps_ttm2
Function hks_fa_ocfps_ttm2(WINDCODE_ As Variant, TRADEDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_ocfps_ttm2 = WindFunc("hks_fa_ocfps_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_cfps_ttm2
Function hks_fa_cfps_ttm2(WINDCODE_ As Variant, TRADEDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_cfps_ttm2 = WindFunc("hks_fa_cfps_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_orps_ttm
Function hks_fa_orps_ttm(WINDCODE_ As Variant, TRADEDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_orps_ttm = WindFunc("hks_fa_orps_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||5b5|,s_pq_avgMV
Function s_pq_avgMV(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_pq_avgMV = WindFunc("s_pq_avgMV", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_pq_avgMV) <> vbString Then
        s_pq_avgMV = s_pq_avgMV / UnitVal_
    End If
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,hks_ipo_tbps_max
Function hks_ipo_tbps_max(WINDCODE_ As Variant) As Variant
    hks_ipo_tbps_max = WindFunc("hks_ipo_tbps_max", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|,hks_ipo_tbps_min
Function hks_ipo_tbps_min(WINDCODE_ As Variant) As Variant
    hks_ipo_tbps_min = WindFunc("hks_ipo_tbps_min", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"))
End Function

'|56e||22f||fffd||37b||fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_latestissurercreditrating2
Function b_info_latestissurercreditrating2(WINDCODE_ As Variant, TRADEDATE_ As Variant, RATINGAGENCY_ As String, RatedCompanyType_ As Byte) As Variant
    b_info_latestissurercreditrating2 = WindFunc("b_info_latestissurercreditrating2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_, RatedCompanyType_)
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd|,b_anal_durationifexercise
Function b_anal_durationifexercise(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_durationifexercise = WindFunc("b_anal_durationifexercise", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||2a3||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),b_anal_termifexercise
Function b_anal_termifexercise(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_termifexercise = WindFunc("b_anal_termifexercise", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6f8||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_calc_adjyield
Function b_calc_adjyield(WINDCODE_ As Variant, TRADEDATE_ As Variant, ExtraCoupon_ As Double, BondPrice_ As Double, Optional PriceType_ As Byte = 2) As Variant
    b_calc_adjyield = WindFunc("b_calc_adjyield", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), ExtraCoupon_, BondPrice_, PriceType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_credit_linedate
Function b_credit_linedate(WINDCODE_ As Variant) As Variant
    b_credit_linedate = WindFunc("b_credit_linedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_issuer_cityinvestmentbondgeo
Function b_issuer_cityinvestmentbondgeo(WINDCODE_ As Variant) As Variant
    b_issuer_cityinvestmentbondgeo = WindFunc("b_issuer_cityinvestmentbondgeo", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,b_rate_lateissuerchng
Function b_rate_lateissuerchng(WINDCODE_ As Variant) As Variant
    b_rate_lateissuerchng = WindFunc("b_rate_lateissuerchng", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd|,b_rate_lateguarantorfwd
Function b_rate_lateguarantorfwd(WINDCODE_ As Variant) As Variant
    b_rate_lateguarantorfwd = WindFunc("b_rate_lateguarantorfwd", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_lateguarantordate
Function b_rate_lateguarantordate(WINDCODE_ As Variant) As Variant
    b_rate_lateguarantordate = WindFunc("b_rate_lateguarantordate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,b_rate_lateguarantorchng
Function b_rate_lateguarantorchng(WINDCODE_ As Variant) As Variant
    b_rate_lateguarantorchng = WindFunc("b_rate_lateguarantorchng", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|56e||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_ratebond
Function b_rate_ratebond(WINDCODE_ As Variant, TRADEDATE_ As Variant, RATINGAGENCY_ As String) As Variant
    b_rate_ratebond = WindFunc("b_rate_ratebond", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_)
End Function

'|56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,b_rate_chngbond
Function b_rate_chngbond(WINDCODE_ As Variant, TRADEDATE_ As Variant, RATINGAGENCY_ As String) As Variant
    b_rate_chngbond = WindFunc("b_rate_chngbond", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_)
End Function

'|56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_agencybond
Function b_rate_agencybond(WINDCODE_ As Variant, TRADEDATE_ As Variant, RATINGAGENCY_ As String) As Variant
    b_rate_agencybond = WindFunc("b_rate_agencybond", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd|,b_rate_fwdissuer
Function b_rate_fwdissuer(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    b_rate_fwdissuer = WindFunc("b_rate_fwdissuer", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,b_rate_chngissuer
Function b_rate_chngissuer(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    b_rate_chngissuer = WindFunc("b_rate_chngissuer", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_agencyissuer
Function b_rate_agencyissuer(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    b_rate_agencyissuer = WindFunc("b_rate_agencyissuer", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_rateguarantor
Function b_rate_rateguarantor(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    b_rate_rateguarantor = WindFunc("b_rate_rateguarantor", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd|,b_rate_fwdguarantor
Function b_rate_fwdguarantor(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    b_rate_fwdguarantor = WindFunc("b_rate_fwdguarantor", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,b_rate_chngguarantor
Function b_rate_chngguarantor(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    b_rate_chngguarantor = WindFunc("b_rate_chngguarantor", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_agencyguarantor
Function b_rate_agencyguarantor(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    b_rate_agencyguarantor = WindFunc("b_rate_agencyguarantor", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||27f||fffd||fffd||5b9||fffd||fffd|,b_tender_payenddate
Function b_tender_payenddate(WINDCODE_ As Variant) As Variant
    b_tender_payenddate = WindFunc("b_tender_payenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|376||fffd||fffd|(|fffd||ae7a|)|fffd||fffd||fffd||fffd|,b_tendrst_tenderamount
Function b_tendrst_tenderamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    b_tendrst_tenderamount = WindFunc("b_tendrst_tenderamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
    If VarType(b_tendrst_tenderamount) <> vbString Then
        b_tendrst_tenderamount = b_tendrst_tenderamount / UnitVal_
    End If
End Function

'|fffd||fffd||427||376||fffd||fffd|(|fffd||ae7a|)|fffd||fffd||fffd||fffd|,b_tendrst_effectinvestors
Function b_tendrst_effectinvestors(WINDCODE_ As Variant) As Variant
    b_tendrst_effectinvestors = WindFunc("b_tendrst_effectinvestors", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||6b7||fffd||fffd||43d||fffd||5b9||fffd||fffd|,b_dcm_firstissueenddate
Function b_dcm_firstissueenddate(WINDCODE_ As Variant) As Variant
    b_dcm_firstissueenddate = WindFunc("b_dcm_firstissueenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||2bd||fffd||639||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|),b_cvn_rateofstdbndcsi
Function b_cvn_rateofstdbndcsi(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_cvn_rateofstdbndcsi = WindFunc("b_cvn_rateofstdbndcsi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||4de2||fffd||fffd||56e||22f||fffd||736||fffd|,b_fina_totalamount2
Function b_fina_totalamount2(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional BondType_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
    b_fina_totalamount2 = WindFunc("b_fina_totalamount2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(StartDate_), GetValidDate(DATE_), BondType_)
    If VarType(b_fina_totalamount2) <> vbString Then
        b_fina_totalamount2 = b_fina_totalamount2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4de2||fffd||fffd||56e||22f||fffd||fffd||13f|,b_fina_totalnumber
Function b_fina_totalnumber(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional BondType_ As Integer = 1) As Variant
    b_fina_totalnumber = WindFunc("b_fina_totalnumber", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(StartDate_), GetValidDate(DATE_), BondType_)
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||13f|,b_fina_remainingnumber
Function b_fina_remainingnumber(WINDCODE_ As Variant, Optional BondType_ As Integer = 1) As Variant
    b_fina_remainingnumber = WindFunc("b_fina_remainingnumber", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), BondType_)
End Function

'|1b1||fffd||fffd||fffd||fffd||fffd||fffd|(|5b8||fffd||fffd||fffd||fffd||fffd||fffd|),b_info_couponrate3
Function b_info_couponrate3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_info_couponrate3 = WindFunc("b_info_couponrate3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'NAFMII|fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||fffd|,b_issue_DcmValuation
Function b_issue_DcmValuation(WINDCODE_ As Variant) As Variant
    b_issue_DcmValuation = WindFunc("b_issue_DcmValuation", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||fffd|,b_anal_YTM_IfExe
Function b_anal_YTM_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_YTM_IfExe = WindFunc("b_anal_YTM_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_anal_ModiDuration_IfExe
Function b_anal_ModiDuration_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_ModiDuration_IfExe = WindFunc("b_anal_ModiDuration_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||379||fffd||fffd|,b_anal_Convexity_IfExe
Function b_anal_Convexity_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_Convexity_IfExe = WindFunc("b_anal_Convexity_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||5b5|,b_anal_BaseValue_IfExe
Function b_anal_BaseValue_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_BaseValue_IfExe = WindFunc("b_anal_BaseValue_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,b_anal_BDuration_IfExe
Function b_anal_BDuration_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_BDuration_IfExe = WindFunc("b_anal_BDuration_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||5fc||379||fffd||fffd|,b_anal_BConvexity_IfExe
Function b_anal_BConvexity_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_BConvexity_IfExe = WindFunc("b_anal_BConvexity_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_anal_SDuration_IfExe
Function b_anal_SDuration_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_SDuration_IfExe = WindFunc("b_anal_SDuration_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||379||fffd||fffd|,b_anal_SConvexity_IfExe
Function b_anal_SConvexity_IfExe(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_SConvexity_IfExe = WindFunc("b_anal_SConvexity_IfExe", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||1bd||328||fffd||fffd||fffd||33c||fffd|,s_dq_close_fixedincome
Function s_dq_close_fixedincome(WINDCODE_ As Variant, TRADEDATE_ As Variant, PriceType_ As Byte) As Variant
    s_dq_close_fixedincome = WindFunc("s_dq_close_fixedincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), PriceType_)
End Function

'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||1bd||328||1bd||fffd||fffd||fffd||fffd|,s_dq_avgprice_fixedincome
Function s_dq_avgprice_fixedincome(WINDCODE_ As Variant, TRADEDATE_ As Variant, PriceType_ As Byte) As Variant
    s_dq_avgprice_fixedincome = WindFunc("s_dq_avgprice_fixedincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), PriceType_)
End Function

'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||1bd||328||fffd||27d||fffd||fffd||fffd|,s_dq_volume_fixedincome
Function s_dq_volume_fixedincome(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_volume_fixedincome = WindFunc("s_dq_volume_fixedincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_volume_fixedincome) <> vbString Then
        s_dq_volume_fixedincome = s_dq_volume_fixedincome / UnitVal_
    End If
End Function

'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||1bd||328||fffd||27d||fffd||fffd||fffd||fffd|,s_dq_amount_fixedincome
Function s_dq_amount_fixedincome(WINDCODE_ As Variant, TRADEDATE_ As Variant, PriceType_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_dq_amount_fixedincome = WindFunc("s_dq_amount_fixedincome", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), PriceType_)
    If VarType(s_dq_amount_fixedincome) <> vbString Then
        s_dq_amount_fixedincome = s_dq_amount_fixedincome / UnitVal_
    End If
End Function

'|fffd||fffd||5a4||fffd||fffd||fffd||fffd||1bd||328||fffd||27d||fffd||fffd||fffd||fffd||fffd|,s_dq_dealnum_fixedincome
Function s_dq_dealnum_fixedincome(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_dealnum_fixedincome = WindFunc("s_dq_dealnum_fixedincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||2a3||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|),b_info_weightedrt2
Function b_info_weightedrt2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_info_weightedrt2 = WindFunc("b_info_weightedrt2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'CTD,b_tbf_CTD
Function b_tbf_CTD(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional ExchangeType_ As String = "NIB") As Variant
    b_tbf_CTD = WindFunc("b_tbf_CTD", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), ExchangeType_)
End Function

'|5ea||fffd||fffd||fffd||fffd||fffd||fffd|,b_tbf_cvf2
Function b_tbf_cvf2(WINDCODE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_cvf2 = WindFunc("b_tbf_cvf2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), TYPE_)
End Function

'IRR,b_tbf_IRR
Function b_tbf_IRR(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_IRR = WindFunc("b_tbf_IRR", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2|,b_tbf_Interest
Function b_tbf_Interest(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_Interest = WindFunc("b_tbf_Interest", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2|,b_tbf_Payment
Function b_tbf_Payment(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_Payment = WindFunc("b_tbf_Payment", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||271||fffd|,b_tbf_DeliverPrice
Function b_tbf_DeliverPrice(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_DeliverPrice = WindFunc("b_tbf_DeliverPrice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||1b1||fffd||6f8||fffd|,b_tbf_InvoicePrice
Function b_tbf_InvoicePrice(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_InvoicePrice = WindFunc("b_tbf_InvoicePrice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||5bc||6f2||fffd|,b_tbf_Spread
Function b_tbf_Spread(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_Spread = WindFunc("b_tbf_Spread", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd|,b_tbf_Basis
Function b_tbf_Basis(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_Basis = WindFunc("b_tbf_Basis", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|5a4||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||3af||fffd||fffd||fffd||fffd||fffd||fffd|,b_issue_officialdocdate
Function b_issue_officialdocdate(WINDCODE_ As Variant) As Variant
    b_issue_officialdocdate = WindFunc("b_issue_officialdocdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd|,b_info_issuerratingoutlook
Function b_info_issuerratingoutlook(WINDCODE_ As Variant) As Variant
    b_info_issuerratingoutlook = WindFunc("b_info_issuerratingoutlook", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||431||fffd||2b1||fffd||fffd|,b_tender_time
Function b_tender_time(WINDCODE_ As Variant) As Variant
    b_tender_time = WindFunc("b_tender_time", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|5ea||fffd||274||fffd||fffd||fffd|,b_clause_conversion_code
Function b_clause_conversion_code(WINDCODE_ As Variant) As Variant
    b_clause_conversion_code = WindFunc("b_clause_conversion_code", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||6f4||fffd||fffd||fffd|,b_info_putcode
Function b_info_putcode(WINDCODE_ As Variant) As Variant
    b_info_putcode = WindFunc("b_info_putcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||22b||fffd||fffd|(|fffd||439||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_dirty_cfets
Function b_anal_dirty_cfets(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_dirty_cfets = WindFunc("b_anal_dirty_cfets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd|(|fffd||439||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_net_cfets
Function b_anal_net_cfets(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_net_cfets = WindFunc("b_anal_net_cfets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||439||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_yield_cfets
Function b_anal_yield_cfets(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_anal_yield_cfets = WindFunc("b_anal_yield_cfets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||b9||fffd||5b5||fffd||fffd||fffd||fffd|(|fffd||439||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),b_anal_lastdate_cfets
Function b_anal_lastdate_cfets(WINDCODE_ As Variant) As Variant
    b_anal_lastdate_cfets = WindFunc("b_anal_lastdate_cfets", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||2b7||fffd||fffd||2b9||fffd||fffd||fffd||fffd||fffd||176||fffd||fffd|,b_credit_lineused2
Function b_credit_lineused2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_credit_lineused2 = WindFunc("b_credit_lineused2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||5f8||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_issue_firstpricedate
Function b_issue_firstpricedate(WINDCODE_ As Variant) As Variant
    b_issue_firstpricedate = WindFunc("b_issue_firstpricedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||228||fffd||2bd||fffd||fffd||fffd||fffd||fffd|,b_info_fundarrialdate
Function b_info_fundarrialdate(WINDCODE_ As Variant, Optional TYPE_ As String = "C") As Variant
    b_info_fundarrialdate = WindFunc("b_info_fundarrialdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), TYPE_)
End Function

'|fffd||fffd||3e2||fffd||fffd||5fc|,b_info_actualbenchmark
Function b_info_actualbenchmark(WINDCODE_ As Variant) As Variant
    b_info_actualbenchmark = WindFunc("b_info_actualbenchmark", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||5af||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_organizationcode
Function s_info_organizationcode(WINDCODE_ As Variant) As Variant
    s_info_organizationcode = WindFunc("s_info_organizationcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||4b5||42d||fffd||fffd||fffd||fffd||fffd|,f_info_AMACcode
Function f_info_AMACcode(WINDCODE_ As Variant) As Variant
    f_info_AMACcode = WindFunc("f_info_AMACcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,f_info_backendcode
Function f_info_backendcode(WINDCODE_ As Variant) As Variant
    f_info_backendcode = WindFunc("f_info_backendcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||1b2||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_exchangecode
Function f_info_exchangecode(WINDCODE_ As Variant) As Variant
    f_info_exchangecode = WindFunc("f_info_exchangecode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||6bc||fffd||fffd|,f_info_exchangeshortname
Function f_info_exchangeshortname(WINDCODE_ As Variant) As Variant
    f_info_exchangeshortname = WindFunc("f_info_exchangeshortname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||2f4||fffd||fffd||fffd|,f_info_frontendcode
Function f_info_frontendcode(WINDCODE_ As Variant) As Variant
    f_info_frontendcode = WindFunc("f_info_frontendcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,f_info_issuercode
Function f_info_issuercode(WINDCODE_ As Variant) As Variant
    f_info_issuercode = WindFunc("f_info_issuercode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd|,f_info_issuershortname
Function f_info_issuershortname(WINDCODE_ As Variant) As Variant
    f_info_issuershortname = WindFunc("f_info_issuershortname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'2015.08 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|36c||fffd||fffd||2fe|B|fffd||fffd|Wind|fffd||fffd||fffd||fffd|,s_info_bsharewindcode
Function s_info_bsharewindcode(WINDCODE_ As Variant) As Variant
    s_info_bsharewindcode = WindFunc("s_info_bsharewindcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|Surprise,s_west_eps_surprise
Function s_west_eps_surprise(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_eps_surprise = WindFunc("s_west_eps_surprise", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|Surprise,s_west_sales_surprise
Function s_west_sales_surprise(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_west_sales_surprise = WindFunc("s_west_sales_surprise", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
    If VarType(s_west_sales_surprise) <> vbString Then
        s_west_sales_surprise = s_west_sales_surprise / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|Surprise,s_west_netprofit_surprise
Function s_west_netprofit_surprise(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_west_netprofit_surprise = WindFunc("s_west_netprofit_surprise", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
    If VarType(s_west_netprofit_surprise) <> vbString Then
        s_west_netprofit_surprise = s_west_netprofit_surprise / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|Surprise,s_west_bps_surprise
Function s_west_bps_surprise(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_bps_surprise = WindFunc("s_west_bps_surprise", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|Surprise,s_west_avgebt_surprise
Function s_west_avgebt_surprise(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebt_surprise = WindFunc("s_west_avgebt_surprise", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
    If VarType(s_west_avgebt_surprise) <> vbString Then
        s_west_avgebt_surprise = s_west_avgebt_surprise / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|Surprise,s_west_avgoperatingprofit_surprise
Function s_west_avgoperatingprofit_surprise(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoperatingprofit_surprise = WindFunc("s_west_avgoperatingprofit_surprise", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
    If VarType(s_west_avgoperatingprofit_surprise) <> vbString Then
        s_west_avgoperatingprofit_surprise = s_west_avgoperatingprofit_surprise / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd|Surprise,s_west_avgoc_surprise
Function s_west_avgoc_surprise(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoc_surprise = WindFunc("s_west_avgoc_surprise", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
    If VarType(s_west_avgoc_surprise) <> vbString Then
        s_west_avgoc_surprise = s_west_avgoc_surprise / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|Surprise|fffd||677||5b1||fffd|,s_west_eps_surprise_pct
Function s_west_eps_surprise_pct(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_eps_surprise_pct = WindFunc("s_west_eps_surprise_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|Surprise|fffd||677||5b1||fffd|,s_west_sales_surprise_pct
Function s_west_sales_surprise_pct(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_sales_surprise_pct = WindFunc("s_west_sales_surprise_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd|Surprise|fffd||677||5b1||fffd|,s_west_netprofit_surprise_pct
Function s_west_netprofit_surprise_pct(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_netprofit_surprise_pct = WindFunc("s_west_netprofit_surprise_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|Surprise|fffd||677||5b1||fffd|,s_west_bps_surprise_pct
Function s_west_bps_surprise_pct(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_bps_surprise_pct = WindFunc("s_west_bps_surprise_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd|Surprise|fffd||677||5b1||fffd|,s_west_avgebt_surprise_pct
Function s_west_avgebt_surprise_pct(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_avgebt_surprise_pct = WindFunc("s_west_avgebt_surprise_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|Surprise|fffd||677||5b1||fffd|,s_west_avgoperatingprofit_surprise_pct
Function s_west_avgoperatingprofit_surprise_pct(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_avgoperatingprofit_surprise_pct = WindFunc("s_west_avgoperatingprofit_surprise_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd|Surprise|fffd||677||5b1||fffd|,s_west_avgoc_surprise_pct
Function s_west_avgoc_surprise_pct(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional TYPE_ As Integer) As Variant
    s_west_avgoc_surprise_pct = WindFunc("s_west_avgoc_surprise_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, TYPE_)
End Function

'|4bb||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd||36c||fffd||fffd|(FY2|fffd||fffd|FY1),s_west_avgnp_yoy
Function s_west_avgnp_yoy(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_west_avgnp_yoy = WindFunc("s_west_avgnp_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_marketmakeDate
Function s_info_marketmakeDate(WINDCODE_ As Variant) As Variant
    s_info_marketmakeDate = WindFunc("s_info_marketmakeDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||fffd||f7||fffd||2bd|,s_info_transfertype
Function s_info_transfertype(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_transfertype = WindFunc("s_info_transfertype", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_mamv
Function s_val_mamv(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_val_mamv = WindFunc("s_val_mamv", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
    If VarType(s_val_mamv) <> vbString Then
        s_val_mamv = s_val_mamv / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|PE(FY0,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_mape_fy0
Function s_val_mape_fy0(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_mape_fy0 = WindFunc("s_val_mape_fy0", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd|PE(FY1,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_mape_fy1
Function s_val_mape_fy1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_mape_fy1 = WindFunc("s_val_mape_fy1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd|PE(FY2,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_mape_fy2
Function s_val_mape_fy2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_mape_fy2 = WindFunc("s_val_mape_fy2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd|PE(FY3,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_mape_fy3
Function s_val_mape_fy3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_mape_fy3 = WindFunc("s_val_mape_fy3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FY0,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_manetprofit_fy0
Function s_val_manetprofit_fy0(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_val_manetprofit_fy0 = WindFunc("s_val_manetprofit_fy0", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
    If VarType(s_val_manetprofit_fy0) <> vbString Then
        s_val_manetprofit_fy0 = s_val_manetprofit_fy0 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FY1,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_manetprofit_fy1
Function s_val_manetprofit_fy1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_val_manetprofit_fy1 = WindFunc("s_val_manetprofit_fy1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
    If VarType(s_val_manetprofit_fy1) <> vbString Then
        s_val_manetprofit_fy1 = s_val_manetprofit_fy1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FY2,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_manetprofit_fy2
Function s_val_manetprofit_fy2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_val_manetprofit_fy2 = WindFunc("s_val_manetprofit_fy2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
    If VarType(s_val_manetprofit_fy2) <> vbString Then
        s_val_manetprofit_fy2 = s_val_manetprofit_fy2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(FY3,|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_manetprofit_fy3
Function s_val_manetprofit_fy3(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_val_manetprofit_fy3 = WindFunc("s_val_manetprofit_fy3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
    If VarType(s_val_manetprofit_fy3) <> vbString Then
        s_val_manetprofit_fy3 = s_val_manetprofit_fy3 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||739||271||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|),s_val_matotalshares
Function s_val_matotalshares(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_val_matotalshares = WindFunc("s_val_matotalshares", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate_New(TRADEDATE_))
    If VarType(s_val_matotalshares) <> vbString Then
        s_val_matotalshares = s_val_matotalshares / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f3||fffd||fffd|,b_info_paymentorder
Function b_info_paymentorder(WINDCODE_ As Variant) As Variant
    b_info_paymentorder = WindFunc("b_info_paymentorder", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||5fc||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||2b1|),b_info_baserate2
Function b_info_baserate2(WINDCODE_ As Variant) As Variant
    b_info_baserate2 = WindFunc("b_info_baserate2", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||5fc||fffd||fffd||fffd||fffd|(|5b8||fffd||fffd||fffd||fffd||fffd||fffd|),b_info_baserate3
Function b_info_baserate3(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_info_baserate3 = WindFunc("b_info_baserate3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_spread2
Function b_info_spread2(WINDCODE_ As Variant) As Variant
    b_info_spread2 = WindFunc("b_info_spread2", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_interestfloor
Function b_info_interestfloor(WINDCODE_ As Variant) As Variant
    b_info_interestfloor = WindFunc("b_info_interestfloor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||635||1fc||fffd||fffd||fffd|,b_info_callrecdate
Function b_info_callrecdate(WINDCODE_ As Variant) As Variant
    b_info_callrecdate = WindFunc("b_info_callrecdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||56e||fffd||431||ade2||fffd||434||fffd||fffd||fffd|,b_tendrst_code
Function b_tendrst_code(WINDCODE_ As Variant) As Variant
    b_tendrst_code = WindFunc("b_tendrst_code", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd||fffd|,b_info_shclearl1type
Function b_info_shclearl1type(WINDCODE_ As Variant) As Variant
    b_info_shclearl1type = WindFunc("b_info_shclearl1type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'2015.09|fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,b_info_termnote
Function b_info_termnote(WINDCODE_ As Variant) As Variant
    b_info_termnote = WindFunc("b_info_termnote", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_info_prepayportion
Function b_info_prepayportion(WINDCODE_ As Variant, Serial_ As Integer) As Variant
    b_info_prepayportion = WindFunc("b_info_prepayportion", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Serial_)
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||2bd|,b_info_prepaymethod
Function b_info_prepaymethod(WINDCODE_ As Variant) As Variant
    b_info_prepaymethod = WindFunc("b_info_prepaymethod", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,b_info_latestpar
Function b_info_latestpar(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_info_latestpar = WindFunc("b_info_latestpar", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_pq_pctchange_low
Function s_pq_pctchange_low(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_pctchange_low = WindFunc("s_pq_pctchange_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd|,s_pq_pctchange_high
Function s_pq_pctchange_high(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_pctchange_high = WindFunc("s_pq_pctchange_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7fc||6f5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_pq_pctchange_lowest
Function s_pq_pctchange_lowest(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_pctchange_lowest = WindFunc("s_pq_pctchange_lowest", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||37c||6f5||fffd||fffd||fffd||fffd||fffd||1f7||fffd|,s_pq_pctchange_highest
Function s_pq_pctchange_highest(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_pctchange_highest = WindFunc("s_pq_pctchange_highest", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd||3fc||fffd|,s_fellow_collection_t
Function s_fellow_collection_t(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fellow_collection_t = WindFunc("s_fellow_collection_t", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
    If VarType(s_fellow_collection_t) <> vbString Then
        s_fellow_collection_t = s_fellow_collection_t / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||5b0||fffd||fffd||43d||fffd||fffd||3fc||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_emplpayable_add
Function s_stmnote_emplpayable_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplpayable_add = WindFunc("s_stmnote_emplpayable_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplpayable_add) <> vbString Then
        s_stmnote_emplpayable_add = s_stmnote_emplpayable_add / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2a1||fffd||fffd||fffd||fffd||218bd||fffd||fffd||fffd||fffd||372||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_ben_add
Function s_stmnote_ben_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ben_add = WindFunc("s_stmnote_ben_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ben_add) <> vbString Then
        s_stmnote_ben_add = s_stmnote_ben_add / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||5b9||fffd||fffd|,b_info_carryenddate
Function b_info_carryenddate(WINDCODE_ As Variant) As Variant
    b_info_carryenddate = WindFunc("b_info_carryenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd|,b_info_ratingoutlooks
Function b_info_ratingoutlooks(WINDCODE_ As Variant) As Variant
    b_info_ratingoutlooks = WindFunc("b_info_ratingoutlooks", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd|,b_rate_changesofrating
Function b_rate_changesofrating(WINDCODE_ As Variant) As Variant
    b_rate_changesofrating = WindFunc("b_rate_changesofrating", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'ISIN|fffd||fffd||221|Wind|fffd||fffd||fffd||fffd|,isin_windcode
Function isin_windcode(ISINCODE_ As String) As Variant
    isin_windcode = WindFunc("isin_windcode", 1, 1, ISINCODE_)
End Function

'2015.11 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|524||fffd||6fbb||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_changemax
Function s_profitnotice_changemax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_changemax = WindFunc("s_profitnotice_changemax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|524||fffd||6fbb||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_changemin
Function s_profitnotice_changemin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_changemin = WindFunc("s_profitnotice_changemin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|524||fffd||6fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_netprofitmax
Function s_profitnotice_netprofitmax(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_profitnotice_netprofitmax = WindFunc("s_profitnotice_netprofitmax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_profitnotice_netprofitmax) <> vbString Then
        s_profitnotice_netprofitmax = s_profitnotice_netprofitmax / UnitVal_
    End If
End Function

'|524||fffd||6fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_netprofitmin
Function s_profitnotice_netprofitmin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_profitnotice_netprofitmin = WindFunc("s_profitnotice_netprofitmin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_profitnotice_netprofitmin) <> vbString Then
        s_profitnotice_netprofitmin = s_profitnotice_netprofitmin / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||33c||fffd||fffd||fffd|,s_neeq_marketmakernum
Function s_neeq_marketmakernum(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_neeq_marketmakernum = WindFunc("s_neeq_marketmakernum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||530||fffd||fffd|,s_neeq_park
Function s_neeq_park(WINDCODE_ As Variant) As Variant
    s_neeq_park = WindFunc("s_neeq_park", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||1b9||fffd||fffd||fffd||fffd||fffd|,s_neeq_listanndate
Function s_neeq_listanndate(WINDCODE_ As Variant) As Variant
    s_neeq_listanndate = WindFunc("s_neeq_listanndate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||fffd|,s_neeq_marketmakeanndate
Function s_neeq_marketmakeanndate(WINDCODE_ As Variant) As Variant
    s_neeq_marketmakeanndate = WindFunc("s_neeq_marketmakeanndate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||363||fffd||fffd||fffd||fffd||fffd||fffd|,s_dq_suspenddays
Function s_dq_suspenddays(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_suspenddays = WindFunc("s_dq_suspenddays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||5bd||fffd||5ba||fffd||fffd||736||fffd|,s_div_aualaccmdiv2
Function s_div_aualaccmdiv2(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_div_aualaccmdiv2 = WindFunc("s_div_aualaccmdiv2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_div_aualaccmdiv2) <> vbString Then
        s_div_aualaccmdiv2 = s_div_aualaccmdiv2 / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||276||fffd||fffd||5b9||271||fffd||fffd||fffd|,s_holder_liqpct
Function s_holder_liqpct(WINDCODE_ As Variant, DEALDATE_ As Variant, Sequence_ As Byte) As Variant
    s_holder_liqpct = WindFunc("s_holder_liqpct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Sequence_)
End Function

'|fffd||fffd||228||56e||fffd||fffd||228||fffd||fffd||fffd||fffd|,b_info_execmaturityembedded
Function b_info_execmaturityembedded(WINDCODE_ As Variant) As Variant
    b_info_execmaturityembedded = WindFunc("b_info_execmaturityembedded", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||431||fffd||fffd||fffd|,f_info_issuecurrencycode
Function f_info_issuecurrencycode(WINDCODE_ As Variant) As Variant
    f_info_issuecurrencycode = WindFunc("f_info_issuecurrencycode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||56e||22f||fffd||fffd||fffd||fffd|,b_info_anchorbond
Function b_info_anchorbond(WINDCODE_ As Variant) As Variant
    b_info_anchorbond = WindFunc("b_info_anchorbond", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'Wind|fffd||536||fffd||fffd||fffd||fffd||fffd||fffd|,prewindCode
Function prewindCode(WINDCODE_ As Variant) As Variant
    prewindCode = WindFunc("prewindCode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, ""))
End Function

'2015.12 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|536||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_tbf_FYTM
Function b_tbf_FYTM(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_FYTM = WindFunc("b_tbf_FYTM", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,b_tbf_netbasis
Function b_tbf_netbasis(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_netbasis = WindFunc("b_tbf_netbasis", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd|,i_info_basedate
Function i_info_basedate(WINDCODE_ As Variant) As Variant
    i_info_basedate = WindFunc("i_info_basedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"))
End Function

'|fffd||fffd||fffd||fffd|,i_info_basevalue
Function i_info_basevalue(WINDCODE_ As Variant) As Variant
    i_info_basevalue = WindFunc("i_info_basevalue", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"))
End Function

'|fffd||277||778||fffd||fffd||fffd|,i_info_numberofconstituents
Function i_info_numberofconstituents(WINDCODE_ As Variant) As Variant
    i_info_numberofconstituents = WindFunc("i_info_numberofconstituents", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"))
End Function

'|fffd||fffd||228||fffd||fffd||2bd|,i_info_methodology
Function i_info_methodology(WINDCODE_ As Variant) As Variant
    i_info_methodology = WindFunc("i_info_methodology", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,i_info_launchdate
Function i_info_launchdate(WINDCODE_ As Variant) As Variant
    i_info_launchdate = WindFunc("i_info_launchdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"))
End Function

'|5b8||fffd||fffd||fffd||fffd||fffd||fffd|(Wind),i_info_windtype
Function i_info_windtype(WINDCODE_ As Variant) As Variant
    i_info_windtype = WindFunc("i_info_windtype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"))
End Function

'2016.1 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||fffd|Wind|fffd||fffd||fffd||fffd|,w_info_underlyingwindcode
Function w_info_underlyingwindcode(WINDCODE_ As Variant) As Variant
    w_info_underlyingwindcode = WindFunc("w_info_underlyingwindcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"))
End Function

'|36c||4b5||fffd||6d65||fffd||fffd||5b5|,f_prt_CDs
Function f_prt_CDs(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_CDs = WindFunc("f_prt_CDs", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_CDs) <> vbString Then
        f_prt_CDs = f_prt_CDs / UnitVal_
    End If
End Function

'|36c||4b5||fffd||6d65||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_CDstonav
Function f_prt_CDstonav(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_CDstonav = WindFunc("f_prt_CDstonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5ba||fffd||fffd||fffd|,s_div_divpct_accu
Function s_div_divpct_accu(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_div_divpct_accu = WindFunc("s_div_divpct_accu", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_backdoordate
Function s_info_backdoordate(WINDCODE_ As Variant) As Variant
    s_info_backdoordate = WindFunc("s_info_backdoordate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_backdoor
Function s_info_backdoor(WINDCODE_ As Variant) As Variant
    s_info_backdoor = WindFunc("s_info_backdoor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||2fe||376||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,s_info_industry_neeqgics
Function s_info_industry_neeqgics(WINDCODE_ As Variant, TYPE_ As Integer, TRADEDATE_ As Variant) As Variant
    s_info_industry_neeqgics = WindFunc("s_info_industry_neeqgics", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b9||fffd||2fe||376||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|,s_info_industry_neeqgicscode
Function s_info_industry_neeqgicscode(WINDCODE_ As Variant, TYPE_ As Integer, TRADEDATE_ As Variant) As Variant
    s_info_industry_neeqgicscode = WindFunc("s_info_industry_neeqgicscode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TYPE_, GetValidDate(TRADEDATE_))
End Function

'2016.2 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||33c||fffd|(|22b||fffd||fffd|),b_dq_dirtyprice
Function b_dq_dirtyprice(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_dq_dirtyprice = WindFunc("b_dq_dirtyprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||33c||fffd|(|fffd||fffd||fffd||fffd|),b_dq_cleanprice
Function b_dq_cleanprice(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_dq_cleanprice = WindFunc("b_dq_cleanprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|2a3||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|),w_info_ptmtradeday
Function w_info_ptmtradeday(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    w_info_ptmtradeday = WindFunc("w_info_ptmtradeday", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd|30|fffd||fffd||fffd||fffd||2b7||fffd||fffd||fffd||fffd||fffd||fffd|,w_anal_underlyinghisvol_30d
Function w_anal_underlyinghisvol_30d(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    w_anal_underlyinghisvol_30d = WindFunc("w_anal_underlyinghisvol_30d", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd|90|fffd||fffd||fffd||fffd||2b7||fffd||fffd||fffd||fffd||fffd||fffd|,w_anal_underlyinghisvol_90d
Function w_anal_underlyinghisvol_90d(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    w_anal_underlyinghisvol_90d = WindFunc("w_anal_underlyinghisvol_90d", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), GetValidDate(TRADEDATE_))
End Function

'ETF|fffd||ae7a||fffd||fffd||fffd||fffd||fffd||421||fffd||ae7a||fffd||fffd||635||fffd||3bb|,f_info_etfpr_minnav
Function f_info_etfpr_minnav(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_info_etfpr_minnav = WindFunc("f_info_etfpr_minnav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'ETF|fffd||ae7a||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(%),f_info_etfpr_cashratio
Function f_info_etfpr_cashratio(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_info_etfpr_cashratio = WindFunc("f_info_etfpr_cashratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_guaranteedtriggerratio
Function f_info_guaranteedtriggerratio(WINDCODE_ As Variant) As Variant
    f_info_guaranteedtriggerratio = WindFunc("f_info_guaranteedtriggerratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|,f_info_guaranteedtriggertxt
Function f_info_guaranteedtriggertxt(WINDCODE_ As Variant) As Variant
    f_info_guaranteedtriggertxt = WindFunc("f_info_guaranteedtriggertxt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd|,f_info_guaranteedcycle_startdate
Function f_info_guaranteedcycle_startdate(WINDCODE_ As Variant) As Variant
    f_info_guaranteedcycle_startdate = WindFunc("f_info_guaranteedcycle_startdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd|,f_info_guaranteedcycle_enddate
Function f_info_guaranteedcycle_enddate(WINDCODE_ As Variant) As Variant
    f_info_guaranteedcycle_enddate = WindFunc("f_info_guaranteedcycle_enddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||5b8||fffd||fffd|),f_risk_trackerror_trackindex
Function f_risk_trackerror_trackindex(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 2, Optional CalcMethod_ As Integer = 1) As Variant
    f_risk_trackerror_trackindex = WindFunc("f_risk_trackerror_trackindex", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_, CalcMethod_)
End Function

'|fffd||fffd||fffd||3f5||fffd||fffd|(|fffd||fffd||fffd||fffd||5b8||fffd||fffd|),f_risk_correcoefficient_trackindex
Function f_risk_correcoefficient_trackindex(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 2, Optional CalcMethod_ As Integer = 1) As Variant
    f_risk_correcoefficient_trackindex = WindFunc("f_risk_correcoefficient_trackindex", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_, CalcMethod_)
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||1f7||fffd||3aa||fffd||3f2||fffd||fffd||fffd||fffd||fffd|,f_prt_mergednavornot1
Function f_prt_mergednavornot1(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_mergednavornot1 = WindFunc("f_prt_mergednavornot1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||6b8||fffd||228||fffd||fffd||3bb||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|,f_nav_adjustedreturn1
Function f_nav_adjustedreturn1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_nav_adjustedreturn1 = WindFunc("f_nav_adjustedreturn1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||1b7||fffd||fffd||fffd|,f_stm_is_19
Function f_stm_is_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_is_19 = WindFunc("f_stm_is_19", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_is_19) <> vbString Then
        f_stm_is_19 = f_stm_is_19 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||2db3||fffd||fffd|,s_ipo_refunddate
Function s_ipo_refunddate(WINDCODE_ As Variant) As Variant
    s_ipo_refunddate = WindFunc("s_ipo_refunddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||5f4||32c|,s_info_status
Function s_info_status(WINDCODE_ As Variant) As Variant
    s_info_status = WindFunc("s_info_status", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|ff||fffd||279||fffd||fffd||fffd|(|2f0||1f0|)(|fffd||fffd||fffd||fffd||fffd||fffd|),s_div_cashbeforetax2
Function s_div_cashbeforetax2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    s_div_cashbeforetax2 = WindFunc("s_div_cashbeforetax2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||279||fffd||fffd||fffd|(|2f0||fffd||fffd|)(|fffd||fffd||fffd||fffd||fffd||fffd|),s_div_cashaftertax2
Function s_div_cashaftertax2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    s_div_cashaftertax2 = WindFunc("s_div_cashaftertax2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||27a||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|),s_div_stock2
Function s_div_stock2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_div_stock2 = WindFunc("s_div_stock2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|ff||fffd||fffd||5ea||fffd||fffd||fffd||271||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|),s_div_capitalization2
Function s_div_capitalization2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_div_capitalization2 = WindFunc("s_div_capitalization2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'2016.5 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_salesyoymax
Function s_profitnotice_salesyoymax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_salesyoymax = WindFunc("s_profitnotice_salesyoymax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_salesyoymin
Function s_profitnotice_salesyoymin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_salesyoymin = WindFunc("s_profitnotice_salesyoymin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_salesmax
Function s_profitnotice_salesmax(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_profitnotice_salesmax = WindFunc("s_profitnotice_salesmax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_profitnotice_salesmax) <> vbString Then
        s_profitnotice_salesmax = s_profitnotice_salesmax / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_salesmin
Function s_profitnotice_salesmin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_profitnotice_salesmin = WindFunc("s_profitnotice_salesmin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_profitnotice_salesmin) <> vbString Then
        s_profitnotice_salesmin = s_profitnotice_salesmin / UnitVal_
    End If
End Function

'|524||fffd||6fbb||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_netsalesyoymax
Function s_profitnotice_netsalesyoymax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_netsalesyoymax = WindFunc("s_profitnotice_netsalesyoymax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|524||fffd||6fbb||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_netsalesyoymin
Function s_profitnotice_netsalesyoymin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_netsalesyoymin = WindFunc("s_profitnotice_netsalesyoymin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|524||fffd||6fbb||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_netsalesmax
Function s_profitnotice_netsalesmax(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_profitnotice_netsalesmax = WindFunc("s_profitnotice_netsalesmax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_profitnotice_netsalesmax) <> vbString Then
        s_profitnotice_netsalesmax = s_profitnotice_netsalesmax / UnitVal_
    End If
End Function

'|524||fffd||6fbb||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_profitnotice_netsalesmin
Function s_profitnotice_netsalesmin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_profitnotice_netsalesmin = WindFunc("s_profitnotice_netsalesmin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_profitnotice_netsalesmin) <> vbString Then
        s_profitnotice_netsalesmin = s_profitnotice_netsalesmin / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(Non-GAAP),hks_fa_nogaapprofit
Function hks_fa_nogaapprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_nogaapprofit = WindFunc("hks_fa_nogaapprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_fa_nogaapprofit) <> vbString Then
        hks_fa_nogaapprofit = hks_fa_nogaapprofit / UnitVal_
    End If
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_deductedprofit
Function hks_fa_deductedprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_deductedprofit = WindFunc("hks_fa_deductedprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_fa_deductedprofit) <> vbString Then
        hks_fa_deductedprofit = hks_fa_deductedprofit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd|(Non-GAAP),hks_qfa_nogaapprofit
Function hks_qfa_nogaapprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_qfa_nogaapprofit = WindFunc("hks_qfa_nogaapprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_qfa_nogaapprofit) <> vbString Then
        hks_qfa_nogaapprofit = hks_qfa_nogaapprofit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_qfa_deductedprofit
Function hks_qfa_deductedprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_qfa_deductedprofit = WindFunc("hks_qfa_deductedprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_qfa_deductedprofit) <> vbString Then
        hks_qfa_deductedprofit = hks_qfa_deductedprofit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS,hks_qfa_eps_basic
Function hks_qfa_eps_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String) As Variant
    hks_qfa_eps_basic = WindFunc("hks_qfa_eps_basic", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|3e1||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS,hks_qfa_eps_diluted
Function hks_qfa_eps_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String) As Variant
    hks_qfa_eps_diluted = WindFunc("hks_qfa_eps_diluted", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|,hks_qfa_netprofitmargin
Function hks_qfa_netprofitmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    hks_qfa_netprofitmargin = WindFunc("hks_qfa_netprofitmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|,hks_qfa_grossprofitmargin
Function hks_qfa_grossprofitmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    hks_qfa_grossprofitmargin = WindFunc("hks_qfa_grossprofitmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE,hks_qfa_roe
Function hks_qfa_roe(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    hks_qfa_roe = WindFunc("hks_qfa_roe", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROA,hks_qfa_roa
Function hks_qfa_roa(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    hks_qfa_roa = WindFunc("hks_qfa_roa", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||4bb||fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd|,b_anal_nxcupn2
Function b_anal_nxcupn2(WINDCODE_ As Variant) As Variant
    b_anal_nxcupn2 = WindFunc("b_anal_nxcupn2", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|56e||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_ratebond2
Function b_rate_ratebond2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional RATINGAGENCY_ As String = "1") As Variant
    b_rate_ratebond2 = WindFunc("b_rate_ratebond2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2f9||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_issuer2
Function b_rate_issuer2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional RATINGAGENCY_ As String = "1", Optional RatedCompanyType_ As Byte = "1") As Variant
    b_rate_issuer2 = WindFunc("b_rate_issuer2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_, RatedCompanyType_)
End Function

'|56e||22f||fffd||fffd||fffd||fffd|,b_rate_bondscore
Function b_rate_bondscore(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional RATINGAGENCY_ As String = "1") As Variant
    b_rate_bondscore = WindFunc("b_rate_bondscore", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_rate_issuerscore
Function b_rate_issuerscore(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional RATINGAGENCY_ As String = "1") As Variant
    b_rate_issuerscore = WindFunc("b_rate_issuerscore", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), RATINGAGENCY_)
End Function

'|56e||22f||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),b_info_term2
Function b_info_term2(WINDCODE_ As Variant) As Variant
    b_info_term2 = WindFunc("b_info_term2", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||5b8||fffd||6bb||fffd||376||fffd||fffd||fffd||fffd||5b5|,f_prt_SIfutures
Function f_prt_SIfutures(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_SIfutures = WindFunc("f_prt_SIfutures", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_SIfutures) <> vbString Then
        f_prt_SIfutures = f_prt_SIfutures / UnitVal_
    End If
End Function

'|fffd||ae7a||237||fffd||fffd||fffd||fffd|,f_info_pchconfirmdate
Function f_info_pchconfirmdate(WINDCODE_ As Variant) As Variant
    f_info_pchconfirmdate = WindFunc("f_info_pchconfirmdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||237||fffd||fffd||fffd||fffd|,f_info_redmconfirmdate
Function f_info_redmconfirmdate(WINDCODE_ As Variant) As Variant
    f_info_redmconfirmdate = WindFunc("f_info_redmconfirmdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||63b||fffd||fffd||fffd||fffd||fffd|,f_info_redmarrialdate
Function f_info_redmarrialdate(WINDCODE_ As Variant) As Variant
    f_info_redmarrialdate = WindFunc("f_info_redmarrialdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||1bb||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),s_info_auditor2
Function s_info_auditor2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_auditor2 = WindFunc("s_info_auditor2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||33c||fffd|(23:30),hq_close2
Function hq_close2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hq_close2 = WindFunc("hq_close2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HQ"), GetValidDate(TRADEDATE_))
End Function

'2016.6
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_underlyingtype
Function s_info_underlyingtype(WINDCODE_ As Variant) As Variant
    s_info_underlyingtype = WindFunc("s_info_underlyingtype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||47a||fffd||277||fffd||fffd||fffd||fffd||fffd||fffd||3fc||fffd|,s_share_pledgeda
Function s_share_pledgeda(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_pledgeda = WindFunc("s_share_pledgeda", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_pledgeda) <> vbString Then
        s_share_pledgeda = s_share_pledgeda / UnitVal_
    End If
End Function

'|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_share_pledgeda_pct
Function s_share_pledgeda_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_pledgeda_pct = WindFunc("s_share_pledgeda_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||6f9||277||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_share_liqa_pledged
Function s_share_liqa_pledged(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_liqa_pledged = WindFunc("s_share_liqa_pledged", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_liqa_pledged) <> vbString Then
        s_share_liqa_pledged = s_share_liqa_pledged / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6f9||277||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_share_liqa_pledgedpct
Function s_share_liqa_pledgedpct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_liqa_pledgedpct = WindFunc("s_share_liqa_pledgedpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||6f9||277||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_share_restricteda_pledged
Function s_share_restricteda_pledged(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_restricteda_pledged = WindFunc("s_share_restricteda_pledged", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_restricteda_pledged) <> vbString Then
        s_share_restricteda_pledged = s_share_restricteda_pledged / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6f9||277||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_share_restricteda_pledgedpct
Function s_share_restricteda_pledgedpct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_restricteda_pledgedpct = WindFunc("s_share_restricteda_pledgedpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|1|fffd||73b||631||fffd|,f_return_1w
Function f_return_1w(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_1w = WindFunc("f_return_1w", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|1|fffd||bb||631||fffd|,f_return_1m
Function f_return_1m(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_1m = WindFunc("f_return_1m", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|3|fffd||bb||631||fffd|,f_return_3m
Function f_return_3m(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_3m = WindFunc("f_return_3m", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|6|fffd||bb||631||fffd|,f_return_6m
Function f_return_6m(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_6m = WindFunc("f_return_6m", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|1|fffd||fffd||631||fffd|,f_return_1y
Function f_return_1y(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_1y = WindFunc("f_return_1y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|2|fffd||fffd||631||fffd|,f_return_2y
Function f_return_2y(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_2y = WindFunc("f_return_2y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|3|fffd||fffd||631||fffd|,f_return_3y
Function f_return_3y(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_3y = WindFunc("f_return_3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|5|fffd||fffd||631||fffd|,f_return_5y
Function f_return_5y(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_5y = WindFunc("f_return_5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd|10|fffd||fffd||631||fffd|,f_return_10y
Function f_return_10y(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_10y = WindFunc("f_return_10y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||631||fffd|,f_return_ytd
Function f_return_ytd(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_ytd = WindFunc("f_return_ytd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||631||fffd|,f_return_std
Function f_return_std(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional TRADEDATE_ As Variant) As Variant
    f_return_std = WindFunc("f_return_std", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||b6||23b||631||fffd|,f_return_m
Function f_return_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_return_m = WindFunc("f_return_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||23b||631||fffd|,f_return_q
Function f_return_q(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_return_q = WindFunc("f_return_q", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||23b||631||fffd|,f_return_y
Function f_return_y(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_return_y = WindFunc("f_return_y", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||631||fffd|,f_return
Function f_return(WINDCODE_ As Variant, Optional Annualize_ As String = "0", Optional StartDate_ As Variant, Optional EndDate_ As Variant) As Variant
    f_return = WindFunc("f_return", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Annualize_, GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||33c||fffd|(|fffd||fffd||52a|),s_dq_close_usd
Function s_dq_close_usd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_close_usd = WindFunc("s_dq_close_usd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||56e|),b_rate_latestMIR_cnbd
Function b_rate_latestMIR_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_rate_latestMIR_cnbd = WindFunc("b_rate_latestMIR_cnbd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'2016.6.13 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||fffd|ETFWind|fffd||fffd||fffd||fffd|,f_info_etfwindcode
Function f_info_etfwindcode(WINDCODE_ As Variant) As Variant
    f_info_etfwindcode = WindFunc("f_info_etfwindcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd||fffd||2bc||fffd||fffd||fffd||fffd|,f_info_initial
Function f_info_initial(WINDCODE_ As Variant) As Variant
    f_info_initial = WindFunc("f_info_initial", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||3fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_recognitiondate
Function f_info_recognitiondate(WINDCODE_ As Variant) As Variant
    f_info_recognitiondate = WindFunc("f_info_recognitiondate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||633||fffd|(|fffd||fffd||fffd||1f0||fffd||6b8||7f5||fffd|),f_risk_downside
Function f_risk_downside(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_risk_downside = WindFunc("f_risk_downside", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||fffd||5b5|,f_prt_absvalue
Function f_prt_absvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_absvalue = WindFunc("f_prt_absvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_absvalue) <> vbString Then
        f_prt_absvalue = f_prt_absvalue / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_abstonav
Function f_prt_abstonav(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_abstonav = WindFunc("f_prt_abstonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||56e||fffd||fffd||5b5|,f_prt_pfbvalue
Function f_prt_pfbvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_pfbvalue = WindFunc("f_prt_pfbvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_pfbvalue) <> vbString Then
        f_prt_pfbvalue = f_prt_pfbvalue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_pfbtonav
Function f_prt_pfbtonav(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_pfbtonav = WindFunc("f_prt_pfbtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,f_prt_mmivalue
Function f_prt_mmivalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_mmivalue = WindFunc("f_prt_mmivalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_mmivalue) <> vbString Then
        f_prt_mmivalue = f_prt_mmivalue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_mmitonav
Function f_prt_mmitonav(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_mmitonav = WindFunc("f_prt_mmitonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'2016.7 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_adminexpense_ttm2
Function s_fa_adminexpense_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_adminexpense_ttm2 = WindFunc("s_fa_adminexpense_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_adminexpense_ttm2) <> vbString Then
        s_fa_adminexpense_ttm2 = s_fa_adminexpense_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_adminexpensetogr_ttm2
Function s_fa_adminexpensetogr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_adminexpensetogr_ttm2 = WindFunc("s_fa_adminexpensetogr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_cashflow_ttm2
Function s_fa_cashflow_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_cashflow_ttm2 = WindFunc("s_fa_cashflow_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_cashflow_ttm2) <> vbString Then
        s_fa_cashflow_ttm2 = s_fa_cashflow_ttm2 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||271||fffd|-|fffd||1fd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_cost_ttm2
Function s_fa_cost_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_cost_ttm2 = WindFunc("s_fa_cost_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_cost_ttm2) <> vbString Then
        s_fa_cost_ttm2 = s_fa_cost_ttm2 / UnitVal_
    End If
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_deductedprofit_ttm2
Function s_fa_deductedprofit_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_deductedprofit_ttm2 = WindFunc("s_fa_deductedprofit_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_deductedprofit_ttm2) <> vbString Then
        s_fa_deductedprofit_ttm2 = s_fa_deductedprofit_ttm2 / UnitVal_
    End If
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(TTM|fffd||fffd||fffd||1b7||fffd|),s_fa_ebit_ttm2
Function s_fa_ebit_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_ebit_ttm2 = WindFunc("s_fa_ebit_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_ebit_ttm2) <> vbString Then
        s_fa_ebit_ttm2 = s_fa_ebit_ttm2 / UnitVal_
    End If
End Function

'EBIT(TTM),s_fa_ebit2_ttm
Function s_fa_ebit2_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_ebit2_ttm = WindFunc("s_fa_ebit2_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_ebit2_ttm) <> vbString Then
        s_fa_ebit2_ttm = s_fa_ebit2_ttm / UnitVal_
    End If
End Function

'EBITDA(TTM|fffd||fffd||fffd||1b7||fffd|),s_fa_ebitda_ttm
Function s_fa_ebitda_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_ebitda_ttm = WindFunc("s_fa_ebitda_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_ebitda_ttm) <> vbString Then
        s_fa_ebitda_ttm = s_fa_ebitda_ttm / UnitVal_
    End If
End Function

'EBITDA(TTM),s_fa_ebitda2_ttm
Function s_fa_ebitda2_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_ebitda2_ttm = WindFunc("s_fa_ebitda2_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_ebitda2_ttm) <> vbString Then
        s_fa_ebitda2_ttm = s_fa_ebitda2_ttm / UnitVal_
    End If
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(TTM)/|fffd||fffd||fffd||2b2||fffd|,s_fa_ebittoassets2
Function s_fa_ebittoassets2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_ebittoassets2 = WindFunc("s_fa_ebittoassets2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),s_fa_ebt_ttm2
Function s_fa_ebt_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_ebt_ttm2 = WindFunc("s_fa_ebt_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_ebt_ttm2) <> vbString Then
        s_fa_ebt_ttm2 = s_fa_ebt_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_ebttoor_ttm
Function s_fa_ebttoor_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_ebttoor_ttm = WindFunc("s_fa_ebttoor_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6bc||fffd||fffd||fffd||fffd|(TTM),s_fa_periodexpense_t_ttm
Function s_fa_periodexpense_t_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_periodexpense_t_ttm = WindFunc("s_fa_periodexpense_t_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_periodexpense_t_ttm) <> vbString Then
        s_fa_periodexpense_t_ttm = s_fa_periodexpense_t_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||5a7||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_expense_ttm2
Function s_fa_expense_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_expense_ttm2 = WindFunc("s_fa_expense_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_expense_ttm2) <> vbString Then
        s_fa_expense_ttm2 = s_fa_expense_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6bc||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_expensetosales_ttm2
Function s_fa_expensetosales_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_expensetosales_ttm2 = WindFunc("s_fa_expensetosales_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_finaexpense_ttm2
Function s_fa_finaexpense_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_finaexpense_ttm2 = WindFunc("s_fa_finaexpense_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_finaexpense_ttm2) <> vbString Then
        s_fa_finaexpense_ttm2 = s_fa_finaexpense_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_finaexpensetogr_ttm2
Function s_fa_finaexpensetogr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_finaexpensetogr_ttm2 = WindFunc("s_fa_finaexpensetogr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_financecashflow_ttm2
Function s_fa_financecashflow_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_financecashflow_ttm2 = WindFunc("s_fa_financecashflow_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_financecashflow_ttm2) <> vbString Then
        s_fa_financecashflow_ttm2 = s_fa_financecashflow_ttm2 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||733||271||fffd|(TTM),s_fa_gc_ttm2
Function s_fa_gc_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_gc_ttm2 = WindFunc("s_fa_gc_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_gc_ttm2) <> vbString Then
        s_fa_gc_ttm2 = s_fa_gc_ttm2 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||733||271||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_gctogr_ttm2
Function s_fa_gctogr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_gctogr_ttm2 = WindFunc("s_fa_gctogr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_gr_ttm2
Function s_fa_gr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_gr_ttm2 = WindFunc("s_fa_gr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_gr_ttm2) <> vbString Then
        s_fa_gr_ttm2 = s_fa_gr_ttm2 / UnitVal_
    End If
End Function

'|eb||fffd||fffd|(TTM),s_fa_grossmargin_ttm2
Function s_fa_grossmargin_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_grossmargin_ttm2 = WindFunc("s_fa_grossmargin_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_grossmargin_ttm2) <> vbString Then
        s_fa_grossmargin_ttm2 = s_fa_grossmargin_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|(TTM),s_fa_grossprofitmargin_ttm2
Function s_fa_grossprofitmargin_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_grossprofitmargin_ttm2 = WindFunc("s_fa_grossprofitmargin_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|(TTM),s_fa_impairment_ttm2
Function s_fa_impairment_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_impairment_ttm2 = WindFunc("s_fa_impairment_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_impairment_ttm2) <> vbString Then
        s_fa_impairment_ttm2 = s_fa_impairment_ttm2 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_impairtogr_ttm2
Function s_fa_impairtogr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_impairtogr_ttm2 = WindFunc("s_fa_impairtogr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||3e2||5a7||fffd||fffd|(TTM),s_fa_interestexpense_ttm
Function s_fa_interestexpense_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_interestexpense_ttm = WindFunc("s_fa_interestexpense_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_interestexpense_ttm) <> vbString Then
        s_fa_interestexpense_ttm = s_fa_interestexpense_ttm / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_investcashflow_ttm2
Function s_fa_investcashflow_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_investcashflow_ttm2 = WindFunc("s_fa_investcashflow_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_investcashflow_ttm2) <> vbString Then
        s_fa_investcashflow_ttm2 = s_fa_investcashflow_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_investincome_ttm2
Function s_fa_investincome_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_investincome_ttm2 = WindFunc("s_fa_investincome_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_investincome_ttm2) <> vbString Then
        s_fa_investincome_ttm2 = s_fa_investincome_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),s_fa_investincometoebt_ttm2
Function s_fa_investincometoebt_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_investincometoebt_ttm2 = WindFunc("s_fa_investincometoebt_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_minorityinterest_ttm
Function s_fa_minorityinterest_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_minorityinterest_ttm = WindFunc("s_fa_minorityinterest_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_minorityinterest_ttm) <> vbString Then
        s_fa_minorityinterest_ttm = s_fa_minorityinterest_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_netprofit_ttm2
Function s_fa_netprofit_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_netprofit_ttm2 = WindFunc("s_fa_netprofit_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_netprofit_ttm2) <> vbString Then
        s_fa_netprofit_ttm2 = s_fa_netprofit_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_netprofitmargin_ttm2
Function s_fa_netprofitmargin_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_netprofitmargin_ttm2 = WindFunc("s_fa_netprofitmargin_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_netprofittoassets
Function s_fa_netprofittoassets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_netprofittoassets = WindFunc("s_fa_netprofittoassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_netprofittoor_ttm
Function s_fa_netprofittoor_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_netprofittoor_ttm = WindFunc("s_fa_netprofittoor_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd|(TTM),s_fa_nonoperateprofit_ttm2
Function s_fa_nonoperateprofit_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_nonoperateprofit_ttm2 = WindFunc("s_fa_nonoperateprofit_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_nonoperateprofit_ttm2) <> vbString Then
        s_fa_nonoperateprofit_ttm2 = s_fa_nonoperateprofit_ttm2 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),s_fa_nonoperateprofittoebt_ttm2
Function s_fa_nonoperateprofittoebt_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_nonoperateprofittoebt_ttm2 = WindFunc("s_fa_nonoperateprofittoebt_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_ocftooperateincome_ttm2
Function s_fa_ocftooperateincome_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_ocftooperateincome_ttm2 = WindFunc("s_fa_ocftooperateincome_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_ocftoor_ttm2
Function s_fa_ocftoor_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_ocftoor_ttm2 = WindFunc("s_fa_ocftoor_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_op_ttm2
Function s_fa_op_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_op_ttm2 = WindFunc("s_fa_op_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_op_ttm2) <> vbString Then
        s_fa_op_ttm2 = s_fa_op_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_operatecashflow_ttm2
Function s_fa_operatecashflow_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_operatecashflow_ttm2 = WindFunc("s_fa_operatecashflow_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_operatecashflow_ttm2) <> vbString Then
        s_fa_operatecashflow_ttm2 = s_fa_operatecashflow_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_operatecashflowtoop_ttm
Function s_fa_operatecashflowtoop_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_operatecashflowtoop_ttm = WindFunc("s_fa_operatecashflowtoop_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|(TTM),s_fa_operateexpense_ttm2
Function s_fa_operateexpense_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_operateexpense_ttm2 = WindFunc("s_fa_operateexpense_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_operateexpense_ttm2) <> vbString Then
        s_fa_operateexpense_ttm2 = s_fa_operateexpense_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_operateexpensetogr_ttm2
Function s_fa_operateexpensetogr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_operateexpensetogr_ttm2 = WindFunc("s_fa_operateexpensetogr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_operateincome_ttm2
Function s_fa_operateincome_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_operateincome_ttm2 = WindFunc("s_fa_operateincome_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_operateincome_ttm2) <> vbString Then
        s_fa_operateincome_ttm2 = s_fa_operateincome_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),s_fa_operateincometoebt_ttm2
Function s_fa_operateincometoebt_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_operateincometoebt_ttm2 = WindFunc("s_fa_operateincometoebt_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_optogr_ttm2
Function s_fa_optogr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_optogr_ttm2 = WindFunc("s_fa_optogr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_optoor_ttm
Function s_fa_optoor_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_optoor_ttm = WindFunc("s_fa_optoor_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_or_ttm2
Function s_fa_or_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_or_ttm2 = WindFunc("s_fa_or_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_or_ttm2) <> vbString Then
        s_fa_or_ttm2 = s_fa_or_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_profit_ttm2
Function s_fa_profit_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_profit_ttm2 = WindFunc("s_fa_profit_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_profit_ttm2) <> vbString Then
        s_fa_profit_ttm2 = s_fa_profit_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_profittogr_ttm2
Function s_fa_profittogr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_profittogr_ttm2 = WindFunc("s_fa_profittogr_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_roa2_ttm2
Function s_fa_roa2_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_roa2_ttm2 = WindFunc("s_fa_roa2_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),s_fa_roe_ttm2
Function s_fa_roe_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_roe_ttm2 = WindFunc("s_fa_roe_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|(TTM),s_fa_roic_ttm
Function s_fa_roic_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_roic_ttm = WindFunc("s_fa_roic_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|ROIC(TTM),s_fa_roic2_ttm
Function s_fa_roic2_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_roic2_ttm = WindFunc("s_fa_roic2_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|(TTM),s_fa_salescashin_ttm2
Function s_fa_salescashin_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_salescashin_ttm2 = WindFunc("s_fa_salescashin_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_salescashin_ttm2) <> vbString Then
        s_fa_salescashin_ttm2 = s_fa_salescashin_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||1e69||fffd||fffd||fffd||fffd||fffd||575||fffd||fffd||fffd||fffd||5bd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),s_fa_salescashintoor_ttm2
Function s_fa_salescashintoor_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_salescashintoor_ttm2 = WindFunc("s_fa_salescashintoor_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||2f0|(TTM),s_fa_tax_ttm
Function s_fa_tax_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_tax_ttm = WindFunc("s_fa_tax_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_tax_ttm) <> vbString Then
        s_fa_tax_ttm = s_fa_tax_ttm / UnitVal_
    End If
End Function

'|2f0||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),s_fa_taxtoebt_ttm
Function s_fa_taxtoebt_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_taxtoebt_ttm = WindFunc("s_fa_taxtoebt_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),s_fa_taxtoor_ttm
Function s_fa_taxtoor_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_taxtoor_ttm = WindFunc("s_fa_taxtoor_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_adminexpense_ttm
Function hks_fa_adminexpense_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_adminexpense_ttm = WindFunc("hks_fa_adminexpense_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_adminexpense_ttm) <> vbString Then
        hks_fa_adminexpense_ttm = hks_fa_adminexpense_ttm / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_cashflow_ttm2
Function hks_fa_cashflow_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_cashflow_ttm2 = WindFunc("hks_fa_cashflow_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_cashflow_ttm2) <> vbString Then
        hks_fa_cashflow_ttm2 = hks_fa_cashflow_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_connp_ttm
Function hks_fa_connp_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_connp_ttm = WindFunc("hks_fa_connp_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_connp_ttm) <> vbString Then
        hks_fa_connp_ttm = hks_fa_connp_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||271||fffd|-|fffd||1fd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_cost_ttm
Function hks_fa_cost_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_cost_ttm = WindFunc("hks_fa_cost_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_cost_ttm) <> vbString Then
        hks_fa_cost_ttm = hks_fa_cost_ttm / UnitVal_
    End If
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_deductedprofit_ttm
Function hks_fa_deductedprofit_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_deductedprofit_ttm = WindFunc("hks_fa_deductedprofit_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_deductedprofit_ttm) <> vbString Then
        hks_fa_deductedprofit_ttm = hks_fa_deductedprofit_ttm / UnitVal_
    End If
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(TTM|fffd||fffd||fffd||1b7||fffd|),hks_fa_ebit_ttm
Function hks_fa_ebit_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebit_ttm = WindFunc("hks_fa_ebit_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebit_ttm) <> vbString Then
        hks_fa_ebit_ttm = hks_fa_ebit_ttm / UnitVal_
    End If
End Function

'EBIT(TTM),hks_fa_ebit2_ttm
Function hks_fa_ebit2_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebit2_ttm = WindFunc("hks_fa_ebit2_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebit2_ttm) <> vbString Then
        hks_fa_ebit2_ttm = hks_fa_ebit2_ttm / UnitVal_
    End If
End Function

'EBITDA(TTM|fffd||fffd||fffd||1b7||fffd|),hks_fa_ebitda_ttm
Function hks_fa_ebitda_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebitda_ttm = WindFunc("hks_fa_ebitda_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebitda_ttm) <> vbString Then
        hks_fa_ebitda_ttm = hks_fa_ebitda_ttm / UnitVal_
    End If
End Function

'EBITDA(TTM),hks_fa_ebitda2_ttm
Function hks_fa_ebitda2_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebitda2_ttm = WindFunc("hks_fa_ebitda2_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebitda2_ttm) <> vbString Then
        hks_fa_ebitda2_ttm = hks_fa_ebitda2_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),hks_fa_ebt_ttm2
Function hks_fa_ebt_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebt_ttm2 = WindFunc("hks_fa_ebt_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebt_ttm2) <> vbString Then
        hks_fa_ebt_ttm2 = hks_fa_ebt_ttm2 / UnitVal_
    End If
End Function

'|fffd||6bc||fffd||fffd||fffd||fffd|(TTM),hks_fa_periodexpense_ttm
Function hks_fa_periodexpense_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_periodexpense_ttm = WindFunc("hks_fa_periodexpense_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_periodexpense_ttm) <> vbString Then
        hks_fa_periodexpense_ttm = hks_fa_periodexpense_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||5a7||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_expense_ttm
Function hks_fa_expense_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_expense_ttm = WindFunc("hks_fa_expense_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_expense_ttm) <> vbString Then
        hks_fa_expense_ttm = hks_fa_expense_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_finaexpense_ttm
Function hks_fa_finaexpense_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_finaexpense_ttm = WindFunc("hks_fa_finaexpense_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_finaexpense_ttm) <> vbString Then
        hks_fa_finaexpense_ttm = hks_fa_finaexpense_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_financecashflow_ttm
Function hks_fa_financecashflow_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_financecashflow_ttm = WindFunc("hks_fa_financecashflow_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_financecashflow_ttm) <> vbString Then
        hks_fa_financecashflow_ttm = hks_fa_financecashflow_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||733||271||fffd|(TTM),hks_fa_gc_ttm
Function hks_fa_gc_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_gc_ttm = WindFunc("hks_fa_gc_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_gc_ttm) <> vbString Then
        hks_fa_gc_ttm = hks_fa_gc_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_gr_ttm2
Function hks_fa_gr_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_gr_ttm2 = WindFunc("hks_fa_gr_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_gr_ttm2) <> vbString Then
        hks_fa_gr_ttm2 = hks_fa_gr_ttm2 / UnitVal_
    End If
End Function

'|eb||fffd||fffd|(TTM),hks_fa_grossmargin_ttm
Function hks_fa_grossmargin_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_grossmargin_ttm = WindFunc("hks_fa_grossmargin_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_grossmargin_ttm) <> vbString Then
        hks_fa_grossmargin_ttm = hks_fa_grossmargin_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||5a7||fffd||fffd|(TTM),hks_fa_interestexpense_ttm
Function hks_fa_interestexpense_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_interestexpense_ttm = WindFunc("hks_fa_interestexpense_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_interestexpense_ttm) <> vbString Then
        hks_fa_interestexpense_ttm = hks_fa_interestexpense_ttm / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_investcashflow_ttm
Function hks_fa_investcashflow_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_investcashflow_ttm = WindFunc("hks_fa_investcashflow_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_investcashflow_ttm) <> vbString Then
        hks_fa_investcashflow_ttm = hks_fa_investcashflow_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_investincome_ttm2
Function hks_fa_investincome_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_investincome_ttm2 = WindFunc("hks_fa_investincome_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_investincome_ttm2) <> vbString Then
        hks_fa_investincome_ttm2 = hks_fa_investincome_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_minorityinterest_ttm
Function hks_fa_minorityinterest_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_minorityinterest_ttm = WindFunc("hks_fa_minorityinterest_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_minorityinterest_ttm) <> vbString Then
        hks_fa_minorityinterest_ttm = hks_fa_minorityinterest_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_netprofit_ttm2
Function hks_fa_netprofit_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_netprofit_ttm2 = WindFunc("hks_fa_netprofit_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_netprofit_ttm2) <> vbString Then
        hks_fa_netprofit_ttm2 = hks_fa_netprofit_ttm2 / UnitVal_
    End If
End Function

'|fffd||1f3||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_nonconnp_ttm
Function hks_fa_nonconnp_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_nonconnp_ttm = WindFunc("hks_fa_nonconnp_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_nonconnp_ttm) <> vbString Then
        hks_fa_nonconnp_ttm = hks_fa_nonconnp_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_nonop_ttm
Function hks_fa_nonop_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_nonop_ttm = WindFunc("hks_fa_nonop_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_nonop_ttm) <> vbString Then
        hks_fa_nonop_ttm = hks_fa_nonop_ttm / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_op_ttm
Function hks_fa_op_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_op_ttm = WindFunc("hks_fa_op_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_op_ttm) <> vbString Then
        hks_fa_op_ttm = hks_fa_op_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_operatecashflow_ttm2
Function hks_fa_operatecashflow_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_operatecashflow_ttm2 = WindFunc("hks_fa_operatecashflow_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_operatecashflow_ttm2) <> vbString Then
        hks_fa_operatecashflow_ttm2 = hks_fa_operatecashflow_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|(TTM),hks_fa_operateexpense_ttm
Function hks_fa_operateexpense_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_operateexpense_ttm = WindFunc("hks_fa_operateexpense_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_operateexpense_ttm) <> vbString Then
        hks_fa_operateexpense_ttm = hks_fa_operateexpense_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_operateincome_ttm2
Function hks_fa_operateincome_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_operateincome_ttm2 = WindFunc("hks_fa_operateincome_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_operateincome_ttm2) <> vbString Then
        hks_fa_operateincome_ttm2 = hks_fa_operateincome_ttm2 / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_or_ttm2
Function hks_fa_or_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_or_ttm2 = WindFunc("hks_fa_or_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_or_ttm2) <> vbString Then
        hks_fa_or_ttm2 = hks_fa_or_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_profit_ttm2
Function hks_fa_profit_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_profit_ttm2 = WindFunc("hks_fa_profit_ttm2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_profit_ttm2) <> vbString Then
        hks_fa_profit_ttm2 = hks_fa_profit_ttm2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0|(TTM),hks_fa_tax_ttm
Function hks_fa_tax_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_tax_ttm = WindFunc("hks_fa_tax_ttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_tax_ttm) <> vbString Then
        hks_fa_tax_ttm = hks_fa_tax_ttm / UnitVal_
    End If
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),hks_fa_investincometoebt_ttm
Function hks_fa_investincometoebt_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_investincometoebt_ttm = WindFunc("hks_fa_investincometoebt_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),hks_fa_nonoperateprofittoebt_ttm
Function hks_fa_nonoperateprofittoebt_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_nonoperateprofittoebt_ttm = WindFunc("hks_fa_nonoperateprofittoebt_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_ocftooperateincome_ttm
Function hks_fa_ocftooperateincome_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ocftooperateincome_ttm = WindFunc("hks_fa_ocftooperateincome_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_ocftosales_ttm2
Function hks_fa_ocftosales_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ocftosales_ttm2 = WindFunc("hks_fa_ocftosales_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),hks_fa_operateincometoebt_ttm
Function hks_fa_operateincometoebt_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_operateincometoebt_ttm = WindFunc("hks_fa_operateincometoebt_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|(TTM),hks_fa_roic_ttm2
Function hks_fa_roic_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roic_ttm2 = WindFunc("hks_fa_roic_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(TTM)/|fffd||fffd||fffd||2b2||fffd|,hks_fa_ebittoassets_ttm
Function hks_fa_ebittoassets_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ebittoassets_ttm = WindFunc("hks_fa_ebittoassets_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|ROIC(TTM),hks_fa_roic2_ttm
Function hks_fa_roic2_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roic2_ttm = WindFunc("hks_fa_roic2_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_adminexpensetogr_ttm
Function hks_fa_adminexpensetogr_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_adminexpensetogr_ttm = WindFunc("hks_fa_adminexpensetogr_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|/|2f0||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_connptoprofit_ttm
Function hks_fa_connptoprofit_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_connptoprofit_ttm = WindFunc("hks_fa_connptoprofit_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_ebttoor_ttm
Function hks_fa_ebttoor_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ebttoor_ttm = WindFunc("hks_fa_ebttoor_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||6bc||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_expensetosales_ttm
Function hks_fa_expensetosales_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_expensetosales_ttm = WindFunc("hks_fa_expensetosales_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_finaexpensetogr_ttm
Function hks_fa_finaexpensetogr_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_finaexpensetogr_ttm = WindFunc("hks_fa_finaexpensetogr_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||733||271||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_gctogr_ttm
Function hks_fa_gctogr_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_gctogr_ttm = WindFunc("hks_fa_gctogr_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||eb||fffd||fffd||fffd||fffd|(TTM),hks_fa_grossprofitmargin_ttm2
Function hks_fa_grossprofitmargin_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_grossprofitmargin_ttm2 = WindFunc("hks_fa_grossprofitmargin_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||6fe||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_netprofitmargin_ttm2
Function hks_fa_netprofitmargin_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_netprofitmargin_ttm2 = WindFunc("hks_fa_netprofitmargin_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_netprofittoassets
Function hks_fa_netprofittoassets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_netprofittoassets = WindFunc("hks_fa_netprofittoassets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_netprofittoor_ttm
Function hks_fa_netprofittoor_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_netprofittoor_ttm = WindFunc("hks_fa_netprofittoor_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),hks_fa_nonoptoebt_ttm
Function hks_fa_nonoptoebt_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_nonoptoebt_ttm = WindFunc("hks_fa_nonoptoebt_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_operatecashflowtoop_ttm
Function hks_fa_operatecashflowtoop_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_operatecashflowtoop_ttm = WindFunc("hks_fa_operatecashflowtoop_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_operateexpensetogr_ttm
Function hks_fa_operateexpensetogr_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_operateexpensetogr_ttm = WindFunc("hks_fa_operateexpensetogr_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),hks_fa_optoebt_ttm2
Function hks_fa_optoebt_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_optoebt_ttm2 = WindFunc("hks_fa_optoebt_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_optogr_ttm
Function hks_fa_optogr_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_optogr_ttm = WindFunc("hks_fa_optogr_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd|(TTM),hks_fa_optoor_ttm
Function hks_fa_optoor_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_optoor_ttm = WindFunc("hks_fa_optoor_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_profittogr_ttm
Function hks_fa_profittogr_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_profittogr_ttm = WindFunc("hks_fa_profittogr_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_roa2_ttm
Function hks_fa_roa2_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roa2_ttm = WindFunc("hks_fa_roa2_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_roe_ttm2
Function hks_fa_roe_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roe_ttm2 = WindFunc("hks_fa_roe_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|2f0||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|(TTM),hks_fa_taxtoebt_ttm2
Function hks_fa_taxtoebt_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_taxtoebt_ttm2 = WindFunc("hks_fa_taxtoebt_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(TTM),hks_fa_roa_ttm2
Function hks_fa_roa_ttm2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roa_ttm2 = WindFunc("hks_fa_roa_ttm2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'2016.7.4 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_pq_avgturn2
Function s_pq_avgturn2(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_avgturn2 = WindFunc("s_pq_avgturn2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||fffd|,s_info_marginornot
Function s_info_marginornot(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_marginornot = WindFunc("s_info_marginornot", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),hks_fa_ebit3
Function hks_fa_ebit3(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebit3 = WindFunc("hks_fa_ebit3", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebit3) <> vbString Then
        hks_fa_ebit3 = hks_fa_ebit3 / UnitVal_
    End If
End Function

'|3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),hks_fa_ebitda2
Function hks_fa_ebitda2(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_ebitda2 = WindFunc("hks_fa_ebitda2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_fa_ebitda2) <> vbString Then
        hks_fa_ebitda2 = hks_fa_ebitda2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||6b1||fffd||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,s_stm_issuingdate_mrq
Function s_stm_issuingdate_mrq(WINDCODE_ As Variant) As Variant
    s_stm_issuingdate_mrq = WindFunc("s_stm_issuingdate_mrq", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||6b1||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,s_stm_issuingdate_emrq
Function s_stm_issuingdate_emrq(WINDCODE_ As Variant) As Variant
    s_stm_issuingdate_emrq = WindFunc("s_stm_issuingdate_emrq", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||5b2||fffd|,s_neeq_level
Function s_neeq_level(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_neeq_level = WindFunc("s_neeq_level", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2016.8.8 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|fffd||6bb||fffd||fffd||fffd||377||fffd||fffd||5a4||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),s_info_long_margin
Function s_info_long_margin(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_long_margin = WindFunc("s_info_long_margin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6bb||fffd||fffd||fffd||377||fffd||fffd||5a4||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),s_info_short_margin
Function s_info_short_margin(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_short_margin = WindFunc("s_info_short_margin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||3ac||fffd||5b1||fffd||5a4||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),s_info_maint_margin
Function s_info_maint_margin(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_maint_margin = WindFunc("s_info_maint_margin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||57e||fffd||fffd||fffd||fffd||fffd||1ab||fffd||fffd||237||fffd||5b5|(|4b5||fffd||fffd||fffd||fffd||5fc|),f_info_trackdeviation_threshold
Function f_info_trackdeviation_threshold(WINDCODE_ As Variant) As Variant
    f_info_trackdeviation_threshold = WindFunc("f_info_trackdeviation_threshold", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd||ede7||5b5|(|4b5||fffd||fffd||fffd||fffd||5fc|),f_info_trackerror_threshold
Function f_info_trackerror_threshold(WINDCODE_ As Variant) As Variant
    f_info_trackerror_threshold = WindFunc("f_info_trackerror_threshold", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd|,s_mfd_buyamt_d
Function s_mfd_buyamt_d(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyamt_d = WindFunc("s_mfd_buyamt_d", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_buyamt_d) <> vbString Then
        s_mfd_buyamt_d = s_mfd_buyamt_d / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_sellamt_d
Function s_mfd_sellamt_d(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sellamt_d = WindFunc("s_mfd_sellamt_d", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_sellamt_d) <> vbString Then
        s_mfd_sellamt_d = s_mfd_sellamt_d / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_buyvol_d
Function s_mfd_buyvol_d(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyvol_d = WindFunc("s_mfd_buyvol_d", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_buyvol_d) <> vbString Then
        s_mfd_buyvol_d = s_mfd_buyvol_d / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_sellvol_d
Function s_mfd_sellvol_d(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sellvol_d = WindFunc("s_mfd_sellvol_d", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_sellvol_d) <> vbString Then
        s_mfd_sellvol_d = s_mfd_sellvol_d / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_netbuyamt
Function s_mfd_netbuyamt(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_netbuyamt = WindFunc("s_mfd_netbuyamt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_netbuyamt) <> vbString Then
        s_mfd_netbuyamt = s_mfd_netbuyamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_netbuyvol
Function s_mfd_netbuyvol(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_netbuyvol = WindFunc("s_mfd_netbuyvol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_netbuyvol) <> vbString Then
        s_mfd_netbuyvol = s_mfd_netbuyvol / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bd65||fffd||fffd|,s_mfd_buyord
Function s_mfd_buyord(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyord = WindFunc("s_mfd_buyord", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_buyord) <> vbString Then
        s_mfd_buyord = s_mfd_buyord / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_sellord
Function s_mfd_sellord(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sellord = WindFunc("s_mfd_sellord", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_sellord) <> vbString Then
        s_mfd_sellord = s_mfd_sellord / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_buyamt_a
Function s_mfd_buyamt_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyamt_a = WindFunc("s_mfd_buyamt_a", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_buyamt_a) <> vbString Then
        s_mfd_buyamt_a = s_mfd_buyamt_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_sellamt_a
Function s_mfd_sellamt_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sellamt_a = WindFunc("s_mfd_sellamt_a", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_sellamt_a) <> vbString Then
        s_mfd_sellamt_a = s_mfd_sellamt_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_buyvol_a
Function s_mfd_buyvol_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyvol_a = WindFunc("s_mfd_buyvol_a", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_buyvol_a) <> vbString Then
        s_mfd_buyvol_a = s_mfd_buyvol_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_sellvol_a
Function s_mfd_sellvol_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sellvol_a = WindFunc("s_mfd_sellvol_a", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_sellvol_a) <> vbString Then
        s_mfd_sellvol_a = s_mfd_sellvol_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_netbuyamt_a
Function s_mfd_netbuyamt_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_netbuyamt_a = WindFunc("s_mfd_netbuyamt_a", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_netbuyamt_a) <> vbString Then
        s_mfd_netbuyamt_a = s_mfd_netbuyamt_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_netbuyvol_a
Function s_mfd_netbuyvol_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_netbuyvol_a = WindFunc("s_mfd_netbuyvol_a", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
    If VarType(s_mfd_netbuyvol_a) <> vbString Then
        s_mfd_netbuyvol_a = s_mfd_netbuyvol_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_inflowvolume_open_a
Function s_mfd_inflowvolume_open_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_inflowvolume_open_a = WindFunc("s_mfd_inflowvolume_open_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_inflowvolume_open_a) <> vbString Then
        s_mfd_inflowvolume_open_a = s_mfd_inflowvolume_open_a / UnitVal_
    End If
End Function

'|3b2||fffd||fffd||fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_inflowvolume_close_a
Function s_mfd_inflowvolume_close_a(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_inflowvolume_close_a = WindFunc("s_mfd_inflowvolume_close_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_inflowvolume_close_a) <> vbString Then
        s_mfd_inflowvolume_close_a = s_mfd_inflowvolume_close_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),s_mfd_volinflowrate_a
Function s_mfd_volinflowrate_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowrate_a = WindFunc("s_mfd_volinflowrate_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),s_mfd_volinflowrate_open_a
Function s_mfd_volinflowrate_open_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowrate_open_a = WindFunc("s_mfd_volinflowrate_open_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),s_mfd_volinflowrate_close_a
Function s_mfd_volinflowrate_close_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowrate_close_a = WindFunc("s_mfd_volinflowrate_close_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_volinflowproportion_open_a
Function s_mfd_volinflowproportion_open_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowproportion_open_a = WindFunc("s_mfd_volinflowproportion_open_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_volinflowproportion_close_a
Function s_mfd_volinflowproportion_close_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowproportion_close_a = WindFunc("s_mfd_volinflowproportion_close_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_mfd_inflowrate_open_a
Function s_mfd_inflowrate_open_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowrate_open_a = WindFunc("s_mfd_inflowrate_open_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_mfd_inflowrate_close_a
Function s_mfd_inflowrate_close_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowrate_close_a = WindFunc("s_mfd_inflowrate_close_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_inflowproportion_a
Function s_mfd_inflowproportion_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowproportion_a = WindFunc("s_mfd_inflowproportion_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_inflowproportion_open_a
Function s_mfd_inflowproportion_open_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowproportion_open_a = WindFunc("s_mfd_inflowproportion_open_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||33e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_inflowproportion_close_a
Function s_mfd_inflowproportion_close_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowproportion_close_a = WindFunc("s_mfd_inflowproportion_close_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_buyvol_m
Function s_mfd_buyvol_m(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyvol_m = WindFunc("s_mfd_buyvol_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_buyvol_m) <> vbString Then
        s_mfd_buyvol_m = s_mfd_buyvol_m / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_buyvol_open_m
Function s_mfd_buyvol_open_m(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyvol_open_m = WindFunc("s_mfd_buyvol_open_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_buyvol_open_m) <> vbString Then
        s_mfd_buyvol_open_m = s_mfd_buyvol_open_m / UnitVal_
    End If
End Function

'|3b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_buyvol_close_m
Function s_mfd_buyvol_close_m(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_buyvol_close_m = WindFunc("s_mfd_buyvol_close_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_buyvol_close_m) <> vbString Then
        s_mfd_buyvol_close_m = s_mfd_buyvol_close_m / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),s_mfd_volinflowrate_m
Function s_mfd_volinflowrate_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowrate_m = WindFunc("s_mfd_volinflowrate_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),s_mfd_volinflowrate_open_m
Function s_mfd_volinflowrate_open_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowrate_open_m = WindFunc("s_mfd_volinflowrate_open_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd|),s_mfd_volinflowrate_close_m
Function s_mfd_volinflowrate_close_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowrate_close_m = WindFunc("s_mfd_volinflowrate_close_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_volinflowproportion_m
Function s_mfd_volinflowproportion_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowproportion_m = WindFunc("s_mfd_volinflowproportion_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_volinflowproportion_open_m
Function s_mfd_volinflowproportion_open_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowproportion_open_m = WindFunc("s_mfd_volinflowproportion_open_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_volinflowproportion_close_m
Function s_mfd_volinflowproportion_close_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_volinflowproportion_close_m = WindFunc("s_mfd_volinflowproportion_close_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_inflow_m
Function s_mfd_inflow_m(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_inflow_m = WindFunc("s_mfd_inflow_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_inflow_m) <> vbString Then
        s_mfd_inflow_m = s_mfd_inflow_m / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_inflow_open_m
Function s_mfd_inflow_open_m(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_inflow_open_m = WindFunc("s_mfd_inflow_open_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_inflow_open_m) <> vbString Then
        s_mfd_inflow_open_m = s_mfd_inflow_open_m / UnitVal_
    End If
End Function

'|3b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_mfd_inflow_close_m
Function s_mfd_inflow_close_m(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_inflow_close_m = WindFunc("s_mfd_inflow_close_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_inflow_close_m) <> vbString Then
        s_mfd_inflow_close_m = s_mfd_inflow_close_m / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_mfd_inflowrate_m
Function s_mfd_inflowrate_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowrate_m = WindFunc("s_mfd_inflowrate_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_mfd_inflowrate_open_m
Function s_mfd_inflowrate_open_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowrate_open_m = WindFunc("s_mfd_inflowrate_open_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|),s_mfd_inflowrate_close_m
Function s_mfd_inflowrate_close_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowrate_close_m = WindFunc("s_mfd_inflowrate_close_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_inflowproportion_m
Function s_mfd_inflowproportion_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowproportion_m = WindFunc("s_mfd_inflowproportion_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_inflowproportion_open_m
Function s_mfd_inflowproportion_open_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowproportion_open_m = WindFunc("s_mfd_inflowproportion_open_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|3b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_mfd_inflowproportion_close_m
Function s_mfd_inflowproportion_close_m(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfd_inflowproportion_close_m = WindFunc("s_mfd_inflowproportion_close_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2016.9.8 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|fffd||fffd||fffd||fffd|,s_fa_eps_basic2
Function s_fa_eps_basic2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_eps_basic2 = WindFunc("s_fa_eps_basic2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|EPS-|3e1||fffd||fffd|,s_fa_eps_diluted4
Function s_fa_eps_diluted4(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_eps_diluted4 = WindFunc("s_fa_eps_diluted4", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd|BPS,s_fa_bps2
Function s_fa_bps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_bps2 = WindFunc("s_fa_bps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||27e||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_fa_ocfps2
Function s_fa_ocfps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_ocfps2 = WindFunc("s_fa_ocfps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,s_fa_orps2
Function s_fa_orps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_orps2 = WindFunc("s_fa_orps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_fa_cfps2
Function s_fa_cfps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    s_fa_cfps2 = WindFunc("s_fa_cfps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5|,f_anal_updiscount_threshold
Function f_anal_updiscount_threshold(WINDCODE_ As Variant) As Variant
    f_anal_updiscount_threshold = WindFunc("f_anal_updiscount_threshold", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5|,f_anal_downdiscount_threshold
Function f_anal_downdiscount_threshold(WINDCODE_ As Variant) As Variant
    f_anal_downdiscount_threshold = WindFunc("f_anal_downdiscount_threshold", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_anal_updiscount_pctchange
Function f_anal_updiscount_pctchange(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_anal_updiscount_pctchange = WindFunc("f_anal_updiscount_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_anal_downdiscount_pctchange
Function f_anal_downdiscount_pctchange(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_anal_downdiscount_pctchange = WindFunc("f_anal_downdiscount_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,f_stm_is_75
Function f_stm_is_75(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_is_75 = WindFunc("f_stm_is_75", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_is_75) <> vbString Then
        f_stm_is_75 = f_stm_is_75 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|,f_stm_is_76
Function f_stm_is_76(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_is_76 = WindFunc("f_stm_is_76", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_is_76) <> vbString Then
        f_stm_is_76 = f_stm_is_76 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_stm_is_77
Function f_stm_is_77(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_is_77 = WindFunc("f_stm_is_77", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_is_77) <> vbString Then
        f_stm_is_77 = f_stm_is_77 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0||fffd||fffd||fffd||fffd|,f_stm_is_78
Function f_stm_is_78(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_is_78 = WindFunc("f_stm_is_78", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_is_78) <> vbString Then
        f_stm_is_78 = f_stm_is_78 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,f_stm_is_79
Function f_stm_is_79(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_is_79 = WindFunc("f_stm_is_79", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_is_79) <> vbString Then
        f_stm_is_79 = f_stm_is_79 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd|),f_stm_is_79_total
Function f_stm_is_79_total(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_is_79_total = WindFunc("f_stm_is_79_total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_is_79_total) <> vbString Then
        f_stm_is_79_total = f_stm_is_79_total / UnitVal_
    End If
End Function

'IPO|fffd||fffd||fffd||fffd||3af||fffd||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_iecresultdate
Function s_ipo_iecresultdate(WINDCODE_ As Variant) As Variant
    s_ipo_iecresultdate = WindFunc("s_ipo_iecresultdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||368||fffd||fffd||5b5|,s_pq_avgmv_nonrestricted
Function s_pq_avgmv_nonrestricted(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_pq_avgmv_nonrestricted = WindFunc("s_pq_avgmv_nonrestricted", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_pq_avgmv_nonrestricted) <> vbString Then
        s_pq_avgmv_nonrestricted = s_pq_avgmv_nonrestricted / UnitVal_
    End If
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||5a7||fffd||fffd|,hks_is_sharepayments
Function hks_is_sharepayments(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_is_sharepayments = WindFunc("hks_is_sharepayments", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_is_sharepayments) <> vbString Then
        hks_is_sharepayments = hks_is_sharepayments / UnitVal_
    End If
End Function

'EBITDA(|fffd||fffd||fffd||fffd||5b5|),hks_is_ebitda_ard
Function hks_is_ebitda_ard(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_is_ebitda_ard = WindFunc("hks_is_ebitda_ard", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_is_ebitda_ard) <> vbString Then
        hks_is_ebitda_ard = hks_is_ebitda_ard / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b7||fffd||fffd||fb||fffd||fffd||437||fffd||5a7||fffd||fffd|,s_stmnote_RDexp_cost
Function s_stmnote_RDexp_cost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_RDexp_cost = WindFunc("s_stmnote_RDexp_cost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_RDexp_cost) <> vbString Then
        s_stmnote_RDexp_cost = s_stmnote_RDexp_cost / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||437||fffd||5a7||fffd||fffd|,s_stmnote_RDexp_capital
Function s_stmnote_RDexp_capital(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_RDexp_capital = WindFunc("s_stmnote_RDexp_capital", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_RDexp_capital) <> vbString Then
        s_stmnote_RDexp_capital = s_stmnote_RDexp_capital / UnitVal_
    End If
End Function

'|fffd||437||fffd||5a7||fffd||fffd||fffd||3fc||fffd|,s_stmnote_RDexp
Function s_stmnote_RDexp(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_RDexp = WindFunc("s_stmnote_RDexp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_RDexp) <> vbString Then
        s_stmnote_RDexp = s_stmnote_RDexp / UnitVal_
    End If
End Function

'|fffd||437||fffd||5a7||fffd||fffd||fffd||736||fffd||57c||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_RDexptosales
Function s_stmnote_RDexptosales(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stmnote_RDexptosales = WindFunc("s_stmnote_RDexptosales", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||2b2||fffd||fffd||739||fffd||123|,s_stmnote_assetmanage
Function s_stmnote_assetmanage(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_assetmanage = WindFunc("s_stmnote_assetmanage", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_assetmanage) <> vbString Then
        s_stmnote_assetmanage = s_stmnote_assetmanage / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_assetmanage_inc_d
Function s_stmnote_assetmanage_inc_d(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_assetmanage_inc_d = WindFunc("s_stmnote_assetmanage_inc_d", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_assetmanage_inc_d) <> vbString Then
        s_stmnote_assetmanage_inc_d = s_stmnote_assetmanage_inc_d / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_assetmanage_inc_c
Function s_stmnote_assetmanage_inc_c(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_assetmanage_inc_c = WindFunc("s_stmnote_assetmanage_inc_c", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_assetmanage_inc_c) <> vbString Then
        s_stmnote_assetmanage_inc_c = s_stmnote_assetmanage_inc_c / UnitVal_
    End If
End Function

'|5e8||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_assetmanage_inc_s
Function s_stmnote_assetmanage_inc_s(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_assetmanage_inc_s = WindFunc("s_stmnote_assetmanage_inc_s", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_assetmanage_inc_s) <> vbString Then
        s_stmnote_assetmanage_inc_s = s_stmnote_assetmanage_inc_s / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_producer
Function s_employee_producer(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_producer = WindFunc("s_employee_producer", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_sale
Function s_employee_sale(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_sale = WindFunc("s_employee_sale", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||377||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_server
Function s_employee_server(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_server = WindFunc("s_employee_server", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_tech
Function s_employee_tech(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_tech = WindFunc("s_employee_tech", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_fin
Function s_employee_fin(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_fin = WindFunc("s_employee_fin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_hr
Function s_employee_hr(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_hr = WindFunc("s_employee_hr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_excu
Function s_employee_excu(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_excu = WindFunc("s_employee_excu", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6fa||3f9||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_admin
Function s_employee_admin(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_admin = WindFunc("s_employee_admin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||63b||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_rc
Function s_employee_rc(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_rc = WindFunc("s_employee_rc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||279||fffd||fffd||5b4||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_pur
Function s_employee_pur(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_pur = WindFunc("s_employee_pur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_employee_othdept
Function s_employee_othdept(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_othdept = WindFunc("s_employee_othdept", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||2bf||fffd||fffd||fffd||fffd|,s_employee_PHD
Function s_employee_PHD(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_PHD = WindFunc("s_employee_PHD", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|2f6||2bf||fffd||fffd||fffd||fffd|,s_employee_MS
Function s_employee_MS(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_MS = WindFunc("s_employee_MS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_employee_BA
Function s_employee_BA(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_BA = WindFunc("s_employee_BA", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|5e8||fffd||fffd||fffd||fffd||fffd||fffd|,s_employee_coll
Function s_employee_coll(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_coll = WindFunc("s_employee_coll", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||43c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_employee_highschool
Function s_employee_highschool(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_highschool = WindFunc("s_employee_highschool", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||467||fffd||fffd||fffd||fffd||fffd||fffd|,s_employee_othdegree
Function s_employee_othdegree(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_othdegree = WindFunc("s_employee_othdegree", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_producer_pct
Function s_employee_producer_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_producer_pct = WindFunc("s_employee_producer_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_sale_pct
Function s_employee_sale_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_sale_pct = WindFunc("s_employee_sale_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||377||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_server_pct
Function s_employee_server_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_server_pct = WindFunc("s_employee_server_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_tech_pct
Function s_employee_tech_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_tech_pct = WindFunc("s_employee_tech_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_fin_pct
Function s_employee_fin_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_fin_pct = WindFunc("s_employee_fin_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_hr_pct
Function s_employee_hr_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_hr_pct = WindFunc("s_employee_hr_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_excu_pct
Function s_employee_excu_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_excu_pct = WindFunc("s_employee_excu_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6fa||3f9||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_admin_pct
Function s_employee_admin_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_admin_pct = WindFunc("s_employee_admin_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||63b||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_rc_pct
Function s_employee_rc_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_rc_pct = WindFunc("s_employee_rc_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||279||fffd||fffd||5b4||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_pur_pct
Function s_employee_pur_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_pur_pct = WindFunc("s_employee_pur_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||5e8||4b5||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_othdept_pct
Function s_employee_othdept_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_othdept_pct = WindFunc("s_employee_othdept_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||2bf||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_PHD_pct
Function s_employee_PHD_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_PHD_pct = WindFunc("s_employee_PHD_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|2f6||2bf||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_MS_pct
Function s_employee_MS_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_MS_pct = WindFunc("s_employee_MS_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_BA_pct
Function s_employee_BA_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_BA_pct = WindFunc("s_employee_BA_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|5e8||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_coll_pct
Function s_employee_coll_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_coll_pct = WindFunc("s_employee_coll_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||43c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_highschool_pct
Function s_employee_highschool_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_highschool_pct = WindFunc("s_employee_highschool_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||467||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_employee_othdegree_pct
Function s_employee_othdegree_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_othdegree_pct = WindFunc("s_employee_othdegree_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||434||fffd||276||fffd||fffd||fffd||fffd||fffd|,s_holder_name_state
Function s_holder_name_state(WINDCODE_ As Variant, TRADEDATE_ As Variant, Sequence_ As Byte) As Variant
    s_holder_name_state = WindFunc("s_holder_name_state", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Sequence_)
End Function

'|fffd||fffd||fffd||434||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,s_holder_quantity_state
Function s_holder_quantity_state(WINDCODE_ As Variant, TRADEDATE_ As Variant, Sequence_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_holder_quantity_state = WindFunc("s_holder_quantity_state", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Sequence_)
    If VarType(s_holder_quantity_state) <> vbString Then
        s_holder_quantity_state = s_holder_quantity_state / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||434||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,s_holder_quantity_state_tot
Function s_holder_quantity_state_tot(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_holder_quantity_state_tot = WindFunc("s_holder_quantity_state_tot", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_holder_quantity_state_tot) <> vbString Then
        s_holder_quantity_state_tot = s_holder_quantity_state_tot / UnitVal_
    End If
End Function

'|fffd||5f6||3b2||fffd||3f8||3f5||fffd||fffd|,s_div_adjfactor
Function s_div_adjfactor(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant) As Variant
    s_div_adjfactor = WindFunc("s_div_adjfactor", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
End Function

'|fffd||fffd||228||ff||fffd||fffd||fffd||5bd||fffd||5ba||fffd|,s_div_adjcash
Function s_div_adjcash(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant) As Variant
    s_div_adjcash = WindFunc("s_div_adjcash", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
End Function

'16.10.28 added
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b7||fffd|,f_rating_latestmonth
Function f_rating_latestmonth(WINDCODE_ As Variant, RATINGAGENCY_ As String, RatingInterval_ As String) As Variant
    f_rating_latestmonth = WindFunc("f_rating_latestmonth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), RATINGAGENCY_, RatingInterval_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_operateperiod_cls
Function f_info_operateperiod_cls(WINDCODE_ As Variant) As Variant
    f_info_operateperiod_cls = WindFunc("f_info_operateperiod_cls", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|524||fffd||fffd||fffd||fffd||fffd||6bf||fffd||fffd||fffd||fffd||fffd|,f_info_expectedopenday
Function f_info_expectedopenday(WINDCODE_ As Variant) As Variant
    f_info_expectedopenday = WindFunc("f_info_expectedopenday", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||22f||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_ipo_leadundr_n
Function s_ipo_leadundr_n(WINDCODE_ As Variant) As Variant
    s_ipo_leadundr_n = WindFunc("s_ipo_leadundr_n", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b2||fffd||1b7||fffd||fffd||fffd|,s_stmnote_bank_1778
Function s_stmnote_bank_1778(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_1778 = WindFunc("s_stmnote_bank_1778", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_bank_1778) <> vbString Then
        s_stmnote_bank_1778 = s_stmnote_bank_1778 / UnitVal_
    End If
End Function

'16.11.11 added
'|fffd||fffd||fffd||fffd||fffd||123|(|fffd||3fc||fffd|),f_netasset_total
Function f_netasset_total(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_netasset_total = WindFunc("f_netasset_total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
    If VarType(f_netasset_total) <> vbString Then
        f_netasset_total = f_netasset_total / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|),f_info_expectedyield
Function f_info_expectedyield(WINDCODE_ As Variant) As Variant
    f_info_expectedyield = WindFunc("f_info_expectedyield", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd||437||776||fffd|,f_holder_corp_holding
Function f_holder_corp_holding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_holder_corp_holding = WindFunc("f_holder_corp_holding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_holder_corp_holding) <> vbString Then
        f_holder_corp_holding = f_holder_corp_holding / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4fbb||5b5||fffd||fffd||53d||fffd||fffd||5fc||fffd||fffd||fffd||fffd||1b5||fffd||fffd|,f_nav_navoverbenchreturn_freq
Function f_nav_navoverbenchreturn_freq(WINDCODE_ As Variant, Year_ As Integer) As Variant
    f_nav_navoverbenchreturn_freq = WindFunc("f_nav_navoverbenchreturn_freq", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Year_)
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|(|4e2||fffd||fffd|),f_info_investtypeeng
Function f_info_investtypeeng(WINDCODE_ As Variant, FundGroup_ As Integer) As Variant
    f_info_investtypeeng = WindFunc("f_info_investtypeeng", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), FundGroup_)
End Function

'20161122 added
'|fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f6||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_611
Function s_stmnote_bank_611(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_611 = WindFunc("s_stmnote_bank_611", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_611) <> vbString Then
        s_stmnote_bank_611 = s_stmnote_bank_611 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2fb||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_612
Function s_stmnote_bank_612(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_612 = WindFunc("s_stmnote_bank_612", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_612) <> vbString Then
        s_stmnote_bank_612 = s_stmnote_bank_612 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_613
Function s_stmnote_bank_613(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_613 = WindFunc("s_stmnote_bank_613", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_613) <> vbString Then
        s_stmnote_bank_613 = s_stmnote_bank_613 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_614
Function s_stmnote_bank_614(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_614 = WindFunc("s_stmnote_bank_614", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_614) <> vbString Then
        s_stmnote_bank_614 = s_stmnote_bank_614 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_615
Function s_stmnote_bank_615(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_615 = WindFunc("s_stmnote_bank_615", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_615) <> vbString Then
        s_stmnote_bank_615 = s_stmnote_bank_615 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f6||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_621
Function s_stmnote_bank_621(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_621 = WindFunc("s_stmnote_bank_621", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_621) <> vbString Then
        s_stmnote_bank_621 = s_stmnote_bank_621 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2fb||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_622
Function s_stmnote_bank_622(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_622 = WindFunc("s_stmnote_bank_622", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_622) <> vbString Then
        s_stmnote_bank_622 = s_stmnote_bank_622 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_623
Function s_stmnote_bank_623(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_623 = WindFunc("s_stmnote_bank_623", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_623) <> vbString Then
        s_stmnote_bank_623 = s_stmnote_bank_623 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_624
Function s_stmnote_bank_624(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_624 = WindFunc("s_stmnote_bank_624", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_624) <> vbString Then
        s_stmnote_bank_624 = s_stmnote_bank_624 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_625
Function s_stmnote_bank_625(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_625 = WindFunc("s_stmnote_bank_625", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_625) <> vbString Then
        s_stmnote_bank_625 = s_stmnote_bank_625 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3e2||5a7||fffd||fffd|_|fffd||fffd||fffd||2f6||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_631
Function s_stmnote_bank_631(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_631 = WindFunc("s_stmnote_bank_631", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_631) <> vbString Then
        s_stmnote_bank_631 = s_stmnote_bank_631 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3e2||5a7||fffd||fffd|_|fffd||fffd||fffd||2fb||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_632
Function s_stmnote_bank_632(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_632 = WindFunc("s_stmnote_bank_632", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_632) <> vbString Then
        s_stmnote_bank_632 = s_stmnote_bank_632 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3e2||5a7||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_633
Function s_stmnote_bank_633(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_633 = WindFunc("s_stmnote_bank_633", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_633) <> vbString Then
        s_stmnote_bank_633 = s_stmnote_bank_633 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3e2||5a7||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_634
Function s_stmnote_bank_634(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_634 = WindFunc("s_stmnote_bank_634", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_634) <> vbString Then
        s_stmnote_bank_634 = s_stmnote_bank_634 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||3e2||5a7||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_635
Function s_stmnote_bank_635(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_635 = WindFunc("s_stmnote_bank_635", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_635) <> vbString Then
        s_stmnote_bank_635 = s_stmnote_bank_635 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||271||fffd||fffd||fffd|_|fffd||fffd||fffd||2f6||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_641
Function s_stmnote_bank_641(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_641 = WindFunc("s_stmnote_bank_641", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||271||fffd||fffd||fffd|_|fffd||fffd||fffd||2fb||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_642
Function s_stmnote_bank_642(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_642 = WindFunc("s_stmnote_bank_642", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||271||fffd||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_643
Function s_stmnote_bank_643(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_643 = WindFunc("s_stmnote_bank_643", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||271||fffd||fffd||fffd|_|fffd||fffd||2fe||fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_bank_644
Function s_stmnote_bank_644(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_644 = WindFunc("s_stmnote_bank_644", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||1bd||fffd||fffd||fffd||271||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_645
Function s_stmnote_bank_645(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_645 = WindFunc("s_stmnote_bank_645", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4b5||fffd||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_681
Function s_stmnote_bank_681(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_681 = WindFunc("s_stmnote_bank_681", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_681) <> vbString Then
        s_stmnote_bank_681 = s_stmnote_bank_681 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f4||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_682
Function s_stmnote_bank_682(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_682 = WindFunc("s_stmnote_bank_682", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_682) <> vbString Then
        s_stmnote_bank_682 = s_stmnote_bank_682 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|1b1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_683
Function s_stmnote_bank_683(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_683 = WindFunc("s_stmnote_bank_683", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_683) <> vbString Then
        s_stmnote_bank_683 = s_stmnote_bank_683 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_684
Function s_stmnote_bank_684(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_684 = WindFunc("s_stmnote_bank_684", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_684) <> vbString Then
        s_stmnote_bank_684 = s_stmnote_bank_684 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||474||fffd||fffd||fffd|,s_stmnote_bank_685
Function s_stmnote_bank_685(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_685 = WindFunc("s_stmnote_bank_685", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_685) <> vbString Then
        s_stmnote_bank_685 = s_stmnote_bank_685 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||ff||fffd||4e6||fffd||fffd||fffd||2ff||fffd|,s_stmnote_bank_686
Function s_stmnote_bank_686(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_686 = WindFunc("s_stmnote_bank_686", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_686) <> vbString Then
        s_stmnote_bank_686 = s_stmnote_bank_686 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4ea||fffd||534||fffd||fffd||fffd|,s_stmnote_bank_687
Function s_stmnote_bank_687(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_687 = WindFunc("s_stmnote_bank_687", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_687) <> vbString Then
        s_stmnote_bank_687 = s_stmnote_bank_687 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_688
Function s_stmnote_bank_688(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_688 = WindFunc("s_stmnote_bank_688", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_688) <> vbString Then
        s_stmnote_bank_688 = s_stmnote_bank_688 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,s_stmnote_bank_689
Function s_stmnote_bank_689(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_689 = WindFunc("s_stmnote_bank_689", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_689) <> vbString Then
        s_stmnote_bank_689 = s_stmnote_bank_689 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4b5||fffd||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_691
Function s_stmnote_bank_691(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_691 = WindFunc("s_stmnote_bank_691", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_691) <> vbString Then
        s_stmnote_bank_691 = s_stmnote_bank_691 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f4||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_692
Function s_stmnote_bank_692(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_692 = WindFunc("s_stmnote_bank_692", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_692) <> vbString Then
        s_stmnote_bank_692 = s_stmnote_bank_692 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|1b1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_693
Function s_stmnote_bank_693(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_693 = WindFunc("s_stmnote_bank_693", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_693) <> vbString Then
        s_stmnote_bank_693 = s_stmnote_bank_693 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_694
Function s_stmnote_bank_694(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_694 = WindFunc("s_stmnote_bank_694", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_694) <> vbString Then
        s_stmnote_bank_694 = s_stmnote_bank_694 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||474||fffd||fffd||fffd|,s_stmnote_bank_695
Function s_stmnote_bank_695(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_695 = WindFunc("s_stmnote_bank_695", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_695) <> vbString Then
        s_stmnote_bank_695 = s_stmnote_bank_695 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||ff||fffd||4e6||fffd||fffd||fffd||2ff||fffd|,s_stmnote_bank_696
Function s_stmnote_bank_696(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_696 = WindFunc("s_stmnote_bank_696", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_696) <> vbString Then
        s_stmnote_bank_696 = s_stmnote_bank_696 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4ea||fffd||534||fffd||fffd||fffd|,s_stmnote_bank_697
Function s_stmnote_bank_697(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_697 = WindFunc("s_stmnote_bank_697", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_697) <> vbString Then
        s_stmnote_bank_697 = s_stmnote_bank_697 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_698
Function s_stmnote_bank_698(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_698 = WindFunc("s_stmnote_bank_698", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_698) <> vbString Then
        s_stmnote_bank_698 = s_stmnote_bank_698 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,s_stmnote_bank_699
Function s_stmnote_bank_699(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_699 = WindFunc("s_stmnote_bank_699", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_699) <> vbString Then
        s_stmnote_bank_699 = s_stmnote_bank_699 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4b5||fffd||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_701
Function s_stmnote_bank_701(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_701 = WindFunc("s_stmnote_bank_701", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f4||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_702
Function s_stmnote_bank_702(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_702 = WindFunc("s_stmnote_bank_702", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|1b1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_703
Function s_stmnote_bank_703(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_703 = WindFunc("s_stmnote_bank_703", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_704
Function s_stmnote_bank_704(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_704 = WindFunc("s_stmnote_bank_704", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||474||fffd||fffd||fffd|,s_stmnote_bank_705
Function s_stmnote_bank_705(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_705 = WindFunc("s_stmnote_bank_705", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||ff||fffd||4e6||fffd||fffd||fffd||2ff||fffd|,s_stmnote_bank_706
Function s_stmnote_bank_706(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_706 = WindFunc("s_stmnote_bank_706", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4ea||fffd||534||fffd||fffd||fffd|,s_stmnote_bank_707
Function s_stmnote_bank_707(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_707 = WindFunc("s_stmnote_bank_707", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_708
Function s_stmnote_bank_708(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_708 = WindFunc("s_stmnote_bank_708", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,s_stmnote_bank_709
Function s_stmnote_bank_709(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_709 = WindFunc("s_stmnote_bank_709", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4b5||fffd||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_711
Function s_stmnote_bank_711(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_711 = WindFunc("s_stmnote_bank_711", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_711) <> vbString Then
        s_stmnote_bank_711 = s_stmnote_bank_711 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f4||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_712
Function s_stmnote_bank_712(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_712 = WindFunc("s_stmnote_bank_712", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_712) <> vbString Then
        s_stmnote_bank_712 = s_stmnote_bank_712 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|1b1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_713
Function s_stmnote_bank_713(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_713 = WindFunc("s_stmnote_bank_713", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_713) <> vbString Then
        s_stmnote_bank_713 = s_stmnote_bank_713 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_714
Function s_stmnote_bank_714(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_714 = WindFunc("s_stmnote_bank_714", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_714) <> vbString Then
        s_stmnote_bank_714 = s_stmnote_bank_714 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||474||fffd||fffd||fffd|,s_stmnote_bank_715
Function s_stmnote_bank_715(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_715 = WindFunc("s_stmnote_bank_715", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_715) <> vbString Then
        s_stmnote_bank_715 = s_stmnote_bank_715 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||ff||fffd||4e6||fffd||fffd||fffd||2ff||fffd|,s_stmnote_bank_716
Function s_stmnote_bank_716(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_716 = WindFunc("s_stmnote_bank_716", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_716) <> vbString Then
        s_stmnote_bank_716 = s_stmnote_bank_716 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4ea||fffd||534||fffd||fffd||fffd|,s_stmnote_bank_717
Function s_stmnote_bank_717(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_717 = WindFunc("s_stmnote_bank_717", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_717) <> vbString Then
        s_stmnote_bank_717 = s_stmnote_bank_717 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_718
Function s_stmnote_bank_718(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_718 = WindFunc("s_stmnote_bank_718", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_718) <> vbString Then
        s_stmnote_bank_718 = s_stmnote_bank_718 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,s_stmnote_bank_719
Function s_stmnote_bank_719(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_719 = WindFunc("s_stmnote_bank_719", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_719) <> vbString Then
        s_stmnote_bank_719 = s_stmnote_bank_719 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||4b5||fffd||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_721
Function s_stmnote_bank_721(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_721 = WindFunc("s_stmnote_bank_721", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_721) <> vbString Then
        s_stmnote_bank_721 = s_stmnote_bank_721 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f4||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_722
Function s_stmnote_bank_722(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_722 = WindFunc("s_stmnote_bank_722", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_722) <> vbString Then
        s_stmnote_bank_722 = s_stmnote_bank_722 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|1b1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_723
Function s_stmnote_bank_723(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_723 = WindFunc("s_stmnote_bank_723", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_723) <> vbString Then
        s_stmnote_bank_723 = s_stmnote_bank_723 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_724
Function s_stmnote_bank_724(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_724 = WindFunc("s_stmnote_bank_724", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_724) <> vbString Then
        s_stmnote_bank_724 = s_stmnote_bank_724 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||474||fffd||fffd||fffd|,s_stmnote_bank_725
Function s_stmnote_bank_725(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_725 = WindFunc("s_stmnote_bank_725", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_725) <> vbString Then
        s_stmnote_bank_725 = s_stmnote_bank_725 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||ff||fffd||4e6||fffd||fffd||fffd||2ff||fffd|,s_stmnote_bank_726
Function s_stmnote_bank_726(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_726 = WindFunc("s_stmnote_bank_726", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_726) <> vbString Then
        s_stmnote_bank_726 = s_stmnote_bank_726 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||4ea||fffd||534||fffd||fffd||fffd|,s_stmnote_bank_727
Function s_stmnote_bank_727(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_727 = WindFunc("s_stmnote_bank_727", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_727) <> vbString Then
        s_stmnote_bank_727 = s_stmnote_bank_727 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_728
Function s_stmnote_bank_728(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_728 = WindFunc("s_stmnote_bank_728", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_728) <> vbString Then
        s_stmnote_bank_728 = s_stmnote_bank_728 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,s_stmnote_bank_729
Function s_stmnote_bank_729(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_729 = WindFunc("s_stmnote_bank_729", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_729) <> vbString Then
        s_stmnote_bank_729 = s_stmnote_bank_729 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4b5||fffd||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_731
Function s_stmnote_bank_731(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_731 = WindFunc("s_stmnote_bank_731", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||2f4||fffd||fffd||ef30||fffd||fffd||fffd|,s_stmnote_bank_732
Function s_stmnote_bank_732(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_732 = WindFunc("s_stmnote_bank_732", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|1b1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_733
Function s_stmnote_bank_733(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_733 = WindFunc("s_stmnote_bank_733", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||5e1||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_734
Function s_stmnote_bank_734(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_734 = WindFunc("s_stmnote_bank_734", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||474||fffd||fffd||fffd|,s_stmnote_bank_735
Function s_stmnote_bank_735(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_735 = WindFunc("s_stmnote_bank_735", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||ff||fffd||4e6||fffd||fffd||fffd||2ff||fffd|,s_stmnote_bank_736
Function s_stmnote_bank_736(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_736 = WindFunc("s_stmnote_bank_736", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||4ea||fffd||534||fffd||fffd||fffd|,s_stmnote_bank_737
Function s_stmnote_bank_737(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_737 = WindFunc("s_stmnote_bank_737", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_738
Function s_stmnote_bank_738(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_738 = WindFunc("s_stmnote_bank_738", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f4||fffd||fffd||fffd|,s_stmnote_bank_739
Function s_stmnote_bank_739(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_739 = WindFunc("s_stmnote_bank_739", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||f4||fffd||fffd||fffd|,s_stmnote_bank_741
Function s_stmnote_bank_741(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_741 = WindFunc("s_stmnote_bank_741", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_741) <> vbString Then
        s_stmnote_bank_741 = s_stmnote_bank_741 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||5a4||fffd||fffd||fffd||fffd|,s_stmnote_bank_742
Function s_stmnote_bank_742(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_742 = WindFunc("s_stmnote_bank_742", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_742) <> vbString Then
        s_stmnote_bank_742 = s_stmnote_bank_742 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_743
Function s_stmnote_bank_743(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_743 = WindFunc("s_stmnote_bank_743", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_743) <> vbString Then
        s_stmnote_bank_743 = s_stmnote_bank_743 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_744
Function s_stmnote_bank_744(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_744 = WindFunc("s_stmnote_bank_744", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_744) <> vbString Then
        s_stmnote_bank_744 = s_stmnote_bank_744 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||f4||fffd||fffd||fffd|,s_stmnote_bank_751
Function s_stmnote_bank_751(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_751 = WindFunc("s_stmnote_bank_751", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_751) <> vbString Then
        s_stmnote_bank_751 = s_stmnote_bank_751 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||5a4||fffd||fffd||fffd||fffd|,s_stmnote_bank_752
Function s_stmnote_bank_752(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_752 = WindFunc("s_stmnote_bank_752", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_752) <> vbString Then
        s_stmnote_bank_752 = s_stmnote_bank_752 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_753
Function s_stmnote_bank_753(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_753 = WindFunc("s_stmnote_bank_753", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_753) <> vbString Then
        s_stmnote_bank_753 = s_stmnote_bank_753 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_754
Function s_stmnote_bank_754(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_754 = WindFunc("s_stmnote_bank_754", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_754) <> vbString Then
        s_stmnote_bank_754 = s_stmnote_bank_754 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||f4||fffd||fffd||fffd|,s_stmnote_bank_761
Function s_stmnote_bank_761(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_761 = WindFunc("s_stmnote_bank_761", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||5a4||fffd||fffd||fffd||fffd|,s_stmnote_bank_762
Function s_stmnote_bank_762(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_762 = WindFunc("s_stmnote_bank_762", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_763
Function s_stmnote_bank_763(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_763 = WindFunc("s_stmnote_bank_763", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_764
Function s_stmnote_bank_764(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_764 = WindFunc("s_stmnote_bank_764", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||f4||fffd||fffd||fffd|,s_stmnote_bank_771
Function s_stmnote_bank_771(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_771 = WindFunc("s_stmnote_bank_771", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_771) <> vbString Then
        s_stmnote_bank_771 = s_stmnote_bank_771 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||5a4||fffd||fffd||fffd||fffd|,s_stmnote_bank_772
Function s_stmnote_bank_772(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_772 = WindFunc("s_stmnote_bank_772", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_772) <> vbString Then
        s_stmnote_bank_772 = s_stmnote_bank_772 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_773
Function s_stmnote_bank_773(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_773 = WindFunc("s_stmnote_bank_773", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_773) <> vbString Then
        s_stmnote_bank_773 = s_stmnote_bank_773 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_774
Function s_stmnote_bank_774(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_774 = WindFunc("s_stmnote_bank_774", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_774) <> vbString Then
        s_stmnote_bank_774 = s_stmnote_bank_774 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||f4||fffd||fffd||fffd|,s_stmnote_bank_781
Function s_stmnote_bank_781(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_781 = WindFunc("s_stmnote_bank_781", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_781) <> vbString Then
        s_stmnote_bank_781 = s_stmnote_bank_781 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||5a4||fffd||fffd||fffd||fffd|,s_stmnote_bank_782
Function s_stmnote_bank_782(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_782 = WindFunc("s_stmnote_bank_782", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_782) <> vbString Then
        s_stmnote_bank_782 = s_stmnote_bank_782 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_783
Function s_stmnote_bank_783(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_783 = WindFunc("s_stmnote_bank_783", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_783) <> vbString Then
        s_stmnote_bank_783 = s_stmnote_bank_783 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_784
Function s_stmnote_bank_784(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_784 = WindFunc("s_stmnote_bank_784", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_784) <> vbString Then
        s_stmnote_bank_784 = s_stmnote_bank_784 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||f4||fffd||fffd||fffd|,s_stmnote_bank_791
Function s_stmnote_bank_791(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_791 = WindFunc("s_stmnote_bank_791", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||5a4||fffd||fffd||fffd||fffd|,s_stmnote_bank_792
Function s_stmnote_bank_792(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_792 = WindFunc("s_stmnote_bank_792", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_793
Function s_stmnote_bank_793(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_793 = WindFunc("s_stmnote_bank_793", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||47a||fffd||fffd||fffd||fffd|,s_stmnote_bank_794
Function s_stmnote_bank_794(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_794 = WindFunc("s_stmnote_bank_794", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_801
Function s_stmnote_bank_801(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_801 = WindFunc("s_stmnote_bank_801", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_801) <> vbString Then
        s_stmnote_bank_801 = s_stmnote_bank_801 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_802
Function s_stmnote_bank_802(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_802 = WindFunc("s_stmnote_bank_802", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_802) <> vbString Then
        s_stmnote_bank_802 = s_stmnote_bank_802 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_811
Function s_stmnote_bank_811(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_811 = WindFunc("s_stmnote_bank_811", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_811) <> vbString Then
        s_stmnote_bank_811 = s_stmnote_bank_811 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_812
Function s_stmnote_bank_812(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_812 = WindFunc("s_stmnote_bank_812", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_812) <> vbString Then
        s_stmnote_bank_812 = s_stmnote_bank_812 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_821
Function s_stmnote_bank_821(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_821 = WindFunc("s_stmnote_bank_821", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_822
Function s_stmnote_bank_822(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_822 = WindFunc("s_stmnote_bank_822", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_841
Function s_stmnote_bank_841(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_841 = WindFunc("s_stmnote_bank_841", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_841) <> vbString Then
        s_stmnote_bank_841 = s_stmnote_bank_841 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||433||fffd||fffd||6b4||fffd||fffd||fffd|,s_stmnote_bank_842
Function s_stmnote_bank_842(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_842 = WindFunc("s_stmnote_bank_842", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_842) <> vbString Then
        s_stmnote_bank_842 = s_stmnote_bank_842 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|),s_stmnote_bank_65
Function s_stmnote_bank_65(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional IndustryName_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_65 = WindFunc("s_stmnote_bank_65", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_, IndustryName_)
    If VarType(s_stmnote_bank_65) <> vbString Then
        s_stmnote_bank_65 = s_stmnote_bank_65 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|),s_stmnote_bank_66
Function s_stmnote_bank_66(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional IndustryName_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_66 = WindFunc("s_stmnote_bank_66", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_, IndustryName_)
    If VarType(s_stmnote_bank_66) <> vbString Then
        s_stmnote_bank_66 = s_stmnote_bank_66 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|),s_stmnote_bank_67
Function s_stmnote_bank_67(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional IndustryName_ As Byte) As Variant
    s_stmnote_bank_67 = WindFunc("s_stmnote_bank_67", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_, IndustryName_)
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd|,s_stmnote_insur_7801
Function s_stmnote_insur_7801(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7801 = WindFunc("s_stmnote_insur_7801", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7801) <> vbString Then
        s_stmnote_insur_7801 = s_stmnote_insur_7801 / UnitVal_
    End If
End Function

'|56e||22f||376||fffd||fffd|,s_stmnote_insur_7802
Function s_stmnote_insur_7802(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7802 = WindFunc("s_stmnote_insur_7802", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7802) <> vbString Then
        s_stmnote_insur_7802 = s_stmnote_insur_7802 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd|,s_stmnote_insur_7803
Function s_stmnote_insur_7803(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7803 = WindFunc("s_stmnote_insur_7803", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7803) <> vbString Then
        s_stmnote_insur_7803 = s_stmnote_insur_7803 / UnitVal_
    End If
End Function

'|fffd||fffd||1b1||376||fffd||fffd|,s_stmnote_insur_7804
Function s_stmnote_insur_7804(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7804 = WindFunc("s_stmnote_insur_7804", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7804) <> vbString Then
        s_stmnote_insur_7804 = s_stmnote_insur_7804 / UnitVal_
    End If
End Function

'|fffd||fffd||228||376||fffd||fffd|,s_stmnote_insur_7805
Function s_stmnote_insur_7805(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7805 = WindFunc("s_stmnote_insur_7805", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7805) <> vbString Then
        s_stmnote_insur_7805 = s_stmnote_insur_7805 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd|,s_stmnote_insur_7806
Function s_stmnote_insur_7806(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7806 = WindFunc("s_stmnote_insur_7806", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7806) <> vbString Then
        s_stmnote_insur_7806 = s_stmnote_insur_7806 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||fffd|,s_stmnote_insur_7807
Function s_stmnote_insur_7807(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7807 = WindFunc("s_stmnote_insur_7807", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7807) <> vbString Then
        s_stmnote_insur_7807 = s_stmnote_insur_7807 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd|,s_stmnote_insur_7808
Function s_stmnote_insur_7808(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7808 = WindFunc("s_stmnote_insur_7808", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7808) <> vbString Then
        s_stmnote_insur_7808 = s_stmnote_insur_7808 / UnitVal_
    End If
End Function

'|fffd||fffd||376||fffd||fffd||fffd||2b2||fffd|,s_stmnote_insur_7809
Function s_stmnote_insur_7809(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7809 = WindFunc("s_stmnote_insur_7809", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7809) <> vbString Then
        s_stmnote_insur_7809 = s_stmnote_insur_7809 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||17f||37b||fffd||fffd||fffd|,s_stmnote_insur_7810
Function s_stmnote_insur_7810(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_insur_7810 = WindFunc("s_stmnote_insur_7810", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||4ea||fffd||fffd||531||fffd||fffd||fffd||fffd|,s_stmnote_insur_7811
Function s_stmnote_insur_7811(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_insur_7811 = WindFunc("s_stmnote_insur_7811", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||4ea||fffd||fffd||531||ff||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd||ac63||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_insur_7812
Function s_stmnote_insur_7812(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_7812 = WindFunc("s_stmnote_insur_7812", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_insur_7812) <> vbString Then
        s_stmnote_insur_7812 = s_stmnote_insur_7812 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4ea||fffd||fffd||531||ff||fffd||fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_insur_7813
Function s_stmnote_insur_7813(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_insur_7813 = WindFunc("s_stmnote_insur_7813", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0001
Function s_stmnote_bank_0001(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0001 = WindFunc("s_stmnote_bank_0001", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0001) <> vbString Then
        s_stmnote_bank_0001 = s_stmnote_bank_0001 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd|,s_stmnote_bank_0002
Function s_stmnote_bank_0002(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0002 = WindFunc("s_stmnote_bank_0002", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0002) <> vbString Then
        s_stmnote_bank_0002 = s_stmnote_bank_0002 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd|_1|fffd||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0003
Function s_stmnote_bank_0003(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0003 = WindFunc("s_stmnote_bank_0003", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0003) <> vbString Then
        s_stmnote_bank_0003 = s_stmnote_bank_0003 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0004
Function s_stmnote_bank_0004(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0004 = WindFunc("s_stmnote_bank_0004", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0004) <> vbString Then
        s_stmnote_bank_0004 = s_stmnote_bank_0004 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd||3fc||fffd|,s_stmnote_bank_0005
Function s_stmnote_bank_0005(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0005 = WindFunc("s_stmnote_bank_0005", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0005) <> vbString Then
        s_stmnote_bank_0005 = s_stmnote_bank_0005 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b1||fffd||5a4||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0021
Function s_stmnote_bank_0021(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0021 = WindFunc("s_stmnote_bank_0021", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0021) <> vbString Then
        s_stmnote_bank_0021 = s_stmnote_bank_0021 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b1||fffd||5a4||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd|,s_stmnote_bank_0022
Function s_stmnote_bank_0022(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0022 = WindFunc("s_stmnote_bank_0022", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0022) <> vbString Then
        s_stmnote_bank_0022 = s_stmnote_bank_0022 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b1||fffd||5a4||fffd||fffd||fffd||fffd|_1|fffd||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0023
Function s_stmnote_bank_0023(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0023 = WindFunc("s_stmnote_bank_0023", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0023) <> vbString Then
        s_stmnote_bank_0023 = s_stmnote_bank_0023 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b1||fffd||5a4||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0024
Function s_stmnote_bank_0024(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0024 = WindFunc("s_stmnote_bank_0024", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0024) <> vbString Then
        s_stmnote_bank_0024 = s_stmnote_bank_0024 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b1||fffd||5a4||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_bank_0025
Function s_stmnote_bank_0025(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0025 = WindFunc("s_stmnote_bank_0025", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0025) <> vbString Then
        s_stmnote_bank_0025 = s_stmnote_bank_0025 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||f4||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0011
Function s_stmnote_bank_0011(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0011 = WindFunc("s_stmnote_bank_0011", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0011) <> vbString Then
        s_stmnote_bank_0011 = s_stmnote_bank_0011 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||f4||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd|,s_stmnote_bank_0012
Function s_stmnote_bank_0012(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0012 = WindFunc("s_stmnote_bank_0012", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0012) <> vbString Then
        s_stmnote_bank_0012 = s_stmnote_bank_0012 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||f4||fffd||fffd||fffd|_1|fffd||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0013
Function s_stmnote_bank_0013(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0013 = WindFunc("s_stmnote_bank_0013", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0013) <> vbString Then
        s_stmnote_bank_0013 = s_stmnote_bank_0013 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||f4||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0014
Function s_stmnote_bank_0014(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0014 = WindFunc("s_stmnote_bank_0014", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0014) <> vbString Then
        s_stmnote_bank_0014 = s_stmnote_bank_0014 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||f4||fffd||fffd||fffd||3fc||fffd|,s_stmnote_bank_0015
Function s_stmnote_bank_0015(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0015 = WindFunc("s_stmnote_bank_0015", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0015) <> vbString Then
        s_stmnote_bank_0015 = s_stmnote_bank_0015 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b5||fffd||47a||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0031
Function s_stmnote_bank_0031(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0031 = WindFunc("s_stmnote_bank_0031", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0031) <> vbString Then
        s_stmnote_bank_0031 = s_stmnote_bank_0031 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b5||fffd||47a||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd|,s_stmnote_bank_0032
Function s_stmnote_bank_0032(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0032 = WindFunc("s_stmnote_bank_0032", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0032) <> vbString Then
        s_stmnote_bank_0032 = s_stmnote_bank_0032 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b5||fffd||47a||fffd||fffd||fffd||fffd|_1|fffd||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0033
Function s_stmnote_bank_0033(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0033 = WindFunc("s_stmnote_bank_0033", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0033) <> vbString Then
        s_stmnote_bank_0033 = s_stmnote_bank_0033 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b5||fffd||47a||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0034
Function s_stmnote_bank_0034(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0034 = WindFunc("s_stmnote_bank_0034", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0034) <> vbString Then
        s_stmnote_bank_0034 = s_stmnote_bank_0034 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b5||fffd||47a||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_bank_0035
Function s_stmnote_bank_0035(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0035 = WindFunc("s_stmnote_bank_0035", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0035) <> vbString Then
        s_stmnote_bank_0035 = s_stmnote_bank_0035 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0041
Function s_stmnote_bank_0041(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0041 = WindFunc("s_stmnote_bank_0041", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0041) <> vbString Then
        s_stmnote_bank_0041 = s_stmnote_bank_0041 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd|,s_stmnote_bank_0042
Function s_stmnote_bank_0042(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0042 = WindFunc("s_stmnote_bank_0042", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0042) <> vbString Then
        s_stmnote_bank_0042 = s_stmnote_bank_0042 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|_1|fffd||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0043
Function s_stmnote_bank_0043(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0043 = WindFunc("s_stmnote_bank_0043", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0043) <> vbString Then
        s_stmnote_bank_0043 = s_stmnote_bank_0043 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0044
Function s_stmnote_bank_0044(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0044 = WindFunc("s_stmnote_bank_0044", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0044) <> vbString Then
        s_stmnote_bank_0044 = s_stmnote_bank_0044 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||5ba||3fc||fffd|,s_stmnote_bank_0045
Function s_stmnote_bank_0045(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0045 = WindFunc("s_stmnote_bank_0045", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0045) <> vbString Then
        s_stmnote_bank_0045 = s_stmnote_bank_0045 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0051
Function s_stmnote_bank_0051(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0051 = WindFunc("s_stmnote_bank_0051", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0051) <> vbString Then
        s_stmnote_bank_0051 = s_stmnote_bank_0051 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|1|fffd||fffd|,s_stmnote_bank_0052
Function s_stmnote_bank_0052(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0052 = WindFunc("s_stmnote_bank_0052", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0052) <> vbString Then
        s_stmnote_bank_0052 = s_stmnote_bank_0052 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|_1|fffd||fffd||fffd||fffd||fffd||fffd|3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0053
Function s_stmnote_bank_0053(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0053 = WindFunc("s_stmnote_bank_0053", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0053) <> vbString Then
        s_stmnote_bank_0053 = s_stmnote_bank_0053 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd|_3|fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_0054
Function s_stmnote_bank_0054(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0054 = WindFunc("s_stmnote_bank_0054", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0054) <> vbString Then
        s_stmnote_bank_0054 = s_stmnote_bank_0054 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd||3fc||fffd|,s_stmnote_bank_0055
Function s_stmnote_bank_0055(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_0055 = WindFunc("s_stmnote_bank_0055", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_0055) <> vbString Then
        s_stmnote_bank_0055 = s_stmnote_bank_0055 / UnitVal_
    End If
End Function

'|fffd||336||fffd||3e2||5a4||22f||376||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0001
Function s_stmnote_InvestmentIncome_0001(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0001 = WindFunc("s_stmnote_InvestmentIncome_0001", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0001) <> vbString Then
        s_stmnote_InvestmentIncome_0001 = s_stmnote_InvestmentIncome_0001 / UnitVal_
    End If
End Function

'|228||fffd||fffd||376||fffd||fffd||fffd||2b2||fffd||fffd||5ba||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0002
Function s_stmnote_InvestmentIncome_0002(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0002 = WindFunc("s_stmnote_InvestmentIncome_0002", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0002) <> vbString Then
        s_stmnote_InvestmentIncome_0002 = s_stmnote_InvestmentIncome_0002 / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||537||fffd||fffd||632||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0003
Function s_stmnote_InvestmentIncome_0003(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0003 = WindFunc("s_stmnote_InvestmentIncome_0003", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0003) <> vbString Then
        s_stmnote_InvestmentIncome_0003 = s_stmnote_InvestmentIncome_0003 / UnitVal_
    End If
End Function

'|fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0004
Function s_stmnote_InvestmentIncome_0004(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0004 = WindFunc("s_stmnote_InvestmentIncome_0004", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0004) <> vbString Then
        s_stmnote_InvestmentIncome_0004 = s_stmnote_InvestmentIncome_0004 / UnitVal_
    End If
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0005
Function s_stmnote_InvestmentIncome_0005(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0005 = WindFunc("s_stmnote_InvestmentIncome_0005", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0005) <> vbString Then
        s_stmnote_InvestmentIncome_0005 = s_stmnote_InvestmentIncome_0005 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0006
Function s_stmnote_InvestmentIncome_0006(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0006 = WindFunc("s_stmnote_InvestmentIncome_0006", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0006) <> vbString Then
        s_stmnote_InvestmentIncome_0006 = s_stmnote_InvestmentIncome_0006 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_InvestmentIncome_0007
Function s_stmnote_InvestmentIncome_0007(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0007 = WindFunc("s_stmnote_InvestmentIncome_0007", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0007) <> vbString Then
        s_stmnote_InvestmentIncome_0007 = s_stmnote_InvestmentIncome_0007 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fa||fffd||4ea||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0008
Function s_stmnote_InvestmentIncome_0008(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0008 = WindFunc("s_stmnote_InvestmentIncome_0008", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0008) <> vbString Then
        s_stmnote_InvestmentIncome_0008 = s_stmnote_InvestmentIncome_0008 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0009
Function s_stmnote_InvestmentIncome_0009(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0009 = WindFunc("s_stmnote_InvestmentIncome_0009", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0009) <> vbString Then
        s_stmnote_InvestmentIncome_0009 = s_stmnote_InvestmentIncome_0009 / UnitVal_
    End If
End Function

'|fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InvestmentIncome_0010
Function s_stmnote_InvestmentIncome_0010(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_InvestmentIncome_0010 = WindFunc("s_stmnote_InvestmentIncome_0010", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_InvestmentIncome_0010) <> vbString Then
        s_stmnote_InvestmentIncome_0010 = s_stmnote_InvestmentIncome_0010 / UnitVal_
    End If
End Function

'2017.1.6 added
'|fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||fffd||fffd|,s_share_rtd_unlockingdate
Function s_share_rtd_unlockingdate(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_rtd_unlockingdate = WindFunc("s_share_rtd_unlockingdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd||fffd||fffd|,s_share_tradable_current
Function s_share_tradable_current(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_tradable_current = WindFunc("s_share_tradable_current", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_tradable_current) <> vbString Then
        s_share_tradable_current = s_share_tradable_current / UnitVal_
    End If
End Function

'|3b4||fffd||fffd||368||fffd||fffd||fffd||fffd|,s_share_rtd_bance
Function s_share_rtd_bance(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_rtd_bance = WindFunc("s_share_rtd_bance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_rtd_bance) <> vbString Then
        s_share_rtd_bance = s_share_rtd_bance / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_share_rtd_datatype
Function s_share_rtd_datatype(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_rtd_datatype = WindFunc("s_share_rtd_datatype", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||277||fffd||fffd||fffd||fffd||fffd|,s_share_tradable_sharetype
Function s_share_tradable_sharetype(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_tradable_sharetype = WindFunc("s_share_tradable_sharetype", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||3e2||fffd||2b2||fffd||1bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_57
Function s_stmnote_bank_57(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_57 = WindFunc("s_stmnote_bank_57", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_57) <> vbString Then
        s_stmnote_bank_57 = s_stmnote_bank_57 / UnitVal_
    End If
End Function

'|fffd||fffd||3e2||fffd||fffd||56e||1bd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_59
Function s_stmnote_bank_59(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_59 = WindFunc("s_stmnote_bank_59", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_59) <> vbString Then
        s_stmnote_bank_59 = s_stmnote_bank_59 / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||fffd|(|fffd||639||279||276||fffd||fffd||fffd||2b5||fffd||2bf||fffd||fffd||fffd||fffd||fffd|),s_share_otctradable_controller
Function s_share_otctradable_controller(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_otctradable_controller = WindFunc("s_share_otctradable_controller", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_otctradable_controller) <> vbString Then
        s_share_otctradable_controller = s_share_otctradable_controller / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||fffd|(|fffd||fffd||fffd||fffd||531||fffd||fffd|),s_share_otctradable_backbone
Function s_share_otctradable_backbone(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_otctradable_backbone = WindFunc("s_share_otctradable_backbone", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_otctradable_backbone) <> vbString Then
        s_share_otctradable_backbone = s_share_otctradable_backbone / UnitVal_
    End If
End Function

'|fffd||fffd||368||fffd||fffd|(|fffd||fffd||fffd||fffd|),s_share_otctradable_others
Function s_share_otctradable_others(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_otctradable_others = WindFunc("s_share_otctradable_others", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_otctradable_others) <> vbString Then
        s_share_otctradable_others = s_share_otctradable_others / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||639||279||276||fffd||fffd||fffd||2b5||fffd||2bf||fffd||fffd||fffd||fffd||fffd|),s_share_otcrestricted_controller
Function s_share_otcrestricted_controller(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_otcrestricted_controller = WindFunc("s_share_otcrestricted_controller", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_otcrestricted_controller) <> vbString Then
        s_share_otcrestricted_controller = s_share_otcrestricted_controller / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||fffd||531||fffd||fffd|),s_share_otcrestricted_backbone
Function s_share_otcrestricted_backbone(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_otcrestricted_backbone = WindFunc("s_share_otcrestricted_backbone", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_otcrestricted_backbone) <> vbString Then
        s_share_otcrestricted_backbone = s_share_otcrestricted_backbone / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||fffd||fffd||fffd|),s_share_otcrestricted_others
Function s_share_otcrestricted_others(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_otcrestricted_others = WindFunc("s_share_otcrestricted_others", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_otcrestricted_others) <> vbString Then
        s_share_otcrestricted_others = s_share_otcrestricted_others / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_share_otcrestricted
Function s_share_otcrestricted(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_otcrestricted = WindFunc("s_share_otcrestricted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_otcrestricted) <> vbString Then
        s_share_otcrestricted = s_share_otcrestricted / UnitVal_
    End If
End Function

'|fffd||b9||fffd||3b4||fffd||fffd||fffd||fffd||fffd||fffd||363||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_limitupdays
Function s_ipo_limitupdays(WINDCODE_ As Variant) As Variant
    s_ipo_limitupdays = WindFunc("s_ipo_limitupdays", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_limitupopendate
Function s_ipo_limitupopendate(WINDCODE_ As Variant) As Variant
    s_ipo_limitupopendate = WindFunc("s_ipo_limitupopendate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|46f||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||3bf||fffd||fffd||fffd|,s_ipo_inquirymv_caldate
Function s_ipo_inquirymv_caldate(WINDCODE_ As Variant) As Variant
    s_ipo_inquirymv_caldate = WindFunc("s_ipo_inquirymv_caldate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_est_eps1
Function s_est_eps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String) As Variant
    s_est_eps1 = WindFunc("s_est_eps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_maxeps1
Function s_est_maxeps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String) As Variant
    s_est_maxeps1 = WindFunc("s_est_maxeps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_est_mineps1
Function s_est_mineps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String) As Variant
    s_est_mineps1 = WindFunc("s_est_mineps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_medianeps1
Function s_est_medianeps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String) As Variant
    s_est_medianeps1 = WindFunc("s_est_medianeps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_est_stdeps1
Function s_est_stdeps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String) As Variant
    s_est_stdeps1 = WindFunc("s_est_stdeps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_est_sales1
Function s_est_sales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_sales1 = WindFunc("s_est_sales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_sales1) <> vbString Then
        s_est_sales1 = s_est_sales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_maxsales1
Function s_est_maxsales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxsales1 = WindFunc("s_est_maxsales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxsales1) <> vbString Then
        s_est_maxsales1 = s_est_maxsales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_est_minsales1
Function s_est_minsales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_minsales1 = WindFunc("s_est_minsales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_minsales1) <> vbString Then
        s_est_minsales1 = s_est_minsales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_mediansales1
Function s_est_mediansales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_mediansales1 = WindFunc("s_est_mediansales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_mediansales1) <> vbString Then
        s_est_mediansales1 = s_est_mediansales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_est_stdsales1
Function s_est_stdsales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdsales1 = WindFunc("s_est_stdsales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdsales1) <> vbString Then
        s_est_stdsales1 = s_est_stdsales1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_est_netprofit1
Function s_est_netprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_netprofit1 = WindFunc("s_est_netprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_netprofit1) <> vbString Then
        s_est_netprofit1 = s_est_netprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_maxnetprofit1
Function s_est_maxnetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxnetprofit1 = WindFunc("s_est_maxnetprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxnetprofit1) <> vbString Then
        s_est_maxnetprofit1 = s_est_maxnetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_est_minnetprofit1
Function s_est_minnetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_minnetprofit1 = WindFunc("s_est_minnetprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_minnetprofit1) <> vbString Then
        s_est_minnetprofit1 = s_est_minnetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_mediannetprofit1
Function s_est_mediannetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_mediannetprofit1 = WindFunc("s_est_mediannetprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_mediannetprofit1) <> vbString Then
        s_est_mediannetprofit1 = s_est_mediannetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_est_stdnetprofit1
Function s_est_stdnetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdnetprofit1 = WindFunc("s_est_stdnetprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdnetprofit1) <> vbString Then
        s_est_stdnetprofit1 = s_est_stdnetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|1bd||fffd||fffd||5b5|,s_est_avgcps1
Function s_est_avgcps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_avgcps1 = WindFunc("s_est_avgcps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_avgcps1) <> vbString Then
        s_est_avgcps1 = s_est_avgcps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||fffd||5b5|,s_est_maxcps1
Function s_est_maxcps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxcps1 = WindFunc("s_est_maxcps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxcps1) <> vbString Then
        s_est_maxcps1 = s_est_maxcps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||421||5b5|,s_est_mincps1
Function s_est_mincps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_mincps1 = WindFunc("s_est_mincps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_mincps1) <> vbString Then
        s_est_mincps1 = s_est_mincps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||5b5|,s_est_mediancps1
Function s_est_mediancps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_mediancps1 = WindFunc("s_est_mediancps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_mediancps1) <> vbString Then
        s_est_mediancps1 = s_est_mediancps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||5fc||fffd||fffd|,s_est_stdcps1
Function s_est_stdcps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdcps1 = WindFunc("s_est_stdcps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdcps1) <> vbString Then
        s_est_stdcps1 = s_est_stdcps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|1bd||fffd||fffd||5b5|,s_est_avgdps1
Function s_est_avgdps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_avgdps1 = WindFunc("s_est_avgdps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_avgdps1) <> vbString Then
        s_est_avgdps1 = s_est_avgdps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||fffd||5b5|,s_est_maxdps1
Function s_est_maxdps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxdps1 = WindFunc("s_est_maxdps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxdps1) <> vbString Then
        s_est_maxdps1 = s_est_maxdps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||421||5b5|,s_est_mindps1
Function s_est_mindps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_mindps1 = WindFunc("s_est_mindps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_mindps1) <> vbString Then
        s_est_mindps1 = s_est_mindps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||5b5|,s_est_mediandps1
Function s_est_mediandps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_mediandps1 = WindFunc("s_est_mediandps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_mediandps1) <> vbString Then
        s_est_mediandps1 = s_est_mediandps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||5fc||fffd||fffd|,s_est_stddps1
Function s_est_stddps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stddps1 = WindFunc("s_est_stddps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stddps1) <> vbString Then
        s_est_stddps1 = s_est_stddps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|1bd||fffd||fffd||5b5|,s_est_avgebit1
Function s_est_avgebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_avgebit1 = WindFunc("s_est_avgebit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_avgebit1) <> vbString Then
        s_est_avgebit1 = s_est_avgebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||fffd||5b5|,s_est_maxebit1
Function s_est_maxebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxebit1 = WindFunc("s_est_maxebit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxebit1) <> vbString Then
        s_est_maxebit1 = s_est_maxebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||421||5b5|,s_est_minebit1
Function s_est_minebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_minebit1 = WindFunc("s_est_minebit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_minebit1) <> vbString Then
        s_est_minebit1 = s_est_minebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||5b5|,s_est_medianebit1
Function s_est_medianebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_medianebit1 = WindFunc("s_est_medianebit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_medianebit1) <> vbString Then
        s_est_medianebit1 = s_est_medianebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||5fc||fffd||fffd|,s_est_stdebit1
Function s_est_stdebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdebit1 = WindFunc("s_est_stdebit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdebit1) <> vbString Then
        s_est_stdebit1 = s_est_stdebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|1bd||fffd||fffd||5b5|,s_est_avgebitda1
Function s_est_avgebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_avgebitda1 = WindFunc("s_est_avgebitda1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_avgebitda1) <> vbString Then
        s_est_avgebitda1 = s_est_avgebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||fffd||5b5|,s_est_maxebitda1
Function s_est_maxebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxebitda1 = WindFunc("s_est_maxebitda1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxebitda1) <> vbString Then
        s_est_maxebitda1 = s_est_maxebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||421||5b5|,s_est_minebitda1
Function s_est_minebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_minebitda1 = WindFunc("s_est_minebitda1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_minebitda1) <> vbString Then
        s_est_minebitda1 = s_est_minebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||5b5|,s_est_medianebitda1
Function s_est_medianebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_medianebitda1 = WindFunc("s_est_medianebitda1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_medianebitda1) <> vbString Then
        s_est_medianebitda1 = s_est_medianebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||5fc||fffd||fffd|,s_est_stdebitda1
Function s_est_stdebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdebitda1 = WindFunc("s_est_stdebitda1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdebitda1) <> vbString Then
        s_est_stdebitda1 = s_est_stdebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|1bd||fffd||fffd||5b5|,s_est_avgbps1
Function s_est_avgbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_avgbps1 = WindFunc("s_est_avgbps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_avgbps1) <> vbString Then
        s_est_avgbps1 = s_est_avgbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||fffd||5b5|,s_est_maxbps1
Function s_est_maxbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxbps1 = WindFunc("s_est_maxbps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxbps1) <> vbString Then
        s_est_maxbps1 = s_est_maxbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||421||5b5|,s_est_minbps1
Function s_est_minbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_minbps1 = WindFunc("s_est_minbps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_minbps1) <> vbString Then
        s_est_minbps1 = s_est_minbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||5b5|,s_est_medianbps1
Function s_est_medianbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_medianbps1 = WindFunc("s_est_medianbps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_medianbps1) <> vbString Then
        s_est_medianbps1 = s_est_medianbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||5fc||fffd||fffd|,s_est_stdbps1
Function s_est_stdbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdbps1 = WindFunc("s_est_stdbps1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdbps1) <> vbString Then
        s_est_stdbps1 = s_est_stdbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||1bd||fffd||fffd||5b5|,s_est_avgebt1
Function s_est_avgebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_avgebt1 = WindFunc("s_est_avgebt1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_avgebt1) <> vbString Then
        s_est_avgebt1 = s_est_avgebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||fffd||5b5|,s_est_maxebt1
Function s_est_maxebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxebt1 = WindFunc("s_est_maxebt1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxebt1) <> vbString Then
        s_est_maxebt1 = s_est_maxebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||421||5b5|,s_est_minebt1
Function s_est_minebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_minebt1 = WindFunc("s_est_minebt1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_minebt1) <> vbString Then
        s_est_minebt1 = s_est_minebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||5b5|,s_est_medianebt1
Function s_est_medianebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_medianebt1 = WindFunc("s_est_medianebt1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_medianebt1) <> vbString Then
        s_est_medianebt1 = s_est_medianebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||5fc||fffd||fffd|,s_est_stdebt1
Function s_est_stdebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdebt1 = WindFunc("s_est_stdebt1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdebt1) <> vbString Then
        s_est_stdebt1 = s_est_stdebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_est_avgoperatingprofit1
Function s_est_avgoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_avgoperatingprofit1 = WindFunc("s_est_avgoperatingprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_avgoperatingprofit1) <> vbString Then
        s_est_avgoperatingprofit1 = s_est_avgoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_maxoperatingprofit1
Function s_est_maxoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_maxoperatingprofit1 = WindFunc("s_est_maxoperatingprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_maxoperatingprofit1) <> vbString Then
        s_est_maxoperatingprofit1 = s_est_maxoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_est_minoperatingprofit1
Function s_est_minoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_minoperatingprofit1 = WindFunc("s_est_minoperatingprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_minoperatingprofit1) <> vbString Then
        s_est_minoperatingprofit1 = s_est_minoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_est_medianoperatingprofit1
Function s_est_medianoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_medianoperatingprofit1 = WindFunc("s_est_medianoperatingprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_medianoperatingprofit1) <> vbString Then
        s_est_medianoperatingprofit1 = s_est_medianoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_est_stdoperatingprofit1
Function s_est_stdoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_stdoperatingprofit1 = WindFunc("s_est_stdoperatingprofit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(s_est_stdoperatingprofit1) <> vbString Then
        s_est_stdoperatingprofit1 = s_est_stdoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_eps1
Function s_west_eps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String) As Variant
    s_west_eps1 = WindFunc("s_west_eps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxeps1
Function s_west_maxeps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String) As Variant
    s_west_maxeps1 = WindFunc("s_west_maxeps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_mineps1
Function s_west_mineps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String) As Variant
    s_west_mineps1 = WindFunc("s_west_mineps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianeps1
Function s_west_medianeps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String) As Variant
    s_west_medianeps1 = WindFunc("s_west_medianeps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdeps1
Function s_west_stdeps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String) As Variant
    s_west_stdeps1 = WindFunc("s_west_stdeps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_sales1
Function s_west_sales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_sales1 = WindFunc("s_west_sales1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_sales1) <> vbString Then
        s_west_sales1 = s_west_sales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxsales1
Function s_west_maxsales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxsales1 = WindFunc("s_west_maxsales1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxsales1) <> vbString Then
        s_west_maxsales1 = s_west_maxsales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minsales1
Function s_west_minsales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minsales1 = WindFunc("s_west_minsales1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minsales1) <> vbString Then
        s_west_minsales1 = s_west_minsales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_mediansales1
Function s_west_mediansales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_mediansales1 = WindFunc("s_west_mediansales1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_mediansales1) <> vbString Then
        s_west_mediansales1 = s_west_mediansales1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdsales1
Function s_west_stdsales1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdsales1 = WindFunc("s_west_stdsales1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdsales1) <> vbString Then
        s_west_stdsales1 = s_west_stdsales1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_netprofit1
Function s_west_netprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_netprofit1 = WindFunc("s_west_netprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_netprofit1) <> vbString Then
        s_west_netprofit1 = s_west_netprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxnetprofit1
Function s_west_maxnetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxnetprofit1 = WindFunc("s_west_maxnetprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxnetprofit1) <> vbString Then
        s_west_maxnetprofit1 = s_west_maxnetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minnetprofit1
Function s_west_minnetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minnetprofit1 = WindFunc("s_west_minnetprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minnetprofit1) <> vbString Then
        s_west_minnetprofit1 = s_west_minnetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_mediannetprofit1
Function s_west_mediannetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_mediannetprofit1 = WindFunc("s_west_mediannetprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_mediannetprofit1) <> vbString Then
        s_west_mediannetprofit1 = s_west_mediannetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||2fbb||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdnetprofit1
Function s_west_stdnetprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdnetprofit1 = WindFunc("s_west_stdnetprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdnetprofit1) <> vbString Then
        s_west_stdnetprofit1 = s_west_stdnetprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|1bd||fffd||fffd||5b5|,s_west_avgcps1
Function s_west_avgcps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgcps1 = WindFunc("s_west_avgcps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgcps1) <> vbString Then
        s_west_avgcps1 = s_west_avgcps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||fffd||5b5|,s_west_maxcps1
Function s_west_maxcps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxcps1 = WindFunc("s_west_maxcps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxcps1) <> vbString Then
        s_west_maxcps1 = s_west_maxcps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||421||5b5|,s_west_mincps1
Function s_west_mincps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_mincps1 = WindFunc("s_west_mincps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_mincps1) <> vbString Then
        s_west_mincps1 = s_west_mincps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||5b5|,s_west_mediancps1
Function s_west_mediancps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_mediancps1 = WindFunc("s_west_mediancps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_mediancps1) <> vbString Then
        s_west_mediancps1 = s_west_mediancps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd|(CPS)|fffd||fffd||5fc||fffd||fffd|,s_west_stdcps1
Function s_west_stdcps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdcps1 = WindFunc("s_west_stdcps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdcps1) <> vbString Then
        s_west_stdcps1 = s_west_stdcps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|1bd||fffd||fffd||5b5|,s_west_avgdps1
Function s_west_avgdps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgdps1 = WindFunc("s_west_avgdps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgdps1) <> vbString Then
        s_west_avgdps1 = s_west_avgdps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||fffd||5b5|,s_west_maxdps1
Function s_west_maxdps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxdps1 = WindFunc("s_west_maxdps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxdps1) <> vbString Then
        s_west_maxdps1 = s_west_maxdps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||421||5b5|,s_west_mindps1
Function s_west_mindps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_mindps1 = WindFunc("s_west_mindps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_mindps1) <> vbString Then
        s_west_mindps1 = s_west_mindps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||5b5|,s_west_mediandps1
Function s_west_mediandps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_mediandps1 = WindFunc("s_west_mediandps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_mediandps1) <> vbString Then
        s_west_mediandps1 = s_west_mediandps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(DPS)|fffd||fffd||5fc||fffd||fffd|,s_west_stddps1
Function s_west_stddps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stddps1 = WindFunc("s_west_stddps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stddps1) <> vbString Then
        s_west_stddps1 = s_west_stddps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|1bd||fffd||fffd||5b5|,s_west_avgebit1
Function s_west_avgebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebit1 = WindFunc("s_west_avgebit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgebit1) <> vbString Then
        s_west_avgebit1 = s_west_avgebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||fffd||5b5|,s_west_maxebit1
Function s_west_maxebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxebit1 = WindFunc("s_west_maxebit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxebit1) <> vbString Then
        s_west_maxebit1 = s_west_maxebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||421||5b5|,s_west_minebit1
Function s_west_minebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minebit1 = WindFunc("s_west_minebit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minebit1) <> vbString Then
        s_west_minebit1 = s_west_minebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||5b5|,s_west_medianebit1
Function s_west_medianebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_medianebit1 = WindFunc("s_west_medianebit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_medianebit1) <> vbString Then
        s_west_medianebit1 = s_west_medianebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|(EBIT)|fffd||fffd||5fc||fffd||fffd|,s_west_stdebit1
Function s_west_stdebit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdebit1 = WindFunc("s_west_stdebit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdebit1) <> vbString Then
        s_west_stdebit1 = s_west_stdebit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|1bd||fffd||fffd||5b5|,s_west_avgebitda1
Function s_west_avgebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebitda1 = WindFunc("s_west_avgebitda1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgebitda1) <> vbString Then
        s_west_avgebitda1 = s_west_avgebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||fffd||5b5|,s_west_maxebitda1
Function s_west_maxebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxebitda1 = WindFunc("s_west_maxebitda1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxebitda1) <> vbString Then
        s_west_maxebitda1 = s_west_maxebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||421||5b5|,s_west_minebitda1
Function s_west_minebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minebitda1 = WindFunc("s_west_minebitda1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minebitda1) <> vbString Then
        s_west_minebitda1 = s_west_minebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||5b5|,s_west_medianebitda1
Function s_west_medianebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_medianebitda1 = WindFunc("s_west_medianebitda1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_medianebitda1) <> vbString Then
        s_west_medianebitda1 = s_west_medianebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd|(EBITDA)|fffd||fffd||5fc||fffd||fffd|,s_west_stdebitda1
Function s_west_stdebitda1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdebitda1 = WindFunc("s_west_stdebitda1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdebitda1) <> vbString Then
        s_west_stdebitda1 = s_west_stdebitda1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|1bd||fffd||fffd||5b5|,s_west_avgbps1
Function s_west_avgbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgbps1 = WindFunc("s_west_avgbps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgbps1) <> vbString Then
        s_west_avgbps1 = s_west_avgbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||fffd||5b5|,s_west_maxbps1
Function s_west_maxbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxbps1 = WindFunc("s_west_maxbps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxbps1) <> vbString Then
        s_west_maxbps1 = s_west_maxbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||421||5b5|,s_west_minbps1
Function s_west_minbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minbps1 = WindFunc("s_west_minbps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minbps1) <> vbString Then
        s_west_minbps1 = s_west_minbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||5b5|,s_west_medianbps1
Function s_west_medianbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_medianbps1 = WindFunc("s_west_medianbps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_medianbps1) <> vbString Then
        s_west_medianbps1 = s_west_medianbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd|(BPS)|fffd||fffd||5fc||fffd||fffd|,s_west_stdbps1
Function s_west_stdbps1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdbps1 = WindFunc("s_west_stdbps1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdbps1) <> vbString Then
        s_west_stdbps1 = s_west_stdbps1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||1bd||fffd||fffd||5b5|,s_west_avgebt1
Function s_west_avgebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgebt1 = WindFunc("s_west_avgebt1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgebt1) <> vbString Then
        s_west_avgebt1 = s_west_avgebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||fffd||5b5|,s_west_maxebt1
Function s_west_maxebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxebt1 = WindFunc("s_west_maxebt1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxebt1) <> vbString Then
        s_west_maxebt1 = s_west_maxebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||421||5b5|,s_west_minebt1
Function s_west_minebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minebt1 = WindFunc("s_west_minebt1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minebt1) <> vbString Then
        s_west_minebt1 = s_west_minebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||5b5|,s_west_medianebt1
Function s_west_medianebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_medianebt1 = WindFunc("s_west_medianebt1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_medianebt1) <> vbString Then
        s_west_medianebt1 = s_west_medianebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||5fc||fffd||fffd|,s_west_stdebt1
Function s_west_stdebt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdebt1 = WindFunc("s_west_stdebt1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdebt1) <> vbString Then
        s_west_stdebt1 = s_west_stdebt1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||1bd||fffd||fffd||5b5|,s_west_avgoperatingprofit1
Function s_west_avgoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoperatingprofit1 = WindFunc("s_west_avgoperatingprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgoperatingprofit1) <> vbString Then
        s_west_avgoperatingprofit1 = s_west_avgoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_maxoperatingprofit1
Function s_west_maxoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxoperatingprofit1 = WindFunc("s_west_maxoperatingprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxoperatingprofit1) <> vbString Then
        s_west_maxoperatingprofit1 = s_west_maxoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||421||5b5|,s_west_minoperatingprofit1
Function s_west_minoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minoperatingprofit1 = WindFunc("s_west_minoperatingprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minoperatingprofit1) <> vbString Then
        s_west_minoperatingprofit1 = s_west_minoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||5b5|,s_west_medianoperatingprofit1
Function s_west_medianoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_medianoperatingprofit1 = WindFunc("s_west_medianoperatingprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_medianoperatingprofit1) <> vbString Then
        s_west_medianoperatingprofit1 = s_west_medianoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stdoperatingprofit1
Function s_west_stdoperatingprofit1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stdoperatingprofit1 = WindFunc("s_west_stdoperatingprofit1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stdoperatingprofit1) <> vbString Then
        s_west_stdoperatingprofit1 = s_west_stdoperatingprofit1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||1bd||fffd||fffd||5b5|,s_west_avgoc1
Function s_west_avgoc1(WINDCODE_ As Variant, Year_ As Integer, TRADEDATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_avgoc1 = WindFunc("s_west_avgoc1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(TRADEDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_avgoc1) <> vbString Then
        s_west_avgoc1 = s_west_avgoc1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||fffd||5b5|,s_west_maxoc1
Function s_west_maxoc1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_maxoc1 = WindFunc("s_west_maxoc1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_maxoc1) <> vbString Then
        s_west_maxoc1 = s_west_maxoc1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||421||5b5|,s_west_minoc1
Function s_west_minoc1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_minoc1 = WindFunc("s_west_minoc1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_minoc1) <> vbString Then
        s_west_minoc1 = s_west_minoc1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||5b5|,s_west_mediaoc1
Function s_west_mediaoc1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_mediaoc1 = WindFunc("s_west_mediaoc1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_mediaoc1) <> vbString Then
        s_west_mediaoc1 = s_west_mediaoc1 / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||4b5||fffd||271||fffd||fffd||fffd||5fc||fffd||fffd|,s_west_stoc1
Function s_west_stoc1(WINDCODE_ As Variant, TRADEDATE_ As Variant, Year_ As Integer, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_west_stoc1 = WindFunc("s_west_stoc1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Year_, TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_west_stoc1) <> vbString Then
        s_west_stoc1 = s_west_stoc1 / UnitVal_
    End If
End Function

'|13f||fffd||fffd||fffd|(MAX),s_rating_targetprice_max1
Function s_rating_targetprice_max1(WINDCODE_ As Variant, DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_rating_targetprice_max1 = WindFunc("s_rating_targetprice_max1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_rating_targetprice_max1) <> vbString Then
        s_rating_targetprice_max1 = s_rating_targetprice_max1 / UnitVal_
    End If
End Function

'|13f||fffd||fffd||fffd|(MIN),s_rating_targetprice_min1
Function s_rating_targetprice_min1(WINDCODE_ As Variant, DATE_ As Variant, Optional TYPE_ As Integer = 180, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_rating_targetprice_min1 = WindFunc("s_rating_targetprice_min1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_rating_targetprice_min1) <> vbString Then
        s_rating_targetprice_min1 = s_rating_targetprice_min1 / UnitVal_
    End If
End Function

'|1f0||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_prelowprice_inst1
Function s_est_prelowprice_inst1(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As String = "1", Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_prelowprice_inst1 = WindFunc("s_est_prelowprice_inst1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_est_prelowprice_inst1) <> vbString Then
        s_est_prelowprice_inst1 = s_est_prelowprice_inst1 / UnitVal_
    End If
End Function

'|1f0||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_prehighprice_inst1
Function s_est_prehighprice_inst1(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As String = "1", Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_prehighprice_inst1 = WindFunc("s_est_prehighprice_inst1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_est_prehighprice_inst1) <> vbString Then
        s_est_prehighprice_inst1 = s_est_prehighprice_inst1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_lowprice_inst1
Function s_est_lowprice_inst1(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As String = "1", Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_lowprice_inst1 = WindFunc("s_est_lowprice_inst1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_est_lowprice_inst1) <> vbString Then
        s_est_lowprice_inst1 = s_est_lowprice_inst1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||13f||fffd||fffd||fffd|,s_est_highprice_inst1
Function s_est_highprice_inst1(WINDCODE_ As Variant, EndDate_ As Variant, Optional TYPE_ As String = "1", Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_highprice_inst1 = WindFunc("s_est_highprice_inst1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(EndDate_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_est_highprice_inst1) <> vbString Then
        s_est_highprice_inst1 = s_est_highprice_inst1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||524||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|,s_est_sales_inst1
Function s_est_sales_inst1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As String = "1", Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_sales_inst1 = WindFunc("s_est_sales_inst1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_est_sales_inst1) <> vbString Then
        s_est_sales_inst1 = s_est_sales_inst1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||524||fffd||2fbb||fffd||fffd||fffd||fffd|,s_est_netprofit_inst1
Function s_est_netprofit_inst1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As String = "1", Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_est_netprofit_inst1 = WindFunc("s_est_netprofit_inst1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_est_netprofit_inst1) <> vbString Then
        s_est_netprofit_inst1 = s_est_netprofit_inst1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||524||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|,s_est_eps_inst1
Function s_est_eps_inst1(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional DATE_ As Variant, Optional TYPE_ As String = "1", Optional CURTYPE_ As String) As Variant
    s_est_eps_inst1 = WindFunc("s_est_eps_inst1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_, GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_grps2
Function hks_fa_grps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_grps2 = WindFunc("hks_fa_grps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||3e2||2f0||1f0||fffd||fffd||fffd||fffd|,hks_fa_ebitps2
Function hks_fa_ebitps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_ebitps2 = WindFunc("hks_fa_ebitps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_retainedps2
Function hks_fa_retainedps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_retainedps2 = WindFunc("hks_fa_retainedps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||b9||271||fffd||32f||fffd||fffd|,hks_fa_eps_adjust2
Function hks_fa_eps_adjust2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_eps_adjust2 = WindFunc("hks_fa_eps_adjust2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||129||fffd||271||fffd||32f||fffd||fffd|,hks_fa_eps_diluted3
Function hks_fa_eps_diluted3(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_eps_diluted3 = WindFunc("hks_fa_eps_diluted3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|,hks_fa_fcffps2
Function hks_fa_fcffps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_fcffps2 = WindFunc("hks_fa_fcffps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||279||276||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd|,hks_fa_fcfeps2
Function hks_fa_fcfeps2(WINDCODE_ As Variant, REPORTDATE_ As Variant, CURTYPE_ As String) As Variant
    hks_fa_fcfeps2 = WindFunc("hks_fa_fcfeps2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||6f3||271||fffd||fffd||fffd|,hks_fa_cogstosales
Function hks_fa_cogstosales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_cogstosales = WindFunc("hks_fa_cogstosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(|32f||fffd||fffd|),hks_fa_roe_diluted
Function hks_fa_roe_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roe_diluted = WindFunc("hks_fa_roe_diluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||6f3||fffd|),hks_fa_roe_deducted
Function hks_fa_roe_deducted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roe_deducted = WindFunc("hks_fa_roe_deducted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROE(|fffd||6f3||fffd|/|32f||fffd||fffd|),hks_fa_roe_exdiluted
Function hks_fa_roe_exdiluted(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roe_exdiluted = WindFunc("hks_fa_roe_exdiluted", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|ROA,hks_fa_roa2
Function hks_fa_roa2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roa2 = WindFunc("hks_fa_roa2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|),hks_fa_roa2_yearly
Function hks_fa_roa2_yearly(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roa2_yearly = WindFunc("hks_fa_roa2_yearly", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|376||fffd||fffd||fffd||2b1||fffd||fffd||631||fffd||fffd||fffd|ROIC,hks_fa_roic1
Function hks_fa_roic1(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_roic1 = WindFunc("hks_fa_roic1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_optogr
Function hks_fa_optogr(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_optogr = WindFunc("hks_fa_optogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||733||271||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_gctogr
Function hks_fa_gctogr(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_gctogr = WindFunc("hks_fa_gctogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_operateexpensetogr
Function hks_fa_operateexpensetogr(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_operateexpensetogr = WindFunc("hks_fa_operateexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_adminexpensetogr
Function hks_fa_adminexpensetogr(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_adminexpensetogr = WindFunc("hks_fa_adminexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_finaexpensetogr
Function hks_fa_finaexpensetogr(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_finaexpensetogr = WindFunc("hks_fa_finaexpensetogr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'EBITDA/|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_ebitdatosales
Function hks_fa_ebitdatosales(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ebitdatosales = WindFunc("hks_fa_ebitdatosales", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|,hks_fa_operateincometoebt
Function hks_fa_operateincometoebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_operateincometoebt = WindFunc("hks_fa_operateincometoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|,hks_fa_investincometoebt
Function hks_fa_investincometoebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_investincometoebt = WindFunc("hks_fa_investincometoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||5a7||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||736||fffd|,hks_fa_nonoperateprofittoebt
Function hks_fa_nonoperateprofittoebt(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_nonoperateprofittoebt = WindFunc("hks_fa_nonoperateprofittoebt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_deductedprofittoprofit
Function hks_fa_deductedprofittoprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_deductedprofittoprofit = WindFunc("hks_fa_deductedprofittoprofit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd|,hks_fa_ocftooperateincome
Function hks_fa_ocftooperateincome(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_ocftooperateincome = WindFunc("hks_fa_ocftooperateincome", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||2b1||fffd||5a7||fffd||fffd|/|fffd||6fe||27a||fffd||32f||fffd||fffd|,hks_fa_capitalizedtoda
Function hks_fa_capitalizedtoda(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_capitalizedtoda = WindFunc("hks_fa_capitalizedtoda", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||228||fffd||fffd|(MRQ),hks_fa_equity_mrq2
Function hks_fa_equity_mrq2(WINDCODE_ As Variant, TRADEDATE_ As Variant, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_equity_mrq2 = WindFunc("hks_fa_equity_mrq2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_equity_mrq2) <> vbString Then
        hks_fa_equity_mrq2 = hks_fa_equity_mrq2 / UnitVal_
    End If
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_prename
Function s_info_prename(WINDCODE_ As Variant) As Variant
    s_info_prename = WindFunc("s_info_prename", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4b5||fffd||fffd||524||fffd||fffd||56a||4aa|,s_qprofitnotice_abstract
Function s_qprofitnotice_abstract(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_abstract = WindFunc("s_qprofitnotice_abstract", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4b5||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_style
Function s_qprofitnotice_style(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_style = WindFunc("s_qprofitnotice_style", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4b5||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_date
Function s_qprofitnotice_date(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_date = WindFunc("s_qprofitnotice_date", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_netprofitmax
Function s_qprofitnotice_netprofitmax(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qprofitnotice_netprofitmax = WindFunc("s_qprofitnotice_netprofitmax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qprofitnotice_netprofitmax) <> vbString Then
        s_qprofitnotice_netprofitmax = s_qprofitnotice_netprofitmax / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_netprofitmin
Function s_qprofitnotice_netprofitmin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qprofitnotice_netprofitmin = WindFunc("s_qprofitnotice_netprofitmin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qprofitnotice_netprofitmin) <> vbString Then
        s_qprofitnotice_netprofitmin = s_qprofitnotice_netprofitmin / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_changemax
Function s_qprofitnotice_changemax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_changemax = WindFunc("s_qprofitnotice_changemax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_changemin
Function s_qprofitnotice_changemin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_changemin = WindFunc("s_qprofitnotice_changemin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_netsalesmax
Function s_qprofitnotice_netsalesmax(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qprofitnotice_netsalesmax = WindFunc("s_qprofitnotice_netsalesmax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qprofitnotice_netsalesmax) <> vbString Then
        s_qprofitnotice_netsalesmax = s_qprofitnotice_netsalesmax / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_netsalesmin
Function s_qprofitnotice_netsalesmin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qprofitnotice_netsalesmin = WindFunc("s_qprofitnotice_netsalesmin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qprofitnotice_netsalesmin) <> vbString Then
        s_qprofitnotice_netsalesmin = s_qprofitnotice_netsalesmin / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_netsalesyoymax
Function s_qprofitnotice_netsalesyoymax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_netsalesyoymax = WindFunc("s_qprofitnotice_netsalesyoymax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||6fbb||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_netsalesyoymin
Function s_qprofitnotice_netsalesyoymin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_netsalesyoymin = WindFunc("s_qprofitnotice_netsalesyoymin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_salesmax
Function s_qprofitnotice_salesmax(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qprofitnotice_salesmax = WindFunc("s_qprofitnotice_salesmax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qprofitnotice_salesmax) <> vbString Then
        s_qprofitnotice_salesmax = s_qprofitnotice_salesmax / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_salesmin
Function s_qprofitnotice_salesmin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qprofitnotice_salesmin = WindFunc("s_qprofitnotice_salesmin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qprofitnotice_salesmin) <> vbString Then
        s_qprofitnotice_salesmin = s_qprofitnotice_salesmin / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_salesyoymax
Function s_qprofitnotice_salesyoymax(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_salesyoymax = WindFunc("s_qprofitnotice_salesyoymax", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|524||fffd||fffd||fffd||fffd||4ea||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_qprofitnotice_salesyoymin
Function s_qprofitnotice_salesyoymin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qprofitnotice_salesyoymin = WindFunc("s_qprofitnotice_salesyoymin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||2fe||4bb||fffd||4ef0||fffd||fffd||fffd||fffd|,s_info_abstract
Function s_info_abstract(WINDCODE_ As Variant) As Variant
    s_info_abstract = WindFunc("s_info_abstract", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||3bf||fffd||fffd||fffd||fffd||fffd||5b5|,s_val_mv_ref
Function s_val_mv_ref(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_val_mv_ref = WindFunc("s_val_mv_ref", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_val_mv_ref) <> vbString Then
        s_val_mv_ref = s_val_mv_ref / UnitVal_
    End If
End Function

'|fffd||3bf||fffd||fffd||fffd||4ef||fffd||fffd|PE(LYR),s_val_pelyr_ref
Function s_val_pelyr_ref(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_pelyr_ref = WindFunc("s_val_pelyr_ref", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd|,s_info_Nature1
Function s_info_Nature1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_Nature1 = WindFunc("s_info_Nature1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||5f7||fffd||fffd||fffd||2af||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,hks_ipo_name_cornerstone
Function hks_ipo_name_cornerstone(WINDCODE_ As Variant, Sequence_ As Byte) As Variant
    hks_ipo_name_cornerstone = WindFunc("hks_ipo_name_cornerstone", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Sequence_)
End Function

'|fffd||5f7||fffd||fffd||fffd||2af||376||fffd||fffd||fffd||7f3||5b9||fffd||fffd||fffd||fffd||fffd|,hks_ipo_quantity_cornerstone
Function hks_ipo_quantity_cornerstone(WINDCODE_ As Variant, Sequence_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    hks_ipo_quantity_cornerstone = WindFunc("hks_ipo_quantity_cornerstone", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Sequence_)
    If VarType(hks_ipo_quantity_cornerstone) <> vbString Then
        hks_ipo_quantity_cornerstone = hks_ipo_quantity_cornerstone / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||fffd||fffd||2af||376||fffd||fffd||fffd||7f3||5b9||271||fffd||fffd||fffd|,hks_ipo_pct_cornerstone
Function hks_ipo_pct_cornerstone(WINDCODE_ As Variant, Sequence_ As Byte) As Variant
    hks_ipo_pct_cornerstone = WindFunc("hks_ipo_pct_cornerstone", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), Sequence_)
End Function

'|fffd||fffd||fffd||fffd|-|1e8||fffd||fffd||fffd||fffd|,s_stmnote_bank_9501
Function s_stmnote_bank_9501(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9501 = WindFunc("s_stmnote_bank_9501", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||5e2|-|1e8||fffd||fffd||fffd||fffd|,s_stmnote_bank_9502
Function s_stmnote_bank_9502(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9502 = WindFunc("s_stmnote_bank_9502", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||3bc||fffd|-|1e8||fffd||fffd||fffd||fffd|,s_stmnote_bank_9503
Function s_stmnote_bank_9503(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9503 = WindFunc("s_stmnote_bank_9503", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd|-|1e8||fffd||fffd||fffd||fffd|,s_stmnote_bank_9504
Function s_stmnote_bank_9504(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9504 = WindFunc("s_stmnote_bank_9504", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||432||fffd||fffd||1fd||fffd||fffd||fffd||3f5||373||fffd||fffd||fffd||fffd||5a7||fffd||5bb||fffd||fffd||fffd|,b_agency_booksupporter
Function b_agency_booksupporter(WINDCODE_ As Variant) As Variant
    b_agency_booksupporter = WindFunc("b_agency_booksupporter", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'2017/02/06 added
'|376||fffd||2b9||fffd||fffd||fffd|,f_info_investmentadvisor
Function f_info_investmentadvisor(WINDCODE_ As Variant) As Variant
    f_info_investmentadvisor = WindFunc("f_info_investmentadvisor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|376||fffd||2be||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_manager_background
Function f_info_manager_background(WINDCODE_ As Variant, TopN As Byte) As Variant
    f_info_manager_background = WindFunc("f_info_manager_background", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
End Function

'Calmar,f_risk_calmar
Function f_risk_calmar(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    f_risk_calmar = WindFunc("f_risk_calmar", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'Sterling1,f_risk_sterling1
Function f_risk_sterling1(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    f_risk_sterling1 = WindFunc("f_risk_sterling1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'Sterling2,f_risk_sterling2
Function f_risk_sterling2(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional ThresholdYield As Integer = 7) As Variant
    f_risk_sterling2 = WindFunc("f_risk_sterling2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), ThresholdYield)
End Function

'2017/02/27 added
'|fffd||fffd||fffd||3f9||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,cb_list_rationvol
Function cb_list_rationvol(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    cb_list_rationvol = WindFunc("cb_list_rationvol", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"))
    If VarType(cb_list_rationvol) <> vbString Then
        cb_list_rationvol = cb_list_rationvol / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||3f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),cb_list_issuevolonl
Function cb_list_issuevolonl(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    cb_list_issuevolonl = WindFunc("cb_list_issuevolonl", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"))
    If VarType(cb_list_issuevolonl) <> vbString Then
        cb_list_issuevolonl = cb_list_issuevolonl / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),cb_list_volinstoff
Function cb_list_volinstoff(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    cb_list_volinstoff = WindFunc("cb_list_volinstoff", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "CB"))
    If VarType(cb_list_volinstoff) <> vbString Then
        cb_list_volinstoff = cb_list_volinstoff / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||3f9||fffd||fffd||776||fffd|,f_issue_oef_cndnetpurchase
Function f_issue_oef_cndnetpurchase(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_issue_oef_cndnetpurchase = WindFunc("f_issue_oef_cndnetpurchase", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_issue_oef_cndnetpurchase) <> vbString Then
        f_issue_oef_cndnetpurchase = f_issue_oef_cndnetpurchase / UnitVal_
    End If
End Function

'|13c||fffd||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd|,f_issue_oef_maxcollection
Function f_issue_oef_maxcollection(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_issue_oef_maxcollection = WindFunc("f_issue_oef_maxcollection", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_issue_oef_maxcollection) <> vbString Then
        f_issue_oef_maxcollection = f_issue_oef_maxcollection / UnitVal_
    End If
End Function

'|fffd||fffd||23f||fffd||5ea||56e||fffd||fffd||fffd||fffd||fffd||fffd|,s_relatedcb_yearlyamount
Function s_relatedcb_yearlyamount(WINDCODE_ As Variant, Optional Year_ As Integer = 2016, Optional UnitVal_ As Double = 1) As Variant
    s_relatedcb_yearlyamount = WindFunc("s_relatedcb_yearlyamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_relatedcb_yearlyamount) <> vbString Then
        s_relatedcb_yearlyamount = s_relatedcb_yearlyamount / UnitVal_
    End If
End Function

'|fffd||632||fffd||56e||22f||fffd||5b2||fffd||fffd||fffd||fffd||fffd|,f_prt_topbondquantity
Function f_prt_topbondquantity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topbondquantity = WindFunc("f_prt_topbondquantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topbondquantity) <> vbString Then
        f_prt_topbondquantity = f_prt_topbondquantity / UnitVal_
    End If
End Function

'|fffd||632||fffd||56e||22f||fffd||5b2||5b1||4daf|,f_prt_topbondholdingchanging
Function f_prt_topbondholdingchanging(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topbondholdingchanging = WindFunc("f_prt_topbondholdingchanging", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topbondholdingchanging) <> vbString Then
        f_prt_topbondholdingchanging = f_prt_topbondholdingchanging / UnitVal_
    End If
End Function

'|fffd||632||5b3||5b2||fffd||fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topposition
Function f_prt_qdii_topposition(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_qdii_topposition = WindFunc("f_prt_qdii_topposition", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_qdii_topposition) <> vbString Then
        f_prt_qdii_topposition = f_prt_qdii_topposition / UnitVal_
    End If
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd||fffd|,f_info_generalbeneficialamount
Function f_info_generalbeneficialamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_generalbeneficialamount = WindFunc("f_info_generalbeneficialamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_generalbeneficialamount) <> vbString Then
        f_info_generalbeneficialamount = f_info_generalbeneficialamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd||fffd|,f_info_prioritybeneficialamount
Function f_info_prioritybeneficialamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_prioritybeneficialamount = WindFunc("f_info_prioritybeneficialamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_prioritybeneficialamount) <> vbString Then
        f_info_prioritybeneficialamount = f_info_prioritybeneficialamount / UnitVal_
    End If
End Function

'|13f||fffd||fffd||fffd||123|,f_info_targetscale
Function f_info_targetscale(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_targetscale = WindFunc("f_info_targetscale", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_targetscale) <> vbString Then
        f_info_targetscale = f_info_targetscale / UnitVal_
    End If
End Function

'|2b5||fffd||2b7||fffd||fffd||439||fffd||123|,f_info_actualscale
Function f_info_actualscale(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_actualscale = WindFunc("f_info_actualscale", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_actualscale) <> vbString Then
        f_info_actualscale = f_info_actualscale / UnitVal_
    End If
End Function

'|fffd||fffd||372||fffd||fffd||fffd||fffd||fffd|,f_info_minbuyamount
Function f_info_minbuyamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_minbuyamount = WindFunc("f_info_minbuyamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_minbuyamount) <> vbString Then
        f_info_minbuyamount = f_info_minbuyamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2f2||fffd||fffd||fffd||fffd||fffd|,f_info_managersbuyamount
Function f_info_managersbuyamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_managersbuyamount = WindFunc("f_info_managersbuyamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_info_managersbuyamount) <> vbString Then
        f_info_managersbuyamount = f_info_managersbuyamount / UnitVal_
    End If
End Function

'ETF|fffd||ae7a||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd|,f_info_etfpr_cashbalance
Function f_info_etfpr_cashbalance(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_etfpr_cashbalance = WindFunc("f_info_etfpr_cashbalance", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
    If VarType(f_info_etfpr_cashbalance) <> vbString Then
        f_info_etfpr_cashbalance = f_info_etfpr_cashbalance / UnitVal_
    End If
End Function

'ETF|fffd||ae7a||fffd||fffd||fffd||524||fffd||fffd||fffd||5bd||32ff7||fffd|,f_info_etfpr_estcash
Function f_info_etfpr_estcash(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_etfpr_estcash = WindFunc("f_info_etfpr_estcash", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
    If VarType(f_info_etfpr_estcash) <> vbString Then
        f_info_etfpr_estcash = f_info_etfpr_estcash / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||fffd||5b5||fffd||17c||fffd|,s_ipo_inquirymv_min
Function s_ipo_inquirymv_min(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_inquirymv_min = WindFunc("s_ipo_inquirymv_min", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_inquirymv_min) <> vbString Then
        s_ipo_inquirymv_min = s_ipo_inquirymv_min / UnitVal_
    End If
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||13f||fffd||afbb||fffd||fffd||fffd||fffd|,s_val_targetnp
Function s_val_targetnp(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional UnitVal_ As Double = 1) As Variant
    s_val_targetnp = WindFunc("s_val_targetnp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_val_targetnp) <> vbString Then
        s_val_targetnp = s_val_targetnp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||22f||fffd||fffd||5b5|,f_prt_cpvalue
Function f_prt_cpvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_cpvalue = WindFunc("f_prt_cpvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_cpvalue) <> vbString Then
        f_prt_cpvalue = f_prt_cpvalue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1b1||fffd||fffd||fffd||fffd||5b5|,f_prt_mtnvalue
Function f_prt_mtnvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_mtnvalue = WindFunc("f_prt_mtnvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_mtnvalue) <> vbString Then
        f_prt_mtnvalue = f_prt_mtnvalue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|5a7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd|,s_qstm07_cs_121
Function s_qstm07_cs_121(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_cs_121 = WindFunc("s_qstm07_cs_121", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_cs_121) <> vbString Then
        s_qstm07_cs_121 = s_qstm07_cs_121 / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd|_|fffd||6bb||fffd||fffd||fffd||2b7||36c||fffd||fffd|,His_Turnover
Function His_Turnover(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional Cycle_ As Integer = 1, Optional UnitVal_ As Double = 1) As Variant
    His_Turnover = WindFunc("His_Turnover", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HIS"), GetValidDate(TRADEDATE_), Cycle_)
    If VarType(His_Turnover) <> vbString Then
        His_Turnover = His_Turnover / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd|-|fffd||fffd||fffd||fffd||5fc||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|),stmnote_ar_cat
Function stmnote_ar_cat(WINDCODE_ As Variant, REPORTDATE_ As Variant, Category_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    stmnote_ar_cat = WindFunc("stmnote_ar_cat", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "STMNOTE"), GetValidDate(REPORTDATE_), Category_)
    If VarType(stmnote_ar_cat) <> vbString Then
        stmnote_ar_cat = stmnote_ar_cat / UnitVal_
    End If
End Function

'add for internal use
Function csrc_stat_mv(WINDCODE_ As Variant, TRADEDATE_ As Variant, a As String, b As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_mv = WindFunc("csrc_stat_mv", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), a, b)
    If VarType(csrc_stat_mv) <> vbString Then
        csrc_stat_mv = csrc_stat_mv / UnitVal_
    End If
End Function

Function csrc_stat_sharetotal(WINDCODE_ As Variant, TRADEDATE_ As Variant, a As String, b As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_sharetotal = WindFunc("csrc_stat_sharetotal", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), a, b)
    If VarType(csrc_stat_sharetotal) <> vbString Then
        csrc_stat_sharetotal = csrc_stat_sharetotal / UnitVal_
    End If
End Function

Function csrc_stat_yearnp(WINDCODE_ As Variant, a As String, b As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_yearnp = WindFunc("csrc_stat_yearnp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), a, b)
    If VarType(csrc_stat_yearnp) <> vbString Then
        csrc_stat_yearnp = csrc_stat_yearnp / UnitVal_
    End If
End Function

Function csrc_stat_div(WINDCODE_ As Variant, a As String, b As String) As Variant
    csrc_stat_div = WindFunc("csrc_stat_div", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), a, b)
End Function

Function csrc_stat_listcompnum(WINDCODE_ As Variant, TRADEDATE_ As Variant, a As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_listcompnum = WindFunc("csrc_stat_listcompnum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), a)
    If VarType(csrc_stat_listcompnum) <> vbString Then
        csrc_stat_listcompnum = csrc_stat_listcompnum / UnitVal_
    End If
End Function

Function csrc_stat_np(WINDCODE_ As Variant, TRADEDATE_ As Variant, a As String) As Variant
    csrc_stat_np = WindFunc("csrc_stat_np", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), a)
End Function

Function csrc_stat_na(WINDCODE_ As Variant, TRADEDATE_ As Variant, a As String) As Variant
    csrc_stat_na = WindFunc("csrc_stat_na", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), a)
End Function

Function csrc_stat_mv_new(WINDCODE_ As Variant, a As String, b As String, c As String) As Variant
    csrc_stat_mv_new = WindFunc("csrc_stat_mv_new", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), a, b, c)
End Function

Function csrc_stat_npttm(WINDCODE_ As Variant, TRADEDATE_ As Variant, a As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_npttm = WindFunc("csrc_stat_npttm", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), a)
    If VarType(csrc_stat_npttm) <> vbString Then
        csrc_stat_npttm = csrc_stat_npttm / UnitVal_
    End If
End Function

Function csrc_stat_qnp(WINDCODE_ As Variant, TRADEDATE_ As Variant, a As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_qnp = WindFunc("csrc_stat_qnp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), a)
    If VarType(csrc_stat_qnp) <> vbString Then
        csrc_stat_qnp = csrc_stat_qnp / UnitVal_
    End If
End Function

Function csrc_stat_volume(WINDCODE_ As Variant, TRADEDATE_ As Variant, d As Variant, a As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_volume = WindFunc("csrc_stat_volume", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), GetValidDate(d), a)
    If VarType(csrc_stat_volume) <> vbString Then
        csrc_stat_volume = csrc_stat_volume / UnitVal_
    End If
End Function

Function csrc_stat_amount(WINDCODE_ As Variant, TRADEDATE_ As Variant, d As Variant, a As String, Optional UnitVal_ As Double = 1) As Variant
    csrc_stat_amount = WindFunc("csrc_stat_amount", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), GetValidDate(d), a)
    If VarType(csrc_stat_amount) <> vbString Then
        csrc_stat_amount = csrc_stat_amount / UnitVal_
    End If
End Function

'2017/04/01 added
'|fffd||fffd||5fc||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||fffd|,s_contract_issuedate
Function s_contract_issuedate(WINDCODE_ As Variant) As Variant
    s_contract_issuedate = WindFunc("s_contract_issuedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|376||fffd||2b2||fffd||fffd||537||fffd||fffd||fffd|(|4bb||fffd||fffd|)(|2fd||13c|),f_info_firstinveststrategy
Function f_info_firstinveststrategy(WINDCODE_ As Variant) As Variant
    f_info_firstinveststrategy = WindFunc("f_info_firstinveststrategy", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|376||fffd||2b2||fffd||fffd||537||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)(|2fd||13c|),f_info_secondinveststrategy
Function f_info_secondinveststrategy(WINDCODE_ As Variant) As Variant
    f_info_secondinveststrategy = WindFunc("f_info_secondinveststrategy", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_issue_channel
Function f_issue_channel(WINDCODE_ As Variant) As Variant
    f_issue_channel = WindFunc("f_issue_channel", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||5b5|,f_prt_otherbond
Function f_prt_otherbond(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_otherbond = WindFunc("f_prt_otherbond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_otherbond) <> vbString Then
        f_prt_otherbond = f_prt_otherbond / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_otherbondtonav
Function f_prt_otherbondtonav(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_otherbondtonav = WindFunc("f_prt_otherbondtonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|),b_final_totalamout_anytime
Function b_final_totalamout_anytime(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional BondType_ As Integer = 1) As Variant
    b_final_totalamout_anytime = WindFunc("b_final_totalamout_anytime", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_), BondType_)
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_SHSC2
Function s_info_SHSC2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_SHSC2 = WindFunc("s_info_SHSC2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||5ba||fffd||fffd||5fc||fffd||271||fffd|,s_div_shares
Function s_div_shares(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_div_shares = WindFunc("s_div_shares", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_div_shares) <> vbString Then
        s_div_shares = s_div_shares / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd|,s_fellow_approvaldate
Function s_fellow_approvaldate(WINDCODE_ As Variant, Optional Year_ As Integer = 2016) As Variant
    s_fellow_approvaldate = WindFunc("s_fellow_approvaldate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||b7||fffd||fffd||fffd||fffd|,s_fellow_roadshowdate
Function s_fellow_roadshowdate(WINDCODE_ As Variant, Optional Year_ As Integer = 2016) As Variant
    s_fellow_roadshowdate = WindFunc("s_fellow_roadshowdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||436||fffd||fffd||fffd|,s_fellow_shareholders
Function s_fellow_shareholders(WINDCODE_ As Variant, Optional Year_ As Integer = 2016) As Variant
    s_fellow_shareholders = WindFunc("s_fellow_shareholders", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||fffd||6f8||fffd|,s_fellow_benchmarkprice
Function s_fellow_benchmarkprice(WINDCODE_ As Variant, Optional Year_ As Integer = 2016) As Variant
    s_fellow_benchmarkprice = WindFunc("s_fellow_benchmarkprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b5||fffd||2bc||6f8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5fc||6f1||fffd||fffd||fffd|,s_fellow_pricetoreserveprice
Function s_fellow_pricetoreserveprice(WINDCODE_ As Variant, Optional Year_ As Integer = 2016) As Variant
    s_fellow_pricetoreserveprice = WindFunc("s_fellow_pricetoreserveprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b5||fffd||2bc||6f8||fffd||fffd||fffd||53b||fffd||5fc||fffd||6f8||fffd||fffd||fffd||fffd|,s_fellow_pricetobenchmarkprice
Function s_fellow_pricetobenchmarkprice(WINDCODE_ As Variant, Optional Year_ As Integer = 2016) As Variant
    s_fellow_pricetobenchmarkprice = WindFunc("s_fellow_pricetobenchmarkprice", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6f8||fffd|,s_holder_price_fellowon
Function s_holder_price_fellowon(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_holder_price_fellowon = WindFunc("s_holder_price_fellowon", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bc||6f8||fffd|,s_holder_price_mh
Function s_holder_price_mh(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_holder_price_mh = WindFunc("s_holder_price_mh", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||276||fffd||fffd||fffd||fffd||5bc||6f8||fffd|,s_holder_price_Majorshareholders
Function s_holder_price_Majorshareholders(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_holder_price_Majorshareholders = WindFunc("s_holder_price_Majorshareholders", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|531||fffd||fffd||fffd||5b9||27c||1bb||fffd||fffd||fffd||fffd||fffd||6f8||fffd|,s_holder_price_ESOP
Function s_holder_price_ESOP(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_holder_price_ESOP = WindFunc("s_holder_price_ESOP", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||228||fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||6f8||fffd|,s_holder_price_stockbasedcompensation
Function s_holder_price_stockbasedcompensation(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_holder_price_stockbasedcompensation = WindFunc("s_holder_price_stockbasedcompensation", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_placingDate
Function s_ipo_placingDate(WINDCODE_ As Variant) As Variant
    s_ipo_placingDate = WindFunc("s_ipo_placingDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_14n
Function s_stmnote_insur_14n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_14n = WindFunc("s_stmnote_insur_14n", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_stmnote_insur_14n) <> vbString Then
        s_stmnote_insur_14n = s_stmnote_insur_14n / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_17n
Function s_stmnote_insur_17n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_17n = WindFunc("s_stmnote_insur_17n", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_stmnote_insur_17n) <> vbString Then
        s_stmnote_insur_17n = s_stmnote_insur_17n / UnitVal_
    End If
End Function

'|2b5||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_19n
Function s_stmnote_insur_19n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_19n = WindFunc("s_stmnote_insur_19n", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_stmnote_insur_19n) <> vbString Then
        s_stmnote_insur_19n = s_stmnote_insur_19n / UnitVal_
    End If
End Function

'|2b5||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_13n
Function s_stmnote_insur_13n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_13n = WindFunc("s_stmnote_insur_13n", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_stmnote_insur_13n) <> vbString Then
        s_stmnote_insur_13n = s_stmnote_insur_13n / UnitVal_
    End If
End Function

'|fffd||6ba||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_16n
Function s_stmnote_insur_16n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_16n = WindFunc("s_stmnote_insur_16n", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_stmnote_insur_16n) <> vbString Then
        s_stmnote_insur_16n = s_stmnote_insur_16n / UnitVal_
    End If
End Function

'|fffd||fffd||427||4b5||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_18n
Function s_stmnote_insur_18n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_18n = WindFunc("s_stmnote_insur_18n", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_stmnote_insur_18n) <> vbString Then
        s_stmnote_insur_18n = s_stmnote_insur_18n / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd|(|fffd||fffd||fffd||fffd|),s_stmnote_insur_20n
Function s_stmnote_insur_20n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_20n = WindFunc("s_stmnote_insur_20n", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(s_stmnote_insur_20n) <> vbString Then
        s_stmnote_insur_20n = s_stmnote_insur_20n / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_Pshares_abc
Function s_ipo_Pshares_abc(WINDCODE_ As Variant, InstitutionType_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_Pshares_abc = WindFunc("s_ipo_Pshares_abc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_)
    If VarType(s_ipo_Pshares_abc) <> vbString Then
        s_ipo_Pshares_abc = s_ipo_Pshares_abc / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||ae7a||fffd||fffd||fffd||fffd|,s_ipo_op_volume_abc
Function s_ipo_op_volume_abc(WINDCODE_ As Variant, InstitutionType_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_op_volume_abc = WindFunc("s_ipo_op_volume_abc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_)
    If VarType(s_ipo_op_volume_abc) <> vbString Then
        s_ipo_op_volume_abc = s_ipo_op_volume_abc / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd|,s_ipo_lotteryrate_abc
Function s_ipo_lotteryrate_abc(WINDCODE_ As Variant, InstitutionType_ As Integer) As Variant
    s_ipo_lotteryrate_abc = WindFunc("s_ipo_lotteryrate_abc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_ipo_PsharesPct_abc
Function s_ipo_PsharesPct_abc(WINDCODE_ As Variant, InstitutionType_ As Integer) As Variant
    s_ipo_PsharesPct_abc = WindFunc("s_ipo_PsharesPct_abc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||427||fffd||ae7a||fffd||fffd||fffd||fffd||57c||fffd||fffd|,s_ipo_VSSharesPct_abc
Function s_ipo_VSSharesPct_abc(WINDCODE_ As Variant, InstitutionType_ As Integer) As Variant
    s_ipo_VSSharesPct_abc = WindFunc("s_ipo_VSSharesPct_abc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_)
End Function

'20170522 added
'|fffd||6f9||fffd||368||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,hks_share_HKS
Function hks_share_HKS(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_HKS = WindFunc("hks_share_HKS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_HKS) <> vbString Then
        hks_share_HKS = hks_share_HKS / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||438||6f9||fffd||368||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,hks_share_HKSH
Function hks_share_HKSH(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_HKSH = WindFunc("hks_share_HKSH", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_HKSH) <> vbString Then
        hks_share_HKSH = hks_share_HKSH / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||438||6f9||fffd||368||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,hks_share_HKSZ
Function hks_share_HKSZ(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_HKSZ = WindFunc("hks_share_HKSZ", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_HKSZ) <> vbString Then
        hks_share_HKSZ = hks_share_HKSZ / UnitVal_
    End If
End Function

'|fffd||fffd||6f1||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,hks_share_HK
Function hks_share_HK(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_HK = WindFunc("hks_share_HK", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_HK) <> vbString Then
        hks_share_HK = hks_share_HK / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,hks_share_CN
Function hks_share_CN(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_CN = WindFunc("hks_share_CN", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_CN) <> vbString Then
        hks_share_CN = hks_share_CN / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd|,hks_share_OS
Function hks_share_OS(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_OS = WindFunc("hks_share_OS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_OS) <> vbString Then
        hks_share_OS = hks_share_OS / UnitVal_
    End If
End Function

'|fffd||6f9||fffd||368||fffd||5b9||fffd||57c||fffd||fffd|,hks_share_pct_HKS
Function hks_share_pct_HKS(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_share_pct_HKS = WindFunc("hks_share_pct_HKS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||438||6f9||fffd||368||fffd||5b9||fffd||57c||fffd||fffd|,hks_share_pct_HKSH
Function hks_share_pct_HKSH(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_share_pct_HKSH = WindFunc("hks_share_pct_HKSH", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||438||6f9||fffd||368||fffd||5b9||fffd||57c||fffd||fffd|,hks_share_pct_HKSZ
Function hks_share_pct_HKSZ(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_share_pct_HKSZ = WindFunc("hks_share_pct_HKSZ", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||6f1||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||5b9||fffd||57c||fffd||fffd|,hks_share_pct_HK
Function hks_share_pct_HK(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_share_pct_HK = WindFunc("hks_share_pct_HK", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||5b9||fffd||57c||fffd||fffd|,hks_share_pct_CN
Function hks_share_pct_CN(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_share_pct_CN = WindFunc("hks_share_pct_CN", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||5b9||fffd||57c||fffd||fffd|,hks_share_pct_OS
Function hks_share_pct_OS(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_share_pct_OS = WindFunc("hks_share_pct_OS", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||5b8||fffd||fffd||fffd||fffd||fffd||fffd|,s_info_indexcode_citic
Function s_info_indexcode_citic(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_indexcode_citic = WindFunc("s_info_indexcode_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5a4||22f||fffd||6f9||fffd||368||5b8||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||6f9||fffd|),hks_info_indexcode_citic
Function hks_info_indexcode_citic(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    hks_info_indexcode_citic = WindFunc("hks_info_indexcode_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|fffd||6f9||fffd|),hks_info_industry_citic
Function hks_info_industry_citic(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    hks_info_industry_citic = WindFunc("hks_info_industry_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|fffd||6f9||fffd|),hks_info_industry_citiccode
Function hks_info_industry_citiccode(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    hks_info_industry_citiccode = WindFunc("hks_info_industry_citiccode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "HKS"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'2017/6/15 added
'|fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd|,s_stm07_bs_163
Function s_stm07_bs_163(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_163 = WindFunc("s_stm07_bs_163", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_163) <> vbString Then
        s_stm07_bs_163 = s_stm07_bs_163 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||228||fffd||6e64||fffd||fffd|,s_stm07_bs_164
Function s_stm07_bs_164(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_164 = WindFunc("s_stm07_bs_164", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_164) <> vbString Then
        s_stm07_bs_164 = s_stm07_bs_164 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||228||fffd||6e64||fffd||fffd|:|fffd||fffd||fffd||239||fffd|,s_stm07_bs_165
Function s_stm07_bs_165(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_165 = WindFunc("s_stm07_bs_165", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_165) <> vbString Then
        s_stm07_bs_165 = s_stm07_bs_165 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||fffd||2b2||fffd||fffd||378||fffd||56e||fffd||fffd||fffd||fffd||fffd||139||fffd||fffd||2bc||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_28
Function s_stmnote_Eoitems_28(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_28 = WindFunc("s_stmnote_Eoitems_28", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_28) <> vbString Then
        s_stmnote_Eoitems_28 = s_stmnote_Eoitems_28 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||43c||fffd||fffd||1b2||fffd||fffd||535||fffd||4e6||fffd||57f||fffd||fffd||fffd||fffd||5b5||5fc||fffd||fffd||5ea||fffd||fffd|,s_stmnote_Eoitems_29
Function s_stmnote_Eoitems_29(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_29 = WindFunc("s_stmnote_Eoitems_29", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_29) <> vbString Then
        s_stmnote_Eoitems_29 = s_stmnote_Eoitems_29 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||3af||fffd||434||fffd||fffd||fffd||221||fffd||f5||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_30
Function s_stmnote_Eoitems_30(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_30 = WindFunc("s_stmnote_Eoitems_30", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_30) <> vbString Then
        s_stmnote_Eoitems_30 = s_stmnote_Eoitems_30 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bc||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||537||fffd||fffd||632||fffd||fffd||fffd||5b5||fffd||4daf||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_31
Function s_stmnote_Eoitems_31(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_31 = WindFunc("s_stmnote_Eoitems_31", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_31) <> vbString Then
        s_stmnote_Eoitems_31 = s_stmnote_Eoitems_31 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4aa||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4f0||fffd||fffd|,s_stmnote_Eoitems_32
Function s_stmnote_Eoitems_32(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_32 = WindFunc("s_stmnote_Eoitems_32", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_32) <> vbString Then
        s_stmnote_Eoitems_32 = s_stmnote_Eoitems_32 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||43e||fffd||4ea||221||fffd||f5||fffd||fffd||439||737||fffd||fffd||fffd||fffd||fffd|,s_stmnote_Eoitems_33
Function s_stmnote_Eoitems_33(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Eoitems_33 = WindFunc("s_stmnote_Eoitems_33", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_Eoitems_33) <> vbString Then
        s_stmnote_Eoitems_33 = s_stmnote_Eoitems_33 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1f0||fffd||739||271||fffd|,s_share_totshares_pre
Function s_share_totshares_pre(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_totshares_pre = WindFunc("s_share_totshares_pre", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_share_totshares_pre) <> vbString Then
        s_share_totshares_pre = s_share_totshares_pre / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||228||fffd||fffd||1b1||fffd||fffd||fffd||fffd||fffd||fffd|,b_anal_exercisecouponrate_cnbd
Function b_anal_exercisecouponrate_cnbd(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
    b_anal_exercisecouponrate_cnbd = WindFunc("b_anal_exercisecouponrate_cnbd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'2017/7/17 added
'|fffd||fffd||fffd||fffd||2b9||fffd||fffd||228|_|52d||5b5|,s_stmnote_LandUseRights_19
Function s_stmnote_LandUseRights_19(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LandUseRights_19 = WindFunc("s_stmnote_LandUseRights_19", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_LandUseRights_19) <> vbString Then
        s_stmnote_LandUseRights_19 = s_stmnote_LandUseRights_19 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b9||fffd||fffd||228|_|fffd||6fc||fffd||32f||fffd||fffd|,s_stmnote_LandUseRights_20
Function s_stmnote_LandUseRights_20(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LandUseRights_20 = WindFunc("s_stmnote_LandUseRights_20", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_LandUseRights_20) <> vbString Then
        s_stmnote_LandUseRights_20 = s_stmnote_LandUseRights_20 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b9||fffd||fffd||228|_|fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_LandUseRights_21
Function s_stmnote_LandUseRights_21(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LandUseRights_21 = WindFunc("s_stmnote_LandUseRights_21", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_LandUseRights_21) <> vbString Then
        s_stmnote_LandUseRights_21 = s_stmnote_LandUseRights_21 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b9||fffd||fffd||228|_|fffd||fffd||fffd||fffd||fffd||5b5|,s_stmnote_LandUseRights_22
Function s_stmnote_LandUseRights_22(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LandUseRights_22 = WindFunc("s_stmnote_LandUseRights_22", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_LandUseRights_22) <> vbString Then
        s_stmnote_LandUseRights_22 = s_stmnote_LandUseRights_22 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2a7|,s_stmnote_ImpairmentLoss_4
Function s_stmnote_ImpairmentLoss_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ImpairmentLoss_4 = WindFunc("s_stmnote_ImpairmentLoss_4", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ImpairmentLoss_4) <> vbString Then
        s_stmnote_ImpairmentLoss_4 = s_stmnote_ImpairmentLoss_4 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a7|,s_stmnote_ImpairmentLoss_5
Function s_stmnote_ImpairmentLoss_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ImpairmentLoss_5 = WindFunc("s_stmnote_ImpairmentLoss_5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ImpairmentLoss_5) <> vbString Then
        s_stmnote_ImpairmentLoss_5 = s_stmnote_ImpairmentLoss_5 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||2a7|,s_stmnote_ImpairmentLoss_6
Function s_stmnote_ImpairmentLoss_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ImpairmentLoss_6 = WindFunc("s_stmnote_ImpairmentLoss_6", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ImpairmentLoss_6) <> vbString Then
        s_stmnote_ImpairmentLoss_6 = s_stmnote_ImpairmentLoss_6 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||174||fffd||fffd||fffd||375||fffd||fffd||fffd||5b5||fffd||fffd||2a7|,s_stmnote_ImpairmentLoss_7
Function s_stmnote_ImpairmentLoss_7(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ImpairmentLoss_7 = WindFunc("s_stmnote_ImpairmentLoss_7", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ImpairmentLoss_7) <> vbString Then
        s_stmnote_ImpairmentLoss_7 = s_stmnote_ImpairmentLoss_7 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7|,s_stmnote_ImpairmentLoss_8
Function s_stmnote_ImpairmentLoss_8(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ImpairmentLoss_8 = WindFunc("s_stmnote_ImpairmentLoss_8", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ImpairmentLoss_8) <> vbString Then
        s_stmnote_ImpairmentLoss_8 = s_stmnote_ImpairmentLoss_8 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||2bc||fffd||5b5||fffd||fffd||2a7|,s_stmnote_ImpairmentLoss_9
Function s_stmnote_ImpairmentLoss_9(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ImpairmentLoss_9 = WindFunc("s_stmnote_ImpairmentLoss_9", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ImpairmentLoss_9) <> vbString Then
        s_stmnote_ImpairmentLoss_9 = s_stmnote_ImpairmentLoss_9 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|/(|fffd||fffd||2a7|),s_stmnote_FAAviableForSale_0001
Function s_stmnote_FAAviableForSale_0001(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_FAAviableForSale_0001 = WindFunc("s_stmnote_FAAviableForSale_0001", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_FAAviableForSale_0001) <> vbString Then
        s_stmnote_FAAviableForSale_0001 = s_stmnote_FAAviableForSale_0001 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||4f0||fffd||fffd|,s_stmnote_FAAviableForSale_0002
Function s_stmnote_FAAviableForSale_0002(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_FAAviableForSale_0002 = WindFunc("s_stmnote_FAAviableForSale_0002", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_FAAviableForSale_0002) <> vbString Then
        s_stmnote_FAAviableForSale_0002 = s_stmnote_FAAviableForSale_0002 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|1f0||fffd||6bc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||6d71||fffd||fffd||5ea||fffd||fffd||fffd||fffd||fffd||fffd||13d||fffd||fffd|,s_stmnote_FAAviableForSale_0003
Function s_stmnote_FAAviableForSale_0003(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_FAAviableForSale_0003 = WindFunc("s_stmnote_FAAviableForSale_0003", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_FAAviableForSale_0003) <> vbString Then
        s_stmnote_FAAviableForSale_0003 = s_stmnote_FAAviableForSale_0003 / UnitVal_
    End If
End Function

'|fffd||279||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf|,s_stmnote_FAAviableForSale_0004
Function s_stmnote_FAAviableForSale_0004(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_FAAviableForSale_0004 = WindFunc("s_stmnote_FAAviableForSale_0004", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_FAAviableForSale_0004) <> vbString Then
        s_stmnote_FAAviableForSale_0004 = s_stmnote_FAAviableForSale_0004 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b6||fffd||fffd||6bd||fffd||fffd|,s_stmnote_STBorrow_4505
Function s_stmnote_STBorrow_4505(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4505 = WindFunc("s_stmnote_STBorrow_4505", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4505) <> vbString Then
        s_stmnote_STBorrow_4505 = s_stmnote_STBorrow_4505 / UnitVal_
    End If
End Function

'|fffd||fffd||52a||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_STBorrow_4506
Function s_stmnote_STBorrow_4506(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4506 = WindFunc("s_stmnote_STBorrow_4506", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4506) <> vbString Then
        s_stmnote_STBorrow_4506 = s_stmnote_STBorrow_4506 / UnitVal_
    End If
End Function

'|fffd||fffd||52a||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_STBorrow_4507
Function s_stmnote_STBorrow_4507(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4507 = WindFunc("s_stmnote_STBorrow_4507", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4507) <> vbString Then
        s_stmnote_STBorrow_4507 = s_stmnote_STBorrow_4507 / UnitVal_
    End If
End Function

'|177||52a||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_STBorrow_4508
Function s_stmnote_STBorrow_4508(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4508 = WindFunc("s_stmnote_STBorrow_4508", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4508) <> vbString Then
        s_stmnote_STBorrow_4508 = s_stmnote_STBorrow_4508 / UnitVal_
    End If
End Function

'|fffd||6f1||4b6||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_STBorrow_4509
Function s_stmnote_STBorrow_4509(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4509 = WindFunc("s_stmnote_STBorrow_4509", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4509) <> vbString Then
        s_stmnote_STBorrow_4509 = s_stmnote_STBorrow_4509 / UnitVal_
    End If
End Function

'|4e2||fffd||fffd||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_STBorrow_4510
Function s_stmnote_STBorrow_4510(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4510 = WindFunc("s_stmnote_STBorrow_4510", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4510) <> vbString Then
        s_stmnote_STBorrow_4510 = s_stmnote_STBorrow_4510 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b6||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_STBorrow_4511
Function s_stmnote_STBorrow_4511(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4511 = WindFunc("s_stmnote_STBorrow_4511", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4511) <> vbString Then
        s_stmnote_STBorrow_4511 = s_stmnote_STBorrow_4511 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd||421||fffd||fffd|,s_stmnote_STBorrow_4512
Function s_stmnote_STBorrow_4512(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_STBorrow_4512 = WindFunc("s_stmnote_STBorrow_4512", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_STBorrow_4512) <> vbString Then
        s_stmnote_STBorrow_4512 = s_stmnote_STBorrow_4512 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b3||fffd||fffd||6bd||fffd||fffd|,s_stmnote_LTBorrow_4505
Function s_stmnote_LTBorrow_4505(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4505 = WindFunc("s_stmnote_LTBorrow_4505", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4505) <> vbString Then
        s_stmnote_LTBorrow_4505 = s_stmnote_LTBorrow_4505 / UnitVal_
    End If
End Function

'|fffd||fffd||52a||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_LTBorrow_4506
Function s_stmnote_LTBorrow_4506(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4506 = WindFunc("s_stmnote_LTBorrow_4506", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4506) <> vbString Then
        s_stmnote_LTBorrow_4506 = s_stmnote_LTBorrow_4506 / UnitVal_
    End If
End Function

'|fffd||fffd||52a||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_LTBorrow_4507
Function s_stmnote_LTBorrow_4507(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4507 = WindFunc("s_stmnote_LTBorrow_4507", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4507) <> vbString Then
        s_stmnote_LTBorrow_4507 = s_stmnote_LTBorrow_4507 / UnitVal_
    End If
End Function

'|177||52a||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_LTBorrow_4508
Function s_stmnote_LTBorrow_4508(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4508 = WindFunc("s_stmnote_LTBorrow_4508", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4508) <> vbString Then
        s_stmnote_LTBorrow_4508 = s_stmnote_LTBorrow_4508 / UnitVal_
    End If
End Function

'|fffd||6f1||4b3||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_LTBorrow_4509
Function s_stmnote_LTBorrow_4509(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4509 = WindFunc("s_stmnote_LTBorrow_4509", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4509) <> vbString Then
        s_stmnote_LTBorrow_4509 = s_stmnote_LTBorrow_4509 / UnitVal_
    End If
End Function

'|4e2||fffd||fffd||fffd||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_LTBorrow_4510
Function s_stmnote_LTBorrow_4510(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4510 = WindFunc("s_stmnote_LTBorrow_4510", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4510) <> vbString Then
        s_stmnote_LTBorrow_4510 = s_stmnote_LTBorrow_4510 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b3||fffd||fffd||6bd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_LTBorrow_4511
Function s_stmnote_LTBorrow_4511(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4511 = WindFunc("s_stmnote_LTBorrow_4511", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4511) <> vbString Then
        s_stmnote_LTBorrow_4511 = s_stmnote_LTBorrow_4511 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6bd||fffd||fffd||421||fffd||fffd|,s_stmnote_LTBorrow_4512
Function s_stmnote_LTBorrow_4512(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_LTBorrow_4512 = WindFunc("s_stmnote_LTBorrow_4512", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_LTBorrow_4512) <> vbString Then
        s_stmnote_LTBorrow_4512 = s_stmnote_LTBorrow_4512 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||3fc||fffd|,s_stmnote_Borrow_4512
Function s_stmnote_Borrow_4512(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_Borrow_4512 = WindFunc("s_stmnote_Borrow_4512", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_Borrow_4512) <> vbString Then
        s_stmnote_Borrow_4512 = s_stmnote_Borrow_4512 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b4||fffd||fffd|,s_stmnote_DPST_4405
Function s_stmnote_DPST_4405(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4405 = WindFunc("s_stmnote_DPST_4405", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4405) <> vbString Then
        s_stmnote_DPST_4405 = s_stmnote_DPST_4405 / UnitVal_
    End If
End Function

'|fffd||fffd||52a||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_DPST_4406
Function s_stmnote_DPST_4406(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4406 = WindFunc("s_stmnote_DPST_4406", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4406) <> vbString Then
        s_stmnote_DPST_4406 = s_stmnote_DPST_4406 / UnitVal_
    End If
End Function

'|fffd||fffd||52a||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_DPST_4407
Function s_stmnote_DPST_4407(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4407 = WindFunc("s_stmnote_DPST_4407", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4407) <> vbString Then
        s_stmnote_DPST_4407 = s_stmnote_DPST_4407 / UnitVal_
    End If
End Function

'|177||52a||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_DPST_4408
Function s_stmnote_DPST_4408(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4408 = WindFunc("s_stmnote_DPST_4408", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4408) <> vbString Then
        s_stmnote_DPST_4408 = s_stmnote_DPST_4408 / UnitVal_
    End If
End Function

'|fffd||6f1||4b4||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_DPST_4409
Function s_stmnote_DPST_4409(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4409 = WindFunc("s_stmnote_DPST_4409", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4409) <> vbString Then
        s_stmnote_DPST_4409 = s_stmnote_DPST_4409 / UnitVal_
    End If
End Function

'|4e2||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_DPST_4410
Function s_stmnote_DPST_4410(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4410 = WindFunc("s_stmnote_DPST_4410", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4410) <> vbString Then
        s_stmnote_DPST_4410 = s_stmnote_DPST_4410 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b4||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|),s_stmnote_DPST_4411
Function s_stmnote_DPST_4411(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4411 = WindFunc("s_stmnote_DPST_4411", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4411) <> vbString Then
        s_stmnote_DPST_4411 = s_stmnote_DPST_4411 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||434||fffd||fffd||3fc||fffd|,s_stmnote_DPST_4412
Function s_stmnote_DPST_4412(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_DPST_4412 = WindFunc("s_stmnote_DPST_4412", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_DPST_4412) <> vbString Then
        s_stmnote_DPST_4412 = s_stmnote_DPST_4412 / UnitVal_
    End If
End Function

'|fffd||6bf||fffd|_|fffd||fffd||1b5||fffd||3bb|,s_stmnote_InAudit_agency
Function s_stmnote_InAudit_agency(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_InAudit_agency = WindFunc("s_stmnote_InAudit_agency", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6bf||fffd|_|1e9||fffd||fffd||fffd||fffd||fffd||2a6|,s_stmnote_InAudit_cpa
Function s_stmnote_InAudit_cpa(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_InAudit_cpa = WindFunc("s_stmnote_InAudit_cpa", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6bf||fffd|_|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_InAudit_category
Function s_stmnote_InAudit_category(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_InAudit_category = WindFunc("s_stmnote_InAudit_category", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6bf||fffd|_|fffd||fffd||1bd||fffd||fffd||2f5||fffd||fffd|,s_stmnote_InAudit_interpretation
Function s_stmnote_InAudit_interpretation(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_InAudit_interpretation = WindFunc("s_stmnote_InAudit_interpretation", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6bf||631||fffd||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd|,s_stmnote_InAudit_issuingdate
Function s_stmnote_InAudit_issuingdate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_InAudit_issuingdate = WindFunc("s_stmnote_InAudit_issuingdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|5a4||22f|,s_stmnote_SPUAR_0001
Function s_stmnote_SPUAR_0001(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_0001 = WindFunc("s_stmnote_SPUAR_0001", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_0001) <> vbString Then
        s_stmnote_SPUAR_0001 = s_stmnote_SPUAR_0001 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|1b1||fffd||fffd|,s_stmnote_SPUAR_0002
Function s_stmnote_SPUAR_0002(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_0002 = WindFunc("s_stmnote_SPUAR_0002", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_0002) <> vbString Then
        s_stmnote_SPUAR_0002 = s_stmnote_SPUAR_0002 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||fffd||fffd|,s_stmnote_SPUAR_0003
Function s_stmnote_SPUAR_0003(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_0003 = WindFunc("s_stmnote_SPUAR_0003", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_0003) <> vbString Then
        s_stmnote_SPUAR_0003 = s_stmnote_SPUAR_0003 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||fffd||43c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||228|,s_stmnote_SPUAR_0004
Function s_stmnote_SPUAR_0004(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_0004 = WindFunc("s_stmnote_SPUAR_0004", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_0004) <> vbString Then
        s_stmnote_SPUAR_0004 = s_stmnote_SPUAR_0004 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||fffd||fffd||4e6||fffd||57f||fffd|,s_stmnote_SPUAR_0005
Function s_stmnote_SPUAR_0005(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_0005 = WindFunc("s_stmnote_SPUAR_0005", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_0005) <> vbString Then
        s_stmnote_SPUAR_0005 = s_stmnote_SPUAR_0005 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stmnote_SPUAR_0006
Function s_stmnote_SPUAR_0006(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_0006 = WindFunc("s_stmnote_SPUAR_0006", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_0006) <> vbString Then
        s_stmnote_SPUAR_0006 = s_stmnote_SPUAR_0006 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||5b5||5fc||fffd||fffd|,s_stmnote_SPUAR_0007
Function s_stmnote_SPUAR_0007(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_0007 = WindFunc("s_stmnote_SPUAR_0007", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_0007) <> vbString Then
        s_stmnote_SPUAR_0007 = s_stmnote_SPUAR_0007 / UnitVal_
    End If
End Function

'|fffd||632||5b9||279||fffd||1b1|Wind|fffd||fffd||fffd||fffd|,f_prt_topstockwindcode
Function f_prt_topstockwindcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topstockwindcode = WindFunc("f_prt_topstockwindcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||56e||22f|Wind|fffd||fffd||fffd||fffd|,f_prt_topbondwindcode
Function f_prt_topbondwindcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topbondwindcode = WindFunc("f_prt_topbondwindcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||228||5a4|Wind|fffd||fffd||fffd||fffd|,f_prt_topwarrantwindcode
Function f_prt_topwarrantwindcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topwarrantwindcode = WindFunc("f_prt_topwarrantwindcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||5a4||22f|Wind|fffd||fffd||fffd||fffd|(QDII),f_prt_qdii_topsecuritieswindcode
Function f_prt_qdii_topsecuritieswindcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_qdii_topsecuritieswindcode = WindFunc("f_prt_qdii_topsecuritieswindcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||5bb||fffd||fffd||fffd|Wind|fffd||fffd||fffd||fffd|,f_prt_topfundwindcode
Function f_prt_topfundwindcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topfundwindcode = WindFunc("f_prt_topfundwindcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||5a4||22f|Wind|fffd||fffd||fffd||fffd|,f_prt_topsecuritiewindcode
Function f_prt_topsecuritiewindcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topsecuritiewindcode = WindFunc("f_prt_topsecuritiewindcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||437||776||fffd|(|fffd||3fc||fffd|),f_holder_institution_totalholding
Function f_holder_institution_totalholding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_holder_institution_totalholding = WindFunc("f_holder_institution_totalholding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_holder_institution_totalholding) <> vbString Then
        f_holder_institution_totalholding = f_holder_institution_totalholding / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||431||fffd||fffd||fffd|(|fffd||3fc||fffd|),f_holder_institution_totalholdingpct
Function f_holder_institution_totalholdingpct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_holder_institution_totalholdingpct = WindFunc("f_holder_institution_totalholdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||437||776||fffd|(|fffd||3fc||fffd|),f_holder_personal_totalholding
Function f_holder_personal_totalholding(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_holder_personal_totalholding = WindFunc("f_holder_personal_totalholding", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_holder_personal_totalholding) <> vbString Then
        f_holder_personal_totalholding = f_holder_personal_totalholding / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f3||fffd||fffd||431||fffd||fffd||fffd|(|fffd||3fc||fffd|),f_holder_personal_totalholdingpct
Function f_holder_personal_totalholdingpct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_holder_personal_totalholdingpct = WindFunc("f_holder_personal_totalholdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||aeef|),f_risk_annualintervalyield
Function f_risk_annualintervalyield(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    f_risk_annualintervalyield = WindFunc("f_risk_annualintervalyield", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'ETF|fffd||ae7a||fffd||fffd||fffd||fffd||fffd||421||fffd||ae7a||fffd||fffd||635||fffd||3bb||fffd||2b2||fffd||fffd||fffd||5b5|,f_info_etfpr_minnav_unit
Function f_info_etfpr_minnav_unit(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_etfpr_minnav_unit = WindFunc("f_info_etfpr_minnav_unit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
    If VarType(f_info_etfpr_minnav_unit) <> vbString Then
        f_info_etfpr_minnav_unit = f_info_etfpr_minnav_unit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||57e||fffd||fffd||2b2||fffd||fffd||fffd||5b5|,f_prt_avgnetasset
Function f_prt_avgnetasset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_avgnetasset = WindFunc("f_prt_avgnetasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_avgnetasset) <> vbString Then
        f_prt_avgnetasset = f_prt_avgnetasset / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd|,f_info_corpcity
Function f_info_corpcity(WINDCODE_ As Variant) As Variant
    f_info_corpcity = WindFunc("f_info_corpcity", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||2a6||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_counselor
Function f_info_counselor(WINDCODE_ As Variant) As Variant
    f_info_counselor = WindFunc("f_info_counselor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||433||fffd||fffd||fffd||2b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||56e|),b_rate_historicalMIR_cnbd
Function b_rate_historicalMIR_cnbd(WINDCODE_ As Variant) As Variant
    b_rate_historicalMIR_cnbd = WindFunc("b_rate_historicalMIR_cnbd", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'2017/08/08 Added
'|fffd||fffd||fffd||b1||fffd||fffd||fffd||fffd||fffd|,s_fa_Latelyrd_bt
Function s_fa_Latelyrd_bt(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_fa_Latelyrd_bt = WindFunc("s_fa_Latelyrd_bt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||7fb||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_ipo_Psharesmax_abc
Function s_ipo_Psharesmax_abc(WINDCODE_ As Variant, InstitutionType_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_Psharesmax_abc = WindFunc("s_ipo_Psharesmax_abc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), InstitutionType_)
    If VarType(s_ipo_Psharesmax_abc) <> vbString Then
        s_ipo_Psharesmax_abc = s_ipo_Psharesmax_abc / UnitVal_
    End If
End Function

'|fffd||fffd||4bb||376||fffd||fffd||fffd||7f1||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd||437||776||fffd||3fc||fffd|,f_holder_single_totalholding
Function f_holder_single_totalholding(WINDCODE_ As Variant, REPORTDATETYPE_ As Integer, Year_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    f_holder_single_totalholding = WindFunc("f_holder_single_totalholding", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), REPORTDATETYPE_, Year_)
    If VarType(f_holder_single_totalholding) <> vbString Then
        f_holder_single_totalholding = f_holder_single_totalholding / UnitVal_
    End If
End Function

'|fffd||fffd||4bb||376||fffd||fffd||fffd||7f1||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd||431||fffd||fffd||fffd||fffd||3fc||fffd|,f_holder_single_totalholdingpct
Function f_holder_single_totalholdingpct(WINDCODE_ As Variant, REPORTDATETYPE_ As Integer, Year_ As Integer) As Variant
    f_holder_single_totalholdingpct = WindFunc("f_holder_single_totalholdingpct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), REPORTDATETYPE_, Year_)
End Function

'2017/08/29 Added
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,s_stm07_is_97
Function s_stm07_is_97(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_97 = WindFunc("s_stm07_is_97", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_97) <> vbString Then
        s_stm07_is_97 = s_stm07_is_97 / UnitVal_
    End If
End Function

'2017/09/4 Added
'|fffd||fffd||fffd||fffd||fffd||fffd||2fd||13c||fffd||fffd||1b7||fffd||fffd||fffd||fffd||3f5||373||fffd||fffd||fffd||fffd|,f_info_pequotationcode
Function f_info_pequotationcode(WINDCODE_ As Variant) As Variant
    f_info_pequotationcode = WindFunc("f_info_pequotationcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||ae7a||237||fffd||3f2||fffd||46f||fffd||fffd||fffd||fffd|,f_info_pchquerydate
Function f_info_pchquerydate(WINDCODE_ As Variant) As Variant
    f_info_pchquerydate = WindFunc("f_info_pchquerydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||237||fffd||3f2||fffd||46f||fffd||fffd||fffd||fffd|,f_info_redmquerydate
Function f_info_redmquerydate(WINDCODE_ As Variant) As Variant
    f_info_redmquerydate = WindFunc("f_info_redmquerydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_anal_impliedyield
Function f_anal_impliedyield(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_anal_impliedyield = WindFunc("f_anal_impliedyield", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6f9||fffd||376||fffd||fffd||fffd||fffd||5b5|,f_prt_hkstockvalue
Function f_prt_hkstockvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_hkstockvalue = WindFunc("f_prt_hkstockvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_hkstockvalue) <> vbString Then
        f_prt_hkstockvalue = f_prt_hkstockvalue / UnitVal_
    End If
End Function

'|fffd||6f9||fffd||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_hkstocktonav
Function f_prt_hkstocktonav(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_hkstocktonav = WindFunc("f_prt_hkstocktonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6f9||fffd||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|,f_prt_hkstocktoasset
Function f_prt_hkstocktoasset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_hkstocktoasset = WindFunc("f_prt_hkstocktoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,f_info_primarydealers
Function f_info_primarydealers(WINDCODE_ As Variant) As Variant
    f_info_primarydealers = WindFunc("f_info_primarydealers", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||ef7b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|,b_szse_distribcode
Function b_szse_distribcode(WINDCODE_ As Variant) As Variant
    b_szse_distribcode = WindFunc("b_szse_distribcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||738||fffd||fffd||fffd|,s_stmnote_bank_171
Function s_stmnote_bank_171(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_171 = WindFunc("s_stmnote_bank_171", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||538||fffd||fffd||fffd||fffd||fffd|,s_stmnote_bank_172
Function s_stmnote_bank_172(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_172 = WindFunc("s_stmnote_bank_172", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2a1||fffd||fffd||fffd||fffd||218bd||fffd||fffd||fffd||fffd||372||fffd||fffd||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd|,s_stmnote_ben_sb
Function s_stmnote_ben_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ben_sb = WindFunc("s_stmnote_ben_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ben_sb) <> vbString Then
        s_stmnote_ben_sb = s_stmnote_ben_sb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2a1||fffd||fffd||fffd||fffd||218bd||fffd||fffd||fffd||fffd||372||fffd||fffd||fffd|:|fffd||fffd||129||fffd||fffd||fffd|,s_stmnote_ben_eb
Function s_stmnote_ben_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ben_eb = WindFunc("s_stmnote_ben_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ben_eb) <> vbString Then
        s_stmnote_ben_eb = s_stmnote_ben_eb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2a1||fffd||fffd||fffd||fffd||218bd||fffd||fffd||fffd||fffd||372||fffd||fffd||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd|,s_stmnote_ben_de
Function s_stmnote_ben_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ben_de = WindFunc("s_stmnote_ben_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ben_de) <> vbString Then
        s_stmnote_ben_de = s_stmnote_ben_de / UnitVal_
    End If
End Function

'2017/09/16 Added
'|fffd||fffd||fffd||435||fffd||fffd||5b9||fffd||fffd||fffd||fffd||3fc||fffd| ,hks_share_shortshares
Function hks_share_shortshares(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_shortshares = WindFunc("hks_share_shortshares", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_shortshares) <> vbString Then
      hks_share_shortshares = hks_share_shortshares / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||435||fffd||fffd||5bd||fffd||fffd||3fc||fffd| ,hks_share_shortamount
Function hks_share_shortamount(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_share_shortamount = WindFunc("hks_share_shortamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_share_shortamount) <> vbString Then
      hks_share_shortamount = hks_share_shortamount / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5| ,f_prt_corporatebonds
Function f_prt_corporatebonds(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_corporatebonds = WindFunc("f_prt_corporatebonds", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_corporatebonds) <> vbString Then
      f_prt_corporatebonds = f_prt_corporatebonds / UnitVal_
    End If
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_corporatebondstonav
Function f_prt_corporatebondstonav(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_corporatebondstonav = WindFunc("f_prt_corporatebondstonav", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||56e||22f||376||fffd||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_corporatebondstobond
Function f_prt_corporatebondstobond(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_corporatebondstobond = WindFunc("f_prt_corporatebondstobond", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_corporatebondstoasset
Function f_prt_corporatebondstoasset(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_corporatebondstoasset = WindFunc("f_prt_corporatebondstoasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd| ,f_prt_corporatebondsgrowth
Function f_prt_corporatebondsgrowth(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_corporatebondsgrowth = WindFunc("f_prt_corporatebondsgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4b5||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_prt_corporatebondstonavgrowth
Function f_prt_corporatebondstonavgrowth(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_corporatebondstonavgrowth = WindFunc("f_prt_corporatebondstonavgrowth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||776||fffd||fffd||5ea||fffd||fffd||2bd| ,f_mmf_carryover
Function f_mmf_carryover(WINDCODE_ As Variant) As Variant
    f_mmf_carryover = WindFunc("f_mmf_carryover", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||776||fffd||fffd||5ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_mmf_carryoverdate
Function f_mmf_carryoverdate(WINDCODE_ As Variant) As Variant
    f_mmf_carryoverdate = WindFunc("f_mmf_carryoverdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||574||fffd||fffd||fffd||ae7a||fffd||7b6||fffd| ,f_pchredm_largepchmaxamt
Function f_pchredm_largepchmaxamt(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_pchredm_largepchmaxamt = WindFunc("f_pchredm_largepchmaxamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
    If VarType(f_pchredm_largepchmaxamt) <> vbString Then
      f_pchredm_largepchmaxamt = f_pchredm_largepchmaxamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|AMAC|fffd||fffd||4b5||5b8||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_indexcode_AMAC
Function s_info_indexcode_AMAC(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_indexcode_AMAC = WindFunc("s_info_indexcode_AMAC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|PE(TTM) ,s_val_pettm_high
Function s_val_pettm_high(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_val_pettm_high = WindFunc("s_val_pettm_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|PE(TTM) ,s_val_pettm_low
Function s_val_pettm_low(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_val_pettm_low = WindFunc("s_val_pettm_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd|(|fffd||fffd|)|fffd||fffd||368||fffd||5b9||fffd||fffd||fffd||fffd||fffd| ,s_share_N
Function s_share_N(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_N = WindFunc("s_share_N", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_N) <> vbString Then
      s_share_N = s_share_N / UnitVal_
    End If
End Function

'|fffd||fffd|(|fffd||fffd|)|fffd||fffd||368||fffd||5b9||fffd||57c||fffd||fffd| ,s_share_pct_N
Function s_share_pct_N(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_pct_N = WindFunc("s_share_pct_N", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||438||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_ipo_tutoring_enddate
Function s_ipo_tutoring_enddate(WINDCODE_ As Variant) As Variant
    s_ipo_tutoring_enddate = WindFunc("s_ipo_tutoring_enddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||438||fffd||fffd||fffd||22f||fffd||fffd| ,s_ipo_tutor
Function s_ipo_tutor(WINDCODE_ As Variant) As Variant
    s_ipo_tutor = WindFunc("s_ipo_tutor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||438||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd| ,s_ipo_tutoring_startdate
Function s_ipo_tutoring_startdate(WINDCODE_ As Variant) As Variant
    s_ipo_tutoring_startdate = WindFunc("s_ipo_tutoring_startdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|ff||fffd||27e||fffd||fffd||2b2||fffd| ,s_performanceexpress_bps
Function s_performanceexpress_bps(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_bps = WindFunc("s_performanceexpress_bps", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|4ea||4b5||fffd||fffd||fffd||fffd| ,s_performanceexpress_or_yoy
Function s_performanceexpress_or_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_or_yoy = WindFunc("s_performanceexpress_or_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|4ea||4b5||fffd||fffd||fffd||fffd| ,s_performanceexpress_op_yoy
Function s_performanceexpress_op_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_op_yoy = WindFunc("s_performanceexpress_op_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||736||fffd| ,s_performanceexpress_ebt_yoy
Function s_performanceexpress_ebt_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_ebt_yoy = WindFunc("s_performanceexpress_ebt_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd| ,s_performanceexpress_np_yoy
Function s_performanceexpress_np_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_np_yoy = WindFunc("s_performanceexpress_np_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| ,s_performanceexpress_eps_yoy
Function s_performanceexpress_eps_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_eps_yoy = WindFunc("s_performanceexpress_eps_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|36c||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_performanceexpress_roe_yoy
Function s_performanceexpress_roe_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_roe_yoy = WindFunc("s_performanceexpress_roe_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||2b2||fffd| ,s_performanceexpress_totassets_growth
Function s_performanceexpress_totassets_growth(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_totassets_growth = WindFunc("s_performanceexpress_totassets_growth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||139||276||fffd||228||fffd||fffd| ,s_performanceexpress_eqy_growth
Function s_performanceexpress_eqy_growth(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_eqy_growth = WindFunc("s_performanceexpress_eqy_growth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||138||fffd||fffd||2fe||fffd||276||fffd||fffd||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd| ,s_performanceexpress_bps_growth
Function s_performanceexpress_bps_growth(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_bps_growth = WindFunc("s_performanceexpress_bps_growth", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|225||fffd||fffd||36c||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd| ,s_performanceexpress_income_ya
Function s_performanceexpress_income_ya(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_performanceexpress_income_ya = WindFunc("s_performanceexpress_income_ya", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_performanceexpress_income_ya) <> vbString Then
      s_performanceexpress_income_ya = s_performanceexpress_income_ya / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|225||fffd||fffd||36c||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd| ,s_performanceexpress_profit_ya
Function s_performanceexpress_profit_ya(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_performanceexpress_profit_ya = WindFunc("s_performanceexpress_profit_ya", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_performanceexpress_profit_ya) <> vbString Then
      s_performanceexpress_profit_ya = s_performanceexpress_profit_ya / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|225||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd| ,s_performanceexpress_totprofit_ya
Function s_performanceexpress_totprofit_ya(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_performanceexpress_totprofit_ya = WindFunc("s_performanceexpress_totprofit_ya", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_performanceexpress_totprofit_ya) <> vbString Then
      s_performanceexpress_totprofit_ya = s_performanceexpress_totprofit_ya / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|225||fffd||fffd||36c||fffd||6be||fffd||fffd||fffd||fffd||fffd| ,s_performanceexpress_netprofit_ya
Function s_performanceexpress_netprofit_ya(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_performanceexpress_netprofit_ya = WindFunc("s_performanceexpress_netprofit_ya", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_performanceexpress_netprofit_ya) <> vbString Then
      s_performanceexpress_netprofit_ya = s_performanceexpress_netprofit_ya / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|225||fffd||fffd||36c||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| ,s_performanceexpress_eps_ya
Function s_performanceexpress_eps_ya(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_eps_ya = WindFunc("s_performanceexpress_eps_ya", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||6b3||fffd||fffd||fffd||fffd||2b2||fffd| ,s_performanceexpress_netassets_b
Function s_performanceexpress_netassets_b(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_performanceexpress_netassets_b = WindFunc("s_performanceexpress_netassets_b", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_performanceexpress_netassets_b) <> vbString Then
      s_performanceexpress_netassets_b = s_performanceexpress_netassets_b / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||fffd||cc68|.|fffd||6b3||fffd||ff||fffd||27e||fffd||fffd||2b2||fffd| ,s_performanceexpress_bps_b
Function s_performanceexpress_bps_b(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_bps_b = WindFunc("s_performanceexpress_bps_b", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4bb||fffd||fffd||3e2||fffd||fffd| ,b_anal_precupn
Function b_anal_precupn(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
    b_anal_precupn = WindFunc("b_anal_precupn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||43b||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_fundhold_names
Function b_fundhold_names(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    b_fundhold_names = WindFunc("b_fundhold_names", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5| ,b_fundhold_value
Function b_fundhold_value(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    b_fundhold_value = WindFunc("b_fundhold_value", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_fundhold_ratio
Function b_fundhold_ratio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    b_fundhold_ratio = WindFunc("b_fundhold_ratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(REPORTDATE_))
End Function

'2017/11/7 Added
'|5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,hks_info_codechangedate
Function hks_info_codechangedate(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_info_codechangedate = WindFunc("hks_info_codechangedate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_))
End Function

'|5a4||22f||fffd||fffd||fffd||fffd|Wind|fffd||fffd||fffd||fffd| ,hks_info_precode
Function hks_info_precode(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_info_precode = WindFunc("hks_info_precode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_compprename
Function s_info_compprename(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_compprename = WindFunc("s_info_compprename", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2017/11/29 Added
'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|)|fffd||fffd||fffd||fffd| ,b_issuer_banktype
Function b_issuer_banktype(WINDCODE_ As Variant) As Variant
    b_issuer_banktype = WindFunc("b_issuer_banktype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||3f8||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_qualified_investor
Function b_qualified_investor(WINDCODE_ As Variant) As Variant
    b_qualified_investor = WindFunc("b_qualified_investor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_rate_beginguarantor
Function b_rate_beginguarantor(WINDCODE_ As Variant) As Variant
    b_rate_beginguarantor = WindFunc("b_rate_beginguarantor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_24
Function s_stm07_bs_24(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_24 = WindFunc("s_stm07_bs_24", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_45
Function s_stm07_bs_45(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_45 = WindFunc("s_stm07_bs_45", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_73
Function s_stm07_bs_73(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_73 = WindFunc("s_stm07_bs_73", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_92
Function s_stm07_bs_92(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_92 = WindFunc("s_stm07_bs_92", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_102
Function s_stm07_bs_102(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_102 = WindFunc("s_stm07_bs_102", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_127
Function s_stm07_bs_127(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_127 = WindFunc("s_stm07_bs_127", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||276||fffd||228||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_139
Function s_stm07_bs_139(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_139 = WindFunc("s_stm07_bs_139", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||276||fffd||228||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_144
Function s_stm07_bs_144(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_bs_144 = WindFunc("s_stm07_bs_144", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_47
Function s_stm07_is_47(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_is_47 = WindFunc("s_stm07_is_47", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_54
Function s_stm07_is_54(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_is_54 = WindFunc("s_stm07_is_54", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_59
Function s_stm07_is_59(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_is_59 = WindFunc("s_stm07_is_59", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_24
Function s_stm07_cs_24(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_24 = WindFunc("s_stm07_cs_24", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_36
Function s_stm07_cs_36(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_36 = WindFunc("s_stm07_cs_36", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_47
Function s_stm07_cs_47(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_47 = WindFunc("s_stm07_cs_47", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_56
Function s_stm07_cs_56(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_56 = WindFunc("s_stm07_cs_56", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_67
Function s_stm07_cs_67(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_67 = WindFunc("s_stm07_cs_67", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_74
Function s_stm07_cs_74(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_74 = WindFunc("s_stm07_cs_74", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||4f6||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_81
Function s_stm07_cs_81(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_81 = WindFunc("s_stm07_cs_81", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||4f7||fffd|-|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_104
Function s_stm07_cs_104(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_104 = WindFunc("s_stm07_cs_104", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||4f7||fffd|-|fffd||5bd||fffd||fffd||fffd||fffd||4f6||fffd||fffd||fffd||2f5||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_115
Function s_stm07_cs_115(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stm07_cs_115 = WindFunc("s_stm07_cs_115", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||6fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_ipo_inqresultdate
Function s_ipo_inqresultdate(WINDCODE_ As Variant) As Variant
    s_ipo_inqresultdate = WindFunc("s_ipo_inqresultdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_ipo_preplacingdate
Function s_ipo_preplacingdate(WINDCODE_ As Variant) As Variant
    s_ipo_preplacingdate = WindFunc("s_ipo_preplacingdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||6f9||277||fffd|(|fffd||7f9||733||5b9||fffd|) ,s_share_restricted_m
Function s_share_restricted_m(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_restricted_m = WindFunc("s_share_restricted_m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_restricted_m) <> vbString Then
      s_share_restricted_m = s_share_restricted_m / UnitVal_
    End If
End Function

'|138||fffd||fffd||2fe||531||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_employee_pc
Function s_info_employee_pc(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_employee_pc = WindFunc("s_info_employee_pc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0|:|fffd||439||fffd||fffd||fffd||bd| ,s_stmnote_incometax_1
Function s_stmnote_incometax_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_incometax_1 = WindFunc("s_stmnote_incometax_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_incometax_1) <> vbString Then
      s_stmnote_incometax_1 = s_stmnote_incometax_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0|:|fffd||439||fffd||fffd||fffd||fffd| ,s_stmnote_incometax_2
Function s_stmnote_incometax_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_incometax_2 = WindFunc("s_stmnote_incometax_2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_incometax_2) <> vbString Then
      s_stmnote_incometax_2 = s_stmnote_incometax_2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_incometax_3
Function s_stmnote_incometax_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_incometax_3 = WindFunc("s_stmnote_incometax_3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_incometax_3) <> vbString Then
      s_stmnote_incometax_3 = s_stmnote_incometax_3 / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0||fffd||fffd||fffd||fffd| ,s_stmnote_incometax_4
Function s_stmnote_incometax_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_incometax_4 = WindFunc("s_stmnote_incometax_4", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_incometax_4) <> vbString Then
      s_stmnote_incometax_4 = s_stmnote_incometax_4 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f0| ,s_stmnote_incometax_5
Function s_stmnote_incometax_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_incometax_5 = WindFunc("s_stmnote_incometax_5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_incometax_5) <> vbString Then
      s_stmnote_incometax_5 = s_stmnote_incometax_5 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0||fffd||fffd||fffd||fa||3fc||fffd| ,s_stmnote_incometax_6
Function s_stmnote_incometax_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_incometax_6 = WindFunc("s_stmnote_incometax_6", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_incometax_6) <> vbString Then
      s_stmnote_incometax_6 = s_stmnote_incometax_6 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||1b1||fffd||fffd||47a||2bd||fffd||639||fffd| ,s_stmnote_SPUAR_10001
Function s_stmnote_SPUAR_10001(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_10001 = WindFunc("s_stmnote_SPUAR_10001", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_10001) <> vbString Then
      s_stmnote_SPUAR_10001 = s_stmnote_SPUAR_10001 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|53c||fffd||fffd||fffd||fffd||fffd||fffd||2bd||5a4||22f| ,s_stmnote_SPUAR_10002
Function s_stmnote_SPUAR_10002(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_10002 = WindFunc("s_stmnote_SPUAR_10002", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_10002) <> vbString Then
      s_stmnote_SPUAR_10002 = s_stmnote_SPUAR_10002 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|56e||22f||fffd||fffd||fffd||2bd||fffd||639||fffd| ,s_stmnote_SPUAR_10003
Function s_stmnote_SPUAR_10003(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_10003 = WindFunc("s_stmnote_SPUAR_10003", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_10003) <> vbString Then
      s_stmnote_SPUAR_10003 = s_stmnote_SPUAR_10003 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|56e||22f||fffd||fffd||47a||2bd||fffd||639||fffd| ,s_stmnote_SPUAR_10004
Function s_stmnote_SPUAR_10004(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_10004 = WindFunc("s_stmnote_SPUAR_10004", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_10004) <> vbString Then
      s_stmnote_SPUAR_10004 = s_stmnote_SPUAR_10004 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|fffd||fffd||fffd||fffd| ,s_stmnote_SPUAR_10005
Function s_stmnote_SPUAR_10005(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_10005 = WindFunc("s_stmnote_SPUAR_10005", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_10005) <> vbString Then
      s_stmnote_SPUAR_10005 = s_stmnote_SPUAR_10005 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||3fc||fffd| ,s_stmnote_SPUAR_10006
Function s_stmnote_SPUAR_10006(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_10006 = WindFunc("s_stmnote_SPUAR_10006", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_10006) <> vbString Then
      s_stmnote_SPUAR_10006 = s_stmnote_SPUAR_10006 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|:|56e||22f||fffd||639||fffd| ,s_stmnote_SPUAR_10007
Function s_stmnote_SPUAR_10007(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_SPUAR_10007 = WindFunc("s_stmnote_SPUAR_10007", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_SPUAR_10007) <> vbString Then
      s_stmnote_SPUAR_10007 = s_stmnote_SPUAR_10007 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||437||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd| ,s_stmnote_cash_deposits_1
Function s_stmnote_cash_deposits_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_cash_deposits_1 = WindFunc("s_stmnote_cash_deposits_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_cash_deposits_1) <> vbString Then
      s_stmnote_cash_deposits_1 = s_stmnote_cash_deposits_1 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||433||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd||fffd||fffd| ,s_stmnote_cash_deposits_2
Function s_stmnote_cash_deposits_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_cash_deposits_2 = WindFunc("s_stmnote_cash_deposits_2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_cash_deposits_2) <> vbString Then
      s_stmnote_cash_deposits_2 = s_stmnote_cash_deposits_2 / UnitVal_
    End If
End Function

'|5ea||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||2bd||fffd| ,s_stmnote_loans_1
Function s_stmnote_loans_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_loans_1 = WindFunc("s_stmnote_loans_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_loans_1) <> vbString Then
      s_stmnote_loans_1 = s_stmnote_loans_1 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||5a4||22f||fffd||3fc||fffd| ,s_stmnote_securitieslending_1
Function s_stmnote_securitieslending_1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_securitieslending_1 = WindFunc("s_stmnote_securitieslending_1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_securitieslending_1) <> vbString Then
      s_stmnote_securitieslending_1 = s_stmnote_securitieslending_1 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||5a4||22f|:|fffd||fffd||fffd||fffd||fffd||53d||fffd||fffd||fffd||fffd||2b2||fffd| ,s_stmnote_securitieslending_2
Function s_stmnote_securitieslending_2(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_securitieslending_2 = WindFunc("s_stmnote_securitieslending_2", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_securitieslending_2) <> vbString Then
      s_stmnote_securitieslending_2 = s_stmnote_securitieslending_2 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||5a4||22f|:|fffd||279||fffd||fffd||fffd||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd| ,s_stmnote_securitieslending_3
Function s_stmnote_securitieslending_3(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_securitieslending_3 = WindFunc("s_stmnote_securitieslending_3", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_securitieslending_3) <> vbString Then
      s_stmnote_securitieslending_3 = s_stmnote_securitieslending_3 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||5a4||22f|:|5ea||fffd||fffd||368||fffd||fffd||fffd||fffd||5a4||22f| ,s_stmnote_securitieslending_4
Function s_stmnote_securitieslending_4(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_securitieslending_4 = WindFunc("s_stmnote_securitieslending_4", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_securitieslending_4) <> vbString Then
      s_stmnote_securitieslending_4 = s_stmnote_securitieslending_4 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||5a4||22f|:|5ea||fffd||fffd||368||fffd||fffd||fffd||fffd||5a4||22f||fffd||fffd||fffd| ,s_stmnote_securitieslending_5
Function s_stmnote_securitieslending_5(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_securitieslending_5 = WindFunc("s_stmnote_securitieslending_5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_securitieslending_5) <> vbString Then
      s_stmnote_securitieslending_5 = s_stmnote_securitieslending_5 / UnitVal_
    End If
End Function

'|fffd||6b3||fffd||5a4||22f|:|fffd||fffd||5b5||5fc||fffd||fffd| ,s_stmnote_securitieslending_6
Function s_stmnote_securitieslending_6(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_securitieslending_6 = WindFunc("s_stmnote_securitieslending_6", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_securitieslending_6) <> vbString Then
      s_stmnote_securitieslending_6 = s_stmnote_securitieslending_6 / UnitVal_
    End If
End Function

'|fffd||fffd||221||4bb||fffd||fffd||fffd||fffd||fffd||5fc||fffd||fffd| ,s_stmnote_profitapr_10
Function s_stmnote_profitapr_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_profitapr_10 = WindFunc("s_stmnote_profitapr_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_profitapr_10) <> vbString Then
      s_stmnote_profitapr_10 = s_stmnote_profitapr_10 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd|(TTM) ,s_fa_turnover_ttm
Function s_fa_turnover_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_turnover_ttm = WindFunc("s_fa_turnover_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd|(|fffd||fffd||5b8||fffd||6bb||fffd|) ,i_anal_basis
Function i_anal_basis(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_basis = WindFunc("i_anal_basis", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd|(|fffd||278||fffd||228|) ,s_pq_avgprice2
Function s_pq_avgprice2(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, AdjustType_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_pq_avgprice2 = WindFunc("s_pq_avgprice2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_), AdjustType_)
    If VarType(s_pq_avgprice2) <> vbString Then
      s_pq_avgprice2 = s_pq_avgprice2 / UnitVal_
    End If
End Function

'N|fffd||573||27d||fffd||fffd||fffd||fffd||fffd| ,s_nq_avgprice
Function s_nq_avgprice(WINDCODE_ As Variant, Optional N_ As Integer = -5, Optional TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_nq_avgprice = WindFunc("s_nq_avgprice", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), N_, GetValidDate(TRADEDATE_), AdjustType_)
    If VarType(s_nq_avgprice) <> vbString Then
      s_nq_avgprice = s_nq_avgprice / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_45
Function s_stm07_is_45(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_45 = WindFunc("s_stm07_is_45", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_45) <> vbString Then
      s_stm07_is_45 = s_stm07_is_45 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_57
Function s_stm07_is_57(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_57 = WindFunc("s_stm07_is_57", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_57) <> vbString Then
      s_stm07_is_57 = s_stm07_is_57 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_52
Function s_stm07_is_52(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_52 = WindFunc("s_stm07_is_52", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_52) <> vbString Then
      s_stm07_is_52 = s_stm07_is_52 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_71
Function s_stm07_bs_71(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_71 = WindFunc("s_stm07_bs_71", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_71) <> vbString Then
      s_stm07_bs_71 = s_stm07_bs_71 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_22
Function s_stm07_bs_22(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_22 = WindFunc("s_stm07_bs_22", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_22) <> vbString Then
      s_stm07_bs_22 = s_stm07_bs_22 / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||276||fffd||228||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_142
Function s_stm07_bs_142(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_142 = WindFunc("s_stm07_bs_142", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_142) <> vbString Then
      s_stm07_bs_142 = s_stm07_bs_142 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_90
Function s_stm07_bs_90(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_90 = WindFunc("s_stm07_bs_90", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_90) <> vbString Then
      s_stm07_bs_90 = s_stm07_bs_90 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_43
Function s_stm07_bs_43(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_43 = WindFunc("s_stm07_bs_43", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_43) <> vbString Then
      s_stm07_bs_43 = s_stm07_bs_43 / UnitVal_
    End If
End Function

'|fffd||276||fffd||228||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_137
Function s_stm07_bs_137(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_137 = WindFunc("s_stm07_bs_137", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_137) <> vbString Then
      s_stm07_bs_137 = s_stm07_bs_137 / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_125
Function s_stm07_bs_125(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_125 = WindFunc("s_stm07_bs_125", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_125) <> vbString Then
      s_stm07_bs_125 = s_stm07_bs_125 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_100
Function s_stm07_bs_100(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_100 = WindFunc("s_stm07_bs_100", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_100) <> vbString Then
      s_stm07_bs_100 = s_stm07_bs_100 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_22
Function s_stm07_cs_22(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_22 = WindFunc("s_stm07_cs_22", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_22) <> vbString Then
      s_stm07_cs_22 = s_stm07_cs_22 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_34
Function s_stm07_cs_34(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_34 = WindFunc("s_stm07_cs_34", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_34) <> vbString Then
      s_stm07_cs_34 = s_stm07_cs_34 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_54
Function s_stm07_cs_54(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_54 = WindFunc("s_stm07_cs_54", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_54) <> vbString Then
      s_stm07_cs_54 = s_stm07_cs_54 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_45
Function s_stm07_cs_45(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_45 = WindFunc("s_stm07_cs_45", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_45) <> vbString Then
      s_stm07_cs_45 = s_stm07_cs_45 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_65
Function s_stm07_cs_65(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_65 = WindFunc("s_stm07_cs_65", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_65) <> vbString Then
      s_stm07_cs_65 = s_stm07_cs_65 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_72
Function s_stm07_cs_72(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_72 = WindFunc("s_stm07_cs_72", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_72) <> vbString Then
      s_stm07_cs_72 = s_stm07_cs_72 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||4f6||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_79
Function s_stm07_cs_79(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_79 = WindFunc("s_stm07_cs_79", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_79) <> vbString Then
      s_stm07_cs_79 = s_stm07_cs_79 / UnitVal_
    End If
End Function

'|fffd||fffd||4f7||fffd|-|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_102
Function s_stm07_cs_102(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_102 = WindFunc("s_stm07_cs_102", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_102) <> vbString Then
      s_stm07_cs_102 = s_stm07_cs_102 / UnitVal_
    End If
End Function

'|fffd||fffd||4f7||fffd|-|fffd||5bd||fffd||fffd||fffd||fffd||4f6||fffd||fffd||fffd|(|fffd||fffd||fffd||2c68||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_113
Function s_stm07_cs_113(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_113 = WindFunc("s_stm07_cs_113", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_113) <> vbString Then
      s_stm07_cs_113 = s_stm07_cs_113 / UnitVal_
    End If
End Function

'2017/12/4 Added
'|fffd||fffd||fffd||fffd||fffd||276||fffd||fffd||fffd||fffd||fffd| ,s_holder_category
Function s_holder_category(WINDCODE_ As Variant, REPORTDATE_ As Variant, Sequence_ As Byte) As Variant
    s_holder_category = WindFunc("s_holder_category", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Sequence_)
End Function

'|fffd||fffd||fffd||fffd||fffd||6ba||fffd||fffd||fffd||5b5| ,s_stmnote_insur_30n
Function s_stmnote_insur_30n(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_insur_30n = WindFunc("s_stmnote_insur_30n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_insur_30n) <> vbString Then
      s_stmnote_insur_30n = s_stmnote_insur_30n / UnitVal_
    End If
End Function

'|fffd||b9||27f||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,s_ipo_limitupopendate_pctchange
Function s_ipo_limitupopendate_pctchange(WINDCODE_ As Variant) As Variant
    s_ipo_limitupopendate_pctchange = WindFunc("s_ipo_limitupopendate_pctchange", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_administrativedivision
Function s_info_administrativedivision(WINDCODE_ As Variant, LEVEL_ As Byte, TRADEDATE_ As Variant) As Variant
    s_info_administrativedivision = WindFunc("s_info_administrativedivision", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), LEVEL_, GetValidDate(TRADEDATE_))
End Function

'2017/12/7 Added
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||13c||fffd||fffd||fffd||2bd||fffd||3fc||fffd| ,s_rightsissue_collection_t
Function s_rightsissue_collection_t(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_rightsissue_collection_t = WindFunc("s_rightsissue_collection_t", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
    If VarType(s_rightsissue_collection_t) <> vbString Then
      s_rightsissue_collection_t = s_rightsissue_collection_t / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|fffd||6f9||fffd|) ,hks_info_industry_sw
Function hks_info_industry_sw(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    hks_info_industry_sw = WindFunc("hks_info_industry_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|fffd||6f9||fffd|) ,hks_info_industry_swcode
Function hks_info_industry_swcode(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    hks_info_industry_swcode = WindFunc("hks_info_industry_swcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'2018/1/10 Added
'|fffd||5b2||fffd||fffd||fffd|(|fffd||fffd||1b7||5b8||fffd||fffd|) ,i_dq_oi
Function i_dq_oi(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_dq_oi = WindFunc("i_dq_oi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd| ,s_segment_industry_sales1
Function s_segment_industry_sales1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_industry_sales1 = WindFunc("s_segment_industry_sales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_industry_sales1) <> vbString Then
      s_segment_industry_sales1 = s_segment_industry_sales1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||fffd||271||fffd| ,s_segment_industry_cost1
Function s_segment_industry_cost1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_industry_cost1 = WindFunc("s_segment_industry_cost1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_industry_cost1) <> vbString Then
      s_segment_industry_cost1 = s_segment_industry_cost1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||eb||fffd||fffd| ,s_segment_industry_profit1
Function s_segment_industry_profit1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_industry_profit1 = WindFunc("s_segment_industry_profit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_industry_profit1) <> vbString Then
      s_segment_industry_profit1 = s_segment_industry_profit1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd| ,s_segment_product_sales1
Function s_segment_product_sales1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_product_sales1 = WindFunc("s_segment_product_sales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_product_sales1) <> vbString Then
      s_segment_product_sales1 = s_segment_product_sales1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||fffd||271||fffd| ,s_segment_product_cost1
Function s_segment_product_cost1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_product_cost1 = WindFunc("s_segment_product_cost1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_product_cost1) <> vbString Then
      s_segment_product_cost1 = s_segment_product_cost1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||eb||fffd||fffd| ,s_segment_product_profit1
Function s_segment_product_profit1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_product_profit1 = WindFunc("s_segment_product_profit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_product_profit1) <> vbString Then
      s_segment_product_profit1 = s_segment_product_profit1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||fffd||fffd||fffd||fffd| ,s_segment_region_sales1
Function s_segment_region_sales1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_region_sales1 = WindFunc("s_segment_region_sales1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_region_sales1) <> vbString Then
      s_segment_region_sales1 = s_segment_region_sales1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||fffd||271||fffd| ,s_segment_region_cost1
Function s_segment_region_cost1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_region_cost1 = WindFunc("s_segment_region_cost1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_region_cost1) <> vbString Then
      s_segment_region_cost1 = s_segment_region_cost1 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||eb||fffd||fffd| ,s_segment_region_profit1
Function s_segment_region_profit1(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    s_segment_region_profit1 = WindFunc("s_segment_region_profit1", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_, GetValidCurType(CURTYPE_))
    If VarType(s_segment_region_profit1) <> vbString Then
      s_segment_region_profit1 = s_segment_region_profit1 / UnitVal_
    End If
End Function

'2018/2/1 Added
'|fffd||27d||fffd||fffd||fffd||fffd||3f9||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd| ,w_anal_volumeratio
Function w_anal_volumeratio(WINDCODE_ As Variant, SettlementMonth_ As String, TRADEDATE_ As Variant) As Variant
    w_anal_volumeratio = WindFunc("w_anal_volumeratio", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), SettlementMonth_, GetValidDate(TRADEDATE_))
End Function

'|fffd||5b2||fffd||fffd||fffd||fffd||3f9||fffd||fffd||3f9||fffd||fffd||fffd||fffd||fffd| ,w_anal_oiratio
Function w_anal_oiratio(WINDCODE_ As Variant, SettlementMonth_ As String, TRADEDATE_ As Variant) As Variant
    w_anal_oiratio = WindFunc("w_anal_oiratio", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), SettlementMonth_, GetValidDate(TRADEDATE_))
End Function

'2018/2/24 Added
'|fffd||fffd||fffd||fffd||fffd||fffd||575||23c||fffd| ,f_info_risklevel
Function f_info_risklevel(WINDCODE_ As Variant) As Variant
    f_info_risklevel = WindFunc("f_info_risklevel", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||fffd||fffd||739||fffd||123| ,f_info_manager_totalnetasset
Function f_info_manager_totalnetasset(WINDCODE_ As Variant, TopN As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_info_manager_totalnetasset = WindFunc("f_info_manager_totalnetasset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
    If VarType(f_info_manager_totalnetasset) <> vbString Then
      f_info_manager_totalnetasset = f_info_manager_totalnetasset / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||1b5||fffd||fffd| ,f_nav_updatefrequency
Function f_nav_updatefrequency(WINDCODE_ As Variant) As Variant
    f_nav_updatefrequency = WindFunc("f_nav_updatefrequency", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_sar
Function s_info_sar(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_sar = WindFunc("s_info_sar", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|5a4||22f||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|) ,s_info_name1
Function s_info_name1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_name1 = WindFunc("s_info_name1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||631||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_st
Function s_info_st(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_st = WindFunc("s_info_st", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stm07_is_98
Function s_stm07_is_98(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_98 = WindFunc("s_stm07_is_98", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_98) <> vbString Then
      s_stm07_is_98 = s_stm07_is_98 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stm07_is_99
Function s_stm07_is_99(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_99 = WindFunc("s_stm07_is_99", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_99) <> vbString Then
      s_stm07_is_99 = s_stm07_is_99 / UnitVal_
    End If
End Function

'|fffd||fffd||5b9||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stm07_is_100
Function s_stm07_is_100(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_100 = WindFunc("s_stm07_is_100", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_100) <> vbString Then
      s_stm07_is_100 = s_stm07_is_100 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bb||fffd||fffd||fffd||fffd||fffd| ,s_info_discloser1
Function s_info_discloser1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_discloser1 = WindFunc("s_info_discloser1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||f7||fffd||fffd||57c||fffd||228||fffd||2b2||fffd|(2013) ,s_stmnote_bank_RweightedAssets_cr
Function s_stmnote_bank_RweightedAssets_cr(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_RweightedAssets_cr = WindFunc("s_stmnote_bank_RweightedAssets_cr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_RweightedAssets_cr) <> vbString Then
      s_stmnote_bank_RweightedAssets_cr = s_stmnote_bank_RweightedAssets_cr / UnitVal_
    End If
End Function

'|fffd||433||fffd||fffd||fffd||fffd||57c||fffd||228||fffd||2b2||fffd|(2013) ,s_stmnote_bank_RweightedAssets_mr
Function s_stmnote_bank_RweightedAssets_mr(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_RweightedAssets_mr = WindFunc("s_stmnote_bank_RweightedAssets_mr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_RweightedAssets_mr) <> vbString Then
      s_stmnote_bank_RweightedAssets_mr = s_stmnote_bank_RweightedAssets_mr / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||228||fffd||2b2||fffd|(2013) ,s_stmnote_bank_RweightedAssets_or
Function s_stmnote_bank_RweightedAssets_or(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_RweightedAssets_or = WindFunc("s_stmnote_bank_RweightedAssets_or", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_bank_RweightedAssets_or) <> vbString Then
      s_stmnote_bank_RweightedAssets_or = s_stmnote_bank_RweightedAssets_or / UnitVal_
    End If
End Function

'|fffd||fffd||32f||fffd||fffd||271||fffd||fffd||fffd||fffd||fffd||fffd||13d||fffd||fffd||fffd||fffd||2b2||fffd| ,s_stm07_bs_170
Function s_stm07_bs_170(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_170 = WindFunc("s_stm07_bs_170", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_170) <> vbString Then
      s_stm07_bs_170 = s_stm07_bs_170 / UnitVal_
    End If
End Function

'|fffd||539||fffd||fffd||2bc||fffd||5b5||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||13d||fffd||fffd||fffd||fffd||2b2||fffd| ,s_stm07_bs_171
Function s_stm07_bs_171(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_171 = WindFunc("s_stm07_bs_171", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_171) <> vbString Then
      s_stm07_bs_171 = s_stm07_bs_171 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f1||fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd| ,s_ipo_applicationdeadline
Function s_ipo_applicationdeadline(WINDCODE_ As Variant) As Variant
    s_ipo_applicationdeadline = WindFunc("s_ipo_applicationdeadline", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f1||fffd||fffd||fffd||fffd||fffd||5b9||2b1||fffd||fffd| ,s_ipo_applicationdeadline_time
Function s_ipo_applicationdeadline_time(WINDCODE_ As Variant) As Variant
    s_ipo_applicationdeadline_time = WindFunc("s_ipo_applicationdeadline_time", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'AH|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_dq_premiumrate_ah
Function s_dq_premiumrate_ah(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_premiumrate_ah = WindFunc("s_dq_premiumrate_ah", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2018/3/1 Added
'|fffd||2b2||fffd||fffd||1f7||fffd||fffd||fffd||fffd| ,b_info_isassetout
Function b_info_isassetout(WINDCODE_ As Variant) As Variant
    b_info_isassetout = WindFunc("b_info_isassetout", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'2018/3/28 Added
'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(GICS) ,f_prt_topgicsindustryname
Function f_prt_topgicsindustryname(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte) As Variant
    f_prt_topgicsindustryname = WindFunc("f_prt_topgicsindustryname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(GICS) ,f_prt_topgicsindustryvalue
Function f_prt_topgicsindustryvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topgicsindustryvalue = WindFunc("f_prt_topgicsindustryvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topgicsindustryvalue) <> vbString Then
      f_prt_topgicsindustryvalue = f_prt_topgicsindustryvalue / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(GICS) ,f_prt_topgicsindustryvaluetonav
Function f_prt_topgicsindustryvaluetonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte) As Variant
    f_prt_topgicsindustryvaluetonav = WindFunc("f_prt_topgicsindustryvaluetonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(GICS) ,f_prt_gicsindustryvalue
Function f_prt_gicsindustryvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_gicsindustryvalue = WindFunc("f_prt_gicsindustryvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
    If VarType(f_prt_gicsindustryvalue) <> vbString Then
      f_prt_gicsindustryvalue = f_prt_gicsindustryvalue / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd|(GICS) ,f_prt_gicsindustryvaluetonav
Function f_prt_gicsindustryvaluetonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte) As Variant
    f_prt_gicsindustryvaluetonav = WindFunc("f_prt_gicsindustryvaluetonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
End Function

'|fffd||fffd||2b7||fffd||fffd||fffd||fffd||fffd||fffd| ,s_anal_volatilityratio
Function s_anal_volatilityratio(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CalculationTime_ As Integer = 60, Optional AnnualizedCoefficient_ As Integer = 252, Optional AdjustType_ As Byte = 1) As Variant
    s_anal_volatilityratio = WindFunc("s_anal_volatilityratio", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), CalculationTime_, AnnualizedCoefficient_, AdjustType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_98
Function s_qstm07_is_98(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_98 = WindFunc("s_qstm07_is_98", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_98) <> vbString Then
      s_qstm07_is_98 = s_qstm07_is_98 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_99
Function s_qstm07_is_99(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_99 = WindFunc("s_qstm07_is_99", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_99) <> vbString Then
      s_qstm07_is_99 = s_qstm07_is_99 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||5b9||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_100
Function s_qstm07_is_100(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_100 = WindFunc("s_qstm07_is_100", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_100) <> vbString Then
      s_qstm07_is_100 = s_qstm07_is_100 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_97
Function s_qstm07_is_97(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_97 = WindFunc("s_qstm07_is_97", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_97) <> vbString Then
      s_qstm07_is_97 = s_qstm07_is_97 / UnitVal_
    End If
End Function

'2018/4/11 Added
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd| ,b_info_tranche
Function b_info_tranche(WINDCODE_ As Variant, Tranche_ As Integer) As Variant
    b_info_tranche = WindFunc("b_info_tranche", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Tranche_)
End Function

'|fffd||fffd||fffd||fffd||57c||fffd||fffd| ,b_info_trancheratio
Function b_info_trancheratio(WINDCODE_ As Variant, Tranche_ As Integer) As Variant
    b_info_trancheratio = WindFunc("b_info_trancheratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), Tranche_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd|) ,b_agency_leadunderwriterSN
Function b_agency_leadunderwriterSN(WINDCODE_ As Variant) As Variant
    b_agency_leadunderwriterSN = WindFunc("b_agency_leadunderwriterSN", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_info_lowestissurercreditrating
Function b_info_lowestissurercreditrating(WINDCODE_ As Variant) As Variant
    b_info_lowestissurercreditrating = WindFunc("b_info_lowestissurercreditrating", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||5b9||27b||fffd||fffd||fffd||fffd||fffd| ,s_holder_num_i
Function s_holder_num_i(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_holder_num_i = WindFunc("s_holder_num_i", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||5b9||27b||fffd||fffd||fffd||fffd||fffd| ,s_holder_num_fund
Function s_holder_num_fund(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_holder_num_fund = WindFunc("s_holder_num_fund", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||5b9||fffd||fffd||7c63||fffd||fffd||fffd||fffd||fffd||fffd| ,s_holder_num_ssfund
Function s_holder_num_ssfund(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_holder_num_ssfund = WindFunc("s_holder_num_ssfund", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||5b9||fffd|QFII|fffd||fffd| ,s_holder_num_qfii
Function s_holder_num_qfii(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_holder_num_qfii = WindFunc("s_holder_num_qfii", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||5b9||271||fffd||fffd||579||fffd||2fe||fffd||fffd| ,s_holder_num_insur
Function s_holder_num_insur(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_holder_num_insur = WindFunc("s_holder_num_insur", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||276||fffd||fffd||fffd||fffd||435||fffd||fffd||fffd||fffd||6f9||277||fffd||fffd||fffd| ,s_holder_quantity_restricted
Function s_holder_quantity_restricted(WINDCODE_ As Variant, DEALDATE_ As Variant, Sequence_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_holder_quantity_restricted = WindFunc("s_holder_quantity_restricted", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), Sequence_)
    If VarType(s_holder_quantity_restricted) <> vbString Then
      s_holder_quantity_restricted = s_holder_quantity_restricted / UnitVal_
    End If
End Function

'2018/5/3 Added
'|fffd||5ba||fffd||fffd||fffd||fffd||fffd| ,f_div_clause
Function f_div_clause(WINDCODE_ As Variant) As Variant
    f_div_clause = WindFunc("f_div_clause", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_themetype
Function f_info_themetype(WINDCODE_ As Variant) As Variant
    f_info_themetype = WindFunc("f_info_themetype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_risk_interestsensitivity
Function f_risk_interestsensitivity(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_risk_interestsensitivity = WindFunc("f_risk_interestsensitivity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||1f7||fffd||fffd||fffd||221||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_floatingmgntfeeornot
Function f_info_floatingmgntfeeornot(WINDCODE_ As Variant) As Variant
    f_info_floatingmgntfeeornot = WindFunc("f_info_floatingmgntfeeornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd| ,f_info_floatingmgntfeedescrip
Function f_info_floatingmgntfeedescrip(WINDCODE_ As Variant) As Variant
    f_info_floatingmgntfeedescrip = WindFunc("f_info_floatingmgntfeedescrip", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd||2b7||fffd||b8||7f4||fffd||fffd||fffd| ,s_techanal_rcnthigh_days
Function s_techanal_rcnthigh_days(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional NDays_ As Integer = 3, Optional AdjustType_ As Byte = 2) As Variant
    s_techanal_rcnthigh_days = WindFunc("s_techanal_rcnthigh_days", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), NDays_, AdjustType_)
End Function

'|fffd||fffd||fffd||6b4||fffd||fffd||fffd||2b7||fffd||b5||374||fffd||fffd||fffd| ,s_techanal_rcntlow_days
Function s_techanal_rcntlow_days(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional NDays_ As Integer = 3, Optional AdjustType_ As Byte = 2) As Variant
    s_techanal_rcntlow_days = WindFunc("s_techanal_rcntlow_days", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), NDays_, AdjustType_)
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||279||fffd||fffd||fffd|(|2f0||1f0|) ,s_div_cashpaidbeforetax1
Function s_div_cashpaidbeforetax1(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, TYPE_ As Integer, OptionParameters_ As String) As Variant
    s_div_cashpaidbeforetax1 = WindFunc("s_div_cashpaidbeforetax1", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_), TYPE_, GetValidCurType(OptionParameters_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd||fffd||736||fffd| ,s_stmnote_mgmt_ben
Function s_stmnote_mgmt_ben(WINDCODE_ As Variant, Year_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben = WindFunc("s_stmnote_mgmt_ben", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben) <> vbString Then
      s_stmnote_mgmt_ben = s_stmnote_mgmt_ben / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f0||fffd||fffd||fffd||136||fffd||fffd||fffd||43d||fffd||fffd||3fc||fffd| ,s_stmnote_mgmt_ben_top3b
Function s_stmnote_mgmt_ben_top3b(WINDCODE_ As Variant, Year_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben_top3b = WindFunc("s_stmnote_mgmt_ben_top3b", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben_top3b) <> vbString Then
      s_stmnote_mgmt_ben_top3b = s_stmnote_mgmt_ben_top3b / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1f0||fffd||fffd||fffd||138||7f9||fffd||43d||fffd||fffd||3fc||fffd| ,s_stmnote_mgmt_ben_top3m
Function s_stmnote_mgmt_ben_top3m(WINDCODE_ As Variant, Year_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben_top3m = WindFunc("s_stmnote_mgmt_ben_top3m", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben_top3m) <> vbString Then
      s_stmnote_mgmt_ben_top3m = s_stmnote_mgmt_ben_top3m / UnitVal_
    End If
End Function


'2018/5/30
'|fffd||fffd||26b||56e||22f||fffd||fffd||5a4||fffd||fffd||fffd||fffd| ,b_agency_certification
Function b_agency_certification(WINDCODE_ As Variant) As Variant
    b_agency_certification = WindFunc("b_agency_certification", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|4b5||fffd||fffd||524||fffd||fffd||4daf||52d||fffd||fffd| ,s_profitnotice_reason
Function s_profitnotice_reason(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_reason = WindFunc("s_profitnotice_reason", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||57e||fffd||fffd||fffd||fffd| ,s_pq_avgswing
Function s_pq_avgswing(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_avgswing = WindFunc("s_pq_avgswing", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_sales
Function s_west_instnum_sales(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_sales = WindFunc("s_west_instnum_sales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_op
Function s_west_instnum_op(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_op = WindFunc("s_west_instnum_op", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_np
Function s_west_instnum_np(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_np = WindFunc("s_west_instnum_np", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_ebt
Function s_west_instnum_ebt(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_ebt = WindFunc("s_west_instnum_ebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|3e2||2f0||1f0||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_ebit
Function s_west_instnum_ebit(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_ebit = WindFunc("s_west_instnum_ebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|3e2||2f0||fffd||6fe||fffd||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_ebitda
Function s_west_instnum_ebitda(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_ebitda = WindFunc("s_west_instnum_ebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_bps
Function s_west_instnum_bps(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_bps = WindFunc("s_west_instnum_bps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|ff||fffd||fffd||fffd||5bd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_cps
Function s_west_instnum_cps(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_cps = WindFunc("s_west_instnum_cps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|ff||fffd||279||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_dps
Function s_west_instnum_dps(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_dps = WindFunc("s_west_instnum_dps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_roa
Function s_west_instnum_roa(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_roa = WindFunc("s_west_instnum_roa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||524||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_west_instnum_roe
Function s_west_instnum_roe(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional DATE_ As Variant, Optional TYPE_ As Integer = 180) As Variant
    s_west_instnum_roe = WindFunc("s_west_instnum_roe", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_, GetValidDate(DATE_), TYPE_)
End Function

'|fffd||437||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd| ,s_stmnote_RDemployee
Function s_stmnote_RDemployee(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stmnote_RDemployee = WindFunc("s_stmnote_RDemployee", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||437||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd||57c||fffd||fffd| ,s_stmnote_RDemployee_pct
Function s_stmnote_RDemployee_pct(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    s_stmnote_RDemployee_pct = WindFunc("s_stmnote_RDemployee_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function



'2018/6/8
'|fffd||fffd||228||fffd||fffd||fffd||fffd|(|5b8||fffd||fffd||fffd||fffd||228||fffd||fffd|) ,w_info_tradecode
Function w_info_tradecode(WINDCODE_ As Variant, SettlementMonth_ As String, ExercisePrice_ As Double, Optional OptionType_ As String = 510471, Optional AdjustmentState_ As String = 510473) As Variant
    w_info_tradecode = WindFunc("w_info_tradecode", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "W"), SettlementMonth_, ExercisePrice_, OptionType_, AdjustmentState_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6f3||fffd||fffd||1fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||13e||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qfa_deductedprofit_yoy
Function s_qfa_deductedprofit_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qfa_deductedprofit_yoy = WindFunc("s_qfa_deductedprofit_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd|-|57c||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd| ,s_stmnote_bank_9506
Function s_stmnote_bank_9506(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9506 = WindFunc("s_stmnote_bank_9506", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||5e2|-|57c||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd| ,s_stmnote_bank_9507
Function s_stmnote_bank_9507(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9507 = WindFunc("s_stmnote_bank_9507", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||3bc||fffd|-|57c||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd| ,s_stmnote_bank_9508
Function s_stmnote_bank_9508(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9508 = WindFunc("s_stmnote_bank_9508", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd|-|57c||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd| ,s_stmnote_bank_9509
Function s_stmnote_bank_9509(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9509 = WindFunc("s_stmnote_bank_9509", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||2a7|-|57c||fffd||fffd||fffd||fffd||fffd||736||fffd||fffd| ,s_stmnote_bank_9510
Function s_stmnote_bank_9510(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_bank_9510 = WindFunc("s_stmnote_bank_9510", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||4b5|)-|fffd||fffd||13f||eb||fffd||fffd||fffd||fffd| ,s_segment_industry_gpmargin
Function s_segment_industry_gpmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte) As Variant
    s_segment_industry_gpmargin = WindFunc("s_segment_industry_gpmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||1b7|)-|fffd||fffd||13f||eb||fffd||fffd||fffd||fffd| ,s_segment_product_gpmargin
Function s_segment_product_gpmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte) As Variant
    s_segment_product_gpmargin = WindFunc("s_segment_product_gpmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_)
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|)-|fffd||fffd||13f||eb||fffd||fffd||fffd||fffd| ,s_segment_region_gpmargin
Function s_segment_region_gpmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN_ As Byte) As Variant
    s_segment_region_gpmargin = WindFunc("s_segment_region_gpmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TopN_)
End Function

'|fffd||fffd||fffd||fffd|AMAC|fffd||fffd||4b5||5b8||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_indexname_AMAC
Function s_info_indexname_AMAC(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_indexname_AMAC = WindFunc("s_info_indexname_AMAC", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||4da8||fffd||fffd||fffd||fffd||fffd||fffd| ,s_fellow_n
Function s_fellow_n(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant) As Variant
    s_fellow_n = WindFunc("s_fellow_n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd| ,s_fa_debttoeqy
Function s_fa_debttoeqy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_debttoeqy = WindFunc("s_fa_debttoeqy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'ESG|fffd||fffd||fffd||fffd| ,s_esg_rating
Function s_esg_rating(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_esg_rating = WindFunc("s_esg_rating", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2018/6/19
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|PB(LF) ,s_val_pb_high
Function s_val_pb_high(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_val_pb_high = WindFunc("s_val_pb_high", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|PB(LF) ,s_val_pb_low
Function s_val_pb_low(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_val_pb_low = WindFunc("s_val_pb_low", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'2018/6/25
'|fffd||1f7||fffd||fffd||fffd||fffd||fffd| ,s_info_list
Function s_info_list(WINDCODE_ As Variant) As Variant
    s_info_list = WindFunc("s_info_list", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||6b7||fffd||fffd||57e||fffd||2be||fffd||fffd| ,s_info_riskwarning
Function s_info_riskwarning(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_riskwarning = WindFunc("s_info_riskwarning", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||b3||fffd||43d||fffd||fffd| ,s_stmnote_mgmt_ben_bc
Function s_stmnote_mgmt_ben_bc(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben_bc = WindFunc("s_stmnote_mgmt_ben_bc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben_bc) <> vbString Then
      s_stmnote_mgmt_ben_bc = s_stmnote_mgmt_ben_bc / UnitVal_
    End If
End Function

'|fffd||73e||fffd||fffd||fffd||43d||fffd||fffd| ,s_stmnote_mgmt_ben_ceo
Function s_stmnote_mgmt_ben_ceo(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben_ceo = WindFunc("s_stmnote_mgmt_ben_ceo", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben_ceo) <> vbString Then
      s_stmnote_mgmt_ben_ceo = s_stmnote_mgmt_ben_ceo / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||73c||fffd||43d||fffd||fffd| ,s_stmnote_mgmt_ben_cfo
Function s_stmnote_mgmt_ben_cfo(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben_cfo = WindFunc("s_stmnote_mgmt_ben_cfo", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben_cfo) <> vbString Then
      s_stmnote_mgmt_ben_cfo = s_stmnote_mgmt_ben_cfo / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bb||fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd| ,s_stmnote_mgmt_ben_discloser
Function s_stmnote_mgmt_ben_discloser(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben_discloser = WindFunc("s_stmnote_mgmt_ben_discloser", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben_discloser) <> vbString Then
      s_stmnote_mgmt_ben_discloser = s_stmnote_mgmt_ben_discloser / UnitVal_
    End If
End Function

'|5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||43d||fffd||fffd| ,s_stmnote_mgmt_ben_sar
Function s_stmnote_mgmt_ben_sar(WINDCODE_ As Variant, Optional Year_ As Integer = 2017, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_mgmt_ben_sar = WindFunc("s_stmnote_mgmt_ben_sar", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_stmnote_mgmt_ben_sar) <> vbString Then
      s_stmnote_mgmt_ben_sar = s_stmnote_mgmt_ben_sar / UnitVal_
    End If
End Function

'|fffd||7b3||fffd||524||fffd||57f||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||56e||fffd||fffd| ,s_fa_deducteddebttoAssets
Function s_fa_deducteddebttoAssets(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_deducteddebttoAssets = WindFunc("s_fa_deducteddebttoAssets", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||276||fffd||fffd||6fc||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd| ,s_share_pledgeda_largestholder
Function s_share_pledgeda_largestholder(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_pledgeda_largestholder = WindFunc("s_share_pledgeda_largestholder", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_pledgeda_largestholder) <> vbString Then
      s_share_pledgeda_largestholder = s_share_pledgeda_largestholder / UnitVal_
    End If
End Function

'|fffd||fffd||276||fffd||fffd||6fc||fffd||fffd||fffd||47a||fffd||fffd||57c||fffd||5b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_share_pledgeda_pct_largestholder
Function s_share_pledgeda_pct_largestholder(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_pledgeda_pct_largestholder = WindFunc("s_share_pledgeda_pct_largestholder", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2018/7/26
'|5b8||fffd||fffd||fffd||277||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,i_tech_upnum
Function i_tech_upnum(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_tech_upnum = WindFunc("i_tech_upnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||fffd||277||fffd||fffd||b5||fffd||fffd||fffd||fffd||fffd| ,i_tech_downnum
Function i_tech_downnum(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_tech_downnum = WindFunc("i_tech_downnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||2b9||fffd||f7||fffd||fffd||fffd| ,f_info_indexusagefeeratio
Function f_info_indexusagefeeratio(WINDCODE_ As Variant) As Variant
    f_info_indexusagefeeratio = WindFunc("f_info_indexusagefeeratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_holder_namemmf
Function f_holder_namemmf(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN_ As Byte = 1) As Variant
    f_holder_namemmf = WindFunc("f_holder_namemmf", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN_)
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||437||776||fffd|(|fffd||fffd||fffd||fffd|) ,f_holder_holdingmmf
Function f_holder_holdingmmf(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_holder_holdingmmf = WindFunc("f_holder_holdingmmf", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN_)
    If VarType(f_holder_holdingmmf) <> vbString Then
      f_holder_holdingmmf = f_holder_holdingmmf / UnitVal_
    End If
End Function

'|fffd||fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||431||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_holder_pctmmf
Function f_holder_pctmmf(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN_ As Byte = 1) As Variant
    f_holder_pctmmf = WindFunc("f_holder_pctmmf", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN_)
End Function

'|1f0||2ae||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||431||fffd||fffd||fffd||fffd||3fc||fffd|(|fffd||fffd||fffd||fffd|) ,f_holder_top10_pctmmf
Function f_holder_top10_pctmmf(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_holder_top10_pctmmf = WindFunc("f_holder_top10_pctmmf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|1f0||2ae||fffd||fffd||fffd||fffd||fffd||fffd||2f3||fffd||fffd||437||776||fffd||3fc||fffd|(|fffd||fffd||fffd||fffd|) ,f_holder_top10_holdingmmf
Function f_holder_top10_holdingmmf(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_holder_top10_holdingmmf = WindFunc("f_holder_top10_holdingmmf", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_holder_top10_holdingmmf) <> vbString Then
      f_holder_top10_holdingmmf = f_holder_top10_holdingmmf / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5ea||fffd||fffd||2f5||fffd||fffd| ,f_info_fundtransition
Function f_info_fundtransition(WINDCODE_ As Variant) As Variant
    f_info_fundtransition = WindFunc("f_info_fundtransition", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|4b5||fffd||fffd||fffd||23d||3fb||fffd||5fc||fffd||fffd||fffd||2f5||fffd||fffd| ,f_info_changeofbenchmark
Function f_info_changeofbenchmark(WINDCODE_ As Variant) As Variant
    f_info_changeofbenchmark = WindFunc("f_info_changeofbenchmark", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd||fffd||fffd||2b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||228| ,hks_ipo_greenshoe
Function hks_ipo_greenshoe(WINDCODE_ As Variant) As Variant
    hks_ipo_greenshoe = WindFunc("hks_ipo_greenshoe", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"))
End Function

'|fffd||1f7||74977||fffd||fffd||632||fffd||fffd||fffd||fffd||fffd| ,hks_ipo_backmechanism
Function hks_ipo_backmechanism(WINDCODE_ As Variant) As Variant
    hks_ipo_backmechanism = WindFunc("hks_ipo_backmechanism", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"))
End Function

'|fffd||fffd||fffd||bb||fffd||fffd||fffd||fffd||fffd| ,s_employee_board
Function s_employee_board(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_board = WindFunc("s_employee_board", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|5b4||fffd||436||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_employee_executivedirector
Function s_employee_executivedirector(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_executivedirector = WindFunc("s_employee_executivedirector", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_employee_indpdirector
Function s_employee_indpdirector(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_indpdirector = WindFunc("s_employee_indpdirector", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||fffd||fffd||fffd||56e| ,hks_fa_exinterestdebt_current
Function hks_fa_exinterestdebt_current(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_fa_exinterestdebt_current = WindFunc("hks_fa_exinterestdebt_current", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_))
    If VarType(hks_fa_exinterestdebt_current) <> vbString Then
      hks_fa_exinterestdebt_current = hks_fa_exinterestdebt_current / UnitVal_
    End If
End Function

'|fffd||437||fffd||5a7||fffd||fffd||1f0||fffd||fffd||fffd||fffd| ,s_fa_ebr
Function s_fa_ebr(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_fa_ebr = WindFunc("s_fa_ebr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_fa_ebr) <> vbString Then
      s_fa_ebr = s_fa_ebr / UnitVal_
    End If
End Function

'PER(LYR) ,s_val_per
Function s_val_per(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_val_per = WindFunc("s_val_per", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||5b5|) ,hks_ard_is_sales
Function hks_ard_is_sales(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_ard_is_sales = WindFunc("hks_ard_is_sales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_ard_is_sales) <> vbString Then
      hks_ard_is_sales = hks_ard_is_sales / UnitVal_
    End If
End Function

'|fffd||fffd||36c||fffd||2b2||fffd| ,s_stm07_bs_172
Function s_stm07_bs_172(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_172 = WindFunc("s_stm07_bs_172", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_172) <> vbString Then
      s_stm07_bs_172 = s_stm07_bs_172 / UnitVal_
    End If
End Function

'|fffd||fffd||36c||fffd||fffd||56e| ,s_stm07_bs_173
Function s_stm07_bs_173(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_173 = WindFunc("s_stm07_bs_173", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_173) <> vbString Then
      s_stm07_bs_173 = s_stm07_bs_173 / UnitVal_
    End If
End Function



'2018/8/31 & 2018/9/4
'|fffd||ae7a||5f4||32c| ,f_info_pchmstatus
Function f_info_pchmstatus(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_info_pchmstatus = WindFunc("f_info_pchmstatus", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||5f4||32c| ,f_info_redmstatus
Function f_info_redmstatus(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_info_redmstatus = WindFunc("f_info_redmstatus", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||776||fffd||fffd||fffd||fffd||fffd||2fb||fffd||fffd||fffd|(|fffd||3fc||fffd|) ,f_holder_totalnumber
Function f_holder_totalnumber(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_holder_totalnumber = WindFunc("f_holder_totalnumber", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|1bd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,i_anal_capytm
Function i_anal_capytm(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_capytm = WindFunc("i_anal_capytm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||5b5|(|fffd||fffd||56e|) ,i_dq_close_cnbd
Function i_dq_close_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_dq_close_cnbd = WindFunc("i_dq_close_cnbd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|fffd||1f5||fffd|(|fffd||fffd||56e|) ,i_dq_change_cnbd
Function i_dq_change_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_dq_change_cnbd = WindFunc("i_dq_change_cnbd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|fffd||1f5||fffd||fffd||fffd|(|fffd||fffd||56e|) ,i_dq_pctchange_cnbd
Function i_dq_pctchange_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_dq_pctchange_cnbd = WindFunc("i_dq_pctchange_cnbd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||56e|) ,i_dq_amount_cnbd
Function i_dq_amount_cnbd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_dq_amount_cnbd = WindFunc("i_dq_amount_cnbd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd| ,i_anal_capduration
Function i_anal_capduration(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_capduration = WindFunc("i_anal_capduration", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,i_anal_cashflowduration
Function i_anal_cashflowduration(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_cashflowduration = WindFunc("i_anal_cashflowduration", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||379||fffd||fffd| ,i_anal_capconvexity
Function i_anal_capconvexity(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_capconvexity = WindFunc("i_anal_capconvexity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||379||fffd||fffd| ,i_anal_cashflowconvexity
Function i_anal_cashflowconvexity(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_cashflowconvexity = WindFunc("i_anal_cashflowconvexity", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,i_anal_cashflowytm
Function i_anal_cashflowytm(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_cashflowytm = WindFunc("i_anal_cashflowytm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,i_anal_period
Function i_anal_period(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_period = WindFunc("i_anal_period", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||fffd||3e2||fffd||fffd| ,i_anal_ipratio
Function i_anal_ipratio(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_ipratio = WindFunc("i_anal_ipratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||fffd||fffd||fffd||fffd||5b5| ,i_val_mv
Function i_val_mv(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_val_mv = WindFunc("i_val_mv", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5| ,i_anal_basepointvalue
Function i_anal_basepointvalue(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_anal_basepointvalue = WindFunc("i_anal_basepointvalue", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|376||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||2bc||fffd||5b5||fffd||4daf|(|fffd||fffd||fffd||fffd||5b5|) ,hks_ard_is_investmentproperty
Function hks_ard_is_investmentproperty(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_ard_is_investmentproperty = WindFunc("hks_ard_is_investmentproperty", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_ard_is_investmentproperty) <> vbString Then
      hks_ard_is_investmentproperty = hks_ard_is_investmentproperty / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||13e||fffd||fffd||2b1||fffd| ,s_stmnote_sec_30
Function s_stmnote_sec_30(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_30 = WindFunc("s_stmnote_sec_30", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_30) <> vbString Then
      s_stmnote_sec_30 = s_stmnote_sec_30 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd| ,s_stmnote_sec_31
Function s_stmnote_sec_31(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_31 = WindFunc("s_stmnote_sec_31", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_31) <> vbString Then
      s_stmnote_sec_31 = s_stmnote_sec_31 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||5fc||fffd||fffd||5ae||fffd||fffd| ,s_stmnote_sec_32
Function s_stmnote_sec_32(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_32 = WindFunc("s_stmnote_sec_32", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_32) <> vbString Then
      s_stmnote_sec_32 = s_stmnote_sec_32 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||736||fffd| ,s_stmnote_sec_33
Function s_stmnote_sec_33(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sec_33 = WindFunc("s_stmnote_sec_33", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_sec_33) <> vbString Then
      s_stmnote_sec_33 = s_stmnote_sec_33 / UnitVal_
    End If
End Function

'|fffd||2b1||fffd||fffd||738||fffd||fffd||fffd| ,s_stmnote_sec_34
Function s_stmnote_sec_34(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_sec_34 = WindFunc("s_stmnote_sec_34", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||538||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_sec_35
Function s_stmnote_sec_35(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_sec_35 = WindFunc("s_stmnote_sec_35", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||236||fffd||fffd||2bd||fffd||fffd||fffd| ,s_stmnote_sec_36
Function s_stmnote_sec_36(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_sec_36 = WindFunc("s_stmnote_sec_36", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_bank_55
Function s_stmnote_bank_55(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte) As Variant
    s_stmnote_bank_55 = WindFunc("s_stmnote_bank_55", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5a4||fffd||fffd||4b5||fffd||fffd||fffd||fffd| ,s_info_industry_csi
Function s_info_industry_csi(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_industry_csi = WindFunc("s_info_industry_csi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5a4||fffd||fffd||4b5||fffd||fffd||fffd||fffd| ,s_info_industry_csicode
Function s_info_industry_csicode(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_industry_csicode = WindFunc("s_info_industry_csicode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd| ,s_share_freefloatshr_pct
Function s_share_freefloatshr_pct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_freefloatshr_pct = WindFunc("s_share_freefloatshr_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4e6||fffd||fffd||1b1||fffd||77c||fffd||4e6||fffd||fffd||fffd||2ff||fffd| ,s_stm07_bs_174
Function s_stm07_bs_174(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_174 = WindFunc("s_stm07_bs_174", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_174) <> vbString Then
      s_stm07_bs_174 = s_stm07_bs_174 / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||1b1||fffd||77c||fffd||4e6||fffd||fffd||fffd||2ff||fffd| ,s_stm07_bs_175
Function s_stm07_bs_175(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_175 = WindFunc("s_stm07_bs_175", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_175) <> vbString Then
      s_stm07_bs_175 = s_stm07_bs_175 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||57f||fffd|(|fffd||3fc||fffd|) ,s_stm07_bs_176
Function s_stm07_bs_176(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_176 = WindFunc("s_stm07_bs_176", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_176) <> vbString Then
      s_stm07_bs_176 = s_stm07_bs_176 / UnitVal_
    End If
End Function

'|fffd||336||fffd||fffd||2b2||fffd|(|fffd||3fc||fffd|) ,s_stm07_bs_177
Function s_stm07_bs_177(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_177 = WindFunc("s_stm07_bs_177", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_177) <> vbString Then
      s_stm07_bs_177 = s_stm07_bs_177 / UnitVal_
    End If
End Function

'|fffd||6bd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd|) ,s_stm07_bs_178
Function s_stm07_bs_178(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_178 = WindFunc("s_stm07_bs_178", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_178) <> vbString Then
      s_stm07_bs_178 = s_stm07_bs_178 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd|) ,s_stm07_bs_179
Function s_stm07_bs_179(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_179 = WindFunc("s_stm07_bs_179", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_179) <> vbString Then
      s_stm07_bs_179 = s_stm07_bs_179 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd|) ,s_stm07_bs_180
Function s_stm07_bs_180(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_180 = WindFunc("s_stm07_bs_180", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_180) <> vbString Then
      s_stm07_bs_180 = s_stm07_bs_180 / UnitVal_
    End If
End Function

'|56e||228||376||fffd||fffd| ,s_stm07_bs_181
Function s_stm07_bs_181(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_181 = WindFunc("s_stm07_bs_181", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_181) <> vbString Then
      s_stm07_bs_181 = s_stm07_bs_181 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||56e||228||376||fffd||fffd| ,s_stm07_bs_182
Function s_stm07_bs_182(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_182 = WindFunc("s_stm07_bs_182", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_182) <> vbString Then
      s_stm07_bs_182 = s_stm07_bs_182 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||228||fffd||6e64||fffd||fffd||376||fffd||fffd| ,s_stm07_bs_183
Function s_stm07_bs_183(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_183 = WindFunc("s_stm07_bs_183", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_183) <> vbString Then
      s_stm07_bs_183 = s_stm07_bs_183 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd| ,s_stm07_bs_184
Function s_stm07_bs_184(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_184 = WindFunc("s_stm07_bs_184", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_184) <> vbString Then
      s_stm07_bs_184 = s_stm07_bs_184 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||228||fffd||6e64||fffd||fffd|:|fffd||fffd||fffd||fffd||56e| ,s_stm07_bs_185
Function s_stm07_bs_185(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_185 = WindFunc("s_stm07_bs_185", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_185) <> vbString Then
      s_stm07_bs_185 = s_stm07_bs_185 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fc||fffd||5b5||fffd||fffd||2a7| ,s_stm07_is_101
Function s_stm07_is_101(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_101 = WindFunc("s_stm07_is_101", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_101) <> vbString Then
      s_stm07_is_101 = s_stm07_is_101 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stm07_is_102
Function s_stm07_is_102(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_102 = WindFunc("s_stm07_is_102", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_102) <> vbString Then
      s_stm07_is_102 = s_stm07_is_102 / UnitVal_
    End If
End Function

'|fffd||6fc||1b9||fffd||5e2||fffd||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_accmFocus
Function s_xq_accmFocus(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_accmFocus = WindFunc("s_xq_accmFocus", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6fc||fffd||fffd||fffd||fffd||6f4||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_accmComments
Function s_xq_accmComments(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_accmComments = WindFunc("s_xq_accmComments", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6fc||1bd||fffd||fffd||5f7||fffd||fffd||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_accmShares
Function s_xq_accmShares(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_accmShares = WindFunc("s_xq_accmShares", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5e2|_|469||fffd||fffd| ,s_xq_focusAdded
Function s_xq_focusAdded(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_focusAdded = WindFunc("s_xq_focusAdded", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_commentsAdded
Function s_xq_commentsAdded(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_commentsAdded = WindFunc("s_xq_commentsAdded", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5f7||fffd||fffd||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_sharesAdded
Function s_xq_sharesAdded(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_sharesAdded = WindFunc("s_xq_sharesAdded", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||739||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_WOW_Focus
Function s_xq_WOW_Focus(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_WOW_Focus = WindFunc("s_xq_WOW_Focus", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_WOW_Comments
Function s_xq_WOW_Comments(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_WOW_Comments = WindFunc("s_xq_WOW_Comments", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4bb||fffd||73d||fffd||fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|469||fffd||fffd| ,s_xq_WOW_Shares
Function s_xq_WOW_Shares(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_xq_WOW_Shares = WindFunc("s_xq_WOW_Shares", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function


'2018/9/30
'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_abs_currentloan
Function b_abs_currentloan(WINDCODE_ As Variant) As Variant
    b_abs_currentloan = WindFunc("b_abs_currentloan", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||1f0||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_abs_currentloans
Function b_abs_currentloans(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    b_abs_currentloans = WindFunc("b_abs_currentloans", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
    If VarType(b_abs_currentloans) <> vbString Then
      b_abs_currentloans = b_abs_currentloans / UnitVal_
    End If
End Function

'|fffd||fffd||1f0||fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||fffd||fffd||fffd||fffd||fffd| ,b_abs_currentwarm
Function b_abs_currentwarm(WINDCODE_ As Variant) As Variant
    b_abs_currentwarm = WindFunc("b_abs_currentwarm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||1f0||fffd||fffd||228||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_abs_currentwtgavgrate
Function b_abs_currentwtgavgrate(WINDCODE_ As Variant) As Variant
    b_abs_currentwtgavgrate = WindFunc("b_abs_currentwtgavgrate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||6fc||fffd||3a5||53c||fffd||fffd| ,b_abs_cumulativedefaultrate
Function b_abs_cumulativedefaultrate(WINDCODE_ As Variant) As Variant
    b_abs_cumulativedefaultrate = WindFunc("b_abs_cumulativedefaultrate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1f7||fffd||fffd| ,b_abs_delinquencyrate
Function b_abs_delinquencyrate(WINDCODE_ As Variant) As Variant
    b_abs_delinquencyrate = WindFunc("b_abs_delinquencyrate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||173||fffd||531| ,b_abs_creditnormal
Function b_abs_creditnormal(WINDCODE_ As Variant) As Variant
    b_abs_creditnormal = WindFunc("b_abs_creditnormal", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5| ,b_abs_industry
Function b_abs_industry(WINDCODE_ As Variant) As Variant
    b_abs_industry = WindFunc("b_abs_industry", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_abs_industry1
Function b_abs_industry1(WINDCODE_ As Variant) As Variant
    b_abs_industry1 = WindFunc("b_abs_industry1", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,b_abs_province
Function b_abs_province(WINDCODE_ As Variant) As Variant
    b_abs_province = WindFunc("b_abs_province", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||fffd||5b5||376||fffd||fffd||fffd||fffd||fffd||fffd|ESG|fffd||fffd||fffd||fffd| ,s_esg_rating_casvi
Function s_esg_rating_casvi(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_esg_rating_casvi = WindFunc("s_esg_rating_casvi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_46
Function s_stm07_is_46(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_46 = WindFunc("s_stm07_is_46", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_46) <> vbString Then
      s_stm07_is_46 = s_stm07_is_46 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||736||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_53
Function s_stm07_is_53(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_53 = WindFunc("s_stm07_is_53", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_53) <> vbString Then
      s_stm07_is_53 = s_stm07_is_53 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_is_58
Function s_stm07_is_58(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_58 = WindFunc("s_stm07_is_58", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_58) <> vbString Then
      s_stm07_is_58 = s_stm07_is_58 / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_72
Function s_stm07_bs_72(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_72 = WindFunc("s_stm07_bs_72", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_72) <> vbString Then
      s_stm07_bs_72 = s_stm07_bs_72 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_23
Function s_stm07_bs_23(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_23 = WindFunc("s_stm07_bs_23", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_23) <> vbString Then
      s_stm07_bs_23 = s_stm07_bs_23 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_91
Function s_stm07_bs_91(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_91 = WindFunc("s_stm07_bs_91", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_91) <> vbString Then
      s_stm07_bs_91 = s_stm07_bs_91 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_44
Function s_stm07_bs_44(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_44 = WindFunc("s_stm07_bs_44", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_44) <> vbString Then
      s_stm07_bs_44 = s_stm07_bs_44 / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||276||fffd||228||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_143
Function s_stm07_bs_143(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_143 = WindFunc("s_stm07_bs_143", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_143) <> vbString Then
      s_stm07_bs_143 = s_stm07_bs_143 / UnitVal_
    End If
End Function

'|fffd||276||fffd||228||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_138
Function s_stm07_bs_138(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_138 = WindFunc("s_stm07_bs_138", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_138) <> vbString Then
      s_stm07_bs_138 = s_stm07_bs_138 / UnitVal_
    End If
End Function

'|fffd||fffd||56e||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_126
Function s_stm07_bs_126(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_126 = WindFunc("s_stm07_bs_126", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_126) <> vbString Then
      s_stm07_bs_126 = s_stm07_bs_126 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_bs_101
Function s_stm07_bs_101(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_101 = WindFunc("s_stm07_bs_101", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_101) <> vbString Then
      s_stm07_bs_101 = s_stm07_bs_101 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_23
Function s_stm07_cs_23(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_23 = WindFunc("s_stm07_cs_23", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_23) <> vbString Then
      s_stm07_cs_23 = s_stm07_cs_23 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_38
Function s_stm07_cs_38(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_38 = WindFunc("s_stm07_cs_38", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_38) <> vbString Then
      s_stm07_cs_38 = s_stm07_cs_38 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_35
Function s_stm07_cs_35(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_35 = WindFunc("s_stm07_cs_35", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_35) <> vbString Then
      s_stm07_cs_35 = s_stm07_cs_35 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_58
Function s_stm07_cs_58(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_58 = WindFunc("s_stm07_cs_58", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_58) <> vbString Then
      s_stm07_cs_58 = s_stm07_cs_58 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_46
Function s_stm07_cs_46(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_46 = WindFunc("s_stm07_cs_46", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_46) <> vbString Then
      s_stm07_cs_46 = s_stm07_cs_46 / UnitVal_
    End If
End Function

'|376||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_55
Function s_stm07_cs_55(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_55 = WindFunc("s_stm07_cs_55", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_55) <> vbString Then
      s_stm07_cs_55 = s_stm07_cs_55 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_66
Function s_stm07_cs_66(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_66 = WindFunc("s_stm07_cs_66", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_66) <> vbString Then
      s_stm07_cs_66 = s_stm07_cs_66 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_76
Function s_stm07_cs_76(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_76 = WindFunc("s_stm07_cs_76", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_76) <> vbString Then
      s_stm07_cs_76 = s_stm07_cs_76 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2bb||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_73
Function s_stm07_cs_73(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_73 = WindFunc("s_stm07_cs_73", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_73) <> vbString Then
      s_stm07_cs_73 = s_stm07_cs_73 / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||5bd||fffd||23c||fffd||fffd||ffbb||fffd||fffd||fffd||4f6||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_80
Function s_stm07_cs_80(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_80 = WindFunc("s_stm07_cs_80", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_80) <> vbString Then
      s_stm07_cs_80 = s_stm07_cs_80 / UnitVal_
    End If
End Function

'|fffd||fffd||4f7||fffd|-|fffd||fffd||4ea||fffd||edaf||fffd||5bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_103
Function s_stm07_cs_103(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_103 = WindFunc("s_stm07_cs_103", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_103) <> vbString Then
      s_stm07_cs_103 = s_stm07_cs_103 / UnitVal_
    End If
End Function

'|fffd||fffd||4f7||fffd|-|fffd||5bd||fffd||fffd||fffd||fffd||4f6||fffd||fffd||fffd|(|fffd||3fc||fffd||1bd||fffd||fffd||fffd||fffd||13f|) ,s_stm07_cs_114
Function s_stm07_cs_114(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_cs_114 = WindFunc("s_stm07_cs_114", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_cs_114) <> vbString Then
      s_stm07_cs_114 = s_stm07_cs_114 / UnitVal_
    End If
End Function


'2018/10/8
'|5b8||fffd||fffd||fffd||fffd||fffd||fffd||fffd||221||5b8||fffd||fffd||fffd||fffd|Wind|fffd||fffd||fffd||fffd| ,to_windcode_index
Function to_windcode_index(SECNAME_ As String) As Variant
    to_windcode_index = WindFunc("to_windcode_index", 1, 1, SECNAME_, Null, Null, Null, Null, Null)
End Function


'2018/10/25
'|fffd||437||fffd||fffd||fffd||fffd||fffd| ,s_stm07_is_103
Function s_stm07_is_103(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_103 = WindFunc("s_stm07_is_103", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_103) <> vbString Then
      s_stm07_is_103 = s_stm07_is_103 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||3e2||fffd||fffd||fffd||fffd| ,s_stm07_is_104
Function s_stm07_is_104(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_104 = WindFunc("s_stm07_is_104", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_104) <> vbString Then
      s_stm07_is_104 = s_stm07_is_104 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||3e2||fffd||fffd||fffd||fffd| ,s_stm07_is_105
Function s_stm07_is_105(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_105 = WindFunc("s_stm07_is_105", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_105) <> vbString Then
      s_stm07_is_105 = s_stm07_is_105 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fc||fffd||5b5||fffd||fffd||2a7| ,s_qstm07_is_101
Function s_qstm07_is_101(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_101 = WindFunc("s_qstm07_is_101", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_101) <> vbString Then
      s_qstm07_is_101 = s_qstm07_is_101 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_102
Function s_qstm07_is_102(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_102 = WindFunc("s_qstm07_is_102", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_102) <> vbString Then
      s_qstm07_is_102 = s_qstm07_is_102 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||437||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_103
Function s_qstm07_is_103(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_103 = WindFunc("s_qstm07_is_103", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_103) <> vbString Then
      s_qstm07_is_103 = s_qstm07_is_103 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||3e2||fffd||fffd||fffd||fffd| ,s_qstm07_is_104
Function s_qstm07_is_104(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_104 = WindFunc("s_qstm07_is_104", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_104) <> vbString Then
      s_qstm07_is_104 = s_qstm07_is_104 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||3e2||fffd||fffd||fffd||fffd| ,s_qstm07_is_105
Function s_qstm07_is_105(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_105 = WindFunc("s_qstm07_is_105", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_105) <> vbString Then
      s_qstm07_is_105 = s_qstm07_is_105 / UnitVal_
    End If
End Function


'2018/11/5
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2fe||fffd||fffd||fffd||431||fffd||fffd||fffd| ,f_holder_corp_holdingpct
Function f_holder_corp_holdingpct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_holder_corp_holdingpct = WindFunc("f_holder_corp_holdingpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||437||776||fffd| ,f_issue_unit
Function f_issue_unit(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_issue_unit = WindFunc("f_issue_unit", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
    If VarType(f_issue_unit) <> vbString Then
      f_issue_unit = f_issue_unit / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||437||776||fffd||fffd||1f7||fffd||3aa||fffd||3f2||fffd||fffd||fffd||fffd||fffd| ,f_holder_mergedholdingornot
Function f_holder_mergedholdingornot(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_holder_mergedholdingornot = WindFunc("f_holder_mergedholdingornot", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||2fb||fffd||fffd||fffd||fffd||1f7||fffd||3aa||fffd||3f2||fffd||fffd||fffd||fffd||fffd| ,f_holder_mergednumberornot
Function f_holder_mergednumberornot(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_holder_mergednumberornot = WindFunc("f_holder_mergednumberornot", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function


'2018/11/15
'|fffd||fffd||2fe||fffd||fffd||fffd||439||fffd||1b1||4bb||fffd||fffd| ,s_info_relatedshare
Function s_info_relatedshare(WINDCODE_ As Variant) As Variant
    s_info_relatedshare = WindFunc("s_info_relatedshare", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd||56e||22f||4bb||fffd||fffd| ,s_info_relatedbond
Function s_info_relatedbond(WINDCODE_ As Variant) As Variant
    s_info_relatedbond = WindFunc("s_info_relatedbond", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7| ,s_stmnote_ImpairmentLoss_10
Function s_stmnote_ImpairmentLoss_10(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_ImpairmentLoss_10 = WindFunc("s_stmnote_ImpairmentLoss_10", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_ImpairmentLoss_10) <> vbString Then
      s_stmnote_ImpairmentLoss_10 = s_stmnote_ImpairmentLoss_10 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_seg_1701
Function s_stmnote_seg_1701(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_seg_1701 = WindFunc("s_stmnote_seg_1701", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_seg_1701) <> vbString Then
      s_stmnote_seg_1701 = s_stmnote_seg_1701 / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||4b5||fffd||fffd||271||fffd| ,s_stmnote_seg_1702
Function s_stmnote_seg_1702(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_seg_1702 = WindFunc("s_stmnote_seg_1702", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_seg_1702) <> vbString Then
      s_stmnote_seg_1702 = s_stmnote_seg_1702 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_seg_1703
Function s_stmnote_seg_1703(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_seg_1703 = WindFunc("s_stmnote_seg_1703", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_seg_1703) <> vbString Then
      s_stmnote_seg_1703 = s_stmnote_seg_1703 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||271||fffd| ,s_stmnote_seg_1704
Function s_stmnote_seg_1704(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_seg_1704 = WindFunc("s_stmnote_seg_1704", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_seg_1704) <> vbString Then
      s_stmnote_seg_1704 = s_stmnote_seg_1704 / UnitVal_
    End If
End Function


'2018/11/19
'|3b4||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||739||271||fffd||fffd||fffd||fffd||fffd| ,hks_ss_shortintrestpct
Function hks_ss_shortintrestpct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_ss_shortintrestpct = WindFunc("hks_ss_shortintrestpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||377||fffd||632||fffd||fffd||fffd||fffd||fffd| ,hks_ss_daystocover
Function hks_ss_daystocover(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hks_ss_daystocover = WindFunc("hks_ss_daystocover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||439||fffd||2fe| ,b_issuer_listingornot1
Function b_issuer_listingornot1(WINDCODE_ As Variant) As Variant
    b_issuer_listingornot1 = WindFunc("b_issuer_listingornot1", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||1f7||fffd||fffd||439||fffd||fffd||fffd||5ea||56e| ,s_info_cbissueornot
Function s_info_cbissueornot(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_cbissueornot = WindFunc("s_info_cbissueornot", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|36c||fffd||fffd||2fe||fffd||fffd||5ea||56e|Wind|fffd||fffd||fffd||fffd| ,s_info_cbwindcode
Function s_info_cbwindcode(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_cbwindcode = WindFunc("s_info_cbwindcode", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|36c||fffd||fffd||2fe||fffd||fffd||5ea||56e||fffd||fffd||fffd| ,s_info_cbname
Function s_info_cbname(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_cbname = WindFunc("s_info_cbname", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|36c||fffd||fffd||2fe||fffd||fffd||fffd||fffd|Wind|fffd||fffd||fffd||fffd| ,s_info_ussharewindcode
Function s_info_ussharewindcode(WINDCODE_ As Variant) As Variant
    s_info_ussharewindcode = WindFunc("s_info_ussharewindcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|36c||fffd||fffd||2fe||fffd||fffd||fffd||27c||fffd||fffd| ,s_info_ussharename
Function s_info_ussharename(WINDCODE_ As Variant) As Variant
    s_info_ussharename = WindFunc("s_info_ussharename", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'IPO|fffd||ac68||fffd||fffd||fffd||5f4||3b1||fffd||fffd||fffd||2b1||fffd||fffd| ,s_ipo_draftsprospectusdate
Function s_ipo_draftsprospectusdate(WINDCODE_ As Variant) As Variant
    s_ipo_draftsprospectusdate = WindFunc("s_ipo_draftsprospectusdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||6f7||1fa||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd|(TTM) ,s_fa_eps_deducted_ttm
Function s_fa_eps_deducted_ttm(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_eps_deducted_ttm = WindFunc("s_fa_eps_deducted_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f4||fffd||fffd||fffd| ,s_cac_lawsuitnum
Function s_cac_lawsuitnum(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant) As Variant
    s_cac_lawsuitnum = WindFunc("s_cac_lawsuitnum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6c38||fffd||fffd||fffd| ,s_cac_lawsuitamount
Function s_cac_lawsuitamount(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_cac_lawsuitamount = WindFunc("s_cac_lawsuitamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
    If VarType(s_cac_lawsuitamount) <> vbString Then
      s_cac_lawsuitamount = s_cac_lawsuitamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||3a5||fffd||6d26||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cac_illegalitynum
Function s_cac_illegalitynum(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant) As Variant
    s_cac_illegalitynum = WindFunc("s_cac_illegalitynum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
End Function

'|fffd||fffd||fffd||fffd||3a5||fffd||6d26||fffd||fffd||fffd||fffd||fffd| ,s_cac_illegalityamount
Function s_cac_illegalityamount(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_cac_illegalityamount = WindFunc("s_cac_illegalityamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_))
    If VarType(s_cac_illegalityamount) <> vbString Then
      s_cac_illegalityamount = s_cac_illegalityamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd||3f0||fffd||fffd||fffd||fffd| ,s_pq_blocktradenum
Function s_pq_blocktradenum(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_blocktradenum = WindFunc("s_pq_blocktradenum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||6bd||fffd||fffd||5f3||27d||fffd||fffd||736||fffd| ,s_pq_blocktradeamount
Function s_pq_blocktradeamount(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_pq_blocktradeamount = WindFunc("s_pq_blocktradeamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_pq_blocktradeamount) <> vbString Then
      s_pq_blocktradeamount = s_pq_blocktradeamount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f0||fffd||fffd||fffd||fffd| ,s_pq_abnormaltradenum
Function s_pq_abnormaltradenum(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_pq_abnormaltradenum = WindFunc("s_pq_abnormaltradenum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_pq_abnormaltrade_lp
Function s_pq_abnormaltrade_lp(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_pq_abnormaltrade_lp = WindFunc("s_pq_abnormaltrade_lp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_pq_abnormaltrade_lp) <> vbString Then
      s_pq_abnormaltrade_lp = s_pq_abnormaltrade_lp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_pq_abnormaltrade_sp
Function s_pq_abnormaltrade_sp(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_pq_abnormaltrade_sp = WindFunc("s_pq_abnormaltrade_sp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_pq_abnormaltrade_sp) <> vbString Then
      s_pq_abnormaltrade_sp = s_pq_abnormaltrade_sp / UnitVal_
    End If
End Function

'2018/11/20
'|fffd||fffd||fffd||577||fffd||fffd||fffd|(|fffd||1bd||fffd||fffd||5bb||fffd|) ,s_dq_direction
Function s_dq_direction(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_direction = WindFunc("s_dq_direction", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2018/12/17
'|fffd||fffd||fffd||43b||fffd||fffd||fffd| ,b_abs_agency_trustee1
Function b_abs_agency_trustee1(WINDCODE_ As Variant) As Variant
    b_abs_agency_trustee1 = WindFunc("b_abs_agency_trustee1", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|5b8||fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd| ,i_risk_returnyearly
Function i_risk_returnyearly(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CalcMethod_ As Integer) As Variant
    i_risk_returnyearly = WindFunc("i_risk_returnyearly", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcMethod_)
End Function

'2018/12/19
'|fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd| ,f_nav_updatecompleteness
Function f_nav_updatecompleteness(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CalcTerm_ As Integer) As Variant
    f_nav_updatecompleteness = WindFunc("f_nav_updatecompleteness", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_)
End Function

'|fffd||1f7||fffd||fffd||6bf||fffd||fffd||17b||fffd||fffd||fffd| ,f_info_regulopenfundornot
Function f_info_regulopenfundornot(WINDCODE_ As Variant) As Variant
    f_info_regulopenfundornot = WindFunc("f_info_regulopenfundornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_investtype2
Function f_info_investtype2(WINDCODE_ As Variant, FundGroup_ As Integer) As Variant
    f_info_investtype2 = WindFunc("f_info_investtype2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), FundGroup_)
End Function

'|fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||fffd| ,f_issue_announcedate
Function f_issue_announcedate(WINDCODE_ As Variant) As Variant
    f_issue_announcedate = WindFunc("f_issue_announcedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'2019/1/14
'|5b8||fffd||fffd||fffd||fffd||5ae||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3bd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_share_rtd_unlockingdate_fwd
Function s_share_rtd_unlockingdate_fwd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_rtd_unlockingdate_fwd = WindFunc("s_share_rtd_unlockingdate_fwd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||fffd||fffd||5ae||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3bd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_share_tradable_current_fwd
Function s_share_tradable_current_fwd(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_tradable_current_fwd = WindFunc("s_share_tradable_current_fwd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_tradable_current_fwd) <> vbString Then
      s_share_tradable_current_fwd = s_share_tradable_current_fwd / UnitVal_
    End If
End Function

'|5b8||fffd||fffd||fffd||fffd||5ae||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_share_rtd_datatype_fwd
Function s_share_rtd_datatype_fwd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_rtd_datatype_fwd = WindFunc("s_share_rtd_datatype_fwd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||fffd||fffd||5ae||fffd||fffd||fffd||fffd||fffd||4bb||fffd||3bd||fffd||fffd||fffd||277||fffd||fffd||fffd||fffd||fffd| ,s_share_tradable_sharetype_fwd
Function s_share_tradable_sharetype_fwd(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_tradable_sharetype_fwd = WindFunc("s_share_tradable_sharetype_fwd", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||5a4||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd| ,s_info_industry_csrc12_n
Function s_info_industry_csrc12_n(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_industry_csrc12_n = WindFunc("s_info_industry_csrc12_n", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||277||778||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|) ,i_info_numberofconstituents2
Function i_info_numberofconstituents2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_info_numberofconstituents2 = WindFunc("i_info_numberofconstituents2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_fellow_issuedate_pp
Function s_fellow_issuedate_pp(WINDCODE_ As Variant, Optional Year_ As Integer = 2017) As Variant
    s_fellow_issuedate_pp = WindFunc("s_fellow_issuedate_pp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|4e6||fffd||fffd||5b0||fffd||fffd||43d||fffd||fffd||3fc||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_emplpayable_sb
Function s_stmnote_emplpayable_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplpayable_sb = WindFunc("s_stmnote_emplpayable_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplpayable_sb) <> vbString Then
      s_stmnote_emplpayable_sb = s_stmnote_emplpayable_sb / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||5b0||fffd||fffd||43d||fffd||fffd||3fc||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_emplpayable_eb
Function s_stmnote_emplpayable_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplpayable_eb = WindFunc("s_stmnote_emplpayable_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplpayable_eb) <> vbString Then
      s_stmnote_emplpayable_eb = s_stmnote_emplpayable_eb / UnitVal_
    End If
End Function

'|4e6||fffd||fffd||5b0||fffd||fffd||43d||fffd||fffd||3fc||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_emplpayable_de
Function s_stmnote_emplpayable_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplpayable_de = WindFunc("s_stmnote_emplpayable_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplpayable_de) <> vbString Then
      s_stmnote_emplpayable_de = s_stmnote_emplpayable_de / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1fad||fffd||47a||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_eduandunionfunds_add
Function s_stmnote_eduandunionfunds_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_eduandunionfunds_add = WindFunc("s_stmnote_eduandunionfunds_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_eduandunionfunds_add) <> vbString Then
      s_stmnote_eduandunionfunds_add = s_stmnote_eduandunionfunds_add / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1fad||fffd||47a||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_eduandunionfunds_sb
Function s_stmnote_eduandunionfunds_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_eduandunionfunds_sb = WindFunc("s_stmnote_eduandunionfunds_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_eduandunionfunds_sb) <> vbString Then
      s_stmnote_eduandunionfunds_sb = s_stmnote_eduandunionfunds_sb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1fad||fffd||47a||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_eduandunionfunds_eb
Function s_stmnote_eduandunionfunds_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_eduandunionfunds_eb = WindFunc("s_stmnote_eduandunionfunds_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_eduandunionfunds_eb) <> vbString Then
      s_stmnote_eduandunionfunds_eb = s_stmnote_eduandunionfunds_eb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1fad||fffd||47a||fffd||5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_eduandunionfunds_de
Function s_stmnote_eduandunionfunds_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_eduandunionfunds_de = WindFunc("s_stmnote_eduandunionfunds_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_eduandunionfunds_de) <> vbString Then
      s_stmnote_eduandunionfunds_de = s_stmnote_eduandunionfunds_de / UnitVal_
    End If
End Function

'|5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_welfare_add
Function s_stmnote_welfare_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_welfare_add = WindFunc("s_stmnote_welfare_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_welfare_add) <> vbString Then
      s_stmnote_welfare_add = s_stmnote_welfare_add / UnitVal_
    End If
End Function

'|5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_welfare_sb
Function s_stmnote_welfare_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_welfare_sb = WindFunc("s_stmnote_welfare_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_welfare_sb) <> vbString Then
      s_stmnote_welfare_sb = s_stmnote_welfare_sb / UnitVal_
    End If
End Function

'|5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_welfare_eb
Function s_stmnote_welfare_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_welfare_eb = WindFunc("s_stmnote_welfare_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_welfare_eb) <> vbString Then
      s_stmnote_welfare_eb = s_stmnote_welfare_eb / UnitVal_
    End If
End Function

'|5b0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_welfare_de
Function s_stmnote_welfare_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_welfare_de = WindFunc("s_stmnote_welfare_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_welfare_de) <> vbString Then
      s_stmnote_welfare_de = s_stmnote_welfare_de / UnitVal_
    End If
End Function

'|5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_housingfund_add
Function s_stmnote_housingfund_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_housingfund_add = WindFunc("s_stmnote_housingfund_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_housingfund_add) <> vbString Then
      s_stmnote_housingfund_add = s_stmnote_housingfund_add / UnitVal_
    End If
End Function

'|5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_housingfund_sb
Function s_stmnote_housingfund_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_housingfund_sb = WindFunc("s_stmnote_housingfund_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_housingfund_sb) <> vbString Then
      s_stmnote_housingfund_sb = s_stmnote_housingfund_sb / UnitVal_
    End If
End Function

'|5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_housingfund_eb
Function s_stmnote_housingfund_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_housingfund_eb = WindFunc("s_stmnote_housingfund_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_housingfund_eb) <> vbString Then
      s_stmnote_housingfund_eb = s_stmnote_housingfund_eb / UnitVal_
    End If
End Function

'|5e1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_housingfund_de
Function s_stmnote_housingfund_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_housingfund_de = WindFunc("s_stmnote_housingfund_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_housingfund_de) <> vbString Then
      s_stmnote_housingfund_de = s_stmnote_housingfund_de / UnitVal_
    End If
End Function

'|fffd||fffd||1c63||fffd||577||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_socialsecurity_add
Function s_stmnote_socialsecurity_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_socialsecurity_add = WindFunc("s_stmnote_socialsecurity_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_socialsecurity_add) <> vbString Then
      s_stmnote_socialsecurity_add = s_stmnote_socialsecurity_add / UnitVal_
    End If
End Function

'|fffd||fffd||1c63||fffd||577||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_socialsecurity_sb
Function s_stmnote_socialsecurity_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_socialsecurity_sb = WindFunc("s_stmnote_socialsecurity_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_socialsecurity_sb) <> vbString Then
      s_stmnote_socialsecurity_sb = s_stmnote_socialsecurity_sb / UnitVal_
    End If
End Function

'|fffd||fffd||1c63||fffd||577||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_socialsecurity_eb
Function s_stmnote_socialsecurity_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_socialsecurity_eb = WindFunc("s_stmnote_socialsecurity_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_socialsecurity_eb) <> vbString Then
      s_stmnote_socialsecurity_eb = s_stmnote_socialsecurity_eb / UnitVal_
    End If
End Function

'|fffd||fffd||1c63||fffd||577||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_socialsecurity_de
Function s_stmnote_socialsecurity_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_socialsecurity_de = WindFunc("s_stmnote_socialsecurity_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_socialsecurity_de) <> vbString Then
      s_stmnote_socialsecurity_de = s_stmnote_socialsecurity_de / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f1||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_basicpen_add
Function s_stmnote_basicpen_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_basicpen_add = WindFunc("s_stmnote_basicpen_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_basicpen_add) <> vbString Then
      s_stmnote_basicpen_add = s_stmnote_basicpen_add / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f1||fffd||fffd||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_basicpen_sb
Function s_stmnote_basicpen_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_basicpen_sb = WindFunc("s_stmnote_basicpen_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_basicpen_sb) <> vbString Then
      s_stmnote_basicpen_sb = s_stmnote_basicpen_sb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f1||fffd||fffd||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_basicpen_eb
Function s_stmnote_basicpen_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_basicpen_eb = WindFunc("s_stmnote_basicpen_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_basicpen_eb) <> vbString Then
      s_stmnote_basicpen_eb = s_stmnote_basicpen_eb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3f1||fffd||fffd||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_basicpen_de
Function s_stmnote_basicpen_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_basicpen_de = WindFunc("s_stmnote_basicpen_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_basicpen_de) <> vbString Then
      s_stmnote_basicpen_de = s_stmnote_basicpen_de / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||577||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_maternityins_add
Function s_stmnote_maternityins_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_maternityins_add = WindFunc("s_stmnote_maternityins_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_maternityins_add) <> vbString Then
      s_stmnote_maternityins_add = s_stmnote_maternityins_add / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||577||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_maternityins_sb
Function s_stmnote_maternityins_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_maternityins_sb = WindFunc("s_stmnote_maternityins_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_maternityins_sb) <> vbString Then
      s_stmnote_maternityins_sb = s_stmnote_maternityins_sb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||577||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_maternityins_eb
Function s_stmnote_maternityins_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_maternityins_eb = WindFunc("s_stmnote_maternityins_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_maternityins_eb) <> vbString Then
      s_stmnote_maternityins_eb = s_stmnote_maternityins_eb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||577||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_maternityins_de
Function s_stmnote_maternityins_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_maternityins_de = WindFunc("s_stmnote_maternityins_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_maternityins_de) <> vbString Then
      s_stmnote_maternityins_de = s_stmnote_maternityins_de / UnitVal_
    End If
End Function

'|2a7||4b5||fffd||fffd||fffd||577||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_unemplins_add
Function s_stmnote_unemplins_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_unemplins_add = WindFunc("s_stmnote_unemplins_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_unemplins_add) <> vbString Then
      s_stmnote_unemplins_add = s_stmnote_unemplins_add / UnitVal_
    End If
End Function

'|2a7||4b5||fffd||fffd||fffd||577||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_unemplins_sb
Function s_stmnote_unemplins_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_unemplins_sb = WindFunc("s_stmnote_unemplins_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_unemplins_sb) <> vbString Then
      s_stmnote_unemplins_sb = s_stmnote_unemplins_sb / UnitVal_
    End If
End Function

'|2a7||4b5||fffd||fffd||fffd||577||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_unemplins_eb
Function s_stmnote_unemplins_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_unemplins_eb = WindFunc("s_stmnote_unemplins_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_unemplins_eb) <> vbString Then
      s_stmnote_unemplins_eb = s_stmnote_unemplins_eb / UnitVal_
    End If
End Function

'|2a7||4b5||fffd||fffd||fffd||577||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_unemplins_de
Function s_stmnote_unemplins_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_unemplins_de = WindFunc("s_stmnote_unemplins_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_unemplins_de) <> vbString Then
      s_stmnote_unemplins_de = s_stmnote_unemplins_de / UnitVal_
    End If
End Function

'|4bd||fffd||1b1||fffd||fffd||577||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_medins_add
Function s_stmnote_medins_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_medins_add = WindFunc("s_stmnote_medins_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_medins_add) <> vbString Then
      s_stmnote_medins_add = s_stmnote_medins_add / UnitVal_
    End If
End Function

'|4bd||fffd||1b1||fffd||fffd||577||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_medins_sb
Function s_stmnote_medins_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_medins_sb = WindFunc("s_stmnote_medins_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_medins_sb) <> vbString Then
      s_stmnote_medins_sb = s_stmnote_medins_sb / UnitVal_
    End If
End Function

'|4bd||fffd||1b1||fffd||fffd||577||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_medins_eb
Function s_stmnote_medins_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_medins_eb = WindFunc("s_stmnote_medins_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_medins_eb) <> vbString Then
      s_stmnote_medins_eb = s_stmnote_medins_eb / UnitVal_
    End If
End Function

'|4bd||fffd||1b1||fffd||fffd||577||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_medins_de
Function s_stmnote_medins_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_medins_de = WindFunc("s_stmnote_medins_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_medins_de) <> vbString Then
      s_stmnote_medins_de = s_stmnote_medins_de / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2f1||fffd||fffd||577||fffd|:|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_emplinjuryins_add
Function s_stmnote_emplinjuryins_add(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplinjuryins_add = WindFunc("s_stmnote_emplinjuryins_add", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplinjuryins_add) <> vbString Then
      s_stmnote_emplinjuryins_add = s_stmnote_emplinjuryins_add / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2f1||fffd||fffd||577||fffd|:|fffd||6b3||fffd||fffd||fffd||fffd| ,s_stmnote_emplinjuryins_sb
Function s_stmnote_emplinjuryins_sb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplinjuryins_sb = WindFunc("s_stmnote_emplinjuryins_sb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplinjuryins_sb) <> vbString Then
      s_stmnote_emplinjuryins_sb = s_stmnote_emplinjuryins_sb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2f1||fffd||fffd||577||fffd|:|fffd||fffd||129||fffd||fffd||fffd| ,s_stmnote_emplinjuryins_eb
Function s_stmnote_emplinjuryins_eb(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplinjuryins_eb = WindFunc("s_stmnote_emplinjuryins_eb", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplinjuryins_eb) <> vbString Then
      s_stmnote_emplinjuryins_eb = s_stmnote_emplinjuryins_eb / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||2f1||fffd||fffd||577||fffd|:|fffd||fffd||fffd||6bc||fffd||fffd||fffd| ,s_stmnote_emplinjuryins_de
Function s_stmnote_emplinjuryins_de(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_emplinjuryins_de = WindFunc("s_stmnote_emplinjuryins_de", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_emplinjuryins_de) <> vbString Then
      s_stmnote_emplinjuryins_de = s_stmnote_emplinjuryins_de / UnitVal_
    End If
End Function

'|2b5||fffd||2bf||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_holder_controllerattr
Function s_holder_controllerattr(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_holder_controllerattr = WindFunc("s_holder_controllerattr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd||36c||fffd||fffd||fffd||fffd||fffd||fffd| ,s_fa_rdexp_yoy
Function s_fa_rdexp_yoy(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_rdexp_yoy = WindFunc("s_fa_rdexp_yoy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||2fe||fffd||fffd||fffd||fffd||fffd| ,s_fa_revenuepp
Function s_fa_revenuepp(WINDCODE_ As Variant, Optional Year_ As Integer = 2017) As Variant
    s_fa_revenuepp = WindFunc("s_fa_revenuepp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||2fe||fffd||fffd||fffd||fffd||fffd| ,s_fa_profitpp
Function s_fa_profitpp(WINDCODE_ As Variant, Optional Year_ As Integer = 2017) As Variant
    s_fa_profitpp = WindFunc("s_fa_profitpp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||2fe||fffd||43d||fffd||fffd| ,s_fa_salarypp
Function s_fa_salarypp(WINDCODE_ As Variant, Optional Year_ As Integer = 2017) As Variant
    s_fa_salarypp = WindFunc("s_fa_salarypp", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
End Function

'|fffd||fffd||276||fffd||fffd||6fc||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd| ,s_share_pledgeda_holder
Function s_share_pledgeda_holder(WINDCODE_ As Variant, TRADEDATE_ As Variant, Sequence_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_share_pledgeda_holder = WindFunc("s_share_pledgeda_holder", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Sequence_)
    If VarType(s_share_pledgeda_holder) <> vbString Then
      s_share_pledgeda_holder = s_share_pledgeda_holder / UnitVal_
    End If
End Function

'|fffd||fffd||276||fffd||fffd||6fc||fffd||fffd||fffd||47a||fffd||fffd||57c||fffd||5b9||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_share_pledgeda_pct_holder
Function s_share_pledgeda_pct_holder(WINDCODE_ As Variant, TRADEDATE_ As Variant, Sequence_ As Byte) As Variant
    s_share_pledgeda_pct_holder = WindFunc("s_share_pledgeda_pct_holder", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Sequence_)
End Function

'|4ea||4b5||2f0||fffd||3cc38||fffd||fffd||4fa||3fc||fffd| ,s_stmnote_tax_business
Function s_stmnote_tax_business(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_business = WindFunc("s_stmnote_tax_business", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_business) <> vbString Then
      s_stmnote_tax_business = s_stmnote_tax_business / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0| ,s_stmnote_tax_consumption
Function s_stmnote_tax_consumption(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_consumption = WindFunc("s_stmnote_tax_consumption", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_consumption) <> vbString Then
      s_stmnote_tax_consumption = s_stmnote_tax_consumption / UnitVal_
    End If
End Function

'|fffd||1fd||fffd||2f0| ,s_stmnote_tax_construction
Function s_stmnote_tax_construction(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_construction = WindFunc("s_stmnote_tax_construction", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_construction) <> vbString Then
      s_stmnote_tax_construction = s_stmnote_tax_construction / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||478||fffd||fffd||fffd| ,s_stmnote_tax_edesupplementtary
Function s_stmnote_tax_edesupplementtary(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_edesupplementtary = WindFunc("s_stmnote_tax_edesupplementtary", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_edesupplementtary) <> vbString Then
      s_stmnote_tax_edesupplementtary = s_stmnote_tax_edesupplementtary / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b9||fffd||fffd||2f0| ,s_stmnote_tax_urbanlanduse
Function s_stmnote_tax_urbanlanduse(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_urbanlanduse = WindFunc("s_stmnote_tax_urbanlanduse", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_urbanlanduse) <> vbString Then
      s_stmnote_tax_urbanlanduse = s_stmnote_tax_urbanlanduse / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2f0| ,s_stmnote_tax_building
Function s_stmnote_tax_building(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_building = WindFunc("s_stmnote_tax_building", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_building) <> vbString Then
      s_stmnote_tax_building = s_stmnote_tax_building / UnitVal_
    End If
End Function

'|4e1||fffd||fffd||2f0| ,s_stmnote_tax_stamp
Function s_stmnote_tax_stamp(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_stamp = WindFunc("s_stmnote_tax_stamp", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_stamp) <> vbString Then
      s_stmnote_tax_stamp = s_stmnote_tax_stamp / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4ea||4b5||2f0||fffd||3cc38||fffd||fffd||fffd| ,s_stmnote_tax_oth
Function s_stmnote_tax_oth(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_tax_oth = WindFunc("s_stmnote_tax_oth", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_tax_oth) <> vbString Then
      s_stmnote_tax_oth = s_stmnote_tax_oth / UnitVal_
    End If
End Function

'|fffd||5f7||fffd||1e9||fffd||5bb||fffd||fffd||2a6| ,s_ipo_audit_cpa
Function s_ipo_audit_cpa(WINDCODE_ As Variant) As Variant
    s_ipo_audit_cpa = WindFunc("s_ipo_audit_cpa", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||7f9||fffd||fffd||fffd||fffd||fffd| ,s_employee_mgmt
Function s_employee_mgmt(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_mgmt = WindFunc("s_employee_mgmt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2019/1/17
'|fffd||fffd|(|fffd||fffd|)|fffd||fffd||368||fffd||5b9||fffd||57c||fffd||fffd||fffd||fffd||fffd||fffd||368||fffd||271||fffd||fffd||fffd| ,s_share_pct_Ntofreefloat
Function s_share_pct_Ntofreefloat(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_share_pct_Ntofreefloat = WindFunc("s_share_pct_Ntofreefloat", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2019/3/7
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd| ,s_fa_netprofitcashcover
Function s_fa_netprofitcashcover(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_netprofitcashcover = WindFunc("s_fa_netprofitcashcover", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||1b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd| ,s_fa_errorcorrectiondate
Function s_fa_errorcorrectiondate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_errorcorrectiondate = WindFunc("s_fa_errorcorrectiondate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||1f7||fffd||fffd||fffd||6bb||fffd||1b2||fffd||fffd||fffd||fffd||fffd||fffd| ,s_fa_errorcorrectionornot
Function s_fa_errorcorrectionornot(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_errorcorrectionornot = WindFunc("s_fa_errorcorrectionornot", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|1f0||fffd||fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd| ,s_stmnote_salestop5_pct
Function s_stmnote_salestop5_pct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_salestop5_pct = WindFunc("s_stmnote_salestop5_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|1f0||fffd||fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||736||fffd| ,s_stmnote_salestop5
Function s_stmnote_salestop5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_salestop5 = WindFunc("s_stmnote_salestop5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_salestop5) <> vbString Then
      s_stmnote_salestop5 = s_stmnote_salestop5 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||46f||fffd||fffd||fffd||fffd||5b5||fffd||17c||fffd|(A|fffd||fffd|) ,s_ipo_inquirymv_min_a
Function s_ipo_inquirymv_min_a(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_inquirymv_min_a = WindFunc("s_ipo_inquirymv_min_a", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_inquirymv_min_a) <> vbString Then
      s_ipo_inquirymv_min_a = s_ipo_inquirymv_min_a / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4b5||52d||2bc||fffd||fffd||fffd||fffd| ,s_info_industry_sworigincode
Function s_info_industry_sworigincode(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_industry_sworigincode = WindFunc("s_info_industry_sworigincode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd| ,s_fa_netdebtratio
Function s_fa_netdebtratio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_netdebtratio = WindFunc("s_fa_netdebtratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||43e||fffd||fffd||fffd|PB(MRQ) ,pb_mrq
Function pb_mrq(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    pb_mrq = WindFunc("pb_mrq", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "P"), GetValidDate(TRADEDATE_))
End Function

'2019/3/20
'|fffd||fffd||fffd||133||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212505
Function s_qstmnote_insur_212505(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212505 = WindFunc("s_qstmnote_insur_212505", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212505) <> vbString Then
      s_qstmnote_insur_212505 = s_qstmnote_insur_212505 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||133||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212506
Function s_qstmnote_insur_212506(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212506 = WindFunc("s_qstmnote_insur_212506", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6fa||3f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212507
Function s_qstmnote_insur_212507(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212507 = WindFunc("s_qstmnote_insur_212507", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212507) <> vbString Then
      s_qstmnote_insur_212507 = s_qstmnote_insur_212507 / UnitVal_
    End If
End Function

'|fffd||6fa||3f3||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212508
Function s_qstmnote_insur_212508(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212508 = WindFunc("s_qstmnote_insur_212508", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212509
Function s_qstmnote_insur_212509(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212509 = WindFunc("s_qstmnote_insur_212509", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212509) <> vbString Then
      s_qstmnote_insur_212509 = s_qstmnote_insur_212509 / UnitVal_
    End If
End Function

'|fffd||3ff||fffd||fffd||2b2||fffd| ,s_qstmnote_insur_212512
Function s_qstmnote_insur_212512(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212512 = WindFunc("s_qstmnote_insur_212512", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212512) <> vbString Then
      s_qstmnote_insur_212512 = s_qstmnote_insur_212512 / UnitVal_
    End If
End Function

'|fffd||3ff||278||fffd||56e| ,s_qstmnote_insur_212513
Function s_qstmnote_insur_212513(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212513 = WindFunc("s_qstmnote_insur_212513", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212513) <> vbString Then
      s_qstmnote_insur_212513 = s_qstmnote_insur_212513 / UnitVal_
    End If
End Function

'|2b5||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212514
Function s_qstmnote_insur_212514(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212514 = WindFunc("s_qstmnote_insur_212514", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212514) <> vbString Then
      s_qstmnote_insur_212514 = s_qstmnote_insur_212514 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212515
Function s_qstmnote_insur_212515(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212515 = WindFunc("s_qstmnote_insur_212515", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212515) <> vbString Then
      s_qstmnote_insur_212515 = s_qstmnote_insur_212515 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||136||fffd||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212516
Function s_qstmnote_insur_212516(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212516 = WindFunc("s_qstmnote_insur_212516", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212516) <> vbString Then
      s_qstmnote_insur_212516 = s_qstmnote_insur_212516 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212517
Function s_qstmnote_insur_212517(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212517 = WindFunc("s_qstmnote_insur_212517", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212517) <> vbString Then
      s_qstmnote_insur_212517 = s_qstmnote_insur_212517 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212518
Function s_qstmnote_insur_212518(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212518 = WindFunc("s_qstmnote_insur_212518", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212518) <> vbString Then
      s_qstmnote_insur_212518 = s_qstmnote_insur_212518 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212519
Function s_qstmnote_insur_212519(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212519 = WindFunc("s_qstmnote_insur_212519", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212519) <> vbString Then
      s_qstmnote_insur_212519 = s_qstmnote_insur_212519 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212528
Function s_qstmnote_insur_212528(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212528 = WindFunc("s_qstmnote_insur_212528", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212528) <> vbString Then
      s_qstmnote_insur_212528 = s_qstmnote_insur_212528 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212520
Function s_qstmnote_insur_212520(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212520 = WindFunc("s_qstmnote_insur_212520", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212520) <> vbString Then
      s_qstmnote_insur_212520 = s_qstmnote_insur_212520 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd| ,s_qstmnote_insur_212527
Function s_qstmnote_insur_212527(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212527 = WindFunc("s_qstmnote_insur_212527", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212527) <> vbString Then
      s_qstmnote_insur_212527 = s_qstmnote_insur_212527 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||577||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||3fc||fffd| ,s_qstmnote_insur_212521
Function s_qstmnote_insur_212521(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212521 = WindFunc("s_qstmnote_insur_212521", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212521) <> vbString Then
      s_qstmnote_insur_212521 = s_qstmnote_insur_212521 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||577||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||3fc||fffd| ,s_qstmnote_insur_212522
Function s_qstmnote_insur_212522(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212522 = WindFunc("s_qstmnote_insur_212522", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212522) <> vbString Then
      s_qstmnote_insur_212522 = s_qstmnote_insur_212522 / UnitVal_
    End If
End Function

'|fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||3fc||fffd| ,s_qstmnote_insur_212523
Function s_qstmnote_insur_212523(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212523 = WindFunc("s_qstmnote_insur_212523", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212523) <> vbString Then
      s_qstmnote_insur_212523 = s_qstmnote_insur_212523 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||3fc||fffd| ,s_qstmnote_insur_212524
Function s_qstmnote_insur_212524(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212524 = WindFunc("s_qstmnote_insur_212524", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212524) <> vbString Then
      s_qstmnote_insur_212524 = s_qstmnote_insur_212524 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||577||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b1||fffd||fffd||3fc||fffd| ,s_qstmnote_insur_212546
Function s_qstmnote_insur_212546(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212546 = WindFunc("s_qstmnote_insur_212546", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212546) <> vbString Then
      s_qstmnote_insur_212546 = s_qstmnote_insur_212546 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||577||fffd||262||427||4e6||fffd||fffd||fffd||2b1||fffd||4aa||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212525
Function s_qstmnote_insur_212525(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212525 = WindFunc("s_qstmnote_insur_212525", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212525) <> vbString Then
      s_qstmnote_insur_212525 = s_qstmnote_insur_212525 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||57e||6fa||fffd||427||4e6||fffd||fffd||fffd||2b1||fffd||4aa||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212526
Function s_qstmnote_insur_212526(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212526 = WindFunc("s_qstmnote_insur_212526", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212526) <> vbString Then
      s_qstmnote_insur_212526 = s_qstmnote_insur_212526 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4bb||fffd||3b7||fffd||fffd||fffd||fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212529
Function s_qstmnote_insur_212529(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212529 = WindFunc("s_qstmnote_insur_212529", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd| ,s_qstmnote_insur_212530
Function s_qstmnote_insur_212530(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212530 = WindFunc("s_qstmnote_insur_212530", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212530) <> vbString Then
      s_qstmnote_insur_212530 = s_qstmnote_insur_212530 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd|1|fffd||fffd| ,s_qstmnote_insur_212531
Function s_qstmnote_insur_212531(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212531 = WindFunc("s_qstmnote_insur_212531", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212531) <> vbString Then
      s_qstmnote_insur_212531 = s_qstmnote_insur_212531 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd|2|fffd||fffd| ,s_qstmnote_insur_212532
Function s_qstmnote_insur_212532(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212532 = WindFunc("s_qstmnote_insur_212532", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212532) <> vbString Then
      s_qstmnote_insur_212532 = s_qstmnote_insur_212532 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd|3|fffd||fffd| ,s_qstmnote_insur_212533
Function s_qstmnote_insur_212533(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212533 = WindFunc("s_qstmnote_insur_212533", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212533) <> vbString Then
      s_qstmnote_insur_212533 = s_qstmnote_insur_212533 / UnitVal_
    End If
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:3|fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212534
Function s_qstmnote_insur_212534(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212534 = WindFunc("s_qstmnote_insur_212534", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:1|fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212535
Function s_qstmnote_insur_212535(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212535 = WindFunc("s_qstmnote_insur_212535", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:1|fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212536
Function s_qstmnote_insur_212536(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212536 = WindFunc("s_qstmnote_insur_212536", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:1-3|fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212537
Function s_qstmnote_insur_212537(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212537 = WindFunc("s_qstmnote_insur_212537", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:3-5|fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212538
Function s_qstmnote_insur_212538(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212538 = WindFunc("s_qstmnote_insur_212538", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||6fa||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:5|fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212539
Function s_qstmnote_insur_212539(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212539 = WindFunc("s_qstmnote_insur_212539", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||538||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||9fb0| ,s_qstmnote_insur_212540
Function s_qstmnote_insur_212540(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212540 = WindFunc("s_qstmnote_insur_212540", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||538||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||2fe||fffd||fffd||fffd||fffd|:|479||fffd||fffd||fffd||9fb0|1 ,s_qstmnote_insur_212541
Function s_qstmnote_insur_212541(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212541 = WindFunc("s_qstmnote_insur_212541", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||538||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||2fe||fffd||fffd||fffd||fffd|:|479||fffd||fffd||fffd||9fb0|2 ,s_qstmnote_insur_212542
Function s_qstmnote_insur_212542(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212542 = WindFunc("s_qstmnote_insur_212542", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||538||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||2fb||fffd|:|479||fffd||fffd||fffd||9fb0|1 ,s_qstmnote_insur_212543
Function s_qstmnote_insur_212543(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212543 = WindFunc("s_qstmnote_insur_212543", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||538||fffd||fffd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||2fb||fffd|:|479||fffd||fffd||fffd||9fb0|2 ,s_qstmnote_insur_212544
Function s_qstmnote_insur_212544(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_qstmnote_insur_212544 = WindFunc("s_qstmnote_insur_212544", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd|1|fffd||fffd|:|3b4||fffd||fffd|1|fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212547
Function s_qstmnote_insur_212547(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212547 = WindFunc("s_qstmnote_insur_212547", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212547) <> vbString Then
      s_qstmnote_insur_212547 = s_qstmnote_insur_212547 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd|1|fffd||fffd|:|3b4||fffd||fffd|2|fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212548
Function s_qstmnote_insur_212548(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212548 = WindFunc("s_qstmnote_insur_212548", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212548) <> vbString Then
      s_qstmnote_insur_212548 = s_qstmnote_insur_212548 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd|1|fffd||fffd|:|3b4||fffd||fffd|3|fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212549
Function s_qstmnote_insur_212549(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212549 = WindFunc("s_qstmnote_insur_212549", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212549) <> vbString Then
      s_qstmnote_insur_212549 = s_qstmnote_insur_212549 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5bd||fffd||fffd||fffd|:|fffd||fffd||fffd||fffd||fffd||57a||fffd||fffd|1|fffd||fffd|:|3b4||fffd||fffd|4|fffd||fffd||fffd||fffd| ,s_qstmnote_insur_212550
Function s_qstmnote_insur_212550(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_qstmnote_insur_212550 = WindFunc("s_qstmnote_insur_212550", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_qstmnote_insur_212550) <> vbString Then
      s_qstmnote_insur_212550 = s_qstmnote_insur_212550 / UnitVal_
    End If
End Function

'|4b5||fffd||fffd||524||fffd||fffd||fffd||5f4||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd| ,s_profitnotice_firstdate
Function s_profitnotice_firstdate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_profitnotice_firstdate = WindFunc("s_profitnotice_firstdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|4b5||fffd||fffd||fffd||cc68||fffd||fffd||fffd||fffd||fffd||fffd||b6||fffd||fffd||fffd||fffd| ,s_performanceexpress_lastdate
Function s_performanceexpress_lastdate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_performanceexpress_lastdate = WindFunc("s_performanceexpress_lastdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||73c||fffd| ,s_info_cfo
Function s_info_cfo(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_cfo = WindFunc("s_info_cfo", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_transactionfee
Function s_info_transactionfee(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_transactionfee = WindFunc("s_info_transactionfee", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_deliveryfee
Function s_info_deliveryfee(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_deliveryfee = WindFunc("s_info_deliveryfee", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||6bb||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_info_todaypositionfee
Function s_info_todaypositionfee(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_todaypositionfee = WindFunc("s_info_todaypositionfee", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'2019/5/5
'|fffd||fffd|1|fffd||73b||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_1w
Function f_nav_periodreturnranking_1w(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_1w = WindFunc("f_nav_periodreturnranking_1w", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|1|fffd||bb||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_1m
Function f_nav_periodreturnranking_1m(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_1m = WindFunc("f_nav_periodreturnranking_1m", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|3|fffd||bb||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_3m
Function f_nav_periodreturnranking_3m(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_3m = WindFunc("f_nav_periodreturnranking_3m", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|6|fffd||bb||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_6m
Function f_nav_periodreturnranking_6m(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_6m = WindFunc("f_nav_periodreturnranking_6m", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|1|fffd||fffd||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_1y
Function f_nav_periodreturnranking_1y(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_1y = WindFunc("f_nav_periodreturnranking_1y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|2|fffd||fffd||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_2y
Function f_nav_periodreturnranking_2y(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_2y = WindFunc("f_nav_periodreturnranking_2y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|3|fffd||fffd||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_3y
Function f_nav_periodreturnranking_3y(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_3y = WindFunc("f_nav_periodreturnranking_3y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|5|fffd||fffd||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_5y
Function f_nav_periodreturnranking_5y(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_5y = WindFunc("f_nav_periodreturnranking_5y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd|10|fffd||fffd||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_10y
Function f_nav_periodreturnranking_10y(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_10y = WindFunc("f_nav_periodreturnranking_10y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd||fffd||fffd||23b||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_y
Function f_nav_periodreturnranking_y(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_y = WindFunc("f_nav_periodreturnranking_y", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||631||fffd||fffd||fffd||fffd||fffd| ,f_nav_periodreturnranking_ytd
Function f_nav_periodreturnranking_ytd(WINDCODE_ As Variant, TRADEDATE_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_periodreturnranking_ytd = WindFunc("f_nav_periodreturnranking_ytd", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_), FundGroup_)
End Function

'|42d||fffd||1c78||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||6b9||739||fffd||123| ,f_info_managescaleinterval
Function f_info_managescaleinterval(WINDCODE_ As Variant, ManagementType_ As String) As Variant
    f_info_managescaleinterval = WindFunc("f_info_managescaleinterval", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), ManagementType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||176||fffd||fffd| ,s_credit_line
Function s_credit_line(WINDCODE_ As Variant) As Variant
    s_credit_line = WindFunc("s_credit_line", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_credit_linedate
Function s_credit_linedate(WINDCODE_ As Variant) As Variant
    s_credit_linedate = WindFunc("s_credit_linedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||3b4||2b9||fffd||fffd||fffd||fffd||fffd||176||fffd||fffd| ,s_credit_lineunused
Function s_credit_lineunused(WINDCODE_ As Variant) As Variant
    s_credit_lineunused = WindFunc("s_credit_lineunused", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2b9||fffd||fffd||fffd||fffd||fffd||176||fffd||fffd| ,s_credit_lineused
Function s_credit_lineused(WINDCODE_ As Variant) As Variant
    s_credit_lineused = WindFunc("s_credit_lineused", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||2b7||fffd||fffd||fffd||176||fffd||fffd| ,s_credit_formerline
Function s_credit_formerline(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_credit_formerline = WindFunc("s_credit_formerline", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||2b7||fffd||fffd||2b9||fffd||fffd||fffd||fffd||fffd||176||fffd||fffd| ,s_credit_lineused2
Function s_credit_lineused2(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_credit_lineused2 = WindFunc("s_credit_lineused2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|) ,s_fina_mat
Function s_fina_mat(WINDCODE_ As Variant, TermType_ As Integer) As Variant
    s_fina_mat = WindFunc("s_fina_mat", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), TermType_)
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||13f| ,s_fina_remainingnumber
Function s_fina_remainingnumber(WINDCODE_ As Variant, BondType_ As Integer) As Variant
    s_fina_remainingnumber = WindFunc("s_fina_remainingnumber", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), BondType_)
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd| ,s_fina_totalamount
Function s_fina_totalamount(WINDCODE_ As Variant, BondType_ As Integer) As Variant
    s_fina_totalamount = WindFunc("s_fina_totalamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), BondType_)
End Function

'|fffd||fffd||fffd||4de2||fffd||fffd||56e||22f||fffd||736||fffd| ,s_fina_totalamount2
Function s_fina_totalamount2(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, BondType_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    s_fina_totalamount2 = WindFunc("s_fina_totalamount2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_), BondType_)
    If VarType(s_fina_totalamount2) <> vbString Then
      s_fina_totalamount2 = s_fina_totalamount2 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4de2||fffd||fffd||56e||22f||fffd||fffd||13f| ,s_fina_totalnumber
Function s_fina_totalnumber(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, BondType_ As Integer) As Variant
    s_fina_totalnumber = WindFunc("s_fina_totalnumber", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(DATE_), BondType_)
End Function

'|fffd||fffd||fffd||fffd||56e||22f||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|) ,s_fina_totalamout_anytime
Function s_fina_totalamout_anytime(WINDCODE_ As Variant, DEALDATE_ As Variant, BondType_ As Integer) As Variant
    s_fina_totalamout_anytime = WindFunc("s_fina_totalamout_anytime", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(DEALDATE_), BondType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_rate_latestissurercreditrating
Function s_rate_latestissurercreditrating(WINDCODE_ As Variant) As Variant
    s_rate_latestissurercreditrating = WindFunc("s_rate_latestissurercreditrating", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_rate_latestissurercreditratingdate
Function s_rate_latestissurercreditratingdate(WINDCODE_ As Variant) As Variant
    s_rate_latestissurercreditratingdate = WindFunc("s_rate_latestissurercreditratingdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_rate_latestissurercreditratingtype
Function s_rate_latestissurercreditratingtype(WINDCODE_ As Variant) As Variant
    s_rate_latestissurercreditratingtype = WindFunc("s_rate_latestissurercreditratingtype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_rate_lowestissurercreditrating
Function s_rate_lowestissurercreditrating(WINDCODE_ As Variant) As Variant
    s_rate_lowestissurercreditrating = WindFunc("s_rate_lowestissurercreditrating", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd| ,s_rate_ratingoutlooks
Function s_rate_ratingoutlooks(WINDCODE_ As Variant) As Variant
    s_rate_ratingoutlooks = WindFunc("s_rate_ratingoutlooks", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd| ,s_rate_lateissuerchng
Function s_rate_lateissuerchng(WINDCODE_ As Variant) As Variant
    s_rate_lateissuerchng = WindFunc("s_rate_lateissuerchng", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_rate_latestissurercreditrating2
Function s_rate_latestissurercreditrating2(WINDCODE_ As Variant, TRADEDATE_ As Variant, RATINGAGENCY_ As String, RatedCompanyType_ As Byte) As Variant
    s_rate_latestissurercreditrating2 = WindFunc("s_rate_latestissurercreditrating2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), RATINGAGENCY_, RatedCompanyType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_rate_agencyissuer
Function s_rate_agencyissuer(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    s_rate_agencyissuer = WindFunc("s_rate_agencyissuer", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4daf||fffd||fffd||fffd||fffd| ,s_rate_chngissuer
Function s_rate_chngissuer(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    s_rate_chngissuer = WindFunc("s_rate_chngissuer", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||579||fffd||fffd| ,s_rate_fwdissuer
Function s_rate_fwdissuer(WINDCODE_ As Variant, TRADEDATE_ As Variant, RatedCompanyType_ As Byte, RATINGAGENCY_ As String) As Variant
    s_rate_fwdissuer = WindFunc("s_rate_fwdissuer", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), RatedCompanyType_, RATINGAGENCY_)
End Function

'|5b8||fffd||fffd||376||fffd||2b9||fffd||1b1||fffd||fffd||5b5| ,f_prt_stockvalue_passiveinvest
Function f_prt_stockvalue_passiveinvest(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_stockvalue_passiveinvest = WindFunc("f_prt_stockvalue_passiveinvest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_stockvalue_passiveinvest) <> vbString Then
      f_prt_stockvalue_passiveinvest = f_prt_stockvalue_passiveinvest / UnitVal_
    End If
End Function

'|5b8||fffd||fffd||376||fffd||2b9||fffd||1b1||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_stocktonav_passiveinvest
Function f_prt_stocktonav_passiveinvest(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_stocktonav_passiveinvest = WindFunc("f_prt_stocktonav_passiveinvest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||376||fffd||2b9||fffd||1b1||fffd||fffd||5b5| ,f_prt_stockvalue_activeinvest
Function f_prt_stockvalue_activeinvest(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_prt_stockvalue_activeinvest = WindFunc("f_prt_stockvalue_activeinvest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_prt_stockvalue_activeinvest) <> vbString Then
      f_prt_stockvalue_activeinvest = f_prt_stockvalue_activeinvest / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||376||fffd||2b9||fffd||1b1||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_stocktonav_activeinvest
Function f_prt_stocktonav_activeinvest(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_stocktonav_activeinvest = WindFunc("f_prt_stocktonav_activeinvest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_pchredm_pchminamt_floor
Function f_pchredm_pchminamt_floor(WINDCODE_ As Variant) As Variant
    f_pchredm_pchminamt_floor = WindFunc("f_pchredm_pchminamt_floor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|5ea||56e||fffd||fffd||3e2||fffd||fffd||fffd||fffd| ,s_cb_carrydate
Function s_cb_carrydate(WINDCODE_ As Variant) As Variant
    s_cb_carrydate = WindFunc("s_cb_carrydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd| ,s_cb_code
Function s_cb_code(WINDCODE_ As Variant) As Variant
    s_cb_code = WindFunc("s_cb_code", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||f5||23c||fffd| ,s_cb_creditrating
Function s_cb_creditrating(WINDCODE_ As Variant) As Variant
    s_cb_creditrating = WindFunc("s_cb_creditrating", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||ae36||3e2||fffd||fffd||fffd||fffd| ,s_cb_interestfrequency
Function s_cb_interestfrequency(WINDCODE_ As Variant) As Variant
    s_cb_interestfrequency = WindFunc("s_cb_interestfrequency", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_interesttype
Function s_cb_interesttype(WINDCODE_ As Variant) As Variant
    s_cb_interesttype = WindFunc("s_cb_interesttype", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||43c||6f8||fffd| ,s_cb_issueprice
Function s_cb_issueprice(WINDCODE_ As Variant) As Variant
    s_cb_issueprice = WindFunc("s_cb_issueprice", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd| ,s_cb_name
Function s_cb_name(WINDCODE_ As Variant) As Variant
    s_cb_name = WindFunc("s_cb_name", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||5b5| ,s_cb_par
Function s_cb_par(WINDCODE_ As Variant) As Variant
    s_cb_par = WindFunc("s_cb_par", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd| ,s_cb_interest
Function s_cb_interest(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_cb_interest = WindFunc("s_cb_interest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd||fffd||736||fffd| ,s_cb_issueamount
Function s_cb_issueamount(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_cb_issueamount = WindFunc("s_cb_issueamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_cb_issueamount) <> vbString Then
      s_cb_issueamount = s_cb_issueamount / UnitVal_
    End If
End Function

'|5ea||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_maturitydate
Function s_cb_maturitydate(WINDCODE_ As Variant) As Variant
    s_cb_maturitydate = WindFunc("s_cb_maturitydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_term
Function s_cb_term(WINDCODE_ As Variant) As Variant
    s_cb_term = WindFunc("s_cb_term", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_list_annocedate
Function s_cb_list_annocedate(WINDCODE_ As Variant) As Variant
    s_cb_list_annocedate = WindFunc("s_cb_list_annocedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||439||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_list_announcedate
Function s_cb_list_announcedate(WINDCODE_ As Variant) As Variant
    s_cb_list_announcedate = WindFunc("s_cb_list_announcedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||376||fffd||fffd||fffd||7f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_list_dateinstoff
Function s_cb_list_dateinstoff(WINDCODE_ As Variant) As Variant
    s_cb_list_dateinstoff = WindFunc("s_cb_list_dateinstoff", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||3f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_list_dtonl
Function s_cb_list_dtonl(WINDCODE_ As Variant) As Variant
    s_cb_list_dtonl = WindFunc("s_cb_list_dtonl", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||fffd||fffd||fffd||3af||fffd||fffd||fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_list_permitdate
Function s_cb_list_permitdate(WINDCODE_ As Variant) As Variant
    s_cb_list_permitdate = WindFunc("s_cb_list_permitdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||3f9||276||fffd||fffd||fffd||fffd||6f9||fffd||228||fffd||1fc||fffd||fffd||fffd| ,s_cb_list_rationchkindate
Function s_cb_list_rationchkindate(WINDCODE_ As Variant) As Variant
    s_cb_list_rationchkindate = WindFunc("s_cb_list_rationchkindate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||3f9||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_cb_list_rationdate
Function s_cb_list_rationdate(WINDCODE_ As Variant) As Variant
    s_cb_list_rationdate = WindFunc("s_cb_list_rationdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|5ea||56e||fffd||3f9||276||fffd||fffd||fffd||fffd||6fd||27f||fffd||fffd||fffd| ,s_cb_list_rationpaymtdate
Function s_cb_list_rationpaymtdate(WINDCODE_ As Variant) As Variant
    s_cb_list_rationpaymtdate = WindFunc("s_cb_list_rationpaymtdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'2019/6/5
'|fffd||1f7||fffd||fffd||fffd||3b4||4ef||fffd||fffd| ,s_info_earning
Function s_info_earning(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_earning = WindFunc("s_info_earning", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||376||1b1||228||fffd||fffd||fffd||fffd| ,s_info_vote
Function s_info_vote(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_vote = WindFunc("s_info_vote", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||477||fffd||fffd||fffd|DR|fffd||fffd||fffd||fffd| ,s_share_dr
Function s_share_dr(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_share_dr = WindFunc("s_share_dr", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_share_dr) <> vbString Then
      s_share_dr = s_share_dr / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5a4||22f|Wind|fffd||fffd||fffd||fffd| ,s_info_underlyingwindcode
Function s_info_underlyingwindcode(WINDCODE_ As Variant) As Variant
    s_info_underlyingwindcode = WindFunc("s_info_underlyingwindcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||43b||fffd||fffd||fffd| ,s_info_depositarybank
Function s_info_depositarybank(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_depositarybank = WindFunc("s_info_depositarybank", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||4fbb||5b5||fffd||fffd||53d||fffd||fffd||5fc||fffd||fffd||fffd||fffd||1b5||fffd||fffd|(|fffd||677||5b1||fffd|) ,f_nav_navoverbenchreturn_freq2
Function f_nav_navoverbenchreturn_freq2(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 2) As Variant
    f_nav_navoverbenchreturn_freq2 = WindFunc("f_nav_navoverbenchreturn_freq2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||677||fffd|) ,f_info_name_official
Function f_info_name_official(WINDCODE_ As Variant) As Variant
    f_info_name_official = WindFunc("f_info_name_official", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||7b6||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_massredemptionprovision
Function f_info_massredemptionprovision(WINDCODE_ As Variant) As Variant
    f_info_massredemptionprovision = WindFunc("f_info_massredemptionprovision", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||433||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be| ,f_info_marketrisk
Function f_info_marketrisk(WINDCODE_ As Variant) As Variant
    f_info_marketrisk = WindFunc("f_info_marketrisk", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be| ,f_info_managementrisk
Function f_info_managementrisk(WINDCODE_ As Variant) As Variant
    f_info_managementrisk = WindFunc("f_info_managementrisk", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be| ,f_info_technicalrisk
Function f_info_technicalrisk(WINDCODE_ As Variant) As Variant
    f_info_technicalrisk = WindFunc("f_info_technicalrisk", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||637||fffd||fffd||fffd||fffd||fffd||2be| ,f_info_redemptionrisk
Function f_info_redemptionrisk(WINDCODE_ As Variant) As Variant
    f_info_redemptionrisk = WindFunc("f_info_redemptionrisk", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2be| ,f_info_otherrisks
Function f_info_otherrisks(WINDCODE_ As Variant) As Variant
    f_info_otherrisks = WindFunc("f_info_otherrisks", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||2fd||13c|,|376||fffd||2b2||fffd||fffd||fffd|) ,f_nav_xtqperiodreturnranking2
Function f_nav_xtqperiodreturnranking2(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, FundGroup_ As Integer) As Variant
    f_nav_xtqperiodreturnranking2 = WindFunc("f_nav_xtqperiodreturnranking2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), FundGroup_)
End Function

'|fffd||fffd||363||fffd||fffd| ,s_dq_maxup
Function s_dq_maxup(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_maxup = WindFunc("s_dq_maxup", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||363||fffd||fffd| ,s_dq_maxdown
Function s_dq_maxdown(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_dq_maxdown = WindFunc("s_dq_maxdown", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_85
Function s_qstm07_is_85(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_85 = WindFunc("s_qstm07_is_85", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_85) <> vbString Then
      s_qstm07_is_85 = s_qstm07_is_85 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||4b5||fffd||fffd||271||fffd| ,s_qstm07_is_86
Function s_qstm07_is_86(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_86 = WindFunc("s_qstm07_is_86", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_86) <> vbString Then
      s_qstm07_is_86 = s_qstm07_is_86 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd| ,s_qstm07_is_24
Function s_qstm07_is_24(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_qstm07_is_24 = WindFunc("s_qstm07_is_24", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_qstm07_is_24) <> vbString Then
      s_qstm07_is_24 = s_qstm07_is_24 / UnitVal_
    End If
End Function

'|fffd||fffd||3bb||fffd||fffd||5b5|(|fffd||fffd||1f0||fffd||fffd|) ,hq_nav_unit
Function hq_nav_unit(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    hq_nav_unit = WindFunc("hq_nav_unit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_))
End Function

'2019/6/10
'|fffd||fffd||421||fffd||4daf||fffd||fffd||3bb|(|5a7||fffd||fffd||fffd||fffd||2b7|) ,s_info_mfprice1
Function s_info_mfprice1(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_info_mfprice1 = WindFunc("s_info_mfprice1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'CTD(|5a7||fffd||fffd||fffd||fffd||2b7|) ,b_tbf_CTD2
Function b_tbf_CTD2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional ExchangeType_ As String = "NIB", Optional PriceType_ As Byte) As Variant
    b_tbf_CTD2 = WindFunc("b_tbf_CTD2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), ExchangeType_, PriceType_)
End Function

'2019/6/13
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5f4||fffd||3a5||53c||fffd||fffd| ,b_info_issuerfirstdefaultdate
Function b_info_issuerfirstdefaultdate(WINDCODE_ As Variant) As Variant
    b_info_issuerfirstdefaultdate = WindFunc("b_info_issuerfirstdefaultdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|56e||22f||fffd||fffd||fffd||fffd||5f4||32c| ,b_credit_bondcreditstatus
Function b_credit_bondcreditstatus(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_credit_bondcreditstatus = WindFunc("b_credit_bondcreditstatus", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'2019/7/5
'|fffd||fffd||fffd||fffd||fffd||ae7a||fffd||27f||fffd||fffd||fffd| ,s_ipo_cappaydate
Function s_ipo_cappaydate(WINDCODE_ As Variant) As Variant
    s_ipo_cappaydate = WindFunc("s_ipo_cappaydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||4bb||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_lastopenday
Function f_info_lastopenday(WINDCODE_ As Variant) As Variant
    f_info_lastopenday = WindFunc("f_info_lastopenday", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||3fab7||fffd||fffd||fffd|(|5a7||fffd||fffd||fffd||fffd||2b7|) ,f_info_opendays
Function f_info_opendays(WINDCODE_ As Variant, N_ As Integer) As Variant
    f_info_opendays = WindFunc("f_info_opendays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), N_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||47f||fffd||fffd||174||fffd||fffd||fffd| ,f_info_numofopendays
Function f_info_numofopendays(WINDCODE_ As Variant) As Variant
    f_info_numofopendays = WindFunc("f_info_numofopendays", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd| ,f_prt_currency
Function f_prt_currency(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_prt_currency = WindFunc("f_prt_currency", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||5bc||fffd||fffd||fffd||fffd||fffd| ,f_info_smftype2
Function f_info_smftype2(WINDCODE_ As Variant) As Variant
    f_info_smftype2 = WindFunc("f_info_smftype2", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'2019/7/8
'|fffd||1f7||718f1||fffd| ,f_info_guaranteedornot
Function f_info_guaranteedornot(WINDCODE_ As Variant) As Variant
    f_info_guaranteedornot = WindFunc("f_info_guaranteedornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||575||23c||fffd|(|fffd||fffd||fffd||fffd|) ,f_info_lcrisklevel
Function f_info_lcrisklevel(WINDCODE_ As Variant) As Variant
    f_info_lcrisklevel = WindFunc("f_info_lcrisklevel", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1b7||fffd||fffd||575||23c||fffd|(Wind) ,f_info_lcrisklevelwind
Function f_info_lcrisklevelwind(WINDCODE_ As Variant) As Variant
    f_info_lcrisklevelwind = WindFunc("f_info_lcrisklevelwind", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||1b7||fffd||fffd||fffd||fffd||fffd||fffd||2bd| ,f_info_operationmode
Function f_info_operationmode(WINDCODE_ As Variant) As Variant
    f_info_operationmode = WindFunc("f_info_operationmode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|4b5||fffd||fffd||123||2bd| ,f_info_businessmode
Function f_info_businessmode(WINDCODE_ As Variant) As Variant
    f_info_businessmode = WindFunc("f_info_businessmode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||1b7||fffd||cce3||5f4||32c| ,f_info_exceptionstatus
Function f_info_exceptionstatus(WINDCODE_ As Variant) As Variant
    f_info_exceptionstatus = WindFunc("f_info_exceptionstatus", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd| ,f_info_returnstartdate
Function f_info_returnstartdate(WINDCODE_ As Variant) As Variant
    f_info_returnstartdate = WindFunc("f_info_returnstartdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b9||fffd||fffd| ,f_info_returnenddate
Function f_info_returnenddate(WINDCODE_ As Variant) As Variant
    f_info_returnenddate = WindFunc("f_info_returnenddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|2b5||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_actualduration
Function f_info_actualduration(WINDCODE_ As Variant) As Variant
    f_info_actualduration = WindFunc("f_info_actualduration", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|3af||fffd||43d||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_maxsubscripamount
Function f_info_maxsubscripamount(WINDCODE_ As Variant) As Variant
    f_info_maxsubscripamount = WindFunc("f_info_maxsubscripamount", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|2b5||fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_actualannualyield
Function f_info_actualannualyield(WINDCODE_ As Variant) As Variant
    f_info_actualannualyield = WindFunc("f_info_actualannualyield", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|2b5||fffd||2b5||fffd||fffd||fffd||fffd||fffd| ,f_info_actualmaturitydate
Function f_info_actualmaturitydate(WINDCODE_ As Variant) As Variant
    f_info_actualmaturitydate = WindFunc("f_info_actualmaturitydate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||3e2||fffd||fffd||2bd||2f5||fffd||fffd| ,f_info_interestpaymethod
Function f_info_interestpaymethod(WINDCODE_ As Variant) As Variant
    f_info_interestpaymethod = WindFunc("f_info_interestpaymethod", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_fundarrivaldays
Function f_info_fundarrivaldays(WINDCODE_ As Variant) As Variant
    f_info_fundarrivaldays = WindFunc("f_info_fundarrivaldays", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||1f0||fffd||fffd||5b9| ,f_info_earlyterminationornot
Function f_info_earlyterminationornot(WINDCODE_ As Variant) As Variant
    f_info_earlyterminationornot = WindFunc("f_info_earlyterminationornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||1f0||fffd||fffd||5b9||fffd||fffd||fffd||fffd| ,f_info_cndpretermination
Function f_info_cndpretermination(WINDCODE_ As Variant) As Variant
    f_info_cndpretermination = WindFunc("f_info_cndpretermination", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||ae7a||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_cndpurchredemption
Function f_info_cndpurchredemption(WINDCODE_ As Variant) As Variant
    f_info_cndpurchredemption = WindFunc("f_info_cndpurchredemption", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||47a| ,f_info_pledgableornot
Function f_info_pledgableornot(WINDCODE_ As Variant) As Variant
    f_info_pledgableornot = WindFunc("f_info_pledgableornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||4b9||fffd||fffd||fffd||fffd| ,f_info_underlyingtarget
Function f_info_underlyingtarget(WINDCODE_ As Variant) As Variant
    f_info_underlyingtarget = WindFunc("f_info_underlyingtarget", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||4aa||fffd||fffd||fffd||575||fffd| ,f_info_mainrisk
Function f_info_mainrisk(WINDCODE_ As Variant) As Variant
    f_info_mainrisk = WindFunc("f_info_mainrisk", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||1f7||fffd|CDR(|fffd||fffd||fffd||fffd||368|) ,s_info_cdrornot
Function s_info_cdrornot(WINDCODE_ As Variant) As Variant
    s_info_cdrornot = WindFunc("s_info_cdrornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||33a||fffd||27d||fffd||fffd||fffd| ,s_dq_volume_aht
Function s_dq_volume_aht(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_volume_aht = WindFunc("s_dq_volume_aht", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_volume_aht) <> vbString Then
      s_dq_volume_aht = s_dq_volume_aht / UnitVal_
    End If
End Function

'|fffd||33a||fffd||27d||fffd||fffd||fffd| ,s_dq_amount_aht
Function s_dq_amount_aht(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_amount_aht = WindFunc("s_dq_amount_aht", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_amount_aht) <> vbString Then
      s_dq_amount_aht = s_dq_amount_aht / UnitVal_
    End If
End Function

'2019/7/9
'|fffd||fffd||fffd||fffd||fffd||1b4||fffd||fffd||fffd||fffd||fffd||fffd||431||fffd||5fc| ,s_info_liststd
Function s_info_liststd(WINDCODE_ As Variant) As Variant
    s_info_liststd = WindFunc("s_info_liststd", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||57d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2f2||fffd||4b5||fffd||fffd||fffd||fffd| ,s_info_sei
Function s_info_sei(WINDCODE_ As Variant, TRADEDATE_ As Variant, TYPE_ As Integer) As Variant
    s_info_sei = WindFunc("s_info_sei", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), TYPE_)
End Function

'2019/8/5 |328||fffd||fffd||5b8||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||4ea||fffd||fffd||5ae||fffd||5bd||fffd||fffd||fffd||fffd||fffd| ,tws_qstm_cs
Function tws_qstm_cs(WINDCODE_ As Variant, Optional ITEMSCODE_ As Integer = 7210, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_qstm_cs = WindFunc("tws_qstm_cs", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), ITEMSCODE_, Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_qstm_cs) <> vbString Then
      tws_qstm_cs = tws_qstm_cs / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||4ea||fffd||fffd||fffd||fffd|(|2f0||1f0|) ,tws_qstm_is
Function tws_qstm_is(WINDCODE_ As Variant, Optional ITEMSCODE_ As Integer = 3900, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_qstm_is = WindFunc("tws_qstm_is", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), ITEMSCODE_, Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_qstm_is) <> vbString Then
      tws_qstm_is = tws_qstm_is / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||3fc||fffd| ,tws_stm_bs
Function tws_stm_bs(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_stm_bs = WindFunc("tws_stm_bs", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), ITEMSCODE_, GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_stm_bs) <> vbString Then
      tws_stm_bs = tws_stm_bs / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||6b2||fffd||fffd||fffd||fffd||5bd||fffd||fffd||fffd||fffd||fffd| ,tws_stm_cs
Function tws_stm_cs(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_stm_cs = WindFunc("tws_stm_cs", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), ITEMSCODE_, GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_stm_cs) <> vbString Then
      tws_stm_cs = tws_stm_cs / UnitVal_
    End If
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd| ,tws_stm_is
Function tws_stm_is(WINDCODE_ As Variant, ITEMSCODE_ As Integer, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_stm_is = WindFunc("tws_stm_is", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), ITEMSCODE_, GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_stm_is) <> vbString Then
      tws_stm_is = tws_stm_is / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||433||fffd| ,tws_info_mkt
Function tws_info_mkt(WINDCODE_ As Variant) As Variant
    tws_info_mkt = WindFunc("tws_info_mkt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||b7||fffd| ,tws_info_emm
Function tws_info_emm(WINDCODE_ As Variant) As Variant
    tws_info_emm = WindFunc("tws_info_emm", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'ISIN|fffd||fffd||fffd||fffd| ,tws_info_isincode
Function tws_info_isincode(WINDCODE_ As Variant) As Variant
    tws_info_isincode = WindFunc("tws_info_isincode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||7ef0| ,tws_info_phone
Function tws_info_phone(WINDCODE_ As Variant) As Variant
    tws_info_phone = WindFunc("tws_info_phone", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd| ,tws_info_fax
Function tws_info_fax(WINDCODE_ As Variant) As Variant
    tws_info_fax = WindFunc("tws_info_fax", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||5b7| ,tws_info_website
Function tws_info_website(WINDCODE_ As Variant) As Variant
    tws_info_website = WindFunc("tws_info_website", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||b3||fffd| ,tws_info_chairman
Function tws_info_chairman(WINDCODE_ As Variant) As Variant
    tws_info_chairman = WindFunc("tws_info_chairman", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||73e||fffd||fffd||fffd| ,tws_info_president
Function tws_info_president(WINDCODE_ As Variant) As Variant
    tws_info_president = WindFunc("tws_info_president", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd| ,tws_info_spokes
Function tws_info_spokes(WINDCODE_ As Variant) As Variant
    tws_info_spokes = WindFunc("tws_info_spokes", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd| ,tws_info_cfo
Function tws_info_cfo(WINDCODE_ As Variant) As Variant
    tws_info_cfo = WindFunc("tws_info_cfo", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|531||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_info_employee
Function tws_info_employee(WINDCODE_ As Variant) As Variant
    tws_info_employee = WindFunc("tws_info_employee", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_info_founddate
Function tws_info_founddate(WINDCODE_ As Variant) As Variant
    tws_info_founddate = WindFunc("tws_info_founddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_info_listeddate
Function tws_info_listeddate(WINDCODE_ As Variant) As Variant
    tws_info_listeddate = WindFunc("tws_info_listeddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||3f9||fffd||fffd||fffd||fffd||fffd| ,tws_info_listotc
Function tws_info_listotc(WINDCODE_ As Variant) As Variant
    tws_info_listotc = WindFunc("tws_info_listotc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_info_unlistdate
Function tws_info_unlistdate(WINDCODE_ As Variant) As Variant
    tws_info_unlistdate = WindFunc("tws_info_unlistdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||4b5|(TSE|fffd||fffd||4b5|) ,tws_info_industry_tse
Function tws_info_industry_tse(WINDCODE_ As Variant) As Variant
    tws_info_industry_tse = WindFunc("tws_info_industry_tse", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||4aa||fffd||fffd||1b7|1 ,tws_info_product1
Function tws_info_product1(WINDCODE_ As Variant) As Variant
    tws_info_product1 = WindFunc("tws_info_product1", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||4aa||fffd||fffd||1b7|2 ,tws_info_product2
Function tws_info_product2(WINDCODE_ As Variant) As Variant
    tws_info_product2 = WindFunc("tws_info_product2", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||4aa||fffd||fffd||1b7|3 ,tws_info_product3
Function tws_info_product3(WINDCODE_ As Variant) As Variant
    tws_info_product3 = WindFunc("tws_info_product3", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||4aa||fffd||fffd||1b7||fffd||fffd||fffd||fffd| ,tws_info_product_c
Function tws_info_product_c(WINDCODE_ As Variant) As Variant
    tws_info_product_c = WindFunc("tws_info_product_c", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_info_compname
Function tws_info_compname(WINDCODE_ As Variant) As Variant
    tws_info_compname = WindFunc("tws_info_compname", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||2fe||4e2||fffd||fffd||22b||fffd||fffd| ,tws_info_compnameeng
Function tws_info_compnameeng(WINDCODE_ As Variant) As Variant
    tws_info_compnameeng = WindFunc("tws_info_compnameeng", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||2fe||fffd||fffd||5b7| ,tws_info_office
Function tws_info_office(WINDCODE_ As Variant) As Variant
    tws_info_office = WindFunc("tws_info_office", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd| ,tws_dir_ds_sharenum
Function tws_dir_ds_sharenum(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional UnitVal_ As Double = 1) As Variant
    tws_dir_ds_sharenum = WindFunc("tws_dir_ds_sharenum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
    If VarType(tws_dir_ds_sharenum) <> vbString Then
      tws_dir_ds_sharenum = tws_dir_ds_sharenum / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5b9||271||fffd||fffd||fffd| ,tws_dir_ds_sharepct
Function tws_dir_ds_sharepct(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_ds_sharepct = WindFunc("tws_dir_ds_sharepct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2f3||5b9||fffd||fffd||fffd||fffd||fffd| ,tws_dir_mag_sharenum
Function tws_dir_mag_sharenum(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional UnitVal_ As Double = 1) As Variant
    tws_dir_mag_sharenum = WindFunc("tws_dir_mag_sharenum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
    If VarType(tws_dir_mag_sharenum) <> vbString Then
      tws_dir_mag_sharenum = tws_dir_mag_sharenum / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||2f3||5b9||271||fffd||fffd||fffd| ,tws_dir_mag_sharepct
Function tws_dir_mag_sharepct(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_mag_sharepct = WindFunc("tws_dir_mag_sharepct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_ds_pledged
Function tws_dir_ds_pledged(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional UnitVal_ As Double = 1) As Variant
    tws_dir_ds_pledged = WindFunc("tws_dir_ds_pledged", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
    If VarType(tws_dir_ds_pledged) <> vbString Then
      tws_dir_ds_pledged = tws_dir_ds_pledged / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||47a||fffd||271||fffd||fffd||fffd| ,tws_dir_ds_pledgedpct
Function tws_dir_ds_pledgedpct(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_ds_pledgedpct = WindFunc("tws_dir_ds_pledgedpct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||b3||5b9||fffd||fffd||fffd||fffd||fffd| ,tws_dir_d_sharenum
Function tws_dir_d_sharenum(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional UnitVal_ As Double = 1) As Variant
    tws_dir_d_sharenum = WindFunc("tws_dir_d_sharenum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
    If VarType(tws_dir_d_sharenum) <> vbString Then
      tws_dir_d_sharenum = tws_dir_d_sharenum / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd| ,tws_dir_s_sharenum
Function tws_dir_s_sharenum(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional UnitVal_ As Double = 1) As Variant
    tws_dir_s_sharenum = WindFunc("tws_dir_s_sharenum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
    If VarType(tws_dir_s_sharenum) <> vbString Then
      tws_dir_s_sharenum = tws_dir_s_sharenum / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_d_num
Function tws_dir_d_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_d_num = WindFunc("tws_dir_d_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||b3||fffd||fffd||fffd||fffd||fffd| ,tws_dir_td_num
Function tws_dir_td_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_td_num = WindFunc("tws_dir_td_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||b3||fffd||fffd||fffd||fffd||fffd| ,tws_dir_vtd_num
Function tws_dir_vtd_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_vtd_num = WindFunc("tws_dir_vtd_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_od_num
Function tws_dir_od_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_od_num = WindFunc("tws_dir_od_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|4bb||fffd||3dad||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_dp_num
Function tws_dir_dp_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_dp_num = WindFunc("tws_dir_dp_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_s_num
Function tws_dir_s_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_s_num = WindFunc("tws_dir_s_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||739||fffd||fffd||fffd| ,tws_share_total
Function tws_share_total(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_share_total = WindFunc("tws_share_total", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_share_total) <> vbString Then
      tws_share_total = tws_share_total / UnitVal_
    End If
End Function

'|fffd||fffd||7fc||fffd| ,tws_dq_high
Function tws_dq_high(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_dq_high = WindFunc("tws_dq_high", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||37c||fffd| ,tws_dq_low
Function tws_dq_low(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_dq_low = WindFunc("tws_dq_low", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||33c||fffd| ,tws_dq_close
Function tws_dq_close(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_dq_close = WindFunc("tws_dq_close", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||27d||fffd||fffd||fffd| ,tws_dq_volume
Function tws_dq_volume(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_dq_volume = WindFunc("tws_dq_volume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_dq_volume) <> vbString Then
      tws_dq_volume = tws_dq_volume / UnitVal_
    End If
End Function

'|fffd||27d||fffd||fffd||fffd| ,tws_dq_amount
Function tws_dq_amount(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_dq_amount = WindFunc("tws_dq_amount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
    If VarType(tws_dq_amount) <> vbString Then
      tws_dq_amount = tws_dq_amount / UnitVal_
    End If
End Function

'|fffd||1f5||fffd| ,tws_dq_change
Function tws_dq_change(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_change = WindFunc("tws_dq_change", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||1f5||fffd||fffd||fffd| ,tws_dq_pctchange
Function tws_dq_pctchange(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_pctchange = WindFunc("tws_dq_pctchange", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dq_turn
Function tws_dq_turn(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_turn = WindFunc("tws_dq_turn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd| ,tws_dq_closebid
Function tws_dq_closebid(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    tws_dq_closebid = WindFunc("tws_dq_closebid", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||2be||fffd||fffd||fffd||fffd| ,tws_dq_closeask
Function tws_dq_closeask(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    tws_dq_closeask = WindFunc("tws_dq_closeask", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||27d||fffd||fffd||fffd||fffd||fffd| ,tws_dq_ticks
Function tws_dq_ticks(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_ticks = WindFunc("tws_dq_ticks", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||1f5||fffd||363| ,tws_dq_limit
Function tws_dq_limit(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_limit = WindFunc("tws_dq_limit", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|5e2||fffd||fffd||fffd||1b1|(A) ,tws_dq_notice_a
Function tws_dq_notice_a(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_notice_a = WindFunc("tws_dq_notice_a", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||f9||fffd||1b1|(D) ,tws_dq_notice_d
Function tws_dq_notice_d(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_notice_d = WindFunc("tws_dq_notice_d", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|22b||fffd||ef7b||fffd||fffd|(Y) ,tws_dq_notice_y
Function tws_dq_notice_y(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_notice_y = WindFunc("tws_dq_notice_y", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||433||fffd||fffd||fffd| ,tws_dq_pmkt
Function tws_dq_pmkt(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_dq_pmkt = WindFunc("tws_dq_pmkt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd| ,tws_pq_close
Function tws_pq_close(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_pq_close = WindFunc("tws_pq_close", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||7fc||fffd| ,tws_pq_high
Function tws_pq_high(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_pq_high = WindFunc("tws_pq_high", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||37c||fffd| ,tws_pq_low
Function tws_pq_low(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_pq_low = WindFunc("tws_pq_low", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd| ,tws_pq_amount
Function tws_pq_amount(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_pq_amount = WindFunc("tws_pq_amount", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_), GetValidCurType(CURTYPE_))
    If VarType(tws_pq_amount) <> vbString Then
      tws_pq_amount = tws_pq_amount / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_mtd
Function tws_pq_pctchange_mtd(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_mtd = WindFunc("tws_pq_pctchange_mtd", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_qtd
Function tws_pq_pctchange_qtd(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_qtd = WindFunc("tws_pq_pctchange_qtd", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_ytd
Function tws_pq_pctchange_ytd(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_ytd = WindFunc("tws_pq_pctchange_ytd", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd|5|fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_5d
Function tws_pq_pctchange_5d(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_5d = WindFunc("tws_pq_pctchange_5d", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd|10|fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_10d
Function tws_pq_pctchange_10d(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_10d = WindFunc("tws_pq_pctchange_10d", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd|1|fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_1m
Function tws_pq_pctchange_1m(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_1m = WindFunc("tws_pq_pctchange_1m", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd|3|fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_3m
Function tws_pq_pctchange_3m(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_3m = WindFunc("tws_pq_pctchange_3m", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd|6|fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_6m
Function tws_pq_pctchange_6m(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_6m = WindFunc("tws_pq_pctchange_6m", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd|1|fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange_1y
Function tws_pq_pctchange_1y(WINDCODE_ As Variant) As Variant
    tws_pq_pctchange_1y = WindFunc("tws_pq_pctchange_1y", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_gin_long_bal
Function tws_gin_long_bal(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_long_bal = WindFunc("tws_gin_long_bal", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_long_bal) <> vbString Then
      tws_gin_long_bal = tws_gin_long_bal / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_gin_long_buy
Function tws_gin_long_buy(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_long_buy = WindFunc("tws_gin_long_buy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_long_buy) <> vbString Then
      tws_gin_long_buy = tws_gin_long_buy / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_gin_long_sell
Function tws_gin_long_sell(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_long_sell = WindFunc("tws_gin_long_sell", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_long_sell) <> vbString Then
      tws_gin_long_sell = tws_gin_long_sell / UnitVal_
    End If
End Function

'|fffd||5bd||3397b||fffd| ,tws_gin_long_cash
Function tws_gin_long_cash(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_long_cash = WindFunc("tws_gin_long_cash", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_long_cash) <> vbString Then
      tws_gin_long_cash = tws_gin_long_cash / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_gin_long_inc
Function tws_gin_long_inc(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_long_inc = WindFunc("tws_gin_long_inc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_long_inc) <> vbString Then
      tws_gin_long_inc = tws_gin_long_inc / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_gin_long_incpct
Function tws_gin_long_incpct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_gin_long_incpct = WindFunc("tws_gin_long_incpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||2b9||fffd||fffd||fffd||fffd| ,tws_gin_long_usepct
Function tws_gin_long_usepct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_gin_long_usepct = WindFunc("tws_gin_long_usepct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||22f||fffd||fffd||fffd| ,tws_gin_short_bal
Function tws_gin_short_bal(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_short_bal = WindFunc("tws_gin_short_bal", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_short_bal) <> vbString Then
      tws_gin_short_bal = tws_gin_short_bal / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd| ,tws_gin_short_buy
Function tws_gin_short_buy(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_short_buy = WindFunc("tws_gin_short_buy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_short_buy) <> vbString Then
      tws_gin_short_buy = tws_gin_short_buy / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd| ,tws_gin_short_sell
Function tws_gin_short_sell(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_short_sell = WindFunc("tws_gin_short_sell", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_short_sell) <> vbString Then
      tws_gin_short_sell = tws_gin_short_sell / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd| ,tws_gin_short_cash
Function tws_gin_short_cash(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_short_cash = WindFunc("tws_gin_short_cash", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_short_cash) <> vbString Then
      tws_gin_short_cash = tws_gin_short_cash / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd| ,tws_gin_short_inc
Function tws_gin_short_inc(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_short_inc = WindFunc("tws_gin_short_inc", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_short_inc) <> vbString Then
      tws_gin_short_inc = tws_gin_short_inc / UnitVal_
    End If
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_gin_short_incpct
Function tws_gin_short_incpct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_gin_short_incpct = WindFunc("tws_gin_short_incpct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||22f||2b9||fffd||fffd||fffd||fffd| ,tws_gin_short_usepct
Function tws_gin_short_usepct(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_gin_short_usepct = WindFunc("tws_gin_short_usepct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|22f||fffd||2b1||fffd| ,tws_gin_shorttolong
Function tws_gin_shorttolong(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_gin_shorttolong = WindFunc("tws_gin_shorttolong", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||573||fffd||fffd||fffd| ,tws_gin_offset
Function tws_gin_offset(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_gin_offset = WindFunc("tws_gin_offset", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
    If VarType(tws_gin_offset) <> vbString Then
      tws_gin_offset = tws_gin_offset / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd| ,tws_gin_close
Function tws_gin_close(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    tws_gin_close = WindFunc("tws_gin_close", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd|(|fffd||fffd|+|fffd||fffd|)/|fffd||27d||fffd||fffd||fffd| ,tws_gin_longtovolume
Function tws_gin_longtovolume(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_gin_longtovolume = WindFunc("tws_gin_longtovolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||22f|(|fffd||fffd|+|fffd||fffd|)/|fffd||27d||fffd||fffd||fffd| ,tws_gin_shorttovolume
Function tws_gin_shorttovolume(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    tws_gin_shorttovolume = WindFunc("tws_gin_shorttovolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||276||fffd||fffd||fffd||fffd||fffd| ,tws_holder_name
Function tws_holder_name(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional Sequence_ As Byte = 1) As Variant
    tws_holder_name = WindFunc("tws_holder_name", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), Sequence_)
End Function

'|fffd||fffd||276||fffd||fffd||5b9||fffd||fffd||fffd||fffd||fffd| ,tws_holder_quantity
Function tws_holder_quantity(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional Sequence_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_holder_quantity = WindFunc("tws_holder_quantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), Sequence_)
    If VarType(tws_holder_quantity) <> vbString Then
      tws_holder_quantity = tws_holder_quantity / UnitVal_
    End If
End Function

'|fffd||fffd||276||fffd||fffd||5b9||271||fffd||fffd||fffd| ,tws_holder_pct
Function tws_holder_pct(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional Sequence_ As Byte = 1) As Variant
    tws_holder_pct = WindFunc("tws_holder_pct", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), Sequence_)
End Function

'|fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_share_totaltradable
Function tws_share_totaltradable(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_share_totaltradable = WindFunc("tws_share_totaltradable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_share_totaltradable) <> vbString Then
      tws_share_totaltradable = tws_share_totaltradable / UnitVal_
    End If
End Function

'|fffd||fffd||5b5| ,tws_val_mv
Function tws_val_mv(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_val_mv = WindFunc("tws_val_mv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_))
    If VarType(tws_val_mv) <> vbString Then
      tws_val_mv = tws_val_mv / UnitVal_
    End If
End Function

'|fffd||fffd||4ef||fffd||fffd|(|1f0||fffd||fffd|12|fffd||fffd|) ,tws_val_pe_ttm
Function tws_val_pe_ttm(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
    tws_val_pe_ttm = WindFunc("tws_val_pe_ttm", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
End Function

'|fffd||43e||fffd||fffd||fffd|(|fffd||fffd||fffd||b1||fffd||fffd||fffd|) ,tws_val_pb_new
Function tws_val_pb_new(WINDCODE_ As Variant, DEALDATE_ As Variant) As Variant
    tws_val_pb_new = WindFunc("tws_val_pb_new", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
End Function

'|fffd||fffd||fffd||33c||fffd| ,tws_dq_open
Function tws_dq_open(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_dq_open = WindFunc("tws_dq_open", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(TRADEDATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||4fea||fffd||33c||fffd| ,tws_pq_open
Function tws_pq_open(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional AdjustType_ As Byte = 1, Optional CURTYPE_ As String = "BB") As Variant
    tws_pq_open = WindFunc("tws_pq_open", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_), AdjustType_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd||fffd||fffd| ,tws_pq_avgprice
Function tws_pq_avgprice(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    tws_pq_avgprice = WindFunc("tws_pq_avgprice", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||27d||fffd||fffd||fffd| ,tws_pq_volume
Function tws_pq_volume(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_pq_volume = WindFunc("tws_pq_volume", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_))
    If VarType(tws_pq_volume) <> vbString Then
      tws_pq_volume = tws_pq_volume / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd| ,tws_pq_change
Function tws_pq_change(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    tws_pq_change = WindFunc("tws_pq_change", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||1f5||fffd||fffd||fffd| ,tws_pq_pctchange
Function tws_pq_pctchange(WINDCODE_ As Variant, StartDate_ As Variant, DATE_ As Variant) As Variant
    tws_pq_pctchange = WindFunc("tws_pq_pctchange", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(StartDate_), GetValidDate(DATE_))
End Function

'|fffd||2f9||fffd||fffd||fffd||fffd||fffd| ,tws_info_listemg
Function tws_info_listemg(WINDCODE_ As Variant) As Variant
    tws_info_listemg = WindFunc("tws_info_listemg", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_os_num
Function tws_dir_os_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_os_num = WindFunc("tws_dir_os_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|4bb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_osp_num
Function tws_dir_osp_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_osp_num = WindFunc("tws_dir_osp_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_id_num
Function tws_dir_id_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_id_num = WindFunc("tws_dir_id_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_dir_is_num
Function tws_dir_is_num(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_dir_is_num = WindFunc("tws_dir_is_num", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_qfii_ex
Function tws_inshd_qfii_ex(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_qfii_ex = WindFunc("tws_inshd_qfii_ex", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_qfii_ex) <> vbString Then
      tws_inshd_qfii_ex = tws_inshd_qfii_ex / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5| ,tws_inshd_qfii_exmv
Function tws_inshd_qfii_exmv(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_qfii_exmv = WindFunc("tws_inshd_qfii_exmv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_))
    If VarType(tws_inshd_qfii_exmv) <> vbString Then
      tws_inshd_qfii_exmv = tws_inshd_qfii_exmv / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_fund_ex
Function tws_inshd_fund_ex(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_fund_ex = WindFunc("tws_inshd_fund_ex", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_fund_ex) <> vbString Then
      tws_inshd_fund_ex = tws_inshd_fund_ex / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5| ,tws_inshd_fund_exmv
Function tws_inshd_fund_exmv(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_fund_exmv = WindFunc("tws_inshd_fund_exmv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_))
    If VarType(tws_inshd_fund_exmv) <> vbString Then
      tws_inshd_fund_exmv = tws_inshd_fund_exmv / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_dlr_ex
Function tws_inshd_dlr_ex(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_dlr_ex = WindFunc("tws_inshd_dlr_ex", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_dlr_ex) <> vbString Then
      tws_inshd_dlr_ex = tws_inshd_dlr_ex / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5| ,tws_inshd_dlr_exmv
Function tws_inshd_dlr_exmv(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_dlr_exmv = WindFunc("tws_inshd_dlr_exmv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_))
    If VarType(tws_inshd_dlr_exmv) <> vbString Then
      tws_inshd_dlr_exmv = tws_inshd_dlr_exmv / UnitVal_
    End If
End Function

'|fffd||3fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_ttl_ex
Function tws_inshd_ttl_ex(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_ttl_ex = WindFunc("tws_inshd_ttl_ex", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_ttl_ex) <> vbString Then
      tws_inshd_ttl_ex = tws_inshd_ttl_ex / UnitVal_
    End If
End Function

'|fffd||3fc||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||5b5| ,tws_inshd_ttl_exmv
Function tws_inshd_ttl_exmv(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_ttl_exmv = WindFunc("tws_inshd_ttl_exmv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_), GetValidCurType(CURTYPE_))
    If VarType(tws_inshd_ttl_exmv) <> vbString Then
      tws_inshd_ttl_exmv = tws_inshd_ttl_exmv / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_qfii_buy
Function tws_inshd_qfii_buy(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_qfii_buy = WindFunc("tws_inshd_qfii_buy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_qfii_buy) <> vbString Then
      tws_inshd_qfii_buy = tws_inshd_qfii_buy / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_qfii_sell
Function tws_inshd_qfii_sell(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_qfii_sell = WindFunc("tws_inshd_qfii_sell", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_qfii_sell) <> vbString Then
      tws_inshd_qfii_sell = tws_inshd_qfii_sell / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_fund_buy
Function tws_inshd_fund_buy(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_fund_buy = WindFunc("tws_inshd_fund_buy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_fund_buy) <> vbString Then
      tws_inshd_fund_buy = tws_inshd_fund_buy / UnitVal_
    End If
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_fund_sell
Function tws_inshd_fund_sell(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_fund_sell = WindFunc("tws_inshd_fund_sell", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_fund_sell) <> vbString Then
      tws_inshd_fund_sell = tws_inshd_fund_sell / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_dlr_buy
Function tws_inshd_dlr_buy(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_dlr_buy = WindFunc("tws_inshd_dlr_buy", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_dlr_buy) <> vbString Then
      tws_inshd_dlr_buy = tws_inshd_dlr_buy / UnitVal_
    End If
End Function

'|fffd||fffd||4ea||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_inshd_dlr_sell
Function tws_inshd_dlr_sell(WINDCODE_ As Variant, DEALDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_inshd_dlr_sell = WindFunc("tws_inshd_dlr_sell", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(DEALDATE_))
    If VarType(tws_inshd_dlr_sell) <> vbString Then
      tws_inshd_dlr_sell = tws_inshd_dlr_sell / UnitVal_
    End If
End Function

'|ff||fffd||27e||fffd||fffd||2b2||fffd| ,tws_fa_bps
Function tws_fa_bps(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_fa_bps = WindFunc("tws_fa_bps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd| ,tws_fa_sps
Function tws_fa_sps(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_fa_sps = WindFunc("tws_fa_sps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
End Function

'|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd| ,tws_fa_oips
Function tws_fa_oips(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_fa_oips = WindFunc("tws_fa_oips", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
End Function

'|ff||fffd||fffd||2f0||1f0||fffd||fffd||fffd||fffd| ,tws_fa_ebtps
Function tws_fa_ebtps(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_fa_ebtps = WindFunc("tws_fa_ebtps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_roa
Function tws_fa_roa(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_roa = WindFunc("tws_fa_roa", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(ROE) ,tws_fa_roe
Function tws_fa_roe(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_roe = WindFunc("tws_fa_roe", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|4ea||4b5||eb||fffd||fffd||fffd||fffd| ,tws_fa_grossprofitmargin
Function tws_fa_grossprofitmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_grossprofitmargin = WindFunc("tws_fa_grossprofitmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_oprprofitmargin
Function tws_fa_oprprofitmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_oprprofitmargin = WindFunc("tws_fa_oprprofitmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|2f0||1f0||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_profitmargin
Function tws_fa_profitmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_profitmargin = WindFunc("tws_fa_profitmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|2f0||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_netprofitmargin
Function tws_fa_netprofitmargin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_netprofitmargin = WindFunc("tws_fa_netprofitmargin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_yoy_or
Function tws_fa_yoy_or(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_yoy_or = WindFunc("tws_fa_yoy_or", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|4ea||4b5||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_yoy_oi
Function tws_fa_yoy_oi(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_yoy_oi = WindFunc("tws_fa_yoy_oi", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|2f0||1f0||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_yoy_ebt
Function tws_fa_yoy_ebt(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_yoy_ebt = WindFunc("tws_fa_yoy_ebt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|2f0||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_yoy_np
Function tws_fa_yoy_np(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_yoy_np = WindFunc("tws_fa_yoy_np", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_yoy_assets
Function tws_fa_yoy_assets(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_yoy_assets = WindFunc("tws_fa_yoy_assets", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_yoy_equity
Function tws_fa_yoy_equity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_yoy_equity = WindFunc("tws_fa_yoy_equity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||6fe||fffd||fffd||539||336||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_yoy_fa
Function tws_fa_yoy_fa(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_yoy_fa = WindFunc("tws_fa_yoy_fa", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||6b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_retntion
Function tws_fa_retntion(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_retntion = WindFunc("tws_fa_retntion", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_current
Function tws_fa_current(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_current = WindFunc("tws_fa_current", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||676||fffd||fffd||fffd||fffd||fffd|(|4bb||fffd||fffd||fffd||4b5||fffd||fffd||5a4||22f|) ,tws_fa_quick
Function tws_fa_quick(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_quick = WindFunc("tws_fa_quick", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||56e||fffd||fffd||fffd||fffd| ,tws_fa_debttoassets
Function tws_fa_debttoassets(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_debttoassets = WindFunc("tws_fa_debttoassets", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||3e2||fffd||fffd||fffd||3f1||fffd||fffd||fffd| ,tws_fa_ebittointerest
Function tws_fa_ebittointerest(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_ebittointerest = WindFunc("tws_fa_ebittointerest", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_arturndays
Function tws_fa_arturndays(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_arturndays = WindFunc("tws_fa_arturndays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd| ,tws_fa_faturn
Function tws_fa_faturn(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_faturn = WindFunc("tws_fa_faturn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|1bd||fffd||fffd||fffd||6fb||fffd||fffd||fffd||fffd||fffd|(|4bb||fffd||fffd||fffd||4b5|) ,tws_fa_invturndays
Function tws_fa_invturndays(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_invturndays = WindFunc("tws_fa_invturndays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_eps_basic
Function tws_fa_eps_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_fa_eps_basic = WindFunc("tws_fa_eps_basic", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
End Function

'|3e1||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_fa_eps_diluted
Function tws_fa_eps_diluted(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_fa_eps_diluted = WindFunc("tws_fa_eps_diluted", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||fffd||228||1bd||fffd||fffd||fffd||271||fffd| ,tws_fa_share_basic
Function tws_fa_share_basic(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_share_basic = WindFunc("tws_fa_share_basic", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_share_basic) <> vbString Then
      tws_fa_share_basic = tws_fa_share_basic / UnitVal_
    End If
End Function

'|531||fffd||fffd||fffd||fffd||fffd||fffd|(|4bb||fffd||fffd||fffd||4b5|) ,tws_fa_employeenum
Function tws_fa_employeenum(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_employeenum = WindFunc("tws_fa_employeenum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||5a7||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||561||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_ortoeps
Function tws_fa_ortoeps(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_ortoeps = WindFunc("tws_fa_ortoeps", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||561||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_exptorev_fin
Function tws_fa_exptorev_fin(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_exptorev_fin = WindFunc("tws_fa_exptorev_fin", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||17f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_fa_inttorev
Function tws_fa_inttorev(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_inttorev = WindFunc("tws_fa_inttorev", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||17f||fffd|/|fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_fa_loantodep
Function tws_fa_loantodep(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_loantodep = WindFunc("tws_fa_loantodep", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||3e2|(|fffd||fffd||fffd||fffd|) ,tws_fa_intcost
Function tws_fa_intcost(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_intcost = WindFunc("tws_fa_intcost", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd|/|fffd||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||fffd|) ,tws_fa_deptose
Function tws_fa_deptose(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_deptose = WindFunc("tws_fa_deptose", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||43c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_fa_branchnum
Function tws_fa_branchnum(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_branchnum = WindFunc("tws_fa_branchnum", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|3a5||53c||fffd||fffd||fffd||fffd||2a7||fffd||fffd|(|5a4||22f|) ,tws_fa_contractloss
Function tws_fa_contractloss(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_contractloss = WindFunc("tws_fa_contractloss", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2a7||fffd||fffd|(|5a4||22f|) ,tws_fa_tradingloss
Function tws_fa_tradingloss(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_tradingloss = WindFunc("tws_fa_tradingloss", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||2a7||fffd||fffd|(|5a4||22f|) ,tws_fa_errorbookingloss
Function tws_fa_errorbookingloss(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1) As Variant
    tws_fa_errorbookingloss = WindFunc("tws_fa_errorbookingloss", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|ff||fffd||27e||fffd||fffd||2b2||fffd| ,tws_qfa_bps
Function tws_qfa_bps(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_bps = WindFunc("tws_qfa_bps", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|ff||fffd||fffd||4ea||4b5||fffd||fffd| ,tws_qfa_sps
Function tws_qfa_sps(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_sps = WindFunc("tws_qfa_sps", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|ff||fffd||fffd||4ea||4b5||fffd||fffd||fffd||fffd| ,tws_qfa_oips
Function tws_qfa_oips(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_oips = WindFunc("tws_qfa_oips", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|ff||fffd||fffd||2f0||1f0||fffd||fffd||fffd||fffd| ,tws_qfa_ebtps
Function tws_qfa_ebtps(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_ebtps = WindFunc("tws_qfa_ebtps", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||2b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_roa
Function tws_qfa_roa(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_roa = WindFunc("tws_qfa_roa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(ROE) ,tws_qfa_roe
Function tws_qfa_roe(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_roe = WindFunc("tws_qfa_roe", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||eb||fffd||fffd||fffd||fffd| ,tws_qfa_grossprofitmargin
Function tws_qfa_grossprofitmargin(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_grossprofitmargin = WindFunc("tws_qfa_grossprofitmargin", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_oprprofitmargin
Function tws_qfa_oprprofitmargin(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_oprprofitmargin = WindFunc("tws_qfa_oprprofitmargin", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|2f0||1f0||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_profitmargin
Function tws_qfa_profitmargin(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_profitmargin = WindFunc("tws_qfa_profitmargin", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|2f0||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_netprofitmargin
Function tws_qfa_netprofitmargin(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_netprofitmargin = WindFunc("tws_qfa_netprofitmargin", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_yoy_or
Function tws_qfa_yoy_or(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_yoy_or = WindFunc("tws_qfa_yoy_or", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_yoy_oi
Function tws_qfa_yoy_oi(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_yoy_oi = WindFunc("tws_qfa_yoy_oi", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|2f0||1f0||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_yoy_ebt
Function tws_qfa_yoy_ebt(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_yoy_ebt = WindFunc("tws_qfa_yoy_ebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|2f0||fffd||fffd||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_yoy_np
Function tws_qfa_yoy_np(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_yoy_np = WindFunc("tws_qfa_yoy_np", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_yoy_assets
Function tws_qfa_yoy_assets(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_yoy_assets = WindFunc("tws_qfa_yoy_assets", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_yoy_equity
Function tws_qfa_yoy_equity(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_yoy_equity = WindFunc("tws_qfa_yoy_equity", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6fe||fffd||fffd||539||336||fffd||fffd||2b2||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_yoy_fa
Function tws_qfa_yoy_fa(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_yoy_fa = WindFunc("tws_qfa_yoy_fa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||6b2||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_retntion
Function tws_qfa_retntion(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_retntion = WindFunc("tws_qfa_retntion", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_qoq_or
Function tws_qfa_qoq_or(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_qoq_or = WindFunc("tws_qfa_qoq_or", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4ea||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_qoq_op
Function tws_qfa_qoq_op(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_qoq_op = WindFunc("tws_qfa_qoq_op", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|2f0||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_qoq_np
Function tws_qfa_qoq_np(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_qoq_np = WindFunc("tws_qfa_qoq_np", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_current
Function tws_qfa_current(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_current = WindFunc("tws_qfa_current", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||676||fffd||fffd||fffd||fffd||fffd|(|4bb||fffd||fffd||fffd||4b5||fffd||fffd||5a4||22f|) ,tws_qfa_quick
Function tws_qfa_quick(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_quick = WindFunc("tws_qfa_quick", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||56e||fffd||fffd||fffd||fffd| ,tws_qfa_debttoassets
Function tws_qfa_debttoassets(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_debttoassets = WindFunc("tws_qfa_debttoassets", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||3e2||fffd||fffd||fffd||3f1||fffd||fffd||fffd| ,tws_qfa_ebittointerest
Function tws_qfa_ebittointerest(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_ebittointerest = WindFunc("tws_qfa_ebittointerest", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|4e6||fffd||fffd||fffd||2ff||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_arturndays
Function tws_qfa_arturndays(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_arturndays = WindFunc("tws_qfa_arturndays", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||336||fffd||fffd||2b2||fffd||fffd||fffd||5ea||fffd||fffd| ,tws_qfa_faturn
Function tws_qfa_faturn(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_faturn = WindFunc("tws_qfa_faturn", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|1bd||fffd||fffd||fffd||6fb||fffd||fffd||fffd||fffd||fffd|(|4bb||fffd||fffd||fffd||4b5|) ,tws_qfa_invturndays
Function tws_qfa_invturndays(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_invturndays = WindFunc("tws_qfa_invturndays", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|531||fffd||fffd||fffd||fffd||fffd||fffd|(|4bb||fffd||fffd||fffd||4b5|) ,tws_qfa_employeenum
Function tws_qfa_employeenum(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_employeenum = WindFunc("tws_qfa_employeenum", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||5a7||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||561||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_ortoeps
Function tws_qfa_ortoeps(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_ortoeps = WindFunc("tws_qfa_ortoeps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||4b5||fffd||fffd||271||fffd||fffd||fffd|(|fffd||fffd||fffd||561||fffd||fffd||fffd||fffd||fffd|) ,tws_qfa_exptorev_fin
Function tws_qfa_exptorev_fin(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_exptorev_fin = WindFunc("tws_qfa_exptorev_fin", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||17f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_qfa_inttorev
Function tws_qfa_inttorev(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_inttorev = WindFunc("tws_qfa_inttorev", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||17f||fffd|/|fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_qfa_loantodep
Function tws_qfa_loantodep(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_loantodep = WindFunc("tws_qfa_loantodep", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||3e2|(|fffd||fffd||fffd||fffd|) ,tws_qfa_intcost
Function tws_qfa_intcost(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_intcost = WindFunc("tws_qfa_intcost", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd|/|fffd||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||fffd|) ,tws_qfa_deptose
Function tws_qfa_deptose(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_deptose = WindFunc("tws_qfa_deptose", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||43c||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_qfa_branchnum
Function tws_qfa_branchnum(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_branchnum = WindFunc("tws_qfa_branchnum", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|3a5||53c||fffd||fffd||fffd||fffd||2a7||fffd||fffd|(|5a4||22f|) ,tws_qfa_contractloss
Function tws_qfa_contractloss(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_contractloss = WindFunc("tws_qfa_contractloss", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||2a7||fffd||fffd|(|5a4||22f|) ,tws_qfa_tradingloss
Function tws_qfa_tradingloss(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_tradingloss = WindFunc("tws_qfa_tradingloss", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||fffd||fffd||2a7||fffd||fffd|(|5a4||22f|) ,tws_qfa_errorbookingloss
Function tws_qfa_errorbookingloss(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_errorbookingloss = WindFunc("tws_qfa_errorbookingloss", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_eps_basic
Function tws_qfa_eps_basic(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_eps_basic = WindFunc("tws_qfa_eps_basic", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|3e1||fffd||fffd||ff||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_qfa_eps_diluted
Function tws_qfa_eps_diluted(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1) As Variant
    tws_qfa_eps_diluted = WindFunc("tws_qfa_eps_diluted", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd|.|fffd||fffd||228||1bd||fffd||fffd||fffd||271||fffd| ,tws_qfa_share_basic
Function tws_qfa_share_basic(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional P1_ As Integer = 4, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_qfa_share_basic = WindFunc("tws_qfa_share_basic", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, P1_, GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_qfa_share_basic) <> vbString Then
      tws_qfa_share_basic = tws_qfa_share_basic / UnitVal_
    End If
End Function

'|2f0||1f0||3e2||1f0||fffd||fffd||fffd||fffd| ,tws_fa_ebit
Function tws_fa_ebit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_ebit = WindFunc("tws_fa_ebit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_ebit) <> vbString Then
      tws_fa_ebit = tws_fa_ebit / UnitVal_
    End If
End Function

'|2f0||1f0||3e2||1f0||fffd||6fe||fffd||1f0||32f||fffd||fffd||1f0||fffd||fffd||fffd||fffd| ,tws_fa_ebitda
Function tws_fa_ebitda(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_ebitda = WindFunc("tws_fa_ebitda", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_ebitda) <> vbString Then
      tws_fa_ebitda = tws_fa_ebitda / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|2f0||fffd||fffd|) ,tws_fa_deductedprofit
Function tws_fa_deductedprofit(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_deductedprofit = WindFunc("tws_fa_deductedprofit", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_deductedprofit) <> vbString Then
      tws_fa_deductedprofit = tws_fa_deductedprofit / UnitVal_
    End If
End Function

'|2f0||1f0||fffd||fffd||fffd||fffd|(|fffd||7b1||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_ebt_co
Function tws_fa_ebt_co(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_ebt_co = WindFunc("tws_fa_ebt_co", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_ebt_co) <> vbString Then
      tws_fa_ebt_co = tws_fa_ebt_co / UnitVal_
    End If
End Function

'|2f0||fffd||fffd||fffd||fffd|(|fffd||7b1||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_np_co
Function tws_fa_np_co(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_np_co = WindFunc("tws_fa_np_co", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_np_co) <> vbString Then
      tws_fa_np_co = tws_fa_np_co / UnitVal_
    End If
End Function

'|fffd||2b2||fffd||fffd||736||fffd|(|fffd||7b1||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_asset_co
Function tws_fa_asset_co(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_asset_co = WindFunc("tws_fa_asset_co", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_asset_co) <> vbString Then
      tws_fa_asset_co = tws_fa_asset_co / UnitVal_
    End If
End Function

'|fffd||276||fffd||228||fffd||fffd|(|fffd||7b1||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_fa_equity_co
Function tws_fa_equity_co(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_fa_equity_co = WindFunc("tws_fa_equity_co", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_), GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_fa_equity_co) <> vbString Then
      tws_fa_equity_co = tws_fa_equity_co / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4ea||fffd||fffd| ,tws_mr_sales
Function tws_mr_sales(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_mr_sales = WindFunc("tws_mr_sales", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_mr_sales) <> vbString Then
      tws_mr_sales = tws_mr_sales / UnitVal_
    End If
End Function

'|225||fffd||ad65||fffd||fffd||4ea||fffd||fffd| ,tws_mr_sales_ly
Function tws_mr_sales_ly(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_mr_sales_ly = WindFunc("tws_mr_sales_ly", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_mr_sales_ly) <> vbString Then
      tws_mr_sales_ly = tws_mr_sales_ly / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4ea||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_mr_sales_yoy
Function tws_mr_sales_yoy(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional TYPE_ As Byte = 1) As Variant
    tws_mr_sales_yoy = WindFunc("tws_mr_sales_yoy", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, TYPE_)
End Function

'|fffd||fffd||fffd||fffd||4ea||fffd||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_mr_sales_mom
Function tws_mr_sales_mom(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional TYPE_ As Byte = 1) As Variant
    tws_mr_sales_mom = WindFunc("tws_mr_sales_mom", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, TYPE_)
End Function

'|fffd||6fc||fffd||4ea||fffd||fffd| ,tws_mr_accusales
Function tws_mr_accusales(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_mr_accusales = WindFunc("tws_mr_accusales", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_mr_accusales) <> vbString Then
      tws_mr_accusales = tws_mr_accusales / UnitVal_
    End If
End Function

'|225||fffd||fffd||fffd||6fc||fffd||4ea||fffd||fffd| ,tws_mr_accusales_ly
Function tws_mr_accusales_ly(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    tws_mr_accusales_ly = WindFunc("tws_mr_accusales_ly", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_), TYPE_)
    If VarType(tws_mr_accusales_ly) <> vbString Then
      tws_mr_accusales_ly = tws_mr_accusales_ly / UnitVal_
    End If
End Function

'|fffd||6fc||fffd||4ea||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_mr_accusales_yoy
Function tws_mr_accusales_yoy(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional TYPE_ As Byte = 1) As Variant
    tws_mr_accusales_yoy = WindFunc("tws_mr_accusales_yoy", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, TYPE_)
End Function

'|fffd||6fc||fffd||2f0||1f0||4ef||fffd||fffd| ,tws_mr_accuebt
Function tws_mr_accuebt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_accuebt = WindFunc("tws_mr_accuebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_accuebt) <> vbString Then
      tws_mr_accuebt = tws_mr_accuebt / UnitVal_
    End If
End Function

'|225||fffd||fffd||fffd||6fc||fffd||2f0||1f0||4ef||fffd||fffd| ,tws_mr_accuebt_ly
Function tws_mr_accuebt_ly(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_accuebt_ly = WindFunc("tws_mr_accuebt_ly", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_accuebt_ly) <> vbString Then
      tws_mr_accuebt_ly = tws_mr_accuebt_ly / UnitVal_
    End If
End Function

'|fffd||6fc||fffd||2f0||1f0||4ef||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_mr_accuebt_yoy
Function tws_mr_accuebt_yoy(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_accuebt_yoy = WindFunc("tws_mr_accuebt_yoy", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||6fc||fffd||2f0||fffd||fffd||4ef||fffd||fffd| ,tws_mr_accunp
Function tws_mr_accunp(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_accunp = WindFunc("tws_mr_accunp", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_accunp) <> vbString Then
      tws_mr_accunp = tws_mr_accunp / UnitVal_
    End If
End Function

'|225||fffd||fffd||fffd||6fc||fffd||2f0||fffd||fffd||4ef||fffd||fffd| ,tws_mr_accunp_ly
Function tws_mr_accunp_ly(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_accunp_ly = WindFunc("tws_mr_accunp_ly", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_accunp_ly) <> vbString Then
      tws_mr_accunp_ly = tws_mr_accunp_ly / UnitVal_
    End If
End Function

'|fffd||6fc||fffd||2f0||fffd||fffd||4ef||fffd||fffd|(|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,tws_mr_accunp_yoy
Function tws_mr_accunp_yoy(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_accunp_yoy = WindFunc("tws_mr_accunp_yoy", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|524||fffd||fffd||4ea||fffd||fffd| ,tws_mr_estsales
Function tws_mr_estsales(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_estsales = WindFunc("tws_mr_estsales", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_estsales) <> vbString Then
      tws_mr_estsales = tws_mr_estsales / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ea||fffd||577||fffd||fffd||fffd||fffd||fffd| ,tws_mr_estsales_anncdt
Function tws_mr_estsales_anncdt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_estsales_anncdt = WindFunc("tws_mr_estsales_anncdt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||2a6||fffd||fffd||fffd| ,tws_stm_auditopin
Function tws_stm_auditopin(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    tws_stm_auditopin = WindFunc("tws_stm_auditopin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2a6||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_stm_auditor
Function tws_stm_auditor(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    tws_stm_auditor = WindFunc("tws_stm_auditor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2a6|1 ,tws_stm_cpa1
Function tws_stm_cpa1(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    tws_stm_cpa1 = WindFunc("tws_stm_cpa1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2a6|2 ,tws_stm_cpa2
Function tws_stm_cpa2(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    tws_stm_cpa2 = WindFunc("tws_stm_cpa2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||2a6|3 ,tws_stm_cpa3
Function tws_stm_cpa3(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    tws_stm_cpa3 = WindFunc("tws_stm_cpa3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_))
End Function

'|1e9||5a4||fffd||fffd| ,tws_stm_auditdate
Function tws_stm_auditdate(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    tws_stm_auditdate = WindFunc("tws_stm_auditdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidDate(REPORTDATE_))
End Function

'|4ea||fffd||574||fffd||fffd||fffd||fffd| ,tws_mr_sales_totarget
Function tws_mr_sales_totarget(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_sales_totarget = WindFunc("tws_mr_sales_totarget", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|524||fffd||fffd||2f0||1f0||4ef||fffd||fffd| ,tws_mr_estebt
Function tws_mr_estebt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_estebt = WindFunc("tws_mr_estebt", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_estebt) <> vbString Then
      tws_mr_estebt = tws_mr_estebt / UnitVal_
    End If
End Function

'|524||fffd||fffd||2f0||fffd||fffd||4ef||fffd||fffd| ,tws_mr_estnp
Function tws_mr_estnp(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_estnp = WindFunc("tws_mr_estnp", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_estnp) <> vbString Then
      tws_mr_estnp = tws_mr_estnp / UnitVal_
    End If
End Function

'|524||fffd||fffd||4ef||fffd||de2||fffd||fffd||fffd||fffd| ,tws_mr_est_anncdt
Function tws_mr_est_anncdt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_est_anncdt = WindFunc("tws_mr_est_anncdt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||6fc||fffd||2f0||1f0||4ef||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_mr_ebt_totarget
Function tws_mr_ebt_totarget(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_ebt_totarget = WindFunc("tws_mr_ebt_totarget", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||6fc||fffd||2f0||fffd||fffd||4ef||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_mr_np_totarget
Function tws_mr_np_totarget(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_np_totarget = WindFunc("tws_mr_np_totarget", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||5b5| ,tws_mr_bv
Function tws_mr_bv(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_bv = WindFunc("tws_mr_bv", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_bv) <> vbString Then
      tws_mr_bv = tws_mr_bv / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||9c63||5a4||fffd||fffd||fffd| ,tws_mr_conlib
Function tws_mr_conlib(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_conlib = WindFunc("tws_mr_conlib", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_conlib) <> vbString Then
      tws_mr_conlib = tws_mr_conlib / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||9c63||5a4||57c||fffd||fffd||5b5||fffd||fffd| ,tws_mr_conlibtobv
Function tws_mr_conlibtobv(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_conlibtobv = WindFunc("tws_mr_conlibtobv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||2bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_mr_loanto
Function tws_mr_loanto(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_mr_loanto = WindFunc("tws_mr_loanto", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
    If VarType(tws_mr_loanto) <> vbString Then
      tws_mr_loanto = tws_mr_loanto / UnitVal_
    End If
End Function

'|fffd||2bd||fffd||fffd||fffd||fffd||57c||fffd||fffd||5b5||fffd||fffd| ,tws_mr_loantobv
Function tws_mr_loantobv(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_loantobv = WindFunc("tws_mr_loantobv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_mr_trshare
Function tws_mr_trshare(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional UnitVal_ As Double = 1) As Variant
    tws_mr_trshare = WindFunc("tws_mr_trshare", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
    If VarType(tws_mr_trshare) <> vbString Then
      tws_mr_trshare = tws_mr_trshare / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||ff||fffd||fffd||4ea||fffd||fffd| ,tws_mr_ssps
Function tws_mr_ssps(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB") As Variant
    tws_mr_ssps = WindFunc("tws_mr_ssps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
End Function

'|fffd||6fc||fffd||ff||fffd||fffd||4ea||fffd||fffd| ,tws_mr_sps
Function tws_mr_sps(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB") As Variant
    tws_mr_sps = WindFunc("tws_mr_sps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
End Function

'|fffd||6fc||fffd||ff||fffd||fffd||2f0||1f0||4ef||fffd||fffd| ,tws_mr_ebtps
Function tws_mr_ebtps(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB") As Variant
    tws_mr_ebtps = WindFunc("tws_mr_ebtps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
End Function

'|fffd||6fc||fffd||ff||fffd||fffd||2f0||1f0||4ef||fffd||fffd|(WA) ,tws_mr_ebtps_wa
Function tws_mr_ebtps_wa(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB") As Variant
    tws_mr_ebtps_wa = WindFunc("tws_mr_ebtps_wa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
End Function

'|fffd||6fc||fffd||ff||fffd||fffd||2f0||fffd||fffd||4ef||fffd||fffd| ,tws_mr_eps
Function tws_mr_eps(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB") As Variant
    tws_mr_eps = WindFunc("tws_mr_eps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
End Function

'|fffd||6fc||fffd||ff||fffd||fffd||2f0||fffd||fffd||4ef||fffd||fffd|(WA) ,tws_mr_eps_wa
Function tws_mr_eps_wa(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB") As Variant
    tws_mr_eps_wa = WindFunc("tws_mr_eps_wa", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
End Function

'|ff||fffd||27e||fffd||5b5| ,tws_mr_bps
Function tws_mr_bps(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6, Optional CURTYPE_ As String = "BB") As Variant
    tws_mr_bps = WindFunc("tws_mr_bps", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||171||fffd||fffd||fffd| ,tws_mr_npl
Function tws_mr_npl(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_mr_npl = WindFunc("tws_mr_npl", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||276||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_div_mdate
Function tws_div_mdate(WINDCODE_ As Variant, Optional Year_ As Integer = 2019) As Variant
    tws_div_mdate = WindFunc("tws_div_mdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||fffd||bb||fffd||fffd||fffd||fffd||fffd| ,tws_div_drdate
Function tws_div_drdate(WINDCODE_ As Variant, Optional Year_ As Integer = 2019) As Variant
    tws_div_drdate = WindFunc("tws_div_drdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd| ,tws_div_cash
Function tws_div_cash(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB") As Variant
    tws_div_cash = WindFunc("tws_div_cash", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
End Function

'|4ef||fffd||fffd||fffd||fffd||fffd| ,tws_div_ern
Function tws_div_ern(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB") As Variant
    tws_div_ern = WindFunc("tws_div_ern", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_div_cpl
Function tws_div_cpl(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB") As Variant
    tws_div_cpl = WindFunc("tws_div_cpl", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
End Function

'|fffd||7b3||fffd||fffd||fffd||27a||3fc||fffd| ,tws_div_mer
Function tws_div_mer(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB") As Variant
    tws_div_mer = WindFunc("tws_div_mer", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||3e2||fffd||736||fffd| ,tws_div_totamount
Function tws_div_totamount(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_div_totamount = WindFunc("tws_div_totamount", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
    If VarType(tws_div_totamount) <> vbString Then
      tws_div_totamount = tws_div_totamount / UnitVal_
    End If
End Function

'|531||fffd||fffd||fffd||5ba||fffd|-|fffd||5bd||fffd| ,tws_div_ebcash
Function tws_div_ebcash(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_div_ebcash = WindFunc("tws_div_ebcash", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
    If VarType(tws_div_ebcash) <> vbString Then
      tws_div_ebcash = tws_div_ebcash / UnitVal_
    End If
End Function

'|531||fffd||fffd||fffd||5ba||fffd|-|fffd||fffd||fffd| ,tws_div_ebstock
Function tws_div_ebstock(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_div_ebstock = WindFunc("tws_div_ebstock", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
    If VarType(tws_div_ebstock) <> vbString Then
      tws_div_ebstock = tws_div_ebstock / UnitVal_
    End If
End Function

'|fffd||3f9||fffd||fffd||6f8||fffd| ,tws_div_subprice
Function tws_div_subprice(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB") As Variant
    tws_div_subprice = WindFunc("tws_div_subprice", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||2b6||fffd| ,tws_div_rightissue
Function tws_div_rightissue(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_div_rightissue = WindFunc("tws_div_rightissue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
    If VarType(tws_div_rightissue) <> vbString Then
      tws_div_rightissue = tws_div_rightissue / UnitVal_
    End If
End Function

'|fffd||5bd||fffd||fffd||fffd||fffd||fffd|(GDR) ,tws_div_gdr
Function tws_div_gdr(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_div_gdr = WindFunc("tws_div_gdr", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
    If VarType(tws_div_gdr) <> vbString Then
      tws_div_gdr = tws_div_gdr / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd| ,tws_div_dec
Function tws_div_dec(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String = "BB", Optional UnitVal_ As Double = 1) As Variant
    tws_div_dec = WindFunc("tws_div_dec", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, GetValidCurType(CURTYPE_))
    If VarType(tws_div_dec) <> vbString Then
      tws_div_dec = tws_div_dec / UnitVal_
    End If
End Function

'|363||5b9||fffd||fffd||fffd||fffd|-|fffd||fffd| ,tws_div_eregbegin
Function tws_div_eregbegin(WINDCODE_ As Variant, Optional Year_ As Integer = 2019) As Variant
    tws_div_eregbegin = WindFunc("tws_div_eregbegin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|363||5b9||fffd||fffd||fffd||fffd|-|fffd||fffd| ,tws_div_eregend
Function tws_div_eregend(WINDCODE_ As Variant, Optional Year_ As Integer = 2019) As Variant
    tws_div_eregend = WindFunc("tws_div_eregend", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|363||fffd||fffd||fffd||fffd||2bc||fffd||fffd| ,tws_div_elongbegin
Function tws_div_elongbegin(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_elongbegin = WindFunc("tws_div_elongbegin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|363||fffd||fffd||fffd||fffd||5b9||fffd||fffd| ,tws_div_elongend
Function tws_div_elongend(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_elongend = WindFunc("tws_div_elongend", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|363||22f||fffd||fffd||2bc||fffd||fffd| ,tws_div_eshortbegin
Function tws_div_eshortbegin(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_eshortbegin = WindFunc("tws_div_eshortbegin", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|363||22f||fffd||fffd||5b9||fffd||fffd| ,tws_div_eshortend
Function tws_div_eshortend(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_eshortend = WindFunc("tws_div_eshortend", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||22f||fffd||5b8||fffd||fffd||fffd| ,tws_div_elongd3
Function tws_div_elongd3(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_elongd3 = WindFunc("tws_div_elongd3", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||22f||fffd||fffd||fffd||632||fffd||fffd||fffd| ,tws_div_eshortd2
Function tws_div_eshortd2(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_eshortd2 = WindFunc("tws_div_eshortd2", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||228||fffd||fffd|(|fffd||fffd||fffd|) ,tws_div_emexdate
Function tws_div_emexdate(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_emexdate = WindFunc("tws_div_emexdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||228||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_div_ecexdate
Function tws_div_ecexdate(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_ecexdate = WindFunc("tws_div_ecexdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||228||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,tws_div_epexdate
Function tws_div_epexdate(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_epexdate = WindFunc("tws_div_epexdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||3e2||fffd||fffd| ,tws_div_edexdate
Function tws_div_edexdate(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    tws_div_edexdate = WindFunc("tws_div_edexdate", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_exdate
Function tws_ipo_exdate(WINDCODE_ As Variant) As Variant
    tws_ipo_exdate = WindFunc("tws_ipo_exdate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_uw_type
Function tws_ipo_uw_type(WINDCODE_ As Variant) As Variant
    tws_ipo_uw_type = WindFunc("tws_ipo_uw_type", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_uw_share
Function tws_ipo_uw_share(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_ipo_uw_share = WindFunc("tws_ipo_uw_share", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
    If VarType(tws_ipo_uw_share) <> vbString Then
      tws_ipo_uw_share = tws_ipo_uw_share / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||6f8||fffd| ,tws_ipo_uw_price
Function tws_ipo_uw_price(WINDCODE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    tws_ipo_uw_price = WindFunc("tws_ipo_uw_price", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidCurType(CURTYPE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_uw_pubdt
Function tws_ipo_uw_pubdt(WINDCODE_ As Variant) As Variant
    tws_ipo_uw_pubdt = WindFunc("tws_ipo_uw_pubdt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| ,tws_ipo_uw_begindt
Function tws_ipo_uw_begindt(WINDCODE_ As Variant) As Variant
    tws_ipo_uw_begindt = WindFunc("tws_ipo_uw_begindt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd| ,tws_ipo_uw_enddt
Function tws_ipo_uw_enddt(WINDCODE_ As Variant) As Variant
    tws_ipo_uw_enddt = WindFunc("tws_ipo_uw_enddt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||1e9||fffd||fffd| ,tws_ipo_uw_drawdt
Function tws_ipo_uw_drawdt(WINDCODE_ As Variant) As Variant
    tws_ipo_uw_drawdt = WindFunc("tws_ipo_uw_drawdt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||27f||fffd|-|fffd||fffd| ,tws_ipo_uw_paydtbegin
Function tws_ipo_uw_paydtbegin(WINDCODE_ As Variant) As Variant
    tws_ipo_uw_paydtbegin = WindFunc("tws_ipo_uw_paydtbegin", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||27f||fffd|-|fffd||fffd| ,tws_ipo_uw_paydtend
Function tws_ipo_uw_paydtend(WINDCODE_ As Variant) As Variant
    tws_ipo_uw_paydtend = WindFunc("tws_ipo_uw_paydtend", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||439||fffd|(|226||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_inq_anncdt
Function tws_ipo_inq_anncdt(WINDCODE_ As Variant) As Variant
    tws_ipo_inq_anncdt = WindFunc("tws_ipo_inq_anncdt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||439||fffd|(|226||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_inq_min
Function tws_ipo_inq_min(WINDCODE_ As Variant) As Variant
    tws_ipo_inq_min = WindFunc("tws_ipo_inq_min", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||439||fffd|(|226||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_inq_max
Function tws_ipo_inq_max(WINDCODE_ As Variant) As Variant
    tws_ipo_inq_max = WindFunc("tws_ipo_inq_max", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||439||fffd|(|226||fffd||fffd|)|fffd||fffd||fffd||fffd||fffd| ,tws_ipo_inq_findt
Function tws_ipo_inq_findt(WINDCODE_ As Variant) As Variant
    tws_ipo_inq_findt = WindFunc("tws_ipo_inq_findt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||733||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_totaluw
Function tws_ipo_totaluw(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    tws_ipo_totaluw = WindFunc("tws_ipo_totaluw", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
    If VarType(tws_ipo_totaluw) <> vbString Then
      tws_ipo_totaluw = tws_ipo_totaluw / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1e2||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_prisellvolume
Function tws_ipo_prisellvolume(WINDCODE_ As Variant) As Variant
    tws_ipo_prisellvolume = WindFunc("tws_ipo_prisellvolume", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|22f||fffd||333||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_uwsellvolume
Function tws_ipo_uwsellvolume(WINDCODE_ As Variant) As Variant
    tws_ipo_uwsellvolume = WindFunc("tws_ipo_uwsellvolume", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||5a4||22f||fffd||fffd| ,tws_ipo_leaduw
Function tws_ipo_leaduw(WINDCODE_ As Variant) As Variant
    tws_ipo_leaduw = WindFunc("tws_ipo_leaduw", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||431||fffd| ,tws_ipo_mkt
Function tws_ipo_mkt(WINDCODE_ As Variant) As Variant
    tws_ipo_mkt = WindFunc("tws_ipo_mkt", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||2b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,tws_ipo_lisedate
Function tws_ipo_lisedate(WINDCODE_ As Variant) As Variant
    tws_ipo_lisedate = WindFunc("tws_ipo_lisedate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||33c||fffd| ,tws_ipo_close
Function tws_ipo_close(WINDCODE_ As Variant, Optional CURTYPE_ As String = "BB") As Variant
    tws_ipo_close = WindFunc("tws_ipo_close", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), GetValidCurType(CURTYPE_))
End Function

'|fffd||6fc||1bb||fffd||fffd||fffd||736||fffd|(|52d||fffd||fffd|,|1e7||52a|) ,tws_inv_camt
Function tws_inv_camt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_camt = WindFunc("tws_inv_camt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||f2||fffd||fffd||fffd||5fc||fffd||fffd||fffd|(|52d||fffd||fffd|,|1e7||52a|) ,tws_inv_cquotaamt
Function tws_inv_cquotaamt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_cquotaamt = WindFunc("tws_inv_cquotaamt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||f2||fffd||fffd||6da8||fffd||7b6||fffd|(|52d||fffd||fffd|,|1e7||52a|) ,tws_inv_cquota
Function tws_inv_cquota(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_cquota = WindFunc("tws_inv_cquota", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|2b5||fffd||fffd||fffd||2b1||fffd||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_tsecap1
Function tws_inv_tsecap1(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_tsecap1 = WindFunc("tws_inv_tsecap1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||6b3||fffd||fffd||6fc||1bb||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_tbegamt1
Function tws_inv_tbegamt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_tbegamt1 = WindFunc("tws_inv_tbegamt1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||6bb||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_taddamt1
Function tws_inv_taddamt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_taddamt1 = WindFunc("tws_inv_taddamt1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||fffd||fffd||57b||63d||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_tminamt1
Function tws_inv_tminamt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_tminamt1 = WindFunc("tws_inv_tminamt1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||129||fffd||6fc||1bb||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_tendamt1
Function tws_inv_tendamt1(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_tendamt1 = WindFunc("tws_inv_tendamt1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_tinvch
Function tws_inv_tinvch(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_tinvch = WindFunc("tws_inv_tinvch", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||129||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_endinv1
Function tws_inv_endinv1(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_endinv1 = WindFunc("tws_inv_endinv1", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||328||fffd||fffd||376||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_tremt
Function tws_inv_tremt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_tremt = WindFunc("tws_inv_tremt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||6fc||fffd||328||fffd||fffd||fffd||fffd||fffd||736||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_amt
Function tws_inv_amt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_amt = WindFunc("tws_inv_amt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||f2||fffd||fffd||fffd||5fc||fffd||fffd||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_quotaamt
Function tws_inv_quotaamt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_quotaamt = WindFunc("tws_inv_quotaamt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|fffd||fffd||fffd||f2||fffd||fffd||6da8||fffd||7b6||fffd|(|fffd||fffd||328||fffd||fffd|,|1e7||52a|) ,tws_inv_quota
Function tws_inv_quota(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_quota = WindFunc("tws_inv_quota", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|2f0||1f0||ff||fffd||fffd||fffd||fffd||fffd||6e71||fffd||5f6||fffd|(|fffd||fffd||328||fffd||fffd|,|52a|) ,tws_inv_epscontribute
Function tws_inv_epscontribute(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_epscontribute = WindFunc("tws_inv_epscontribute", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'|376||fffd||fffd||fffd||fffd||fffd||fffd|/|2f0||1f0||fffd||fffd||fffd||fffd|(|138|) ,tws_inv_inctoebt
Function tws_inv_inctoebt(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional Month_ As Integer = 6) As Variant
    tws_inv_inctoebt = WindFunc("tws_inv_inctoebt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "T"), Year_, Month_)
End Function

'2019/8/5 |fffd||fffd||fffd||fffd||5b8||fffd||fffd|
'|5b8||fffd||fffd||fffd||277||fffd||fffd||fffd||363||fffd||fffd||fffd||fffd| ,i_tech_limitupnum
Function i_tech_limitupnum(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_tech_limitupnum = WindFunc("i_tech_limitupnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|5b8||fffd||fffd||fffd||277||775||fffd||363||fffd||fffd||fffd||fffd| ,i_tech_limitdownnum
Function i_tech_limitdownnum(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    i_tech_limitdownnum = WindFunc("i_tech_limitdownnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "I"), GetValidDate(TRADEDATE_))
End Function

'|1b7||fffd||5b3||27d||fffd||fffd||fffd| ,s_dq_optionvolume
Function s_dq_optionvolume(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_optionvolume = WindFunc("s_dq_optionvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_optionvolume) <> vbString Then
      s_dq_optionvolume = s_dq_optionvolume / UnitVal_
    End If
End Function

'|fffd||3f9||fffd||fffd||27d||fffd||fffd||fffd| ,s_dq_callvolume
Function s_dq_callvolume(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_callvolume = WindFunc("s_dq_callvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_callvolume) <> vbString Then
      s_dq_callvolume = s_dq_callvolume / UnitVal_
    End If
End Function

'|fffd||3f9||fffd||fffd||27d||fffd||fffd||fffd| ,s_dq_putvolume
Function s_dq_putvolume(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_putvolume = WindFunc("s_dq_putvolume", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_putvolume) <> vbString Then
      s_dq_putvolume = s_dq_putvolume / UnitVal_
    End If
End Function

'|1b7||fffd||5b3||5b2||fffd||fffd||fffd| ,s_dq_optionoi
Function s_dq_optionoi(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_optionoi = WindFunc("s_dq_optionoi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_optionoi) <> vbString Then
      s_dq_optionoi = s_dq_optionoi / UnitVal_
    End If
End Function

'|fffd||3f9||fffd||fffd||5b2||fffd||fffd||fffd| ,s_dq_calloi
Function s_dq_calloi(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_calloi = WindFunc("s_dq_calloi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_calloi) <> vbString Then
      s_dq_calloi = s_dq_calloi / UnitVal_
    End If
End Function

'|fffd||3f9||fffd||fffd||5b2||fffd||fffd||fffd| ,s_dq_putoi
Function s_dq_putoi(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_putoi = WindFunc("s_dq_putoi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_putoi) <> vbString Then
      s_dq_putoi = s_dq_putoi / UnitVal_
    End If
End Function

'|1b7||fffd||5b3||27d||fffd||fffd||fffd| ,s_dq_optionamount
Function s_dq_optionamount(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_dq_optionamount = WindFunc("s_dq_optionamount", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_dq_optionamount) <> vbString Then
      s_dq_optionamount = s_dq_optionamount / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||fffd||fffd||fffd| ,f_prt_topabsname
Function f_prt_topabsname(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topabsname = WindFunc("f_prt_topabsname", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||fffd||fffd||fffd| ,f_prt_topabssymbol
Function f_prt_topabssymbol(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topabssymbol = WindFunc("f_prt_topabssymbol", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f|Wind|fffd||fffd||fffd||fffd| ,f_prt_topabswindcode
Function f_prt_topabswindcode(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_topabswindcode = WindFunc("f_prt_topabswindcode", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||5b2||fffd||fffd||fffd||fffd||fffd| ,f_prt_topabsquantity
Function f_prt_topabsquantity(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topabsquantity = WindFunc("f_prt_topabsquantity", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topabsquantity) <> vbString Then
      f_prt_topabsquantity = f_prt_topabsquantity / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||fffd||fffd||fffd||fffd||fffd||5b5| ,f_prt_topabsvalue
Function f_prt_topabsvalue(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topabsvalue = WindFunc("f_prt_topabsvalue", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topabsvalue) <> vbString Then
      f_prt_topabsvalue = f_prt_topabsvalue / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||5b2||5b1||4daf| ,f_prt_topabsholdingchanging
Function f_prt_topabsholdingchanging(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topabsholdingchanging = WindFunc("f_prt_topabsholdingchanging", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topabsholdingchanging) <> vbString Then
      f_prt_topabsholdingchanging = f_prt_topabsholdingchanging / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_heavilyheldabstonav
Function f_prt_heavilyheldabstonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_heavilyheldabstonav = WindFunc("f_prt_heavilyheldabstonav", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_heavilyheldabstoasset
Function f_prt_heavilyheldabstoasset(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_prt_heavilyheldabstoasset = WindFunc("f_prt_heavilyheldabstoasset", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'2019/8/6
'|fffd||fffd||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd| ,f_info_valuationmethod
Function f_info_valuationmethod(WINDCODE_ As Variant) As Variant
    f_info_valuationmethod = WindFunc("f_info_valuationmethod", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||22f||376||fffd||fffd||fffd||fffd||5b5| ,f_prt_bondbycreditrating
Function f_prt_bondbycreditrating(WINDCODE_ As Variant, REPORTDATE_ As Variant, CreditRatingType_ As String, CalcType_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_bondbycreditrating = WindFunc("f_prt_bondbycreditrating", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), CreditRatingType_, CalcType_)
    If VarType(f_prt_bondbycreditrating) <> vbString Then
      f_prt_bondbycreditrating = f_prt_bondbycreditrating / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||376||fffd||fffd||fffd||fffd||5b5| ,f_prt_absbycreditrating
Function f_prt_absbycreditrating(WINDCODE_ As Variant, REPORTDATE_ As Variant, CreditRatingType_ As String, CalcType_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_absbycreditrating = WindFunc("f_prt_absbycreditrating", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), CreditRatingType_, CalcType_)
    If VarType(f_prt_absbycreditrating) <> vbString Then
      f_prt_absbycreditrating = f_prt_absbycreditrating / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||36c||4b5||fffd||6d65||376||fffd||fffd||fffd||fffd||5b5| ,f_prt_ncdbycreditrating
Function f_prt_ncdbycreditrating(WINDCODE_ As Variant, REPORTDATE_ As Variant, CreditRatingType_ As String, CalcType_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_ncdbycreditrating = WindFunc("f_prt_ncdbycreditrating", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), CreditRatingType_, CalcType_)
    If VarType(f_prt_ncdbycreditrating) <> vbString Then
      f_prt_ncdbycreditrating = f_prt_ncdbycreditrating / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||56e||22f||376||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_bondbycreditratingtonav
Function f_prt_bondbycreditratingtonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, CreditRatingType_ As String, CalcType_ As Byte) As Variant
    f_prt_bondbycreditratingtonav = WindFunc("f_prt_bondbycreditratingtonav", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), CreditRatingType_, CalcType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2b2||fffd||5a7||fffd||fffd||5a4||22f||376||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_absbycreditratingtonav
Function f_prt_absbycreditratingtonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, CreditRatingType_ As String, CalcType_ As Byte) As Variant
    f_prt_absbycreditratingtonav = WindFunc("f_prt_absbycreditratingtonav", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), CreditRatingType_, CalcType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||36c||4b5||fffd||6d65||376||fffd||fffd||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd| ,f_prt_ncdbycreditratingtonav
Function f_prt_ncdbycreditratingtonav(WINDCODE_ As Variant, REPORTDATE_ As Variant, CreditRatingType_ As String, CalcType_ As Byte) As Variant
    f_prt_ncdbycreditratingtonav = WindFunc("f_prt_ncdbycreditratingtonav", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), CreditRatingType_, CalcType_)
End Function

'|4e6||fffd||57b||1bd||fffd||fffd||53c||fffd||fffd||fffd||fffd||fffd||3e2| ,f_stm_bs_goldcontractinterest
Function f_stm_bs_goldcontractinterest(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_bs_goldcontractinterest = WindFunc("f_stm_bs_goldcontractinterest", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_bs_goldcontractinterest) <> vbString Then
      f_stm_bs_goldcontractinterest = f_stm_bs_goldcontractinterest / UnitVal_
    End If
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||677||5b1||fffd|)(|22f||fffd||33c||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) ,f_nav_lcqperiodreturnrankingper
Function f_nav_lcqperiodreturnrankingper(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional FundGroup_ As Integer = 1) As Variant
    f_nav_lcqperiodreturnrankingper = WindFunc("f_nav_lcqperiodreturnrankingper", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), FundGroup_)
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||677||5b1||fffd|)(|fffd||fffd||fffd||fffd||2fd||13c|) ,f_nav_xtqperiodreturnrankingper
Function f_nav_xtqperiodreturnrankingper(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    f_nav_xtqperiodreturnrankingper = WindFunc("f_nav_xtqperiodreturnrankingper", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|376||fffd||fffd||1b7||fffd||5b1||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_investmentproportion
Function f_info_investmentproportion(WINDCODE_ As Variant, InvestmentVariety_ As String) As Variant
    f_info_investmentproportion = WindFunc("f_info_investmentproportion", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), InvestmentVariety_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||73c||fffd| ,s_stmnote_bank_680
Function s_stmnote_bank_680(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_680 = WindFunc("s_stmnote_bank_680", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_680) <> vbString Then
      s_stmnote_bank_680 = s_stmnote_bank_680 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd|_|fffd||73c||fffd| ,s_stmnote_bank_700
Function s_stmnote_bank_700(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_700 = WindFunc("s_stmnote_bank_700", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_700) <> vbString Then
      s_stmnote_bank_700 = s_stmnote_bank_700 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3e2||fffd||fffd||fffd||fffd|_|fffd||73c||fffd| ,s_stmnote_bank_710
Function s_stmnote_bank_710(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_710 = WindFunc("s_stmnote_bank_710", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_710) <> vbString Then
      s_stmnote_bank_710 = s_stmnote_bank_710 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||73c||fffd| ,s_stmnote_bank_690
Function s_stmnote_bank_690(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_bank_690 = WindFunc("s_stmnote_bank_690", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
    If VarType(s_stmnote_bank_690) <> vbString Then
      s_stmnote_bank_690 = s_stmnote_bank_690 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||1bd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||73c||fffd| ,s_stmnote_bank_720
Function s_stmnote_bank_720(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_720 = WindFunc("s_stmnote_bank_720", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_|fffd||73c||fffd| ,s_stmnote_bank_730
Function s_stmnote_bank_730(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional DataType_ As Byte = 2) As Variant
    s_stmnote_bank_730 = WindFunc("s_stmnote_bank_730", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_, DataType_)
End Function

'IPO|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_ipo_handlingDate
Function s_ipo_handlingDate(WINDCODE_ As Variant) As Variant
    s_ipo_handlingDate = WindFunc("s_ipo_handlingDate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a6| ,s_ipo_lawer
Function s_ipo_lawer(WINDCODE_ As Variant) As Variant
    s_ipo_lawer = WindFunc("s_ipo_lawer", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5f7||fffd||fffd||fffd||3e2||fffd||fffd||b6||fffd||fffd| ,s_ipo_idc
Function s_ipo_idc(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_idc = WindFunc("s_ipo_idc", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_idc) <> vbString Then
      s_ipo_idc = s_ipo_idc / UnitVal_
    End If
End Function

'|36c||fffd||fffd||2fe|A|fffd||fffd|Wind|fffd||fffd||fffd||fffd| ,s_info_asharewindcode
Function s_info_asharewindcode(WINDCODE_ As Variant) As Variant
    s_info_asharewindcode = WindFunc("s_info_asharewindcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5bd||fffd||fffd||fffd||5ea||fffd||fffd| ,s_fa_cashturnratio
Function s_fa_cashturnratio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_fa_cashturnratio = WindFunc("s_fa_cashturnratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|1f0||fffd||fffd||fffd||4e6||fffd||332||279||fffd||fffd||fffd||fffd||57c||fffd||fffd| ,s_stmnote_purchasetop5_pct
Function s_stmnote_purchasetop5_pct(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    s_stmnote_purchasetop5_pct = WindFunc("s_stmnote_purchasetop5_pct", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
End Function

'|1f0||fffd||fffd||fffd||4e6||fffd||332||279||fffd||fffd||fffd||fffd||fffd||736||fffd| ,s_stmnote_purchasetop5
Function s_stmnote_purchasetop5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_purchasetop5 = WindFunc("s_stmnote_purchasetop5", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_))
    If VarType(s_stmnote_purchasetop5) <> vbString Then
      s_stmnote_purchasetop5 = s_stmnote_purchasetop5 / UnitVal_
    End If
End Function

'2019/9/5
'|4e6||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stm07_bs_169
Function s_stm07_bs_169(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_169 = WindFunc("s_stm07_bs_169", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_169) <> vbString Then
      s_stm07_bs_169 = s_stm07_bs_169 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||5fd||fffd||fffd||fffd||123||2bd| ,f_info_settlementmode
Function f_info_settlementmode(WINDCODE_ As Variant) As Variant
    f_info_settlementmode = WindFunc("f_info_settlementmode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||5b5||fffd||fffd||228||fffd||fffd||fffd||fffd| ,f_nav_adjfactor
Function f_nav_adjfactor(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_nav_adjfactor = WindFunc("f_nav_adjfactor", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'ETF|fffd||ae7a||fffd||fffd||63e||fffd||fffd||ae7a||fffd||fffd||fffd||fffd| ,f_info_etfpr_maxpurchase
Function f_info_etfpr_maxpurchase(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_etfpr_maxpurchase = WindFunc("f_info_etfpr_maxpurchase", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
    If VarType(f_info_etfpr_maxpurchase) <> vbString Then
      f_info_etfpr_maxpurchase = f_info_etfpr_maxpurchase / UnitVal_
    End If
End Function

'ETF|fffd||ae7a||fffd||fffd||63e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_etfpr_minredemption
Function f_info_etfpr_minredemption(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_info_etfpr_minredemption = WindFunc("f_info_etfpr_minredemption", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
    If VarType(f_info_etfpr_minredemption) <> vbString Then
      f_info_etfpr_minredemption = f_info_etfpr_minredemption / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||5e2||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_approveddate
Function f_info_approveddate(WINDCODE_ As Variant) As Variant
    f_info_approveddate = WindFunc("f_info_approveddate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|) ,f_prt_industryvalue_sw
Function f_prt_industryvalue_sw(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_industryvalue_sw = WindFunc("f_prt_industryvalue_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
    If VarType(f_prt_industryvalue_sw) <> vbString Then
      f_prt_industryvalue_sw = f_prt_industryvalue_sw / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_industryvaluegrowth_sw
Function f_prt_industryvaluegrowth_sw(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte) As Variant
    f_prt_industryvaluegrowth_sw = WindFunc("f_prt_industryvaluegrowth_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_industryvaluetonav_sw
Function f_prt_industryvaluetonav_sw(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte) As Variant
    f_prt_industryvaluetonav_sw = WindFunc("f_prt_industryvaluetonav_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_industrytonavgrowth_sw
Function f_prt_industrytonavgrowth_sw(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte) As Variant
    f_prt_industrytonavgrowth_sw = WindFunc("f_prt_industrytonavgrowth_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_topindustryname_sw
Function f_prt_topindustryname_sw(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte) As Variant
    f_prt_topindustryname_sw = WindFunc("f_prt_topindustryname_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|) ,f_prt_topindustryvalue_sw
Function f_prt_topindustryvalue_sw(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topindustryvalue_sw = WindFunc("f_prt_topindustryvalue_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topindustryvalue_sw) <> vbString Then
      f_prt_topindustryvalue_sw = f_prt_topindustryvalue_sw / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_topindustryvaluetonav_sw
Function f_prt_topindustryvaluetonav_sw(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte) As Variant
    f_prt_topindustryvaluetonav_sw = WindFunc("f_prt_topindustryvaluetonav_sw", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|) ,f_prt_industryvalue_citic
Function f_prt_industryvalue_citic(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_industryvalue_citic = WindFunc("f_prt_industryvalue_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
    If VarType(f_prt_industryvalue_citic) <> vbString Then
      f_prt_industryvalue_citic = f_prt_industryvalue_citic / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_industryvaluegrowth_citic
Function f_prt_industryvaluegrowth_citic(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte) As Variant
    f_prt_industryvaluegrowth_citic = WindFunc("f_prt_industryvaluegrowth_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
End Function

'|fffd||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_industryvaluetonav_citic
Function f_prt_industryvaluetonav_citic(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte) As Variant
    f_prt_industryvaluetonav_citic = WindFunc("f_prt_industryvaluetonav_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
End Function

'|fffd||fffd||fffd||fffd||4b5||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_industrytonavgrowth_citic
Function f_prt_industrytonavgrowth_citic(WINDCODE_ As Variant, REPORTDATE_ As Variant, IndustryName_ As Byte) As Variant
    f_prt_industrytonavgrowth_citic = WindFunc("f_prt_industrytonavgrowth_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), IndustryName_)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||fffd||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_topindustryname_citic
Function f_prt_topindustryname_citic(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte) As Variant
    f_prt_topindustryname_citic = WindFunc("f_prt_topindustryname_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5|(|fffd||fffd||fffd||fffd|) ,f_prt_topindustryvalue_citic
Function f_prt_topindustryvalue_citic(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte, Optional UnitVal_ As Double = 1) As Variant
    f_prt_topindustryvalue_citic = WindFunc("f_prt_topindustryvalue_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
    If VarType(f_prt_topindustryvalue_citic) <> vbString Then
      f_prt_topindustryvalue_citic = f_prt_topindustryvalue_citic / UnitVal_
    End If
End Function

'|fffd||632||fffd||fffd||fffd||4b5||376||fffd||fffd||fffd||fffd||5b5||57c||fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd|(|fffd||fffd||fffd||fffd|) ,f_prt_topindustryvaluetonav_citic
Function f_prt_topindustryvaluetonav_citic(WINDCODE_ As Variant, REPORTDATE_ As Variant, TopN As Byte) As Variant
    f_prt_topindustryvaluetonav_citic = WindFunc("f_prt_topindustryvaluetonav_citic", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), TopN)
End Function

'|fffd||578||fffd||fffd||fffd||1ab||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||5b8||fffd||fffd|) ,f_risk_trackdeviation_trackindex
Function f_risk_trackdeviation_trackindex(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_risk_trackdeviation_trackindex = WindFunc("f_risk_trackdeviation_trackindex", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||1ab||fffd||fffd||23e||fffd||5b5|(|fffd||fffd||fffd||fffd||5b8||fffd||fffd|) ,f_risk_avgtrackdeviation_trackindex
Function f_risk_avgtrackdeviation_trackindex(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, CalcTerm_ As Integer, CalcMethod_ As Integer) As Variant
    f_risk_avgtrackdeviation_trackindex = WindFunc("f_risk_avgtrackdeviation_trackindex", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_, CalcMethod_)
End Function

'|fffd||fffd||fffd||fffd||6f9||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfd_sn_buyamt
Function s_mfd_sn_buyamt(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sn_buyamt = WindFunc("s_mfd_sn_buyamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_sn_buyamt) <> vbString Then
      s_mfd_sn_buyamt = s_mfd_sn_buyamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||6f9||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfd_sn_sellamt
Function s_mfd_sn_sellamt(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sn_sellamt = WindFunc("s_mfd_sn_sellamt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_sn_sellamt) <> vbString Then
      s_mfd_sn_sellamt = s_mfd_sn_sellamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||6f9||fffd||368||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfd_sn_inflow
Function s_mfd_sn_inflow(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfd_sn_inflow = WindFunc("s_mfd_sn_inflow", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
    If VarType(s_mfd_sn_inflow) <> vbString Then
      s_mfd_sn_inflow = s_mfd_sn_inflow / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4fbb||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfp_sn_inflowamt
Function s_mfp_sn_inflowamt(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_mfp_sn_inflowamt = WindFunc("s_mfp_sn_inflowamt", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
    If VarType(s_mfp_sn_inflowamt) <> vbString Then
      s_mfp_sn_inflowamt = s_mfp_sn_inflowamt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||4fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfp_sn_inflowdays
Function s_mfp_sn_inflowdays(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_mfp_sn_inflowdays = WindFunc("s_mfp_sn_inflowdays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||4fbb||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfp_sn_outflowdays
Function s_mfp_sn_outflowdays(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    s_mfp_sn_outflowdays = WindFunc("s_mfp_sn_outflowdays", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfn_sn_inflowdays
Function s_mfn_sn_inflowdays(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfn_sn_inflowdays = WindFunc("s_mfn_sn_inflowdays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_mfn_sn_outflowdays
Function s_mfn_sn_outflowdays(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_mfn_sn_outflowdays = WindFunc("s_mfn_sn_outflowdays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||6fc||1b7||5ba||fffd||fffd||736||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd|) ,s_div_aualaccmdiv_ard
Function s_div_aualaccmdiv_ard(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional UnitVal_ As Double = 1) As Variant
    s_div_aualaccmdiv_ard = WindFunc("s_div_aualaccmdiv_ard", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), Year_)
    If VarType(s_div_aualaccmdiv_ard) <> vbString Then
      s_div_aualaccmdiv_ard = s_div_aualaccmdiv_ard / UnitVal_
    End If
End Function

'|1f0||fffd||fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_customertop5
Function s_stmnote_customertop5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Sequence_ As Byte) As Variant
    s_stmnote_customertop5 = WindFunc("s_stmnote_customertop5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Sequence_)
End Function

'|1f0||fffd||fffd||fffd||4e6||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_suppliertop5
Function s_stmnote_suppliertop5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Sequence_ As Byte) As Variant
    s_stmnote_suppliertop5 = WindFunc("s_stmnote_suppliertop5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Sequence_)
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd| ,s_info_director
Function s_info_director(WINDCODE_ As Variant) As Variant
    s_info_director = WindFunc("s_info_director", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||2fe||fffd||fffd||fffd||fffd| ,s_info_supervisor
Function s_info_supervisor(WINDCODE_ As Variant) As Variant
    s_info_supervisor = WindFunc("s_info_supervisor", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||2fe||fffd||7f9||fffd| ,s_info_executives
Function s_info_executives(WINDCODE_ As Variant) As Variant
    s_info_executives = WindFunc("s_info_executives", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||5f7||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_ipo_usfees
Function s_ipo_usfees(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_usfees = WindFunc("s_ipo_usfees", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_usfees) <> vbString Then
      s_ipo_usfees = s_ipo_usfees / UnitVal_
    End If
End Function

'|fffd||b9||fffd||fffd||fffd||fffd||6fe||fffd||fffd||fffd||4f6||fffd||fffd||fffd||fffd||fffd| ,s_ipo_commissionrate
Function s_ipo_commissionrate(WINDCODE_ As Variant) As Variant
    s_ipo_commissionrate = WindFunc("s_ipo_commissionrate", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||43e||fffd||fffd||fffd| ,s_ipo_pb
Function s_ipo_pb(WINDCODE_ As Variant) As Variant
    s_ipo_pb = WindFunc("s_ipo_pb", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|57d||fffd||fffd||fffd||fffd||fffd||6fb||fffd||fffd||fffd||277||fffd||fffd||fffd| ,s_ipo_siallotment
Function s_ipo_siallotment(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_siallotment = WindFunc("s_ipo_siallotment", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_siallotment) <> vbString Then
      s_ipo_siallotment = s_ipo_siallotment / UnitVal_
    End If
End Function

'|57d||fffd||fffd||fffd||fffd||fffd||6fb||fffd||fffd||fffd||277||fffd||57c||fffd||fffd| ,s_ipo_siallotmentratio
Function s_ipo_siallotmentratio(WINDCODE_ As Variant) As Variant
    s_ipo_siallotmentratio = WindFunc("s_ipo_siallotmentratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57d||fffd||53b||fffd||fffd||fffd||277||fffd||fffd||fffd| ,s_ipo_underwriterallotment
Function s_ipo_underwriterallotment(WINDCODE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    s_ipo_underwriterallotment = WindFunc("s_ipo_underwriterallotment", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
    If VarType(s_ipo_underwriterallotment) <> vbString Then
      s_ipo_underwriterallotment = s_ipo_underwriterallotment / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57d||fffd||53b||fffd||fffd||fffd||277||fffd||57c||fffd||fffd| ,s_ipo_underwriterallotmentratio
Function s_ipo_underwriterallotmentratio(WINDCODE_ As Variant) As Variant
    s_ipo_underwriterallotmentratio = WindFunc("s_ipo_underwriterallotmentratio", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"))
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||43d||fffd||fffd| ,s_stmnote_rdsalary
Function s_stmnote_rdsalary(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_rdsalary = WindFunc("s_stmnote_rdsalary", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_rdsalary) <> vbString Then
      s_stmnote_rdsalary = s_stmnote_rdsalary / UnitVal_
    End If
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd|-|fffd||6fe||fffd||32f||fffd||fffd| ,s_stmnote_rdda
Function s_stmnote_rdda(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_rdda = WindFunc("s_stmnote_rdda", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_rdda) <> vbString Then
      s_stmnote_rdda = s_stmnote_rdda / UnitVal_
    End If
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||7b7||fffd| ,s_stmnote_rdlease
Function s_stmnote_rdlease(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_rdlease = WindFunc("s_stmnote_rdlease", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_rdlease) <> vbString Then
      s_stmnote_rdlease = s_stmnote_rdlease / UnitVal_
    End If
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd|-|5b1||fffd||fffd||376||fffd||fffd| ,s_stmnote_rdinv
Function s_stmnote_rdinv(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_rdinv = WindFunc("s_stmnote_rdinv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_rdinv) <> vbString Then
      s_stmnote_rdinv = s_stmnote_rdinv / UnitVal_
    End If
End Function

'|fffd||437||fffd||fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd| ,s_stmnote_rdothers
Function s_stmnote_rdothers(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional TYPE_ As Byte = 1, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_rdothers = WindFunc("s_stmnote_rdothers", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_rdothers) <> vbString Then
      s_stmnote_rdothers = s_stmnote_rdothers / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|5b8||fffd||fffd||fffd||fffd||fffd||fffd|) ,b_rate_latest1
Function b_rate_latest1(WINDCODE_ As Variant, RATINGAGENCY_ As String) As Variant
    b_rate_latest1 = WindFunc("b_rate_latest1", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), RATINGAGENCY_)
End Function

'|fffd||fffd||fffd||fffd||376||fffd||fffd| ,s_stm07_bs_fininv
Function s_stm07_bs_fininv(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_bs_fininv = WindFunc("s_stm07_bs_fininv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_bs_fininv) <> vbString Then
      s_stm07_bs_fininv = s_stm07_bs_fininv / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||56e||fffd||fffd| ,hks_fa_netdebtratio
Function hks_fa_netdebtratio(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    hks_fa_netdebtratio = WindFunc("hks_fa_netdebtratio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||2b2||fffd||fffd||fffd||5b5||fffd||fffd||2a7| ,s_stm07_is_106
Function s_stm07_is_106(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stm07_is_106 = WindFunc("s_stm07_is_106", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stm07_is_106) <> vbString Then
      s_stm07_is_106 = s_stm07_is_106 / UnitVal_
    End If
End Function

'2019/9/10
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|) ,b_rate_latestMIR_csi
Function b_rate_latestMIR_csi(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_rate_latestMIR_csi = WindFunc("b_rate_latestMIR_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd||fffd||56e|)3.0 ,b_calc_chinabond
Function b_calc_chinabond(WINDCODE_ As Variant, TRADEDATE_ As Variant, Term_ As String) As Variant
    b_calc_chinabond = WindFunc("b_calc_chinabond", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), Term_)
End Function

'|fffd||fffd||fffd||fffd||fffd||6b2||fffd||36c||fffd||5b2||5b7||fffd||fffd||fffd||1b1||5bb||fffd||fffd| ,f_prt_sharenum_stkhldgstyle
Function f_prt_sharenum_stkhldgstyle(WINDCODE_ As Variant, REPORTDATE_ As Variant, StyleType_ As Integer) As Variant
    f_prt_sharenum_stkhldgstyle = WindFunc("f_prt_sharenum_stkhldgstyle", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_), StyleType_)
End Function

'|fffd||fffd||fffd||aefb||fffd||fffd||fffd||fffd| ,f_hq_turn
Function f_hq_turn(WINDCODE_ As Variant, Optional Year_ As Integer = 2019, Optional IntervalType_ As String) As Variant
    f_hq_turn = WindFunc("f_hq_turn", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), Year_, IntervalType_)
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||433||fffd|) ,f_stm_bs_repoin_exchmkt
Function f_stm_bs_repoin_exchmkt(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_bs_repoin_exchmkt = WindFunc("f_stm_bs_repoin_exchmkt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_bs_repoin_exchmkt) <> vbString Then
      f_stm_bs_repoin_exchmkt = f_stm_bs_repoin_exchmkt / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||bdf5||fffd||6fd||fffd||fffd||fffd||fffd||2b2||fffd|(|fffd||fffd||fffd||43c||fffd||fffd||433||fffd|) ,f_stm_bs_repoin_interbmkt
Function f_stm_bs_repoin_interbmkt(WINDCODE_ As Variant, REPORTDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    f_stm_bs_repoin_interbmkt = WindFunc("f_stm_bs_repoin_interbmkt", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
    If VarType(f_stm_bs_repoin_interbmkt) <> vbString Then
      f_stm_bs_repoin_interbmkt = f_stm_bs_repoin_interbmkt / UnitVal_
    End If
End Function

'Wind|fffd||fffd||1b7||fffd||fffd||fffd||fffd| ,f_info_prodtype_wind
Function f_info_prodtype_wind(WINDCODE_ As Variant) As Variant
    f_info_prodtype_wind = WindFunc("f_info_prodtype_wind", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||4bb||376||fffd||fffd||fffd||7f1||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd||437||776||fffd| ,f_holder_single_holding
Function f_holder_single_holding(WINDCODE_ As Variant, REPORTDATE_ As Integer, Optional Year_ As Integer = 2019, Optional InvestorType_ As String, Optional Number_ As Integer, Optional UnitVal_ As Double = 1) As Variant
    f_holder_single_holding = WindFunc("f_holder_single_holding", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), REPORTDATE_, Year_, InvestorType_, Number_)
    If VarType(f_holder_single_holding) <> vbString Then
      f_holder_single_holding = f_holder_single_holding / UnitVal_
    End If
End Function

'|fffd||fffd||4bb||376||fffd||fffd||fffd||7f1||fffd||fffd||fffd||fffd||fffd||129||fffd||fffd||fffd||431||fffd||fffd||fffd| ,f_holder_single_holdingpct
Function f_holder_single_holdingpct(WINDCODE_ As Variant, REPORTDATE_ As Integer, Optional Year_ As Integer = 2019, Optional InvestorType_ As String, Optional Number_ As Integer) As Variant
    f_holder_single_holdingpct = WindFunc("f_holder_single_holdingpct", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), REPORTDATE_, Year_, InvestorType_, Number_)
End Function

'|fffd||fffd||fffd||fffd|-|fffd||fffd||fffd||fffd||fffd||5b5| ,s_stmnote_goodwilldetail
Function s_stmnote_goodwilldetail(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_goodwilldetail = WindFunc("s_stmnote_goodwilldetail", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_goodwilldetail) <> vbString Then
      s_stmnote_goodwilldetail = s_stmnote_goodwilldetail / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd|-|fffd||fffd||5b5||5fc||fffd||fffd| ,s_stmnote_goodwillimpairment
Function s_stmnote_goodwillimpairment(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_goodwillimpairment = WindFunc("s_stmnote_goodwillimpairment", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), TYPE_)
    If VarType(s_stmnote_goodwillimpairment) <> vbString Then
      s_stmnote_goodwillimpairment = s_stmnote_goodwillimpairment / UnitVal_
    End If
End Function

'2019/9/12
'|fffd||fffd||fffd||fffd||52d||fffd||fffd| ,f_info_manager_resignationreason
Function f_info_manager_resignationreason(WINDCODE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_info_manager_resignationreason = WindFunc("f_info_manager_resignationreason", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
End Function

'|fffd||fffd||5b0||fffd||fffd||fffd||fffd||7dc7c||fffd||bc| ,f_info_manager_awardrecord
Function f_info_manager_awardrecord(WINDCODE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_info_manager_awardrecord = WindFunc("f_info_manager_awardrecord", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||734||fffd||fffd||fffd| ,f_info_manager_awardrecordnum
Function f_info_manager_awardrecordnum(WINDCODE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_info_manager_awardrecordnum = WindFunc("f_info_manager_awardrecordnum", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||631||fffd| ,f_info_manager_maxreturn
Function f_info_manager_maxreturn(WINDCODE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_info_manager_maxreturn = WindFunc("f_info_manager_maxreturn", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||633||fffd| ,f_info_manager_maxdrawdown
Function f_info_manager_maxdrawdown(WINDCODE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_info_manager_maxdrawdown = WindFunc("f_info_manager_maxdrawdown", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||fffd||fffd||fffd||631||fffd| ,f_info_managerindex_return
Function f_info_managerindex_return(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional TopN As Byte = 1, Optional IndexBelong_ As Integer) As Variant
    f_info_managerindex_return = WindFunc("f_info_managerindex_return", 5, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), TopN, IndexBelong_)
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||5b8||fffd||fffd||fffd||aeef||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_managerindex_stdevyearly
Function f_info_managerindex_stdevyearly(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional CalcTerm_ As Integer = 2, Optional CalcMethod_ As Integer = 1, Optional TopN As Byte = 1, Optional IndexBelong_ As Integer) As Variant
    f_info_managerindex_stdevyearly = WindFunc("f_info_managerindex_stdevyearly", 7, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), CalcTerm_, CalcMethod_, TopN, IndexBelong_)
End Function

'|fffd||fffd||fffd||fffd||fffd||2bc||fffd||fffd||fffd||fffd| ,f_info_initialcode
Function f_info_initialcode(WINDCODE_ As Variant) As Variant
    f_info_initialcode = WindFunc("f_info_initialcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_relatedcode
Function f_info_relatedcode(WINDCODE_ As Variant) As Variant
    f_info_relatedcode = WindFunc("f_info_relatedcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|36c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|P|5b5| ,f_nav_ranking_p
Function f_nav_ranking_p(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant, Optional FundGroup_ As Integer = 1) As Variant
    f_nav_ranking_p = WindFunc("f_nav_ranking_p", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_), FundGroup_)
End Function

'|524||fffd||1b7||fffd||fffd||fffd||6bd||fffd||fffd||fffd||fffd||fffd| ,f_info_expectedendingday
Function f_info_expectedendingday(WINDCODE_ As Variant) As Variant
    f_info_expectedendingday = WindFunc("f_info_expectedendingday", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'2019/9/16
'|fffd||fffd||fffd||73b||fffd||fffd||fffd||fffd||fffd||2f5||fffd||fffd| ,f_info_manager_proxyformanager
Function f_info_manager_proxyformanager(WINDCODE_ As Variant, Optional TopN As Byte = 1) As Variant
    f_info_manager_proxyformanager = WindFunc("f_info_manager_proxyformanager", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), TopN)
End Function

'IRR(|5a7||fffd||fffd||fffd||fffd||2b7|) ,b_tbf_IRR2
Function b_tbf_IRR2(WINDCODE_ As Variant, TRADEDATE_ As Variant, PriceType_ As Byte, Optional TYPE_ As String = "NQ1") As Variant
    b_tbf_IRR2 = WindFunc("b_tbf_IRR2", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_), PriceType_, TYPE_)
End Function

'2019/9/18
'|fffd||fffd||fffd||43d||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_ipo_tradedays
Function s_ipo_tradedays(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_ipo_tradedays = WindFunc("s_ipo_tradedays", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||5bd||fffd||5ba||fffd||fffd||fffd||fffd| ,hks_div_freq
Function hks_div_freq(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    hks_div_freq = WindFunc("hks_div_freq", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), Year_)
End Function

'|fffd||fffd||fffd||fffd||6fc||1b7||5ba||fffd||fffd||736||fffd| ,hks_div_aualaccmdiv
Function hks_div_aualaccmdiv(WINDCODE_ As Variant, Optional Year_ As Integer = 2018, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_div_aualaccmdiv = WindFunc("hks_div_aualaccmdiv", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), Year_, GetValidCurType(CURTYPE_))
    If VarType(hks_div_aualaccmdiv) <> vbString Then
      hks_div_aualaccmdiv = hks_div_aualaccmdiv / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||5bd||fffd||5ba||fffd||fffd||fffd||fffd| ,hks_div_payoutRatio
Function hks_div_payoutRatio(WINDCODE_ As Variant, Optional Year_ As Integer = 2018) As Variant
    hks_div_payoutRatio = WindFunc("hks_div_payoutRatio", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), Year_)
End Function

'|fffd||fffd||fffd||fffd||368||fffd||fffd| ,hks_share_nontradable
Function hks_share_nontradable(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional UnitVal_ As Double = 1) As Variant
    hks_share_nontradable = WindFunc("hks_share_nontradable", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(TRADEDATE_))
    If VarType(hks_share_nontradable) <> vbString Then
      hks_share_nontradable = hks_share_nontradable / UnitVal_
    End If
End Function

'|fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,s_stmnote_sales_top5
Function s_stmnote_sales_top5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Sequence_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_sales_top5 = WindFunc("s_stmnote_sales_top5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Sequence_)
    If VarType(s_stmnote_sales_top5) <> vbString Then
      s_stmnote_sales_top5 = s_stmnote_sales_top5 / UnitVal_
    End If
End Function

'|fffd||fffd||4e6||fffd||332||279||fffd||fffd||fffd||fffd| ,s_stmnote_purchase_top5
Function s_stmnote_purchase_top5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Sequence_ As Byte, Optional UnitVal_ As Double = 1) As Variant
    s_stmnote_purchase_top5 = WindFunc("s_stmnote_purchase_top5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Sequence_)
    If VarType(s_stmnote_purchase_top5) <> vbString Then
      s_stmnote_purchase_top5 = s_stmnote_purchase_top5 / UnitVal_
    End If
End Function

'|fffd||fffd||37b||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||57c||fffd||fffd| ,s_stmnote_sales_pct_top5
Function s_stmnote_sales_pct_top5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Sequence_ As Byte) As Variant
    s_stmnote_sales_pct_top5 = WindFunc("s_stmnote_sales_pct_top5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Sequence_)
End Function

'|fffd||fffd||4e6||fffd||332||279||fffd||fffd||fffd||fffd||57c||fffd||fffd| ,s_stmnote_purchase__pct_top5
Function s_stmnote_purchase__pct_top5(WINDCODE_ As Variant, REPORTDATE_ As Variant, Sequence_ As Byte) As Variant
    s_stmnote_purchase__pct_top5 = WindFunc("s_stmnote_purchase__pct_top5", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(REPORTDATE_), Sequence_)
End Function

'|fffd||fffd||fffd||13c||fffd||fffd||fffd||fffd||fffd||531||fffd||fffd||fffd||fffd| ,s_employee_techcore
Function s_employee_techcore(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    s_employee_techcore = WindFunc("s_employee_techcore", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||368||fffd||276||fffd||fffd||5b9||271||fffd||fffd||fffd|(|fffd||fffd||fffd||fffd||739||271||fffd|) ,s_holder_pct_liq
Function s_holder_pct_liq(WINDCODE_ As Variant, TRADEDATE_ As Variant, Sequence_ As Byte) As Variant
    s_holder_pct_liq = WindFunc("s_holder_pct_liq", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "S"), GetValidDate(TRADEDATE_), Sequence_)
End Function

'DMI|fffd||fffd||fffd||fffd||fffd||5fc| ,DMI_2
Function DMI_2(WINDCODE_ As Variant, TRADEDATE_ As Variant, Optional DMI_N1_ As Integer = 14, Optional DMI_IO_ As Integer = 1, Optional AdjustType_ As Byte = 1, Optional Cycle_ As Integer = 1) As Variant
    DMI_2 = WindFunc("DMI_2", 6, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "D"), GetValidDate(TRADEDATE_), DMI_N1_, DMI_IO_, AdjustType_, Cycle_)
End Function

'2019/10/18
'|fffd||fffd||fffd||fffd||3a5||53c||fffd||fffd|(|fffd||fffd||5a4||5b8||fffd||fffd|) ,b_rate_default_csi
Function b_rate_default_csi(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    b_rate_default_csi = WindFunc("b_rate_default_csi", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||3fe||fffd||fffd||fffd| ,f_risk_duration
Function f_risk_duration(WINDCODE_ As Variant, REPORTDATE_ As Variant) As Variant
    f_risk_duration = WindFunc("f_risk_duration", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(REPORTDATE_))
End Function

'|fffd||fffd||fffd||6f7||fffd||fffd||fffd|_GSD ,hks_stm_is_47
Function hks_stm_is_47(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_stm_is_47 = WindFunc("hks_stm_is_47", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_stm_is_47) <> vbString Then
      hks_stm_is_47 = hks_stm_is_47 / UnitVal_
    End If
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|_GSD ,hks_stm_is_15
Function hks_stm_is_15(WINDCODE_ As Variant, REPORTDATE_ As Variant, TYPE_ As Byte, Optional CURTYPE_ As String, Optional UnitVal_ As Double = 1) As Variant
    hks_stm_is_15 = WindFunc("hks_stm_is_15", 4, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "H"), GetValidDate(REPORTDATE_), TYPE_, GetValidCurType(CURTYPE_))
    If VarType(hks_stm_is_15) <> vbString Then
      hks_stm_is_15 = hks_stm_is_15 / UnitVal_
    End If
End Function

'|fffd||1f7||fffd||fffd||fffd||fffd||fffd||56e| ,b_info_perpetualornot
Function b_info_perpetualornot(WINDCODE_ As Variant) As Variant
    b_info_perpetualornot = WindFunc("b_info_perpetualornot", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "B"))
End Function

'|fffd||fffd||fffd||1b2||fffd||1b7||fffd||1fc||1f1||fffd||fffd||fffd| ,f_info_bwmp_recordcode
Function f_info_bwmp_recordcode(WINDCODE_ As Variant) As Variant
    f_info_bwmp_recordcode = WindFunc("f_info_bwmp_recordcode", 1, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"))
End Function

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_info_riskreturn_characters
Function f_info_riskreturn_characters(WINDCODE_ As Variant, TRADEDATE_ As Variant) As Variant
    f_info_riskreturn_characters = WindFunc("f_info_riskreturn_characters", 2, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(TRADEDATE_))
End Function

'|fffd||fffd||fffd||633||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| ,f_risk_maxdownside_date
Function f_risk_maxdownside_date(WINDCODE_ As Variant, StartDate_ As Variant, EndDate_ As Variant) As Variant
    f_risk_maxdownside_date = WindFunc("f_risk_maxdownside_date", 3, WindCodeXY(WINDCODE_), WindCodeVals(WINDCODE_, "F"), GetValidDate(StartDate_), GetValidDate(EndDate_))
End Function




Function To_TradeCode(stock As String) As Variant
    To_TradeCode = WindFunc("To_TradeCode", 1, 1, stock, Null, Null, Null, Null, Null)
End Function

Function To_WindCode(stock As String) As Variant
    To_WindCode = WindFunc("To_WindCode", 1, 1, stock, Null, Null, Null, Null, Null)
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private WithEvents App As Application
Attribute App.VB_VarHelpID = -1


'Excel |fffd||fffd|WorkBook |fffd||bc||fffd|
Private Sub App_WorkbookOpen(ByVal Wb As Workbook)
  Dim MyName As String
  Dim MyPath As String
  Dim LastName As String
  Dim NowName As String
  Dim LinkName As String
  Dim i As Integer
  Dim NeedCalc As Boolean
  
  On Error Resume Next
  
  If ((UCase(Wb.name)) = "WINDFUNC.XLA") Then
    Exit Sub
  End If
  
  NeedCalc = True
  If Wb.Sheets(1).EnableCalculation = False Then
    NeedCalc = False
  Else
    For i = 1 To Wb.Sheets.Count
      Wb.Sheets(i).EnableCalculation = False
    Next i
  End If
  
  
    
  MyName = UCase("\" & ThisWorkbook.name)
  LastName = UCase("\Wind|fffd||fffd||fffd||fffd|.XLA")
  
  MyPath = UCase(ThisWorkbook.FullName)
 
  Dim LinkFileName As String
  Dim OldLinkFileName As String
  
  
  aLinks = Wb.LinkSources(xlExcelLinks)
  If Not IsEmpty(aLinks) Then
     For i = 1 To UBound(aLinks)
         LinkFileName = UCase(aLinks(i))
         
         LinkName = Right(LinkFileName, Len(MyName))
         If (MyName = LinkName) And (MyPath <> LinkFileName) Then
            Wb.ChangeLink LinkFileName, MyPath, xlLinkTypeExcelLinks
         End If
         
         OldLinkFileName = Replace(LinkFileName, LastName, MyName)
         If (OldLinkFileName <> LinkFileName) Then
            Wb.ChangeLink LinkFileName, MyPath, xlLinkTypeExcelLinks
         End If
         
         Next i
  End If
  
  If NeedCalc = True Then
    For i = 1 To Wb.Sheets.Count
      Wb.Sheets(i).EnableCalculation = True
    Next i
  End If

End Sub


Private Sub Workbook_Open()
  If App Is Nothing Then
    Set App = Application
  End If
End Sub

' InQuest injected base64 decoded content
' jZ :
' %zwb
' !jw]z
' DDBD@
' 2TI2
' DADDCB
' I4@ a
' zw!jy
' zWpj
' zWpj
' zWpj
' fz{m
' !jx"
' zWly
' v+kj
' j{^y
' bjz)z
' !jx"
' ~'"jV
' o'+y
' v+kj
' v+kj

INQUEST-PP=macro
