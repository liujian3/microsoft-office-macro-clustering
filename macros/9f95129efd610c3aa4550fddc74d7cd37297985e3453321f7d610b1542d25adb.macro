Attribute VB_Name = "Module1"
Public WSDRL As Worksheet
Public WAPI618 As Worksheet
Public WAPI617 As Worksheet
Public WAPI610 As Worksheet
Public WFS As Worksheet
Public WLCI As Worksheet
Public WCS As Worksheet
Public WB As Workbook
Public WRWP As Worksheet
Public WED As Worksheet

' V1.4


'                                                         ,/
'                                                        //
'                                                      ,//
'                                          ___   /|   |//
'                                      `__/\_ --(/|___/-/
'                                   \|\_-\___ __-_`- /-/ \.
'                                  |\_-___,-\_____--/_)' ) \
'                                   \ -_ /     __ \( `( __`\|
'                                   `\__|      |\)\ ) /(/|
'           ,._____.,            ',--//-|      \  |  '   /
'          /     __. \,          / /,---|       \       /
'         / /    _. \  \        `/`_/ _,'        |     |
'        |  | ( (  \   |      ,/\'__/'/          |     |
'        |  \  \`--, `_/_------______/           \(   )/
'        | | \  \_. \,                            \___/\
'        | |  \_   \  \                                 \
'        \ \    \_ \   \   /                             \
'         \ \  \._  \__ \_|       |                       \
'          \ \___  \      \       |        MacroMarius     \
'           \__ \__ \  \_ |       \                         |
'           |  \_____ \  ____      |                        |
'           | \  \__ ---' .__\     |        |               |
'           \  \__ ---   /   )     |        \              /
'            \   \____/ / ()(      \          `---_       /|
'             \__________/(,--__    \_________.    |    ./ |
'               |     \ \  `---_\--,           \   \_,./   |
'               |      \  \_ ` \    /`---_______-\   \\    /
'                \      \.___,`|   /              \   \\   \
'                 \     |  \_ \|   \              (   |:    |
'                  \    \      \    |             /  / |    ;
'                   \    \      \    \          ( `_'   \  |
'                    \.   \      \.   \          `__/   |  |
'                      \   \       \.  \                |  |
'                       \   \        \  \               (  )
'                        \   |        \  |              |  |
'                         |  \         \ \              I  `
'                         ( __;        ( _;            ('-_';
'                         |___\        \___:            \___:

Sub public_variables()

Set WB = ThisWorkbook
Set WSDRL = WB.Worksheets("SDRL Format")
Set WAPI618 = WB.Worksheets("API 618")
Set WAPI617 = WB.Worksheets("API 617")
Set WRWP = WB.Worksheets("RWP")
Set WAPI610 = WB.Worksheets("API 610")
Set WFS = WB.Worksheets("Front Sheet")
Set WCS = WB.Worksheets("Control Sheet")
Set WLCI = WB.Worksheets("LCI requirements")
Set WED = WB.Worksheets("Engineering Deliverables")


End Sub
Attribute VB_Name = "Module2"
Sub Magic_Button()

Call public_variables


End Sub
Attribute VB_Name = "Module3"
Sub LCI_ReQ()
Dim ItemThing() As String
Dim Refcode() As String
Dim milestone() As String
Dim target As Range
Dim duplicate() As Double
Dim DocCode() As String
Dim FormatVal() As String



Call public_variables
Row4_numb = WLCI.Cells(4, Columns.Count).End(xlToLeft).Column
ColumnD_numb = WCS.Cells(Rows.Count, "D").End(xlUp).Row - 5
columnb_numb = WLCI.Cells(Rows.Count, "A").End(xlUp).Row - 4



ReDim ItemThing(1 To 200)
ReDim Refcode(1 To 200)
ReDim duplicate(1 To 200)
ReDim milestone(1 To 200)
ReDim DocCode(1 To 200)
ReDim FormatVal(1 To 200)

j = 1
For n = 1 To ColumnD_numb                                               ' Runs through all equipment in Control sheet to find match with LCI items
    If WCS.Cells(4 + n, "E") = LCase("x") Then
        For i = 1 To Row4_numb - 1                                               ' Runs through all equipment in LCI requirements
            If WLCI.Cells(4, i) = WCS.Cells(n + 4, "D") And WCS.Cells(n + 4, "E") = LCase("x") Then                                            ' Checks if the item found in LCI requirements matches the one in LCI
                For m = 1 To columnb_numb                                                             ' Runs down to find if LCI items for that equipement
                    Debug.Print LCase(WLCI.Cells(m + 4, "G"))
                    Debug.Print WLCI.Cells(4, i)
                    If LCase(Left(WLCI.Cells(m + 4, i), 1)) = LCase("x") Then                               ' If it is a match with item and equipment
                        duplicatesjekk = m + 4
                        approved = 1
                        For k = 1 To j
                            If duplicatesjekk = duplicate(k) Then
                                approved = 0
                            End If
                        Next
                        If approved = 1 Then
                            duplicate(j) = m + 4
                            ItemThing(j) = WLCI.Cells(m + 4, "B")
                            DocCode(j) = WLCI.Cells(m + 4, "A")
                            Refcode(j) = WLCI.Cells(m + 4, "C")
                            milestone(j) = WLCI.Cells(m + 4, "E")
                            FormatVal(j) = WLCI.Cells(m + 4, "D")
               '            Debug.Print ItemThing(j)
                            j = j + 1
                        End If                                                          ' Finds the number it is stored in.
                    End If
                Next
            End If
        Next
    End If

Next

j = j - 1

lastcellSDRL_B = WSDRL.Cells(Rows.Count, "D").End(xlUp).Row

For r = 1 To j
    WSDRL.Cells(lastcellSDRL_B + r, "D") = ItemThing(r)
    WSDRL.Cells(lastcellSDRL_B + r, "L") = Refcode(r)
    WSDRL.Cells(lastcellSDRL_B + r, "M") = milestone(r)
    WSDRL.Cells(lastcellSDRL_B + r, "B") = DocCode(r)
    WSDRL.Cells(lastcellSDRL_B + r, "N") = FormatVal(r)
    WSDRL.Cells(lastcellSDRL_B + r, "O") = "LCI"
Next

lastcellSDRL_B_New = WSDRL.Cells(Rows.Count, "B").End(xlUp).Row





End Sub
Attribute VB_Name = "Module4"
Sub discipline()

Call public_variables

Dim DiscA() As String
Dim DiscB() As String
Dim DiscC() As String
Dim DiscD() As String
Dim DiscE() As String
Dim DiscG() As String
Dim discF() As String


ColumnF_numb = WED.Cells(Rows.Count, "F").End(xlUp).Row
ColumnI_numb = WCS.Cells(Rows.Count, "G").End(xlUp).Row - 4

ReDim DiscA(1 To ColumnF_numb) As String
ReDim DiscB(1 To ColumnF_numb) As String
ReDim DiscC(1 To ColumnF_numb) As String
ReDim DiscD(1 To ColumnF_numb) As String
ReDim DiscE(1 To ColumnF_numb) As String
ReDim discF(1 To ColumnF_numb) As String
ReDim DiscG(1 To ColumnF_numb) As String

j = 1
For n = 1 To ColumnI_numb                                                                       ' Runs through all Discipline in Engineering Deliverables
    If WCS.Cells(4 + n, "H") = LCase("x") Then
        DisciplineThing = WCS.Cells(4 + n, "G")
        For i = 1 To ColumnF_numb                                                           ' Runs through all engineering discipline
            If WED.Cells(3 + i, "F") = DisciplineThing Then
                duplicatcheck = WED.Cells(3 + i, "B")
                If duplicatcheck = "DFI Resumes (1)" Then
                    hei = 0
                End If
                
                Jump = 0
                For m = 1 To j
                    If DiscB(m) = duplicatcheck Then
                        Jump = 1
                    End If
                Next
                
                If Jump = 0 Then
                        DiscA(j) = WED.Cells(3 + i, "A")
                        DiscB(j) = WED.Cells(3 + i, "B")
                        DiscC(j) = WED.Cells(3 + i, "C")
                        DiscD(j) = WED.Cells(3 + i, "D")
                        DiscE(j) = WED.Cells(3 + i, "E")
                        DiscG(j) = WED.Cells(3 + i, "G")
                        discF(j) = WED.Cells(3 + i, "F")
                        j = j + 1
                End If

             End If
        Next
    End If
Next
        
lastcellSDRL_B = WSDRL.Cells(Rows.Count, "B").End(xlUp).Row
lastcellWSDRL = WSDRL.Cells(Rows.Count, "D").End(xlUp).Row - 7
j = j - 1
For r = 1 To j
    sjekk = 0
    For b = 1 To lastcellWSDRL
        If DiscB(r) = WSDRL.Cells(7 + b, "D") Then
            sjekk = 1
        End If
    Next
    If sjekk = 0 Then
        WSDRL.Cells(lastcellSDRL_B + r, "B") = DiscA(r)
        WSDRL.Cells(lastcellSDRL_B + r, "D") = DiscB(r)
        WSDRL.Cells(lastcellSDRL_B + r, "L") = DiscC(r)
        WSDRL.Cells(lastcellSDRL_B + r, "N") = DiscD(r)
        WSDRL.Cells(lastcellSDRL_B + r, "M") = DiscE(r)
        WSDRL.Cells(lastcellSDRL_B + r, "O") = "EngD"
        WSDRL.Cells(lastcellSDRL_B + r, "A") = discF(r)
    End If
Next

End Sub
Attribute VB_Name = "Module5"
Sub Starting()

Call public_variables

Dim deletable As Range

lastcellB = WSDRL.Cells(Rows.Count, "B").End(xlUp).Row
lastcellC = WSDRL.Cells(Rows.Count, "C").End(xlUp).Row
lastcellD = WSDRL.Cells(Rows.Count, "D").End(xlUp).Row
lastcellO = WSDRL.Cells(Rows.Count, "O").End(xlUp).Row

lastcellstart = lastcellB
If lastcellC > lastcellstart Then
    lastcellstart = lastcellC
End If

If lastcellD > lastcellstart Then
    lastcellstart = lastcellD
End If

If lastcellO > lastcellstart Then
    lastcellstart = lastcellO
End If


If lastcellstart > 7 Then

    Set deletable = Range(WSDRL.Cells(8, "A"), WSDRL.Cells(lastcellstart, "v"))
    deletable.Delete Shift:=xlUp

End If

WSDRL.Cells(2, "H") = WFS.Cells(53, "I")



Call LCI_ReQ
Call discipline
Call API
Call formatting

Call copything

End Sub
Attribute VB_Name = "Module6"
Sub copything()

Call public_variables
Dim rng As Range
Dim rng2 As Range


lastcellG = WCS.Cells(Rows.Count, "G").End(xlUp).Row
lastcellSDRL = WSDRL.Cells(Rows.Count, "L").End(xlUp).Row

Set rng = Range(WCS.Cells(19, "G"), WCS.Cells(lastcellG, "Z"))
Set rng2 = Range(WSDRL.Cells(lastcellSDRL + 2, "B"), WSDRL.Cells(lastcellSDRL + 2, "B"))


    rng.Copy Destination:=WSDRL.Range(Cells(lastcellSDRL + 2, "B"), Cells(lastcellSDRL + 2, "B"))
    
Set rng = Nothing
Set rng2 = Nothing

    
End Sub
Attribute VB_Name = "Module7"
Sub formatting()

Call public_variables


lastcellL = WSDRL.Cells(Rows.Count, "L").End(xlUp).Row

WSDRL.Activate



If lastcellL > 7 Then
    For coloring = 1 To 22
    Select Case coloring

        '******************************************
        Case 4 To 5
        Range(WSDRL.Cells(8, coloring), WSDRL.Cells(lastcellL, coloring)).Select
        With Selection.Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .Color = 13434879
            .TintAndShade = 0
            .PatternTintAndShade = 0
        End With

        '*****************************************

        '*******************************************
        Case 6 To 7
        Range(WSDRL.Cells(8, coloring), WSDRL.Cells(lastcellL, coloring)).Select
        Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        '*********************************************
        Case 8 To 11
        Range(WSDRL.Cells(8, coloring), WSDRL.Cells(lastcellL, coloring)).Select
        With Selection.Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .Color = 13434879
            .TintAndShade = 0
            .PatternTintAndShade = 0
        End With

        '*********************************************
    Case 15 To 21
        Range(WSDRL.Cells(8, coloring), WSDRL.Cells(lastcellL, coloring)).Select
        With Selection.Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .Color = 13434879
            .TintAndShade = 0
            .PatternTintAndShade = 0
        End With

        '*********************************************
    Case 22
        Range(WSDRL.Cells(8, coloring), WSDRL.Cells(lastcellL + 40, coloring)).Select
        With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.149998474074526
        .PatternTintAndShade = 0
        End With
            Selection.Borders(xlDiagonalDown).LineStyle = xlNone
        Selection.Borders(xlDiagonalUp).LineStyle = xlNone
        With Selection.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
    End Select
    Next
End If

    Range(WSDRL.Cells(8, "B"), Cells(lastcellL, "U")).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    

    Range(WSDRL.Cells(7, "A"), WSDRL.Cells(7, "U")).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    
        Range(WSDRL.Cells(lastcellL, "B"), WSDRL.Cells(lastcellL, "U")).Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    
    Columns("A:A").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Columns("V:V").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Sub Macro4()
Attribute Macro4.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro4 Macro
'

'
    Range("B13").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Range("C17").Select
    
    
    Range("A7:U7").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Sub Macro5()
Attribute Macro5.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro5 Macro
'

'
    Range("A7:U7").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Sub Macro6()
Attribute Macro6.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro6 Macro
'

'
    Range("B8:U21").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
End Sub
Sub Macro7()
Attribute Macro7.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro7 Macro
'

'
    Columns("A:A").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Columns("V:V").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249977111117893
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub
Attribute VB_Name = "Module8"
Sub API()

Call public_variables

Dim Refcode(1 To 300) As String
Dim refcode8(1 To 300) As String
Dim refcode10(1 To 300) As String
Dim refcodeRWP(1 To 300) As String
Dim API617DR(1 To 300) As String
Dim API618DR(1 To 300) As String
Dim API610DR(1 To 300) As String
Dim RWPDR(1 To 300) As String
Dim Format(1 To 300) As String
Dim format8(1 To 300) As String
Dim format10(1 To 300) As String
Dim formatRWP(1 To 300) As String
Dim DC(1 To 300) As String
Dim DC8(1 To 300) As String
Dim DC10(1 To 300) As String
Dim DCRWP(1 To 300) As String
Dim rnganchor As Range
Dim subaddress_sheet As Worksheet


lastcellCSJ = WCS.Cells(Rows.Count, "J").End(xlUp).Row - 4

For l = 1 To lastcellCSJ
        Goforit = 0
    If WCS.Cells(l + 4, "K") = LCase("x") Then
        Goforit = l
    End If
        
    

    lastcellAPI617 = WAPI617.Cells(Rows.Count, "A").End(xlUp).Row - 3
    lastcellAPI618 = WAPI618.Cells(Rows.Count, "A").End(xlUp).Row - 3
    lastcellAPI610 = WAPI610.Cells(Rows.Count, "A").End(xlUp).Row - 3
    lastcellAPIRWP = WRWP.Cells(Rows.Count, "A").End(xlUp).Row - 3
     
    For i = 1 To lastcellAPI617
        Refcode(i) = WAPI617.Cells(i + 3, "A")
        API617DR(i) = WAPI617.Cells(i + 3, "B")
        Format(i) = WAPI617.Cells(i + 3, "C")
        DC(i) = WAPI617.Cells(i + 3, "D")

    Next
    
    i = 0
    For i = 1 To lastcellAPI618
        refcode8(i) = WAPI618.Cells(i + 3, "A")
        API618DR(i) = WAPI618.Cells(i + 3, "B")
        format8(i) = WAPI618.Cells(i + 3, "C")
        DC8(i) = WAPI618.Cells(i + 3, "D")
    Next
    
    i = 0
    For i = 1 To lastcellAPI610
        refcode10(i) = WAPI610.Cells(i + 3, "A")
        API610DR(i) = WAPI610.Cells(i + 3, "B")
        format10(i) = WAPI610.Cells(i + 3, "C")
        DC10(i) = WAPI610.Cells(i + 3, "D")
    Next
    
    i = 0
    For i = 1 To lastcellAPIRWP
        refcodeRWP(i) = WRWP.Cells(i + 3, "A")
        RWPDR(i) = WRWP.Cells(i + 3, "B")
        formatRWP(i) = WRWP.Cells(i + 3, "C")
        DCRWP(i) = WRWP.Cells(i + 3, "D")
    Next
    
    lastcellWSDRL = WSDRL.Cells(Rows.Count, "L").End(xlUp).Row
    
    If Goforit = 3 Then
        For n = 1 To lastcellAPI617
            Textting = WAPI617.Cells(n + 3, "A")
            WSDRL.Cells(lastcellWSDRL + n, "L") = Refcode(n)
            
            subaddress_address = "'" & WAPI617.Name & "'!A" & 3 + n
            WSDRL.Hyperlinks.Add Anchor:=WSDRL.Cells(lastcellWSDRL + n, 12), Address:="", SubAddress:= _
            subaddress_address
    
            WSDRL.Cells(lastcellWSDRL + n, "D") = API617DR(n)
            WSDRL.Cells(lastcellWSDRL + n, "N") = Format(n)
            WSDRL.Cells(lastcellWSDRL + n, "B") = DC(n)
            WSDRL.Cells(lastcellWSDRL + n, "O") = "API 617"

        Next
    End If
     
     lastcellWSDRL = WSDRL.Cells(Rows.Count, "L").End(xlUp).Row
    
    If Goforit = 4 Then
        n = 0
        For n = 1 To lastcellAPI618
            WSDRL.Cells(lastcellWSDRL + n, "L") = refcode8(n)
            
            subaddress_address = "'" & WAPI618.Name & "'!A" & 3 + n
            WSDRL.Hyperlinks.Add Anchor:=WSDRL.Cells(lastcellWSDRL + n, 12), Address:="", SubAddress:= _
            subaddress_address
            
            WSDRL.Cells(lastcellWSDRL + n, "D") = API618DR(n)
            WSDRL.Cells(lastcellWSDRL + n, "N") = format8(n)
            WSDRL.Cells(lastecellWSDRL + n, "B") = DC8(n)
            WSDRL.Cells(lastcellWSDRL + n, "O") = "API 618"
        Next
    End If
    
     lastcellWSDRL = WSDRL.Cells(Rows.Count, "L").End(xlUp).Row
    
    If Goforit = 2 Then
        n = 0
        For n = 1 To lastcellAPI610
            WSDRL.Cells(lastcellWSDRL + n, "L") = refcode10(n)
                        
            subaddress_address = "'" & WAPI610.Name & "'!A" & 3 + n
            WSDRL.Hyperlinks.Add Anchor:=WSDRL.Cells(lastcellWSDRL + n, 12), Address:="", SubAddress:= _
            subaddress_address
            
            WSDRL.Cells(lastcellWSDRL + n, "D") = API610DR(n)
            WSDRL.Cells(lastcellWSDRL + n, "N") = format10(n)
            WSDRL.Cells(lastecellWSDRL + n, "B") = DC10(n)
            WSDRL.Cells(lastcellWSDRL + n, "O") = "API 610"
        Next
    End If
    
     lastcellWSDRL = WSDRL.Cells(Rows.Count, "L").End(xlUp).Row
    
    If Goforit = 1 Then
        n = 0
        For n = 1 To lastcellAPIRWP
            WSDRL.Cells(lastcellWSDRL + n, "L") = refcodeRWP(n)
            
            subaddress_address = "'" & WRWP.Name & "'!A" & 3 + n
            WSDRL.Hyperlinks.Add Anchor:=WSDRL.Cells(lastcellWSDRL + n, 12), Address:="", SubAddress:= _
            subaddress_address
            
            WSDRL.Cells(lastcellWSDRL + n, "D") = RWPDR(n)
            WSDRL.Cells(lastcellWSDRL + n, "N") = formatRWP(n)
            WSDRL.Cells(lastcellWSDRL + n, "B") = DCRWP(n)
            WSDRL.Cells(lastcellWSDRL + n, "O") = "API RWP"
        Next
    End If
    
Next
End Sub
Attribute VB_Name = "Module9"
Sub Macro1()
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
'

    Sheets("SDRL Format").Select
    ActiveSheet.Hyperlinks.Add Anchor:=Selection, Address:="", SubAddress:= _
        "'API 617'!A4"
End Sub
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
