Attribute VB_Name = "InternalFunctions"
' ****************************************************
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' created by Dimas 10/08/2011
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|! |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| Select |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| Worksheet",
' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Options |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' ****************************************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' ****************************************************
Global QueryID As Integer
' ****************************************************
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| Split, |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd| |fffd||fffd| |fffd||fffd||fffd|
' |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' ****************************************************
Private Function InternalSplit(ByVal s As String, ByVal divs As String)
    Dim i As Integer
    Dim ss As String
    Dim arr As Collection
    Set arr = New Collection
    ss = ""
    For i = 1 To Len(s)
        If Mid(s, i, 1) = divs Then
            If Len(ss) > 0 Then
                arr.Add (ss)
            End If
            ss = ""
        Else
            ss = ss & Mid(s, i, 1)
        End If
    Next i
    If Len(ss) > 0 Then
        arr.Add (ss)
    End If
    Set InternalSplit = arr
    Set arr = Nothing
End Function
' ****************************************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
' ****************************************************
Sub FillReport()
Attribute FillReport.VB_ProcData.VB_Invoke_Func = " \n14"
    Application.ScreenUpdating = False
    RenderWorkbook
    'Worksheets("Report").Range("Summa").Value = Worksheets("Options").Cells(15, 2).Value
    'Worksheets("Report").Range("SummaOpl").Value = Worksheets("Options").Cells(17, 2).Value
    'Worksheets("Report").Range("Dolg").Value = Worksheets("Options").Cells(19, 2).Value
    With Worksheets("Options")
        .Cells(1, 2).Value2 = ""
        .Visible = xlSheetVeryHidden
    End With
    Application.ScreenUpdating = True
End Sub
' ****************************************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' ****************************************************
Private Sub RenderWorkbook()
    Dim oSheet As Variant
    For Each oSheet In Worksheets
        RenderSheet (oSheet.Name)
    Next
End Sub
' ****************************************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'   SheetID - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SheetID := "Report"
' ****************************************************
Private Sub RenderSheet(ByVal SheetID)
    Dim needPass As Boolean
    Dim Query As String
    Dim oCell As Variant
    Dim Params As String
    Do
        needPass = False
        Dim TheSheet As Worksheet
        Set TheSheet = Worksheets(SheetID)
        For Each oCell In TheSheet.Range(TheSheet.Cells(1, 1), TheSheet.Cells.SpecialCells(xlLastCell)).Cells
            If Not IsEmpty(oCell) Then
                If Left(CStr(oCell.Value2), 6) = "#QUERY" Then
                    SyntaxError = False
                    StrVal = CStr(oCell.Value2)
                    ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|?
                    If Mid(StrVal, 7, 1) = "(" Then
                        iBracket = InStr(8, StrVal, ")", vbTextCompare)
                        If iBracket > 0 Then
                            Params = Mid(StrVal, 8, iBracket - 8)
                            Query = Right(StrVal, Len(StrVal) - iBracket)
                        Else
                            SyntaxError = True
                        End If
                    Else
                        Params = ""
                        Query = Right(StrVal, Len(StrVal) - 6)
                    End If
                    ' |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|?
                    If SyntaxError = True Then
                        oCell.Value2 = "Syntax error"
                        oCell.Font.Color = RGB(255, 0, 0)
                    Else
                        oCell.Value2 = Empty
                        On Error GoTo RenderFailed
                        RenderTable SheetID, oCell.Address, Query, Params
                        needPass = True
                        GoTo RenderEnd
RenderFailed:
                        oCell.Value2 = "Render failed: " & Err.Description
                        oCell.Font.Color = RGB(255, 0, 0)
                        On Error Resume Next
RenderEnd:
                        Exit For
                    End If
                End If
            End If
        Next
    Loop While needPass
End Sub
' ****************************************************
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|:
'   SheetID - |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|. |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SheetID := "Report"
'   RangeID - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'   Query   - SQL |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
'   Params  - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
' ****************************************************
Private Function RenderTable(ByVal SheetID, ByVal RangeID, ByVal Query, ByVal Params) As Range
Attribute RenderTable.VB_ProcData.VB_Invoke_Func = " \n14"
    Dim TheSheet As Worksheet
    Dim TheRange As Range
    Dim TheHeaderRow As Integer
    Dim ConnectionString As String
    Dim TheTable As QueryTable
    Dim Numbering As Boolean
    
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Numbering = False
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If Len(Params) > 0 Then
        Set ParamsArr = InternalSplit(Params, ",")
        For Each oParam In ParamsArr
            If UCase(CStr(oParam)) = "NUMBERS" Then
                Numbering = True
            End If
        Next
        Set ParamsArr = Nothing
    End If
    ' |fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    QueryName = "Query" & CStr(QueryID)
    If IsEmpty(QueryID) Then
        QueryID = QueryID + 1 ' |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| QueryName
    End If
    
    ConnectionString = Worksheets("Options").Cells(1, 2).Value2
    Set TheSheet = Worksheets(SheetID)
    Set TheRange = TheSheet.Range(RangeID)
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd|-|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    TheHeaderRow = TheRange.Row - 1
    ColCount = 1
    For iCol = 0 To TheSheet.Cells.SpecialCells(xlLastCell).Column
        If Not IsEmpty(TheSheet.Cells(TheHeaderRow, TheRange.Column + iCol).Value2) Then
            ColCount = 1 + iCol
        End If
    Next iCol
    '|fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    QueryEmpty = "SELECT "
    For iCol = 1 To ColCount
        If iCol > 1 Then
            QueryEmpty = QueryEmpty & ","
        End If
        QueryEmpty = QueryEmpty & "0"
    Next iCol
    QueryEmpty = QueryEmpty & " WHERE 0=1"
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Set TheTable = TheSheet.QueryTables.Add(Connection:=ConnectionString, Destination:=TheRange)
    If Left(Application.Version, 2) = "8." Then
        With TheTable
        .Sql = Array(QueryEmpty)
        .FieldNames = False
'        .RefreshStyle = xlInsertDeleteCells
        .RefreshStyle = xlInsertEntireRows
        .RowNumbers = Numbering
        .FillAdjacentFormulas = False
        .RefreshOnFileOpen = False
        .HasAutoFormat = False
        .BackgroundQuery = False
        .TablesOnlyFromHTML = True
        .Refresh BackgroundQuery:=False
        .SavePassword = False
        .SaveData = True
        .Name = QueryID
        End With
    Else
        With TheTable
        .Sql = Array(QueryEmpty)
        .FieldNames = False
'        .RefreshStyle = xlInsertDeleteCells
        .RefreshStyle = xlInsertEntireRows
        .RowNumbers = Numbering
        .FillAdjacentFormulas = False
        .RefreshOnFileOpen = False
        .HasAutoFormat = False
        .AdjustColumnWidth = False
        .BackgroundQuery = False
        .TablesOnlyFromHTML = True
        .AdjustColumnWidth = False
        .Refresh BackgroundQuery:=False
        .SavePassword = False
        .SaveData = True
        .Name = QueryID
        End With
    End If
    TheTable.Connection = ConnectionString
    TheTable.Sql = Query
    TheTable.Refresh
    If Numbering Then
        ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        iCol = TheSheet.Range(RangeID).Column
        For iRow = TheSheet.Range(RangeID).Row To TheSheet.Range(RangeID).Row + TheTable.ResultRange.Rows.Count - 1
            TheSheet.Cells(iRow, iCol).Value2 = CLng(TheSheet.Cells(iRow, iCol).Value2) + 1
        Next
    End If
    'TheTable.ResultRange.Rows.AutoFit
    TheTable.ResultRange.Borders.LineStyle = xlContinuous
    Set RenderTable = TheTable.ResultRange
    TheTable.Delete
    TheSheet.Activate
    

    
End Function
Sub RangePicture()
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    Dim Col As Integer
    Dim RowStart As Integer
    Dim RowFinish As Integer
    Dim oCell As Variant
    
    Col = Worksheets("Options").Cells(3, 2).Value2
    RowStart = Worksheets("Options").Cells(4, 2).Value2
    RowFinish = Worksheets("Options").Cells(5, 2).Value2
    Set TheSheet = Worksheets(1)
    
    For Each oCell In TheSheet.Range(TheSheet.Cells(RowStart, Col), TheSheet.Cells(RowFinish, Col)).Cells
        If Not IsEmpty(oCell) Then
            oCell.Select
            ActiveSheet.Shapes(oCell.Value2).Left = oCell.Left
            ActiveSheet.Shapes(oCell.Value2).Top = oCell.Top

            ActiveSheet.Shapes(oCell.Value2).Placement = xlMoveAndSize 'UAV 20150403: |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            ActiveSheet.Shapes(oCell.Value2).ControlFormat.PrintObject = True
            oCell.Value2 = ""
        End If
    Next
End Sub

Sub RangePictureH()
' |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| = |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim Col As Integer
    Dim RowStart As Integer
    Dim RowFinish As Integer
    Dim oCell As Variant
    Dim HeightCoef As Double, WidthCoef As Double
    
    Col = Worksheets("Options").Cells(3, 2).Value2
    RowStart = Worksheets("Options").Cells(4, 2).Value2
    RowFinish = Worksheets("Options").Cells(5, 2).Value2
    Set TheSheet = Worksheets(1)
    
    For Each oCell In TheSheet.Range(TheSheet.Cells(RowStart, Col), TheSheet.Cells(RowFinish, Col)).Cells
        If Not IsEmpty(oCell) Then
            oCell.Select
            ActiveSheet.Shapes(oCell.Value2).Left = oCell.Left
            ActiveSheet.Shapes(oCell.Value2).Top = oCell.Top
            ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| >>
            HeightCoef = 1
            WidthCoef = 1
            If oCell.RowHeight * ActiveSheet.Shapes(oCell.Value2).Height / oCell.Height > 400 Then
                HeightCoef = 400 / (oCell.RowHeight * ActiveSheet.Shapes(oCell.Value2).Height / oCell.Height)
            End If
            If oCell.ColumnWidth * ActiveSheet.Shapes(oCell.Value2).Width / oCell.Width > 250 Then
                WidthCoef = 250 / oCell.ColumnWidth * ActiveSheet.Shapes(oCell.Value2).Width / oCell.Width
            End If
            If HeightCoef > WidthCoef Then HeightCoef = WidthCoef Else WidthCoef = HeightCoef
            ' |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| <<

            If oCell.Height < ActiveSheet.Shapes(oCell.Value2).Height Then
                If oCell.RowHeight * ActiveSheet.Shapes(oCell.Value2).Height / oCell.Height > 400 Then
                    oCell.RowHeight = HeightCoef * oCell.RowHeight * ActiveSheet.Shapes(oCell.Value2).Height / oCell.Height
                    ActiveSheet.Shapes(oCell.Value2).Height = (oCell.Height / oCell.RowHeight) * HeightCoef * ActiveSheet.Shapes(oCell.Value2).Height
                Else
                    oCell.RowHeight = oCell.RowHeight * ActiveSheet.Shapes(oCell.Value2).Height / oCell.Height
                End If
            End If
            If oCell.Width < ActiveSheet.Shapes(oCell.Value2).Width Then
                If oCell.ColumnWidth * ActiveSheet.Shapes(oCell.Value2).Width / oCell.Width > 250 Then
                    oCell.ColumnWidth = WidthCoef * oCell.ColumnWidth * ActiveSheet.Shapes(oCell.Value2).Width / oCell.Width
                    ActiveSheet.Shapes(oCell.Value2).Width = (oCell.Width / oCell.ColumnWidth) * WidthCoef * ActiveSheet.Shapes(oCell.Value2).Width
                Else
                    oCell.ColumnWidth = oCell.ColumnWidth * ActiveSheet.Shapes(oCell.Value2).Width / oCell.Width
                End If
            End If

            ActiveSheet.Shapes(oCell.Value2).Placement = xlMoveAndSize 'UAV 20150403: |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            ActiveSheet.Shapes(oCell.Value2).ControlFormat.PrintObject = True
            oCell.Value2 = ""
        End If
    Next
End Sub


Private Sub MakeHeader()
    Dim Col As Integer
    Dim RowStart As Integer
    Dim RowFinish As Integer
    Dim iCol As Integer, MaxCol As Integer, PriceCol As Integer, CusPriceCol As Integer, AmountCol As Integer, iRow As Integer
    
    Col = Worksheets("Options").Cells(3, 2).Value2
    RowStart = Worksheets("Options").Cells(4, 2).Value2
    RowFinish = Worksheets("Options").Cells(5, 2).Value2
    
    ' |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    Sheets("1").Select
    Rows("8:8").Select
    Selection.Delete Shift:=xlUp
    
    Rows("9:10").Select
    Selection.Delete Shift:=xlUp
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Rows("8:8").RowHeight = 44.25
    Rows("8:8").Select
    With Selection.Font
        .Name = "Calibri"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    ' |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    iCol = 1
    CusPriceCol = 0
    While Not Cells(8, iCol).Value2 = ""
        If Cells(8, iCol).Value <> "" Then
            MaxCol = iCol
            If Cells(8, iCol).Value = "|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd|, |fffd||fffd||fffd|." Then
                PriceCol = iCol
            End If
            If Cells(8, iCol).Value = "|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|." Then
                CusPriceCol = iCol
            End If
            If Cells(8, iCol).Value = "|fffd||fffd||fffd||fffd||fffd|, |fffd||fffd|." Then
                AmountCol = iCol
            End If
            If Cells(8, iCol).Value = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
                Columns(iCol).ColumnWidth = 45#
            End If
            If Cells(8, iCol).Value = "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|" Then
                Columns(iCol).ColumnWidth = 90#
            End If
            If Cells(8, iCol).Value = "|fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd|." Then
                Columns(iCol).Select
                Selection.NumberFormat = "0,00"
            End If
        End If
        iCol = iCol + 1
    Wend
    
    iRow = RowStart
    While Cells(iRow, 3) <> ""
        Cells(iRow, MaxCol + 1).Select
        ActiveCell.FormulaR1C1 = "=RC[-" & Trim(CStr(MaxCol + 1 - PriceCol)) & "]*RC[-" & Trim(CStr(MaxCol + 1 - AmountCol)) & "]"
        If CusPriceCol <> 0 Then
            Cells(iRow, MaxCol + 2).Select
            ActiveCell.FormulaR1C1 = "=RC[-" & Trim(CStr(MaxCol + 2 - CusPriceCol)) & "]*RC[-" & Trim(CStr(MaxCol + 2 - AmountCol)) & "]"
        End If
        RowFinish = iRow
        iRow = iRow + 1
    Wend
    
    Cells(4, 4).Select
    ActiveCell.FormulaR1C1 = "=SUM(R[" & Trim(CStr(RowStart - 4)) & "]C[" & Trim(CStr(MaxCol + 1 - 4)) & "]:R[" & Trim(CStr(RowFinish - 4)) & "]C[" & Trim(CStr(MaxCol + 1 - 4)) & "])"
    If CusPriceCol <> 0 Then
        Cells(5, 4).Select
        ActiveCell.FormulaR1C1 = "=SUM(R[" & Trim(CStr(RowStart - 5)) & "]C[" & Trim(CStr(MaxCol + 2 - 4)) & "]:R[" & Trim(CStr(RowFinish - 5)) & "]C[" & Trim(CStr(MaxCol + 2 - 4)) & "])"
    End If
    
    Columns(MaxCol + 1).Select
    Selection.EntireColumn.Hidden = True
    Columns(MaxCol + 2).Select
    Selection.EntireColumn.Hidden = True
End Sub


Attribute VB_Name = "Options"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "|fffd||fffd||fffd||fffd|17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Attribute VB_Name = "|fffd||fffd||fffd||fffd|7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True



INQUEST-PP=macro
