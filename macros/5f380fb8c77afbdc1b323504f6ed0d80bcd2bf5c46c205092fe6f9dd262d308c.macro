Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 60, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 8, 1, MSForms, CommandButton"
Private Sub CommandButton1_Click()

Beep
ans = MsgBox("Are you sure you want to clear all of the input items?", _
    vbYesNo, "PPC's Workpapers")
    If ans = vbNo Then  ' User chose No.
    Exit Sub
    End If

Application.ScreenUpdating = False
Sheet1.Range("clear_input").ClearContents
'Range("I5:j6").ClearContents
'Range("YearEnd").Value = "=PPC_GetBalanceSheetDate()"
Range("Organization").Value = "=PPC_GetClientName()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
'Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True

Range("a1").Select
Application.ScreenUpdating = True
End Sub

Private Sub CommandButton2_Click()
'Rolls balances forward in preparation for subsequent year analysis.

    Dim Msg, Style, TITLE, Response
    Beep
    Msg = "Data for the oldest month presented will be removed.  Do you want to continue?"   ' Define message.
    Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
    TITLE = "PPC's Workpapers"  ' Define title.
    Response = MsgBox(Msg, Style, TITLE)
    If Response = vbCancel Then    ' User chose Cancel.
        GoTo Quit
    End If
    
    Sheets("Cash").Select
    Application.ScreenUpdating = False
    
    Range("BegCashMnth2").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("BegCashInput").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("RevRollFrom").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("RevRollTo").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("ExpRollFrom").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("ExpRollTo").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("DebtRollFrom").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("DebtRollTo").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
    Range("DrawRollFrom").Select
        Application.CutCopyMode = False
        Selection.Copy
        Range("DrawRollTo").Select
        Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False

'
'Clear current year amounts to allow for new entries
    Range("ClearRoll").Select
    Selection.ClearContents
    '
'    Range("YearEnd").Value = "=PPC_GetBalanceSheetDate()"
'    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    '
    
    If Range("BegDate").Value > 0 Then
        currentdate = Range("BegDate").Value
        newdate = DateAdd("m", 1, currentdate)
        Range("BegDate").Value = newdate
    End If
       
    Range("WorkpaperIndex").ClearContents
    Range("DatePrepared").ClearContents
    Range("Preparer").ClearContents
    Range("CashSheet").Select
    Application.ScreenUpdating = True
Exit Sub
Quit:
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
