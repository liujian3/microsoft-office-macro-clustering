Attribute VB_Name = "AFL"
Option Explicit
Enum READYSTATE
READYSTATE_UNINITIALIZED = 0
READYSTATE_LOADING = 1
READYSTATE_LOADED = 2
READYSTATE_INTERACTIVE = 3
READYSTATE_COMPLETE = 4
End Enum
Dim Round       As String
Sub getAFLStats()

    Call GetStats
    'Call TidySheet
    'Call SaveResultData(12)
    MsgBox "Done!"
End Sub
Sub GetAFLgames()
Dim Work As String
Dim oHttp As Object
'make sure teams have been picked
    'Round = InputBox(Prompt:="Enter URL for this round games", Title:="URL")
    Round = InputBox(Prompt:="Enter URL for this round games", Title:="URL", Default:="http://www.afl.com.au/news/teams")

    Set oHttp = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    'Set oHttp = CreateObject("MSXML2.XMLHTTP")
    'oHttp.Open "GET", "http://www.afl.com.au/news/teams", False
    oHttp.Open "GET", Round, False
    'www.afl.com.au/news/teams?round=23
    oHttp.send
    Work = oHttp.responseText 'a contains source code of website
    Set oHttp = Nothing
'    Work = Application.WorksheetFunction.Clean(Work)
'    Work = Application.WorksheetFunction.Trim(Work)
    Work = Replace(Work, Chr(13), "")
    Work = Replace(Work, Chr(11), "")
    Work = Replace(Work, Chr(10), "")
    If InStr(1, Work, "Teams have not yet been announced for this match") > 0 Then
        'If InStr(1, Work, "<div id=""tteamfield""") > 0 Then
    'getElementById("fieldTools")
        If InStr(1, Work, "<div class=""game-tools"" id=""fieldTools"">") > 0 Then
            MsgBox ("ONLY SOME Teams have been announced for this week")
            Call AFLgames
            Call SaveResultData(5)
            MsgBox "Some Teams Done!"
            GoTo NoTeams:
        Else
            MsgBox ("Teams have not yet been announced for this week")
            Work = ""
            GoTo NoTeams:
        End If
    Else
        Call AFLgames
        'Call SaveResultData(5)
        MsgBox "Done!"
    End If
NoTeams:
End Sub
Private Sub GetStats()
Dim myURL As String
Dim myCnt As String
Dim FoundPlayer As Boolean
Dim lpage As Long
Dim rowNumber As Long

Dim myStats         As String
Dim StatFileName    As String
Dim FileNum         As Integer

Dim toggle As Boolean

Dim secs1 As Date 'timer
Dim secs2 As Date
Dim mySecs As Double

Dim myWork As String
Dim LineArray()     As String
Dim LineContent     As String
Dim y As Integer
Dim statsArray()    As String
Dim statsContent    As String
Dim z As Integer

Dim player  As String
Dim Club        As String
Dim kicks       As String
Dim handBalls   As String
Dim disposals   As String
Dim marks       As String
Dim hitOuts     As String
Dim tackles     As String
Dim freesFor    As String

Dim freesAgainst    As String
Dim Goals       As String
Dim behinds     As String
Dim rating      As String

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

lpage = 1
'FoundPlayer = False
Application.DisplayStatusBar = True
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False
    
Application.StatusBar = "Waiting on AFL Webpage ..."

StopMyProcess ("chromedriver.exe")
'StopMyProcess ("phantomjs.exe")

StatFileName = "C:\FILES\AFL\Stats.txt"
FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

'https://finalsiren.com/AFLPlayerStats.asp?SeasonID=2019

'driver.Start "phantomjs", "https://finalsiren.com/"
driver.Start "chrome", "https://finalsiren.com/"
driver.setImplicitWait 10000
driver.Wait (500)

nextPage:
'Stop
'       "/AFLPlayerStats.asp?SeasonID=2019&Sort=Rating%20Desc&Page=2"
myURL = "/AFLPlayerStats.asp?SeasonID=2019&Sort=Rating%20Desc&Page=" & lpage
driver.get myURL, Raise:=False
driver.Wait (3000)

'driver.findElementByXPath("//*[@id='stats_tab']/ul/li[2]/a").Click 'select players
'driver.Wait (1000)

secs1 = Time()

DoEvents
'/html/body/div/div[3]
'/html/body/div/div[3]/table
'/html/body/div/div[3]/table
'/html/body/div/div[3]/table
myWork = driver.findElementByXPath("/html/body/div/div[3]/table").getAttribute("innerHTML")
myWork = strClean(myWork)
'myWork = Replace(myWork, "  ", " ")
'myWork = Replace(myWork, "<tr", "^")
LineArray() = Split(myWork, "<tr>")
    For y = 2 To UBound(LineArray) 'don't need the first or second ones
    'For y = LBound(LineArray) To UBound(LineArray)
        DoEvents 'stops the 'not responding' message
        If Len(Trim(LineArray(y))) <> 0 Then
            secs2 = Time()
            rowNumber = rowNumber + 1
            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
            If mySecs > 1 Then
                Application.StatusBar = "Processing page " & lpage & " record " & rowNumber & " at a rate of: " _
                    & Application.WorksheetFunction.Round((rowNumber / mySecs), 2) & " rows per second."
            End If

            LineContent = LineArray(y)
            'Debug.Print LineContent
            'Stop
            If InStr(1, LCase(LineContent), "totals") > 0 Then Exit For
            'LineContent = Mid(LineContent, InStr(1, LineContent, "</span>") + 2, Len(LineContent))
            'LineContent = Replace(LineContent, "<td title=", "|")
            statsArray() = Split(LineContent, "<td>")
            
            Club = statsArray(5)
            Club = Mid(Club, InStr(1, Club, ">") + 1, Len(Club))
            Club = Left(Club, InStr(1, Club, "<") - 1)
            Club = Trim(Club)
            Club = fixTeam(Club)
            'Stop
            player = statsArray(3)
            player = Mid(player, InStr(1, player, ">") + 1, Len(player))
            player = Left(player, InStr(1, player, "<") - 1)
            player = Trim(player)
            'player = Replace(player, ".", "")
            If InStr(1, LCase(player), "reid.") > 0 Then
                player = "Sam J. Reid"
            ElseIf (InStr(1, LCase(player), "tom") > 0 Or InStr(1, LCase(player), "thomas") > 0) _
                And InStr(1, LCase(player), "lynch") > 0 Then
                If Club = "Richmond" Then
                    player = "Tom J. Lynch"
                ElseIf Club = "Adelaide" Then
                    player = "Tom T. Lynch"
                End If
            End If
            
            
            kicks = statsArray(7)
            kicks = Left(kicks, InStr(1, kicks, "<") - 1)
            kicks = Trim(kicks)
            
            handBalls = statsArray(9)
            handBalls = Left(handBalls, InStr(1, handBalls, "<") - 1)
            handBalls = Trim(handBalls)

            disposals = statsArray(11)
            disposals = Left(disposals, InStr(1, disposals, "<") - 1)
            disposals = Trim(disposals)

            marks = statsArray(13)
            marks = Left(marks, InStr(1, marks, "<") - 1)
            marks = Trim(marks)

            hitOuts = statsArray(15)
            hitOuts = Left(hitOuts, InStr(1, hitOuts, "<") - 1)
            hitOuts = Trim(hitOuts)

            tackles = statsArray(17)
            tackles = Left(tackles, InStr(1, tackles, "<") - 1)
            tackles = Trim(tackles)

            freesFor = statsArray(18)
            freesFor = Left(freesFor, InStr(1, freesFor, "<") - 1)
            freesFor = Trim(freesFor)

            freesAgainst = statsArray(19)
            freesAgainst = Left(freesAgainst, InStr(1, freesAgainst, "<") - 1)
            freesAgainst = Trim(freesAgainst)

            Goals = statsArray(21)
            Goals = Left(Goals, InStr(1, Goals, "<") - 1)
            Goals = Trim(Goals)

            behinds = statsArray(23)
            behinds = Left(behinds, InStr(1, behinds, "<") - 1)
            behinds = Trim(behinds)

            rating = statsArray(24)
            rating = Left(rating, InStr(1, rating, "<") - 1)
            rating = Trim(rating)
                
            myStats = player & "^" & kicks & "^" & handBalls & "^" & disposals & "^" & marks _
                & "^" & hitOuts & "^" & freesFor & "^" & freesAgainst & "^" & tackles & "^" & Goals _
                & "^" & behinds & "^" & rating
                'Debug.Print myStats


'##UP TO HERE
            Print #FileNum, myStats
            myStats = ""
        End If
    Next y
    'Stop
lpage = lpage + 1

'/html/body/div
If InStr(1, driver.findElementByXPath("/html/body/div").getAttribute("innerHTML"), "/AFLPlayerStats.asp?SeasonID=2019&amp;Sort=Rating Desc&amp;Page=" & lpage) > 0 Then
    GoTo nextPage:
Else
    GoTo done:
'    driver.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").Click
End If
'GoTo nextPage:
done:
Close #FileNum
driver.stop
Application.ScreenUpdating = True
    'Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True

Application.StatusBar = ""

End Sub
Private Sub GetStats_done()
Dim myURL As String
Dim myCnt As String
Dim FoundPlayer As Boolean
Dim lpage As Long
Dim rowNumber As Long

Dim myStats         As String
Dim StatFileName    As String
Dim FileNum         As Integer

Dim toggle As Boolean

Dim secs1 As Date 'timer
Dim secs2 As Date
Dim mySecs As Double

Dim myWork As String
Dim LineArray()     As String
Dim LineContent     As String
Dim y As Integer
Dim statsArray()    As String
Dim statsContent    As String
Dim z As Integer

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

FoundPlayer = False
Application.DisplayStatusBar = True
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False
    
Application.StatusBar = "Waiting on AFL Webpage ..."

StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

StatFileName = "C:\FILES\AFL\Stats.txt"
FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

'driver.Start "phantomjs", "http://www.afl.com.au/"
driver.Start "chrome", "http://www.afl.com.au/"
driver.setImplicitWait 10000
driver.Wait (500)

myURL = "/stats"
driver.get myURL, Raise:=False
driver.Wait (3000)

driver.findElementByXPath("//*[@id='stats_tab']/ul/li[2]/a").Click 'select players
driver.Wait (1000)

secs1 = Time()

nextPage:
lpage = lpage + 1
DoEvents
myWork = driver.findElementByXPath("//*[@id='player-stats']/tbody").getAttribute("outerHTML")
myWork = strClean(myWork)
myWork = Replace(myWork, "  ", " ")
myWork = Replace(myWork, "<tr", "^")
LineArray() = Split(myWork, "^")
    For y = 1 To UBound(LineArray) 'don't need the first one
    'For y = LBound(LineArray) To UBound(LineArray)
        DoEvents 'stops the 'not responding' message
        If Len(Trim(LineArray(y))) <> 0 Then
            secs2 = Time()
            rowNumber = rowNumber + 1
            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
            If mySecs > 1 Then
                Application.StatusBar = "Processing page " & lpage & " record " & rowNumber & " at a rate of: " _
                    & Application.WorksheetFunction.Round((rowNumber / mySecs), 2) & " rows per second."
            End If
            LineContent = LineArray(y)
            LineContent = Mid(LineContent, InStr(1, LineContent, "</span>") + 2, Len(LineContent))
            LineContent = Replace(LineContent, "<td title=", "|")
                statsArray() = Split(LineContent, "|")
                toggle = True
                For z = LBound(statsArray) To UBound(statsArray)
                    DoEvents
                    statsContent = statsArray(z)
                    statsContent = Mid(statsContent, InStr(1, statsContent, ">") + 1, Len(statsContent))
                    statsContent = Left(statsContent, InStr(1, statsContent, "<") - 1)
                    statsContent = Trim(statsContent)
                    If toggle = True Then
                        If myStats = "" Then
                            myStats = statsContent
                            toggle = False
                        Else
                            myStats = myStats & "^" & statsContent
                            toggle = False
                        End If
                    Else
                        toggle = True
                    End If

                Next z
        End If
    Print #FileNum, myStats
    myStats = ""
    Next y

If InStr(1, driver.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").getAttribute("outerHTML"), "pageLink next disabled") > 0 Then
    GoTo done:
Else
    driver.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").Click
End If
GoTo nextPage:
done:
Close #FileNum
driver.stop
Application.ScreenUpdating = True
    'Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True

Application.StatusBar = ""

End Sub
Private Sub GetStats_old()
'Obtains all the player statistics from website http://www.afl.com.au/stats
'23/07/2015 chuck
Dim QuestionList As IHTMLElement
Dim Questions As IHTMLElementCollection
Dim Question As IHTMLElement
Dim rowNumber As Long
Dim QuestionId As String
Dim QuestionFields As IHTMLElementCollection
Dim QuestionField As IHTMLElement
Dim BitsFields As IHTMLElementCollection '
Dim Bits As IHTMLElement
Dim TagName As IHTMLElementCollection 'TagName
Dim Tag As IHTMLElement
Dim sName As String
Dim sKicks As String
Dim sHandballs As String
'Dim views As String
Dim QuestionFieldLinks As IHTMLElementCollection
Dim myCnt As String
Dim FoundPlayer As Boolean
Dim ColNo As Long
Dim lpage As Long

Dim myStats         As String
Dim StatFileName    As String
Dim FileNum         As Integer

Dim toggle As Boolean

Dim secs1 As Date 'timer
Dim secs2 As Date
Dim mySecs As Date


Application.DisplayStatusBar = True
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False
    
'secs1 = ((Format(Now, "hh") * 60) * 60) + (Format(Now, "mm") * 60) + Format(Now, "ss")
secs1 = Time()
'secs2 = Now

'to refer to the running copy of Internet Explorer
Dim ie As InternetExplorer
'to refer to the HTML document returned
Dim html As HTMLDocument

StopMyProcess ("iexplore.exe")
    
    Set ie = New InternetExplorer
    ie.Visible = False
    'ie.Visible = True
    ie.navigate "http://www.afl.com.au/stats"
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
        Application.StatusBar = "Getting AFL Stats ..."
        DoEvents
    Loop
        

    Application.Wait (Now + TimeValue("00:00:10")) 'This lets the page load fully
    
   ' secs1 = Time
    
    Set html = ie.document
    rowNumber = 1
'MsgBox html.documentElement.innerHTML
'#################
'write html to a file
'    Dim fileSaveName As String
'    Dim curWork As String
'    Dim nFileNum As Long
'    curWork = html.documentElement.innerHTML
'    fileSaveName = "C:\FILES\AFL\test.txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Append As #nFileNum
'    Print #nFileNum, curWork
'    Close #nFileNum
'################
'Stop
StatFileName = "C:\FILES\AFL\Stats.txt"

FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

nextPage:
'close down IE and reset status bar
   ' Set ie = Nothing
    'Application.StatusBar = "Processing record " & rowNumber
    lpage = lpage + 1
'#stats-player-stats
    Set QuestionList = html.GetElementByID("stats-player-stats") 'this one works
    Set Questions = QuestionList.Children

    For Each Question In Questions
'if this is the tag containing the question details, process it
    If Question.ClassName = "zebra stats-table" Then 'this also works
        FoundPlayer = False
        ColNo = 1
        DoEvents 'stops the 'not responding' message
'get a list of all of the parts of this question,
'and loop over them
        Set QuestionFields = Question.all
        For Each QuestionField In QuestionFields
            If QuestionField.ClassName = "first player" Then
                secs2 = Time()
                mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                
                Application.StatusBar = "Processing page " & lpage & " record " & rowNumber & " at a rate of: " _
                & Application.WorksheetFunction.Round((rowNumber / mySecs), 2) & " rows per second."
                FoundPlayer = True
                sName = QuestionField.innerText
                sName = Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(sName, "0", ""), _
                "9", ""), "8", ""), "7", ""), "6", ""), "5", ""), "4", ""), "3", ""), "2", ""), "1", "")
                'Cells(rowNumber, ColNo).value = Trim(sName)
                'sName = Trim(sName)
                myStats = Trim(sName)
                toggle = False
            End If
            If FoundPlayer = True Then
                If QuestionField.Title = "Kicks" Then
                    myCnt = QuestionField.innerText
                        'ColNo = ColNo + 1
                        'Cells(rowNumber, ColNo).value = Trim(myCnt)
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                End If
                If QuestionField.Title = "Handballs" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Disposals" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Marks" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Hit-outs" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Frees For" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Frees Against" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Tackles" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Goals" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Behinds" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Total Dream Team points" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                End If
                If QuestionField.Title = "Average Dream Team points" Then
                    myCnt = QuestionField.innerText
                    If toggle = True Then
                        myStats = myStats & "^" & Trim(myCnt)
                        toggle = False
                    Else
                        toggle = True
                    End If
                    'ColNo = ColNo + 1
                    'Cells(rowNumber, ColNo).value = Trim(myCnt)
                    FoundPlayer = False 'finished that player
                    rowNumber = rowNumber + 1
                    'ColNo = 1
                
                    Print #FileNum, myStats
                    'Stop
                    myStats = ""
                End If
            End If
            myCnt = ""
            Next QuestionField
        ElseIf Question.ClassName = "pagi-holder" Then
            Set TagName = Question.getElementsByTagName("a")
                For Each Tag In TagName
                    If Tag.ClassName = "pageLink next disabled" Then GoTo done:
                        If Tag.innerHTML = "Next" Then
                            Tag.Click
                            GoTo HaveClick:
                        End If
                Next Tag

HaveClick:
            Do While ie.READYSTATE <> READYSTATE_COMPLETE
                DoEvents
            Loop
            Application.Wait (Now + TimeValue("00:00:03")) 'This lets the page load fully
            Set html = ie.document
                GoTo nextPage:
    End If
Next Question
done:
    Close #FileNum
    Set html = Nothing
   ' ie.stop
    ie.Quit
    Set ie = Nothing
    Application.ScreenUpdating = True
    'Application.Calculation = xlCalculationAutomatic
    Application.EnableEvents = True

    Application.StatusBar = ""
    'MsgBox "Done!"
End Sub

Private Sub TidySheet()
Dim myselection     As Range
Dim myX             As Range
Dim r               As Long
Dim n               As Long
Dim rng             As Range
Dim sDig            As String
'testing
'GoTo here:
'remove the merged cells
'    Cells.Select
'    With Selection
'        .VerticalAlignment = xlBottom
'        .WrapText = False
'        .Orientation = 0
'        .AddIndent = False
'        .ShrinkToFit = False
'        .ReadingOrder = xlContext
'        .MergeCells = False
'    End With
'remove the cols not being used
    If Range("W1").value <> "" Then 'if not blank
        Range("B:B, D:D, F:F, H:H, J:J, L:L, N:N, P:P, R:R, T:T, V:V").Delete Shift:=xlToLeft
    End If
'remove the club stats at the top
'    Set mySelection = Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row)
'        For Each myX In mySelection 'Col A
'            If myX.Value = "Player" Then
'                GoTo foundTop:
'            Else
'                myX.Value = ""
'            End If
'        Next myX
'foundTop:
'Select Column A Get rid of all blank rows
'    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
'    Set rng = Selection
'        For r = rng.Rows.count To 1 Step -1
'            If rng.Rows(r).Value = "" Then
'                rng.Rows(r).EntireRow.Delete
'            ElseIf rng.Rows(r).Value = "All Players" Then
'                rng.Rows(r).EntireRow.Delete
'            End If
'        Next r

'here:
'tidy players
'    Set mySelection = Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row)
'        For Each myX In mySelection 'Col A
           ' For n = 1 To Len(myX)
'                sDig = myX.Value
'chkAgain:
'                If IsNumeric(Left(sDig, 1)) Then
'                    sDig = Mid(sDig, 2, Len(sDig))
'                    GoTo chkAgain:
'                End If
'                sDig = Application.WorksheetFunction.Clean(Trim(sDig))
'                myX = sDig
'            Next myX
End Sub
Private Sub SaveResultData(clCount As Integer)
'Private Sub SaveResultData()
Const Delimiter As String = "^" 'or "|,", vbTab, etc.
Dim myRecord As Range
Dim myField As Range
Dim nFileNum As Long
Dim lastRow As Long
Dim sOut As String
Dim fileSaveName As String
'Dim lnCount As Integer
         
    Columns("A:L").Select
    Selection.Columns.AutoFit '

    lastRow = Range("A65536").End(xlUp).Row
    If lastRow < 2 Then GoTo noData:
 '   clCount = 12
' Name the file and where to save it
    If clCount = 12 Then
        fileSaveName = "C:\FILES\AFL\Stats.txt"
    ElseIf clCount = 5 Then
        fileSaveName = "C:\FILES\AFL\Games.txt"
    Else
        MsgBox ("No columns in your data")
    End If
    nFileNum = FreeFile
    'If Dir("C:\FILES\AFL\Stats.txt") <> "" Then
      '  Open fileSaveName For Append As #nFileNum
    'Else
    Open fileSaveName For Output As #nFileNum
    'End If
    For Each myRecord In Range("A1:A" & _
        Range("A" & Rows.count).End(xlUp).Row)
        With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
            sOut = sOut & Delimiter & Trim(myField.text)
            Next myField
                sOut = Mid(sOut, 2) ' this take off the first delimiter
'                Print #nFileNum, Mid(sOut, 2)
                Print #nFileNum, sOut
                sOut = Empty
        End With
    Next myRecord
    Close #nFileNum
'close this sheet
noData:
'    MsgBox ("saveResultData")
    ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
    Workbooks.Add

End Sub
Private Sub AFLgames()
Dim openElement As WebElement
Dim chkElement As WebElement
Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim myWork As String
Dim myTemp As String
Dim urlName As String
Dim Game As String
Dim team As String
Dim team1 As String
Dim team2 As String
Dim GameTime As String
Dim player As String
Dim GameNo As Long
Dim PlayerNo As Long
Dim T1No As Long
Dim T2No As Long

Dim x As Long

Dim StatFileName As String
Dim FileNum As Long
Dim myData As String
Dim foundPlayers As Boolean

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StatFileName = "C:\FILES\AFL\Games.txt"
FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

StopMyProcess ("phantomjs.exe")

'testing
'Round = "http://www.afl.com.au/news/teams"

Application.StatusBar = "Waiting on AFL Games webpage ..."

driver.Start "phantomjs", Round
driver.setImplicitWait 10000
driver.Wait (500)

urlName = "/"
driver.get urlName, Raise:=False
DoEvents
'Stop
GameNo = 0
foundPlayers = False
'expand all the games
Set chkElement = driver.findElementByXPath("/html/body")
If InStr(1, LCase(chkElement.text), "expand all games") > 0 Then
    Set openElement = driver.findElementByXPath("//*[@id='fieldTools']/p[2]/a")
    If LCase(openElement.text) = "expand all games" Then
        openElement.Click
    End If
End If
'                                             //*[@id="tteamfield"]
Set startElement = driver.findElementByXPath("//*[@id='tteamfield']")
Set elements = startElement.findElementsByTagName("div")
For Each element In elements
    DoEvents
    'Stop
    'Debug.Print Element.getAttribute("class")
'Next Element
    'Stop                      'Teams have not yet been announced for this match
    If InStr(1, LCase(element.text), "teams have not yet been announced for this match") > 0 Then GoTo nextGame
    If element.getAttribute("class") = "game" Then
        If InStr(1, LCase(element.getAttribute("innerHTML")), "byes") > 0 Then GoTo nextGame:
    'Stop
        GameNo = GameNo + 1
        Application.StatusBar = "Getting AFL Game " & GameNo

        myWork = element.getAttribute("innerHTML")
        'Debug.Print myWork
        myWork = strClean(myWork)
        'myWork = Replace(myWork, "  ", " ")
        myWork = Replace(myWork, "<div", Chr(13))
        myWork = Replace(myWork, "<span", Chr(13))
        myWork = Replace(myWork, "<ul", Chr(13))
        
        myWork = Replace(myWork, "<p", Chr(13))
        myWork = Replace(myWork, "<li", Chr(13))
        myWork = Replace(myWork, "<abbr", Chr(13))
        myWork = Replace(myWork, "</div>", "")
        myWork = Replace(myWork, "</span>", "")
        myWork = Replace(myWork, "</ul>", "")
        
        myWork = Replace(myWork, "</p>", "")
        myWork = Replace(myWork, "</li>", "")
        myWork = Replace(myWork, "</abbr>", "")
    'Stop
        myTemp = Split(myWork, Chr(13))(3)
        myTemp = Mid(myTemp, InStr(1, myTemp, ">") + 1, Len(myTemp))
        myTemp = Trim(myTemp)
        team1 = myTemp
        team1 = fixTeam(team1)
        
        myTemp = Split(myWork, Chr(13))(4)
        myTemp = Mid(myTemp, InStr(1, myTemp, ">") + 1, Len(myTemp))
        myTemp = Trim(myTemp)
        team2 = myTemp
        team2 = fixTeam(team2)
        
        myTemp = Split(myWork, Chr(13))(9)
        myTemp = Mid(myTemp, InStr(1, myTemp, "</a>") + 4, Len(myTemp))
        myTemp = Replace(myTemp, ",", "", 1, 1)
        myTemp = Replace(myTemp, "&nbsp;", " ")
        myTemp = Trim(myTemp)
        GameTime = myTemp
        
        Game = team1 & " v " & team2
        
        
        T1No = 0
        T2No = 0
 '       If GameNo = 9 Then
'----------------
'    Dim fileSaveName As String
'    Dim nFileNum As Long
'    Dim nNum As Long
'    nNum = nNum + 1
'    fileSaveName = "C:\FILES\AFL\test " & nNum & ".txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Output As #nFileNum
'    Print #nFileNum, myWork
'    Close #nFileNum
'------------------
            'Stop
 '       End If
        For x = 25 To 250
            myTemp = Split(myWork, Chr(13))(x)
            If InStr(1, myTemp, "posGroup sidebars followers") > 0 Then
                foundPlayers = True
            End If
            If foundPlayers = True Then
                If InStr(1, myTemp, "team1") > 0 Then
                    team = team1
                ElseIf InStr(1, myTemp, "team2") > 0 Then
                    team = team2
                ElseIf InStr(1, myTemp, "num") > 0 Then
                    myTemp = Mid(myTemp, InStr(1, myTemp, ">") + 1, Len(myTemp))
                    myTemp = Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(myTemp, "0", ""), _
                        "9", ""), "8", ""), "7", ""), "6", ""), "5", ""), "4", ""), "3", ""), "2", ""), "1", "")
                    myTemp = Trim(myTemp)
                    player = myTemp
                    If team = team1 Then
                        T1No = T1No + 1
                        PlayerNo = T1No
                    ElseIf team = team2 Then
                        T2No = T2No + 1
                        PlayerNo = T2No
                    End If
'fix player names
'Sam J. REID = GWS
                    If player = "Cam Rayner" Then
                        player = "Cameron Rayner"
                    ElseIf player = "Charles Cameron" Then
                        player = "Charlie Cameron"
                    ElseIf player = "Ed Curnow" Then
                        player = "Edward Curnow"
                    ElseIf player = "Harry Himmelberg" Then
                        player = "Harrison Himmelberg"
                    ElseIf player = "Jack Macrae" Then
                        player = "Jackson Macrae"
                    ElseIf player = "Josh Kelly" Then
                        player = "Joshua Kelly"
                    ElseIf player = "Lachie Hunter" Then
                        player = "Lachlan Hunter"
                    ElseIf player = "Lachie Plowman" Then
                        player = "Lachlan Plowman"
                    ElseIf player = "Matt Taberner" Then
                        player = "Matthew Taberner"
                    
                    ElseIf player = "Mitch Duncan" Then
                        player = "Mitchell Duncan"
                    ElseIf player = "Nat Fyfe" Then
                        player = "Nathan Fyfe"
                    ElseIf player = "Ollie Wines" Then
                        player = "Oliver Wines"
                    ElseIf player = "Paddy Ryder" Then
                        player = "Patrick Ryder"
                    ElseIf player = "Tim Smith" Then
                        player = "Timothy Smith"
                    ElseIf player = "Tom Cole" Then
                        player = "Thomas Cole"
                    ElseIf player = "Tom Lynch" Then
                        If team = "Richmond" Then
                            player = "Tom J. Lynch"
                        ElseIf team = "Adelaide" Then
                            player = "Tom T. Lynch"
                        End If
                    ElseIf player = "Zac Williams" Then
                        player = "Zachary Williams"
                    End If
                    
                    myData = GameNo & "^" & GameNo & " " & Game & " - " & GameTime & "^" _
                        & team & "^" & PlayerNo & "^" & player
                    Print #FileNum, myData
                    myData = ""
                ElseIf InStr(1, myTemp, "sidebars interchange") > 0 Then
                    'Exit For
                    'Stop
                    GoTo nextGame:
                End If
            End If
        Next x
    End If
nextGame:
'Stop
    myWork = ""
    team1 = ""
    team2 = ""
    GameTime = ""
    Game = ""
    T1No = 0
    T2No = 0
    team = ""
    player = ""
    PlayerNo = 0
    myTemp = ""
    foundPlayers = False

Next element

Application.StatusBar = ""
NoTeams:
driver.stop
Close #FileNum
    'MsgBox "Done!"

End Sub
Sub SetUpAFLsheet()

    Call AFLSetupSheet
    Call AFLbest
    Call aflBuildScore
    Call aflBuildTeamScores
    Call aflFinalPoints
    Call AFLprintSheet
    
End Sub
Private Sub AFLSetupSheet()

    Cells.Select
    Selection.ClearOutline
    Cells.Select
    Selection.RowHeight = 13.5
    If Range("A1").value = "GameNo" Then
        Columns("A:A").Delete Shift:=xlToLeft
    End If
    Range("D2").Select
    ActiveWindow.FreezePanes = True
' set columns width
    Columns("A:C").ColumnWidth = 3
    'Columns("C:C").ColumnWidth = 15 'player no
    Columns("D:D").ColumnWidth = 14
    Columns("E:Q").ColumnWidth = 5
    Columns("R:AC").ColumnWidth = 5
    Columns("AD:AD").ColumnWidth = 6
' put some heading in
    Range("Q1").value = "Value"
    Range("R1").value = "Score"
    Range("S1").value = "Goals"
    Range("T1").value = "Behinds"
    Range("U1").value = "Points"
    Range("V1").value = "Kicks"
    Range("W1").value = "Handballs"
    Range("X1").value = "Disposals"
    Range("Y1").value = "Marks"
    Range("Z1").value = "Hitouts"
    Range("AA1").value = "FreeFor"
    Range("AB1").value = "FreeAgainst"
    Range("AC1").value = "Tackles"
    Range("AD1").value = "Fantasy"
    Range("AE1").value = "FootyForecaster"
    'Range("W15").value = "Finals Codes"
    'Range("X16").value = "Finals Week"
    'Range("X17").value = "Result Code - https://www.flashscore.com.au/afl/australia/afl/results/"
'Remove any previous col colours
    Range("Q:AD").Interior.ColorIndex = xlNone

'highlight the important ones
    Range("S1, T1, U1, V1, W1, Y1, Z1, AB1, T1, AA1, AC1").Interior.ColorIndex = 6
'    Range("R1, V1").Interior.ColorIndex = 6
End Sub
Private Sub AFLbest()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myGoals         As Range '
    Dim myBehinds       As Range '
    Dim myPoints        As Range ' goal * 6 plus behinds
    Dim myKicks         As Range '
    Dim MyHandballs     As Range '
    Dim MyDisposals     As Range '
    Dim MyMarks         As Range '
    Dim MyHitOuts       As Range
    Dim MyFreesFor      As Range
    Dim MyFreesAgainst  As Range '
    Dim myTackles       As Range '
    Dim MyFantasy       As Range
    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    
    Dim team1           As Long
    Dim team2           As Long
    Dim T1HLit          As Long
    Dim T2HLit          As Long
    Dim TmpCount        As Long
    
'Remove any previous col colours
    Range("E:P").Interior.ColorIndex = xlNone
    On Error Resume Next
    myRow1 = 3
    lastRow = Range("D65536").End(xlUp).Row
    Range("A" & lastRow + 1).value = "END"
    Set myselection = Range("D2:D" & lastRow) 'Player name
        For Each myX In myselection 'col D
            If myX.Offset(0, -3) <> "" Then 'found the beginning of a game
                team1 = Range("B" & myX.Row).End(xlDown).Row
                Range("A" & myX.Row).End(xlDown).Select 'select whole game with 2 teams
                myRowEnd = Selection.Row
                'Stop
                'Debug.Print myRowEnd & " Mod: " & myRowEnd Mod 39
                If myRowEnd Mod 39 <> 2 Then
'Make sure each game has the correct number of players
                    MsgBox ("The number of players in the sheet does not match 18 players for each game, rectify before continuing!")
                    Range("A" & myRowEnd).Select
                    End
                End If
                team2 = Range("B" & Selection.Row).End(xlUp).Row
                T1HLit = 0
                T2HLit = 0
           End If
            If myX.Row = myRow1 Then
                Set myRng = Range("D" & myRow1 & ":D" & myRowEnd) 'The range to work on Player Name
                Set myGoals = Range("M" & myRow1 & ":M" & myRowEnd)
                Set myBehinds = Range("N" & myRow1 & ":N" & myRowEnd)
                Set myPoints = Range("P" & myRow1 & ":P" & myRowEnd) 'Total Game Points
                Set myKicks = Range("E" & myRow1 & ":E" & myRowEnd)
                Set MyHandballs = Range("F" & myRow1 & ":F" & myRowEnd)
                Set MyDisposals = Range("G" & myRow1 & ":G" & myRowEnd)
                Set MyMarks = Range("H" & myRow1 & ":H" & myRowEnd)
                Set MyHitOuts = Range("I" & myRow1 & ":I" & myRowEnd)
                Set MyFreesFor = Range("J" & myRow1 & ":J" & myRowEnd)
                    
                Set MyFreesAgainst = Range("K" & myRow1 & ":K" & myRowEnd)
                Set myTackles = Range("L" & myRow1 & ":L" & myRowEnd)
                Set MyFantasy = Range("O" & myRow1 & ":O" & myRowEnd)
                    
                For Each myY In myRng 'the one game working down Col D
                    If myY <> "" Then
                        TmpCount = 0
                        If myY.Offset(0, 9).value = Application.Max(myGoals) Then
                            myY.Offset(0, 9).Interior.ColorIndex = 4 ' green
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 9).value > Application.Average(myGoals) Then
                            myY.Offset(0, 9).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 10).value = Application.Max(myBehinds) Then
                            myY.Offset(0, 10).Interior.ColorIndex = 4 ' green
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 10).value > Application.Average(myBehinds) Then
                            myY.Offset(0, 10).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 12).value = Application.Max(myPoints) Then
                            myY.Offset(0, 12).Interior.ColorIndex = 4 '
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 12).value > Application.Average(myPoints) Then
                            myY.Offset(0, 12).Interior.ColorIndex = 19 '
                        End If
                        If myY.Offset(0, 1).value = Application.Max(myKicks) Then
                            myY.Offset(0, 1).Interior.ColorIndex = 4 '
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 1).value > Application.Average(myKicks) Then
                            myY.Offset(0, 1).Interior.ColorIndex = 19 '
                        End If
                        If myY.Offset(0, 2).value = Application.Max(MyHandballs) Then
                            myY.Offset(0, 2).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 2).value > Application.Average(MyHandballs) Then
                            myY.Offset(0, 2).Interior.ColorIndex = 19
                        End If
                        If myY.Offset(0, 3).value = Application.Max(MyDisposals) Then
                            myY.Offset(0, 3).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 3).value > Application.Average(MyDisposals) Then
                            myY.Offset(0, 3).Interior.ColorIndex = 19 '
                        End If
                        If myY.Offset(0, 4).value = Application.Max(MyMarks) Then
                            myY.Offset(0, 4).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 4).value > Application.Average(MyMarks) Then
                            myY.Offset(0, 4).Interior.ColorIndex = 19
                        End If
                        If myY.Offset(0, 5).value = Application.Max(MyHitOuts) Then
                            myY.Offset(0, 5).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 5).value > Application.Average(MyHitOuts) Then
                            myY.Offset(0, 5).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 6).value = Application.Max(MyFreesFor) Then
                            myY.Offset(0, 6).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 6).value > Application.Average(MyFreesFor) Then
                            myY.Offset(0, 6).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 3).value > 0 Then 'ensure they have played before
                            If myY.Offset(0, 7).value = Application.Min(MyFreesAgainst) Then
                                myY.Offset(0, 7).Interior.ColorIndex = 4
                                TmpCount = TmpCount + 1
                            ElseIf myY.Offset(0, 7).value < Application.Average(MyFreesAgainst) Then
                                myY.Offset(0, 7).Interior.ColorIndex = 19 ' pale yellow
                            End If
                        End If
                        If myY.Offset(0, 8).value = Application.Max(myTackles) Then
                            myY.Offset(0, 8).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 8).value > Application.Average(myTackles) Then
                            myY.Offset(0, 8).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 11).value = Application.Max(MyFantasy) Then
                            myY.Offset(0, 11).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 11).value > Application.Average(MyFantasy) Then
                            myY.Offset(0, 11).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Row < team2 Then
                            T1HLit = T1HLit + TmpCount
                        ElseIf myY.Row > team2 Then
                            T2HLit = T2HLit + TmpCount
                        End If
                        If myY.Row = myRowEnd - 1 Then
                            myY.Offset(-32, 16).value = T1HLit
                            T1HLit = 0
                            myY.Offset(-31, 16).value = T2HLit
                            T2HLit = 0
                        End If
                    End If
                Next myY
                myRow1 = myRowEnd + 1
            End If
        Next myX
Range("A1").Select
End Sub
Private Sub aflBuildScore()
'
'Build the player value in col Q Value
    Dim myselection     As Range
    Dim myX             As Range
    Dim myValue         As Long
    Dim lGoal1          As Long
    Dim lGoal2          As Long
    Dim lBehind1        As Long
    Dim lBehind2        As Long
    Dim lKick1          As Long
    Dim lKick2          As Long
    Dim lHandball1      As Long
    Dim lHandball2      As Long
    Dim lDisposal1      As Long
    Dim lDisposal2      As Long
    Dim lMark1          As Long
    Dim lMark2          As Long
    Dim lHitout1        As Long
    Dim lHitout2        As Long
    Dim lFreeFor1       As Long
    Dim lFreeFor2       As Long
    Dim lFreeAgainst1   As Long
    Dim lFreeAgainst2   As Long
    Dim lTackle1        As Long
    Dim lTackle2        As Long
    Dim lFantasy1       As Long
    Dim lFantasy2       As Long

Range("Q:Q").NumberFormat = 0
' enter the values of the variables
lGoal1 = 12
lGoal2 = 6
lBehind1 = 2
lBehind2 = 1
lKick1 = 6
lKick2 = 3
lHandball1 = 2
lHandball2 = 1
lDisposal1 = 2
lDisposal2 = 1
lMark1 = 6
lMark2 = 3
lHitout1 = 2
lHitout2 = 1
lFreeFor1 = 2
lFreeFor2 = 1
lFreeAgainst1 = 6
lFreeAgainst2 = 3
lTackle1 = 8
lTackle2 = 4
'lFantasy1 = 0
'lFantasy2 = 0

'Remove any previous col colours
    Range("Q:Q").Interior.ColorIndex = xlNone

Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row) 'Player name
    For Each myX In myselection 'Col D
        myValue = 0
        If myX.value <> "" Then
            If myX.Offset(0, 1).Interior.ColorIndex = 4 Then ' green
                myValue = myValue + lKick1
            ElseIf myX.Offset(0, 1).Interior.ColorIndex = 19 Then ' Pale yellow
                myValue = myValue + lKick2
            End If
            If myX.Offset(0, 2).Interior.ColorIndex = 4 Then
                myValue = myValue + lHandball1
            ElseIf myX.Offset(0, 2).Interior.ColorIndex = 19 Then
                myValue = myValue + lHandball2
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 4 Then
                myValue = myValue + lDisposal1
            ElseIf myX.Offset(0, 3).Interior.ColorIndex = 19 Then
                myValue = myValue + lDisposal2
            End If
            If myX.Offset(0, 4).Interior.ColorIndex = 4 Then
                myValue = myValue + lMark1
            ElseIf myX.Offset(0, 4).Interior.ColorIndex = 19 Then
                myValue = myValue + lMark2
            End If
            If myX.Offset(0, 5).Interior.ColorIndex = 4 Then
                myValue = myValue + lHitout1
            ElseIf myX.Offset(0, 5).Interior.ColorIndex = 19 Then
                myValue = myValue + lHitout2
            End If
            If myX.Offset(0, 6).Interior.ColorIndex = 4 Then
                myValue = myValue + lFreeFor1
            ElseIf myX.Offset(0, 6).Interior.ColorIndex = 19 Then
                myValue = myValue + lFreeFor2
            End If
            If myX.Offset(0, 8).Interior.ColorIndex = 4 Then
                myValue = myValue + lTackle1
            ElseIf myX.Offset(0, 8).Interior.ColorIndex = 19 Then
                myValue = myValue + lTackle2
            End If
            If myX.Offset(0, 11).value > 0 Then 'ensure they have played before
                If myX.Offset(0, 7).Interior.ColorIndex = 4 Then
                    myValue = myValue + lFreeAgainst1
                ElseIf myX.Offset(0, 7).Interior.ColorIndex = 19 Then
                    myValue = myValue + lFreeAgainst2
                End If
            End If
            If myX.Offset(0, 9).Interior.ColorIndex = 4 Then
                myValue = myValue + lGoal1
            ElseIf myX.Offset(0, 9).Interior.ColorIndex = 19 Then
                myValue = myValue + lGoal2
            End If
            If myX.Offset(0, 10).Interior.ColorIndex = 4 Then
                myValue = myValue + lBehind1
            ElseIf myX.Offset(0, 10).Interior.ColorIndex = 19 Then
                myValue = myValue + lBehind1
            End If
            myX.Offset(0, 13) = myValue
            If myValue >= 15 Then
                myX.Offset(0, 13).Interior.ColorIndex = 7 'Magenta
            End If
        End If
        myValue = 0
    Next myX
Range("Q4").Select
End Sub
Private Sub aflBuildTeamScores()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    'Dim myRng           As Range
    Dim myValue         As Range
    Dim myGoals         As Range
    Dim myBehinds       As Range
    Dim myPoints        As Range
    Dim myKicks         As Range
    Dim MyHandball      As Range
    Dim MyDisposal      As Range
    Dim MyMarks         As Range
    Dim MyHitOuts       As Range
    Dim MyFreeFor       As Range
    Dim MyFreeAgainst   As Range
    Dim myTackles       As Range
    Dim MyFantasy       As Range
    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    Dim writeRow        As Long
    
    On Error Resume Next
    myRow1 = 3
'get the whole sheet range
    lastRow = Range("D65536").End(xlUp).Row
    Range("B" & lastRow + 1).value = "END"
    Set myselection = Range("D2:D" & lastRow) 'Player name whole sheet
        For Each myX In myselection 'col D
            If myX.Offset(0, -2) <> "" Then 'found the beginning of a team
                writeRow = myX.Row
                Range("B" & myX.Row).End(xlDown).Select 'select whole team
                myRowEnd = Selection.Row - 1
            End If
                If myX.Row = myRow1 Then
                    'Set myRng = Range("C" & myRow1 & ":C" & myRowEnd) 'The range to work on Player
                    Set myValue = Range("Q" & myRow1 & ":Q" & myRowEnd) 'Player Value
                    Set myGoals = Range("M" & myRow1 & ":M" & myRowEnd)
                    Set myBehinds = Range("N" & myRow1 & ":N" & myRowEnd)
                    Set myPoints = Range("P" & myRow1 & ":P" & myRowEnd) 'goals*6 plus behinds
                    Set myKicks = Range("E" & myRow1 & ":E" & myRowEnd)
                    Set MyHandball = Range("F" & myRow1 & ":F" & myRowEnd)
                    Set MyDisposal = Range("G" & myRow1 & ":G" & myRowEnd)
                    Set MyMarks = Range("H" & myRow1 & ":H" & myRowEnd)
                    Set MyHitOuts = Range("I" & myRow1 & ":I" & myRowEnd)
                    Set MyFreeFor = Range("J" & myRow1 & ":J" & myRowEnd)
                    Set MyFreeAgainst = Range("K" & myRow1 & ":K" & myRowEnd)
                    Set myTackles = Range("L" & myRow1 & ":L" & myRowEnd)
                    Set MyFantasy = Range("O" & myRow1 & ":O" & myRowEnd)
                    
                    Range("R" & writeRow).value = Application.Sum(myValue)
                    Range("S" & writeRow).value = Application.Sum(myGoals)
                    Range("T" & writeRow).value = Application.Sum(myBehinds)
                    Range("U" & writeRow).value = Application.Sum(myPoints)
                    Range("V" & writeRow).value = Application.Sum(myKicks)
                    Range("W" & writeRow).value = Application.Sum(MyHandball)
                    Range("X" & writeRow).value = Application.Sum(MyDisposal)
                    Range("Y" & writeRow).value = Application.Sum(MyMarks)
                    Range("Z" & writeRow).value = Application.Sum(MyHitOuts)
                    Range("AA" & writeRow).value = Application.Sum(MyFreeFor)
                    Range("AB" & writeRow).value = Application.Sum(MyFreeAgainst)
                    Range("AC" & writeRow).value = Application.Sum(myTackles)
                    Range("AD" & writeRow).value = Application.Sum(MyFantasy)
                   
                    myRow1 = myRowEnd + 1
                End If
        Next myX
Range("A1").Select
End Sub
Private Sub aflFinalPoints()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myValue         As Range
    Dim myGoals         As Range
    Dim myBehinds       As Range
    Dim myPoints        As Range
    Dim myKicks         As Range
    Dim MyHandball      As Range
    Dim MyDisposal      As Range
    Dim MyMarks         As Range
    Dim MyHitOuts       As Range
    Dim MyFreeFor       As Range
    Dim MyFreeAgainst   As Range
    Dim myTackles       As Range
    Dim MyFantasy       As Range
    Dim borderRng       As Range

    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    Dim team1           As Long 'row no
    Dim team2           As Long
    Dim T1Count         As Long 'count of highlights for Team counts
    Dim T2Count         As Long
    
    Dim T1_1on1         As Long
    Dim T2_1on1         As Long
    
    Dim WinTeam         As Long
    Dim LoseTeam        As Long
    Dim WinBy           As Long
    Dim T_bestValue     As Long 'Team with the bext Value
    Dim T_bestPoints    As Long 'Team with the bext points
    Dim T_bestFantasy   As Long
    Dim T_bestHL        As Long
    Dim T_bestCount     As Long
    Dim T_best1to1      As Long
    Dim T_diffHL        As Long
    Dim T_diffCount     As Long
    Dim T_diffValue     As Long
    Dim T_diffPoints    As Long
    Dim x               As Double
    Dim T_diff1to1      As Long
    Dim T_diffFantasy   As Long
    
    Dim GameNo          As String
     
    
    On Error Resume Next
    myRow1 = 2
'get the whole sheet range
    lastRow = Range("D65536").End(xlUp).Row
    Set myselection = Range("D2:D" & lastRow) 'Player name
        For Each myX In myselection 'col C
            If myX.Offset(0, -3) <> "" Then 'the beginning of a game
                GameNo = Left(myX.Offset(0, -3), InStr(1, myX.Offset(0, -3), " ") - 1)
                team1 = Range("B" & myX.Row).End(xlDown).Row
                Range("A" & myX.Row).End(xlDown).Select 'select whole game with 2 teams
                myRowEnd = Selection.Row
                team2 = Range("B" & Selection.Row).End(xlUp).Row
                T1Count = 0
                T2Count = 0
                T1_1on1 = 0
                T2_1on1 = 0
                
                T_bestValue = 0
                T_bestPoints = 0
                T_bestHL = 0
                T_bestCount = 0
                T_best1to1 = 0
                T_diffHL = 0
                T_diffCount = 0
                T_diffValue = 0
                T_diffPoints = 0
                T_diff1to1 = 0
                WinTeam = 0
' add a Horizontal pagebreak after each game
                If myX.Row > 2 Then 'not the first game
                    ActiveSheet.HPageBreaks.Add Before:=ActiveSheet.Range("A" & myX.Row)
                End If
            End If
                If myX.Row = myRow1 Then

                    Set myRng = Range("R" & myRow1 & ":R" & myRowEnd) 'The range of the whole game
                    Set myValue = Range("R" & team1 & ", R" & team2) 'Player Value 0
                    Set myGoals = Range("S" & team1 & ", S" & team2) '1
                    Set myBehinds = Range("T" & team1 & ", T" & team2) '2
                    Set myPoints = Range("U" & team1 & ", U" & team2) '3
                    Set myKicks = Range("V" & team1 & ", V" & team2) '4
                    Set MyHandball = Range("W" & team1 & ", W" & team2) '5
                    Set MyDisposal = Range("X" & team1 & ", X" & team2) '6
                    Set MyMarks = Range("Y" & team1 & ", Y" & team2) '7
                    Set MyHitOuts = Range("Z" & team1 & ", Z" & team2) '8
                    Set MyFreeFor = Range("AA" & team1 & ", AA" & team2) '9
                    Set MyFreeAgainst = Range("AB" & team1 & ", AB" & team2) '10
                    Set myTackles = Range("AC" & team1 & ", AC" & team2) '11
                    Set MyFantasy = Range("AD" & team1 & ", AD" & team2) '12

                    For Each myY In myRng 'the one game
                        If myY.Offset(0, -15) <> "" Then
                            If myY.Row < team2 Then
                                If myY.Offset(0, -1) > myY.Offset(19, -1) Then
                                    myY.Offset(0, -15).Interior.ColorIndex = 6 ' yellow
                                    T1_1on1 = T1_1on1 + 1
                                End If
                            ElseIf myY.Row > team2 Then
                                If myY.Offset(0, -1) > myY.Offset(-19, -1) Then
                                    myY.Offset(0, -15).Interior.ColorIndex = 6 ' yellow
                                    T2_1on1 = T2_1on1 + 1
                                End If
                                If myY.Row = myRowEnd - 1 Then
                                    myY.Offset(-32, 3).value = T1_1on1
                                    T1_1on1 = 0
                                    myY.Offset(-31, 3).value = T2_1on1
                                    T2_1on1 = 0
                                End If
                            End If
                        End If
                        If myY <> "" And (myY.Row = team1 Or myY.Row = team2) Then 'col R
                            If myY.value = Application.Max(myValue) Then
                                myY.Interior.ColorIndex = 6 ' yellow
                                T_bestValue = myY.Row 'team with the best value
                            End If
                            If myY.Offset(0, 1).value = Application.Max(myGoals) Then
                                myY.Offset(0, 1).Interior.ColorIndex = 6 ' yellow
                            End If
                            If myY.Offset(0, 2).value = Application.Max(myBehinds) Then
                                myY.Offset(0, 2).Interior.ColorIndex = 6 ' yellow
                            End If
                            If myY.Offset(0, 3).value = Application.Max(myPoints) Then
                                myY.Offset(0, 3).Interior.ColorIndex = 45 ' orange
                                T_bestPoints = myY.Row
                            End If
                            If myY.Offset(0, 4).value = Application.Max(myKicks) Then
                                myY.Offset(0, 4).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 5).value = Application.Max(MyHandball) Then
                                myY.Offset(0, 5).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 6).value = Application.Max(MyDisposal) Then
                                myY.Offset(0, 6).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 7).value = Application.Max(MyMarks) Then
                                myY.Offset(0, 7).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 8).value = Application.Max(MyHitOuts) Then
                                myY.Offset(0, 8).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 9).value = Application.Max(MyFreeFor) Then
                                myY.Offset(0, 9).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 10).value = Application.Min(MyFreeAgainst) Then
                                myY.Offset(0, 10).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 11).value = Application.Max(myTackles) Then
                                myY.Offset(0, 11).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 12).value = Application.Max(MyFantasy) Then
                                myY.Offset(0, 12).Interior.ColorIndex = 6 ' yellow
                                T_bestFantasy = myY.Row
                            End If
                        End If
                        If myY.Row = team1 Then
                            myY.Offset(1, 0).value = "Diff"
                            myY.Offset(2, 0).value = Range("R" & team1).value - Range("R" & team2).value 'value
                            T_diffValue = Abs(Range("R" & team1).value - Range("R" & team2).value)
                            myY.Offset(2, 1).value = Range("S" & team1).value - Range("S" & team2).value 'Goals
                            myY.Offset(2, 2).value = Range("T" & team1).value - Range("T" & team2).value 'Behinds
                            myY.Offset(2, 3).value = Range("U" & team1).value - Range("U" & team2).value 'Points
                            'T_diffPoints = Abs(Range("U" & Team1).Value - Range("U" & Team2).Value)
                            x = Abs(Range("U" & team1).value - Range("U" & team2).value)
                            If x < 1 Then
                                x = 1
                            End If
                            T_diffPoints = x
                            myY.Offset(2, 4).value = Range("V" & team1).value - Range("V" & team2).value 'Kicks
                            myY.Offset(2, 5).value = Range("W" & team1).value - Range("W" & team2).value 'Handball
                            myY.Offset(2, 6).value = Range("X" & team1).value - Range("X" & team2).value 'Disposal
                            myY.Offset(2, 7).value = Range("Y" & team1).value - Range("Y" & team2).value 'Marks
                            myY.Offset(2, 8).value = Range("Z" & team1).value - Range("Z" & team2).value 'Hitouts
                            myY.Offset(2, 9).value = Range("AA" & team1).value - Range("AA" & team2).value 'FreeFor
                            myY.Offset(2, 10).value = Range("AB" & team1).value - Range("AB" & team2).value 'FreeAgainst
                            myY.Offset(2, 11).value = Range("AC" & team1).value - Range("AC" & team2).value 'Tackles
                            myY.Offset(2, 12).value = Range("AD" & team1).value - Range("AD" & team2).value 'Fantasy
                            T_diffFantasy = Abs(Range("AD" & team1).value - Range("AD" & team2).value)
                            myY.Offset(4, 0).value = "Best Players"
                            myY.Offset(4, 2).value = "H/lit"
                            myY.Offset(4, 3).value = "1 on 1"
                            myY.Offset(4, 5).value = "Final Score"
                            myY.Offset(5, 0).value = Range("B" & team1).value
                            myY.Offset(5, 7).value = "=(W" & team1 + 5 & "*6)+X" & team1 + 5
                            myY.Offset(6, 0).value = Range("B" & team2).value
                            myY.Offset(6, 7).value = "=(W" & team1 + 6 & "*6)+X" & team1 + 6
                            myY.Offset(7, 7).value = "=Y" & team1 + 5 & "-Y" & team1 + 6
                            
                            myY.Offset(4, 9).value = "Forecast Score"
                            myY.Offset(-1, 12).value = T1Count
                            
                            myY.Offset(9, 1).value = "Odds:"
                            Range("T" & team1 + 9 & ":W" & team1 + 9).NumberFormat = "@"
                            
                            Set borderRng = Range("W" & team1 + 5 & ":Y" & team1 + 7)
                                With borderRng.Borders(xlEdgeLeft)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeTop)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeBottom)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeRight)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With

                        ElseIf myY.Row = team2 Then
                            myY.Offset(-1, 12).value = T2Count
                            myY.Offset(3, 1).value = "Odds:"
                            Range("T" & team2 + 3 & ":W" & team2 + 3).NumberFormat = "@"
                        ElseIf myY.Row = myRowEnd - 1 Then
'--------------------------
'predict winning team and score
'T_diffPoints calc (try without changing)
'T_diffValue calc (0.4 of initial value)
                            If T_diffValue > 1 Then
                                T_diffValue = T_diffValue * 0.4
                            Else
                                T_diffValue = 1
                            End If
'T_diffFantasy
                            If T_diffFantasy > 0 Then
                                T_diffFantasy = T_diffFantasy * 0.05
                            Else
                                T_diffFantasy = 0
                            End If

'A Value / Points / Fantasy
                            If T_bestValue = T_bestPoints And T_bestValue = T_bestFantasy And _
                                T_diffValue > 0 And T_diffPoints > 0 And T_diffFantasy > 0 Then
                                If T_bestValue = team1 Then
                                    WinTeam = team1 + 5 'the row of the winning team
                                Else
                                    WinTeam = team1 + 6
                                End If
                                Range("AC" & WinTeam).value = T_diffValue + T_diffPoints + T_diffFantasy
'B Value / Points
                            ElseIf T_bestValue = T_bestPoints And _
                                T_diffValue > 0 And T_diffPoints > 0 Then
                                If T_bestValue = team1 Then
                                    WinTeam = team1 + 5 'the row of the winning team
                                Else
                                    WinTeam = team1 + 6
                                End If
                                Range("AC" & WinTeam).value = T_diffValue + T_diffPoints 'minus T_diffFantasy?
'C Team highlights - Col AD
                            ElseIf T1Count <> T2Count Then
                                T_diffCount = Abs(T1Count - T2Count)
                                T_diffCount = T_diffCount * 1 'this can be changed 1.5
                                If T1Count > T2Count Then
                                    T_bestCount = team1
                                Else
                                    T_bestCount = team2
                                End If
                                If T_bestValue = T_bestCount Then
                                    If T_bestValue = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AC" & WinTeam).value = T_diffValue + T_diffCount
                                ElseIf T_bestPoints = T_bestCount Then
                                    If T_bestPoints = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AC" & WinTeam).value = T_diffPoints + T_diffCount
                                End If
                                'up to here
'D 1on1
                            ElseIf Range("U" & team1 + 5).value <> Range("U" & team1 + 6).value Then 'best of 1 to 1
                                T_diff1to1 = Abs(Range("U" & team1 + 5).value - Range("U" & team1 + 6).value)
                                T_diff1to1 = T_diff1to1 * 2 'this can be changed
                                If Range("U" & team1 + 5).value > Range("U" & team1 + 6).value Then
                                    T_best1to1 = team1
                                Else
                                    T_best1to1 = team2
                                End If
                                If T_bestValue = T_best1to1 Then
                                    If T_bestValue = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AC" & WinTeam).value = T_diffValue + T_diff1to1
                                ElseIf T_bestPoints = T_best1to1 Then
                                    If T_bestPoints = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AC" & WinTeam).value = T_diffPoints + T_diff1to1
                                End If
'E H/Lit
                            ElseIf Range("T" & team1 + 5).value <> Range("T" & team1 + 6).value Then 'best of H/Lit
                                T_diffHL = Abs(Range("T" & team1 + 5).value - Range("T" & team1 + 6).value)
                                T_diffHL = T_diffHL * 1.5 'this can be changed 2
                                If Range("T" & team1 + 5).value > Range("T" & team1 + 6).value Then
                                    T_bestHL = team1
                                Else
                                    T_bestHL = team2
                                End If
                                If T_bestValue = T_bestHL Then
                                    If T_bestValue = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AC" & WinTeam).value = T_diffValue + T_diffHL
                                ElseIf T_bestPoints = T_bestHL Then
                                    If T_bestPoints = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AC" & WinTeam).value = T_diffPoints + T_diffHL
                                End If
                            Else
                                MsgBox ("Can't separate the Teams using 'aflFinalPoints'")
                            End If
                            
                            Range("AA" & WinTeam).value = "To win by:"
                            
                            Range("AA" & team1 + 7).value = "ChkScore"
                            Range("AC" & team1 + 7).value = Range("U" & team1 + 2).value + _
                                (Range("AD" & team1 + 2).value / 10) + _
                                (Range("T" & team1 + 5).value - Range("T" & team1 + 6).value) + _
                                (Range("U" & team1 + 5).value - Range("U" & team1 + 6).value) + _
                                (Range("AD" & team1 - 1).value - Range("AD" & team1 + 18).value)
                            
                            'Debug.Print "T_diffPoints: " & T_diffPoints
                            If WinTeam = team1 + 5 Then 'the row of the winning team
                                LoseTeam = team1 + 6
                            Else
                                LoseTeam = team1 + 5
                            End If
                                
                            WinBy = Range("AC" & WinTeam).value
                            'Debug.Print WinBy
                            AFLLog GameNo & " " & Range("R" & WinTeam).value & " to defeat " & Range("R" & LoseTeam).value & " by " & WinBy
                            GameNo = ""
                            'works okay but could have more work on this area

'----------------------------
                        End If
                    Next myY
                    myRow1 = myRowEnd + 1
                End If
        Next myX
Range("A1").Select
End Sub
Private Sub AFLprintSheet()
Dim lastRow As Long
lastRow = (Range("A" & Rows.count).End(xlUp).Row) - 1
    
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$1:$1"
        .PrintTitleColumns = ""
    End With
    ActiveSheet.PageSetup.PrintArea = "A1:AF" & lastRow
    With ActiveSheet.PageSetup
        .CenterHeader = "&F"
        .LeftMargin = Application.InchesToPoints(0.196850393700787)
        .RightMargin = Application.InchesToPoints(0.196850393700787)
        .TopMargin = Application.InchesToPoints(0.393700787401575)
        .BottomMargin = Application.InchesToPoints(0.393700787401575)
        .HeaderMargin = Application.InchesToPoints(0.196850393700787)
        .FooterMargin = Application.InchesToPoints(0.196850393700787)
        .PrintHeadings = False
        .PrintGridlines = True
        .PrintComments = xlPrintNoComments
       ' .PrintQuality = 600
        .CenterHorizontally = False
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = False
        .PrintErrors = xlPrintErrorsDisplayed
     End With
    Range("D2").Select
End Sub
Sub AFLLog(LogMessage As String)
Dim LogFileName As String
Dim FileNum As Integer

LogFileName = "C:\FILES\AFL\Process.txt"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, LogMessage ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
Sub GetAFLOdds()

Dim wkName      As String
Dim urlName     As String
Dim myCol       As Range
Dim myX         As Range
Dim found       As Long
Dim teamA       As String
Dim teamB       As String
Dim teamAOdds   As String
Dim teamBOdds   As String
Dim teamAPoints As String
Dim teamBPoints As String
Dim GameNo      As String

Dim Title       As String

Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement

Dim myWork As String

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("phantomjs.exe")
StopMyProcess ("chromedriver.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkName = Replace(wkName, "round ", "")

'https://tab.ubet.com/sports/australian-rules/afl/afl-round-1
driver.Start "chrome", "https://tab.ubet.com/sports/australian-rules/afl/"
driver.setImplicitWait 10000
driver.Wait (1000)

urlName = "/afl-round-" & wkName
driver.get urlName, Raise:=False
driver.Wait (1000)
driver.maximizeWindow
On Error Resume Next
If InStr(1, driver.PageSource, "acc_exitButton") > 0 Then
    driver.findElementByXPath("//*[@id='acc_exitButton']").Click 'works
End If

Application.StatusBar = "Getting AFL Odds ..."
'                                             //*[@id="page-container"]/sports-container/div/div[3]/div/meetings/div/div[2]
Set startElement = driver.findElementByXPath("//*[@id='page-container']/sports-container/div/div[3]/div/meetings/div/div[2]")

Set elements = startElement.findElementsByTagName("div")
For Each element In elements
    If element.getAttribute("class") = "main-event" Then 'got the game
        myWork = element.text
        'Debug.Print myWork
        'Stop
        Title = Split(myWork, vbCrLf)(1)
        Title = Application.Proper(Title)
        teamA = Split(myWork, vbCrLf)(3)
        teamAOdds = Split(myWork, vbCrLf)(4)
        teamB = Split(myWork, vbCrLf)(5)
        teamBOdds = Split(myWork, vbCrLf)(6)
        teamAPoints = Split(myWork, vbCrLf)(8)
        If InStr(1, teamAPoints, "-") > 0 Then
            teamAPoints = Mid(teamAPoints, InStr(1, teamAPoints, "-") + 1, Len(teamAPoints))
        Else
            teamAPoints = ""
        End If
        teamBPoints = Split(myWork, vbCrLf)(10)
        If InStr(1, Split(myWork, vbCrLf)(10), "-") > 0 Then
            teamBPoints = Mid(teamBPoints, InStr(1, teamBPoints, "-") + 1, Len(teamBPoints))
        Else
            teamBPoints = ""
        End If
        teamAPoints = Trim(teamAPoints)
        teamBPoints = Trim(teamBPoints)
        teamA = fixTeam(teamA)
        teamB = fixTeam(teamB)
'-----
        Set myCol = Range("B2:B" & Range("B" & Rows.count).End(xlUp).Row)
        For Each myX In myCol 'this is col B
            'Stop
            If myX <> "" Then
                If myX.Offset(-1, -1) <> "" Then
                    GameNo = Left(myX.Offset(-1, -1), 1)
                End If
                If myX = teamA Then
                    found = found + 1
                    If myX.Offset(9, 17) = "Odds:" Then 'this is the top team
                        myX.Offset(9, 18) = teamAOdds
                        myX.Offset(9, 19) = teamAPoints
                    Else
                        myX.Offset(3, 18) = teamAOdds
                        myX.Offset(3, 19) = teamAPoints
                    End If
                ElseIf myX = teamB Then
                    found = found + 1
                    If myX.Offset(9, 17) = "Odds:" Then 'this is the top team
                        myX.Offset(9, 18) = teamBOdds
                        myX.Offset(9, 19) = teamBPoints
                    Else
                        myX.Offset(3, 18) = teamBOdds
                        myX.Offset(3, 19) = teamBPoints
                    End If
                End If
            End If
            If found = 2 Then
                If teamAPoints = teamBPoints Then
                    AFLLog GameNo & " Betting odds: Even money for " & teamA & " and " & teamB & " at $" _
                    & teamAOdds
                ElseIf teamAPoints > teamBPoints Then
                    AFLLog GameNo & " Betting odds: " & teamA & " at $" & teamAOdds & " to beat " & teamB & " at $" _
                    & teamBOdds & " by " & teamAPoints
                ElseIf teamAPoints < teamBPoints Then
                    AFLLog GameNo & " Betting odds: " & teamB & " at $" & teamBOdds & " to beat " & teamA & " at $" _
                    & teamAOdds & " by " & teamBPoints
                End If
                Exit For
            End If
        Next myX
        found = 0
        teamA = ""
        teamAOdds = ""
        teamAPoints = ""
        teamB = ""
        teamBOdds = ""
        teamBPoints = ""
        GameNo = ""
    End If
Next element
driver.stop
Application.StatusBar = ""

End Sub
Private Function fixTeam(myStr As String)
'fix team names 'Nth Melbourne
    Select Case myStr
        Case "Geelong Cats"
            myStr = "Geelong"
        Case "Sydney Swans"
            myStr = "Sydney"
        Case "West Coast Eagles"
            myStr = "West Coast"
        Case "GWS Giants"
            myStr = "GWS"
        Case "GW Sydney"
            myStr = "GWS"
        Case "Adelaide Crows"
            myStr = "Adelaide"
        Case "Gold Coast Suns"
            myStr = "Gold Coast"
        Case "Brisbane Lions"
            myStr = "Brisbane"
        Case "Wstn Bulldogs"
            myStr = "Western Bulldogs"
        Case "Nth Melbourne"
            myStr = "North Melbourne"
        Case "Richmond Tigers"
            myStr = "Richmond"
        Case "Carlton Blues"
            myStr = "Carlton"
        Case "Essendon Bombers"
            myStr = "Essendon"
        Case "St Kilda Saints"
            myStr = "St Kilda"
        Case "Port Adelaide Power"
            myStr = "Port Adelaide"
        Case "Fremantle Dockers"
            myStr = "Fremantle"
        Case "North Melbourne Kangaroos"
            myStr = "North Melbourne"
        Case "Hawthorn Hawks"
            myStr = "Hawthorn"
        Case "Collingwood Magpies"
            myStr = "Collingwood"
        Case "Greater Western Sydney Giants"
            myStr = "GWS"
        Case "Greater Western Sydney"
            myStr = "GWS"
        Case "Melbourne Demons"
            myStr = "Melbourne"
    End Select

fixTeam = myStr
End Function

Sub GetAFLResults()
'
Dim startElement As WebElement
Dim wRounds As WebElementCollection
Dim wRound As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim element1s As WebElementCollection
Dim element1 As WebElement
Dim myWork As String
Dim RndNo As String
Dim myYear As String
Dim myURL As String
Dim myCol As Range
Dim myX As Range
Dim wkName As String
Dim team1 As String
Dim team2 As String
Dim Score1 As String
Dim Goal1 As String
Dim Point1 As String
Dim Score2 As String
Dim Goal2 As String
Dim Point2 As String
Dim CorrectRound As Boolean
Dim quest As Integer
Dim wkNo As String

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

Application.DisplayStatusBar = True
Application.StatusBar = "Getting AFL Results ..."

StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
RndNo = Replace(wkName, "round ", "")
'If Len(RndNo) = 1 Then
'    RndNo = "0" & RndNo
'End If

If RndNo > 23 Then
    quest = MsgBox("Is this a Finals Week?", vbYesNo, "AFL Round")
    If quest = vbYes Then
        If Range("W17") = "" Then
            wkNo = InputBox(Prompt:="Enter Finals Code from flashscore", Title:="https://www.flashscore.com.au/afl/australia/afl/results/", Default:="1/8-finals")
            Range("W17") = wkNo
        Else
            wkNo = Range("W17")
        End If
        'Finals
    ElseIf quest = vbNo Then
        'Normal
        wkNo = RndNo
    End If
Else
    wkNo = RndNo
End If
myYear = Format(Date, "yyyy")
CorrectRound = False
'driver.Start "chrome", "http://www.afl.com.au/"
'driver.Start "phantomjs", "http://www.afl.com.au/"
driver.Start "chrome", "https://www.flashscore.com.au/"
'https://www.flashscore.com.au/afl/australia/afl/results/
'USE THIS SITE http://www.afl.com.au/match-centre?roundId=CD_R201801401#tround
'2             http://www.afl.com.au/match-centre?roundId=CD_R201801402#tround
'              http://www.afl.com.au/match-centre?roundId=CD_R201801413#tround

'1             https://www.afl.com.au/fixture#season=CD_S2019014&round=CD_R201901401&tz=VENUE
'2             https://www.afl.com.au/fixture#season=CD_S2019014&round=CD_R201901402&tz=VENUE
driver.setImplicitWait 10000
driver.Wait (500)

'myURL = "/match-centre?roundId=CD_R" & myYear & "014" & RndNo & "#tround"
myURL = "/afl/australia/afl/results/"
driver.get myURL, Raise:=False

'Set startElement = driver.findElementByXPath("//*[@id='tround']/table/tbody")
'Set startElement = driver.findElementByXPath("//*[@id='fs-results']/table/tbody")
Set startElement = driver.findElementByXPath("//*[@id='live-table']/div/div/div")
'//*[@id="live-table"]/div/div/div
'//*[@id="fs-results"]/table/tbody
'Set wRounds = startElement.findElementsByTagName("tr")
'For Each wRound In wRounds
'    If wRound.text = RndNo Then
'        wRound.Click
'        Exit For
'    End If
'Next wRound

'Set startElement = driver.findElementByXPath("//*[@id='js-vue-afl-app']/div[2]/div[1]/div/div[1]/span[1]")
'//*[@id="js-vue-afl-app"]/div[2]/div[1]/div/div[1]/span[1]
Set elements = startElement.findElementsByTagName("div")
For Each element In elements
    'Debug.Print element.getAttribute("class")
    'Stop
    If element.getAttribute("class") = "event__round event__round--static" Then
        If CorrectRound = False Then
            'Stop
            '<tr class="event_round"><td colspan="6">Quarter-finals</td></tr>
            'Debug.Print Element.text
            'Debug.Print "---"
            'Stop
            If InStr(1, LCase(element.text), "round " & RndNo) > 0 Then
                CorrectRound = True
                GoTo here:
            ElseIf InStr(1, element.text, wkNo) > 0 Then
                CorrectRound = True
                GoTo here:
            ElseIf InStr(1, LCase(element.text), "round " & RndNo - 1) > 0 Then
                CorrectRound = False
                Exit For
            End If
        Else
            Exit For
        End If
    End If
'GoTo here:
    '                                   event__match event__match--static event__match--twoLine
    If (element.getAttribute("class") = "event__match event__match--static event__match--last event__match--twoLine" _
        Or element.getAttribute("class") = "event__match event__match--static event__match--twoLine") _
        And CorrectRound = True Then 'not a round field
                'Set element1s = Element.findElementsByTagName("div")
        'Stop
        myWork = element.text
        'Debug.Print myWork
        team1 = Split(myWork, vbCrLf)(1)
        'Team1 = Replace(Team1, "Team logo for ", "")
        team1 = Trim(team1)
        team1 = fixTeam(team1)
        Score1 = Split(myWork, vbCrLf)(3)
        Score1 = Left(Score1, InStr(1, Score1, "(") - 1)
        Score1 = Trim(Score1)
        'Score1 = Replace(Score1, " ", ".")
        'Score1 = Trim(Score1)
        Goal1 = Split(Score1, ".")(0)
        Point1 = Split(Score1, ".")(1)
        'Debug.Print team1 & " " & Goal1 & " " & Point1
        team2 = Split(myWork, vbCrLf)(2)
        'Team2 = Replace(Team2, "Team logo for ", "")
        team2 = Trim(team2)
        team2 = fixTeam(team2)
        Score2 = Split(myWork, vbCrLf)(4)
        'Score2 = Mid(Score2, InStr(1, Score2, ":") + 1, Len(Score2))
        'Score2 = Left(Score2, InStr(1, Score2, "(") - 1)
        '
        Score2 = Left(Score2, InStr(1, Score2, "(") - 1)
        'Score2 = Trim(Score2)
        
        Score2 = Trim(Score2)
        Goal2 = Split(Score2, ".")(0)
        Point2 = Split(Score2, ".")(1)
        'Debug.Print team2 & " " & Goal2 & " " & Point2
        'Debug.Print
        Set myCol = Range("R2:R" & Range("R" & Rows.count).End(xlUp).Row - 1)
        For Each myX In myCol
            If myX = team1 Then
                myX.Offset(0, 5) = Goal1
                myX.Offset(0, 6) = Point1
                'Stop
            ElseIf myX = team2 Then
                myX.Offset(0, 5) = Goal2
                myX.Offset(0, 6) = Point2
                'Stop
            End If
        Next myX
        myWork = ""
        team1 = ""
        Score1 = ""
        Goal1 = ""
        Point1 = ""
        team2 = ""
        Score2 = ""
        Goal2 = ""
        Point2 = ""
    End If
here:
Next element

done:
    driver.stop
    Application.StatusBar = ""
    MsgBox "Done!"
End Sub
Sub BuildAFLResultStats()
' Get the result stats for AFL games
' chuck 12/5/17
    Dim strPath         As String
    Dim Round           As String
    Dim nRound          As String
    Dim tempX               As String
    Dim wbA             As Workbook
    Dim wbB             As Workbook
    Dim myBCol          As Range
    Dim myX             As Range
    Dim r               As Integer
    Dim Game            As String
    Dim FinalScore      As Double
    Dim value           As Long
    Dim Points          As Double
    Dim WinBy           As Long
    Dim ChkScore        As Long
    'Dim OddsA           As Double
    'Dim OddsB           As Double
    Dim OddsPointsA     As Double
    Dim OddsPointsB     As Double
    Dim OddsPoints      As Double
    Dim GameCount       As Long
    Dim WinByChk        As Long
    Dim SBWinByChk      As Double 'SupaBru points
    Dim ChkScoreChk     As Long
    Dim SBChkScoreChk   As Double 'Supa Bru
    Dim OddsChk         As Long
    Dim SBOddsChk       As Double 'Supa Bro
    
    Dim BF_pick        As Long
    Dim BF_chk         As Long
    Dim SBBF_chk       As Double

    Dim AVG             As Double
    Dim AVGChk          As Long
    Dim SBAVG_chk       As Double
    
    Dim avgOddsBF       As Double
    Dim SBavgOddsBF     As Double

    Dim rng As Range
    Dim myR As Range
    Dim tgt As Long
    Dim t As Double
    Dim u As Double
    Dim x As Double


    If ActiveWorkbook.name <> "Game_Summaries_2019.xls" Then
        MsgBox ("The worksheet 'Game_Summaries_2019.xls' is not the current sheet")
        Exit Sub
    End If
'wbA
    Set wbA = ActiveWorkbook
    nRound = InputBox("Round Number")
    Round = "round " & nRound & ".xls"
    
    strPath = "C:\FILES\AFL\Results\2019\"
    On Error Resume Next
    
    Workbooks.Open strPath & Round
'wbB
    Set wbB = ActiveWorkbook
    Set myBCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1) 'wbB sheet
        For Each myX In myBCol 'this is col A
            If myX <> "" Then
                GameCount = GameCount + 1
                
                Game = myX.Offset(1, 1) & " v " & myX.Offset(20, 1)
                Game = Trim(Game)
                FinalScore = myX.Offset(8, 24)
                value = myX.Offset(3, 17)
                Points = myX.Offset(3, 20)
                WinBy = myX.Offset(6, 28) - myX.Offset(7, 28)
                ChkScore = myX.Offset(8, 28)
                'OddsA = myX.Offset(10, 19)
                'OddsB = myX.Offset(23, 19)
                BF_pick = myX.Offset(6, 30) - myX.Offset(7, 30)
                If myX.Offset(10, 20) <> "" Then
                    tempX = myX.Offset(10, 20)
                    tempX = Replace(Replace(Replace(tempX, "(", ""), "-", ""), ")", "")
                    OddsPointsA = tempX
                ElseIf myX.Offset(23, 20) <> "" Then
                    tempX = myX.Offset(23, 20)
                    tempX = Replace(Replace(Replace(tempX, "(", ""), "-", ""), ")", "")
                    OddsPointsB = tempX
                End If
                tempX = ""
                OddsPoints = OddsPointsA - OddsPointsB
            
                If BF_pick <> 0 Then
                    AVG = Application.Average(WinBy, BF_pick, OddsPoints, ChkScore)
                    avgOddsBF = Application.Average(BF_pick, OddsPoints)
                Else
                    AVG = Application.Average(WinBy, OddsPoints, ChkScore)
                    avgOddsBF = OddsPoints
                End If
                
                AVG = WorksheetFunction.Round(AVG, 0)
                avgOddsBF = WorksheetFunction.Round(avgOddsBF, 0)
'wbA
                wbA.Activate
                Worksheets("Sheet1").Activate
                r = ActiveSheet.UsedRange.Rows.count + 1
                Worksheets("Sheet1").Cells(r, 1).value = nRound
                Worksheets("Sheet1").Cells(r, 2).value = Game
                Worksheets("Sheet1").Cells(r, 3).value = FinalScore
                Worksheets("Sheet1").Cells(r, 4).value = value
            
                Worksheets("Sheet1").Cells(r, 5).value = Points
                
                'WinByChk
                Worksheets("Sheet1").Cells(r, 6).value = WinBy
                If (FinalScore > 0 And WinBy > 0) _
                    Or (FinalScore < 0 And WinBy < 0) Then
                    Worksheets("Sheet1").Cells(r, 6).Interior.ColorIndex = 6
                    WinByChk = WinByChk + 1
                    SBWinByChk = SBWinByChk + 1
                    If FinalScore = WinBy Then
                        SBWinByChk = SBWinByChk + 1
                    End If
                End If
                If FinalScore - WinBy < 16 And WinBy - FinalScore < 16 Then
                    SBWinByChk = SBWinByChk + 0.5
                End If
                
                'ChkScoreChk
                Worksheets("Sheet1").Cells(r, 8).value = ChkScore
                If (FinalScore > 0 And ChkScore > 0) _
                    Or (FinalScore < 0 And ChkScore < 0) Then
                    Worksheets("Sheet1").Cells(r, 8).Interior.ColorIndex = 6
                    ChkScoreChk = ChkScoreChk + 1
                    SBChkScoreChk = SBChkScoreChk + 1
                    If FinalScore = ChkScore Then
                        SBChkScoreChk = SBChkScoreChk + 1
                    End If
                End If
                If FinalScore - ChkScore < 16 And ChkScore - FinalScore < 16 Then
                    SBChkScoreChk = SBChkScoreChk + 0.5
                End If
                
                'OddsChk
                'Worksheets("Sheet1").Cells(r, 10).value = OddsA
                'Worksheets("Sheet1").Cells(r, 11).value = OddsB
                Worksheets("Sheet1").Cells(r, 10).value = OddsPoints
                If (FinalScore > 0 And OddsPoints > 0) _
                    Or (FinalScore < 0 And OddsPoints < 0) Then
                    Worksheets("Sheet1").Cells(r, 10).Interior.ColorIndex = 6
                    OddsChk = OddsChk + 1
                    SBOddsChk = SBOddsChk + 1
                    If FinalScore = OddsPoints Then
                        SBOddsChk = SBOddsChk + 1
                    End If
                End If
                If FinalScore - OddsPoints < 16 And OddsPoints - FinalScore < 16 Then
                    SBOddsChk = SBOddsChk + 0.5
                End If
                
                'BF_chk
                Worksheets("Sheet1").Cells(r, 12).value = BF_pick
                If (FinalScore > 0 And BF_pick > 0) _
                    Or (FinalScore < 0 And BF_pick < 0) Then
                    Worksheets("Sheet1").Cells(r, 12).Interior.ColorIndex = 6
                    BF_chk = BF_chk + 1
                    SBBF_chk = SBBF_chk + 1
                    If FinalScore = BF_pick Then
                        SBBF_chk = SBBF_chk + 1
                    End If
                End If
                If FinalScore - BF_pick < 16 And BF_pick - FinalScore < 16 And BF_pick <> 0 Then
                    SBBF_chk = SBBF_chk + 0.5
                End If
 
                 'AVGChk SBAVG_chk
                
                Worksheets("Sheet1").Cells(r, 14).value = AVG
                If (FinalScore > 0 And AVG > 0) _
                    Or (FinalScore < 0 And AVG < 0) Then
                    Worksheets("Sheet1").Cells(r, 14).Interior.ColorIndex = 6
                    AVGChk = AVGChk + 1
                    SBAVG_chk = SBAVG_chk + 1
                    If FinalScore = AVG Then
                        SBAVG_chk = SBAVG_chk + 1
                    End If
                End If
                If FinalScore - AVG < 6 And AVG - FinalScore < 6 Then
                    SBAVG_chk = SBAVG_chk + 0.5
                End If
              
                    'avgOddsBF SBavgOddsBF
                If (FinalScore > 0 And avgOddsBF > 0) _
                    Or (FinalScore < 0 And avgOddsBF < 0) Then
                    'Worksheets("Sheet1").Cells(r, 14).Interior.ColorIndex = 6
                    'AVGChk = AVGChk + 1
                    SBavgOddsBF = SBavgOddsBF + 1
                    If FinalScore = avgOddsBF Then
                        SBavgOddsBF = SBavgOddsBF + 1
                    End If
                End If
                If FinalScore - avgOddsBF < 6 And avgOddsBF - FinalScore < 6 Then
                    SBavgOddsBF = SBavgOddsBF + 0.5
                End If
             
 
 'highlight the closest to the score
                tgt = FinalScore
                'Set rng = Range("F" & r & ", H" & r & ", L" & r & ", N" & r)
                Set rng = Range("F" & r & ", H" & r & ", J" & r & ", L" & r & ", N" & r)
                t = WorksheetFunction.Max(rng) + 100
                For Each myR In rng
                    u = Abs(myR - tgt)
                    If u < t Then
                        t = u
                        x = myR
                    End If
                Next myR
                For Each myR In rng
                    If myR = x Then
                        If myR.Interior.ColorIndex = 6 Then
                            myR.Interior.ColorIndex = 4
                        End If
                    End If
                Next myR
                
            End If
' Clear variables
            Game = ""
            FinalScore = 0
            value = 0
            Points = 0
            WinBy = 0
            ChkScore = 0
            'OddsA = 0
            'OddsB = 0
            OddsPointsA = 0
            OddsPointsB = 0
            x = ""
            OddsPoints = 0
            BF_pick = 0


        Next myX
        wbB.Close
'wbB end
'wbA
        wbA.Activate
        Worksheets("Sheet1").Activate
        r = ActiveSheet.UsedRange.Rows.count
        'Worksheets("Sheet1").Cells(r, 7).Value = WinByChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 9).Value = ChkScoreChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 13).Value = OddsChk & " out of " & GameCount
        Worksheets("Sheet1").Cells(r, 7).value = WinByChk
        Worksheets("Sheet1").Cells(r, 9).value = ChkScoreChk
        Worksheets("Sheet1").Cells(r, 11).value = OddsChk
        Worksheets("Sheet1").Cells(r, 13).value = BF_chk
        Worksheets("Sheet1").Cells(r, 15).value = AVGChk
'Enter the SuperBro Scores
        Worksheets("Sheet1").Cells(r, 16).value = SBWinByChk
        Worksheets("Sheet1").Cells(r, 17).value = SBChkScoreChk
        Worksheets("Sheet1").Cells(r, 18).value = SBOddsChk
        Worksheets("Sheet1").Cells(r, 19).value = SBBF_chk
        Worksheets("Sheet1").Cells(r, 20).value = SBAVG_chk
        Worksheets("Sheet1").Cells(r, 21).value = SBavgOddsBF
    
    Range("P" & r & ":U" & r).Select
    Selection.FormatConditions.Delete
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=MAX($P$" & r & ",$Q$" & r & ",$R$" & r & ",$S$" & r & ",$T$" & r & ",$U$" & r & ")"
    Selection.FormatConditions(1).Interior.ColorIndex = 6

        
End Sub
Sub FootyForecasterAFL()
Dim wkName      As String
Dim a           As Long 'temp holder for round number code
Dim urlName     As String
Dim myCol       As Range
Dim myX         As Range
Dim GameNo      As String
Dim team        As String
Dim Score       As String
Dim oHttp          As Object
Dim mySite         As String
Dim LineArray()     As String
Dim x               As Long
Dim TempStr         As String

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkName = Replace(wkName, "round ", "")
'round number code
a = wkName

'https://footyforecaster.com/AFL/RoundForecast/2019_Round_1
urlName = "https://footyforecaster.com/AFL/RoundForecast/2019_Round_" & a

'Set oHttp = CreateObject("MSXML2.XMLHTTP")
Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
oHttp.Open "GET", urlName, False
oHttp.send
Do While oHttp.READYSTATE <> 4
    DoEvents
Loop
Do While oHttp.Status <> 200
    DoEvents
Loop
mySite = oHttp.responseText 'a contains source code of website
Set oHttp = Nothing

'tidy up mysite string
    mySite = Mid(mySite, InStr(1, mySite, "<table id=""forecast"">"), Len(mySite))
    'Debug.Print mySite
    'Stop
'##### 'for testing
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\NRL\data\test.txt"

'FileNum = FreeFile
'Open testFile For Output As #FileNum
'Print #FileNum, mySite
'Close #FileNum
'Stop
'#####
    LineArray() = Split(mySite, ">Forecast<")
'Stop
'Read Data into an Array Variable
    For x = 1 To UBound(LineArray)
        If InStr(1, LineArray(x), "<table><tbody>") > 0 Then
            TempStr = LineArray(x)
            'Debug.Print TempStr
            'TempStr = Replace(TempStr, "&quot;", "")
            TempStr = Mid(TempStr, InStr(1, TempStr, "<tr><td>") + 8, Len(TempStr))
            
            'Debug.Print Left(TempStr, 100)
            'Stop
            team = Left(TempStr, InStr(1, TempStr, "by") - 1)
            team = Trim(team)
            team = fixTeam(team)
            'Debug.Print Team
            
            'Stop
            'If InStr(1, TempStr, "score:") > 0 Then
            Score = Mid(TempStr, InStr(1, TempStr, "by") + 2, Len(TempStr))
            Score = Left(Score, InStr(1, Score, "point") - 1)
            Score = Trim(Score)
            'Else
            '    Score = "0"
            'End If
            'Debug.Print team & " " & Score
            'Stop
            Set myCol = Range("R2:R" & Range("R" & Rows.count).End(xlUp).Row)
            For Each myX In myCol 'this is col R
                If myX = team Then
                    If myX.Offset(-6, -17) <> "" Then
                        GameNo = Left(myX.Offset(-6, -17), 1)
                    ElseIf myX.Offset(-7, -17) <> "" Then
                        GameNo = Left(myX.Offset(-7, -17), 1)
                    End If
                    myX.Offset(0, 13) = Score
                    AFLLog GameNo & " Footy Forecaster game: " & team & " by " & Score
                    'Stop
                    TempStr = ""
                    team = ""
                    Score = ""
                    GameNo = ""
                    Exit For
                End If
            Next myX
        End If
    Next x
End Sub

Sub GetAFL_BETFAIR()
Dim setRound As WebElement
Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim myWork As String
Dim RndNo As String
Dim wkNo As String
Dim myURL As String
Dim myCol As Range
Dim myX As Range
Dim wkName As String
Dim team As String
'Dim Team2 As String
Dim Score As String
'Dim Score2 As String
Dim GameNo As String
Dim quest As Integer

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

'StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
RndNo = Replace(wkName, "round ", "")

Application.StatusBar = "Getting AFL BetFair picks ..."

If RndNo > 23 Then
    quest = MsgBox("Is this a Finals Week?", vbYesNo, "AFL Round")
    If quest = vbYes Then
        If Range("W16") = "" Then
            wkNo = InputBox(Prompt:="Enter Finals Week Number", Title:="FINALS WEEK", Default:="1")
            Range("W16") = wkNo
        Else
            wkNo = Range("W16")
        End If
        'Finals
        wkNo = "Finals Wk " & wkNo
    ElseIf quest = vbNo Then
        'Normal
        wkNo = RndNo
    End If
Else
    wkNo = RndNo
End If

driver.Start "phantomjs", "https://www.betfair.com.au/hub/tools/models/afl-prediction-model/"
'driver.Start "phantomjs", "https://www.betfair.com.au/hub/news/afl-predictions-2018/"
'driver.setPreference "browser.password_manager_enabled", False
driver.setImplicitWait 10000
driver.Wait (500)

myURL = "/"
driver.get myURL, Raise:=False
'Stop
Set setRound = driver.findElementByXPath("//*[@id='paragraphblock']/div/div/div[1]/div[2]/div[1]/div")
If setRound.text = wkNo Then


'driver.findElementByXPath("/html/body/div[3]/div/div[1]/div/div[2]/div[1]/div/div/div/div[3]/div/div/div[1]/div[2]/div[1]/div").Click
'Set startElement = driver.findElementByXPath("/html/body/div[3]/div/div[1]/div/div[2]/div[1]/div/div/div/div[3]/div/div/div[2]/div/div/div[2]")
    Set startElement = driver.findElementByXPath("//*[@id='paragraphblock']/div/div/div[2]/div/div/div[2]")
    Set elements = startElement.findElementsByTagName("div")
    For Each element In elements
'        Debug.Print Element.text
'        Debug.Print "----------------"
    'Stop
        If Left(LCase(element.text), 18) = "predicted margin: " Then
    'If InStr(1, LCase(Element.text), "predicted margin:") > 0 Then 'game over
            myWork = element.text
        'Debug.Print Element.text
        'Debug.Print "----------------"
            team = Split(myWork, vbCrLf)(0)
            team = Mid(team, InStr(1, team, "argin: ") + 7, Len(team))
            team = Left(team, InStr(1, team, " by ") - 1)
            team = Trim(team)
            Select Case team
                Case "Gold Coast"
                    team = "Gold Coast Suns"
                Case "GWS"
                    team = "GWS Giants"
                Case "Brisbane"
                    team = "Brisbane Lions"
                Case "West Coast"
                    team = "West Coast Eagles"
                Case "Sydney"
                    team = "Sydney Swans"
                Case "Port Adelaide Power"
                    team = "Port Adelaide"
                Case "Geelong"
                    team = "Geelong Cats"
                Case "Adelaide"
                    team = "Adelaide Crows"
            End Select
            Score = Split(myWork, vbCrLf)(0)
            Score = Mid(Score, InStrRev(Score, " by ") + 4, Len(Score))
            Score = Trim(Score)
        'Stop
            Set myCol = Range("R2:R" & Range("R" & Rows.count).End(xlUp).Row - 1)
            For Each myX In myCol
                If myX = team Then
                    myX.Offset(0, 13) = Score
                    If myX.Offset(-6, -17) <> "" Then
                        GameNo = Left(myX.Offset(-6, -17), InStr(1, myX.Offset(-6, -17), " ") - 1)
                    ElseIf myX.Offset(-7, -17) <> "" Then
                        GameNo = Left(myX.Offset(-7, -17), InStr(1, myX.Offset(-7, -17), " ") - 1)
                    End If
                    AFLLog GameNo & " BETFAIR picks: " & team & " by " & Score
                End If
            Next myX
            myWork = ""
            team = ""
            Score = ""
            GameNo = ""
        End If
    Next element
Else
    MsgBox "BetFair does not have current round " & RndNo
End If

done:
    driver.stop
    Application.StatusBar = ""
    MsgBox "Done!"
End Sub
Sub GetAFLAverages()

Dim myCol       As Range
Dim myX         As Range
Dim teamA       As String
Dim teamB       As String
Dim Score       As Double
Dim GameNo      As String
Dim fc As Double
Dim bf As Double
Dim odds As Double
Dim chk As Double


Set myCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1)
    For Each myX In myCol 'this is col A
        If myX <> "" Then
            'Stop
            GameNo = Left(myX, InStr(1, myX, " ") - 1)
            teamA = Range("B" & myX.Row + 1)
            teamB = Range("B" & myX.Row + 20)
            fc = Range("AC" & myX.Row + 6) - Range("AC" & myX.Row + 7)
            bf = Range("AE" & myX.Row + 6) - Range("AE" & myX.Row + 7)
            odds = Range("U" & myX.Row + 10) - Range("U" & myX.Row + 23)
            chk = Range("AC" & myX.Row + 8)
            
            'Score = Application.Average((Range("AC" & myX.Row + 6) - (Range("AC" & myX.Row + 7))), _
                (Range("AE" & myX.Row + 6) - (Range("AE" & myX.Row + 7))), _
                (Range("U" & myX.Row + 10) - (Range("U" & myX.Row + 23))), _
                Range("AC" & myX.Row + 8))
                
            Score = Application.Average(fc, bf, odds, chk)
            
            If Score > 0 Then
                AFLLog GameNo & " Average: " & teamA & " to beat " & teamB & " by " & Abs(WorksheetFunction.Round(Score, 0))
            Else
                AFLLog GameNo & " Average: " & teamB & " to beat " & teamA & " by " & Abs(WorksheetFunction.Round(Score, 0))
            End If
'Stop
        End If
        teamA = ""
        teamB = ""
        Score = 0
        GameNo = ""
    Next myX
End Sub
Sub JoinDuplicatesAFL()
'
Dim sFile           As String
Dim SFileBac           As String
Dim rng             As Range
'Dim myX             As Range
'Dim lastRow         As Long
Dim sName           As String
Dim nameCount       As Long
Dim r               As Long
Dim s(1 To 3)       As String
Dim n(4 To 25)      As Long
Dim d               As Long
'Dim sAdd            As String
Dim nFileNum        As Long

Dim myRecord As Range
Dim myField As Range
Dim sOut As String
Dim lngRow As Long

'backup original file
sFile = "C:\FILES\AFL\Stats.txt"
SFileBac = "C:\FILES\AFL\Stats_bac.txt"
FileCopy sFile, SFileBac
'import the file into excel
    Workbooks.OpenText fileName:=sFile, Origin:=437, StartRow:=1, _
        DataType:=xlDelimited, Other:=True, OtherChar:="^", _
        FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), _
        Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1), _
        Array(12, 1)), TrailingMinusNumbers:=True
    Cells.Select
'    Selection.Sort key1:=Range("A1"), Order1:=xlAscending, Header:=xlNo, _
'        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
'        DataOption1:=xlSortNormal
'
    Application.DisplayAlerts = False 'allow it to overwrite
    ActiveWorkbook.SaveAs fileName:="C:\FILES\NRL\data\PlayerStats.xls"
    Application.DisplayAlerts = True
'delete the original file
    Kill sFile
'here:
    With ActiveSheet
        lngRow = .Cells(65536, 1).End(xlUp).Row
        .Cells(1).CurrentRegion.Sort key1:=.Cells(1), Header:=xlNo

        Do
            If LCase(.Cells(lngRow, 1)) = LCase(.Cells(lngRow - 1, 1)) Then
                .Cells(lngRow - 1, 2) = (.Cells(lngRow - 1, 2) + .Cells(lngRow, 2)) / 2
                .Cells(lngRow - 1, 3) = (.Cells(lngRow - 1, 3) + .Cells(lngRow, 3)) / 2
                .Cells(lngRow - 1, 4) = (.Cells(lngRow - 1, 4) + .Cells(lngRow, 4)) / 2
                .Cells(lngRow - 1, 5) = (.Cells(lngRow - 1, 5) + .Cells(lngRow, 5)) / 2
                .Cells(lngRow - 1, 6) = (.Cells(lngRow - 1, 6) + .Cells(lngRow, 6)) / 2
                .Cells(lngRow - 1, 7) = (.Cells(lngRow - 1, 7) + .Cells(lngRow, 7)) / 2
                .Cells(lngRow - 1, 8) = (.Cells(lngRow - 1, 8) + .Cells(lngRow, 8)) / 2
                .Cells(lngRow - 1, 9) = (.Cells(lngRow - 1, 9) + .Cells(lngRow, 9)) / 2
                .Cells(lngRow - 1, 10) = (.Cells(lngRow - 1, 10) + .Cells(lngRow, 10)) / 2
                .Cells(lngRow - 1, 11) = (.Cells(lngRow - 1, 11) + .Cells(lngRow, 11)) / 2
                .Cells(lngRow - 1, 12) = (.Cells(lngRow - 1, 12) + .Cells(lngRow, 12)) / 2
                .Rows(lngRow).Delete
            End If

            lngRow = lngRow - 1
        Loop Until lngRow = 1
    End With
' output the data
nFileNum = FreeFile
Open sFile For Output As #nFileNum
For Each myRecord In Range("A1:A" & _
    Range("A" & Rows.count).End(xlUp).Row)
    With myRecord
        For Each myField In Range(.Cells(1), Cells(.Row, 12))
            sOut = sOut & "^" & Trim(myField.text)
        Next myField
        sOut = Mid(sOut, 2) ' this take off the first delimiter
        Print #nFileNum, sOut
        sOut = Empty
    End With
Next myRecord
'Print #nFileNum, sAdd
Close #nFileNum
'close this sheet
ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
'Workbooks.Add

End Sub
Sub AFLPDFandUpload()
Dim wb              As Workbook
'Dim wkName        As String
Dim FileNum         As Long
Dim holder          As String
Dim track           As String
Dim myDate As String
Dim p               As Variant
    
'p = ActivePrinter
Application.ActivePrinter = "Microsoft Print to PDF on Ne01:"

'Application.Wait (Now + TimeValue("00:00:03"))
holder = ActiveWorkbook.name
holder = Replace(holder, ".xls", "")
myDate = Format(Date, "yyyy")
'            track = Mid(holder, InStr(1, holder, " ") + 1, Len(holder))
ActiveWindow.SelectedSheets.PrintOut copies:=1, ActivePrinter:= _
    "Microsoft Print to PDF on Ne01:", PrintToFile:=True, collate:=True, _
    PrToFileName:="C:\FILES\AFL\Results\" & myDate & "\" & holder & ".pdf"

'ActivePrinter = p
'
'update the server
Shell "C:\FILES\AFL\FTPresults.bat"

End Sub

Attribute VB_Name = "Auction"
Option Explicit
Dim RunWhen As Double 'the time as a decimal of the next run
Dim laTimeTmp   As Date 'the time as a date of the next scheduled run
'Public Const cRunIntervalSeconds = 60 ' in seconds 180 = 3 minutes
Public Const RunWhat = "EbayBidder"  ' the name of the procedure to run
Private Declare Function LockWorkStation Lib "user32.dll" () As Long

Sub LloydsUpdateSheet()
'Designed to update Loyds Auction data
Dim myX         As Range
Dim myselection As Range
Dim laSelect    As Range
Dim lastRow     As Long
Dim laDesc      As String
Dim AuctionID   As String
Dim LloydsID    As String
Dim laTmp       As String
Dim laTmp2      As String
Dim lotNo       As String
'Dim laZone      As String
Dim scr         As String

Dim laDate      As Date
Dim laTime      As Date
Dim tmpDay      As Long
Dim tmpHour     As Long
Dim tmpMin      As Long
'Dim latimeleft  As Long
Dim laPrice     As Double
'Dim laShipping  As Double
Dim laBidBuffer As Double
Dim FoundDays   As Boolean
Dim Ended       As Boolean

Dim selenium As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("phantomjs.exe")

Application.DisplayStatusBar = True
Application.StatusBar = String(3, ChrW(9609)) & "  Updating Lloyds Data Sheet"

lastRow = Range("A65536").End(xlUp).Row
Set myselection = Range("A6:A" & lastRow)
AuctionID = Range("E1").value
FoundDays = False
Ended = False

'open up Lloyds
'selenium.Start "chrome", "http://www.lloydsonline.com.au/"
selenium.Start "PhantomJS", "http://www.lloydsonline.com.au/"

'might have to log in here

For Each myX In myselection
    myX.NumberFormat = "@"
    LloydsID = myX.value
    With Worksheets(1)
        .Hyperlinks.Add myX, _
        Address:="http://www.lloydsonline.com.au/LotDetails.aspx?smode=0&aid=" & AuctionID & "&lid=" & LloydsID, _
        TextToDisplay:=myX.value
    End With
    selenium.Open "/LotDetails.aspx?smode=0&aid=" & AuctionID & "&lid=" & LloydsID
    If myX.Offset(0, 1) = "" Then
'Get the source of the page for later checking if elements exist
       ' scr = selenium.getHtmlSource
        
        laTmp = selenium.findElement(By.CssSelector(".nav_row > div:nth-child(2)")).getAttribute("innerText")
        laTmp = Replace(laTmp, "Lot:", "")
        laTmp = Trim(laTmp)
        'MsgBox laTmp
        lotNo = laTmp
        laTmp = ""
        myX.Offset(0, 1) = lotNo                                                                               'Lot Number
    End If
    If myX.Offset(0, 2) = "" Then
        laTmp = selenium.findElement(By.CssSelector("div.lotd_pair:nth-child(1) > div:nth-child(2)")).getAttribute("innerText")
        laTmp = Trim(laTmp)
        laTmp = Left(laTmp, 100)
        If InStr(1, laTmp, "(Whilst high volumes") > 0 Then
            laTmp = Left(laTmp, InStr(1, laTmp, "(Whilst high volumes") - 1)
        End If
        laTmp = Replace(laTmp, Chr(10), "")
        laTmp = Replace(laTmp, Chr(13), "")
        laTmp = Trim(laTmp)
        'MsgBox laTmp
        laDesc = laTmp
        laTmp = ""
        myX.Offset(0, 2) = laDesc                                                                               'Item description
    End If
    'End If
    laTmp = selenium.findElement(By.CssSelector("#MainContentPlaceHolder_MainContentPlaceHolder_MainContentPlaceHolder_biddingCentre_timeRemaining_lblTimeRemaining")).getAttribute("innerText")
    laTmp = Trim(laTmp)
    If InStr(1, LCase(laTmp), "closed") > 0 Then
        Ended = True
        myX.Offset(0, 8) = "ENDED"
    End If
    If Ended = False Then
        myX.Offset(0, 8) = "Active"
        If InStr(1, laTmp, "d") > 0 Then
            laTmp2 = Left(laTmp, InStr(1, laTmp, "d") - 1)
            laTmp2 = Trim(laTmp2)
            If IsNumeric(laTmp2) Then
                tmpDay = laTmp2
            End If
            laTmp2 = ""
            FoundDays = True
        End If
        If InStr(1, laTmp, "h") > 0 Then
            laTmp2 = Mid(laTmp, InStr(1, laTmp, "d") + 1, Len(laTmp))
            laTmp2 = Left(laTmp2, InStr(1, laTmp2, "h") - 1)
            laTmp2 = Trim(laTmp2)
            If IsNumeric(laTmp2) Then
                tmpHour = laTmp2
            End If
            laTmp2 = ""
            FoundDays = True
        End If
        If InStr(1, laTmp, "m") > 0 Then
            laTmp2 = Mid(laTmp, InStr(1, laTmp, "h") + 1, Len(laTmp))
            laTmp2 = Left(laTmp2, InStr(1, laTmp2, "m") - 1)
            laTmp2 = Trim(laTmp2)
            If IsNumeric(laTmp2) Then
                tmpMin = laTmp2
            End If
            laTmp2 = ""
        End If
        If FoundDays = False Then
            laTime = laTmp
        End If
        laTmp = ""
        If FoundDays = False Then
            laDate = (Now + TimeSerial(Hour(laTime), Minute(laTime), Second(laTime)))
        Else
            laDate = (Now + TimeSerial(tmpHour + (tmpDay * 24), tmpMin, 0))
        End If
        
        myX.Offset(0, 4) = laDate                                                                               ' Date and Time of Auction
        
        myX.Offset(0, 3).value = "=IF(AND(E" & myX.Row & "<>"""", E" & myX.Row & ">Now()),E" & myX.Row & " - Now(),"""")"       'Time Left to auction
        
        laTmp = selenium.findElement(By.CssSelector("#MainContentPlaceHolder_MainContentPlaceHolder_MainContentPlaceHolder_biddingCentre_currentBidStatus_lblCurrentBid")).getAttribute("innerText")
        laTmp = Trim(laTmp)
        'MsgBox laTmp
        laPrice = laTmp
        laTmp = ""
        myX.Offset(0, 5) = laPrice                                                                               'Current bid
'work out the buyers premium
        laTmp = selenium.findElement(By.CssSelector("div.buyers_prem:nth-child(2)")).getAttribute("innerText")
        laTmp = Left(laTmp, InStr(1, laTmp, "%") - 1)
        laTmp = Trim(laTmp)
        'laTmp = laTmp / 100
        'MsgBox laTmp
        myX.Offset(0, 6) = laPrice * (laTmp / 100)                                                                'Buyers Premium
        laTmp = ""
        'myX.Offset(0, 7).Value = "=F" & myX.row & " + " & "G" & myX.row                                           'total price without shipping
        myX.Offset(0, 7).value = "=J" & myX.Row & " + " & "(J" & myX.Row & "*0.125)"
        ' =J6 + (J6*0.125)
        If laPrice > 0 And myX.Offset(0, 9) = "" Then 'guessed a few of these
            Select Case laPrice
                Case Is < 6
                    laBidBuffer = 1
                Case Is < 21
                    laBidBuffer = 2
                Case Is < 51
                    laBidBuffer = 5
                Case Is < 201
                    laBidBuffer = 10
                Case Is < 501
                    laBidBuffer = 20
                Case Is < 1001
                    laBidBuffer = 50
                Case Is < 2001
                    laBidBuffer = 100
                Case Is < 5001
                    laBidBuffer = 200
                Case Is < 10001
                    laBidBuffer = 300
                Case Else
                    laBidBuffer = 500
            End Select
            myX.Offset(0, 9) = laPrice + laBidBuffer
        End If
'Fair bid
    myX.Offset(0, 14).value = "=(N" & myX.Row & "*O5)-((N" & myX.Row & "*O5)*0.125)-J1"
'Add conditional formatting
    myX.Offset(0, 5).FormatConditions.Delete
    myX.Offset(0, 5).FormatConditions.Add Type:=xlCellValue, Operator:=xlLessEqual, Formula1:="=$J$" & myX.Row
        myX.Offset(0, 5).FormatConditions(1).Interior.ColorIndex = 4 'green

    End If
    LloydsID = ""
    laDesc = ""
    lotNo = ""
    laDate = Empty
    laTime = Empty
    'laDays = 0
    laPrice = 0
    laBidBuffer = 0
    tmpDay = 0
    tmpHour = 0
    tmpMin = 0
    FoundDays = False
    Ended = False

AllOver:
Next myX

selenium.stop

'sort the sheet
lastRow = Range("A65536").End(xlUp).Row
Set laSelect = Range(Cells(6, 1), Cells(lastRow, 16))
    laSelect.Select
    Selection.Sort key1:=Range("E6"), Order1:=xlAscending, _
    Header:=xlNo, OrderCustom:=1, MatchCase:=False, _
    Orientation:=xlTopToBottom
Range("C4").Select

Application.Calculation = xlCalculationAutomatic
ActiveWorkbook.Save

Application.StatusBar = String(3, ChrW(9609)) & "  Updating finished and Sheet saved"
Application.Wait (Now + TimeValue("00:00:03")) 'wait for 5 second
Application.StatusBar = False
    

End Sub

Public Sub LloydsLog(LogMessage As String)
Dim LogFileName As String
Dim FileNum As Integer
Dim ThisTimestamp As String

ThisTimestamp = Format(Date, "dd/mm/yyyy") & "," & Format(Time, "hh:mm") & ","
LogFileName = "C:\FILES\Auction Bidder\Logs\BidProcess_" & Format(Date, "yyyy-mm-dd") & ".csv"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, ThisTimestamp & LogMessage ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
Private Sub PowerNormal()
Dim PowerFile   As String
Dim Cmd         As String
'PowerFile = "C:\FILES\Horses\Power - Normal.lnk"
PowerFile = "C:\FILES\Horses\Power - New.lnk"
Cmd = "RunDLL32.EXE shell32.dll,ShellExec_RunDLL "
Shell (Cmd & PowerFile)
End Sub
Private Sub PowerRacing()
Dim PowerFile   As String
Dim Cmd         As String
PowerFile = "C:\FILES\Horses\power_racing.lnk"
Cmd = "RunDLL32.EXE shell32.dll,ShellExec_RunDLL "
Shell (Cmd & PowerFile)
End Sub
Private Sub LockPC()
LockWorkStation
End Sub
Private Function StopMyProcess(strTerminateThis As String)
'set to terminate firefox when there is an error
On Error Resume Next

Dim objWMIcimv2 As Object
Dim objProcess As Object
Dim objList As Object
Dim intError As Integer
     
Set objWMIcimv2 = GetObject("winmgmts:" _
    & "{impersonationLevel=impersonate}!\\.\root\cimv2")
     
Set objList = objWMIcimv2.ExecQuery _
    ("select * from win32_process where name='" & strTerminateThis & "'")

If objList.count = 0 Then
    'The process isn't running
    'MsgBox "The process isn't running."
    LloydsLog "The process " & strTerminateThis & " isn't running."
Else
    'The process is running
    For Each objProcess In objList
        'Terminate the process and all of its threads.
        intError = objProcess.Terminate
        If intError <> 0 Then
            'Return value is 0 for success. Any other number is an error.
            'MsgBox "There was an error closing this process."
            LloydsLog "There was an error closing " & strTerminateThis & "."
        Else
            'MsgBox "Process terminated ok."
            LloydsLog strTerminateThis & " terminated ok."
        End If
    Next
    Set objProcess = Nothing
End If

Set objWMIcimv2 = Nothing
Set objList = Nothing

End Function


Attribute VB_Name = "Dogs"
Option Explicit
Dim myTrack As String ' obtained in sub getRaceMeetingResult
Dim theDate As Date '   obtained in sub getRaceMeetingResult
Dim txDate As String
Dim currURL As String 'string of the current meeting for this date
Dim currURL2 As String 'string of the current race for the above meeting
Dim cntMeetings As Long ' a count of the meetings for this date
Dim cntRaces As Long 'a count of the races at this meeting
Dim theDist As String 'the race distance - in sub PrepNewCols
Dim theCond As String 'the race condition - in sub PrepNewCols
Dim theRaceNo As String 'the race number - in TidyRaceSheet
Dim abandoned As Boolean
Dim Testing As Boolean
Sub getRaceMeetingResult_bac()
' finds each meeting
    Dim urlName2 As String
    Dim oHttp2 As Object
    Dim mySite2 As String
    Dim myA As String
    Dim myB As String
    Dim myC As String 'temp holding of the date
    Dim myYear As String 'year from the URL
    Dim myMonth As String 'month from the URL
    Dim myDay As String 'day from the URL
    Dim b As Long 'the day from the URL
    Dim a As Long 'position of start of track name
    Dim x As Long
    Dim y As Long 'lower date
    Dim w As Long 'upper date
    Dim z As String 'date
    Dim m As String
    Dim K As String
    Dim d As String 'whole date
    
    Dim s(1 To 8) As String
    Dim n As Long
'turn the screen calculation off
'    Application.ScreenUpdating = False
'    Application.Calculation = xlCalculationManual
    
    s(1) = "NSW"
    s(2) = "QLD"
    s(3) = "VIC"
    s(4) = "SA"
    s(5) = "ACT"
    s(6) = "WA"
    s(7) = "TAS"
    s(8) = "NT"
    
On Error Resume Next
'
' Set the dates required
m = "2015" 'year
K = "Jan" '3 character month Nov

' between the following dates

y = 25 'lower date as a number
w = 26 'upper date

For n = LBound(s) To UBound(s)

'TESTING######################
' http://www.risa.com.au/FreeFields/Calendar_Results.aspx?State=NSW
'OLD BIG POND SITE: urlName2 = "http://www.racingnetwork.com.au/results/tabid/103/date/2012-03-10/default.aspx"
'
'
'##########################
    urlName2 = "http://www.risa.com.au/FreeFields/Calendar_Results.aspx?State=" & s(n)
' get the date from the URL
'have't done this yet
' Get the URL for each meeting

    Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
    ' Set oHttp2 = CreateObject("Microsoft.XMLHTTP")
    oHttp2.Open "GET", urlName2, False
    oHttp2.send
    mySite2 = oHttp2.responseText 'a contains source code of website
   ' myA = Mid
   '<td><a href='/FreeFields/Results.aspx[^>]*
    myA = RegExpFind2(mySite2, "<td><a href='/FreeFields/Results.aspx[^>]*", 1, False) ' URL up to ,
    For x = 1 To cntMeetings
        myA = RegExpFind2(mySite2, "<td><a href='/FreeFields/Results.aspx[^>]*", x, False) ' URL up to ,
        myA = Application.WorksheetFunction.Clean(myA)
        myA = Application.WorksheetFunction.Trim(myA)
'        If InStr(1, myA, "abandoned") = 0 Then
' get the track name
        a = InStr(myA, s(n)) + (Len(s(n)) + 1)
        myB = Mid(myA, a, Len(myA) - 1)
        myB = Replace(myB, ",", " ")
        myB = Replace(myB, "'", "")
        myTrack = myB
'MsgBox ("MyTrack is " & myTrack)
' get the date
        myC = Mid(myA, 43, 9)
        myYear = Left(myC, 4)
        myMonth = Mid(myC, 5, 3)
        myDay = Right(myC, 2)
        theDate = myDay & "-" & myMonth & "-" & myYear
        txDate = Format(theDate, "dd/mm/yyyy")
        If Left(myDay, 1) = "0" Then
            myDay = Replace(myDay, "0", "")
        End If
        b = myDay
'MsgBox ("MyYear is " & myYear & "; MyMonth is " & myMonth & "; MyDay is " & b)
        If myB <> "" And myYear = m And myMonth = K And b >= y And b <= w Then
            myA = Replace(myA, "<td><a href='", "", 1)
            myA = Left(myA, Len(myA) - 1)
            myA = Application.WorksheetFunction.Clean(myA)
            myA = Application.WorksheetFunction.Trim(myA)
            ' http://www.risa.com.au/FreeFields/Results.aspx?Key=2012Mar24,NSW,Ardlethan,Picnic
            currURL = "http://www.risa.com.au" & myA
           ' MsgBox (currURL)
            Call GetHorseResults
        End If
    Next x
 Next n

 ' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
MsgBox ("Da Da   done")
End Sub
Sub working()
    Dim urlName2 As String
    Dim oHttp2 As Object
    Dim mySite2 As String
    Dim myA As String
    Dim myB As String
    Dim myC As String 'temp holding of the date
    Dim myYear As String 'year from the URL
    Dim myMonth As String 'month from the URL
    Dim myDay As String 'day from the URL
    Dim b As Long 'the day from the URL
    Dim a As Long 'position of start of track name
    Dim x As Long
    Dim y As Long 'lower date
    Dim w As Long 'upper date
    Dim z As String 'date
    Dim m As String
    Dim K As String
    Dim d As String 'whole date
    
    Dim s(1 To 8) As String
    Dim n As Long
    urlName2 = "http://www.risa.com.au/FreeFields/Calendar_Results.aspx?State=" & s(n)
' get the date from the URL
'have't done this yet
' Get the URL for each meeting

    Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
    ' Set oHttp2 = CreateObject("Microsoft.XMLHTTP")
    oHttp2.Open "GET", urlName2, False
    oHttp2.send
    mySite2 = oHttp2.responseText 'a contains source code of website

End Sub
Sub getDogMeets()
    Dim objWeb          As QueryTable
    Dim urlName         As String
    Dim urlName2        As String
    Dim oHttp           As Object
    Dim mySite          As String
    Dim myTrack         As String
    Dim myDate          As String

     'Sets the url to run the query and the destination in the excel file
     'You can change both to suit your needs
    'urlName = InputBox(Prompt:="Enter URL", Title:="URL")
    urlName = "http://www.thedogs.com.au/Racing/MeetResults.aspx?meetId=227331"
    'urlName = "http://www.thedogs.com.au/Racing/Results.aspx?TrakId=71"
    
'get the track and date
    Set oHttp = CreateObject("MSXML2.XMLHTTP")
    oHttp.Open "GET", urlName, False
    oHttp.send
    mySite = oHttp.responseText 'a contains source code of website
    myTrack = Mid(mySite, InStr(1, mySite, "MeetPanelHeaderTrack") + 22, Len(mySite))
    myTrack = Left(myTrack, InStr(1, myTrack, "</") - 1)
    myDate = Mid(mySite, InStr(1, mySite, "MeetPanelHeaderDate"), Len(mySite))
    myDate = Mid(myDate, InStr(1, myDate, ">") + 1, Len(mySite))
    myDate = Left(myDate, InStr(1, myDate, "</") - 1)
    
    urlName2 = "URL;" & urlName
    
    
    Set objWeb = ActiveSheet.QueryTables.Add(Connection:=urlName2, Destination:=Range("A1"))
'    Connection:="URL;http://horseracing.bigpondsport.com/todaysracing/fullracecard/tabid/73/meetid/4848/default.aspx", _
'    Destination:=Range("A1"))
    
    With objWeb
        .WebSelectionType = xlAllTables
        .Refresh BackgroundQuery:=False
        .SaveData = True
    End With
    Set objWeb = Nothing
    
End Sub
Function RegExpFind2(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind2 = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind2 = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind2 = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind2 = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind2 = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind2 = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function
Attribute VB_Name = "Ebay"
Option Explicit
Dim RunWhen As Double 'the time as a decimal of the next run
Dim ebTimeTmp   As Date 'the time as a date of the next scheduled run
'Public Const cRunIntervalSeconds = 60 ' in seconds 180 = 3 minutes
Public Const RunWhat = "EbayBidder"  ' the name of the procedure to run
Private Declare Function LockWorkStation Lib "user32.dll" () As Long

Private Sub StartEBayTimer()
'display a status bar to indicate macro is running
    Application.DisplayStatusBar = True
    Application.StatusBar = String(3, ChrW(9609)) & "  EBAY Auto bidder is scheduled to run at " & ebTimeTmp

    'RunWhen = Now + TimeSerial(0, 0, cRunIntervalSeconds)
    Application.OnTime EarliestTime:=RunWhen, Procedure:=RunWhat, Schedule:=True
End Sub
Private Sub StopEbayTimer()
    On Error Resume Next
    Application.OnTime EarliestTime:=RunWhen, Procedure:=RunWhat, Schedule:=False
    Application.StatusBar = False
' change the PC power back to normal (sleep in 1 hr)
    PowerNormal
End Sub
Sub StopEBProcessing()
    StopEbayTimer
    Application.AutoRecover.Enabled = True
    Application.DisplayAlerts = True
    End 'this will stop all processes
End Sub
Sub StartEBAYProcess()
'set a new start for processing so that the PC power only gets changed at startup
'change the PC Power setting to never sleep
    PowerRacing
    Application.AutoRecover.Enabled = False
    Application.DisplayAlerts = False
    StopMyProcess ("thunderbird.exe")
    StopMyProcess ("firefox.exe")
    StopMyProcess ("iexplore.exe")
    StopMyProcess ("phantomjs.exe")
    StopMyProcess ("chromedriver.exe")
    

    
'start the processing
    EbayBidder
End Sub
Sub EbayUpdateSheet()
Dim myX         As Range
Dim myselection As Range
Dim ebSelect    As Range
Dim lastRow     As Long
Dim ebTitle     As String
Dim ebayID      As String
Dim ebTmp       As String
Dim ebTmp2       As String
Dim ebZone      As String
Dim scr         As String

Dim ebDate      As Date
Dim ebTime      As Date
Dim ebPrice     As Double
Dim ebShipping  As Double
Dim ebBidBuffer As Double

Dim selenium As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("phantomjs.exe")

    Application.DisplayStatusBar = True
    Application.StatusBar = String(3, ChrW(9609)) & "  Updating EBAY Sheet"

lastRow = Range("A65536").End(xlUp).Row
Set myselection = Range("A10:A" & lastRow)

'open up ebay
'selenium.Start "chrome", "http://www.ebay.com.au/"
selenium.Start "PhantomJS", "http://www.ebay.com.au/"
'selenium.setImplicitWait 5000

For Each myX In myselection
    myX.NumberFormat = "@"
    'If myX.Offset(0, 3) < Now And myX.Offset(0, 3) <> "" Then GoTo AllOver:
    ebayID = myX.value
    With Worksheets(1)
        .Hyperlinks.Add myX, _
        Address:="http://www.ebay.com.au/itm/" & ebayID, _
        TextToDisplay:=myX.value
    End With
    'ActiveSheet.Hyperlinks.Add myX, "http://www.ebay.com.au/itm/" & ebayID
    'http://www.ebay.com.au/itm/
    selenium.Open "/itm/" & ebayID
    'If myX.Offset(0, 1) = "" Then
        scr = selenium.getHtmlSource
        ebTmp = selenium.findElement(By.CssSelector("#itemTitle")).getAttribute("innerHTML")
        ebTmp = Mid(ebTmp, InStr(1, ebTmp, "</span>") + 7, Len(ebTmp))
        ebTmp = Trim(ebTmp)
        ebTitle = ebTmp
        ebTmp = ""
        myX.Offset(0, 1) = ebTitle                                                                              'Item Title
    'End If
    If InStr(scr, "vi-tm-left") <> 0 Then
        ebTmp = selenium.findElement(By.CssSelector(".vi-tm-left > span:nth-child(1)")).getAttribute("innerHTML")
        ebTmp = Replace(ebTmp, "(", "")
        ebTmp = Trim(ebTmp)

        ebDate = Format(ebTmp, "dd-mm-yy")                                                                          ' Date
        ebTmp = ""
        ebTmp = selenium.findElement(By.CssSelector(".endedDate")).getAttribute("innerHTML")
        ebTmp = Replace(ebTmp, ")", "")
        ebTmp = Trim(ebTmp)
        ebZone = Mid(ebTmp, InStr(1, ebTmp, " ") + 1, Len(ebTmp))
        ebZone = Trim(ebZone)
        ebTmp = Replace(ebTmp, ebZone, "")                                                                          'Time Zone
        ebTmp = Trim(ebTmp)

        ebTime = Format(ebTmp, "hh:mm:ss")                                                                          'Time
        ebTmp = ""
    ElseIf InStr(scr, "bb_tlft") <> 0 Then
    'its over
        ebTmp = selenium.findElement(By.CssSelector("#bb_tlft")).getAttribute("innerHTML")
        ebTmp = Trim(ebTmp)
        ebTmp = Replace(ebTmp, Chr(10), "")
        ebTmp2 = Left(ebTmp, InStr(1, ebTmp, "<") - 1)

        ebDate = Format(ebTmp2, "dd-mm-yy")                                                                          ' Date
        ebTmp2 = ""
        ebTmp = Mid(ebTmp, InStr(1, ebTmp, "<span>") + 6, Len(ebTmp))
        ebTmp = Left(ebTmp, InStr(1, ebTmp, "<") - 1)
        ebTmp = Trim(ebTmp)
        ebZone = Mid(ebTmp, InStr(1, ebTmp, " ") + 1, Len(ebTmp))
        ebZone = Trim(ebZone)
        ebTmp = Replace(ebTmp, ebZone, "")                                                                          'Time Zone
        ebTmp = Trim(ebTmp)

        ebTime = Format(ebTmp, "hh:mm:ss")                                                                          'Time
        ebTmp = ""

    End If
    
    Select Case ebZone
        Case "AEST"
            'UTC+10:00: Australian Eastern Standard Time (AEST)
            'do nothing
        Case "AEDST"
            'UTC+11:00: Australian Eastern Standard Time (AEST)
            ebTime = ebTime - TimeSerial(1, 0, 0)
        Case "ACST"
            'UTC+9:30: Australian Central Standard Time (ACST)
            ebTime = ebTime + TimeSerial(0, 30, 0)
        Case "ACDT"
            'UTC+10:30: Australian Central Daylight Time (ACDT)
            ebTime = ebTime - TimeSerial(0, 30, 0)
        Case "ACWST"
            'UTC+8:45: Australian Central Western Standard Time (ACWST)
            ebTime = ebTime + TimeSerial(1, 15, 0)
        Case "AWST"
            'UTC+8:00: Australian Western Standard Time (AWST)
            ebTime = ebTime + TimeSerial(2, 0, 0)
        Case "LHST"
            'UTC+10:30: Lord Howe Standard Time (LHST)
            ebTime = ebTime - TimeSerial(0, 30, 0)
        Case "LHDT"
            'UTC+11:00: Lord Howe Daylight Time (LHDT)
            ebTime = ebTime - TimeSerial(1, 0, 0)
    End Select
    myX.Offset(0, 3) = ebDate & " " & ebTime                                                                    'Ending date - Time in AEST
    If InStr(scr, "prcIsum_bidPrice") <> 0 Then
        ebTmp = selenium.findElement(By.CssSelector("#prcIsum_bidPrice")).getAttribute("innerHTML")
    ElseIf InStr(scr, "vi-VR-cvipPrice") <> 0 Then
        ebTmp = selenium.findElement(By.CssSelector(".vi-VR-cvipPrice")).getAttribute("innerHTML")
    End If
    If Len(ebTmp) <> 0 Then
        ebTmp = Replace(ebTmp, "AU $", "")
        ebTmp = Trim(ebTmp)
        ebPrice = ebTmp                                                                                             'Current bid
        ebTmp = ""
        myX.Offset(0, 4) = ebPrice
    Else
        myX.Offset(0, 4) = ""
    End If
    If ebPrice > 0 And myX.Offset(0, 6) = "" Then
        Select Case ebPrice
            Case Is < 1
                ebBidBuffer = 0.05
            Case Is < 5
                ebBidBuffer = 0.25
            Case Is < 25
                ebBidBuffer = 0.5
            Case Is < 100
                ebBidBuffer = 1
            Case Is < 250
                ebBidBuffer = 2.5
            Case Is < 500
                ebBidBuffer = 5
            Case Is < 1000
                ebBidBuffer = 10
            Case Is < 2500
                ebBidBuffer = 25
            Case Is < 5000
                ebBidBuffer = 50
            Case Else
                ebBidBuffer = 100
        End Select
        myX.Offset(0, 6) = ebPrice + ebBidBuffer
    End If
    
    If InStr(scr, "fshippingCost") <> 0 Then
        ebTmp = selenium.findElement(By.CssSelector("#fshippingCost")).getAttribute("innerHTML")
        ebTmp = Replace(ebTmp, Chr(10), "")
        If InStr(LCase(ebTmp), "free") > 0 Then
            ebShipping = 0
        Else
            ebTmp = Mid(ebTmp, InStr(1, ebTmp, "AU $") + 4, Len(ebTmp))
            ebTmp = Left(ebTmp, InStr(1, ebTmp, "</span>") - 1)
            ebTmp = Trim(ebTmp)
            ebShipping = ebTmp                                                                                             'Shipping cost
        End If
        ebTmp = ""
        myX.Offset(0, 5) = ebShipping
    Else
        myX.Offset(0, 5) = ""
    End If
'Number of bids
    If InStr(scr, "qty-test") <> 0 Then
        ebTmp = selenium.findElement(By.CssSelector("#qty-test")).getAttribute("innerHTML")
    ElseIf InStr(scr, "vi-VR-bid-lnk") <> 0 Then
        ebTmp = selenium.findElement(By.CssSelector("#vi-VR-bid-lnk > span:nth-child(1)")).getAttribute("innerHTML")
    Else
        ebTmp = ""
    End If
    myX.Offset(0, 7) = ebTmp
    ebTmp = ""
' put the count down timer cells in
    'myX.Offset(0, 2).Value = "=IF(AND(D11<>"", D11>NOW()),D11-NOW(),"")"
    myX.Offset(0, 2).value = "=IF(AND(D" & myX.Row & "<>"""", D" & myX.Row & ">Now()),D" & myX.Row & " - Now(),"""")"
    myX.Offset(0, 8).value = "=C" & myX.Row
    If InStr(1, scr, "w1-4-_msg") > 0 Then
        ebTmp = selenium.findElement(By.CssSelector("#w1-4-_msg")).getAttribute("innerHTML")
        ebTmp = Trim(ebTmp)
        If ebTmp <> "" Then
            If myX.Offset(0, 9) <> "" Then
                myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
            Else
                myX.Offset(0, 9) = ebTmp
            End If
            ebTmp = ""
        End If
    End If
    If InStr(1, scr, "w1-3-_msg") > 0 Then
        ebTmp = selenium.findElement(By.CssSelector("#w1-3-_msg")).getAttribute("innerHTML")
        ebTmp = Trim(ebTmp)
        If ebTmp <> "" Then
            If myX.Offset(0, 9) <> "" Then
                myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
            Else
                myX.Offset(0, 9) = ebTmp
            End If
            ebTmp = ""
        End If
    End If
    ebayID = ""
    ebTitle = ""
    ebDate = Empty
    ebTime = Empty
    ebPrice = 0
AllOver:
Next myX

selenium.stop

'sort the sheet
lastRow = Range("A65536").End(xlUp).Row
Set ebSelect = Range(Cells(10, 1), Cells(lastRow, 10))
    ebSelect.Select
    Selection.Sort key1:=Range("D10"), Order1:=xlAscending, _
    Header:=xlNo, OrderCustom:=1, MatchCase:=False, _
    Orientation:=xlTopToBottom
Range("A10").Select

Application.Calculation = xlCalculationAutomatic
ActiveWorkbook.Save

Application.StatusBar = String(3, ChrW(9609)) & "  Updating finished and Sheet saved"
Application.Wait (Now + TimeValue("00:00:03")) 'wait for 5 second
Application.StatusBar = False
    
'    Dim AckTime As Integer
'    Dim InfoBox As Object
'    Set InfoBox = CreateObject("WScript.Shell")
    'Set the message box to close after 5 seconds
'    AckTime = 5
'    Select Case InfoBox.Popup("Updating finished and Sheet saved.", _
        AckTime, "Status", 0)
'        Case 1, -1
'            Exit Sub
'    End Select

End Sub
Sub EbayBidder()
Dim myX         As Range
Dim myselection As Range
Dim lastRow     As Long
Dim ebayID      As String
Dim ebTmp       As String
Dim ebCountDown  As Date
Dim ebDateTime  As Date
Dim ebNextCountDown As Date
Dim ebDays      As Integer 'days to next bid

Dim ebPrice     As Double
Dim ebMaxBid    As Double
Dim ebBidBuffer As Double
Dim ebBidLeadTime   As Long 'lead time for bidding
Dim ebLoginLeadTime   As Long 'lead time for logging in
Dim ebTmpTime       As Date
Dim scr         As String

Dim RevScr As String
Dim b As Long
Dim RevBid As String
Dim ebTesting As Boolean
Dim NextBidNow As Boolean

Dim x As String

Dim selenium As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
'selenium.Timeouts.ImplicitWait = 5000
'selenium.setImplicitWait 5000
'On Error Resume Next
'ebTesting = True
Dim wb          As Workbook
Set wb = ActiveWorkbook

    Application.DisplayStatusBar = True
    Application.StatusBar = String(3, ChrW(9609)) & "  EBAY Auto Bidder has started !!!"

lastRow = Range("A65536").End(xlUp).Row
Set myselection = Range("A10:A" & lastRow)
ebBidLeadTime = Range("D4").value
ebLoginLeadTime = Range("D3").value
'############TESTING - True will NOT place bid
ebTesting = Range("D7").value
NextBidNow = False
selenium.Wait (1000) 'wait for a second
EbayLog "0 Auto bidder has started at " & Now

For Each myX In myselection
    ebDateTime = myX.Offset(0, 3)
    ebayID = myX.value
    If ebDateTime > Now Then 'this one is NOT finished
        ebMaxBid = myX.Offset(0, 6)
        'Range("D13").Calculate
        myX.Offset(0, 2).Calculate
        ebCountDown = myX.Offset(0, 2)
'get the time of the first run
       ' RunWhen = (Now - TimeSerial(0, 0, ebLoginLeadTime)) + TimeSerial(Hour(ebDateTime), Minute(ebDateTime), Second(ebDateTime))
    'ebTmpTime = Now + TimeSerial(4, 0, ebLoginLeadTime)
        If ebDateTime <= Now + TimeSerial(0, 0, ebLoginLeadTime) And ebDateTime > Now _
            And myX.Offset(0, 9).value = "" Then
            If NextBidNow = False Then
        'open up ebay
                selenium.Start "chrome", "http://www.ebay.com.au/"
                'selenium.Start "PhantomJS", "http://www.ebay.com.au/" 'doesn't seem to want to let you log in
                AppActivate ThisWorkbook.Application 'wb.Activate
        'selenium.setImplicitWait 5000
                selenium.Open "/"
                selenium.clickAndWait "link=Sign in"
                selenium.Type "id=userid", "interbal"
                selenium.Type "id=pass", "2015retire"
                x = "sgnBt"
                selenium.clickAndWait "id=" & x
                'selenium.clickAndWait "id=sgnBt" 'sgnBt
                selenium.Open "/itm/" & ebayID
                EbayLog "1 Auto bidder has logged in at " & Now
                Application.StatusBar = String(3, ChrW(9609)) & "  EBAY Auto Bidder has LOGGED INTO EBAY"
            Else
                EbayLog "1.5 Auto bidder has been left logged in at " & Now
                Application.StatusBar = String(3, ChrW(9609)) & "  EBAY Auto Bidder has already LOGGED INTO EBAY"
            End If
        'ebTmpTime = Now + TimeSerial(0, 0, ebBidLeadTime)
            If ebDateTime < Now Then 'logging in took too long
                Application.StatusBar = String(3, ChrW(9609)) & "  EBAY closing time has passed - EXITING"
                EbayLog "2 Logging in took too long at " & Now
                scr = selenium.getHtmlSource
                If InStr(1, scr, "w1-4-_msg") > 0 Then
                    ebTmp = selenium.findElement(By.CssSelector("#w1-4-_msg")).getAttribute("innerHTML")
                    ebTmp = Trim(ebTmp)
                    If ebTmp <> "" Then
                        myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
                        ebTmp = ""
                    End If
                End If
                If InStr(1, scr, "w1-3-_msg") > 0 Then
                    ebTmp = selenium.findElement(By.CssSelector("#w1-3-_msg")).getAttribute("innerHTML")
                    ebTmp = Trim(ebTmp)
                    If ebTmp <> "" Then
                        myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
                        ebTmp = ""
                    End If
                End If
                selenium.stop
                Exit For
            End If
            
            ebTmp = selenium.findElement(By.CssSelector("#prcIsum_bidPrice")).getAttribute("innerHTML")
            ebTmp = Replace(ebTmp, "AU $", "")
            ebTmp = Trim(ebTmp)
            ebPrice = ebTmp                                                                                             'Current bid
            myX.Offset(0, 4) = ebPrice
            ebTmp = ""
            Do While ebDateTime > Now ' + TimeSerial(0, 0, ebBidLeadTime)
                Application.StatusBar = String(3, ChrW(9609)) & "  Waiting for the LEADIN time"
                DoEvents
                myX.Offset(0, 2).Calculate
                Select Case ebPrice
                    Case Is < 1
                        ebBidBuffer = 0.05
                    Case Is < 5
                        ebBidBuffer = 0.25
                    Case Is < 25
                        ebBidBuffer = 0.5
                    Case Is < 100
                        ebBidBuffer = 1
                    Case Is < 250
                        ebBidBuffer = 2.5
                    Case Is < 500
                        ebBidBuffer = 5
                    Case Is < 1000
                        ebBidBuffer = 10
                    Case Is < 2500
                        ebBidBuffer = 25
                    Case Is < 5000
                        ebBidBuffer = 50
                    Case Else
                        ebBidBuffer = 100
                End Select
            'ebTmpTime = Now + TimeSerial(0, 0, ebBidLeadTime)
                If ebDateTime <= Now + TimeSerial(0, 0, ebBidLeadTime) And myX.Offset(0, 9).value = "" Then
                    Application.StatusBar = String(3, ChrW(9609)) & "  BIDDING now"
                    EbayLog "3 Getting ready to bid " & Now
                    If ebPrice + ebBidBuffer <= ebMaxBid Then
                    'Do While selenium.findElement(By.CssSelector("#w1-30-_reviewBidSec_val")).getAttribute("innerHTML") = "" 'bid value
                        selenium.Type "id=MaxBidId", ebMaxBid
                        selenium.Wait (1000) 'wait a second
                        selenium.clickAndWait "id=bidBtn_btn"
                        'due to the review button id changing
                        RevScr = selenium.getHtmlSource
                        selenium.Wait (1000)
                        b = InStr(1, RevScr, "_reviewBidSec_btn")
                        RevBid = Mid(RevScr, b - 6, 23) 'the name of the review bid button
                        EbayLog "Found the Bid Review button as " & RevBid
                        If ebTesting = False Then
                            selenium.Wait (1000)
                            selenium.clickAndWait "id=" & RevBid
                            'w1-31-_reviewBidSec_btn
                            'w1-31-_reviewBidSec_btn
                            'w1-30-_reviewBidSec_btn
                            'w1-29-_reviewBidSec_btn
                            'w1-28-_reviewBidSec_btn
                            selenium.Wait (1000)
                        End If
                        
                        'If selenium.findElement(By.CssSelector("#w1-30-_reviewBidSec_val")).getAttribute("innerHTML") <> "" Then
                        '    Exit Do
                        'End If
                    'Loop
                        myX.Offset(0, 9) = "Bid placed " & ebTesting
                        ActiveWorkbook.Save
                        EbayLog "Bid of " & ebMaxBid & " placed on " & ebayID & " at " & Now
    'How far away is the next item
                        If myX.Offset(1, 0).Row < lastRow Then
                            myX.Offset(1, 2).Calculate
                            ebNextCountDown = myX.Offset(1, 2)
                            If ebNextCountDown <= TimeSerial(0, 0, ebLoginLeadTime) Then
                                NextBidNow = True
                                GoTo CarryOn:
                            End If
                        End If

                    End If
                    Exit Do
                End If
                DoEvents
                If ebDateTime < Now Then
                    EbayLog "4 ebtime is less than now " & Now
                    Exit Do
                End If
                selenium.Wait (1000) 'wait a second
                EbayLog "5 Looping every second waiting for bid lead time " & Now
                ' having the while here doesn't work because once it is true it leaves the loop
                ' instead of going into the
            Loop 'While ebDateTime > Now + TimeSerial(0, 0, ebBidLeadTime)
            Application.StatusBar = String(3, ChrW(9609)) & "  EBAY bidding time has passed"
            EbayLog "6 outside the Do Loop " & Now
'#### taking this out for the time being
'            scr = selenium.getHtmlSource
'            If InStr(1, scr, "w1-4-_msg") > 0 Then
'                ebTmp = selenium.findElement(By.CssSelector("#w1-4-_msg")).getAttribute("innerHTML")
'                ebTmp = Trim(ebTmp)
'                If ebTmp <> "" Then
'                    myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
'                    ebTmp = ""
'                End If
'            End If
'            If InStr(1, scr, "w1-3-_msg") > 0 Then
'                ebTmp = selenium.findElement(By.CssSelector("#w1-3-_msg")).getAttribute("innerHTML")
'                ebTmp = Trim(ebTmp)
'                If ebTmp <> "" Then
'                    myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
'                    ebTmp = ""
'                End If
'            End If
            myX.Offset(0, 4) = ebPrice
            EbayLog "6.5 Going to stop selenium " & Now
            selenium.stop
            Application.StatusBar = String(3, ChrW(9609)) & "  EBAY Auto bidder has logged out"
        ElseIf myX.Offset(0, 9).value = "" Then
            EbayLog "7 Inside the elseif " & Now
            ebDays = Int(ebDateTime - Now)
            RunWhen = (Now - TimeSerial(0, 0, ebLoginLeadTime)) + TimeSerial(Hour(ebCountDown) + (ebDays * 24), Minute(ebCountDown), Second(ebCountDown))
            ActiveWorkbook.Save
            ebTimeTmp = RunWhen
            EbayLog "Auto bidder is scheduled to run at " & ebTimeTmp & " for item " & ebayID & " closing at " & ebDateTime
            StartEBayTimer
            GoTo TimerRunning:
        End If
        ActiveWorkbook.Save
    'EbayLog "Auto bidder has run at " & Now
    Else
        'open up ebay
        selenium.Start "chrome", "http://www.ebay.com.au/"
        selenium.Open "/itm/" & ebayID

        'If myX.Offset(0, 9).Value = "" Then
        '    myX.Offset(0, 9).Value = "Auction over"
        'End If
        scr = selenium.getHtmlSource
        If InStr(1, scr, "w1-4-_msg") > 0 Then
            ebTmp = selenium.findElement(By.CssSelector("#w1-4-_msg")).getAttribute("innerHTML")
            ebTmp = Trim(ebTmp)
            If ebTmp <> "" Then
                If myX.Offset(0, 9) = "" Then
                    myX.Offset(0, 9) = ebTmp
                ElseIf InStr(1, myX.Offset(0, 9), ebTmp) = 0 Then
                    myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
                End If
            End If
            ebTmp = ""
        End If
        If InStr(1, scr, "w1-3-_msg") > 0 Then
            ebTmp = selenium.findElement(By.CssSelector("#w1-3-_msg")).getAttribute("innerHTML")
            ebTmp = Trim(ebTmp)
            If ebTmp <> "" Then
                If myX.Offset(0, 9) = "" Then
                    myX.Offset(0, 9) = ebTmp
                ElseIf InStr(1, myX.Offset(0, 9), ebTmp) = 0 Then
                    myX.Offset(0, 9) = myX.Offset(0, 9) & " | " & ebTmp
                End If
            End If
            ebTmp = ""
        End If
        selenium.stop
    'RunWhen = (Now - TimeSerial(0, 0, ebLoginLeadTime)) + TimeSerial(Hour(ebCountDown), Minute(ebCountDown), Second(ebCountDown))
    End If
    ebayID = ""
    ebDateTime = Empty
    ebPrice = 0
    ebBidBuffer = 0
    ebMaxBid = 0
    ebTmp = ""
    ebCountDown = Empty
    ebTmpTime = Empty
    scr = ""
    RevScr = ""
    b = 0
    RevBid = ""
    NextBidNow = False
CarryOn:
Application.StatusBar = String(3, ChrW(9609)) & "  Waiting for the LOGIN time"
Next myX
'Exit Sub
'StartEBayTimer
StopEBProcessing
TimerRunning:
'the timer is running so step over the stop processing button
End Sub
Sub EbayTesting()
Dim myX         As Range
Dim myselection As Range
Dim lastRow     As Long
Dim ebayID      As String
Dim ebTmp       As String
Dim ebDay      As Integer
Dim ebhour      As Integer
Dim ebMinute    As Integer
Dim ebsecond    As Integer
Dim ebCountDown  As Date
Dim ebHR        As Date
'Dim ebMIN       As Long
'Dim ebSEC       As Long
Dim ebTimeTmp As Date

Dim ebPrice     As Double
Dim ebMaxBid    As Double
Dim ebBidBuffer As Double
Dim ebBidLeadTime   As Long 'time before finishing
Dim ebLoginLeadTime As Long

Dim selenium As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

Dim wb          As Workbook
Set wb = ActiveWorkbook
'selenium.Start "PhantomJS", "http://www.ebay.com.au/"
selenium.Start "Chrome", "http://www.ebay.com.au/"
wb.Activate
'selenium.manage().Window().SetPosition (newPoint(-2000, 0))
selenium.Open "/"
'selenium.Open "/itm/322356038986"
selenium.clickAndWait "link=Sign in" 'OK
'selenium.TakeScreenshot.SaveAs (ActiveWorkbook.Path + "/screenshot.jpg")
'selenium.TakeScreenshot.SaveAs ("C:/FILES/EBAY Bidder/Logs/screenshot.jpg")
'selenium.save_screenshot ("C:\FILES\EBAY Bidder\Logs\out.png") 'C:\FILES\EBAY Bidder\Logs
'can't find it
'selenium.Type "id=userid", "interbal"
selenium.findElementByName("userid").Click


selenium.Close
                'selenium.Type "id=pass", "2015retire"
               ' selenium.clickAndWait "id=sgnBt"
'##########
'driver.clickAndWait "id=login-trigger"
'driver.clickAndWait "id=Username"
'driver.SendKeys "ctdent@smartchat.net.au"
'driver.clickAndWait "id=Password"
'driver.SendKeys "4399Ngai"
'driver.clickAndWait "id=Login"
'###############
    
    ebayID = ""
    ebCountDown = Empty
    ebPrice = 0
    ebBidBuffer = 0
    ebMaxBid = 0
'Next myX


End Sub
Public Sub EbayLog(LogMessage As String)
Dim LogFileName As String
Dim FileNum As Integer
Dim ThisTimestamp As String

ThisTimestamp = Format(Date, "dd/mm/yyyy") & "," & Format(Time, "hh:mm") & ","
LogFileName = "C:\FILES\EBAY Bidder\Logs\BidProcess_" & Format(Date, "yyyy-mm-dd") & ".csv"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, ThisTimestamp & LogMessage ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
Private Sub PowerNormal()
Dim PowerFile   As String
Dim Cmd         As String
'PowerFile = "C:\FILES\Horses\Power - Normal.lnk"
PowerFile = "C:\FILES\Horses\Power - New.lnk"
Cmd = "RunDLL32.EXE shell32.dll,ShellExec_RunDLL "
Shell (Cmd & PowerFile)
End Sub
Private Sub PowerRacing()
Dim PowerFile   As String
Dim Cmd         As String
PowerFile = "C:\FILES\Horses\power_racing.lnk"
Cmd = "RunDLL32.EXE shell32.dll,ShellExec_RunDLL "
Shell (Cmd & PowerFile)
End Sub
Private Sub LockPC()
LockWorkStation
End Sub


Attribute VB_Name = "Form1"
Attribute VB_Base = "0{9B34B08F-B423-4C90-AA6B-E76CC17595AE}{B5A86D2A-DC23-40FC-AF08-087593CB594E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
Me.Hide
End Sub

Private Sub CommandButton2_Click()
End
End Sub

Private Sub UserForm_Activate()
    Me.Top = Application.Top + 50  '< change 125 to what u want
    Me.Left = Application.Left + 50    '< change 25 to what u want

End Sub
Attribute VB_Name = "Functions"
Option Explicit
Declare Function GetCursorPos Lib "user32" _
      (lpPoint As POINTAPI) As Long
      ' Access the GetCursorPos function in user32.dll
Declare Function SetCursorPos Lib "user32" _
    (ByVal x As Long, ByVal y As Long) As Long

      ' GetCursorPos requires a variable declared as a custom data type
      ' that will hold two integers, one for x value and one for y value
Type POINTAPI
    X_Pos As Long
    Y_Pos As Long
End Type

Sub CallIt()
'for testing
Dim StringToSort As String
    
    StringToSort = "2|5,1|2,2|3,1|1"
    'StringToSort = "7,3,8,4,1"
    MsgBox StringToSort
    BubbleSrt StringToSort, True
    MsgBox StringToSort
    
End Sub
    
Public Function BubbleSrt(StringIO As String, Ascending As Boolean)
Dim ArrayIn As Variant
Dim SrtTemp As Variant
Dim i As Long
Dim j As Long
    
    ArrayIn = Split(StringIO, ",")
    
    If Ascending = True Then
        For i = LBound(ArrayIn) To UBound(ArrayIn)
             For j = i + 1 To UBound(ArrayIn)
                 If ArrayIn(i) > ArrayIn(j) Then
                     SrtTemp = ArrayIn(j)
                     ArrayIn(j) = ArrayIn(i)
                     ArrayIn(i) = SrtTemp
                 End If
             Next j
         Next i
    Else
        For i = LBound(ArrayIn) To UBound(ArrayIn)
             For j = i + 1 To UBound(ArrayIn)
                 If ArrayIn(i) < ArrayIn(j) Then
                     SrtTemp = ArrayIn(j)
                     ArrayIn(j) = ArrayIn(i)
                     ArrayIn(i) = SrtTemp
                 End If
             Next j
         Next i
    End If
    StringIO = Join(ArrayIn, ",")
End Function
Function URLExists(url As String) As Boolean
    Dim Request As Object
    'Dim ff As Integer
    Dim rc As Variant
    Dim str As String
    
    URLExists = False
    On Error GoTo EndNow
    'mySite = ""
    'Set Request = CreateObject("WinHttp.WinHttpRequest.5.1")
' this will use less data:
    Set Request = CreateObject("Msxml2.ServerXMLHTTP")
    'Set Request = CreateObject("MSXML2.XMLHTTP")
        With Request
            .Open "GET", url, False
            .send
            'str = .responseText
            rc = .statusText
        End With
    Set Request = Nothing
'
    'If InStr(1, str, "There Was An Error Initializing The Module") <> 0 Then
    '    URLExists = False
    'Else
        'mySite = str
    'End If
    If rc = "OK" Then URLExists = True
    
    Exit Function
EndNow:
End Function
Sub Get_Cursor_Pos()
' Dimension the variable that will hold the x and y cursor positions
Dim Hold As POINTAPI

' Place the cursor positions in variable Hold
GetCursorPos Hold

' Display the cursor position coordinates
MsgBox "X Position is : " & Hold.X_Pos & Chr(10) & _
         "Y Position is : " & Hold.Y_Pos
End Sub

Sub Set_Cursor_Pos()
' Routine to set cursor position

Dim x As Long
Dim y As Long

      ' Looping routine that positions the cursor
'    For x = 1 To 480 Step 20
'        SetCursorPos x, y
'        For y = 1 To 40000: Next
'    Next x

x = 1732
y = 552
SetCursorPos x, y
End Sub

Attribute VB_Name = "GoldLotto"
Option Explicit
Sub BuildFrequencies()

Dim wbA             As Variant 'The Frequency Sheet
Dim wbB             As Variant 'The data Sheet
Dim vaFileName      As Variant 'the results
Dim myselection     As Range
Dim myX             As Range
Dim myY             As Range
Dim currDraw        As String
Dim lastRow         As Long
Dim myChance        As Long
Dim firstRow        As Long 'the first row of the data

Dim n1 As Long, n2 As Long, n3 As Long, n4 As Long, n5 As Long, N6 As Long, n7 As Long, n8 As Long, n9 As Long, n10 As Long
Dim n11 As Long, n12 As Long, n13 As Long, n14 As Long, n15 As Long, n16 As Long, n17 As Long, n18 As Long, N19 As Long, n20 As Long
Dim n21 As Long, n22 As Long, n23 As Long, n24 As Long, n25 As Long, n26 As Long, n27 As Long, n28 As Long, n29 As Long, n30 As Long
Dim n31 As Long, n32 As Long, n33 As Long, n34 As Long, n35 As Long, n36 As Long, n37 As Long, n38 As Long, n39 As Long, n40 As Long
Dim n41 As Long, n42 As Long, n43 As Long, n44 As Long, n45 As Long

Dim T1 As Long, t2 As Long, t3 As Long, t4 As Long, t5 As Long, t6 As Long, t7 As Long, t8 As Long, t9 As Long, t10 As Long
Dim t11 As Long, t12 As Long, t13 As Long, t14 As Long, t15 As Long, t16 As Long, t17 As Long, t18 As Long, t19 As Long, t20 As Long
Dim t21 As Long, t22 As Long, t23 As Long, t24 As Long, t25 As Long, t26 As Long, t27 As Long, t28 As Long, t29 As Long, t30 As Long
Dim t31 As Long, t32 As Long, t33 As Long, t34 As Long, t35 As Long, t36 As Long, t37 As Long, t38 As Long, t39 As Long, t40 As Long
Dim t41 As Long, t42 As Long, t43 As Long, t44 As Long, t45 As Long

firstRow = 6 'set where the first row of results start
'GoTo here1:
n1 = 0
n2 = 0
n3 = 0
n4 = 0
n5 = 0
N6 = 0
n7 = 0
n8 = 0
n9 = 0
n10 = 0
n11 = 0
n12 = 0
n13 = 0
n14 = 0
n15 = 0
n16 = 0
n17 = 0
n18 = 0
N19 = 0
n20 = 0
n21 = 0
n22 = 0
n23 = 0
n24 = 0
n25 = 0
n26 = 0
n27 = 0
n28 = 0
n29 = 0
n30 = 0
n31 = 0
n32 = 0
n33 = 0
n34 = 0
n35 = 0
n36 = 0
n37 = 0
n38 = 0
n39 = 0
n40 = 0
n41 = 0
n42 = 0
n43 = 0
n44 = 0
n45 = 0
' clear out the old data for a start
Worksheets("Sheet1").Activate
Range("B1:AT4").Clear
Range("B6:AT650").Clear
Worksheets("Sheet2").Range("A2:BE47").Clear

Set wbA = ActiveWorkbook
vaFileName = "C:\FILES\GoldLotto\SaturdayGoldLotto.xls"
Workbooks.Open vaFileName
Set wbB = ActiveWorkbook

Set myselection = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
    For Each myX In myselection 'Col A
        currDraw = "|" & myX.Offset(0, 2).value & "|" & myX.Offset(0, 3).value & "|" & _
            myX.Offset(0, 4).value & "|" & myX.Offset(0, 5).value & "|" & _
            myX.Offset(0, 6).value & "|" & myX.Offset(0, 7).value & "|" & _
            myX.Offset(0, 8).value & "|" & myX.Offset(0, 9).value & "|"
        wbA.Activate
        If InStr(1, currDraw, "|1|") Then
            lastRow = Range("B" & Rows.count).End(xlUp).Row + 1
            Range("B" & lastRow) = n1
            n1 = 0
        Else
            n1 = n1 + 1
        End If
        If InStr(1, currDraw, "|2|") Then
            lastRow = Range("C" & Rows.count).End(xlUp).Row + 1
            Range("C" & lastRow) = n2
            n2 = 0
        Else
            n2 = n2 + 1
        End If
        If InStr(1, currDraw, "|3|") Then
            lastRow = Range("D" & Rows.count).End(xlUp).Row + 1
            Range("D" & lastRow) = n3
            n3 = 0
        Else
            n3 = n3 + 1
        End If
        If InStr(1, currDraw, "|4|") Then
            lastRow = Range("E" & Rows.count).End(xlUp).Row + 1
            Range("E" & lastRow) = n4
            n4 = 0
        Else
            n4 = n4 + 1
        End If
        If InStr(1, currDraw, "|5|") Then
            lastRow = Range("F" & Rows.count).End(xlUp).Row + 1
            Range("F" & lastRow) = n5
            n5 = 0
        Else
            n5 = n5 + 1
        End If
        If InStr(1, currDraw, "|6|") Then
            lastRow = Range("G" & Rows.count).End(xlUp).Row + 1
            Range("G" & lastRow) = N6
            N6 = 0
        Else
            N6 = N6 + 1
        End If
        If InStr(1, currDraw, "|7|") Then
            lastRow = Range("H" & Rows.count).End(xlUp).Row + 1
            Range("H" & lastRow) = n7
            n7 = 0
        Else
            n7 = n7 + 1
        End If
        If InStr(1, currDraw, "|8|") Then
            lastRow = Range("I" & Rows.count).End(xlUp).Row + 1
            Range("I" & lastRow) = n8
            n8 = 0
        Else
            n8 = n8 + 1
        End If
        If InStr(1, currDraw, "|9|") Then
            lastRow = Range("J" & Rows.count).End(xlUp).Row + 1
            Range("J" & lastRow) = n9
            n9 = 0
        Else
            n9 = n9 + 1
        End If
        If InStr(1, currDraw, "|10|") Then
            lastRow = Range("K" & Rows.count).End(xlUp).Row + 1
            Range("K" & lastRow) = n10
            n10 = 0
        Else
            n10 = n10 + 1
        End If
        If InStr(1, currDraw, "|11|") Then
            lastRow = Range("L" & Rows.count).End(xlUp).Row + 1
            Range("L" & lastRow) = n11
            n11 = 0
        Else
            n11 = n11 + 1
        End If
        If InStr(1, currDraw, "|12|") Then
            lastRow = Range("M" & Rows.count).End(xlUp).Row + 1
            Range("M" & lastRow) = n12
            n12 = 0
        Else
            n12 = n12 + 1
        End If
        If InStr(1, currDraw, "|13|") Then
            lastRow = Range("N" & Rows.count).End(xlUp).Row + 1
            Range("N" & lastRow) = n13
            n13 = 0
        Else
            n13 = n13 + 1
        End If
        If InStr(1, currDraw, "|14|") Then
            lastRow = Range("O" & Rows.count).End(xlUp).Row + 1
            Range("O" & lastRow) = n14
            n14 = 0
        Else
            n14 = n14 + 1
        End If
        If InStr(1, currDraw, "|15|") Then
            lastRow = Range("P" & Rows.count).End(xlUp).Row + 1
            Range("P" & lastRow) = n15
            n15 = 0
        Else
            n15 = n15 + 1
        End If
        If InStr(1, currDraw, "|16|") Then
            lastRow = Range("Q" & Rows.count).End(xlUp).Row + 1
            Range("Q" & lastRow) = n16
            n16 = 0
        Else
            n16 = n16 + 1
        End If
        If InStr(1, currDraw, "|17|") Then
            lastRow = Range("R" & Rows.count).End(xlUp).Row + 1
            Range("R" & lastRow) = n17
            n17 = 0
        Else
            n17 = n17 + 1
        End If
        If InStr(1, currDraw, "|18|") Then
            lastRow = Range("S" & Rows.count).End(xlUp).Row + 1
            Range("S" & lastRow) = n18
            n18 = 0
        Else
            n18 = n18 + 1
        End If
        If InStr(1, currDraw, "|19|") Then
            lastRow = Range("T" & Rows.count).End(xlUp).Row + 1
            Range("T" & lastRow) = N19
            N19 = 0
        Else
            N19 = N19 + 1
        End If
        If InStr(1, currDraw, "|20|") Then
            lastRow = Range("U" & Rows.count).End(xlUp).Row + 1
            Range("U" & lastRow) = n20
            n20 = 0
        Else
            n20 = n20 + 1
        End If
        If InStr(1, currDraw, "|21|") Then
            lastRow = Range("V" & Rows.count).End(xlUp).Row + 1
            Range("V" & lastRow) = n21
            n21 = 0
        Else
            n21 = n21 + 1
        End If
        If InStr(1, currDraw, "|22|") Then
            lastRow = Range("W" & Rows.count).End(xlUp).Row + 1
            Range("W" & lastRow) = n22
            n22 = 0
        Else
            n22 = n22 + 1
        End If
        If InStr(1, currDraw, "|23|") Then
            lastRow = Range("X" & Rows.count).End(xlUp).Row + 1
            Range("X" & lastRow) = n23
            n23 = 0
        Else
            n23 = n23 + 1
        End If
        If InStr(1, currDraw, "|24|") Then
            lastRow = Range("Y" & Rows.count).End(xlUp).Row + 1
            Range("Y" & lastRow) = n24
            n24 = 0
        Else
            n24 = n24 + 1
        End If
        If InStr(1, currDraw, "|25|") Then
            lastRow = Range("Z" & Rows.count).End(xlUp).Row + 1
            Range("Z" & lastRow) = n25
            n25 = 0
        Else
            n25 = n25 + 1
        End If
        If InStr(1, currDraw, "|26|") Then
            lastRow = Range("AA" & Rows.count).End(xlUp).Row + 1
            Range("AA" & lastRow) = n26
            n26 = 0
        Else
            n26 = n26 + 1
        End If
        If InStr(1, currDraw, "|27|") Then
            lastRow = Range("AB" & Rows.count).End(xlUp).Row + 1
            Range("AB" & lastRow) = n27
            n27 = 0
        Else
            n27 = n27 + 1
        End If
        If InStr(1, currDraw, "|28|") Then
            lastRow = Range("AC" & Rows.count).End(xlUp).Row + 1
            Range("AC" & lastRow) = n28
            n28 = 0
        Else
            n28 = n28 + 1
        End If
        If InStr(1, currDraw, "|29|") Then
            lastRow = Range("AD" & Rows.count).End(xlUp).Row + 1
            Range("AD" & lastRow) = n29
            n29 = 0
        Else
            n29 = n29 + 1
        End If
        If InStr(1, currDraw, "|30|") Then
            lastRow = Range("AE" & Rows.count).End(xlUp).Row + 1
            Range("AE" & lastRow) = n30
            n30 = 0
        Else
            n30 = n30 + 1
        End If
        If InStr(1, currDraw, "|31|") Then
            lastRow = Range("AF" & Rows.count).End(xlUp).Row + 1
            Range("AF" & lastRow) = n31
            n31 = 0
        Else
            n31 = n31 + 1
        End If
        If InStr(1, currDraw, "|32|") Then
            lastRow = Range("AG" & Rows.count).End(xlUp).Row + 1
            Range("AG" & lastRow) = n32
            n32 = 0
        Else
            n32 = n32 + 1
        End If
        If InStr(1, currDraw, "|33|") Then
            lastRow = Range("AH" & Rows.count).End(xlUp).Row + 1
            Range("AH" & lastRow) = n33
            n33 = 0
        Else
            n33 = n33 + 1
        End If
        If InStr(1, currDraw, "|34|") Then
            lastRow = Range("AI" & Rows.count).End(xlUp).Row + 1
            Range("AI" & lastRow) = n34
            n34 = 0
        Else
            n34 = n34 + 1
        End If
        If InStr(1, currDraw, "|35|") Then
            lastRow = Range("AJ" & Rows.count).End(xlUp).Row + 1
            Range("AJ" & lastRow) = n35
            n35 = 0
        Else
            n35 = n35 + 1
        End If
        If InStr(1, currDraw, "|36|") Then
            lastRow = Range("AK" & Rows.count).End(xlUp).Row + 1
            Range("AK" & lastRow) = n36
            n36 = 0
        Else
            n36 = n36 + 1
        End If
        If InStr(1, currDraw, "|37|") Then
            lastRow = Range("AL" & Rows.count).End(xlUp).Row + 1
            Range("AL" & lastRow) = n37
            n37 = 0
        Else
            n37 = n37 + 1
        End If
        If InStr(1, currDraw, "|38|") Then
            lastRow = Range("AM" & Rows.count).End(xlUp).Row + 1
            Range("AM" & lastRow) = n38
            n38 = 0
        Else
            n38 = n38 + 1
        End If
        If InStr(1, currDraw, "|39|") Then
            lastRow = Range("AN" & Rows.count).End(xlUp).Row + 1
            Range("AN" & lastRow) = n39
            n39 = 0
        Else
            n39 = n39 + 1
        End If
        If InStr(1, currDraw, "|40|") Then
            lastRow = Range("AO" & Rows.count).End(xlUp).Row + 1
            Range("AO" & lastRow) = n40
            n40 = 0
        Else
            n40 = n40 + 1
        End If
        If InStr(1, currDraw, "|41|") Then
            lastRow = Range("AP" & Rows.count).End(xlUp).Row + 1
            Range("AP" & lastRow) = n41
            n41 = 0
        Else
            n41 = n41 + 1
        End If
        If InStr(1, currDraw, "|42|") Then
            lastRow = Range("AQ" & Rows.count).End(xlUp).Row + 1
            Range("AQ" & lastRow) = n42
            n42 = 0
        Else
            n42 = n42 + 1
        End If
        If InStr(1, currDraw, "|43|") Then
            lastRow = Range("AR" & Rows.count).End(xlUp).Row + 1
            Range("AR" & lastRow) = n43
            n43 = 0
        Else
            n43 = n43 + 1
        End If
        If InStr(1, currDraw, "|44|") Then
            lastRow = Range("AS" & Rows.count).End(xlUp).Row + 1
            Range("AS" & lastRow) = n44
            n44 = 0
        Else
            n44 = n44 + 1
        End If
        If InStr(1, currDraw, "|45|") Then
            lastRow = Range("AT" & Rows.count).End(xlUp).Row + 1
            Range("AT" & lastRow) = n45
            n45 = 0
        Else
            n45 = n45 + 1
        End If

    Next myX
' close
    wbB.Activate 'the data file
    ActiveWorkbook.Close False
'now finish with how many weeks since last drawn
    Range("B2") = n1
    Range("C2") = n2
    Range("D2") = n3
    Range("E2") = n4
    Range("F2") = n5
    Range("G2") = N6
    Range("H2") = n7
    Range("I2") = n8
    Range("J2") = n9
    Range("K2") = n10
    Range("L2") = n11
    Range("M2") = n12
    Range("N2") = n13
    Range("O2") = n14
    Range("P2") = n15
    Range("Q2") = n16
    Range("R2") = n17
    Range("S2") = n18
    Range("T2") = N19
    Range("U2") = n20
    Range("V2") = n21
    Range("W2") = n22
    Range("X2") = n23
    Range("Y2") = n24
    Range("Z2") = n25
    Range("AA2") = n26
    Range("AB2") = n27
    Range("AC2") = n28
    Range("AD2") = n29
    Range("AE2") = n30
    Range("AF2") = n31
    Range("AG2") = n32
    Range("AH2") = n33
    Range("AI2") = n34
    Range("AJ2") = n35
    Range("AK2") = n36
    Range("AL2") = n37
    Range("AM2") = n38
    Range("AN2") = n39
    Range("AO2") = n40
    Range("AP2") = n41
    Range("AQ2") = n42
    Range("AR2") = n43
    Range("AS2") = n44
    Range("AT2") = n45
here1:
' get the trent for each number
    lastRow = Range("B" & Rows.count).End(xlUp).Row
    Range("B1").value = Application.WorksheetFunction.Trend(Range("B" & firstRow & ":B" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    T1 = Range("B1").value 'the trend in whole numbers
    If Range("B2").value >= T1 Then
        Range("B" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("B" & firstRow & ":B" & lastRow)
        If myY.value = Range("B2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("B3").value = myChance
    Range("B4").value = lastRow - (firstRow - 1)

    lastRow = Range("C" & Rows.count).End(xlUp).Row
    Range("C1").value = Application.WorksheetFunction.Trend(Range("C" & firstRow & ":C" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t2 = Range("C1").value 'the trend in whole numbers
    If Range("C2").value >= t2 Then
        Range("C" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("C" & firstRow & ":C" & lastRow)
        If myY.value = Range("C2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("C3").value = myChance
    Range("C4").value = lastRow - (firstRow - 1)

    lastRow = Range("D" & Rows.count).End(xlUp).Row
    Range("D1").value = Application.WorksheetFunction.Trend(Range("D" & firstRow & ":D" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t3 = Range("D1").value 'the trend in whole numbers
    If Range("D2").value >= t3 Then
        Range("D" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("D" & firstRow & ":D" & lastRow)
        If myY.value = Range("D2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("D3").value = myChance
    Range("D4").value = lastRow - (firstRow - 1)

    lastRow = Range("E" & Rows.count).End(xlUp).Row
    Range("E1").value = Application.WorksheetFunction.Trend(Range("E" & firstRow & ":E" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t4 = Range("E1").value 'the trend in whole numbers
    If Range("E2").value >= t4 Then
        Range("E" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("E" & firstRow & ":E" & lastRow)
        If myY.value = Range("E2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("E3").value = myChance
    Range("E4").value = lastRow - (firstRow - 1)

    lastRow = Range("F" & Rows.count).End(xlUp).Row
    Range("F1").value = Application.WorksheetFunction.Trend(Range("F" & firstRow & ":F" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t5 = Range("F1").value 'the trend in whole numbers
    If Range("F2").value >= t5 Then
        Range("F" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("F" & firstRow & ":F" & lastRow)
        If myY.value = Range("F2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("F3").value = myChance
    Range("F4").value = lastRow - (firstRow - 1)

    lastRow = Range("G" & Rows.count).End(xlUp).Row
    Range("G1").value = Application.WorksheetFunction.Trend(Range("G" & firstRow & ":G" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t6 = Range("G1").value 'the trend in whole numbers
    If Range("G2").value >= t6 Then
        Range("G" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("G" & firstRow & ":G" & lastRow)
        If myY.value = Range("G2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("G3").value = myChance
    Range("G4").value = lastRow - (firstRow - 1)

    lastRow = Range("H" & Rows.count).End(xlUp).Row
    Range("H1").value = Application.WorksheetFunction.Trend(Range("H" & firstRow & ":H" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t7 = Range("H1").value 'the trend in whole numbers
    If Range("H2").value >= t7 Then
        Range("H" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("H" & firstRow & ":H" & lastRow)
        If myY.value = Range("H2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("H3").value = myChance
    Range("H4").value = lastRow - (firstRow - 1)

    lastRow = Range("I" & Rows.count).End(xlUp).Row
    Range("I1").value = Application.WorksheetFunction.Trend(Range("I" & firstRow & ":I" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t8 = Range("I1").value 'the trend in whole numbers
    If Range("I2").value >= t8 Then
        Range("I" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("I" & firstRow & ":I" & lastRow)
        If myY.value = Range("I2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("I3").value = myChance
    Range("I4").value = lastRow - (firstRow - 1)

    lastRow = Range("J" & Rows.count).End(xlUp).Row
    Range("J1").value = Application.WorksheetFunction.Trend(Range("J" & firstRow & ":J" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t9 = Range("J1").value 'the trend in whole numbers
    If Range("J2").value >= t9 Then
        Range("J" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("J" & firstRow & ":J" & lastRow)
        If myY.value = Range("J2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("J3").value = myChance
    Range("J4").value = lastRow - (firstRow - 1)

    lastRow = Range("K" & Rows.count).End(xlUp).Row
    Range("K1").value = Application.WorksheetFunction.Trend(Range("K" & firstRow & ":K" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t10 = Range("K1").value 'the trend in whole numbers
    If Range("K2").value >= t10 Then
        Range("K" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("K" & firstRow & ":K" & lastRow)
        If myY.value = Range("K2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("K3").value = myChance
    Range("K4").value = lastRow - (firstRow - 1)

    lastRow = Range("L" & Rows.count).End(xlUp).Row
    Range("L1").value = Application.WorksheetFunction.Trend(Range("L" & firstRow & ":L" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t11 = Range("L1").value 'the trend in whole numbers
    If Range("L2").value >= t11 Then
        Range("L" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("L" & firstRow & ":L" & lastRow)
        If myY.value = Range("L2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("L3").value = myChance
    Range("L4").value = lastRow - (firstRow - 1)

    lastRow = Range("M" & Rows.count).End(xlUp).Row
    Range("M1").value = Application.WorksheetFunction.Trend(Range("M" & firstRow & ":M" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t12 = Range("M1").value 'the trend in whole numbers
    If Range("M2").value >= t12 Then
        Range("M" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("M" & firstRow & ":M" & lastRow)
        If myY.value = Range("M2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("M3").value = myChance
    Range("M4").value = lastRow - (firstRow - 1)

    lastRow = Range("N" & Rows.count).End(xlUp).Row
    Range("N1").value = Application.WorksheetFunction.Trend(Range("N" & firstRow & ":N" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t13 = Range("N1").value 'the trend in whole numbers
    If Range("N2").value >= t13 Then
        Range("N" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("N" & firstRow & ":N" & lastRow)
        If myY.value = Range("N2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("N3").value = myChance
    Range("N4").value = lastRow - (firstRow - 1)

    lastRow = Range("O" & Rows.count).End(xlUp).Row
    Range("O1").value = Application.WorksheetFunction.Trend(Range("O" & firstRow & ":O" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t14 = Range("O1").value 'the trend in whole numbers
    If Range("O2").value >= t14 Then
        Range("O" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("O" & firstRow & ":O" & lastRow)
        If myY.value = Range("O2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("O3").value = myChance
    Range("O4").value = lastRow - (firstRow - 1)

    lastRow = Range("P" & Rows.count).End(xlUp).Row
    Range("P1").value = Application.WorksheetFunction.Trend(Range("P" & firstRow & ":P" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t15 = Range("P1").value 'the trend in whole numbers
    If Range("P2").value >= t15 Then
        Range("P" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("P" & firstRow & ":P" & lastRow)
        If myY.value = Range("P2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("P3").value = myChance
    Range("P4").value = lastRow - (firstRow - 1)

    lastRow = Range("Q" & Rows.count).End(xlUp).Row
    Range("Q1").value = Application.WorksheetFunction.Trend(Range("Q" & firstRow & ":Q" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t16 = Range("Q1").value 'the trend in whole numbers
    If Range("Q2").value >= t16 Then
        Range("Q" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("Q" & firstRow & ":Q" & lastRow)
        If myY.value = Range("Q2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("Q3").value = myChance
    Range("Q4").value = lastRow - (firstRow - 1)

    lastRow = Range("R" & Rows.count).End(xlUp).Row
    Range("R1").value = Application.WorksheetFunction.Trend(Range("R" & firstRow & ":R" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t17 = Range("R1").value 'the trend in whole numbers
    If Range("R2").value >= t17 Then
        Range("R" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("R" & firstRow & ":R" & lastRow)
        If myY.value = Range("R2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("R3").value = myChance
    Range("R4").value = lastRow - (firstRow - 1)

    lastRow = Range("S" & Rows.count).End(xlUp).Row
    Range("S1").value = Application.WorksheetFunction.Trend(Range("S" & firstRow & ":S" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t18 = Range("S1").value 'the trend in whole numbers
    If Range("S2").value >= t18 Then
        Range("S" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("S" & firstRow & ":S" & lastRow)
        If myY.value = Range("S2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("S3").value = myChance
    Range("S4").value = lastRow - (firstRow - 1)

    lastRow = Range("T" & Rows.count).End(xlUp).Row
    Range("T1").value = Application.WorksheetFunction.Trend(Range("T" & firstRow & ":T" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t19 = Range("T1").value 'the trend in whole numbers
    If Range("T2").value >= t19 Then
        Range("T" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("T" & firstRow & ":T" & lastRow)
        If myY.value = Range("T2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("T3").value = myChance
    Range("T4").value = lastRow - (firstRow - 1)

    lastRow = Range("U" & Rows.count).End(xlUp).Row
    Range("U1").value = Application.WorksheetFunction.Trend(Range("U" & firstRow & ":U" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t20 = Range("U1").value 'the trend in whole numbers
    If Range("U2").value >= t20 Then
        Range("U" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("U" & firstRow & ":U" & lastRow)
        If myY.value = Range("U2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("U3").value = myChance
    Range("U4").value = lastRow - (firstRow - 1)

    lastRow = Range("V" & Rows.count).End(xlUp).Row
    Range("V1").value = Application.WorksheetFunction.Trend(Range("V" & firstRow & ":V" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t21 = Range("V1").value 'the trend in whole numbers
    If Range("V2").value >= t21 Then
        Range("V" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("V" & firstRow & ":V" & lastRow)
        If myY.value = Range("V2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("V3").value = myChance
    Range("V4").value = lastRow - (firstRow - 1)

    lastRow = Range("W" & Rows.count).End(xlUp).Row
    Range("W1").value = Application.WorksheetFunction.Trend(Range("W" & firstRow & ":W" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t22 = Range("W1").value 'the trend in whole numbers
    If Range("W2").value >= t22 Then
        Range("W" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("W" & firstRow & ":W" & lastRow)
        If myY.value = Range("W2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("W3").value = myChance
    Range("W4").value = lastRow - (firstRow - 1)

    lastRow = Range("X" & Rows.count).End(xlUp).Row
    Range("X1").value = Application.WorksheetFunction.Trend(Range("X" & firstRow & ":X" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t23 = Range("X1").value 'the trend in whole numbers
    If Range("X2").value >= t23 Then
        Range("X" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("X" & firstRow & ":X" & lastRow)
        If myY.value = Range("X2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("X3").value = myChance
    Range("X4").value = lastRow - (firstRow - 1)

    lastRow = Range("Y" & Rows.count).End(xlUp).Row
    Range("Y1").value = Application.WorksheetFunction.Trend(Range("Y" & firstRow & ":Y" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t24 = Range("Y1").value 'the trend in whole numbers
    If Range("Y2").value >= t24 Then
        Range("Y" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("Y" & firstRow & ":Y" & lastRow)
        If myY.value = Range("Y2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("Y3").value = myChance
    Range("Y4").value = lastRow - (firstRow - 1)

    lastRow = Range("Z" & Rows.count).End(xlUp).Row
    Range("Z1").value = Application.WorksheetFunction.Trend(Range("Z" & firstRow & ":Z" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t25 = Range("Z1").value 'the trend in whole numbers
    If Range("Z2").value >= t25 Then
        Range("Z" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("Z" & firstRow & ":Z" & lastRow)
        If myY.value = Range("Z2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("Z3").value = myChance
    Range("Z4").value = lastRow - (firstRow - 1)

    lastRow = Range("AA" & Rows.count).End(xlUp).Row
    Range("AA1").value = Application.WorksheetFunction.Trend(Range("AA" & firstRow & ":AA" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t26 = Range("AA1").value 'the trend in whole numbers
    If Range("AA2").value >= t26 Then
        Range("AA" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AA" & firstRow & ":AA" & lastRow)
        If myY.value = Range("AA2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AA3").value = myChance
    Range("AA4").value = lastRow - (firstRow - 1)

    lastRow = Range("AB" & Rows.count).End(xlUp).Row
    Range("AB1").value = Application.WorksheetFunction.Trend(Range("AB" & firstRow & ":AB" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t27 = Range("AB1").value 'the trend in whole numbers
    If Range("AB2").value >= t27 Then
        Range("AB" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AB" & firstRow & ":AB" & lastRow)
        If myY.value = Range("AB2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AB3").value = myChance
    Range("AB4").value = lastRow - (firstRow - 1)

    lastRow = Range("AC" & Rows.count).End(xlUp).Row
    Range("AC1").value = Application.WorksheetFunction.Trend(Range("AC" & firstRow & ":AC" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t28 = Range("AC1").value 'the trend in whole numbers
    If Range("AC2").value >= t28 Then
        Range("AC" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AC" & firstRow & ":AC" & lastRow)
        If myY.value = Range("AC2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AC3").value = myChance
    Range("AC4").value = lastRow - (firstRow - 1)

    lastRow = Range("AD" & Rows.count).End(xlUp).Row
    Range("AD1").value = Application.WorksheetFunction.Trend(Range("AD" & firstRow & ":AD" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t29 = Range("AD1").value 'the trend in whole numbers
    If Range("AD2").value >= t29 Then
        Range("AD" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AD" & firstRow & ":AD" & lastRow)
        If myY.value = Range("AD2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AD3").value = myChance
    Range("AD4").value = lastRow - (firstRow - 1)

    lastRow = Range("AE" & Rows.count).End(xlUp).Row
    Range("AE1").value = Application.WorksheetFunction.Trend(Range("AE" & firstRow & ":AE" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t30 = Range("AE1").value 'the trend in whole numbers
    If Range("AE2").value >= t30 Then
        Range("AE" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AE" & firstRow & ":AE" & lastRow)
        If myY.value = Range("AE2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AE3").value = myChance
    Range("AE4").value = lastRow - (firstRow - 1)

    lastRow = Range("AF" & Rows.count).End(xlUp).Row
    Range("AF1").value = Application.WorksheetFunction.Trend(Range("AF" & firstRow & ":AF" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t31 = Range("AF1").value 'the trend in whole numbers
    If Range("AF2").value >= t31 Then
        Range("AF" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AF" & firstRow & ":AF" & lastRow)
        If myY.value = Range("AF2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AF3").value = myChance
    Range("AF4").value = lastRow - (firstRow - 1)

    lastRow = Range("AG" & Rows.count).End(xlUp).Row
    Range("AG1").value = Application.WorksheetFunction.Trend(Range("AG" & firstRow & ":AG" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t32 = Range("AG1").value 'the trend in whole numbers
    If Range("AG2").value >= t32 Then
        Range("AG" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AG" & firstRow & ":AG" & lastRow)
        If myY.value = Range("AG2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AG3").value = myChance
    Range("AG4").value = lastRow - (firstRow - 1)

    lastRow = Range("AH" & Rows.count).End(xlUp).Row
    Range("AH1").value = Application.WorksheetFunction.Trend(Range("AH" & firstRow & ":AH" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t33 = Range("AH1").value 'the trend in whole numbers
    If Range("AH2").value >= t33 Then
        Range("AH" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AH" & firstRow & ":AH" & lastRow)
        If myY.value = Range("AH2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AH3").value = myChance
    Range("AH4").value = lastRow - (firstRow - 1)

    lastRow = Range("AI" & Rows.count).End(xlUp).Row
    Range("AI1").value = Application.WorksheetFunction.Trend(Range("AI" & firstRow & ":AI" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t34 = Range("AI1").value 'the trend in whole numbers
    If Range("AI2").value >= t34 Then
        Range("AI" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AI" & firstRow & ":AI" & lastRow)
        If myY.value = Range("AI2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AI3").value = myChance
    Range("AI4").value = lastRow - (firstRow - 1)

    lastRow = Range("AJ" & Rows.count).End(xlUp).Row
    Range("AJ1").value = Application.WorksheetFunction.Trend(Range("AJ" & firstRow & ":AJ" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t35 = Range("AJ1").value 'the trend in whole numbers
    If Range("AJ2").value >= t35 Then
        Range("AJ" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AJ" & firstRow & ":AJ" & lastRow)
        If myY.value = Range("AJ2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AJ3").value = myChance
    Range("AJ4").value = lastRow - (firstRow - 1)

    lastRow = Range("AK" & Rows.count).End(xlUp).Row
    Range("AK1").value = Application.WorksheetFunction.Trend(Range("AK" & firstRow & ":AK" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t36 = Range("AK1").value 'the trend in whole numbers
    If Range("AK2").value >= t36 Then
        Range("AK" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AK" & firstRow & ":AK" & lastRow)
        If myY.value = Range("AK2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AK3").value = myChance
    Range("AK4").value = lastRow - (firstRow - 1)

    lastRow = Range("AL" & Rows.count).End(xlUp).Row
    Range("AL1").value = Application.WorksheetFunction.Trend(Range("AL" & firstRow & ":AL" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t37 = Range("AL1").value 'the trend in whole numbers
    If Range("AL2").value >= t37 Then
        Range("AL" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AL" & firstRow & ":AL" & lastRow)
        If myY.value = Range("AL2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AL3").value = myChance
    Range("AL4").value = lastRow - (firstRow - 1)

    lastRow = Range("AM" & Rows.count).End(xlUp).Row
    Range("AM1").value = Application.WorksheetFunction.Trend(Range("AM" & firstRow & ":AM" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t38 = Range("AM1").value 'the trend in whole numbers
    If Range("AM2").value >= t38 Then
        Range("AM" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AM" & firstRow & ":AM" & lastRow)
        If myY.value = Range("AM2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AM3").value = myChance
    Range("AM4").value = lastRow - (firstRow - 1)

    lastRow = Range("AN" & Rows.count).End(xlUp).Row
    Range("AN1").value = Application.WorksheetFunction.Trend(Range("AN" & firstRow & ":AN" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t39 = Range("AN1").value 'the trend in whole numbers
    If Range("AN2").value >= t39 Then
        Range("AN" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AN" & firstRow & ":AN" & lastRow)
        If myY.value = Range("AN2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AN3").value = myChance
    Range("AN4").value = lastRow - (firstRow - 1)

    lastRow = Range("AO" & Rows.count).End(xlUp).Row
    Range("AO1").value = Application.WorksheetFunction.Trend(Range("AO" & firstRow & ":AO" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t40 = Range("AO1").value 'the trend in whole numbers
    If Range("AO2").value >= t40 Then
        Range("AO" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AO" & firstRow & ":AO" & lastRow)
        If myY.value = Range("AO2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AO3").value = myChance
    Range("AO4").value = lastRow - (firstRow - 1)

    lastRow = Range("AP" & Rows.count).End(xlUp).Row
    Range("AP1").value = Application.WorksheetFunction.Trend(Range("AP" & firstRow & ":AP" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t41 = Range("AP1").value 'the trend in whole numbers
    If Range("AP2").value >= t41 Then
        Range("AP" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AP" & firstRow & ":AP" & lastRow)
        If myY.value = Range("AP2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AP3").value = myChance
    Range("AP4").value = lastRow - (firstRow - 1)

    lastRow = Range("AQ" & Rows.count).End(xlUp).Row
    Range("AQ1").value = Application.WorksheetFunction.Trend(Range("AQ" & firstRow & ":AQ" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t42 = Range("AQ1").value 'the trend in whole numbers
    If Range("AQ2").value >= t42 Then
        Range("AQ" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AQ" & firstRow & ":AQ" & lastRow)
        If myY.value = Range("AQ2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AQ3").value = myChance
    Range("AQ4").value = lastRow - (firstRow - 1)

    lastRow = Range("AR" & Rows.count).End(xlUp).Row
    Range("AR1").value = Application.WorksheetFunction.Trend(Range("AR" & firstRow & ":AR" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t43 = Range("AR1").value 'the trend in whole numbers
    If Range("AR2").value >= t43 Then
        Range("AR" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AR" & firstRow & ":AR" & lastRow)
        If myY.value = Range("AR2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AR3").value = myChance
    Range("AR4").value = lastRow - (firstRow - 1)

    lastRow = Range("AS" & Rows.count).End(xlUp).Row
    Range("AS1").value = Application.WorksheetFunction.Trend(Range("AS" & firstRow & ":AS" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t44 = Range("AS1").value 'the trend in whole numbers
    If Range("AS2").value >= t44 Then
        Range("AS" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AS" & firstRow & ":AS" & lastRow)
        If myY.value = Range("AS2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AS3").value = myChance
    Range("AS4").value = lastRow - (firstRow - 1)

    lastRow = Range("AT" & Rows.count).End(xlUp).Row
    Range("AT1").value = Application.WorksheetFunction.Trend(Range("AT" & firstRow & ":AT" & lastRow), _
        Range("A" & firstRow & ":A" & lastRow), Range("A" & lastRow + 1))
    t45 = Range("AT1").value 'the trend in whole numbers
    If Range("AT2").value >= t45 Then
        Range("AT" & (firstRow - 1)).Interior.ColorIndex = 6
    End If
    myChance = 0
    For Each myY In Range("AT" & firstRow & ":AT" & lastRow)
        If myY.value = Range("AT2").value Then
            If myY.Offset(1, 0).value = 0 Then
                myChance = myChance + 1
            End If
        End If
    Next myY
    Range("AT3").value = myChance
    Range("AT4").value = lastRow - (firstRow - 1)

'copy the numbers and frequencies to Sheet2
Worksheets("Sheet1").Range("A4:AT5").Copy
Worksheets("Sheet2").Range("A1").PasteSpecial Transpose:=True
Worksheets("Sheet2").Activate
Range("A2:AY47").Interior.ColorIndex = xlNone
'Sort the spreadsheet
Cells.Select
Selection.Sort key1:=Range("A2"), Order1:=xlAscending, _
    Header:=xlYes, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
    DataOption1:=xlSortNormal

'Build the games
Call BuildGames
        

End Sub
Private Sub BuildGames()
Dim x As Variant
Dim y As Range
Dim myCol As Long
Dim myRow As Long
Dim myGames As Long
Dim a       As Long 'games
Dim myNumbers As Long
Dim b       As Long 'numbers
Dim myTmp As String 'string of the numbers
Dim z       As String

myCol = 4
myNumbers = 6
myGames = 54
'set the range of the numbers to be worked on
Range("B2:B15").Copy
Range("C2:C15").PasteSpecial
Range("B24:B27").Copy
Range("C16:C19").PasteSpecial
Range("B43:B46").Copy
Range("C20:C23").PasteSpecial
Set y = Range("C2:C23")
For a = 1 To myGames
    myRow = 2
    For b = 1 To myNumbers
redo:
        z = ""
        x = RandsFromRange(y)
        Range("D1").value = x
        z = "|" & Range("D1") & "|"
        If InStr(1, myTmp, z) > 0 Then
            GoTo redo:
        Else
            myTmp = myTmp & z
            Cells(myRow, myCol) = x
            myRow = myRow + 1
        End If
    Next b
    myCol = myCol + 1
    myTmp = ""
Next a
'Range("D2:D7").Value = x
End Sub
Function RandsFromRange(InputRange As Range) As Variant
    Dim ResultArr() As Variant
    Dim SourceArr() As Variant
    Dim TopNdx As Long
    Dim ResultNdx As Long
    Dim SourceNdx As Long
    Dim Temp As Variant

    ''''''''''''''''''''''''''''
    ' Allow an input range of only one column or one row.
    ''''''''''''''''''''''''''''
    If InputRange.Columns.count > 1 And InputRange.Rows.count > 1 Then
        RandsFromRange = CVErr(xlErrRef)
        Exit Function
    End If
    
'    If GetNum > InputRange.Cells.Count Then
'        RandsFromRange = CVErr(xlErrValue)
'        Exit Function
'    End If
    
    ReDim ResultArr(1 To InputRange.Cells.count)
    SourceArr = InputRange.value
    Randomize
    TopNdx = UBound(ResultArr)
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' The logic here is identical to logic for the
    ' UniqueRandomLongs function described above. See the
    ' comments for that procedure for a description of
    ' the code below.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''
    For ResultNdx = LBound(ResultArr) To UBound(ResultArr)
        SourceNdx = Int(TopNdx * Rnd + 1)
        ResultArr(ResultNdx) = SourceArr(SourceNdx, 1)
        Temp = SourceArr(SourceNdx, 1)
        SourceArr(SourceNdx, 1) = SourceArr(TopNdx, 1)
        SourceArr(TopNdx, 1) = Temp
        TopNdx = TopNdx - 1
    Next ResultNdx
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Return the ResultArr array back to the caller.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''
    If IsObject(Application.Caller) = True Then
        If TypeOf Application.Caller Is Excel.Range Then
            If Application.Caller.Columns.count = 1 Then
                RandsFromRange = Application.Transpose(ResultArr)
            Else
                RandsFromRange = ResultArr
            End If
        Else
            ' should never happen. do nothing.
        End If
    Else
        RandsFromRange = ResultArr
    End If
        
End Function
Private Sub BuildCHGames()
Dim x           As Variant
Dim y           As Range
Dim p           As Range 'powerball
Dim myCol       As Long
Dim myRow       As Long
Dim myGames     As Long
Dim a           As Long 'games
Dim myNumbers   As Long
Dim b           As Long 'numbers
'Dim lr1         As Long 'last row Col B
'Dim lr2         As Long 'last row PB1
'Dim lr3         As Long 'last row PB2
Dim myTmp       As String 'string of the numbers
Dim z           As String
Dim tmpRange    As Range
Dim tmpX        As Range
Dim mySort      As String 'string of sorted numbers
Dim fullSort    As String 'full list of sorted numbers - looking for duplicate games
Dim LottoType   As String


Cells.Interior.ColorIndex = xlNone
Range(Cells(2, 4), Cells(8, 58)).ClearContents
'#### Set LottoType:-

myGames = 24 'count of games
LottoType = "1"

' GoldLotto = 1
' OzLotto = 2
' Powerball = 3

myCol = 4 'starting col
Select Case LottoType
    Case "1"
        myNumbers = 6 'count of numbers
        'Set y = Range("B3:B20") 'set the range of the numbers to be worked on
        'lr1 = Range("B3").End(xlDown).row
        'Set y = Range("B3:B" & lr1)
        Set y = Range("B3:B" & Range("B3").End(xlDown).Row)
    Case "2"
        myNumbers = 7
        'Set y = Range("B3:B20")
        Set y = Range("B3:B" & Range("B3").End(xlDown).Row)
    Case "3"
        myNumbers = 6
        'Set y = Range("B23:B38") '1st 6 numbers
        Set y = Range("B23:B" & Range("B23").End(xlDown).Row)
        'Set p = Range("C23:C33") 'powerball
        Set p = Range("C23:C" & Range("C23").End(xlDown).Row)
End Select



For a = 1 To myGames
isDup:
    myRow = 2
    For b = 1 To myNumbers
redo:
        z = ""
        x = RandsFromRange(y)
        Range("B1").value = x
        z = "|" & Range("B1") & "|"
        If InStr(1, myTmp, z) > 0 Then
            GoTo redo:
        Else
            myTmp = myTmp & z
            Cells(myRow, myCol) = x
            myRow = myRow + 1
        End If
'check for duplicate games
        If b = myNumbers Then
            myTmp = ""
            Set tmpRange = Range(Cells(2, myCol), Cells(myNumbers + 1, myCol))
            Range(Cells(2, myCol), Cells(myNumbers + 1, myCol)).Sort key1:=Range(Cells(2, myCol), Cells(myNumbers + 1, myCol)), _
            Order1:=xlAscending, Header:=xlNo
            For Each tmpX In tmpRange
                mySort = mySort & tmpX & "|"
            Next tmpX
            If InStr(1, fullSort, mySort) > 0 Then
                tmpRange.ClearContents
                'Cells(10, myCol) = mySort 'for testing
                mySort = ""
                GoTo isDup:
            Else
                'Cells(9, myCol) = mySort 'for testing
                fullSort = fullSort & mySort
                mySort = ""
            End If
            If LottoType = "3" Then 'get the powerball number
                x = RandsFromRange(p)
                Cells("8", myCol) = x
            End If

        End If
    Next b
    myCol = myCol + 1
    myTmp = ""
Next a
'Range("D2:D7").Value = x
End Sub
Private Sub BuildRANDGames()
Dim x           As Integer
Dim y           As Double
Dim low         As Double
Dim p           As Long 'powerball
Dim myCol       As Long
Dim myRow       As Long
Dim myGames     As Long
Dim a           As Long 'games
Dim myNumbers   As Long
Dim b           As Long 'numbers
'Dim lr1         As Long 'last row Col B
'Dim lr2         As Long 'last row PB1
'Dim lr3         As Long 'last row PB2
Dim myTmp       As String 'string of the numbers
Dim z           As String
Dim tmpRange    As Range
Dim tmpX        As Range
Dim mySort      As String 'string of sorted numbers
Dim fullSort    As String 'full list of sorted numbers - looking for duplicate games
Dim LottoType   As String
Dim mySum       As Long
Dim myTrend     As Long


Cells.Interior.ColorIndex = xlNone
Range(Cells(2, 4), Cells(8, 58)).ClearContents
'#### Set LottoType:-

myGames = 17 'count of games
myTrend = 164 'trend as calculated from the relevant sheet
LottoType = "2"

' GoldLotto = 1
' OzLotto = 2
' Powerball = 3

myCol = 5 'starting col 4
low = 1

Select Case LottoType
    Case "1"
        myNumbers = 6 'count of numbers
        'Set y = Range("B3:B20") 'set the range of the numbers to be worked on
        'lr1 = Range("B3").End(xlDown).row
        'Set y = Range("B3:B" & lr1)
        y = 45
    Case "2"
        myNumbers = 7
        'Set y = Range("B3:B20")
        y = 45
    Case "3"
        myNumbers = 6
        'Set y = Range("B23:B38") '1st 6 numbers
        y = 40
        'Set p = Range("C23:C33") 'powerball
        p = 20
End Select



For a = 1 To myGames
isDup:
    myRow = 2
    mySum = 0
    myTmp = ""
    For b = 1 To myNumbers
redo:
        
        z = ""
        If b < myNumbers Then
            'x = 0 + y * Rnd()
            'R = Int((High - Low + 1) * Rnd() + Low)
           ' = Int ((300 - 200 + 1) * Rnd + 200)
            Randomize
            Range("B1").value = Int((y - low + 1) * Rnd + low)
            x = Range("B1").value
        Else
            x = myTrend - mySum
            If x < 1 Or x > y Then GoTo isDup:
        End If
        'Range("B1").value = x
        z = "|" & x & "|"
        If InStr(1, myTmp, z) > 0 Then
            If b < myNumbers Then
                GoTo redo:
            Else
                GoTo isDup:
            End If
        Else
            myTmp = myTmp & z
            Cells(myRow, myCol) = x
            mySum = mySum + x
            myRow = myRow + 1
        End If
'check for duplicate games
        If b = myNumbers Then
            myTmp = ""
            Set tmpRange = Range(Cells(2, myCol), Cells(myNumbers + 1, myCol))
            Range(Cells(2, myCol), Cells(myNumbers + 1, myCol)).Sort key1:=Range(Cells(2, myCol), Cells(myNumbers + 1, myCol)), _
            Order1:=xlAscending, Header:=xlNo
            For Each tmpX In tmpRange
                mySort = mySort & tmpX & "|"
            Next tmpX
            If InStr(1, fullSort, mySort) > 0 Then
                tmpRange.ClearContents
                'Cells(10, myCol) = mySort 'for testing
                mySort = ""
                GoTo isDup:
            Else
                'Cells(9, myCol) = mySort 'for testing
                fullSort = fullSort & mySort
                mySort = ""
            End If
            If LottoType = "3" Then 'get the powerball number
                Randomize
                Range("B1").value = Int((p - low + 1) * Rnd + low)
                x = Range("B1").value
                Cells("8", myCol) = x
            End If

        End If
    Next b
    myCol = myCol + 1
    myTmp = ""
Next a
'Range("D2:D7").Value = x
End Sub
Sub MarkChromeGames()
'uses chrome
'opens up a new webpage in CHROME and enters the first 18 games
Dim myselection     As Range
Dim myX             As Range
Dim myCol           As Long
Dim myRow           As Long
Dim game1           As Boolean
Dim x               As String
Dim y               As String
Dim Game            As Long
Dim NoGames         As Long
Dim gameRow         As Long
Dim myNo            As String
  
NoGames = 24 'number of games to be played
StopMyProcess ("chromedriver.exe")
StopMyProcess ("firefox.exe")
Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
  'driver.Start "chrome", "https://tatts.com/"
Dim keys As New SeleniumWrapper.keys

driver.Start "chrome", "https://thelott.com/saturday-gold-lotto/play"
'driver.Start "firefox", "https://thelott.com/saturday-gold-lotto/play"

driver.setImplicitWait 5000
  
'driver.Open "/"
'https://thelott.com/saturday-lotto/play
driver.get "/", Raise:=False
driver.clickAndWait "//*[@id=""pagewrapper""]/div[1]/div[2]/div[3]/div/div/section/ul/li[2]/a"

'driver.Type
driver.Type "id=txtUserUsername", "axi.dent"
driver.Type "id=txtUserPassword", "wVXjtv3inF7w"
driver.Click "//compose/button"
driver.Wait (2000)
'driver.SendKeys (keys.ArrowDown)

driver.Wait (3000)
driver.Click "xpath=(//button[@type='button'])[2]" 'works
driver.Wait (1000)
driver.SendKeys keys.PageDown
driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[2]/div/div[3]/select").SendKeys (NoGames)
driver.Wait (1000)
driver.SendKeys keys.Enter
driver.Wait (3000)
driver.SendKeys keys.Enter

'########################
myCol = 4 'Start in D Column for games 1-18
'myCol = 22 'Start in V Column games 19-36
'myCol = 40 'Start in AB Column games 37-54
'##############################
    
For Game = 1 To NoGames
    gameRow = Game + 1
    Set myselection = Range(Cells(2, myCol), Cells(7, myCol))
        For Each myX In myselection
    '##################
            driver.Wait (400)
            myNo = myX.text
            driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection[" & Game & "]/section/div/div[2]/div[1]/button[" & myNo & "]").Click
                      'selenium.click "//div[@id='pagewrapper']/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection/section/div/div[2]/div/button"

            driver.SendKeys keys.ArrowDown
        Next myX
    'driver.SendKeys keys.ArrowDown
    myCol = myCol + 1
Next Game
End Sub

Sub MarkPowerballGames()

'opens up a new webpage and enters the nominated number of games
' ctdent@smartchat.net.au
'
Dim myselection     As Range
Dim myX             As Range
Dim myNo            As String 'value of myX
Dim myCol           As Long
Dim myRow           As Long
Dim game1           As Boolean
Dim x               As String
Dim y               As String
Dim Game            As Long
Dim gameRow         As Long
Dim GameNo          As Long

StopMyProcess ("chromedriver.exe")
GameNo = 24 'number of games
  
  Dim driver As New SeleniumWrapper.WebDriver
  Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
  
  Dim keys As New SeleniumWrapper.keys

  driver.Start "chrome", "https://thelott.com/powerball/play"
  driver.setImplicitWait 10000000

driver.get "/", Raise:=False
driver.Wait (1000)
driver.clickAndWait "//*[@id=""pagewrapper""]/div[1]/div[2]/div[3]/div/div/section/ul/li[2]/a"
' ## indicates obtained from IDE in new firefox
'##selenium.clickAndWait "//div[@id='pagewrapper']/div[2]/div/div[3]/div[3]/div/section/ul/li[5]/a/div" 'DOESN'T WORK
'driver.clickAndWait "id=txtUserUsername"
'driver.SendKeys "ctdent@smartchat.net.au"
'driver.clickAndWait "id=txtUserPassword"
'driver.SendKeys "4399Ngai"
'driver.SendKeys keys.Enter 'login
'## selenium.Type "id=txtUserUsername", "ctdent@smartchat.net.au"
'##  selenium.Type "id=txtUserPassword", "4399Ngai"
'##  selenium.Click "//compose/button"
driver.Type "id=txtUserUsername", "axi.dent"
driver.Type "id=txtUserPassword", "wVXjtv3inF7w"
driver.Click "//compose/button"

driver.SendKeys keys.ArrowDown

driver.Wait (5000)

driver.Click "//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/div/button[2]"
'##selenium.click "xpath=(//button[@type='button'])[2]"
'driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/div/button[2]").Click
driver.Wait (500)
driver.SendKeys keys.ArrowDown
driver.Click "//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[1]/div[2]/slide-button/div/div[1]/span[1]"
'driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[1]/div[2]/slide-button/div/div[1]/span[1]").Click
driver.Wait (500)

driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[2]/div/div[3]/select").SendKeys (GameNo)
driver.SendKeys keys.Enter
'##selenium.select "css=div.select > select.au-target", "label=24 Games - $22.30"

myCol = 4 'Start in D Column for all games

For Game = 1 To GameNo
    gameRow = Game + 1

    Set myselection = Range(Cells(2, myCol), Cells(8, myCol))
    For Each myX In myselection
    
        If myX.Row = 8 Then GoTo Powerball:
        driver.Wait (400)
        myNo = myX.text
        driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection[" & Game & "]/section/div/div[2]/div[1]/button[" & myNo & "]").Click
'##                selenium.click "//div[@id='pagewrapper']/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection/section/div/div[2]/div/button"
Powerball:
        If myX.Row = 8 Then
            myNo = myX.text
            driver.Wait (400)
            driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection[" & Game & "]/section/div/div[2]/div[2]/button[" & myNo & "]").Click
'##                   selenium.click "//div[@id='pagewrapper']/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection/section/div/div[2]/div[2]/button"
        End If
        driver.SendKeys keys.ArrowDown
    Next myX
    myCol = myCol + 1
Next Game
End Sub
Sub MarkChromeOzLotto()
'uses chrome
'opens up a new webpage in CHROME and enters the first 18 games
Dim myselection     As Range
Dim myX             As Range
Dim myCol           As Long
Dim myRow           As Long
Dim game1           As Boolean
Dim x               As String
Dim y               As String
Dim Game            As Long
Dim NoGames         As Long
Dim gameRow         As Long
Dim myNo            As String
  
NoGames = 18 'number of games to be played
StopMyProcess ("chromedriver.exe")
StopMyProcess ("firefox.exe")
Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
  'driver.Start "chrome", "https://tatts.com/"
Dim keys As New SeleniumWrapper.keys

driver.Start "chrome", "https://thelott.com/oz-lotto/play"
'driver.Start "firefox", "https://thelott.com/saturday-gold-lotto/play"

driver.setImplicitWait 5000
  
'driver.Open "/"
'https://thelott.com/saturday-lotto/play
driver.get "/", Raise:=False
driver.clickAndWait "//*[@id=""pagewrapper""]/div[1]/div[2]/div[3]/div/div/section/ul/li[2]/a"

'driver.Type
driver.Type "id=txtUserUsername", "axi.dent"
driver.Type "id=txtUserPassword", "wVXjtv3inF7w"
driver.Click "//compose/button"
driver.Wait (2000)
'driver.SendKeys (keys.ArrowDown)

driver.Wait (3000)
driver.Click "xpath=(//button[@type='button'])[2]" 'works
driver.Wait (1000)
driver.SendKeys keys.PageDown
driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[2]/div/div[3]/select").SendKeys (NoGames)
driver.Wait (1000)
driver.SendKeys keys.Enter
driver.Wait (3000)
driver.SendKeys keys.Enter

'########################
myCol = 4 'Start in D Column for games 1-18
'myCol = 22 'Start in V Column games 19-36
'myCol = 40 'Start in AB Column games 37-54
'##############################
    
For Game = 1 To NoGames
    gameRow = Game + 1
    Set myselection = Range(Cells(2, myCol), Cells(8, myCol))
        For Each myX In myselection
    '##################
            driver.Wait (400)
            myNo = myX.text
            driver.findElementByXPath("//*[@id=""pagewrapper""]/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection[" & Game & "]/section/div/div[2]/div[1]/button[" & myNo & "]").Click
                      'selenium.click "//div[@id='pagewrapper']/div[2]/div/div[3]/div[3]/div/section/div/play-tabs/section/loading-panel/section/marked-entry/section/div[4]/marked-entry-selections/section/div[2]/marked-entry-selection/section/div/div[2]/div/button"

            driver.SendKeys keys.ArrowDown
        Next myX
    'driver.SendKeys keys.ArrowDown
    myCol = myCol + 1
Next Game
End Sub
Sub MarkOzLotto_OLD()

'opens up a new webpage and enters the first (myGames amount)
' ctdent@smartchat.net.au
'
Dim myselection     As Range
Dim myX             As Range
Dim myCol           As Long
Dim myRow           As Long
Dim game1           As Boolean
Dim x               As String
Dim y               As String
Dim Game            As Long
Dim myGames         As String
Dim z               As Long
  
  Dim driver As New SeleniumWrapper.WebDriver
  Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
  
myGames = "12"
z = myGames + 1 '16/5/16 they have increased this number by 1
  
  driver.Start "firefox", "https://tatts.com/"
  'driver.Start "chrome", "https://tatts.com/"
  driver.setImplicitWait 5000
  
driver.get "/goldencasket/buy-lotto/purchase-ticket?product=Super7sOzLotto"
'https://tatts.com/goldencasket/buy-lotto/purchase-ticket?product=Super7sOzLotto
'login here
driver.findElementById("login-trigger").Click
driver.findElementById("Username").Clear
driver.findElementById("Username").SendKeys "axi.dent"
driver.findElementById("Password").Clear
driver.findElementById("Password").SendKeys "wVXjtv3inF7w"
driver.findElementById("Login").Click
'
driver.findElementByCssSelector("div.liUnselected > span").Click
'driver.findElementById("StandardGamesDiv").Click
driver.findElementByCssSelector("div.liSelected > span:nth-child(1)").Click
driver.findElementByCssSelector("div.liSelected > span:nth-child(1)").Click
  
driver.findElementById("StandardGameCountSel").Click
'driver.SendKeys ("12")
driver.SendKeys (myGames)
driver.findElementById("StandardGameCountSel").Click

driver.findElementByCssSelector("tr.gameRow.selected").Click
'----------------
 
'--------------
'########################
'following is more games
myCol = 4 'Start in D Column for games 1-18
'myCol = 22 'Start in V Column games 19-36
'myCol = 40 'Start in AB Column games 37-54
'##############################
'game = 1
'myGameNo = Cells(myCol, 1).Value
'set the range of the numbers to be worked on
For Game = 2 To z
    driver.findElementByCssSelector("tr.gameRow:nth-child(" & Game & ") > td:nth-child(2) > div:nth-child(1) > div:nth-child(1) > input:nth-child(1)").Click
'                                    tr.gameRow:nth-child(2) > td:nth-child(2) > div:nth-child(1) > div:nth-child(1) > input:nth-child(1)
'    Select Case game
'        Case 1
'            driver.findElementByCssSelector("input.gameSelection.inputText").Click 'game 1
'        Case 2
'            'driver.findElementByXPath("(//input[@value=''])[11]").Click 'game 2
'            driver.findElementByCssSelector("tr.gameRow:nth-child(2) > td:nth-child(2) > div:nth-child(1) > div:nth-child(1) > input:nth-child(1)").Click
'        Case 3
'            driver.findElementByXPath("(//input[@value=''])[17]").Click 'game 3
'        Case 4
'            driver.findElementByXPath("(//input[@value=''])[23]").Click 'game 4
'        Case 5
'            driver.findElementByXPath("(//input[@value=''])[29]").Click 'game 5
'        Case 6
'            driver.findElementByXPath("(//input[@value=''])[35]").Click 'game 6
'        Case 7
'            driver.findElementByXPath("(//input[@value=''])[41]").Click
'        Case 8
'            driver.findElementByXPath("(//input[@value=''])[47]").Click
'        Case 9
'            driver.findElementByXPath("(//input[@value=''])[53]").Click
'        Case 10
'            driver.findElementByXPath("(//input[@value=''])[59]").Click
'        Case 11
'            driver.findElementByXPath("(//input[@value=''])[65]").Click
'        Case 12
'            driver.findElementByXPath("(//input[@value=''])[71]").Click
'        Case 13
'            driver.findElementByXPath("(//input[@value=''])[77]").Click
'        Case 14
'            driver.findElementByXPath("(//input[@value=''])[83]").Click
'        Case 15
'            driver.findElementByXPath("(//input[@value=''])[89]").Click
'        Case 16
'            driver.findElementByXPath("(//input[@value=''])[95]").Click
'        Case 17
'            driver.findElementByXPath("(//input[@value=''])[101]").Click
'        Case 18
'            driver.findElementByXPath("(//input[@value=''])[107]").Click
'    End Select

Set myselection = Range(Cells(2, myCol), Cells(8, myCol))
    For Each myX In myselection
'set the y co-ordinate
    Select Case myX
        Case 1, 2, 3, 4, 5, 6, 7, 8
            y = "" 'tr value
        Case 9, 10, 11, 12, 13, 14, 15, 16
            y = "[2]"
        Case 17, 18, 19, 20, 21, 22, 23, 24
            y = "[3]"
        Case 25, 26, 27, 28, 29, 30, 31, 32
            y = "[4]"
        Case 33, 34, 35, 36, 37, 38, 39, 40
            y = "[5]"
        Case 41, 42, 43, 44, 45
            y = "[6]"
    End Select
    Select Case myX 'x co-ordinates
        Case 1
            x = "[1]"
        Case 9, 17, 25, 33, 41
            x = ""
        Case 2, 10, 18, 26, 34, 42
            x = "[2]"
        Case 3, 11, 19, 27, 35, 43
            x = "[3]"
        Case 4, 12, 20, 28, 36, 44
            x = "[4]"
        Case 5, 13, 21, 29, 37, 45
            x = "[5]"
        Case 6, 14, 22, 30, 38
            x = "[6]"
        Case 7, 15, 23, 31, 39
            x = "[7]"
        Case 8, 16, 24, 32, 40
            x = "[8]"
    End Select
    driver.findElementByXPath("//table[@id='GridSelectionsTbl']/tbody/tr" & y & "/td" & x).Click
    'driver.findElementByXPath("//table[@id='GridSelectionsTbl']/tbody/tr[3]/td[3]").Click

    Next myX
    myCol = myCol + 1
Next Game
End Sub
Sub MarkOzLotto_chrome_OLD()

'opens up a new webpage and enters the first (myGames amount)
' ctdent@smartchat.net.au
'
Dim myselection     As Range
Dim myX             As Range
Dim myCol           As Long
Dim myRow           As Long
Dim game1           As Boolean
Dim x               As String
Dim y               As String
Dim Game            As Long
Dim myGames         As String
Dim z               As Long

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
  
myGames = "24"
z = myGames + 1 '16/5/16 they have increased this number by 1
  
  driver.Start "chrome", "https://tatts.com/"
  driver.setImplicitWait 5000
  
driver.Open "/goldencasket/buy-lotto/purchase-ticket?product=Super7sOzLotto"
'
driver.clickAndWait "id=login-trigger"
driver.clickAndWait "id=Username"
driver.SendKeys "axi.dent"
driver.clickAndWait "id=Password"
driver.SendKeys "wVXjtv3inF7w"
driver.clickAndWait "id=Login"
'----
driver.Click "css=div.liUnselected > span"
driver.Click "css=tr.gameRow.selected"
'driver.Click "id=StandardGamesDiv"
driver.Click "css=tr.gameRow.selected"
driver.Click "css=tr.gameRow.selected"
driver.Click "css=#StandardGameCountSel"
'driver.SendKeys ("18")
driver.SendKeys (myGames)
'driver.Click "css=#StandardGameCountSel"
'driver.findElementByCssSelector("tr.gameRow.selected").Click
'----------------
 
'--------------
'########################
'following is more games
myCol = 4 'Start in D Column for games 1-18
'myCol = 22 'Start in V Column games 19-36
'myCol = 40 'Start in AB Column games 37-54
'##############################
'game = 1
'myGameNo = Cells(myCol, 1).Value
'set the range of the numbers to be worked on
For Game = 2 To z
    driver.findElementByCssSelector("tr.gameRow:nth-child(" & Game & ") > td:nth-child(2) > div:nth-child(1) > div:nth-child(1) > input:nth-child(1)").Click
'                                    tr.gameRow:nth-child(2) > td:nth-child(2) > div:nth-child(1) > div:nth-child(1) > input:nth-child(1)

    Set myselection = Range(Cells(2, myCol), Cells(8, myCol))
    For Each myX In myselection
'set the y co-ordinate
    Select Case myX
        Case 1, 2, 3, 4, 5, 6, 7, 8
            y = "" 'tr value
        Case 9, 10, 11, 12, 13, 14, 15, 16
            y = "[2]"
        Case 17, 18, 19, 20, 21, 22, 23, 24
            y = "[3]"
        Case 25, 26, 27, 28, 29, 30, 31, 32
            y = "[4]"
        Case 33, 34, 35, 36, 37, 38, 39, 40
            y = "[5]"
        Case 41, 42, 43, 44, 45
            y = "[6]"
    End Select
    Select Case myX 'x co-ordinates
        Case 1
            x = "[1]"
        Case 9, 17, 25, 33, 41
            x = ""
        Case 2, 10, 18, 26, 34, 42
            x = "[2]"
        Case 3, 11, 19, 27, 35, 43
            x = "[3]"
        Case 4, 12, 20, 28, 36, 44
            x = "[4]"
        Case 5, 13, 21, 29, 37, 45
            x = "[5]"
        Case 6, 14, 22, 30, 38
            x = "[6]"
        Case 7, 15, 23, 31, 39
            x = "[7]"
        Case 8, 16, 24, 32, 40
            x = "[8]"
    End Select
    'driver.findElementByXPath("//table[@id='GridSelectionsTbl']/tbody/tr" & y & "/td" & x).Click
    'driver.findElementByXPath("//table[@id='GridSelectionsTbl']/tbody/tr[3]/td[3]").Click
    driver.setImplicitWait 5000
    driver.clickAndWait "//table[@id='GridSelectionsTbl']/tbody/tr" & y & "/td" & x

    Next myX
    myCol = myCol + 1
Next Game
End Sub
Sub GLEnterResults()
Dim n(1 To 6) As Long
Dim s(1 To 2) As Long
Dim myselection As Range
Dim myX         As Range
Dim myRecord    As Range
Dim myField     As Range
Dim clCount     As Long
Dim myCol       As Long
Dim myRow       As Long
Dim nCount      As Long
Dim sCount      As Long

'2   13  23  10  7   24  21  8

'The numbers drawn
    n(1) = 20
    n(2) = 13
    n(3) = 44
    n(4) = 2
    n(5) = 1
    n(6) = 39
'And the 2 suppls
    s(1) = 4
    s(2) = 7
'How many games were created (columns)
clCount = 57
'GoTo here:
Set myselection = Range("B3:B20")
For Each myX In myselection
    Select Case myX
        Case n(1), n(2), n(3), n(4), n(5), n(6)
            myX.Interior.ColorIndex = 28
        Case s(1), s(2)
            myX.Interior.ColorIndex = 4
    End Select
Next myX

Set myselection = Range("B23:B38")
For Each myX In myselection
    Select Case myX
        Case n(1), n(2), n(3), n(4), n(5), n(6)
            myX.Interior.ColorIndex = 28
        Case s(1), s(2)
            myX.Interior.ColorIndex = 4
    End Select
Next myX

'here:
For Each myRecord In Range("D2:D7")
        With myRecord
            For Each myField In Range(.Cells(1), Cells(.Row, clCount))
            Select Case myField
                Case n(1), n(2), n(3), n(4), n(5), n(6)
                    myField.Interior.ColorIndex = 28
                Case s(1), s(2)
                    myField.Interior.ColorIndex = 4
            End Select
            Next myField
        End With
Next myRecord
'here:
'now check if there are any winners
For myCol = 4 To clCount
    For myRow = 2 To 7
        If Cells(myRow, myCol).Interior.ColorIndex = 28 Then
            nCount = nCount + 1
        ElseIf Cells(myRow, myCol).Interior.ColorIndex = 4 Then
            sCount = sCount + 1
        End If
    Next myRow
    If nCount > 3 Then
        Cells(myRow + 1, myCol).Interior.ColorIndex = 6
    ElseIf nCount > 2 And sCount > 0 Then
        Cells(myRow + 1, myCol).Interior.ColorIndex = 6
    ElseIf nCount > 0 And sCount > 1 Then
        Cells(myRow + 1, myCol).Interior.ColorIndex = 6
    End If
    nCount = 0
    sCount = 0
Next myCol
End Sub

Attribute VB_Name = "Horses"
Option Explicit
'Public SRRunWhen As Double
'Public BRRunWhen As Double
'Public MRRunWhen As Double
'Public Const cRunIntervalSeconds = 600 ' in seconds
'Public Const SRRunWhat = "SRUpdateOdds"  ' the name of the procedure to run
'Public Const BRRunWhat = "BRUpdateOdds"
'Public Const MRRunWhat = "MRUpdateOdds"
'Public Tote As Boolean
Public Const BF_RunWhat = "AddBetFair"
Dim myTrack As String
Dim theDate As Date
Dim currURL As String 'string of the current meeting for this date
Dim cntMeetings As Long ' a count of the meetings for this date
Dim tabCode As String 'for call RISA procedures
Dim urlName1 As String
Dim urlName2 As String
Dim BFReady As Boolean
Public myBFTime As Date
Dim myCount As Integer
Dim myMessage             As String


Sub GetHorseResults()

On Error Resume Next
    Call getRaceResult
    Call TidySheet
    Call RemInvalidRows
    Call EntTrack
    Call RecRaceNo
    Call RemRaceDet
    Call RemNoResultDet
    Call FinMissingWinner
    Call RemMissingWinner
    Call CalcTimes
  '  Call CalcTimes2
    Call SaveTextFile
    
End Sub
Sub getTables()
    Dim objWeb As QueryTable
    Dim urlName As String
    Dim myrsp As String
    urlName1 = InputBox(Prompt:="Enter URL", Title:="URL")
    urlName = "URL;" & urlName1
    
    
    Set objWeb = ActiveSheet.QueryTables.Add(Connection:=urlName, Destination:=Range("A1"))
    With objWeb
        .WebSelectionType = xlAllTables
        .Refresh BackgroundQuery:=False
        .SaveData = True
    End With
'    With objWeb
'    .WebSelectionType = xlSpecifiedTables
'    .WebTables = "1,2"
'    .Refresh BackgroundQuery:=False
'    .SaveData = True
'    End With
    Set objWeb = Nothing
    
End Sub
Sub getRaceTables(theURL As String)
'getRaceTables(tabCode, myGlobURL)
    Dim objWeb As QueryTable
    Dim urlName As String
Dim objPing As Object
Dim objStatus As Object
Dim Host As String
Dim strReply As Long

    'On Error Resume Next 'don't include this line - ends up skipping races
    'Dim theURL As String
     'Sets the url to run the query and the destination in the excel file
     'You can change both to suit your needs
    'urlName1 = InputBox(Prompt:="Enter URL", Title:="URL")
    'urlName2 = theURL
    'urlName1 = Replace(theURL, "Form.aspx", "Acceptances.aspx")
    'http://www.racingaustralia.horse/FreeFields/Form.aspx?Key=2016Jan16,QLD,Sunshine%20Coast
    'http://www.racingaustralia.horse/FreeFields/Acceptances.aspx?Key=2016Jan16,QLD,Sunshine%20Coast
    'http://www.racingaustralia.horse/FreeFields/Form.aspx?Key=2016Feb11,WA,Bunbury
    '##############
    If InStr(1, theURL, "/Form.aspx") > 0 Then
        urlName2 = theURL
        urlName1 = Replace(theURL, "/Form.aspx", "/Acceptances.aspx")
    ElseIf InStr(1, theURL, "/Acceptances.aspx") > 0 Then
        urlName1 = theURL
        urlName2 = Replace(theURL, "/Acceptances.aspx", "/Form.aspx")
    ElseIf InStr(1, theURL, "/AllForm.aspx") > 0 Then 'added to handle AllForm URL's
        urlName2 = theURL
        urlName1 = Replace(theURL, "/AllForm.aspx", "/Acceptances.aspx")
    Else
        MsgBox ("RECENT FORM or ACCEPTANCES have not been selected, try again")
        End
    End If
    '###############
    urlName = "URL;" & urlName1
    
    Set objWeb = ActiveSheet.QueryTables.Add(Connection:=urlName, Destination:=Range("A1"))
'    Connection:="URL;http://horseracing.bigpondsport.com/todaysracing/fullracecard/tabid/73/meetid/4848/default.aspx", _
'    Destination:=Range("A1"))
    'Host = "203.0.178.191"
    'strReply = 101
    'Do While strReply <> 0

    'Set objPing = GetObject("winmgmts:{impersonationLevel=impersonate}"). _
    '    ExecQuery("Select * from Win32_PingStatus Where Address = '" & Host & "'")
    'For Each objStatus In objPing
            
    '        strReply = objStatus.StatusCode
    '        DoEvents
    'Next objStatus
    'Loop
    
    With objWeb
        .WebSelectionType = xlAllTables
        .Refresh BackgroundQuery:=False
        .SaveData = True
    End With
    Set objWeb = Nothing
    
End Sub

Sub getRaceResult()
    Dim objWeb As QueryTable
    Dim urlName As String
    Dim oHttp As Object
    Dim a As String
    Dim myT As String
    Dim myMon As String 'month
    Dim myDate As String 'date
    Dim myDay As String 'day
    Dim myYear As Long ' year
    Dim myDayNo As String
    
     'Sets the url to run the query and the destination in the excel file
     'You can change both to suit your needs
'    urlName = InputBox(Prompt:="Enter URL", Title:="URL")
    urlName = currURL
'    urlName = "http://horseracing.bigpondsport.com/todaysracing/fullracecard/tabid/73/meetid/5052/default.aspx"
    
' Get the track and the date
    'Set oHttp = CreateObject("MSXML2.XMLHTTP")
    Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
    oHttp.Open "GET", urlName, False
    oHttp.send
    a = oHttp.responseText 'a contains source code of website
    a = RegExpFind(a, "<title>[^.]*", 1, False)
    a = Left(a, Application.Find("|", a, 1) - 1)
    a = Application.WorksheetFunction.Clean(Trim(a))
    a = Replace(a, "<title>", "")
    myMon = Mid(a, InStrRev(a, " ") + 1, Len(a) - InStrRev(a, " ") + 1)
    a = Trim(Replace(a, myMon, ""))
    myDate = Mid(a, InStrRev(a, " ") + 1, Len(a) - InStrRev(a, " ") + 1)
    a = Trim(Replace(a, myDate, ""))
    myDay = Mid(a, InStrRev(a, " ") + 1, Len(a) - InStrRev(a, " ") + 1)
    a = Trim(Replace(a, myDay, ""))
    myTrack = a
' check to see what year it is
'    theDate =
    Select Case myDay
        Case "Sunday"
            myDayNo = "1"
        Case "Monday"
            myDayNo = "2"
        Case "Tuesday"
            myDayNo = "3"
        Case "Wednesday"
            myDayNo = "4"
        Case "Thursday"
            myDayNo = "5"
        Case "Friday"
            myDayNo = "6"
        Case "Saturday"
            myDayNo = "7"
    End Select
    myYear = Year(Date)
    If Weekday(myDate & "-" & myMon & "-" & myYear, vbSunday) = myDayNo Then
        theDate = myDate & "-" & myMon & "-" & myYear
    Else
        theDate = myDate & "-" & myMon & "-" & myYear - 1
    End If
    
    urlName = "URL;" & urlName
    Set objWeb = ActiveSheet.QueryTables.Add(Connection:=urlName, Destination:=Range("A1"))
'    Connection:="URL;http://horseracing.bigpondsport.com/todaysracing/fullracecard/tabid/73/meetid/4848/default.aspx", _
'    Destination:=Range("A1"))
    
    With objWeb
        .WebSelectionType = xlAllTables
        .Refresh BackgroundQuery:=False
        .SaveData = True
    End With
    Set objWeb = Nothing
    
End Sub

Private Sub TidySheet()
    Dim r As Long
    Dim n As Long
    Dim rng As Range


'remove the merged cells
    Cells.Select
    With Selection
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With

'Select Column D Get rid of all blank rows
    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Offset(0, 3).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
'Select Column D Get rid of all header rows
    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Offset(0, 3).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "Br" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
'Select Column A Get rid of all rows where horse Scratched
    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "Scr " Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
'Insert new columns
    Columns("A:A").Select
        Selection.Insert Shift:=xlToRight
        Selection.NumberFormat = "@"
    Columns("B:B").Select
        Selection.Insert Shift:=xlToRight
        Selection.NumberFormat = "dd/mm/yyyy"
    Columns("C:C").Select
        Selection.Insert Shift:=xlToRight
        Selection.NumberFormat = "0"
    Columns("L:L").Select
        Selection.Insert Shift:=xlToRight
        Selection.NumberFormat = "0.0000000000"
        Selection.ColumnWidth = 18

End Sub
Private Sub RemInvalidRows()
    Dim r As Long
    Dim n As Long
    Dim rng As Range

'Select Column F Get rid of any horses that have nothing in D Col
    Range("F1:F" & Range("F" & Rows.count).End(xlUp).Row).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value <> "" Then
                If IsEmpty(rng.Rows(r).Offset(0, -2)) Then
                    rng.Rows(r).EntireRow.Delete
                End If
            End If
        Next r

End Sub

Private Sub EntTrack()
    Dim myselection As Range
    Dim myX As Range
    Dim sTrack As String
    Dim dDate As Date
    Dim vDist As Long
'get track and date from User Input
'    strack = InputBox(Prompt:="Enter TRACK", Title:="TRACK")
'    ddate = InputBox(Prompt:="Enter DATE", Title:="DATE")

'enter data for the new Cols, using D to set values
    Set myselection = Range("D1:D" & Range("D" & Rows.count).End(xlUp).Row).Offset(0, -3)
        For Each myX In myselection 'Col A
            If IsEmpty(myX.Offset(0, 3)) Then
                vDist = Left(myX.Offset(0, 6), Application.Find(" ", myX.Offset(0, 6)))
            End If
                myX = UCase(myTrack)
                myX.Offset(0, 1) = theDate
                myX.Offset(0, 2) = vDist
        Next myX

End Sub

Private Sub RecRaceNo()
    Dim myselection As Range
    Dim myX As Range
    Dim myRace As String
'get the race no from D Col and fill that down N Col
'using G to find the end of the sheet
    Set myselection = Range("G1:G" & Range("G" & Rows.count).End(xlUp).Row).Offset(0, -3)
        For Each myX In myselection 'Col A
            If Left(myX, 4) = "Race" Then
                myRace = Replace(myX, "Race ", "")
                myRace = Trim(myRace)
            End If
                myX.Offset(0, 10) = myRace
        Next myX

End Sub
Private Sub RemRaceDet()
    Dim r As Long
    Dim n As Long
    Dim rng As Range

'Select Column F Get rid of all blank rows using G to find end of sheet
    Range("G1:G" & Range("G" & Rows.count).End(xlUp).Row).Offset(0, -1).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r

End Sub
Private Sub RemNoResultDet()
    Dim r As Long
    Dim n As Long
    Dim rng As Range

'Select Column K Get rid of all rows where there is no result
    Range("F1:F" & Range("F" & Rows.count).End(xlUp).Row).Offset(0, 5).Select
    Set rng = Selection 'col K
        For r = rng.Rows.count To 1 Step -1
            If Trim(Application.Substitute(rng.Rows(r).value, "L", "")) = "" Then
 '           If rng.Rows(r).Value = "" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r

End Sub
Private Sub FinMissingWinner()
' used to remove all records where the winning time is missing.
    Dim myselection As Range
    Dim myX As Range
    Dim x As String
'using N look to see if there is a winner for that race
    Set myselection = Range("N1:N" & Range("N" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'Col N
            
            If myX.Offset(0, -3).NumberFormat <> "mm:ss.0" Then
                If myX.Row = "1" Then 'if it is the first row
                    myX.value = ""
                ElseIf myX <> myX.Offset(-1, 0) Then
                    myX.value = ""
                End If
            End If
        Next myX

End Sub
Private Sub RemMissingWinner()
    Dim r As Long
    Dim n As Long
    Dim rng As Range

'Select Column N Get rid of all blank rows using G to find end of sheet
    Range("G1:G" & Range("G" & Rows.count).End(xlUp).Row).Offset(0, 7).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
'Move the Race No over to Col M
    Columns("M:M").Select
        Selection.Delete Shift:=xlToLeft
        Selection.NumberFormat = "@"

End Sub
Private Sub CalcTimes()
    Dim myselection As Range
    Dim myX As Range
    Dim vDist As Double
    Dim vDistCalc As Double
    Dim vLenBehind As Double
    Dim vSpeed As Double
    Dim vTime As Date
    Dim vSeconds As Double
    Dim vCalcTime As Date ' calculated time
    Dim vWeight As Double

'enter data for L Col, using K to set values
    Set myselection = Range("K1:K" & Range("K" & Rows.count).End(xlUp).Row).Offset(0, 1)
        For Each myX In myselection 'Col L
            If myX.Offset(0, -1).NumberFormat = "mm:ss.0" Then
                vTime = myX.Offset(0, -1)
                vDist = myX.Offset(0, -9)
                vWeight = myX.Offset(0, -2) - 50 'KGs over 50kg
                vDistCalc = vDist + ((vWeight / 1.5) * 2.4)
                vSeconds = Minute(myX.Offset(0, -1)) * 60 + Second(myX.Offset(0, -1))
                vSpeed = vDistCalc / vSeconds ' Metres per second
            Else
                vLenBehind = Application.Substitute(myX.Offset(0, -1), "L", "") * 2.4
                vDist = myX.Offset(0, -9) - vLenBehind
                vWeight = myX.Offset(0, -2) - 50 'kgs over 50
                vDistCalc = vDist + ((vWeight / 1.5) * 2.4)
                vSpeed = vDistCalc / vSeconds ' metres per second
            End If
'                vWeight = myX.Offset(0, -2)
                myX = vSpeed
'                myX.Offset(0, 2) = vDist
        Next myX

End Sub
Private Sub CalcTimes2()
'testing creating the MPS without taking into account weight
    Dim myselection As Range
    Dim myX As Range
    Dim vDist As Double
    Dim vDistCalc As Double
    Dim vLenBehind As Double
    Dim vSpeed As Double
    Dim vTime As Date
    Dim vSeconds As Double
    Dim vCalcTime As Date ' calculated time
    Dim vWeight As Double

'enter data for L Col, using K to set values
    Set myselection = Range("K1:K" & Range("K" & Rows.count).End(xlUp).Row).Offset(0, 1)
        For Each myX In myselection 'Col L
            If myX.Offset(0, -1).NumberFormat = "mm:ss.0" Then
                vTime = myX.Offset(0, -1)
                vDist = myX.Offset(0, -9)
              '  vWeight = myX.Offset(0, -2) - 50 'KGs over 50kg
                vDistCalc = vDist '+ ((vWeight / 1.5) * 2.4)
                vSeconds = Minute(myX.Offset(0, -1)) * 60 + Second(myX.Offset(0, -1))
                vSpeed = vDistCalc / vSeconds ' Metres per second
            Else
                vLenBehind = Application.Substitute(myX.Offset(0, -1), "L", "") * 2.4
                vDist = myX.Offset(0, -9) - vLenBehind
            '    vWeight = myX.Offset(0, -2) - 50 'kgs over 50
                vDistCalc = vDist ' + ((vWeight / 1.5) * 2.4)
                vSpeed = vDistCalc / vSeconds ' metres per second
            End If
'                vWeight = myX.Offset(0, -2)
                myX = vSpeed
'                myX.Offset(0, 2) = vDist
        Next myX

End Sub
Private Sub SaveTextFile()
    
        Const Delimiter As String = "^" 'or "|,", vbTab, etc.
        Dim myRecord As Range
        Dim myField As Range
        Dim nFileNum As Long
        Dim sOut As String
        Dim fileSaveName As String
        Dim lnCount As Integer
        Dim clCount As Integer
         
    Columns("A:M").Select
    Selection.Columns.AutoFit '

' Outputs a delimited file with the delimiter being set as the first variable
        ' Obtain how many rows and columns are being loaded
'        lnCount = InputBox("How many Rows are you loading")
'        clCount = InputBox("How many Columns are you loading")
        clCount = 13

' Name the file and where to save it
'        fileSaveName = Application.GetSaveAsFilename( _
'            fileFilter:="Text Files (*.txt), *.txt")
            fileSaveName = "C:\FILES\Horses\CurrentUpload.txt"

        nFileNum = FreeFile
        If Dir("C:\FILES\Horses\CurrentUpload.txt") <> "" Then
'            fileSaveName = "F:\FILES\Horses\CurrentUpload.txt"
            Open fileSaveName For Append As #nFileNum
        Else
'            fileSaveName = SaveAsFilename("F:\FILES\Horses\CurrentUpload.txt")
            Open fileSaveName For Output As #nFileNum
        End If
        For Each myRecord In Range("A1:A" & _
                Range("A" & Rows.count).End(xlUp).Row)
           With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
                   sOut = sOut & Delimiter & Trim(myField.text)
                 Next myField
                    sOut = Mid(sOut, 2) ' this take off the first delimiter
'                Print #nFileNum, Mid(sOut, 2)
                 Print #nFileNum, sOut
                sOut = Empty
            End With
        Next myRecord
        Close #nFileNum
'close this sheet
ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
Workbooks.Add

End Sub

Sub GetNextRaceMeeting()
'2/6/16 created sheet 01 Todays Meetings to process all races at the one time.
'01 Todays Meetings.xls
Dim myselection         As Range
Dim myX                 As Range
Dim myY                 As Range
Dim y                   As String 'URL
Dim filter              As Boolean
Dim qPrevFile           As Integer
Dim q2File              As Integer
'Dim fso             As Object
Dim CodeFileName        As String
Dim FileNum             As Integer


If Len(Dir("C:\FILES\Horses\Risa\*R.txt")) > 0 _
    Or Len(Dir("C:\FILES\Horses\Risa\*Risa.txt")) > 0 Then
    qPrevFile = MsgBox("The directory C:\FILES\Horses\Risa is not empty, add to it?", vbYesNo, "NextMeeting")
    If qPrevFile = vbNo Then
        q2File = MsgBox("Delete old race/stat files? (any currentupload file will NOT be deleted)", vbYesNo, "Delete Old Files")
        If q2File = vbNo Then
            End
        ElseIf q2File = vbYes Then
            'Set fso = CreateObject("Scripting.FileSystemObject")
            If Len(Dir("C:\FILES\Horses\Risa\*Risa.txt")) > 0 Then
                Kill "C:\FILES\Horses\Risa\*Risa.txt"
                'fso.DeleteFile "C:\FILES\Horses\Risa\*Risa.txt", True
            End If
            If Len(Dir("C:\FILES\Horses\Risa\*R.txt")) > 0 Then
                Kill "C:\FILES\Horses\Risa\*R.txt"
                'fso.DeleteFile "C:\FILES\Horses\Risa\*R.txt", True
            End If
            'Set fso = Nothing
        End If
    End If
End If
'
'Set fso = CreateObject("Scripting.FileSystemObject")
'    fso.DeleteFile IDMTifs & "\*.*", True
'    Set fso = Nothing
'
If ActiveWorkbook.name <> "01 Todays Meetings.xls" Then
    MsgBox ("The worksheet '01 Todays Meetings.xls' is not the current sheet")
    Exit Sub
End If
    filter = Cells(1, 4)
'####
CodeFileName = "C:\FILES\Horses\CurrentCodes.txt"

FileNum = FreeFile
Open CodeFileName For Output As #FileNum '
'####
For Each myY In Range("B3:B" & Range("B" & Rows.count).End(xlUp).Row)
    If InStr(1, myY, "Form.aspx") = 0 Then
        MsgBox ("The URL for " & myY.Offset(0, -1) & " is NOT set for the racing form!!!")
        End
    End If
Next myY
Set myselection = Range("A3:A" & Range("A" & Rows.count).End(xlUp).Row)
For Each myX In myselection 'Col A
    If myX.value <> "" Then
        tabCode = UCase(myX.value)
        y = myX.Offset(0, 1).value
        Print #FileNum, tabCode & "|" & myX.Offset(0, 5)
        Workbooks.Add
'On Error Resume Next
        Call getRaceTables(y)
        Call NRTidySheet
        Call NREntRace
        Call NRfinTidySheet
        Call NRFixHorseNames
        Call SaveNRTextFile(tabCode)
        Call RISA_RaceDay(tabCode, urlName2, filter)
    'Call StopProcess("iexplore.exe")
    End If
Next myX
Close #FileNum
End Sub
Private Function StopProcess(strTerminateThis As String)
On Error Resume Next

Dim objWMIcimv2 As Object
Dim objProcess As Object
Dim objList As Object
Dim intError As Integer
     
Set objWMIcimv2 = GetObject("winmgmts:" _
    & "{impersonationLevel=impersonate}!\\.\root\cimv2")
     
Set objList = objWMIcimv2.ExecQuery _
    ("select * from win32_process where name='" & strTerminateThis & "'")

If objList.count <> 0 Then
    For Each objProcess In objList
        intError = objProcess.Terminate
    Next
    Set objProcess = Nothing
End If

Set objWMIcimv2 = Nothing
Set objList = Nothing

End Function
Private Sub NRTidySheet()
    Dim r As Long
    Dim n As Long
    Dim rng As Range

Cells.Hyperlinks.Delete
'Select Column A Get rid of all blank rows
    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
'Select Column A Get rid of all header rows
    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "No" Then
                rng.Rows(r).EntireRow.Delete
'following to fix VIC result data
            ElseIf InStr(1, rng.Rows(r).value, "Item") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Day of nominations close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "after nominations close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Day before acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "after acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Race Day") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Day of acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
'VIC done
            End If
        Next r
End Sub
' 10/3/19 added extra column to include race value
Private Sub NREntRace()
'updated 04/02/2016 to handle "Times displayed in local time of Race Meeting" added to distance
    Dim myselection As Range
    Dim myX As Range
    Dim sRace As String
    Dim sValue As String
    Dim vDist As String

'Insert new columns
    Columns("A:C").Select
        Selection.Insert Shift:=xlToRight
        Selection.NumberFormat = "0"
'    Columns("B:B").Select
'        Selection.Insert Shift:=xlToRight
'        Selection.NumberFormat = "0"

'enter data for the new Cols, using C to set values
    Set myselection = Range("D1:D" & Range("D" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'Col D
 '           If IsEmpty(myX) Then
'            If InStr(1, myX, "Race") > 0 Then
            If Left(LCase(myX), 4) = "race" Then
                sRace = Left(myX, Application.Find("-", myX) - 2)
                sRace = Replace(sRace, "Race ", "")
                sRace = Trim(sRace)
 '               vDist = Mid(myX, Application.Find(Chr(40), myX) + 1, Len(myX) - (Application.Find(Chr(40), myX) + 1))
                'vDist = Mid(myX, InStrRev(myX, Chr(40)) + 1, Len(myX) - InStrRev(myX, Chr(40)) - 1)
                vDist = Mid(myX, InStrRev(myX, Chr(40)) + 1, Len(myX) - InStrRev(myX, Chr(40)))
                vDist = Left(vDist, InStr(1, vDist, Chr(41)) - 1)
                vDist = Replace(vDist, " METRES", "")
                vDist = Trim(vDist)
            'ElseIf Left(LCase(myX), 4) = "of $" Then
                sValue = Left(LCase(myX.Offset(1, 0)), InStr(1, myX.Offset(1, 0), ",") - 1)
                sValue = Replace(sValue, "of $", "")
            End If
                myX.Offset(0, -3) = sRace
                myX.Offset(0, -2) = vDist
                myX.Offset(0, -1) = sValue
        Next myX

End Sub
Private Sub NRfinTidySheet()

    Dim r As Long
    Dim n As Long
    Dim rng As Range


'Select Column F Get rid of all blank rows
    Range("F1:F" & Range("F" & Rows.count).End(xlUp).Row).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
End Sub
Private Sub NRFixHorseNames()
    Dim myselection As Range
    Dim myX As Range
    Dim myHorseName As String

' Look down col F and remove the country from after the horse name
    Set myselection = Range("F1:F" & Range("F" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'Col F
            myHorseName = UCase(myX.value)
            If InStr(1, myHorseName, "BOBS BONUS") Then 'NSW
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "BOBS BONUS") - 1)
            End If
            If InStr(1, myHorseName, "BOBS EXTRA") Then 'NSW
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "BOBS EXTRA") - 1)
            End If
            If InStr(1, myHorseName, "SUPER VOBIS") Then 'VIC
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "SUPER VOBIS") - 1)
            End If
            If InStr(1, myHorseName, "VOBIS GOLD BONUS SCHEME") Then 'VIC
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "VOBIS GOLD BONUS SCHEME") - 1)
            End If
            If InStr(1, myHorseName, "QTIS BONUS") Then 'QLD
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "QTIS BONUS") - 1)
            End If
            If InStr(1, myHorseName, "SABOIS BONUS") Then 'SA
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "SABOIS BONUS") - 1)
            End If
            If InStr(1, myHorseName, "SABIS BONUS") Then 'SA
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "SABIS BONUS") - 1)
            End If
            If InStr(1, myHorseName, "TROBIS BONUS SCHEME") Then 'NT
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "TROBIS BONUS SCHEME") - 1)
            End If
            If InStr(1, myHorseName, "TASBONUS BONUS SCHEME") Then 'TAS
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "TASBONUS BONUS SCHEME") - 1)
            End If
            If InStr(1, myHorseName, "CANBOBS") Then 'ACT
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "CANBOBS") - 1)
            End If
            If InStr(1, myHorseName, "WESTSPEED BONUS SCHEME") Then 'WA
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "WESTSPEED BONUS SCHEME") - 1)
            End If
            If InStr(1, myHorseName, "WESTSPEED OWNER STANDARD") Then 'WA
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "WESTSPEED OWNER STANDARD") - 1)
            End If
            If InStr(1, myHorseName, "WESTSPEED OWNER EXTRA") Then 'WA
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "WESTSPEED OWNER EXTRA") - 1)
            End If
            If InStr(1, myHorseName, "WESTSPEED BREEDER ONLY") Then 'WA
               myHorseName = Left(myHorseName, InStr(1, myHorseName, "WESTSPEED BREEDER ONLY") - 1)
            End If
            '
            '
            'myHorseName = Replace(myHorseName, "(NZ)", "")
            'myHorseName = Replace(myHorseName, "(IRE)", "")
            'myHorseName = Replace(myHorseName, "(GB)", "")
            'myHorseName = Replace(myHorseName, "(USA)", "")
            'myHorseName = Replace(myHorseName, "(GER)", "")
            'myHorseName = Replace(myHorseName, "(FR)", "")
            'myHorseName = Replace(myHorseName, "(SAF)", "")
            'myHorseName = Replace(myHorseName, "(JPN)", "")
            'myHorseName = Replace(myHorseName, "(ARG)", "")
            'myHorseName = Replace(myHorseName, "(AUT)", "")
 '           myX = Replace(myX, "(NZ)", "")
            myHorseName = Application.WorksheetFunction.Clean(Trim(myHorseName))
            myX = myHorseName
' fix the weight in col J
            myX.Offset(0, 4) = Replace(myX.Offset(0, 4), "kg", "")
            myX.Offset(0, 4) = Application.WorksheetFunction.Clean(Trim(myX.Offset(0, 4)))
        Next myX

End Sub

Private Sub SaveNRTextFile(tabCode)
'testing
'Private Sub SaveNRTextFile()
'tabCode = "WR"
'SaveNRTextFile(tabCode, myGlobURL)
        Const Delimiter As String = "^" 'or "|,", vbTab, etc.
        Dim myRecord As Range
        Dim myField As Range
        Dim nFileNum As Long
        Dim sOut As String
        Dim fileSaveName As String
        Dim lnCount As Integer
        Dim clCount As Integer
        'Dim strack As String
         
    Columns("A:L").Select
    Selection.Columns.AutoFit '

' Outputs a delimited file with the delimiter being set as the first variable
        ' Obtain how many rows and columns are being loaded
'        lnCount = InputBox("How many Rows are you loading")
'        clCount = InputBox("How many Columns are you loading")
        clCount = 12

'get track from User Input
'    tabCode = InputBox(Prompt:="Enter BR SR or MR", Title:="BR SR or MR")
'    tabCode = UCase(tabCode)

' Name the file and where to save it
'        fileSaveName = Application.GetSaveAsFilename( _
'            fileFilter:="Text Files (*.txt), *.txt")
            fileSaveName = "C:\FILES\Horses\Risa\" & tabCode & ".txt"

        nFileNum = FreeFile
        If Dir("C:\FILES\Horses\Risa\" & tabCode & ".txt") <> "" Then
            Kill fileSaveName
 '           Open fileSaveName For Append As #nFileNum
        End If
'            fileSaveName = SaveAsFilename("F:\FILES\Horses\CurrentUpload.txt")
            Open fileSaveName For Output As #nFileNum
        For Each myRecord In Range("A1:A" & _
                Range("A" & Rows.count).End(xlUp).Row)
           With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
                   sOut = sOut & Delimiter & Trim(myField.text)
                 Next myField
                    sOut = Mid(sOut, 2) ' this take off the first delimiter
'                Print #nFileNum, Mid(sOut, 2)
                 Print #nFileNum, sOut
                sOut = Empty
            End With
        Next myRecord
        Close #nFileNum
'close this sheet
ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
Workbooks.Add

End Sub

Private Sub SRUpdateOdds()
' all these odds checkers work
    Dim myselection As Range
    Dim myX As Range
    Dim colCount As Long
    Dim rowNum As Long
    Dim myOdds As String
'    Dim ddate As Date
'    Dim vDist As Long
Workbooks("RaceDay SR.xls").Activate
Sheets("SRSummary").Select
colCount = Range("IV1").End(xlToLeft).Column
'enter data for the new Cols, using A to set values
    Set myselection = Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'col A
            
            Select Case myX
                Case "Race"
                    myX.Offset(0, colCount) = Time()
                Case "1"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR1").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "2"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR2").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "3"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR3").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "4"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR4").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "5"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR5").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "6"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR6").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "7"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR7").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "8"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR8").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "9"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR9").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "10"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR10").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                End Select
                If myX.Offset(0, colCount) < myX.Offset(0, colCount - 1) Then
                    myX.Offset(0, colCount).Interior.ColorIndex = 6
                End If
        Next myX
'    SRStartTimer
End Sub

Private Sub SRStartTimer()
    'SRRunWhen = Now + TimeSerial(0, 0, cRunIntervalSeconds)
    'Application.OnTime EarliestTime:=SRRunWhen, Procedure:=SRRunWhat, _
        Schedule:=True
End Sub
Private Sub SRStopTimer()
    'On Error Resume Next
    'Application.OnTime EarliestTime:=SRRunWhen, Procedure:=SRRunWhat, _
        Schedule:=False
End Sub
Private Sub MRUpdateOdds()
    Dim myselection As Range
    Dim myX As Range
    Dim rng As Range
    Dim col As Integer
    Dim colCount As Long
    Dim rowNum As Long
    Dim myOdds As Variant
    Dim myhorse As Variant
'    Dim ddate As Date
'    Dim vDist As Long
Workbooks("RaceDay MR.xls").Activate
Sheets("MRSummary").Select
colCount = Range("IV1").End(xlToLeft).Column
'enter data for the new Cols, using A to set values
    Set myselection = Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'col A
          On Error Resume Next
            Select Case myX
                Case "Race"
                    myX.Offset(0, colCount) = Time()
                Case "1"
 '                   myHorse = myX.Offset(0, 1) ' horse number
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
 '                   col = 7
'                    Set rng = Sheets("MR1").Columns("P:W")
'                    Set rng = Sheets("MR1").Columns("P:W")
'                    myOdds = Application.VLookup(myHorse, rng, col, False)
                    myOdds = Sheets("MR1").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "2"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR2").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "3"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR3").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "4"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR4").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "5"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR5").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "6"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR6").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "7"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR7").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "8"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR8").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "9"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR9").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "10"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("MR10").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                End Select
                If myX.Offset(0, colCount) < myX.Offset(0, colCount - 1) Then
                    myX.Offset(0, colCount).Interior.ColorIndex = 6
                End If
        Next myX
'    MRStartTimer
End Sub

Private Sub MRStartTimer()
    'SRRunWhen = Now + TimeSerial(0, 0, cRunIntervalSeconds)
    'Application.OnTime EarliestTime:=MRRunWhen, Procedure:=MRRunWhat, _
        Schedule:=True
End Sub
Private Sub MRStopTimer()
    On Error Resume Next
    'Application.OnTime EarliestTime:=MRRunWhen, Procedure:=MRRunWhat, _
        Schedule:=False
End Sub

Private Sub getRaceTables_2()
' just a working area
    Dim objWeb As QueryTable
    
    Dim urlName As String
    Dim oHttp As Object
    Dim a As String
    Dim myT As String
'    Dim Title As Object
    Dim myMon As String 'month
    Dim myDate As String 'date
    Dim myDay As String 'day
    Dim myYear As Long ' year
    Dim myDayNo As String
    
     'Sets the url to run the query and the destination in the excel file
     'You can change both to suit your needs
'    urlName = InputBox(Prompt:="Enter URL", Title:="URL")
    urlName = "http://horseracing.bigpondsport.com/todaysracing/fullracecard/tabid/73/meetid/5052/default.aspx"
    
' Get the track and the date
    'Set oHttp = CreateObject("MSXML2.XMLHTTP")
    Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
    oHttp.Open "GET", urlName, False
    oHttp.send
    a = oHttp.responseText 'a contains source code of website
    a = RegExpFind(a, "<title>[^.]*", 1, False)
    a = Left(a, Application.Find("|", a, 1) - 1)
    a = Application.WorksheetFunction.Clean(Trim(a))
    a = Replace(a, "<title>", "")
    myMon = Mid(a, InStrRev(a, " ") + 1, Len(a) - InStrRev(a, " ") + 1)
    a = Trim(Replace(a, myMon, ""))
    myDate = Mid(a, InStrRev(a, " ") + 1, Len(a) - InStrRev(a, " ") + 1)
    a = Trim(Replace(a, myDate, ""))
    myDay = Mid(a, InStrRev(a, " ") + 1, Len(a) - InStrRev(a, " ") + 1)
    a = Trim(Replace(a, myDay, ""))
    myTrack = a
' check to see what year it is
'    theDate =
    Select Case myDay
        Case "Sunday"
            myDayNo = "1"
        Case "Monday"
            myDayNo = "2"
        Case "Tuesday"
            myDayNo = "3"
        Case "Wednesday"
            myDayNo = "4"
        Case "Thursday"
            myDayNo = "5"
        Case "Friday"
            myDayNo = "6"
        Case "Saturday"
            myDayNo = "7"
    End Select
    myYear = Year(Date)
    If Weekday(myDate & "-" & myMon & "-" & myYear, vbSunday) = myDayNo Then
        theDate = myDate & "-" & myMon & "-" & myYear
    Else
        theDate = myDate & "-" & myMon & "-" & myYear - 1
    End If
    
    
    urlName = "URL;" & urlName
    Set objWeb = ActiveSheet.QueryTables.Add(Connection:=urlName, Destination:=Range("A1"))
'    Connection:="URL;http://horseracing.bigpondsport.com/todaysracing/fullracecard/tabid/73/meetid/4848/default.aspx", _
'    Destination:=Range("A1"))
    
    With objWeb
        .WebSelectionType = xlAllTables
        .Refresh BackgroundQuery:=False
        .SaveData = True
    End With
    Set objWeb = Nothing
    
End Sub

Function RegExpFind(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function
Function RegExpFind2(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind2 = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind2 = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
        cntMeetings = TheMatches.count ' count how many matches
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind2 = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind2 = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind2 = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind2 = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function
Sub SetupInit()
'runs the initial setup scripts in sequence starting with files in the Horses\TempRaces directory
Dim strPath         As String
Dim strNewPath      As String
Dim vaFileName      As Variant
Dim sFileName       As String
Dim sYear           As String
Dim sMonth          As String
Dim FSO             As Object

Dim objFSO As Object
Dim objFolder As Object
Dim objFile As Object
Dim i As Integer
Dim ffilename As String
Dim nrFiles As Integer
Dim ffilenameNew As String

Dim Delimiter As String
Dim TextFile As Integer
Dim FileContent As String
Dim LineArray() As String
Dim myCode As String
Dim myTrack As String
Dim wkCode As String
Dim y As Integer


Set FSO = CreateObject("Scripting.FileSystemObject")
sYear = Format(Date, "yyyy")
sMonth = Format(Date, "mm mmm")
strPath = "C:\FILES\Horses\TempRaces\"
strNewPath = "C:\FILES\Horses\Results\" & sYear & "\" & sMonth & "\Sheets\"
If Not FSO.FolderExists("C:\FILES\Horses\Results\" & sYear) Then
    FSO.CreateFolder ("C:\FILES\Horses\Results\" & sYear)
End If
If Not FSO.FolderExists("C:\FILES\Horses\Results\" & sYear & "\" & sMonth) Then
    FSO.CreateFolder ("C:\FILES\Horses\Results\" & sYear & "\" & sMonth)
End If
If Not FSO.FolderExists("C:\FILES\Horses\Results\" & sYear & "\" & sMonth & "\Sheets\") Then
    FSO.CreateFolder ("C:\FILES\Horses\Results\" & sYear & "\" & sMonth & "\Sheets\")
End If
' Calculate the days costings
'Possible = 0
'Probable = 0

On Error Resume Next

'build the raceday URL reference sheet for scratchings
'Call HorsesBets.Costings
Call Risa.BuildURLfile

Set objFolder = FSO.GetFolder(strPath)
If objFolder.Files.count > 0 Then
    nrFiles = objFolder.Files.count
   ' i = 1
    For Each objFile In objFolder.Files
        'Debug.Print objFile
        'If InStr(1, objFile, sYear & "-" & sMonth & "-" & sDay) > 0 Then
        ffilename = objFile  ''<-Change is here''
        If Len(ffilename) <> 43 Then GoTo skipAddingTrack:
        'Debug.Print ffilename
        'C:\FILES\Horses\TempRaces\2019-03-02 AR.xls
            wkCode = Mid(ffilename, InStr(1, ffilename, ".") - 2, 2)
        'https://tab.ubet.com/racing/horse-racing/Sunshine-Coast-BR/Race-1/Win?Date=20190303
'------------

            Delimiter = "|"
        'FilePath = "C:\FILES\Horses\CurrentCodes.txt"
            TextFile = FreeFile
            Open "C:\FILES\Horses\CurrentCodes.txt" For Input As TextFile
            FileContent = Input(LOF(TextFile), TextFile)
            Close TextFile
        
            LineArray() = Split(FileContent, vbCrLf)
            For y = LBound(LineArray) To UBound(LineArray)
                If Len(Trim(LineArray(y))) <> 0 Then
                    myCode = Split(LineArray(y), Delimiter)(0)
                    If LCase(wkCode) = LCase(myCode) Then
                        myTrack = Split(LineArray(y), Delimiter)(1)
                        Exit For
                    End If
                End If
            Next y
        'End If
        If myTrack = "" Then
            'MsgBox "The track for code " & wkCode & " is not found in CurrentCodes.txt"
            End
        End If
        myTrack = Replace(myTrack, " ", "-")
        ffilenameNew = Replace(ffilename, wkCode, myTrack & "-" & wkCode)
        'Debug.Print ffilenameNew
        Name ffilename As ffilenameNew
'------------
'i = i + 1
        'End If
skipAddingTrack:
    Next objFile
Else
    'MsgBox "There were no Files found."
End If
' rename the sheets
'With Application.FileSearch
'    .NewSearch
'    .LookIn = strPath
'    .SearchSubFolders = False
'    .FileName = ".xls"

'    If .Execute > 0 Then
'        For Each vaFilename In .FoundFiles
'            sFileName = Replace(vaFilename, strPath, "")
'            sFileName = Trim(sFileName)
'            'Name strPath & sFileName As strPath & Format(Date, "yyyy-mm-dd") & " " & sFileName
'            Name strPath & sFileName As strPath & sFileName
'        Next vaFilename
'    End If
'End With

'open and process the sheets
With Application.FileSearch
    .NewSearch
    .LookIn = strPath
    .SearchSubFolders = False
    .fileName = ".xls"

    If .Execute > 0 Then
        For Each vaFileName In .FoundFiles
            Workbooks.Open vaFileName
            Call SetupMeetingSheet
            Call HighlightJockeys
            Call EnterScratchings
            Call AdjustMPSforThisRace 'adjust the MPS for this distance
            Call UpdateSheet
            Call checkWatchedHorses
            ActiveWorkbook.Save
            ActiveWorkbook.Close False
            
        Next vaFileName
    End If
End With

'move the sheets
With Application.FileSearch
    .NewSearch
    .LookIn = strPath
    .SearchSubFolders = False
    .fileName = ".xls"

    If .Execute > 0 Then
        For Each vaFileName In .FoundFiles
            sFileName = Replace(vaFileName, strPath, "")
            sFileName = Trim(sFileName)
            Name strPath & sFileName As strNewPath & sFileName
        Next vaFileName
    End If
End With
'Call HorsesBets.Costings
If myMessage <> "" Then
    Call sendEmail(myMessage)
End If
End Sub
Sub SetupMeetingSheet()
'
' Sets up the spreadsheet for the Next Horse Meeting
Dim myselection         As Range
Dim myX                 As Range
Dim lastRow             As Long
'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Cells.Select
    Selection.ClearOutline
    Cells.Select
    Selection.RowHeight = 13.5
    Columns("N:N").NumberFormat = "h:mm:ss"
   ' Selection.NumberFormat = "0.00"
    If LCase(Range("T1")) = "hvalue" Then
        Columns("T:U").Insert Shift:=xlToRight
    End If
'    If LCase(Range("W1")) = "mps600" Then
'        Columns("W:Y").Insert Shift:=xlToRight
'    End If
    Range("A2").Select
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$1:$1"
        .PrintTitleColumns = ""
    End With
    lastRow = (Range("D" & Rows.count).End(xlUp).Row)
    ActiveSheet.PageSetup.PrintArea = "A1:AM" & lastRow

'    ActiveSheet.PageSetup.PrintArea = ""
    With ActiveSheet.PageSetup
        .CenterHeader = "&F"
        .LeftMargin = Application.InchesToPoints(0.196850393700787)
        .RightMargin = Application.InchesToPoints(0.196850393700787)
        .TopMargin = Application.InchesToPoints(0.393700787401575)
        .BottomMargin = Application.InchesToPoints(0.393700787401575)
        .HeaderMargin = Application.InchesToPoints(0.196850393700787)
        .FooterMargin = Application.InchesToPoints(0.196850393700787)
        .PrintHeadings = False
        .PrintGridlines = True
        .PrintComments = xlPrintNoComments
       ' .PrintQuality = 600
        .CenterHorizontally = False
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = False
        .PrintErrors = xlPrintErrorsDisplayed
     End With
    Range("E2").Select
    ActiveWindow.FreezePanes = True
'    set columns width
    Columns("A:A").ColumnWidth = 4
    Columns("B:B").ColumnWidth = 4.85
    Columns("C:C").ColumnWidth = 4
    
    Columns("D:D").ColumnWidth = 3
    Columns("E:E").ColumnWidth = 8.6
    Columns("F:F").ColumnWidth = 16
    Columns("G:G").ColumnWidth = 10
    Range("H:I, M:M").ColumnWidth = 4.5
    Columns("J:J").ColumnWidth = 8.5
    Columns("K:K").ColumnWidth = 9
    Columns("L:L").ColumnWidth = 5.5
    Range("N:N").ColumnWidth = 6
    Range("Q:Q").ColumnWidth = 10
    Range("O:P, R:S, Z:Z").ColumnWidth = 6
    Range("T:U").ColumnWidth = 4
    Range("V:V").ColumnWidth = 3.5
    Columns("W").ColumnWidth = 6
    Range("AB:AD").ColumnWidth = 5
    'Range("AC:AC").ColumnWidth = 1
    'Range("AE:AE").ColumnWidth = 4
    'Range("AQ:AQ").ColumnWidth = 9
' update mps600 if blank or < MPS, with MPS
    Columns("W:W").NumberFormat = "0.000"
    Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col D
            If myX.Offset(0, 19) = "" And myX.Offset(0, 11) <> "" Then
                myX.Offset(0, 19) = myX.Offset(0, 11)
            ElseIf myX.Offset(0, 19) < myX.Offset(0, 11) And myX.Offset(0, 11) <> "" Then
                myX.Offset(0, 19) = myX.Offset(0, 11)
            End If
        Next myX

'turn screen updating back on
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub
Private Sub checkWatchedHorses()

Dim emailThis           As String
Dim myselection         As Range
Dim myX                 As Range
Dim TextFile            As Integer
Dim FilePath            As String
Dim FileContent         As String
Dim sSheet              As String
'Dim myMessage             As String
Dim raceNo              As String
Dim horseNo             As String
Dim foundsome           As Boolean

foundsome = False
'Delimiter = "|"
FilePath = "C:\FILES\Horses\Watched Horses.txt"
  
'Open the text file in a Read State
TextFile = FreeFile
Open FilePath For Input As TextFile
  
'Store file content inside a variable
FileContent = Input(LOF(TextFile), TextFile)

'Close Text File
Close TextFile
sSheet = ActiveWorkbook.name
'myMessage = sSheet & vbCrLf
Set myselection = Range("F2:F" & Range("F" & Rows.count).End(xlUp).Row) 'Horsename
    For Each myX In myselection 'Col D
        If myX = "" Then
            raceNo = myX.Offset(0, -5)
        Else
            If InStr(1, FileContent, "^" & myX & "^") > 0 Then 'exact match
                horseNo = myX.Offset(0, -2)
                myMessage = myMessage & vbCrLf & sSheet & vbCrLf & myX & " R" & raceNo & " No " & horseNo & vbCrLf
                horseNo = ""
                'foundsome = True
            End If
        End If
    Next myX
'If foundsome = True Then
'    sendEmail (myMessage)
'End If
End Sub
Private Sub sendEmail(eMessage As String)
'sends email from excel - works well
    Dim iMsg As Object
    Dim iConf As Object
    Dim strbody As String
    Dim Flds As Variant

    Set iMsg = CreateObject("CDO.Message")
    Set iConf = CreateObject("CDO.Configuration")

        iConf.Load -1    ' CDO Source Defaults
        Set Flds = iConf.Fields
        With Flds
            .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
            .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "smtpout.asia.secureserver.net"
            .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 80
            .Item("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate") = 1
            .Item("http://schemas.microsoft.com/cdo/configuration/sendusername") = "admin@lattitude27.com"
            .Item("http://schemas.microsoft.com/cdo/configuration/sendpassword") = "target2233"
            .Update
        End With

    strbody = "Watched horse/s found:" & vbNewLine & vbNewLine & _
        eMessage

    With iMsg
        Set .Configuration = iConf
        .To = "chuck@bne27.com.au"
        .CC = ""
        .BCC = ""
        .From = """Watched Horses"" <chuck@watching.com>"
        .Subject = "Watched Horses running"
        .TextBody = strbody
        .send
    End With

    Set iMsg = Nothing
    Set iConf = Nothing
    Set Flds = Nothing
End Sub
Sub HighlightWinners()
'19/7/16 changed mydate from 60 to 30 and back again 23/7/16
    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myHTime         As Range 'MPS Last 400m
'    Dim myMPS4002 As Range 'copied len behind
    Dim myMPS           As Range 'MPS
    Dim myAMPS          As Range 'AMPS
    Dim myBar           As Range ' Barrier
    Dim myWeight        As Range ' Weight
    Dim myCalFin        As Range 'Calc finish
    Dim myAdjCalFin     As Range 'adjusted calc finish
    Dim myHValue        As Range
    Dim myMPS600        As Range
    Dim myAvgMPS600     As Range
    Dim myRating        As Range
    'Dim myBestScore         As Range ' this is done in building the horse score
    Dim myRow1          As Long
    Dim myRow2          As Long
    Dim myLen           As Double
    Dim myRowEnd        As Long
    Dim raceDist        As Long
    Dim myForm          As String
    Dim sSheet          As String
    Dim sYear           As String
    Dim sMonth          As String
    Dim sDay            As String
    Dim myDate          As Date
    
    Dim winnerMPS       As Double
    'Dim AvWinnerMPS     As Double
'Insert a new Col S
    Range("E:F, H:I, L:P, R:S, V:X").Interior.ColorIndex = xlNone
'        Selection.Insert Shift:=xlToRight
    On Error Resume Next
' copy the HTime col where it is not a time, to S temp
'    Set mySelection = Range("J3:J" & Range("J" & Rows.Count).End(xlUp).Row) 'HDate
'        For Each myX In mySelection 'Col J
'        If myX <> "" Then
'            If InStr(1, myX.Offset(0, 3), "L") > 0 Then
'                myX.Offset(0, 9) = Replace(myX.Offset(0, 3), "L", "")
'            Else
'                myX.Offset(0, 9) = 0
''            End If
'        End If
'        Next myX
    myRow1 = 3
'    myRow2 = 3
'    Set mySelection = Range("J3:J" & Range("J" & Rows.Count).End(xlUp).row) 'HDate
'get the date from the sheet name
sSheet = ActiveWorkbook.name
sYear = Left(sSheet, 4) 'year
sMonth = Mid(sSheet, 6, 2) ' month
sDay = Mid(sSheet, 9, 2) ' day
myDate = sDay & "/" & sMonth & "/" & sYear
    Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col D
            If myX.Row >= myRow1 Then
                If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                   '     Range("J" & myX.row).End(xlDown).Select
                        Range("D" & myX.Row).End(xlDown).Select 'select whole race
                        myRowEnd = Selection.Row
                    Set myRng = Range("K" & myRow1 & ":K" & myRowEnd) 'The range to work on HDate
                    Set myHTime = Range("N" & myRow1 & ":N" & myRowEnd) 'HTime
                    Set myMPS = Range("O" & myRow1 & ":O" & myRowEnd)
                    Set myAMPS = Range("P" & myRow1 & ":P" & myRowEnd)
                    Set myCalFin = Range("R" & myRow1 & ":R" & myRowEnd)
                    Set myAdjCalFin = Range("S" & myRow1 & ":S" & myRowEnd)
                    Set myBar = Range("H" & myRow1 & ":H" & myRowEnd)
                    Set myWeight = Range("I" & myRow1 & ":I" & myRowEnd)
                    Set myHValue = Range("V" & myRow1 & ":V" & myRowEnd)
                    Set myMPS600 = Range("W" & myRow1 & ":W" & myRowEnd)
                    Set myAvgMPS600 = Range("X" & myRow1 & ":X" & myRowEnd) 'using this for FormCount
                    Set myRating = Range("AD" & myRow1 & ":AD" & myRowEnd)
                    'Set myBestScore = Range("X" & myRow1 & ":X" & myRowEnd)
                        raceDist = Range("B" & myRow1 - 1)
                            If raceDist < 1000 Then
                                winnerMPS = 17.5934
                            ElseIf raceDist < 1100 Then
                                winnerMPS = 17.58108433
                            ElseIf raceDist < 1200 Then
                                winnerMPS = 17.4358307
                            ElseIf raceDist < 1300 Then
                                winnerMPS = 17.3022912
                            ElseIf raceDist < 1400 Then
                                winnerMPS = 17.14098202
                            ElseIf raceDist < 1500 Then
                                winnerMPS = 17.00940717
                            ElseIf raceDist < 1600 Then
                                winnerMPS = 16.85262229
                            ElseIf raceDist < 1700 Then
                                winnerMPS = 16.77955217
                            ElseIf raceDist < 1800 Then
                                winnerMPS = 16.69917358
                            ElseIf raceDist < 1900 Then
                                winnerMPS = 16.51954201
                            ElseIf raceDist < 2000 Then
                                winnerMPS = 16.37379051
                            ElseIf raceDist < 2250 Then
                                winnerMPS = 16.27478958
                            ElseIf raceDist < 2500 Then
                                winnerMPS = 16.13119514
                            ElseIf raceDist < 2750 Then
                                winnerMPS = 15.9706571
                            ElseIf raceDist < 3000 Then
                                winnerMPS = 15.88
                            Else
                                winnerMPS = 15.79137425
                            End If
                        
                        For Each myY In myRng 'the one race determined from Col K
                            
                    '    If myY <> "" Then ' J is not null
                            If myY >= myDate - 30 Then 'was set at 60 then tested at 30 now back to 60
                                myY.Interior.ColorIndex = 6
                            End If
                            
                            If myY.Offset(0, 1) >= raceDist - 400 And myY.Offset(0, 1) <= raceDist + 400 _
                            And myY <> "" Then
                                myY.Offset(0, 1).Interior.ColorIndex = 6
                            End If
                            If InStr(1, myY.Offset(0, 3).value, "L") = 0 _
                            And myY <> "" Then ' K is not null
                                myY.Offset(0, 3).Interior.ColorIndex = 6 ' 19 pale yellow
                            End If
                            If InStr(1, myY.Offset(0, 3).value, "L") > 0 _
                            And myY <> "" Then
                                myLen = Replace(myY.Offset(0, 3).value, "L", "")
                                myLen = Trim(myLen)
                                If myLen <= 3 Then
                                    myY.Offset(0, 3).Interior.ColorIndex = 19 ' 6 yellow
                                End If
                            End If

                            If myY <> "" Then
                                'If myY.Offset(0, 4).value >= Application.Max(myMPS) - 0.35 Then
                                If myY.Offset(0, 4).value >= winnerMPS Then
                                    myY.Offset(0, 4).Interior.ColorIndex = 19
                                End If
                                If myY.Offset(0, 4).value = Application.Max(myMPS) Then
                                    myY.Offset(0, 4).Interior.ColorIndex = 6 ' yellow
                                End If
                            End If
                           
                           ' If myY.Offset(0, 14).Value = Application.Max(myBestScore) Then
                           '     myY.Offset(0, 14).Interior.ColorIndex = 6 ' yellow
                           ' End If
                            If myY <> "" Then
                                'If myY.Offset(0, 5).value > Application.Average(myAMPS) Then
                                'If myY.Offset(0, 5).value >= Application.Max(myAMPS) - 0.25 Then
                                If myY.Offset(0, 5).value >= winnerMPS Then
                                    myY.Offset(0, 5).Interior.ColorIndex = 19 ' yellow
                                End If
                                If myY.Offset(0, 5).value = Application.Max(myAMPS) Then
                                    myY.Offset(0, 5).Interior.ColorIndex = 6 ' yellow
                                '    myY.Offset(0, -9) = myY.Offset(0, 5) - myY.Offset(1, 5)
                                End If
                                If myY.Offset(0, 12) <> "" Then
                                    'If myY.Offset(0, 15).Value > Application.Average(myMPS600) Then
                                    '    myY.Offset(0, 15).Interior.ColorIndex = 15 ' grey
                                    'End If
                                    If myY.Offset(0, 12).value >= Application.Max(myMPS600) - 0.66 Then
                                        myY.Offset(0, 12).Interior.ColorIndex = 15 ' grey
                                    End If
                                    'If myY.Offset(0, 15).Value > Application.Max(myMPS600) - 0.2 Then
                                    '    myY.Offset(0, 15).Interior.ColorIndex = 19 ' pale yellow
                                    'End If
                                    If myY.Offset(0, 12).value >= Application.Max(myMPS600) - 0.33 Then
                                        myY.Offset(0, 12).Interior.ColorIndex = 19 ' pale yellow
                                    End If
                                     If myY.Offset(0, 12).value = Application.Max(myMPS600) Then
                                        myY.Offset(0, 12).Interior.ColorIndex = 6 ' yellow
                                    End If
                                End If
                                If myY.Offset(0, 7).value <> "" Then
                                    If myY.Offset(0, 7).value < Application.Min(myCalFin) + 7 Then
                                        myY.Offset(0, 7).Interior.ColorIndex = 19 ' pale yellow
                                    End If
                                    If myY.Offset(0, 7).value = Application.Min(myCalFin) Then
                                        myY.Offset(0, 7).Interior.ColorIndex = 6 ' yellow
                                    End If
                                End If
                                If myY.Offset(0, 8).value <> "" Then
                                    If myY.Offset(0, 8).value < Application.Min(myAdjCalFin) + 7 Then
                                        myY.Offset(0, 8).Interior.ColorIndex = 19 ' pale yellow
                                    End If
                                    If myY.Offset(0, 8).value = Application.Min(myAdjCalFin) Then
                                        myY.Offset(0, 8).Interior.ColorIndex = 6 ' yellow
                                    End If
                                End If
                                If myY.Offset(0, 11).value <> "" And myY.Offset(0, 11).value <> "0" Then
                                    If myY.Offset(0, 11).value > Application.Max(myHValue) - _
                                        (Application.Max(myHValue) / 4) Then
                                        myY.Offset(0, 11).Interior.ColorIndex = 19 ' yellow
                                    End If
                                    If myY.Offset(0, 11).value = Application.Max(myHValue) Then
                                        If Application.WorksheetFunction.CountIf(myHValue, myY.Offset(0, 11).value) = 1 Then
                                            myY.Offset(0, 11).Interior.ColorIndex = 7 ' purple
                                        Else
                                            myY.Offset(0, 11).Interior.ColorIndex = 6 ' yellow
                                        End If
                                    End If
                                End If
                            End If
                            If myY.Offset(0, -3).value < Application.Average(myBar) Then
                                myY.Offset(0, -3).Interior.ColorIndex = 19 ' pale yellow
                            End If
                            If myY.Offset(0, -2).value < Application.Average(myWeight) Then
                                myY.Offset(0, -2).Interior.ColorIndex = 19 ' pale yellow
                            End If
                            myForm = Right(myY.Offset(0, -6), 3)
                            If InStr(1, myForm, "1") > 0 Or InStr(1, myForm, "2") > 0 _
                            Or InStr(1, myForm, "3") > 0 Then
                                myY.Offset(0, -6).Interior.ColorIndex = 6 ' yellow
                            End If
  'my Rating in AD
                            If myY.Offset(0, 19).value > 0 Then
                                If myY.Offset(0, 19).value > Application.Max(myRating) - 5 Then
                                    myY.Offset(0, -5).Interior.ColorIndex = 19 ' pale yellow
                                End If
                                If myY.Offset(0, 19).value = Application.Max(myRating) Then
                                    myY.Offset(0, -5).Interior.ColorIndex = 6 ' yellow
                                End If
                            End If
'Formcount in X
                            If myY.Offset(0, 13) <> "" And myY.Offset(0, 13) < 30 Then
                                If myY.Offset(0, 13).value < Application.Average(myAvgMPS600) Then
                                    myY.Offset(0, 13).Interior.ColorIndex = 15 ' grey
                                End If
                                If myY.Offset(0, 13).value <= Application.Min(myAvgMPS600) + 3 Then
                                    myY.Offset(0, 13).Interior.ColorIndex = 19 ' yellow
                                End If
                                If myY.Offset(0, 13).value = Application.Min(myAvgMPS600) Then
                                    myY.Offset(0, 13).Interior.ColorIndex = 6 ' yellow
                                End If
                            End If
                        Next myY
                    myRow1 = myRowEnd + 1
'                    myRow2 = myRowEnd + 1
                Else
                myRow1 = myRow1 + 1
'                myRow2 = myRow2 + 1
                End If
            End If
        Next myX
'Delete Col S
'    Columns("S:S").Select
'        Selection.Delete Shift:=xlToLeft
Range("A2").Select
End Sub
Sub BuildExpScore()
'The values come from the sheet "SUMMARY - winners.xls"
' Build the combinations in Col V for the placegetters
    Dim myselection As Range
    Dim myX         As Range
    Dim myExp       As Double
    Dim myExp2      As Double
    Dim lE  As Long
    Dim lF  As Long
    Dim lF2  As Long
    Dim lG  As Long
    Dim lG2  As Long
    Dim lG3  As Long
    Dim lG4  As Long
    Dim lH  As Long
    Dim lI  As Long
    Dim lJ  As Long
    Dim lJ2  As Long
    Dim lK  As Long
    Dim lL  As Long
    Dim lN  As Long
    Dim lN2  As Long
    Dim lO  As Long
    Dim lP  As Long
    Dim lP2  As Long
    Dim lQ  As Long
    Dim lQ2  As Long
    Dim lQ3  As Long
    Dim lQ4  As Long
    Dim lR  As Long
    Dim lR2  As Long
    Dim lS  As Long
    Dim lS2  As Long
    Dim lV  As Long
    Dim lV2  As Long
    Dim lV3  As Long
    Dim lW  As Long
    Dim lW2  As Long
    Dim lW3  As Long
    Dim lX  As Long
    Dim lX2  As Long
    Dim lX3  As Long
    
'####

'For updating Horses!BuildExpScore()
'Data obtained from SummaryBuilder!GetSummaryWinners()
'
lE = 19  'last10 - color 6
lF = 34  'Horse - rating 6
lF2 = 21  'Horse rating 19
lG = 26  'Jockey 6
lG2 = 21  'Jockey 12
lG3 = 17  'jockey 19
lG4 = 14  'jockey 15
lH = 16  'barrier 19
lI = 14  'weight 19
lJ = 18  'Htrack 6
lJ2 = 17  'Htrack 19
lK = 18  'Hdate 6
lL = 17  'Hdistance 6
lN = 18  'Htime 6
lN2 = 17  '19
lO = 24  'MPS 6
lP = 22  'AMPS 6
lP2 = 19  '19
lQ = 21  'trainer 6
lQ2 = 41  '12
lQ3 = 26  '19
lQ4 = 19  '15
lR = 24  'CalcFinish 6
lR2 = 20  '19
lS = 20  'Adjusted Finish 6
lS2 = 18  '19
lV = 22  'Hvalue 7
lV2 = 22  '6
lV3 = 20  '19
lW = 25  'MPS600 6
lW2 = 20  '19
lW3 = 16  '15
lX = 26  'Formcount 6
lX2 = 20  '19
lX3 = 15  '15

' Clear Cols AB and AC
    Columns("AB:AC").Select
    Selection.ClearContents
    Selection.Interior.ColorIndex = xlNone
' Clear Cols AE
    Columns("AE").Select
    Selection.ClearContents
    Selection.Interior.ColorIndex = xlNone
' Clear Cols AN
    Columns("AN").Select
    Selection.ClearContents
    Selection.Interior.ColorIndex = xlNone

    Range("AC:AC, AE:AE").NumberFormat = "0.00"
' Clear colour from Cols AJ (fixed price)
    Columns("AJ:AJ").Interior.ColorIndex = xlNone


' Put some headers in
Range("T1").value = "Win"
Range("U1").value = "Place"
Range("V1").value = "HValue"
Range("Z1").value = "EvalDiff"
Range("AA1").value = "spare"
Range("AB1").value = "Eval"
Range("AC1").value = "Eval %"
Range("AE1").value = "FP %"
Range("AN1").value = "Eval2"
Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row) 'Horse No
    For Each myX In myselection 'Col D
        If myX.value <> "" Then
            'If myX.Offset(0, 10).Interior.ColorIndex = 6 Then ' yellow ' HTime?
                If myX.Offset(0, 1).Interior.ColorIndex = 6 Then 'last 10
                    myExp = myExp + lE
                End If
                
                If myX.Offset(0, 2).Interior.ColorIndex = 6 Then 'horse
                    myExp = myExp + lF
                    myExp2 = myExp2 + lF
                ElseIf myX.Offset(0, 2).Interior.ColorIndex = 19 Then
                    myExp = myExp + lF2
                    myExp2 = myExp2 + lF2
                End If
                
                If myX.Offset(0, 3).Interior.ColorIndex = 6 Then 'yellow 'Jockey
                    myExp = myExp + lG
                    myExp2 = myExp2 + lG
                ElseIf myX.Offset(0, 3).Interior.ColorIndex = 12 Then 'dk yellow
                    myExp = myExp + lG2
                    myExp2 = myExp2 + lG2
                ElseIf myX.Offset(0, 3).Interior.ColorIndex = 19 Then 'light yellow
                    myExp = myExp + lG3
                    myExp2 = myExp2 + lG3
                ElseIf myX.Offset(0, 3).Interior.ColorIndex = 15 Then ' grey
                    myExp = myExp + lG4
                    myExp2 = myExp2 + lG4
                'ElseIf myX.Offset(0, 3).Interior.ColorIndex = 24 Then '
                '    myExp = myExp + lG5
                End If
                
                If myX.Offset(0, 4).Interior.ColorIndex = 19 Then 'light yellow 'BARRIER
                    myExp = myExp + lH
                End If
                
                If myX.Offset(0, 5).Interior.ColorIndex = 19 Then 'light yellow 'WEIGHT
                    myExp = myExp + lI
                End If
                
                If myX.Offset(0, 6).Interior.ColorIndex = 6 Then 'HTRACK
                    myExp = myExp + lJ
                ElseIf myX.Offset(0, 6).Interior.ColorIndex = 19 Then
                    myExp = myExp + lJ2
                End If
                
                If myX.Offset(0, 7).Interior.ColorIndex = 6 Then 'HDATE
                    myExp = myExp + lK
                End If
                
                If myX.Offset(0, 8).Interior.ColorIndex = 6 Then 'HDISTANCE
                    myExp = myExp + lL
                End If
                
                If myX.Offset(0, 10).Interior.ColorIndex = 6 Then 'HTIME
                    myExp = myExp + lN
                ElseIf myX.Offset(0, 10).Interior.ColorIndex = 19 Then
                    myExp = myExp + lN2
                End If
                
                If myX.Offset(0, 11).Interior.ColorIndex = 6 Then 'MPS
                    myExp = myExp + lO
                    myExp2 = myExp2 + lO
                End If
                
                If myX.Offset(0, 12).Interior.ColorIndex = 6 Then 'AMPS
                    myExp = myExp + lP
                End If
                
                If myX.Offset(0, 13).Interior.ColorIndex = 6 Then ' Trainer
                    myExp = myExp + lQ
                ElseIf myX.Offset(0, 13).Interior.ColorIndex = 12 Then
                    myExp = myExp + lQ2
                ElseIf myX.Offset(0, 13).Interior.ColorIndex = 19 Then
                    myExp = myExp + lQ3
                ElseIf myX.Offset(0, 13).Interior.ColorIndex = 15 Then
                    myExp = myExp + lQ4
                'ElseIf myX.Offset(0, 13).Interior.ColorIndex = 24 Then
                '    myExp = myExp + lQ5
                End If
                
                If myX.Offset(0, 14).Interior.ColorIndex = 6 Then 'CAL FINISH
                    myExp = myExp + lR
                ElseIf myX.Offset(0, 14).Interior.ColorIndex = 19 Then
                    myExp = myExp + lR2
                End If
                
                If myX.Offset(0, 15).Interior.ColorIndex = 6 Then 'ADJUSTED FINISH
                    myExp = myExp + lS
                ElseIf myX.Offset(0, 15).Interior.ColorIndex = 19 Then
                    myExp = myExp + lS2
                End If
                
                If myX.Offset(0, 18).Interior.ColorIndex = 7 Then 'HVALUE
                    myExp = myExp + lV
                ElseIf myX.Offset(0, 18).Interior.ColorIndex = 6 Then
                    myExp = myExp + lV2
                ElseIf myX.Offset(0, 18).Interior.ColorIndex = 19 Then
                    myExp = myExp + lV3
                End If
                
                If myX.Offset(0, 19).Interior.ColorIndex = 6 Then 'MPS600
                    myExp = myExp + lW
                    myExp2 = myExp2 + lW
                ElseIf myX.Offset(0, 19).Interior.ColorIndex = 19 Then
                    myExp = myExp + lW2
                    myExp2 = myExp2 + lW2
                ElseIf myX.Offset(0, 19).Interior.ColorIndex = 15 Then ' X - Last600 grey
                    myExp = myExp + lW3
                    myExp2 = myExp2 + lW3
                End If
                
                If myX.Offset(0, 20).Interior.ColorIndex = 6 Then 'FORMCOUNT
                    myExp = myExp + lX
                    myExp2 = myExp2 + lX
                ElseIf myX.Offset(0, 37).Interior.ColorIndex = 19 Then
                    myExp = myExp + lX2
                    myExp2 = myExp2 + lX2
                ElseIf myX.Offset(0, 37).Interior.ColorIndex = 15 Then
                    myExp = myExp + lX3
                    myExp2 = myExp2 + lX3
                End If
                
                myX.Offset(0, 24) = myExp
                myX.Offset(0, 36) = myExp2
                myExp = 0
                myExp2 = 0
            'End If
        End If
    Next myX
Range("V1").Select
End Sub
Sub HighlightJockeys()
' requires Microsoft Scripting Runtime
Dim oFSO            As New FileSystemObject
Dim oFS
Dim sText           As String
Dim myWork          As String
Dim mySurname       As String
Dim myInit          As String
Dim myName          As String
Dim JocName         As String
Dim JocValue        As Long
Dim myselection     As Range
Dim myX             As Range
Dim x As Long

'Clear current highlighting Cols F
Columns("G:G").Interior.ColorIndex = xlNone

Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row).Offset(0, 3) 'Jockey (offset)
    For Each myX In myselection 'Col F
    If myX.Offset(0, -3) = "" Then GoTo found: 'blank row between races
    myWork = myX.value
    myWork = Replace(myWork, "(late alt)", "")
    If Trim(myWork) = "" Then
        myX.Interior.ColorIndex = 3 'mark it red
        GoTo found:
    End If
    If InStr(1, myWork, "(") > 0 Then
        myWork = Left(myWork, InStr(1, myWork, "(") - 1)
    End If
    
  '  myWork = Replace(myWork, " (a4)", "")
  '  myWork = Replace(myWork, " (a4.5)", "")
  '  myWork = Replace(myWork, " (a3)", "")
  '  myWork = Replace(myWork, " (a3.5)", "")
  '  myWork = Replace(myWork, " (a2)", "")
  '  myWork = Replace(myWork, " (a2.5)", "")
  '  myWork = Replace(myWork, " (a1)", "")
  '  myWork = Replace(myWork, " (a1.5)", "")
  '  myWork = Replace(myWork, " (a)", "")
  '  myWork = Replace(myWork, " (a0)", "")
    myWork = Replace(myWork, "Ms ", "")
    myWork = Replace(myWork, "Mr ", "")
    myWork = Replace(myWork, "'", "")
    myWork = Trim(myWork)
    'x = InStrRev(myWork, " ")  (a1.5)
    mySurname = Right(myWork, Len(myWork) - InStrRev(myWork, " "))
    myInit = Left(myWork, 1)
    myName = myInit & " " & mySurname
    myName = Trim(myName)

Set oFS = oFSO.OpenTextFile("C:\FILES\Horses\Jockey.txt")

Do Until oFS.AtEndOfStream
sText = oFS.ReadLine
    JocName = Split(sText, "|")(0)
    JocValue = Split(sText, "|")(1)
'    If myX = sText Then
    If UCase(myName) = UCase(JocName) Then 'turn both to upper case
        myX.Interior.ColorIndex = JocValue 'preset colours
        GoTo found:
    End If
Loop
found:
Next myX

Call HighlightTrainers
Call HighlightTracks

End Sub
Private Sub HighlightTrainers()
' requires Microsoft Scripting Runtime
Dim oFSO            As New FileSystemObject
Dim oFS
Dim sText           As String
Dim myWork          As String
Dim mySurname       As String
Dim myInit          As String
Dim myName          As String
Dim TrainName         As String
Dim TrainValue        As Long
Dim myselection     As Range
Dim myX             As Range
Dim x As Long

Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row).Offset(0, 13) 'Trainer
    For Each myX In myselection 'Col Q
    myWork = myX.value
    myWork = Replace(myWork, "Ms ", "")
    myWork = Replace(myWork, "Mr ", "")
    myWork = Replace(myWork, "'", "")
    myWork = Trim(myWork)
    mySurname = Right(myWork, Len(myWork) - InStrRev(myWork, " "))
    myInit = Left(myWork, 1)
    myName = myInit & " " & mySurname
    myName = Trim(myName)

Set oFS = oFSO.OpenTextFile("C:\FILES\Horses\Trainer.txt")

Do Until oFS.AtEndOfStream
sText = oFS.ReadLine
    TrainName = Split(sText, "|")(0)
    TrainValue = Split(sText, "|")(1)
'    If myX = sText Then
    If UCase(myName) = UCase(TrainName) Then 'turn both to upper case
        myX.Interior.ColorIndex = TrainValue 'preset colours
        GoTo found:
    End If
Loop
found:
Next myX

End Sub
Private Sub HighlightTracks()
' requires Microsoft Scripting Runtime
Dim oFSO            As New FileSystemObject
Dim oFS
Dim sText           As String
Dim myTrack          As String
Dim TrackName       As String
Dim TrackValue      As Long
Dim myselection     As Range
Dim myX             As Range

Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row).Offset(0, 6) 'J HTrack
    For Each myX In myselection 'Col J
    myTrack = myX.value
    myTrack = Trim(myTrack)

Set oFS = oFSO.OpenTextFile("C:\FILES\Horses\Tracks.txt")

Do Until oFS.AtEndOfStream
sText = oFS.ReadLine
    TrackName = Split(sText, "|")(0)
    TrackValue = Split(sText, "|")(1)
'    If myX = sText Then
'    If UCase(myName) = UCase(TrackName) Then 'turn both to upper case
    If InStr(1, LCase(myTrack), LCase(TrackName)) > 0 Then
        myX.Interior.ColorIndex = TrackValue 'preset colours
        GoTo found:
    End If
Loop
found:
Next myX

End Sub
Sub EnterScratchings_OLD()
'old script, replaced with following script
Dim scSheet     As String
Dim scDate      As String
Dim scYear      As String
Dim scMonth     As String
Dim scDay       As String
Dim scTrack     As String
Dim scRace      As String 'Current Race
Dim sURL        As String 'url for the current race
Dim curRace     As String 'the web page for current race
Dim myFind      As String
Dim mySCR       As String 'extract out of curRace
Dim myWork      As String 'working copy of mySCR
Dim oHttp       As Object
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim lastSheetRow As Long 'last row of the sheet
Dim r           As Long
Dim scSelection As Range
Dim scX         As Range
Dim cSelection  As Range ' current race selection
Dim cY          As Range 'horses in current race
Dim rng         As Range 'for deleting the scratchings

scSheet = ActiveWorkbook.name
scYear = Left(scSheet, 4) 'year
scMonth = Mid(scSheet, 6, 2) ' month
'scMonth = Replace(scMonth, "0", "")
scDay = Mid(scSheet, 9, 2) ' day
'scDay = Replace(scDay, "0", "")
scDate = scYear & "-" & scMonth & "-" & scDay
scTrack = Mid(scSheet, 12, 2)

Set scSelection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row)
    For Each scX In scSelection 'Col C
' remove the emergency indicator
            scX = Replace(scX, "e", "")
            scX = Application.WorksheetFunction.Clean(Trim(scX))
    Next scX
'count how many races for the day using the distance col, allows this to be re-run
' after a highlight winner has been run
'scRaceCnt = Application.CountIf(scSelection.Offset(0, -1), "> 800")
scRow1 = 3 'start on the first horse
' lastSheetRow = Range("C65536").End(xlUp).row
Set scSelection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row)
For Each scX In scSelection 'Col C
 '   If scX.row >= scRow1 And scX.row <= lastSheetRow Then
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            scRace = scX.Offset(-1, -2) ' race number
            Range("C" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row

'            sUrl = "http://unitab.com/racing/" & scDate & "/race-" & scTrack & scRace & ".html"
'http://tatts.com/racing/scratchings
' sUrl = "http://unitab.com/racing/" & scDate & "/scratchings.html"
'http://tatts.com/racing/scratchings
sURL = "https://tattsbet.ubet.com/racing/scratchings"
' get the web page
            Set oHttp = CreateObject("MSXML2.XMLHTTP")
            oHttp.Open "GET", sURL, False
            oHttp.send
            curRace = oHttp.responseText 'a contains source code of website
            myFind = scTrack & "." & scRace & "<[^.]*"
            mySCR = RegExpFind(curRace, "" & myFind & "", 1, False) ' URL up to <
            myWork = mySCR
            myWork = Replace(myWork, Chr(13), "")
            myWork = Replace(myWork, Chr(11), "")
            myWork = Application.WorksheetFunction.Clean(myWork)
            myWork = Application.WorksheetFunction.Trim(myWork)
            myWork = Replace(myWork, "+", "")
            myWork = Replace(myWork, "#", "")
            myWork = Replace(myWork, "</span></a></td><td align=""left"" valign=""middle""></td><td height=""27"" align=""left"" valign=""middle""", "")
            myWork = Replace(myWork, " ", "")
            myWork = Replace(myWork, ">", ">;")
            myWork = Replace(myWork, ",", ";,;")
            myWork = Replace(myWork, "<", ";<")
            myWork = Replace(myWork, "L;", ";") 'removed the late scratching
            myWork = Left(myWork, InStr(1, myWork, ";<") + 1)
            Set cSelection = Range("C" & scRow1 & ":C" & lastRow)
                For Each cY In cSelection 'the one race determined from Col C
                  If InStr(1, myWork, ";" & cY & ";") > 0 Then
                    'cY.Offset(0, -1).Interior.ColorIndex = 6
                    cY.Offset(0, -1) = "SCR"
                  End If
                Next cY
             scRow1 = lastRow + 1
        Else
            scRow1 = scRow1 + 1
        End If
    End If
Next scX
' that is all the scratchings marked
' now to delete those rows
    Range("C1:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, -1).Select
    Set rng = Selection 'Col B
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "SCR" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
Range("E3").Select

End Sub
Sub EnterScratchings()
' (NEW) get the scratchings from RISA each race using the URL in 'todays URLs.txt'
Dim rSheet     As String
Dim rDate      As String
Dim sDate       As String
Dim myDate      As Date
Dim rYear      As String
Dim rMonth     As String
Dim rDay       As String
Dim rTrack     As String
Dim rRace      As String 'Current Race
Dim sRace      As String
Dim sHorse      As String
Dim sRider      As String
Dim sURL        As String 'url for the current race
Dim curRace     As String 'the web page for current race

Dim sY          As String
Dim oHttp       As Object
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim lastRow2    As Long
Dim lastSheetRow As Long 'last row of the sheet

Dim scSelection As Range 'Race Selection
Dim scX         As Range
Dim cSelection  As Range 'scratching selection
Dim cY          As Range 'horses in current race
Dim myX         As Range
Dim rng         As Range 'for deleting the scratchings
Dim r           As Long
Dim z           As Long

Dim mySite        As String
Dim curWork     As String
Dim curArray()  As String
Dim myScratchings   As String
Dim foundRace       As Boolean
Dim myRiderChange   As String
Dim fileSaveName    As String
Dim nFileNum As Long

Dim RaceMeeting As String
Dim MeetingArray()  As String

'Dim ErrPos      As String

'Dim startElement    As WebElement
'Dim Elements        As WebElementCollection
'Dim Element         As WebElement
'Dim myNo            As String

Dim y               As Long
Dim x               As Long
Dim myCode          As String
'Dim wb1             As Workbook
'Dim wb2             As Workbook
Dim objWeb          As QueryTable
Dim urlName         As String
Dim mySCR           As Range
Dim myhorse         As String

Dim html As Object
Dim objResult As Object
Dim GetElementByID As String


'Dim driver As New SeleniumWrapper.WebDriver
'Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
'Dim keys As New SeleniumWrapper.keys
'Dim mySite As String

'StopMyProcess ("iexplore.exe")
'StopMyProcess ("chromedriver.exe")
'StopMyProcess ("phantomjs.exe")

'Set wb1 = ActiveWorkbook
rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
'rDate = rYear & "/" & rMonth & "/" & rDay
rDate = rYear & rMonth & rDay
myDate = rDay & "/" & rMonth & "/" & rYear
sDate = Format(myDate, "yyyy") & Format(myDate, "mmm") & Format(myDate, "dd")
'rYear & Format(rMonth, "mmm") & rDay
rTrack = Mid(rSheet, InStrRev(rSheet, "-") + 1, Len(rSheet))
rTrack = Left(rTrack, InStr(1, rTrack, ".") - 1)
'ErrPos = "1 Got the information from the sheet"
On Error Resume Next

'get the race URL
fileSaveName = "C:\FILES\Horses\todays URLs.txt"
nFileNum = FreeFile
Open fileSaveName For Input As nFileNum
RaceMeeting = Input(LOF(nFileNum), nFileNum)
Close nFileNum

MeetingArray() = Split(RaceMeeting, vbCrLf)

For y = LBound(MeetingArray) To UBound(MeetingArray)
    If Len(Trim(MeetingArray(y))) <> 0 Then
        If InStr(1, MeetingArray(y), sDate) = 0 Then
            MsgBox ("The file 'todays URLs.txt' does not match the current spreadsheet")
            End
        End If
        myCode = Split(MeetingArray(y), "|")(0)
        If LCase(rTrack) = LCase(myCode) Then
            myTrack = Split(MeetingArray(y), "|")(2)
            sURL = Split(MeetingArray(y), "|")(1)
'http://www.racingaustralia.horse/FreeFields/Form.aspx?Key=2019Mar02%2CNSW%2CGoulburn
'http://www.racingaustralia.horse/FreeFields/Scratchings.aspx?Key=2019Mar02%2CQLD%2CAquis%20Park%20Gold%20Coast
'http://www.racingaustralia.horse/FreeFields/Scratchings.aspx?Key=2019May08%2CQLD%2CAquis%20Park%20Gold%20Coast
'http://www.racingaustralia.horse/FreeFields/Scratchings.aspx?Key=2019May08%2CQLD%2CAquis%20Park%20Gold%20Coast
            sURL = Replace(sURL, "Form.aspx", "Scratchings.aspx")
            'Debug.Print sURL
            'Stop
            Exit For
        End If
    End If
Next y
'-------------
'Ensure file contains URLS for current sheet

'Key=2019Apr28
'--------------
'urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?sortBy=games&pageNumber=1"
Set oHttp = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
TryAgain:
z = 0
oHttp.Open "GET", sURL, False
'oHttp.setRequestHeader "Content-Type", "text/xml"
'oHttp.setRequestHeader "User-Agent", "Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0"
oHttp.send
Application.Wait (Now + TimeValue("00:00:01"))
DoEvents
Do While oHttp.READYSTATE <> 4
    'DoEvents
    Application.Wait (Now + TimeValue("00:00:01"))
    z = z + 1
    If z = 10 Then GoTo TryAgain:
Loop
'Do While oHttp.Status <> 200
    'DoEvents
'Loop
Set html = CreateObject("htmlfile")
html.Body.innerHTML = oHttp.responseText
Set objResult = html.GetElementByID("page-content")
mySite = objResult.innerHTML
'######scratchings
curWork = Mid(mySite, InStr(1, mySite, "<H3>Scratchings<"), Len(mySite))
curWork = Left(curWork, InStr(1, curWork, "</TABLE>"))
curArray() = Split(curWork, "<TD>")
For x = LBound(curArray) To UBound(curArray)
    If Len(Trim(curArray(x))) <> 0 Then
        'Debug.Print curArray(x)
        If InStr(1, LCase(curArray(x)), ">race ") > 0 Then
            sRace = Mid(curArray(x), InStr(1, LCase(curArray(x)), "race ") + 5, Len(curArray(x)))
            sRace = Left(sRace, InStr(1, sRace, ":") - 1)
            sRace = Trim(sRace)
            'Debug.Print sRace
        ElseIf InStr(1, LCase(curArray(x)), "span class=comments") > 0 Then
            sHorse = curArray(x)
            sHorse = Left(sHorse, InStr(1, sHorse, " ") - 1)
            sHorse = Replace(sHorse, "e", "")
            'Debug.Print sRace & "|" & sHorse
            myScratchings = myScratchings & "|" & sRace & ":" & sHorse & "|$"
        'myCode = Split(curArray(y), Delimiter)(0)
        'If LCase(wkCode) = LCase(myCode) Then
        '    myTrack = Split(curArray(y), Delimiter)(1)
        '    Exit For
        End If
    End If
Next x
curWork = ""
x = 0
sRace = ""
sHorse = ""
'######late scratchings
curWork = Mid(mySite, InStr(1, mySite, "<H3>Late Scratchings<"), Len(mySite))
curWork = Left(curWork, InStr(1, curWork, "</TABLE>"))
curArray() = Split(curWork, "<TD>")
For x = LBound(curArray) To UBound(curArray)
    If Len(Trim(curArray(x))) <> 0 Then
        'Debug.Print curArray(x)
        If InStr(1, LCase(curArray(x)), ">race ") > 0 Then
            sRace = Mid(curArray(x), InStr(1, LCase(curArray(x)), "race ") + 5, Len(curArray(x)))
            sRace = Left(sRace, InStr(1, sRace, ":") - 1)
            sRace = Trim(sRace)
            'Debug.Print sRace
        ElseIf InStr(1, LCase(curArray(x)), "span class=comments") > 0 Then
            sHorse = curArray(x)
            sHorse = Left(sHorse, InStr(1, sHorse, " ") - 1)
            sHorse = Replace(sHorse, "e", "")
            'Debug.Print sRace & "|" & sHorse
            myScratchings = myScratchings & "|" & sRace & ":" & sHorse & "|$"
        End If
    End If
Next x
curWork = ""
x = 0
sRace = ""
sHorse = ""
'Debug.Print myScratchings
'######rider changes
foundRace = False
curWork = Mid(mySite, InStr(1, mySite, "<H3>Late Riders/Alterations<"), Len(mySite))
curWork = Left(curWork, InStr(1, curWork, "</TABLE>"))
curArray() = Split(curWork, "<TD>")
For x = LBound(curArray) To UBound(curArray)
    If Len(Trim(curArray(x))) <> 0 Then
        'Debug.Print curArray(x)
        If InStr(1, LCase(curArray(x)), "There are no riders/alterations") > 0 Then
            Exit For
        ElseIf InStr(1, LCase(curArray(x)), ">race ") > 0 Then
            sRace = Mid(curArray(x), InStr(1, LCase(curArray(x)), "race ") + 5, Len(curArray(x)))
            sRace = Left(sRace, InStr(1, sRace, ":") - 1)
            sRace = Trim(sRace)
            foundRace = True
            'Debug.Print sRace
        ElseIf foundRace = True And IsNumeric(Left(curArray(x), 1)) = True Then
            sHorse = curArray(x)
            sHorse = Left(sHorse, InStr(1, sHorse, " ") - 1)
            sHorse = Replace(sHorse, "e", "")
            sRider = Mid(curArray(x), InStr(1, curArray(x), " - ") + 3, Len(curArray(x)))
            sRider = Left(sRider, InStr(1, sRider, "<") - 1)
            sRider = Trim(sRider)
            'Debug.Print sRace & "|" & sHorse
            myRiderChange = myRiderChange & "|" & sRace & ":" & sHorse & ":" & sRider & "|$"
        End If
    End If
Next x
'Debug.Print myRiderChange
'Stop

'#################
'Dim file As String
'Dim nFileNum As Long
'write curWork to a file
'    file = "C:\FILES\Horses\test.txt"
'    nFileNum = FreeFile
'    Open file For Output As #nFileNum
'    'for output, input, append
'    Print #nFileNum, mySite
'    Close #nFileNum
'    Stop
'----------------------------------------


scRow1 = 3 'start on the first horse
Set scSelection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row)
For Each scX In scSelection 'Col D
    'ErrPos = "2 Started working through the sheet"
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            rRace = scX.Offset(-1, -3) ' race number
            Range("D" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
            For Each mySCR In Range("D" & scX.Row & ":D" & lastRow)
                If mySCR <> "" Then
'####UP TO HERE
                    mySCR = Replace(mySCR, "e", "")
                    myhorse = "|" & rRace & ":" & mySCR & "|"
                    If InStr(1, myScratchings, myhorse) > 0 Then
                        mySCR.Offset(0, -2) = "SCR"
                    End If
                    If InStr(1, myRiderChange, myhorse) > 0 Then
                        curArray() = Split(myRiderChange, "|$")
                        For x = LBound(curArray) To UBound(curArray)
                            If InStr(1, curArray(x), myhorse) > 0 Then
                                'Debug.Print Split(curArray(x), ":")(2)
                                mySCR.Offset(0, 3) = Split(curArray(x), ":")(2)
                            End If
                        Next x
                    End If
                End If
                myhorse = ""
            Next mySCR
        End If
    End If
    scRow1 = lastRow + 1
Next scX
'Stop
'close the temp sheet
'wb2.Close False
'#### UP TO HERE

            'https://tab.ubet.com/racing/horse-racing/Aquis-Park-Gold-Coast-QR/Race-1/Win?Date=20190302
 '           sURL = "https://tab.ubet.com/racing/horse-racing/" & rTrack & "/Race-" & rRace & "/Win?Date=" & rDate
'testing
            'sURL = "https://tab.ubet.com/racing/horse-racing/" & rTrack & "/Race-2/Win?Date=" & rDate
            ' get the web page
'            driver.Start "phantomjs", sURL
            'driver.Start "chrome", sURL
'            driver.setImplicitWait 10000
            'driver.Wait (500)
'            driver.get "/", Raise:=False
            'driver.Wait (1000)
'            driver.maximizeWindow
'get rid of the splash screen
                                    '//*[@id="acc_exitButton"]
'            If InStr(1, driver.PageSource, "acc_exitButton") > 0 Then
'                driver.findElementByXPath("//*[@id='acc_exitButton']").Click 'works
                'driver.getScreenshot.Copy 'works well
                'Stop
'            End If
'            Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]/div/div/single-leg-container/div/div/div[2]/ul")
'            Set Elements = startElement.findElementsByTagName("ul")
'            For Each Element In Elements
'                If InStr(1, Element.text, "SCRATCHED") > 0 Then
'                    myNo = Split(Element.text, vbCrLf)(0)
'                    myNo = Trim(myNo)
'                    Set cSelection = Range("C" & scRow1 & ":C" & lastrow)
'                    For Each cY In cSelection 'the one race determined from Col C
'                        'ErrPos = "6 Now about the start working through each race"
'                        cY = Replace(cY, "e", "") 'take out the emergency indicator
'                        cY = Application.WorksheetFunction.Clean(Trim(cY))
'                        sY = cY.value 'horse number
'                        If sY = myNo Then
'                            cY.Offset(0, -1) = "SCR"
'                            Exit For
'                        End If
                        'ErrPos = "7 Have just marked all the rows to be scratched"
'                        sY = ""
'                        sScr = ""
'                    Next cY
'                End If
'            Next Element
'            scRow1 = lastrow + 1
'        End If
'    End If
' reset the variables
    curWork = ""
    'myNo = ""
'    driver.stop
    
'Next scX
' that is all the scratchings marked
' now to delete those rows
    Range("D1:D" & Range("D" & Rows.count).End(xlUp).Row).Offset(0, -2).Select
    'ErrPos = "8 Going to start deleting all the rows marked SCR"
    Set rng = Selection 'Col B
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "SCR" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
Range("E3").Select
'ErrPos = "9 Finished"
'Set oHttp = Nothing

HighlightJockeys

Exit Sub
scratchErr:
    'LogInformation "Errorred in EnterScratchings, got up to: " & ErrPos
    'Resume Next
End Sub
Sub EnterScratchings_OLD2()
' (OLD2) get the scratchings from each race using the URL relevant to the day
Dim rSheet     As String
Dim rDate      As String
Dim rYear      As String
Dim rMonth     As String
Dim rDay       As String
Dim rTrack     As String
Dim rRace      As String 'Current Race
Dim sURL        As String 'url for the current race
Dim curRace     As String 'the web page for current race
Dim curWork     As String

Dim sY          As String
Dim oHttp       As Object
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim lastSheetRow As Long 'last row of the sheet

Dim scSelection As Range
Dim scX         As Range
Dim cSelection  As Range ' current race selection
Dim cY          As Range 'horses in current race
Dim rng         As Range 'for deleting the scratchings
Dim r           As Long

Dim sScr        As String

Dim fileSaveName    As String
Dim nFileNum As Long

Dim ErrPos      As String

Dim startElement    As WebElement
Dim elements        As WebElementCollection
Dim element         As WebElement
Dim myNo            As String

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
Dim keys As New SeleniumWrapper.keys
'Dim mySite As String

'StopMyProcess ("iexplore.exe")
'StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")


rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
'rDate = rYear & "/" & rMonth & "/" & rDay
rDate = rYear & rMonth & rDay
'rTrack = Mid(rSheet, 12, 2)
rTrack = Mid(rSheet, 12, Len(rSheet))
rTrack = Left(rTrack, InStr(1, rTrack, ".") - 1)
ErrPos = "1 Got the information from the sheet"
On Error Resume Next

scRow1 = 3 'start on the first horse
Set scSelection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row)
For Each scX In scSelection 'Col C
    ErrPos = "2 Started working through the sheet"
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            rRace = scX.Offset(-1, -2) ' race number
            Range("C" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
            'https://tab.ubet.com/racing/horse-racing/Aquis-Park-Gold-Coast-QR/Race-1/Win?Date=20190302
            sURL = "https://tab.ubet.com/racing/horse-racing/" & rTrack & "/Race-" & rRace & "/Win?Date=" & rDate
'testing
            'sURL = "https://tab.ubet.com/racing/horse-racing/" & rTrack & "/Race-2/Win?Date=" & rDate
            ' get the web page
            driver.Start "phantomjs", sURL
            'driver.Start "chrome", sURL
            driver.setImplicitWait 10000
            'driver.Wait (500)
            driver.get "/", Raise:=False
            'driver.Wait (1000)
            driver.maximizeWindow
'get rid of the splash screen
                                    '//*[@id="acc_exitButton"]
            If InStr(1, driver.PageSource, "acc_exitButton") > 0 Then
                driver.findElementByXPath("//*[@id='acc_exitButton']").Click 'works
                'driver.getScreenshot.Copy 'works well
                'Stop
            End If
            Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]/div/div/single-leg-container/div/div/div[2]/ul")
            Set elements = startElement.findElementsByTagName("ul")
            For Each element In elements
                If InStr(1, element.text, "SCRATCHED") > 0 Then
                    myNo = Split(element.text, vbCrLf)(0)
                    myNo = Trim(myNo)
                    Set cSelection = Range("C" & scRow1 & ":C" & lastRow)
                    For Each cY In cSelection 'the one race determined from Col C
                        'ErrPos = "6 Now about the start working through each race"
                        cY = Replace(cY, "e", "") 'take out the emergency indicator
                        cY = Application.WorksheetFunction.Clean(Trim(cY))
                        sY = cY.value 'horse number
                        If sY = myNo Then
                            cY.Offset(0, -1) = "SCR"
                            Exit For
                        End If
                        'ErrPos = "7 Have just marked all the rows to be scratched"
                        sY = ""
                        sScr = ""
                    Next cY
                End If
            Next element
            scRow1 = lastRow + 1
        End If
    End If
' reset the variables
    curWork = ""
    myNo = ""
    driver.stop
    
Next scX
' that is all the scratchings marked
' now to delete those rows
    Range("C1:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, -1).Select
    ErrPos = "8 Going to start deleting all the rows marked SCR"
    Set rng = Selection 'Col B
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "SCR" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
Range("E3").Select
ErrPos = "9 Finished"
'Set oHttp = Nothing
Exit Sub
scratchErr:
    'LogInformation "Errorred in EnterScratchings, got up to: " & ErrPos
    'Resume Next
End Sub
Sub EnterResults_OLD()
'4/4/13 updated to include Radio Tab selections plus late mail
Dim rSheet     As String
Dim rDate      As String
Dim rYear      As String
Dim rMonth     As String
Dim rDay       As String
Dim rTrack     As String
Dim rRace      As String 'Current Race
Dim sURL        As String 'url for the current race
Dim curRace     As String 'the web page for current race
Dim curWork     As String
Dim curWorkTemp As String
Dim my1stNo     As String 'the winning number
Dim my2ndNo     As String
Dim my3rdNo     As String
Dim my4thNo     As String
Dim Dup1stNo    As String
Dim Dup2ndNo    As String
Dim Dup3rdNo    As String
Dim my1stWin    As String 'win amount
Dim my1stPlace  As String 'winner place amount
Dim my2ndPlace  As String
Dim my3rdPlace  As String
Dim Dup1stWin   As String
Dim Dup1stPlace As String
Dim Dup2ndPlace As String
Dim Dup3rdPlace As String
Dim sY          As String
Dim oHttp       As Object
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim lastSheetRow As Long 'last row of the sheet
Dim r           As Long
Dim Dup1stNoPoss    As Long 'the tied winner No position
Dim Dup1stWinPoss   As Long 'tied winner $ position
Dim Dup1stPlacePoss As Long 'tied winner placing $ position
Dim my2ndNoPoss     As Long ' 2nd place No poss
Dim my2ndPlacePoss  As Long '2nd place $ position
Dim Dup2ndNoPoss    As Long
Dim Dup2ndPlacePoss As Long
Dim my3rdNoPoss     As Long '3rd place no Position
Dim my3rdPlacePoss  As Long '3rd place $ position
Dim Dup3rdNoPoss    As Long
Dim Dup3rdPlacePoss As Long
Dim scSelection As Range
Dim scX         As Range
Dim cSelection  As Range ' current race selection
Dim cY          As Range 'horses in current race
Dim rng         As Range 'for deleting the scratchings
Dim dup1st      As Boolean
Dim dup2nd      As Boolean
Dim dup3rd      As Boolean
Dim sFav        As String 'all the radio TAB favourites
'Dim sFav1       As String
'Dim sFav2       As String
'Dim sFav3       As String
Dim sLateMail   As String 'late mail

Dim fileSaveName    As String
Dim nFileNum As Long

rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
'rDate = rYear & "-" & rMonth & "-" & rDay
rDate = rYear & "/" & rMonth & "/" & rDay
rTrack = Mid(rSheet, 12, 2)

'Clear current picks and late mail from Cols C
Columns("C:C").Interior.ColorIndex = xlNone

'Set scSelection = Range("C2:C" & Range("C" & Rows.Count).End(xlUp).row)
'    For Each scX In scSelection 'Col C
' remove the emergency indicator
'            scX = Replace(scX, "e", "")
'            scX = Application.WorksheetFunction.Clean(Trim(scX))
'    Next scX
'count how many races for the day using the distance col, allows this to be re-run
' after a highlight winner has been run
'scRaceCnt = Application.CountIf(scSelection.Offset(0, -1), "> 800")
scRow1 = 3 'start on the first horse
' lastSheetRow = Range("C65536").End(xlUp).row
Set scSelection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row)
For Each scX In scSelection 'Col C
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            rRace = scX.Offset(-1, -2) ' race number
            Range("C" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
' http://tatts.com/racing/2011/10/16/NR/1
' https://tatts.com/racing/2013/8/17/VR/1
          '  sUrl = "http://unitab.com/racing/" & rDate & "/race-" & rTrack & rRace & ".html"
          ' sUrl = "http://tatts.com/racing/" & rDate & "/" & rTrack & "/" & rRace
            sURL = "https://tattsbet.ubet.com/racing/" & rDate & "/" & rTrack & "/" & rRace
' get the web page
            Set oHttp = CreateObject("MSXML2.XMLHTTP")
            oHttp.Open "GET", sURL, False
            oHttp.send
            curRace = oHttp.responseText 'a contains source code of website
            curWork = curRace
            curWork = Replace(curWork, Chr(13), "")
            curWork = Replace(curWork, Chr(11), "")
'            curWork = Application.WorksheetFunction.Clean(curWork)
'            curWork = Application.WorksheetFunction.Trim(curWork)
'#################
'write curWork to a file
'    fileSaveName = "C:\FILES\Horses\test.txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Append As #nFileNum
'    Print #nFileNum, curWork
'    Close #nFileNum
'################
'GoTo FavValue: 'for testing
'get the winning horse no
            my1stNo = RegExpFind(curWork, ":5%;([^<]+)", 1, False) ' URL up to <
            my1stNo = Replace(my1stNo, ":5%;"" align=""right"">", "") ' leave just the win no
            my1stNo = Replace(my1stNo, my1stNo, ";" & my1stNo & ";")
                If InStr(1, my1stNo, ")") > 0 Then 'if tied 1st
                    dup1st = True
                    my1stNo = Replace(my1stNo, ")", "")
                    Dup1stNoPoss = 2 'The dup winner No is at the 2nd :5%;
                    Dup1stWinPoss = 3 'the dup winner $ is at the 4th :15%;
                    Dup1stPlacePoss = 4 'the dup winner place $ is at the 5th :15%;
                    my3rdNoPoss = 3 'Third is at the 3rd :5%;
                    my3rdPlacePoss = 6 'Third place $ is at the 6th :15%;
                Else
                    dup1st = False
                    my2ndNoPoss = 2 '2nd no is at the 2nd :5%;
                    my2ndPlacePoss = 4 'second place $ is at the 4th :15%;
'                    my3rdNoPoss = 3 '3rd No is at the 3rd :5%;
'                    my3rdPlacePoss = 6 '3rd place is at the 6th :15%;
                End If
'get the winning horse win and place $
            my1stWin = RegExpFind(curWork, ":15%;([^<]+)", 1, False) ' URL up to <
            my1stWin = Replace(my1stWin, ":15%;"" align=""right"">", "")
            '###### insert clean my1stWin properly
            my1stWin = Application.WorksheetFunction.Clean(my1stWin)
            my1stWin = Application.WorksheetFunction.Trim(my1stWin)
            my1stWin = Replace(my1stWin, Chr(10), "")
            my1stWin = Replace(my1stWin, Chr(32), "")
            my1stWin = Replace(my1stWin, Chr(160), "")
            '
            my1stPlace = RegExpFind(curWork, ":15%;([^<]+)", 2, False) ' URL up to <
            my1stPlace = Replace(my1stPlace, ":15%;"" align=""right"">", "")
            my1stPlace = Application.WorksheetFunction.Clean(my1stPlace)
            my1stPlace = Application.WorksheetFunction.Trim(my1stPlace)
'if there was a tied winner get the other winner also
                If dup1st = True Then
                    Dup1stNo = RegExpFind(curWork, ":5%;([^<]+)", Dup1stNoPoss, False) ' URL up to <
                    Dup1stNo = Replace(Dup1stNo, ":5%;"" align=""right"">", "")
                    Dup1stNo = Replace(Dup1stNo, Dup1stNo, ";" & Dup1stNo & ";")
                    Dup1stNo = Replace(Dup1stNo, ")", "")
                    Dup1stWin = RegExpFind(curWork, ":15%;([^<]+)", Dup1stWinPoss, False) ' URL up to <
                    Dup1stWin = Replace(Dup1stWin, ":15%;"" align=""right"">", "")
                    Dup1stPlace = RegExpFind(curRace, ":15%;([^<]+)", Dup1stPlacePoss, False) ' URL up to <
                    Dup1stPlace = Replace(Dup1stPlace, ":15%;"" align=""right"">", "")
                    Dup1stPlace = Application.WorksheetFunction.Clean(Dup1stPlace)
                    Dup1stPlace = Application.WorksheetFunction.Trim(Dup1stPlace)
                    my3rdNoPoss = 3 '3rd No is at the 3rd :5%;
                    my3rdPlacePoss = 6 '3rd place is at the 6th :15%;
                    GoTo get3rd:
                Else
                    GoTo get2nd:
                End If
'if no tied winner continue on
get2nd:
            my2ndNo = RegExpFind(curWork, ":5%;([^<]+)", my2ndNoPoss, False) ' URL up to <
            my2ndNo = Replace(my2ndNo, ":5%;"" align=""right"">", "")
            my2ndNo = Replace(my2ndNo, my2ndNo, ";" & my2ndNo & ";")
            my2ndPlace = RegExpFind(curWork, ":15%;([^<]+)", my2ndPlacePoss, False) ' URL up to <
            my2ndPlace = Replace(my2ndPlace, ":15%;"" align=""right"">", "")
            my2ndPlace = Application.WorksheetFunction.Clean(my2ndPlace)
            my2ndPlace = Application.WorksheetFunction.Trim(my2ndPlace)
                If InStr(1, my2ndNo, ")") > 0 Then 'if tied 2nd
                    dup2nd = True
                    my2ndNo = Replace(my2ndNo, ")", "")
                    Dup2ndNoPoss = 3 'The dup winner No is at the 3rd :5%;
                    Dup2ndPlacePoss = 6 'the dup 2nd place $ is at the 6th :15%;
                Else
                    dup2nd = False
                    my3rdNoPoss = 3 '3rd No is at the 3rd :5%;
                    my3rdPlacePoss = 6 '3rd place is at the 6th :15%;
                    GoTo get3rd:
                End If
'if there is a tied 2nd place
                If dup2nd = True Then
                    Dup2ndNo = RegExpFind(curWork, ":5%;([^<]+)", Dup2ndNoPoss, False) ' URL up to <
                    Dup2ndNo = Replace(Dup2ndNo, ":5%;"" align=""right"">", "")
                    Dup2ndNo = Replace(Dup2ndNo, Dup2ndNo, ";" & Dup2ndNo & ";")
                    Dup2ndNo = Replace(Dup2ndNo, ")", "")
                    Dup2ndPlace = RegExpFind(curWork, ":15%;([^<]+)", Dup2ndPlacePoss, False) ' URL up to <
                    Dup2ndPlace = Replace(Dup2ndPlace, ":15%;"" align=""right"">", "")
                    Dup2ndPlace = Application.WorksheetFunction.Clean(Dup2ndPlace)
                    Dup2ndPlace = Application.WorksheetFunction.Trim(Dup2ndPlace)
                End If
get3rd:
            my3rdNo = RegExpFind(curWork, ":5%;([^<]+)", my3rdNoPoss, False) ' URL up to <
            my3rdNo = Replace(my3rdNo, ":5%;"" align=""right"">", "")
            my3rdNo = Replace(my3rdNo, my3rdNo, ";" & my3rdNo & ";")
            my3rdPlace = RegExpFind(curWork, ":15%;([^<]+)", my3rdPlacePoss, False) ' URL up to <
            my3rdPlace = Replace(my3rdPlace, ":15%;"" align=""right"">", "")
            my3rdPlace = Application.WorksheetFunction.Clean(my3rdPlace)
            my3rdPlace = Application.WorksheetFunction.Trim(my3rdPlace)
                If InStr(1, my3rdNo, ")") > 0 Then 'if tied 3rd
                    dup3rd = True
                    my3rdNo = Replace(my3rdNo, ")", "")
                    Dup3rdNoPoss = 4 'The dup winner No is at the 4th :5%;
                    Dup3rdPlacePoss = 8 'the dup 3rd place $ is at the 8th :15%;
                Else
                    dup3rd = False
                    GoTo gotAllValues:
                End If
'if there is a tied 3rd place
                If dup3rd = True Then
                    Dup3rdNo = RegExpFind(curWork, ":5%;([^<]+)", Dup3rdNoPoss, False) ' URL up to <
                    Dup3rdNo = Replace(Dup3rdNo, ":5%;"" align=""right"">", "")
                    Dup3rdNo = Replace(Dup3rdNo, Dup3rdNo, ";" & Dup3rdNo & ";")
                    Dup3rdNo = Replace(Dup3rdNo, ")", "")
                    Dup3rdPlace = RegExpFind(curWork, ":15%;([^<]+)", Dup3rdPlacePoss, False) ' URL up to <
                    Dup3rdPlace = Replace(Dup3rdPlace, ":15%;"" align=""right"">", "")
                    Dup3rdPlace = Application.WorksheetFunction.Clean(Dup3rdPlace)
                    Dup3rdPlace = Application.WorksheetFunction.Trim(Dup3rdPlace)
                    GoTo gotAllValues:
                End If
gotAllValues:
            If InStr(1, curWork, ">F4<") > 0 Then
                curWorkTemp = Mid(curWork, InStr(1, curWork, ">F4<"), Len(curWork))
                my4thNo = RegExpFind(curWorkTemp, ":55%;([^<]+)", 1, False) ' URL up to <
                my4thNo = Replace(my4thNo, ":55%;"">", "")
                my4thNo = Split(my4thNo, "*")(3) 'Split(sText, "|")(0)
                my4thNo = Trim(my4thNo)
                my4thNo = Replace(my4thNo, my4thNo, ";" & my4thNo & ";")
            End If
'get the Radio Tab: favourite picks. If no Readio Tab progress through the other tippers in order
'FavValue:
                
                If InStr(1, curWork, "RADIO TAB:") > 0 Then
                    sFav = RegExpFind(curWork, "RADIO TAB:([^%]+)", 1, False) ' URL up to %
                'QLD
                ElseIf InStr(1, curWork, "DAVID FOWLER:") > 0 Then
                    sFav = RegExpFind(curWork, "DAVID FOWLER:([^%]+)", 1, False) ' Doomben
                ElseIf InStr(1, curWork, "CHRIS NELSON:") > 0 Then
                    sFav = RegExpFind(curWork, "CHRIS NELSON:([^%]+)", 1, False) ' Doomben
                ElseIf InStr(1, curWork, "PAUL DOLAN:") > 0 Then
                    sFav = RegExpFind(curWork, "PAUL DOLAN:([^%]+)", 1, False) ' Sunshine Coast
                ElseIf InStr(1, curWork, "STEVE HAWKINS:") > 0 Then
                    sFav = RegExpFind(curWork, "STEVE HAWKINS:([^%]+)", 1, False) ' Gold Coast
                ElseIf InStr(1, curWork, "DAMIAN COURTNEY:") > 0 Then
                    sFav = RegExpFind(curWork, "DAMIAN COURTNEY:([^%]+)", 1, False) ' Gold Coast
                ElseIf InStr(1, curWork, "JOHN FORSYTHE:") > 0 Then
                    sFav = RegExpFind(curWork, "JOHN FORSYTHE:([^%]+)", 1, False) ' Cairns
                ElseIf InStr(1, curWork, "BRETT MOODY:") > 0 Then
                    sFav = RegExpFind(curWork, "BRETT MOODY:([^%]+)", 1, False) ' Dalby
                ElseIf InStr(1, curWork, "RUSSELL LEONARD:") > 0 Then
                    sFav = RegExpFind(curWork, "RUSSELL LEONARD:([^%]+)", 1, False) ' Rockhampton
                ElseIf InStr(1, curWork, "RUSSEL LEONARD:") > 0 Then
                    sFav = RegExpFind(curWork, "RUSSEL LEONARD:([^%]+)", 1, False) ' Rockhampton
                ElseIf InStr(1, curWork, "LIAM MULRY:") > 0 Then
                    sFav = RegExpFind(curWork, "LIAM MULRY:([^%]+)", 1, False) ' Rockhampton
                ElseIf InStr(1, curWork, "TONY WODE:") > 0 Then
                    sFav = RegExpFind(curWork, "TONY WODE:([^%]+)", 1, False) ' Townsville
                ElseIf InStr(1, curWork, "TERRY SPARGO:") > 0 Then
                    sFav = RegExpFind(curWork, "TERRY SPARGO:([^%]+)", 1, False) ' Ipswich
                'NSW
                ElseIf InStr(1, curWork, "DARREN FLINDELL:") > 0 Then
                    sFav = RegExpFind(curWork, "DARREN FLINDELL:([^%]+)", 1, False) ' Rosehill
                ElseIf InStr(1, curWork, "KEVIN CASEY:") > 0 Then
                    sFav = RegExpFind(curWork, "KEVIN CASEY:([^%]+)", 1, False) ' Rosehill
                ElseIf InStr(1, curWork, "ANTHONY COLLINS:") > 0 Then
                    sFav = RegExpFind(curWork, "ANTHONY COLLINS:([^%]+)", 1, False) ' Lismore
                ElseIf InStr(1, curWork, "JOSH FLEMING:") > 0 Then
                    sFav = RegExpFind(curWork, "JOSH FLEMING:([^%]+)", 1, False) ' Hawkesbury
                ElseIf InStr(1, curWork, "ALAN HULL:") > 0 Then
                    sFav = RegExpFind(curWork, "ALAN HULL:([^%]+)", 1, False) ' Wagga
                ElseIf InStr(1, curWork, "ALLAN HULL:") > 0 Then
                    sFav = RegExpFind(curWork, "ALLAN HULL:([^%]+)", 1, False) ' Wagga
                ElseIf InStr(1, curWork, "SHAYNE MONTGOMERY:") > 0 Then
                    sFav = RegExpFind(curWork, "SHAYNE MONTGOMERY:([^%]+)", 1, False) ' Wagga
                ElseIf InStr(1, curWork, "JULIE ROWLAND:") > 0 Then
                    sFav = RegExpFind(curWork, "JULIE ROWLAND:([^%]+)", 1, False) ' Wagga
                ElseIf InStr(1, curWork, "LUKE MARLOW:") > 0 Then
                    sFav = RegExpFind(curWork, "LUKE MARLOW:([^%]+)", 1, False) 'Muswellbrook
                ElseIf InStr(1, curWork, "COLIN HODGES:") > 0 Then
                    sFav = RegExpFind(curWork, "COLIN HODGES:([^%]+)", 1, False) 'Forbes
                ElseIf InStr(1, curWork, "JAMES TAIT:") > 0 Then
                    sFav = RegExpFind(curWork, "JAMES TAIT:([^%]+)", 1, False) 'Sapphire Coast
                ElseIf InStr(1, curWork, "IAN HUMPHRIES:") > 0 Then
                    sFav = RegExpFind(curWork, "IAN HUMPHRIES:([^%]+)", 1, False) 'Sapphire Coast
                ElseIf InStr(1, curWork, "ANTHONY MANTON:") > 0 Then
                    sFav = RegExpFind(curWork, "ANTHONY MANTON:([^%]+)", 1, False) 'Newcastle
                ElseIf InStr(1, curWork, "BOB POETSCHKA:") > 0 Then
                    sFav = RegExpFind(curWork, "BOB POETSCHKA:([^%]+)", 1, False) 'Armidale
                ElseIf InStr(1, curWork, "SKY FORM:") > 0 Then
                    sFav = RegExpFind(curWork, "SKY FORM:([^%]+)", 1, False) 'Orange
                ElseIf InStr(1, curWork, "PAUL FRANCIS:") > 0 Then
                    sFav = RegExpFind(curWork, "PAUL FRANCIS:([^%]+)", 1, False) 'Corowa
                ElseIf InStr(1, curWork, "ROBERT BRANDOLINI:") > 0 Then
                    sFav = RegExpFind(curWork, "ROBERT BRANDOLINI:([^%]+)", 1, False) 'Bowraville
                ElseIf InStr(1, curWork, "PHIL ROBERTS:") > 0 Then
                    sFav = RegExpFind(curWork, "PHIL ROBERTS:([^%]+)", 1, False) 'Taree
                'VIC
                ElseIf InStr(1, curWork, "GREG MILES:") > 0 Then
                    sFav = RegExpFind(curWork, "GREG MILES:([^%]+)", 1, False) ' Flemington
                ElseIf InStr(1, curWork, "DAVID GATELY:") > 0 Then
                    sFav = RegExpFind(curWork, "DAVID GATELY:([^%]+)", 1, False) ' Flemington
                ElseIf InStr(1, curWork, "MATTHEW HILL:") > 0 Then
                    sFav = RegExpFind(curWork, "MATTHEW HILL:([^%]+)", 1, False) ' Sandown
                ElseIf InStr(1, curWork, "BRAD WATERS:") > 0 Then
                    sFav = RegExpFind(curWork, "BRAD WATERS:([^%]+)", 1, False) ' Sandown
                ElseIf InStr(1, curWork, "MITCHELL MANNERS:") > 0 Then
                    sFav = RegExpFind(curWork, "MITCHELL MANNERS:([^%]+)", 1, False) ' Kembla Grange
                ElseIf InStr(1, curWork, "ADAM OLSZANSKI:") > 0 Then
                    sFav = RegExpFind(curWork, "ADAM OLSZANSKI:([^%]+)", 1, False) ' Seymour
                ElseIf InStr(1, curWork, "TERRY BAILEY:") > 0 Then
                    sFav = RegExpFind(curWork, "TERRY BAILEY:([^%]+)", 1, False) ' Cranbourne
                ElseIf InStr(1, curWork, "JOEL MARSHALL:") > 0 Then
                    sFav = RegExpFind(curWork, "JOEL MARSHALL:([^%]+)", 1, False) ' Cranbourne
                ElseIf InStr(1, curWork, "RICK MCINTOSH:") > 0 Then
                    sFav = RegExpFind(curWork, "RICK MCINTOSH:([^%]+)", 1, False) 'Mildura
                ElseIf InStr(1, curWork, "CARL D'IORIO:") > 0 Then
                    sFav = RegExpFind(curWork, "CARL D'IORIO:([^%]+)", 1, False) 'Mildura
                ElseIf InStr(1, curWork, "ADAM CRETTENDEN:") > 0 Then
                    sFav = RegExpFind(curWork, "ADAM CRETTENDEN:([^%]+)", 1, False) 'Donald
                ElseIf InStr(1, curWork, "CARL DI IORIO:") > 0 Then
                    sFav = RegExpFind(curWork, "CARL DI IORIO:([^%]+)", 1, False) 'Donald
                ElseIf InStr(1, curWork, "BREDAN DELANEY:") > 0 Then
                    sFav = RegExpFind(curWork, "BREDAN DELANEY:([^%]+)", 1, False) 'Pakenham
                ElseIf InStr(1, curWork, "BRENDAN TUPPER:") > 0 Then
                    sFav = RegExpFind(curWork, "BRENDAN TUPPER:([^%]+)", 1, False) 'Pakenham
                ElseIf InStr(1, curWork, "ROB MCINTOSH:") > 0 Then
                    sFav = RegExpFind(curWork, "ROB MCINTOSH:([^%]+)", 1, False) 'Benalla
                ElseIf InStr(1, curWork, "ANDREW HANNAN:") > 0 Then
                    sFav = RegExpFind(curWork, "ANDREW HANNAN:([^%]+)", 1, False) 'Benalla
                ElseIf InStr(1, curWork, "BRENDAN DELANEY:") > 0 Then
                    sFav = RegExpFind(curWork, "BRENDAN DELANEY:([^%]+)", 1, False) 'Ararat
                ElseIf InStr(1, curWork, "JOHN BARKER:") > 0 Then
                    sFav = RegExpFind(curWork, "JOHN BARKER:([^%]+)", 1, False) 'Ararat
                ElseIf InStr(1, curWork, "MATTHEW JACKSON:") > 0 Then
                    sFav = RegExpFind(curWork, "MATTHEW JACKSON:([^%]+)", 1, False) 'Traralgon
                ElseIf InStr(1, curWork, "CRAIG EVANS:") > 0 Then
                    sFav = RegExpFind(curWork, "CRAIG EVANS:([^%]+)", 1, False) 'Kerang
                'SA
                ElseIf InStr(1, curWork, "TERRY MCAULIFFE:") > 0 Then
                    sFav = RegExpFind(curWork, "TERRY MCAULIFFE:([^%]+)", 1, False) ' Morphettville
                ElseIf InStr(1, curWork, "JOHN LETTS:") > 0 Then
                    sFav = RegExpFind(curWork, "JOHN LETTS:([^%]+)", 1, False) ' Morphettville
                ElseIf InStr(1, curWork, "MARK MATTHEWS:") > 0 Then
                    sFav = RegExpFind(curWork, "MARK MATTHEWS:([^%]+)", 1, False) ' Bordertown
                ElseIf InStr(1, curWork, "TIM EDWARDS:") > 0 Then
                    sFav = RegExpFind(curWork, "TIM EDWARDS:([^%]+)", 1, False) ' Mindarie Halidon
                ElseIf InStr(1, curWork, "ROYCE NEWTON:") > 0 Then
                    sFav = RegExpFind(curWork, "ROYCE NEWTON:([^%]+)", 1, False) ' Pt Headland
                ElseIf InStr(1, curWork, "MARK MATHEWS:") > 0 Then
                    sFav = RegExpFind(curWork, "MARK MATHEWS:([^%]+)", 1, False) ' Pt Headland
                'NT
                ElseIf InStr(1, curWork, "CRAIG SAINT:") > 0 Then
                    sFav = RegExpFind(curWork, "CRAIG SAINT:([^%]+)", 1, False) ' Darwin
                ElseIf InStr(1, curWork, "CRAIG SANT:") > 0 Then
                    sFav = RegExpFind(curWork, "CRAIG SANT:([^%]+)", 1, False) 'Darwin
                ElseIf InStr(1, curWork, "SHANE GREEN:") > 0 Then
                    sFav = RegExpFind(curWork, "SHANE GREEN:([^%]+)", 1, False) ' Alice Springs
                ElseIf InStr(1, curWork, "PAT COMERFORD:") > 0 Then
                    sFav = RegExpFind(curWork, "PAT COMERFORD:([^%]+)", 1, False) ' Alice Springs
                'TAS COLIN MCNIFF:
                ElseIf InStr(1, curWork, "SHANE YATES:") > 0 Then
                    sFav = RegExpFind(curWork, "SHANE YATES:([^%]+)", 1, False) ' Devonport
                 ElseIf InStr(1, curWork, "COLIN MCNIFF:") > 0 Then
                    sFav = RegExpFind(curWork, "COLIN MCNIFF:([^%]+)", 1, False) ' Devonport
                'WA MATT MCDERMOTT:
                ElseIf InStr(1, curWork, "DAVID SHEEHAN:") > 0 Then
                    sFav = RegExpFind(curWork, "DAVID SHEEHAN:([^%]+)", 1, False) ' Kalgoolie
                ElseIf InStr(1, curWork, "DAVE SHEEHAN:") > 0 Then
                    sFav = RegExpFind(curWork, "DAVE SHEEHAN:([^%]+)", 1, False) ' Kalgoolie
                ElseIf InStr(1, curWork, "DARREN MCAULLAY:") > 0 Then
                    sFav = RegExpFind(curWork, "DARREN MCAULLAY:([^%]+)", 1, False) ' Belmont
                ElseIf InStr(1, curWork, "ERNIE MANNING:") > 0 Then
                    sFav = RegExpFind(curWork, "ERNIE MANNING:([^%]+)", 1, False) ' Belmont
                ElseIf InStr(1, curWork, "ROYCE NEWTON:") > 0 Then
                    sFav = RegExpFind(curWork, "ROYCE NEWTON:([^%]+)", 1, False) ' Pt Headland
                ElseIf InStr(1, curWork, "RICHARD BELL:") > 0 Then
                    sFav = RegExpFind(curWork, "RICHARD BELL:([^%]+)", 1, False) ' Geraldton
                ElseIf InStr(1, curWork, "CRAIG MORRISON:") > 0 Then
                    sFav = RegExpFind(curWork, "CRAIG MORRISON:([^%]+)", 1, False) ' Albany
                ElseIf InStr(1, curWork, "MATT MCDERMOTT:") > 0 Then
                    sFav = RegExpFind(curWork, "MATT MCDERMOTT:([^%]+)", 1, False) ' Pinjarra
                ElseIf InStr(1, curWork, "MATTHEW YOUNG:") > 0 Then
                    sFav = RegExpFind(curWork, "MATTHEW YOUNG:([^%]+)", 1, False) ' Dongara
                ElseIf InStr(1, curWork, "JOHN HUNT:") > 0 Then
                    sFav = RegExpFind(curWork, "JOHN HUNT:([^%]+)", 1, False) ' Broome
                End If
                If sFav <> "" Then
                    sFav = Mid(sFav, InStr(1, sFav, "strong>") + 7, 20)
                    sFav = Left(sFav, InStr(1, sFav, "</td") - 1)
                    sFav = Trim(sFav)
                    sFav = Replace(sFav, "*", "")
                    sFav = Replace(sFav, "-", ";")
                    sFav = Application.WorksheetFunction.Clean(sFav)
                    sFav = Application.WorksheetFunction.Trim(sFav)
                    sFav = ";" & sFav & ";"
                End If
'get the late mail
                sLateMail = RegExpFind(curWork, "LATE MAIL:([^%]+)", 1, False) ' URL up to %
                If sLateMail <> "" Then
                    sLateMail = Mid(sLateMail, InStr(1, sLateMail, "strong>") + 7, Len(sLateMail))
                    sLateMail = Left(sLateMail, InStr(1, sLateMail, "</td") - 1)
                    sLateMail = Replace(sLateMail, " ", "")
                    sLateMail = Replace(sLateMail, Chr(10), "")
                    sLateMail = Replace(sLateMail, Chr(160), "")
                    sLateMail = Application.WorksheetFunction.Clean(sLateMail)
                    sLateMail = Application.WorksheetFunction.Trim(sLateMail)
                    sLateMail = ";" & sLateMail & ";"
                End If
' Got all the values now
            Set cSelection = Range("C" & scRow1 & ":C" & lastRow)
                For Each cY In cSelection 'the one race determined from Col C
                    sY = ";" & cY.value & ";"
                    If InStr(1, sFav, sY) > 0 Then
                        cY.Interior.ColorIndex = 20 'light blue
                    End If
                    If sY = sLateMail Then
                        cY.Interior.ColorIndex = 8 'dark blue
                    End If

                    Select Case sY
                        Case my1stNo
                            cY.Offset(0, -1) = "1"
                            cY.Offset(0, 16) = my1stWin
                            cY.Offset(0, 17) = my1stPlace
                        Case my2ndNo
                            cY.Offset(0, -1) = "2"
                            cY.Offset(0, 17) = my2ndPlace
                        Case my3rdNo
                            cY.Offset(0, -1) = "3"
                            cY.Offset(0, 17) = my3rdPlace
                        Case my4thNo
                            cY.Offset(0, -1) = "4"
                        Case Dup1stNo
                            cY.Offset(0, -1) = "1"
                            cY.Offset(0, 16) = Dup1stWin
                            cY.Offset(0, 17) = Dup1stPlace
                        Case Dup2ndNo
                            cY.Offset(0, -1) = "2"
                            cY.Offset(0, 17) = Dup2ndPlace
                        Case Dup3rdNo
                            cY.Offset(0, -1) = "3"
                            cY.Offset(0, 17) = Dup3rdPlace
                    End Select
                Next cY
             scRow1 = lastRow + 1
        Else
            scRow1 = scRow1 + 1
        End If
    End If
' reset the variables
my1stNo = ""
my2ndNo = ""
my3rdNo = ""
my4thNo = ""
Dup1stNo = ""
Dup2ndNo = ""
Dup3rdNo = ""
my1stWin = ""
my1stPlace = ""
my2ndPlace = ""
my3rdPlace = ""
Dup1stWin = ""
Dup1stPlace = ""
Dup2ndPlace = ""
Dup3rdPlace = ""
Dup1stNoPoss = 0
Dup1stWinPoss = 0
Dup1stPlacePoss = 0
my2ndNoPoss = 0
my2ndPlacePoss = 0
Dup2ndNoPoss = 0
Dup2ndPlacePoss = 0
my3rdNoPoss = 0
my3rdPlacePoss = 0
Dup3rdNoPoss = 0
Dup3rdPlacePoss = 0
dup1st = False
dup2nd = False
dup3rd = False
sFav = ""
sLateMail = ""
curWorkTemp = ""

Set oHttp = Nothing

Next scX


End Sub
Sub BuildHorseScore_OLD()
' Build the combinations in Col V for the placegetters
    Dim myselection As Range
    Dim myX As Range
    Dim myScore As Long
    Dim lTen        As Long
    Dim lJockey1    As Long
    Dim lJockey2    As Long
    Dim lJockey3    As Long
    Dim lJockey4    As Long
    Dim lJockey5    As Long
    Dim lTrain1    As Long
    Dim lTrain2    As Long
    Dim lTrain3    As Long
    Dim lTrain4    As Long
    Dim lTrain5    As Long
    Dim lTrack      As Long
    Dim lTrack2     As Long
    Dim lBarr       As Long
    Dim lWeight     As Long
    Dim lHTime     As Long
    Dim lHTime_2   As Long
    Dim lMPS        As Long
    Dim lAMPS       As Long
    Dim lAAMPS      As Long
    Dim lCalFin     As Long
    Dim lAdjust     As Long
    Dim lClass      As Long
    Dim lClass2     As Long
    Dim lLast600    As Long
    Dim lLast600_2  As Long
    Dim lLast600_3  As Long
' enter the values of the variables
lTen = 7
lJockey1 = 6 '7 Code 6
lJockey2 = 5
lJockey3 = 3
lJockey4 = 2
lJockey5 = 1
lTrain1 = 6 '7 Code 6
lTrain2 = 5
lTrain3 = 3
lTrain4 = 2
lTrain5 = 1
lTrack = 10 '6
lTrack2 = 7 '4
lBarr = 4 'G was 2
lWeight = 4 'H was 1
lHTime = 8 'M
lHTime_2 = 5 'M
lMPS = 4 'N (was 3)
lAMPS = 6 'O
lAAMPS = 3 'O
'lCalFin = 3 'Q
'lAdjust = 4 'R
lCalFin = 0 'Q
lAdjust = 0 'R
lClass = 6 'U (money value)
lClass2 = 3 'U
lLast600 = 0 'X yellow 6 (was 7)
lLast600_2 = 0 'X light yellow 19 (was 5)
lLast600_3 = 0 'X grey 15 (was 3)
' put a header in the row
Range("X1").value = "SCORE"
    Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'Horse No
        For Each myX In myselection 'Col C
        myScore = 0
        If myX.value <> "" Then
            If myX.Offset(0, 1).Interior.ColorIndex = 6 Then ' Last 10 placings
                myScore = myScore + lTen
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 6 Then ' Jockey 80-50 wins
                myScore = myScore + lJockey1
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 12 Then ' Jockey 49-40 wins
                myScore = myScore + lJockey2
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 19 Then ' Jockey 39-30 wins
                myScore = myScore + lJockey3
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 15 Then ' Jockey 29-20 wins
                myScore = myScore + lJockey4
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 24 Then ' Jockey 19-15 wins
                myScore = myScore + lJockey5
            End If
            If myX.Offset(0, 4).Interior.ColorIndex = 19 Then ' Barrier
                myScore = myScore + lBarr
            End If
            If myX.Offset(0, 5).Interior.ColorIndex = 19 Then ' Weight
                myScore = myScore + lWeight
            End If
            If myX.Offset(0, 6).Interior.ColorIndex = 6 Then ' HTrack
                myScore = myScore + lTrack
            End If
            If myX.Offset(0, 6).Interior.ColorIndex = 19 Then ' HTrack2
                myScore = myScore + lTrack2
            End If
            If myX.Offset(0, 10).Interior.ColorIndex = 6 Then ' HTime
                myScore = myScore + lHTime
            End If
            If myX.Offset(0, 10).Interior.ColorIndex = 19 Then ' Pale Htime
                myScore = myScore + lHTime_2
            End If
            If myX.Offset(0, 11).Interior.ColorIndex = 6 Then ' MPS
                myScore = myScore + lMPS
            End If
            If myX.Offset(0, 12).Interior.ColorIndex = 6 Then ' Average MPS
                myScore = myScore + lAMPS
            End If
            If myX.Offset(0, 12).Interior.ColorIndex = 19 Then ' Pale Yellow Average MPS
                myScore = myScore + lAAMPS
            End If
            If myX.Offset(0, 13).Interior.ColorIndex = 6 Then ' Trainer 80-50 wins
                myScore = myScore + lTrain1
            End If
            If myX.Offset(0, 13).Interior.ColorIndex = 12 Then
                myScore = myScore + lTrain2
            End If
            If myX.Offset(0, 13).Interior.ColorIndex = 19 Then
                myScore = myScore + lTrain3
            End If
            If myX.Offset(0, 13).Interior.ColorIndex = 15 Then
                myScore = myScore + lTrain4
            End If
            If myX.Offset(0, 13).Interior.ColorIndex = 24 Then
                myScore = myScore + lTrain5
            End If
            If myX.Offset(0, 14).Interior.ColorIndex = 6 Then ' Calculated Finish
                myScore = myScore + lCalFin
            End If
            If myX.Offset(0, 15).Interior.ColorIndex = 6 Then ' Adjusted Finish
                myScore = myScore + lAdjust
            End If
            If myX.Offset(0, 18).Interior.ColorIndex = 6 Then ' U - Class yellow
                myScore = myScore + lClass
            End If
            If myX.Offset(0, 18).Interior.ColorIndex = 19 Then ' U - Class Pale yellow
                myScore = myScore + lClass2
            End If
            If myX.Offset(0, 22).Interior.ColorIndex = 6 Then ' X - Last600 yellow
                myScore = myScore + lLast600
            End If
            If myX.Offset(0, 22).Interior.ColorIndex = 19 Then ' X - Last600 light yellow
                myScore = myScore + lLast600_2
            End If
            If myX.Offset(0, 22).Interior.ColorIndex = 15 Then ' X - Last600 grey
                myScore = myScore + lLast600_3
            End If
            myX.Offset(0, 21) = myScore
        End If
        myScore = 0
        Next myX
Range("X1").Select
End Sub
Private Sub SortHorseScore_OLD()
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
'Dim lastSheetRow As Long 'last row of the sheet
'Dim r           As Long
Dim scSelect As Range
Dim scX         As Range
Dim cSelect  As Range ' current race selection
Dim cY          As Range 'horses in current race
Dim dSelection  As Range ' current race selection
Dim dY          As Range 'horses in current race
'Dim rng         As Range 'for deleting the scratchings
Dim myCol2      As Long

myCol2 = ActiveSheet.UsedRange.Columns.count
scRow1 = 3 'start on the first horse
Set scSelect = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row)
For Each scX In scSelect 'Col C
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            Range("C" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
            
'range(Cells(scRow1, myCol + 3), Cells(lastRow, myCol + 3))
            'Set cSelect = range("A" & scRow1 & ":BA" & lastRow)
            Set cSelect = Range(Cells(scRow1, 1), Cells(lastRow, myCol2))
               ' cSelect.Select
               ' Selection.Sort Key1:=Range("X" & scRow1), Order1:=xlDescending, _
               ' Header:=xlNo, OrderCustom:=1, MatchCase:=False, _
               ' Orientation:=xlTopToBottom
                Set dSelection = Range("X" & scRow1 & ":X" & lastRow)
                    For Each dY In dSelection 'the one race determined from Col X
                        dY.Interior.ColorIndex = xlNone
                        If dY.value = Application.Max(dSelection) Then
'if better than 5 and best AMPS and at least a 3rd in last 3 starts and race distance is within 400 metres of the history
                            If dY.value - dY.Offset(1, 0) >= 5 _
                                And dY.Offset(0, -9).Interior.ColorIndex = 6 _
                                And dY.Offset(0, -20).Interior.ColorIndex = 6 _
                                And dY.Offset(0, -13).Interior.ColorIndex = 6 Then
'if best in Calc finish or Adjusted finish
                                If dY.Offset(0, -6).Interior.ColorIndex = 6 _
                                    Or dY.Offset(0, -7).Interior.ColorIndex = 6 Then 'Calc or adjusted finish
'if won or within 3 lengths for the Htime
                                    If dY.Offset(0, -11).Interior.ColorIndex = 6 _
                                        Or dY.Offset(0, -11).Interior.ColorIndex = 19 Then 'Htime
                                        dY.Interior.ColorIndex = 7 'magenta - worth betting on
                                    Else
                                        dY.Interior.ColorIndex = 6 ' yellow
                                    End If
                                Else
                                    dY.Interior.ColorIndex = 6 ' yellow
                                End If
                            Else
                                dY.Interior.ColorIndex = 6 ' yellow
                            End If
                        ElseIf dY.value > Application.Average(dSelection) Then
                            dY.Interior.ColorIndex = 19 ' pale yellow
                        End If
                    Next dY

             scRow1 = lastRow + 1
        Else
            scRow1 = scRow1 + 1
        End If
    End If
Next scX
Range("X3").Select

End Sub
Sub UpdateSheet()
On Error Resume Next

    Range("Y:Y").ColumnWidth = 1
    Range("AA:AA").ColumnWidth = 1
    Range("AE:AE").ColumnWidth = 4
    Range("AQ:AQ").ColumnWidth = 9

Call EnterScratchings
Call GetHorseRating
Call getFormCount 'col AN

Call HighlightWinners
'Call BuildHorseScore 'replaced by HighlightExp
'Call SortHorseScore
'Call EnterResults (now done in GetHorseRating)
'Call BuildCombo
Call BuildExpScore
'Call CalcChances
'Call getFormCount 'col AN
Call HighlightExp 'working on col AR
Call SortExpScore 'sort AR
Call PicWinner 'picking on cols AR and AT (highlit in D) pic winner from here 22/3/19
'Call SummaryBuilder.BestMPS600_Bet 'pic winner from here 2/1/17 (bet for place)
'Call SummaryBuilder.BestMPS600 'pic winner from here
'Call SummaryBuilder.BestRating_working_summary
Range("C3").Select
ActiveWorkbook.Save
Exit Sub
updateErr:
    'LogInformation "Error in Update Sheet - last position: " & UDErr
    'Resume Next
End Sub
Sub getRaceResultwholeDay_old()
    Dim urlName2 As String
    Dim oHttp2 As Object
    Dim mySite2 As String
    Dim myA As String
    Dim myB As String
    Dim x As Long
    Dim y As Long 'date
    Dim z As String 'date
    Dim m As String
    Dim K As String
    
     'Sets the url for the whole day
     'You can change both to suit your needs
'    urlName2 = InputBox(Prompt:="Enter URL", Title:="URL")
' or
' set up an auto date to do a whole month
'MsgBox ("You need to set up the days yet")
'End
On Error Resume Next
m = "2011" 'year
K = "09" 'month
For y = 26 To 28  'dates of the days to get
If y < 10 Then
    z = "0" & y
    Else
    z = y
End If
' http://www.racingnetwork.com.au/results/tabid/103/date/2011-08-27/default.aspx
' http://horseracing.bigpondsport.com/todaysracing/tabid/72/date/2011-08-27/default.aspx
    urlName2 = "http://horseracing.bigpondsport.com/todaysracing/tabid/72/date/" & m & K & z & "/default.aspx"
' get the date from the URL
'have't done this yet
' Get the URL for each meeting

    Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
    oHttp2.Open "GET", urlName2, False
    oHttp2.send
    mySite2 = oHttp2.responseText 'a contains source code of website
    myA = RegExpFind2(mySite2, "tabid/73[^<]*", 1, False) ' URL up to <
    For x = 1 To cntMeetings
        myA = RegExpFind2(mySite2, "tabid/73[^<]*", x, False) ' URL up to <
        myB = Right(myA, 7)
        If myB = "Results" Then
            myA = Left(myA, Application.Find(">", myA, 1) - 2)
            currURL = "http://horseracing.bigpondsport.com/todaysracing/fullracecard/" & myA
            Call GetHorseResults
        End If
    Next x
Next y
    
    
End Sub

Sub OneHorseDetail()
' this script does one horse at a time from out of FORM tab in a Risa coming race

Dim myselection     As Range
Dim myX             As Range
Dim Testing         As Boolean
Dim NotValid        As Boolean
Dim myRow           As Long
Dim f               As Long
Dim g               As Long
Dim a               As Long
Dim b               As Long
Dim myStr           As String 'the working string in Col P
Dim myhorse         As String
Dim myPosition      As String
Dim myTrack         As String
Dim myDate          As String
Dim myDist          As String
Dim myCond          As String
Dim myValue         As String
Dim myKG            As String
Dim myTime          As String
Dim myDistBehind    As String
Dim Kgs             As Double
Dim Distance        As Double
Dim myDistance      As Double
Dim mps             As Double
Dim myMin           As Long
Dim mySec           As Long
Dim myTenths        As Double
Dim actTime         As Double 'race time in seconds
Dim theDist         As Long
    Dim r As Long
    Dim n As Long
    Dim rng As Range
Dim myRow1          As Long
Dim lastRow         As Long
Dim rngMPS          As Range


Range("B:B").ColumnWidth = 50
    Rows.AutoFit
Testing = False
NotValid = False
Cells.Hyperlinks.Delete
Cells.UnMerge
myhorse = Range("A1").value
myhorse = Trim(myhorse)
If Testing = True Then GoTo Pos3:

    Set myselection = Range("A3:A" & Range("A" & Rows.count).End(xlUp).Row)
        myRow = 0
        For Each myX In myselection 'Col A
            If LCase(Left(myX, 7)) = "breeder" Then
                myRow = myX.Row
            ElseIf LCase(Left(myX, 6)) = "owners" Then
                myRow = myX.Row
            ElseIf LCase(Left(myX, 7)) = "colours" Then
                myRow = myX.Row
            ElseIf LCase(Left(myX, 12)) = "gear changes" Then
                myRow = myX.Row
            ElseIf LCase(Left(myX, 7)) = "trainer" Then
                myRow = myX.Row
            ElseIf LCase(Left(myX, 6)) = "record" Then
                myRow = myX.Row
            ElseIf LCase(Left(myX, 6)) = "track:" Then
                myRow = myX.Row
            ElseIf LCase(Left(myX, 8)) = "distance" Then
                myRow = myX.Row
            ElseIf myX.Offset(0, 1) = "" And myX = "" Then
                myRow = myX.Row
            End If
        Next myX
        If myRow > 1 Then
            Rows("2:" & myRow).Delete
        End If
Pos1:
'Prep the sheet -
'insert a header row
If Range("b1").value <> "RaceNo" Then
'Insert new columns
    Columns("A:N").Insert Shift:=xlToRight
    Range("A:C, E:K, M:M").NumberFormat = "@"
   ' Range("C:C").NumberFormat = "dd/mm/yyyy"
    Range("D:D").NumberFormat = "0"
    Range("L:L").NumberFormat = "0.0"
    'Range("M:M").NumberFormat = "m:ss.00" 'change this to double
   ' Range("M:M").NumberFormat = "0.00"
    Range("N:N").NumberFormat = "0.0000000000"
    Range("N:N").ColumnWidth = 18
    Range("A1").value = "Track"
    Range("B1").value = "RaceNo"
    Range("C1").value = "Date"
    Range("C:C").ColumnWidth = 10
    Range("D1").value = "Distance"
    Range("E1").value = "Condition"
    Range("F1").value = "Position"
    Range("G1").value = "HorseNo"
    Range("H1").value = "Name"
    Range("I1").value = "Value"
    Range("J1").value = "Jockey"
    Range("K1").value = "Trainer"
    Range("L1").value = "Weight"
    Range("M1").value = "Time"
    Range("N1").value = "MPS"
End If
 'MsgBox ("PrepNewCols")
Pos2:
    Set myselection = Range("P2:P" & Range("P" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'Col P
        myStr = myX.value
        myStr = Application.WorksheetFunction.Clean(myStr)
        myStr = Application.WorksheetFunction.Trim(myStr)
        myX.Offset(0, -1) = Application.WorksheetFunction.Clean(myX.Offset(0, -1))
        myX.Offset(0, -1) = Application.WorksheetFunction.Trim(myX.Offset(0, -1))

        If myX.Offset(0, -1) <> "" Then
            myX.Offset(0, -8) = myhorse                         'myHorse
            NotValid = False
            myPosition = myX.Offset(0, -1)

            If InStr(1, myPosition, "T") > 0 Then
                NotValid = True
                GoTo TrialRace:
            End If
            f = InStr(1, myPosition, "of")
            myPosition = Left(myPosition, f - 2)
            myPosition = Trim(myPosition)
            If IsNumeric(myPosition) = False Then
                NotValid = True
                GoTo TrialRace:
            End If
            myX.Offset(0, -10) = myPosition                     'myPosition
            f = InStr(1, myStr, " ")
            If f < 4 Then 'if track code is 2 words
                f = InStr(4, myStr, " ")
            End If
            myTrack = Left(myStr, f - 1)
            myX.Offset(0, -15) = myTrack                        'myTrack
            myStr = Replace(myStr, myTrack, "")
            myStr = Trim(myStr)
            f = InStr(1, myStr, " ")
            If f = 8 Then ' a date
                myDate = Left(myStr, f - 1)
                myStr = Replace(myStr, myDate, "")
                myStr = Trim(myStr)
                myDate = Left(myDate, 2) & "-" & Mid(myDate, 3, 3) & "-" & Right(myDate, 2)
                myX.Offset(0, -13) = myDate                      'myDate
            Else
                MsgBox ("Problem finding a date in " & myStr)
                Exit Sub
            End If
            f = InStr(1, myStr, " ")
            myDist = Left(myStr, f - 1)
            myStr = Replace(myStr, myDist, "")
            myStr = Trim(myStr)
            myDist = Replace(myDist, "m", "")
            myX.Offset(0, -12) = myDist                          'myDist
            theDist = myDist
'            If theDist < 1000 Or theDist > 2000 Then
            If theDist < 1999 Then   'for doing the Melbourne Cup
                NotValid = True
                GoTo TrialRace:
            End If
            f = InStr(1, myStr, " ")
            myCond = Left(myStr, f - 1)
            If InStr(1, LCase(myCond), "heavy") > 0 Then
                NotValid = True
                GoTo TrialRace:
            End If
            If InStr(1, LCase(myCond), "slow") > 0 Then
                NotValid = True
                GoTo TrialRace:
            End If

            myX.Offset(0, -11) = myCond                         'myCond
            myStr = Replace(myStr, myCond, "")
            myStr = Trim(myStr)
            f = InStr(1, myStr, "$")
            myStr = Mid(myStr, f, Len(myStr))
            myStr = Trim(myStr)
            f = InStr(1, myStr, " ")
            myValue = Left(myStr, f - 1)
            myValue = Replace(myValue, "$", "")
            g = myValue / 1000
            myValue = g
            myX.Offset(0, -7) = myValue                         'myValue
            g = 0
            f = InStr(1, myStr, "kg")
            myStr = Left(myStr, f + 2)
            myStr = Trim(myStr)
            g = InStrRev(myStr, " ")
            myKG = Mid(myStr, g, Len(myStr))
            myKG = Replace(myKG, "kg", "")
            myX.Offset(0, -4) = myKG                            'myKG
            myStr = ""
            g = 0
            f = 0
        Else
            If NotValid = True Then GoTo TrialRace:
            f = InStr(1, myStr, ":")
            f = InStr(f, myStr, " ")
            myTime = Left(myStr, f - 1)
            f = InStrRev(myTime, " ")
            myTime = Mid(myTime, f, Len(myTime))
            myTime = Replace(myTime, ",", "")
            myTime = Replace(myTime, "R", "")
            myTime = Trim(myTime)                               'mytime
            a = InStr(1, myTime, ":")
            b = InStr(1, myTime, ".")
            myMin = Left(myTime, a - 1) * 60
            mySec = Mid(myTime, a + 1, (b - a) - 1)
            myTenths = "0." & Mid(myTime, b + 1, Len(myTime))
            actTime = myMin + mySec + myTenths                  'actTime
            If actTime = 0 Then GoTo TrialRace:                 'no time so back out

            If myPosition <> "1" Then
                If InStr(1, myStr, "L,") > 0 Then
                    f = InStr(1, myStr, "L,")
                ElseIf InStr(1, myStr, "L $") > 0 Then
                    f = InStr(1, myStr, "L $")
                ElseIf InStr(1, myStr, "L T") > 0 Then
                    f = InStr(1, myStr, "L T")
                ElseIf Right(myStr, 1) = "L" Then
                    f = Len(myStr)
                End If
                myDistBehind = Left(myStr, f)
                f = InStrRev(myDistBehind, " ")
                myDistBehind = Mid(myDistBehind, f, Len(myDistBehind))
                myDistBehind = Trim(myDistBehind)               'myDistBehind
                myX.Offset(-1, -3) = myDistBehind 'M time or margin behind
                myDistance = theDist - Replace(myDistBehind, "L", "") * 2.4
            Else
                myX.Offset(-1, -3) = myTime
                myDistance = theDist
            End If

' Build the kgs and distance for MPS
            Kgs = myKG - 50
            If theDist < 1201 Then
                Distance = myDistance + (Kgs / 2) * 1.2 '2.0kgs = half length
            ElseIf theDist < 1401 Then
                Distance = myDistance + (Kgs / 1.5) * 1.2 '1.5kgs = half length
            ElseIf theDist < 1601 Then
                Distance = myDistance + (Kgs * 1.2) '1kg = half length
            Else
                Distance = myDistance + (Kgs / 1.5) * 2.4 '1.5hgs = one length
            End If
            mps = Distance / actTime  'calc metres per second
            myX.Offset(-1, -2) = mps                         'O metres per second rating
              
        End If
TrialRace:
        Next myX
' Tidy the sheet
    Range("P2:P" & Range("P" & Rows.count).End(xlUp).Row).Offset(0, -2).Select
    Set rng = Selection 'Col N mps
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
                rng.Rows(r).EntireRow.Delete
            End If
        Next r
Pos3:
' Locate the best MPS and create data for entry
lastRow = Range("N65536").End(xlUp).Row
myRow1 = lastRow + 2
Set myselection = Range("N2:N" & Range("N" & Rows.count).End(xlUp).Row) 'MPS
    For Each myX In myselection 'Col C
        If lastRow > 1 Then 'make sure there is some data
            If lastRow > 2 Then 'and not just 1 row
                Set rngMPS = Range("N2:N" & lastRow)
                If myX.value = Application.Max(rngMPS) Then
                    Range("A" & myRow1).value = myX.Offset(0, -13) 'track
                    Range("B" & myRow1).value = myX.Offset(0, -11) 'date
                    Range("C" & myRow1).value = myX.Offset(0, -10) 'distance
                    Range("D" & myRow1).value = myX.Offset(0, -2) 'weight
                    Range("E" & myRow1).value = myX.Offset(0, -1) 'time
                    Range("F" & myRow1).NumberFormat = "0.00"
                    Range("F" & myRow1).value = myX 'mps
                    Range("G" & myRow1).NumberFormat = "0.00"
                    Range("G" & myRow1).value = Application.Average(rngMPS) 'Amps
                    Range("I" & myRow1).value = myX.Offset(0, -5) 'Value
                End If
            Else
                    Range("A" & myRow1).value = myX.Offset(0, -13) 'track
                    Range("B" & myRow1).value = myX.Offset(0, -11) 'date
                    Range("C" & myRow1).value = myX.Offset(0, -10) 'distance
                    Range("D" & myRow1).value = myX.Offset(0, -2) 'weight
                    Range("E" & myRow1).value = myX.Offset(0, -1) 'time
                    Range("F" & myRow1).NumberFormat = "0.00"
                    Range("F" & myRow1).value = myX 'mps
                    Range("G" & myRow1).NumberFormat = "0.00"
                    Range("G" & myRow1).value = myX 'Amps
                    Range("I" & myRow1).value = myX.Offset(0, -5) 'Value
            End If
        End If
    Next myX
   
End Sub
Private Sub CalcChances_OLD()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
'    Dim myHTime         As Range 'MPS Last 400m
    Dim myMPS           As Range 'MPS
    Dim myAMPS          As Range 'AMPS
    Dim myBar           As Range ' Barrier
    Dim myWeight        As Range ' Weight
    Dim myCalFin        As Range 'Calc finish
    Dim myAdjCalFin     As Range 'adjusted calc finish
    Dim myHValue        As Range
    Dim myMPS600        As Range
    Dim myRow1          As Long
    Dim myRow2          As Long
    Dim myLen           As Double
    Dim myRowEnd        As Long
    Dim raceDist        As Long
    Dim myForm          As String
    Dim mf1             As Long
    Dim mf2             As Long
    Dim mf3             As Long
    Dim mf4             As Long
    Dim jt              As Long
    Dim myChance        As Long
    On Error Resume Next
' put some headings in
    Range("Z1").value = "C-Form"
    Range("AA1").value = "C-Barrier"
    Range("AB1").value = "C-Weight"
    Range("AC1").value = "C-Distance"
    Range("AD1").value = "C-MPS"
    Range("AE1").value = "C-AMPS"
    Range("AF1").value = "C-Jock/Train"
    Range("AE1").value = "C-AMPS"
    Range("AG1").value = "C-CalFin"
    Range("AH1").value = "C-AdjFin"
    Range("AI1").value = "C-HVal"

' Clear Cols Z to AJ from previous color
    Columns("Z:AK").Interior.ColorIndex = xlNone
' Remove data out of col AJ
    Columns("AJ:AJ").ClearContents
    Range("AJ1").value = "C-MPS600"

    
    myRow1 = 3
    Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col C
            If myX.Row >= myRow1 Then
                If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                        Range("C" & myX.Row).End(xlDown).Select 'select whole race
                        myRowEnd = Selection.Row
                    Set myRng = Range("C" & myRow1 & ":C" & myRowEnd) 'The range to work on HorseNo
                  '  Set myHTime = Range("M" & myRow1 & ":M" & myRowEnd) 'HTime
                    Set myMPS = Range("N" & myRow1 & ":N" & myRowEnd)
                    Set myAMPS = Range("O" & myRow1 & ":O" & myRowEnd)
                    Set myCalFin = Range("Q" & myRow1 & ":Q" & myRowEnd)
                    Set myAdjCalFin = Range("R" & myRow1 & ":R" & myRowEnd)
                    Set myBar = Range("G" & myRow1 & ":G" & myRowEnd)
                    Set myWeight = Range("H" & myRow1 & ":H" & myRowEnd)
                    Set myHValue = Range("U" & myRow1 & ":U" & myRowEnd)
                    Set myMPS600 = Range("Y" & myRow1 & ":Y" & myRowEnd)
                        raceDist = Range("B" & myRow1 - 1)
                        For Each myY In myRng 'the one race determined from Col C
'C-Form Col Z
                            If Len(myY.Offset(0, 1)) > 3 Then
                                myForm = Right(myY.Offset(0, 1), 4)
                                myForm = UCase(myForm)
                                myForm = Replace(myForm, "X", "0", 1)
                                myForm = Replace(myForm, "L", "0", 1)
                                mf1 = Left(myForm, 1)
                                    If mf1 = 0 Then
                                    mf1 = 10
                                    End If
                                mf2 = Mid(myForm, 2, 1)
                                    If mf2 = 0 Then
                                    mf2 = 10
                                    End If
                                mf3 = Mid(myForm, 3, 1)
                                    If mf3 = 0 Then
                                    mf3 = 10
                                    End If
                                mf4 = Right(myForm, 1)
                                    If mf4 = 0 Then
                                    mf4 = 10
                                    End If
                            ElseIf Len(myY.Offset(0, 1)) > 2 Then
                                myForm = myY.Offset(0, 1)
                                myForm = UCase(myForm)
                                myForm = Replace(myForm, "X", "0", 1)
                                myForm = Replace(myForm, "L", "0", 1)
                                mf1 = Left(myForm, 1)
                                    If mf1 = 0 Then
                                    mf1 = 10
                                    End If
                                mf2 = Mid(myForm, 2, 1)
                                    If mf2 = 0 Then
                                    mf2 = 10
                                    End If
                                mf3 = Right(myForm, 1)
                                    If mf3 = 0 Then
                                    mf3 = 10
                                    End If
                                mf4 = 10
                            ElseIf Len(myY.Offset(0, 1)) > 1 Then
                                myForm = myY.Offset(0, 1)
                                myForm = UCase(myForm)
                                myForm = Replace(myForm, "X", "0", 1)
                                myForm = Replace(myForm, "L", "0", 1)
                                mf1 = Left(myForm, 1)
                                    If mf1 = 0 Then
                                    mf1 = 10
                                    End If
                                mf2 = Right(myForm, 1)
                                    If mf2 = 0 Then
                                    mf2 = 10
                                    End If
                                mf3 = 10
                                mf4 = 10
                            ElseIf Len(myY.Offset(0, 1)) > 0 Then
                                myForm = myY.Offset(0, 1)
                                myForm = UCase(myForm)
                                myForm = Replace(myForm, "X", "0", 1)
                                myForm = Replace(myForm, "L", "0", 1)
                                mf1 = myForm
                                    If mf1 = 0 Then
                                    mf1 = 10
                                    End If
                                mf2 = 10
                                mf3 = 10
                                mf4 = 10
                            Else
                                mf1 = 10
                                mf2 = 10
                                mf3 = 10
                                mf4 = 10
                            End If
                            myY.Offset(0, 23) = (mf1 + mf2 + mf3 + mf4) - 20
                            If myY.Offset(0, 23) < 0 Then
                                myY.Offset(0, 23).Interior.ColorIndex = 6
                                myChance = myChance + 1
                            End If
'C-Joc/Train Col AF
'jockey
                            If myY.Offset(0, 3).Interior.ColorIndex = 6 Then
                                jt = jt - 5
                            ElseIf myY.Offset(0, 3).Interior.ColorIndex = 12 Then
                                jt = jt - 4
                            ElseIf myY.Offset(0, 3).Interior.ColorIndex = 19 Then
                                jt = jt - 3
                            ElseIf myY.Offset(0, 3).Interior.ColorIndex = 15 Then
                                jt = jt - 2
                            ElseIf myY.Offset(0, 3).Interior.ColorIndex = 24 Then
                                jt = jt - 1
                            Else
                                jt = jt + 1
                            End If
'trainer
                            If myY.Offset(0, 13).Interior.ColorIndex = 6 Then
                                jt = jt - 5
                            ElseIf myY.Offset(0, 13).Interior.ColorIndex = 12 Then
                                jt = jt - 4
                            ElseIf myY.Offset(0, 13).Interior.ColorIndex = 19 Then
                                jt = jt - 3
                            ElseIf myY.Offset(0, 13).Interior.ColorIndex = 15 Then
                                jt = jt - 2
                            ElseIf myY.Offset(0, 13).Interior.ColorIndex = 24 Then
                                jt = jt - 1
                            Else
                                jt = jt + 1
                            End If
                            myY.Offset(0, 29).value = jt
                            If jt < 0 Then
                                myY.Offset(0, 29).Interior.ColorIndex = 6
                                myChance = myChance + 1
                            End If
'C-Barrier Col AA
                            myY.Offset(0, 24).value = myY.Offset(0, 4) - Application.Average(myBar)
                            If myY.Offset(0, 24).value < 0 Then
                                myY.Offset(0, 24).Interior.ColorIndex = 6
                                myChance = myChance + 1
                            End If
'C-Weight Col AB
                            myY.Offset(0, 25).value = myY.Offset(0, 5) - Application.Average(myWeight)
                            If myY.Offset(0, 25).value < 0 Then
                                myY.Offset(0, 25).Interior.ColorIndex = 6
                                myChance = myChance + 1
                            End If
'C-Distance Col AC
                            If myY.Offset(0, 8) <> "" Then
                                myY.Offset(0, 26).value = raceDist - myY.Offset(0, 8)
                                If myY.Offset(0, 26).value < 0 Then
                                    myY.Offset(0, 26).Interior.ColorIndex = 6
                                    myChance = myChance + 1
                                End If
'C-MPS Col AD
                                myY.Offset(0, 27).value = Application.Average(myMPS) - myY.Offset(0, 11)
                                If myY.Offset(0, 27).value < 0 Then
                                    myY.Offset(0, 27).Interior.ColorIndex = 6
                                    myChance = myChance + 1
                                End If
'C-AMPS Col AE
                                myY.Offset(0, 28).value = Application.Average(myAMPS) - myY.Offset(0, 12)
                                If myY.Offset(0, 28).value < 0 Then
                                    myY.Offset(0, 28).Interior.ColorIndex = 6
                                    myChance = myChance + 1
                                End If
'C-CalFin Col AG
                                myY.Offset(0, 30).value = myY.Offset(0, 14) - Application.Average(myCalFin)
                                If myY.Offset(0, 30).value < 0 Then
                                    myY.Offset(0, 30).Interior.ColorIndex = 6
                                    myChance = myChance + 1
                                End If
'C-AdjFin Col AH
                                myY.Offset(0, 31).value = myY.Offset(0, 15) - Application.Average(myAdjCalFin)
                                If myY.Offset(0, 31).value < 0 Then
                                    myY.Offset(0, 31).Interior.ColorIndex = 6
                                    myChance = myChance + 1
                                End If
'C-HVal Col AI
                                myY.Offset(0, 32).value = Application.Average(myHValue) - myY.Offset(0, 18)
                                If myY.Offset(0, 32).value < 0 Then
                                    myY.Offset(0, 32).Interior.ColorIndex = 6
                                    myChance = myChance + 1
                                End If
'C-MPS600 Col AJ
                                If myY.Offset(0, 22) <> "" Then
                                    myY.Offset(0, 33).value = Application.Average(myMPS600) - myY.Offset(0, 22)
                                    If myY.Offset(0, 33).value < 0 Then
                                        myY.Offset(0, 33).Interior.ColorIndex = 6
                                        myChance = myChance + 1
                                    End If
                                End If
                             End If
'Enter count of Neg Values
                            myY.Offset(0, 34).value = myChance
                            If myChance > 7 Then
                                myY.Offset(0, 34).Interior.ColorIndex = 7
                            End If
                     '   End If
                            mf1 = 0
                            mf2 = 0
                            mf3 = 0
                            mf4 = 0
                            jt = 0
                            myChance = 0
                        Next myY
                    myRow1 = myRowEnd + 1
                Else
                myRow1 = myRow1 + 1
                End If
            End If
        Next myX
Range("A1").Select
End Sub
Sub EnterFavourites()
'recommend using enterResult script, they are both getting info from same page. Just include FAV and LATE MAIL
Dim rSheet     As String
Dim rDate      As String
Dim rYear      As String
Dim rMonth     As String
Dim rDay       As String
Dim rTrack     As String
Dim rRace      As String 'Current Race
Dim sURL        As String 'url for the current race
Dim curRace     As String 'the web page for current race
Dim curWork     As String
Dim my1stNo     As String 'the winning number
Dim my2ndNo     As String
Dim my3rdNo     As String
Dim Dup1stNo    As String
Dim Dup2ndNo    As String
Dim Dup3rdNo    As String
Dim my1stWin    As String 'win amount
Dim my1stPlace  As String 'winner place amount
Dim my2ndPlace  As String
Dim my3rdPlace  As String
Dim Dup1stWin   As String
Dim Dup1stPlace As String
Dim Dup2ndPlace As String
Dim Dup3rdPlace As String
Dim sY          As String
Dim oHttp       As Object
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim lastSheetRow As Long 'last row of the sheet
Dim r           As Long
Dim Dup1stNoPoss    As Long 'the tied winner No position
Dim Dup1stWinPoss   As Long 'tied winner $ position
Dim Dup1stPlacePoss As Long 'tied winner placing $ position
Dim my2ndNoPoss     As Long ' 2nd place No poss
Dim my2ndPlacePoss  As Long '2nd place $ position
Dim Dup2ndNoPoss    As Long
Dim Dup2ndPlacePoss As Long
Dim my3rdNoPoss     As Long '3rd place no Position
Dim my3rdPlacePoss  As Long '3rd place $ position
Dim Dup3rdNoPoss    As Long
Dim Dup3rdPlacePoss As Long
Dim scSelection As Range
Dim scX         As Range
Dim cSelection  As Range ' current race selection
Dim cY          As Range 'horses in current race
Dim rng         As Range 'for deleting the scratchings
Dim dup1st      As Boolean
Dim dup2nd      As Boolean
Dim dup3rd      As Boolean


rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
'rDate = rYear & "-" & rMonth & "-" & rDay
rDate = rYear & "/" & rMonth & "/" & rDay
rTrack = Mid(rSheet, 12, 2)

'Set scSelection = Range("C2:C" & Range("C" & Rows.Count).End(xlUp).row)
'    For Each scX In scSelection 'Col C
' remove the emergency indicator
'            scX = Replace(scX, "e", "")
'            scX = Application.WorksheetFunction.Clean(Trim(scX))
'    Next scX
'count how many races for the day using the distance col, allows this to be re-run
' after a highlight winner has been run
'scRaceCnt = Application.CountIf(scSelection.Offset(0, -1), "> 800")
scRow1 = 3 'start on the first horse
' lastSheetRow = Range("C65536").End(xlUp).row
Set scSelection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row)
For Each scX In scSelection 'Col C
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            rRace = scX.Offset(-1, -2) ' race number
            Range("C" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
' http://tatts.com/racing/2011/10/16/NR/1
          '  sUrl = "http://unitab.com/racing/" & rDate & "/race-" & rTrack & rRace & ".html"
            sURL = "https://tattsbet.ubet.com/racing/" & rDate & "/" & rTrack & "/" & rRace
' get the web page
            'Set oHttp = CreateObject("MSXML2.XMLHTTP")
            Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
            oHttp.Open "GET", sURL, False
            oHttp.send
            curRace = oHttp.responseText 'a contains source code of website
            curWork = curRace
            curWork = Replace(curWork, Chr(13), "")
            curWork = Replace(curWork, Chr(11), "")
'            curWork = Application.WorksheetFunction.Clean(curWork)
'            curWork = Application.WorksheetFunction.Trim(curWork)

'get the winning horse no
            my1stNo = RegExpFind(curWork, ":5%;([^<]+)", 1, False) ' URL up to <
            my1stNo = Replace(my1stNo, ":5%;"" align=""right"">", "") ' leave just the win no
            my1stNo = Replace(my1stNo, my1stNo, ";" & my1stNo & ";")
                If InStr(1, my1stNo, ")") > 0 Then 'if tied 1st
                    dup1st = True
                    my1stNo = Replace(my1stNo, ")", "")
                    Dup1stNoPoss = 2 'The dup winner No is at the 2nd :5%;
                    Dup1stWinPoss = 3 'the dup winner $ is at the 4th :15%;
                    Dup1stPlacePoss = 4 'the dup winner place $ is at the 5th :15%;
                    my3rdNoPoss = 3 'Third is at the 3rd :5%;
                    my3rdPlacePoss = 6 'Third place $ is at the 6th :15%;
                Else
                    dup1st = False
                    my2ndNoPoss = 2 '2nd no is at the 2nd :5%;
                    my2ndPlacePoss = 4 'second place $ is at the 4th :15%;
'                    my3rdNoPoss = 3 '3rd No is at the 3rd :5%;
'                    my3rdPlacePoss = 6 '3rd place is at the 6th :15%;
                End If
'get the winning horse win and place $
            my1stWin = RegExpFind(curWork, ":15%;([^<]+)", 1, False) ' URL up to <
            my1stWin = Replace(my1stWin, ":15%;"" align=""right"">", "")
            my1stPlace = RegExpFind(curWork, ":15%;([^<]+)", 2, False) ' URL up to <
            my1stPlace = Replace(my1stPlace, ":15%;"" align=""right"">", "")
            my1stPlace = Application.WorksheetFunction.Clean(my1stPlace)
            my1stPlace = Application.WorksheetFunction.Trim(my1stPlace)
'if there was a tied winner get the other winner also
                If dup1st = True Then
                    Dup1stNo = RegExpFind(curWork, ":5%;([^<]+)", Dup1stNoPoss, False) ' URL up to <
                    Dup1stNo = Replace(Dup1stNo, ":5%;"" align=""right"">", "")
                    Dup1stNo = Replace(Dup1stNo, Dup1stNo, ";" & Dup1stNo & ";")
                    Dup1stNo = Replace(Dup1stNo, ")", "")
                    Dup1stWin = RegExpFind(curWork, ":15%;([^<]+)", Dup1stWinPoss, False) ' URL up to <
                    Dup1stWin = Replace(Dup1stWin, ":15%;"" align=""right"">", "")
                    Dup1stPlace = RegExpFind(curRace, ":15%;([^<]+)", Dup1stPlacePoss, False) ' URL up to <
                    Dup1stPlace = Replace(Dup1stPlace, ":15%;"" align=""right"">", "")
                    Dup1stPlace = Application.WorksheetFunction.Clean(Dup1stPlace)
                    Dup1stPlace = Application.WorksheetFunction.Trim(Dup1stPlace)
                    my3rdNoPoss = 3 '3rd No is at the 3rd :5%;
                    my3rdPlacePoss = 6 '3rd place is at the 6th :15%;
                    GoTo get3rd:
                Else
                    GoTo get2nd:
                End If
'if no tied winner continue on
get2nd:
            my2ndNo = RegExpFind(curWork, ":5%;([^<]+)", my2ndNoPoss, False) ' URL up to <
            my2ndNo = Replace(my2ndNo, ":5%;"" align=""right"">", "")
            my2ndNo = Replace(my2ndNo, my2ndNo, ";" & my2ndNo & ";")
            my2ndPlace = RegExpFind(curWork, ":15%;([^<]+)", my2ndPlacePoss, False) ' URL up to <
            my2ndPlace = Replace(my2ndPlace, ":15%;"" align=""right"">", "")
            my2ndPlace = Application.WorksheetFunction.Clean(my2ndPlace)
            my2ndPlace = Application.WorksheetFunction.Trim(my2ndPlace)
                If InStr(1, my2ndNo, ")") > 0 Then 'if tied 2nd
                    dup2nd = True
                    my2ndNo = Replace(my2ndNo, ")", "")
                    Dup2ndNoPoss = 3 'The dup winner No is at the 3rd :5%;
                    Dup2ndPlacePoss = 6 'the dup 2nd place $ is at the 6th :15%;
                Else
                    dup2nd = False
                    my3rdNoPoss = 3 '3rd No is at the 3rd :5%;
                    my3rdPlacePoss = 6 '3rd place is at the 6th :15%;
                    GoTo get3rd:
                End If
'if there is a tied 2nd place
                If dup2nd = True Then
                    Dup2ndNo = RegExpFind(curWork, ":5%;([^<]+)", Dup2ndNoPoss, False) ' URL up to <
                    Dup2ndNo = Replace(Dup2ndNo, ":5%;"" align=""right"">", "")
                    Dup2ndNo = Replace(Dup2ndNo, Dup2ndNo, ";" & Dup2ndNo & ";")
                    Dup2ndNo = Replace(Dup2ndNo, ")", "")
                    Dup2ndPlace = RegExpFind(curWork, ":15%;([^<]+)", Dup2ndPlacePoss, False) ' URL up to <
                    Dup2ndPlace = Replace(Dup2ndPlace, ":15%;"" align=""right"">", "")
                    Dup2ndPlace = Application.WorksheetFunction.Clean(Dup2ndPlace)
                    Dup2ndPlace = Application.WorksheetFunction.Trim(Dup2ndPlace)
                End If
get3rd:
            my3rdNo = RegExpFind(curWork, ":5%;([^<]+)", my3rdNoPoss, False) ' URL up to <
            my3rdNo = Replace(my3rdNo, ":5%;"" align=""right"">", "")
            my3rdNo = Replace(my3rdNo, my3rdNo, ";" & my3rdNo & ";")
            my3rdPlace = RegExpFind(curWork, ":15%;([^<]+)", my3rdPlacePoss, False) ' URL up to <
            my3rdPlace = Replace(my3rdPlace, ":15%;"" align=""right"">", "")
            my3rdPlace = Application.WorksheetFunction.Clean(my3rdPlace)
            my3rdPlace = Application.WorksheetFunction.Trim(my3rdPlace)
                If InStr(1, my3rdNo, ")") > 0 Then 'if tied 3rd
                    dup3rd = True
                    my3rdNo = Replace(my3rdNo, ")", "")
                    Dup3rdNoPoss = 4 'The dup winner No is at the 4th :5%;
                    Dup3rdPlacePoss = 8 'the dup 3rd place $ is at the 8th :15%;
                Else
                    dup3rd = False
                    GoTo gotAllValues:
                End If
'if there is a tied 3rd place
                If dup3rd = True Then
                    Dup3rdNo = RegExpFind(curWork, ":5%;([^<]+)", Dup3rdNoPoss, False) ' URL up to <
                    Dup3rdNo = Replace(Dup3rdNo, ":5%;"" align=""right"">", "")
                    Dup3rdNo = Replace(Dup3rdNo, Dup3rdNo, ";" & Dup3rdNo & ";")
                    Dup3rdNo = Replace(Dup3rdNo, ")", "")
                    Dup3rdPlace = RegExpFind(curWork, ":15%;([^<]+)", Dup3rdPlacePoss, False) ' URL up to <
                    Dup3rdPlace = Replace(Dup3rdPlace, ":15%;"" align=""right"">", "")
                    Dup3rdPlace = Application.WorksheetFunction.Clean(Dup3rdPlace)
                    Dup3rdPlace = Application.WorksheetFunction.Trim(Dup3rdPlace)
                    GoTo gotAllValues:
                End If

gotAllValues:
            Set cSelection = Range("C" & scRow1 & ":C" & lastRow)
                For Each cY In cSelection 'the one race determined from Col C
                    sY = ";" & cY.value & ";"
'                  If InStr(1, mySCR, ";" & cY & ";") > 0 Then
                    'cY.Offset(0, -1).Interior.ColorIndex = 6
'                    cY.Offset(0, -1) = "SCR"
'                  End If
                    Select Case sY
                        Case my1stNo
                            cY.Offset(0, -1) = "1"
                            cY.Offset(0, 16) = my1stWin
                            cY.Offset(0, 17) = my1stPlace
                        Case my2ndNo
                            cY.Offset(0, -1) = "2"
                            cY.Offset(0, 17) = my2ndPlace
                        Case my3rdNo
                            cY.Offset(0, -1) = "3"
                            cY.Offset(0, 17) = my3rdPlace
                        Case Dup1stNo
                            cY.Offset(0, -1) = "1"
                            cY.Offset(0, 16) = Dup1stWin
                            cY.Offset(0, 17) = Dup1stPlace
                        Case Dup2ndNo
                            cY.Offset(0, -1) = "2"
                            cY.Offset(0, 17) = Dup2ndPlace
                        Case Dup3rdNo
                            cY.Offset(0, -1) = "3"
                            cY.Offset(0, 17) = Dup3rdPlace

                    End Select
                Next cY
             scRow1 = lastRow + 1
        Else
            scRow1 = scRow1 + 1
        End If
    End If
' reset the variables
my1stNo = ""
my2ndNo = ""
my3rdNo = ""
Dup1stNo = ""
Dup2ndNo = ""
Dup3rdNo = ""
my1stWin = ""
my1stPlace = ""
my2ndPlace = ""
my3rdPlace = ""
Dup1stWin = ""
Dup1stPlace = ""
Dup2ndPlace = ""
Dup3rdPlace = ""
Dup1stNoPoss = 0
Dup1stWinPoss = 0
Dup1stPlacePoss = 0
my2ndNoPoss = 0
my2ndPlacePoss = 0
Dup2ndNoPoss = 0
Dup2ndPlacePoss = 0
my3rdNoPoss = 0
my3rdPlacePoss = 0
Dup3rdNoPoss = 0
Dup3rdPlacePoss = 0
dup1st = False
dup2nd = False
dup3rd = False

Set oHttp = Nothing

Next scX


End Sub
Sub getFormCount()
Dim myselection     As Range
Dim myX             As Range
Dim theForm         As String
Dim lForm           As Long
Dim myForm          As Long
Dim myF             As String
Dim myK             As Long

Range("X1").value = "FormCount"
myForm = 0
Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row).Offset(0, 1) 'Form
    For Each myX In myselection 'Col E
        If myX.Offset(0, -1).value <> "" Then
            theForm = Right(myX.value, 3)
            lForm = Len(theForm)
            If lForm = 2 Then
                myForm = 5
            ElseIf lForm = 1 Then
                myForm = 10
            ElseIf lForm = 0 Then
                myForm = 30
            End If
            For myK = 1 To lForm
                myF = Mid(theForm, myK, 1)
                'If IsNumeric(myF) Then
                  '  If myF < 4 And myF > 0 Then
                  '      myForm = myForm + 1
                  '  End If
                'End If
                Select Case myF
                    Case "1"
                        myForm = myForm + 1
                    Case "2"
                        myForm = myForm + 2
                    Case "3"
                        myForm = myForm + 3
                    Case "8", "9", "0"
                        myForm = myForm + 10
                    Case "x"
                        myForm = myForm + 5
                    Case "4", "5"
                        myForm = myForm + 5
                    Case "6", "7"
                        myForm = myForm + 7
                    Case Else
                        myForm = myForm + 10
                End Select
            Next myK
            myX.Offset(0, 19).Font.Size = 8
            myX.Offset(0, 19) = myForm
            myForm = 0
        End If
    Next myX
End Sub
Sub OLD_GetAvgLast600Results()
' requires Microsoft Scripting Runtime
Dim oFSO            As New FileSystemObject
Dim oFS
Dim sText           As String
Dim myhorse          As String
Dim HorseName         As String
Dim HorseValue        As Double
Dim lastRow         As Long
Dim myselection     As Range
Dim myX             As Range
Dim myGroup         As Range
Dim myZ             As Range
'GoTo here:
Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 2) 'Horse Name
    For Each myX In myselection 'Col E
        If myX <> "" And myX.Offset(0, 22) <> "" Then
            myhorse = myX.value
            myhorse = Trim(myhorse)
            Set oFS = oFSO.OpenTextFile("C:\FILES\Horses\Last600AvgResults.txt")
            Do Until oFS.AtEndOfStream
                sText = oFS.ReadLine
                HorseName = Split(sText, "|")(0)
                HorseValue = Split(sText, "|")(1)
                HorseValue = Format(HorseValue, "0.00") 'restrict to 2 decimals
                If UCase(myhorse) = UCase(HorseName) Then 'turn both to upper case
                    myX.Offset(0, 35) = HorseValue 'Col AN
                    HorseValue = 0
                    GoTo found:
                End If
            Loop
        End If
found:
    Next myX
'Call HighlightWinners
Call UpdateSheet
here:
'clear any values
    Columns("AO:AQ").Select
    Selection.ClearContents
'put in headers
Range("AN1").value = "AvgLast600"
Range("AO1").value = "Bet"
Range("AP1").value = "Win"
Range("AQ1").value = "Place"

lastRow = Range("C65536").End(xlUp).Row
Set myGroup = Range("AN3:AN" & lastRow)
    For Each myZ In myGroup 'Col AN
        If myZ <> "" Then
            If myZ.Interior.ColorIndex = 6 And _
                myZ.Offset(0, -15).Interior.ColorIndex = 6 And _
                (myZ.Offset(0, -22).Interior.ColorIndex = 6 Or _
                myZ.Offset(0, -23).Interior.ColorIndex = 6 Or _
                myZ.Offset(0, -16).Interior.ColorIndex = 6 Or _
                myZ.Offset(0, -16).Interior.ColorIndex = 7) Then
                myZ.Offset(0, 1).value = "1"
                myZ.Offset(0, 2).value = myZ.Offset(0, -21)
                myZ.Offset(0, 3).value = myZ.Offset(0, -20)
            End If
        End If
    Next myZ
Range("AO" & lastRow + 1).value = Application.Sum(Range(Cells(3, 41), Cells(lastRow, 41)))
Range("AP" & lastRow + 1).value = Application.Sum(Range(Cells(3, 42), Cells(lastRow, 42)))
Range("AQ" & lastRow + 1).value = Application.Sum(Range(Cells(3, 43), Cells(lastRow, 43)))

Range("AO" & lastRow).Select
End Sub

Sub GetHorseRating_old()
' alse gets the current win value and race time
'works but is slow
Dim rSheet     As String
Dim rDate      As String
Dim rYear      As String
Dim rMonth     As String
Dim rDay       As String
Dim rTrack     As String
Dim rRace      As String 'Current Race
Dim sURL        As String 'url for the current race
Dim curRace     As String 'the web page for current race
Dim curWork     As String
Dim curWork2     As String
Dim myRating    As String 'rating
Dim chkRating   As Boolean
'Dim f           As Long
Dim myForm      As String
'Dim myJockey    As String 'when jockey is missing
'Dim j           As Long

Dim sY          As String
'Dim oHttp       As Object
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim lastSheetRow As Long 'last row of the sheet
'Dim r           As Long
Dim x           As Long
Dim pos         As String
Dim posHorse    As String
Dim p           As Long
Dim posResults  As String
Dim resultArray() As String

Dim SCsel       As Range
Dim scX         As Range
Dim Csel        As Range ' current race selection
Dim cY          As Range 'horses in current race
Dim rng         As Range 'for deleting the scratchings

Dim a           As Long
Dim b           As Long
Dim myWin       As String 'win Value
'Dim lWin        As Double 'converted to a number
Dim myPlace       As String 'place Value
'Dim lPlace        As Double 'converted to a number
Dim toteWin     As String
Dim totePlace   As String

'Dim m           As Long
Dim myFixed     As String
'Dim lFixed      As Double
Dim myCol       As Long 'last used column
Dim hCount      As Long 'number of horses in this race

Dim findTime    As String
Dim theTime     As String
'Dim dTime       As Date 'time converted into a date
Dim TimeNow     As Date
'Dim aTime       As Date 'update win values time
'Dim bTime       As Date 'Bet time

'Dim rValues     As Range 'range of last win values in myCol
'Dim dY          As Range 'each of above
'Dim lCounts     As Long
Dim myString    As String
'Dim Status      As String

'Dim fileSaveName    As String
'Dim nFileNum As Long

Dim formComment     As Comment

Dim weather         As String
Dim TrackCond       As String

Dim Tipster         As String
Dim LateMail        As String
Dim Tips            As String

Dim startElement    As WebElement
Dim myElement    As WebElement
Dim nextElement    As WebElement
Dim Elementxs        As WebElementCollection
Dim Elementx         As WebElement
Dim elements        As WebElementCollection
Dim element         As WebElement
Dim element1s        As WebElementCollection
Dim element1         As WebElement
Dim element2s        As WebElementCollection
Dim element2         As WebElement
Dim Element3s        As WebElementCollection
Dim Element3         As WebElement
Dim Element4s        As WebElementCollection
Dim Element4         As WebElement
Dim myNo            As String
Dim GotEverything   As Boolean
Dim Finalised       As Boolean

    Dim secs1 As Date 'timer
    Dim secs2 As Date
    Dim mySecs As Double


Dim driver As New SeleniumWrapper.WebDriver
'Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
'Dim keys As New SeleniumWrapper.keys
'Dim mySite As String
'-------------------
'##### 'for testing
'Dim testFile As String
'Dim FileNum As Long
'           C:\FILES\Horses
'testFile = "C:\FILES\Horses\temp.txt"
'FileNum
'FileNum = FreeFile
'Open testFile For Output As #FileNum
'Print #FileNum, "test"
'Print #FileNum, "test"
'Print #FileNum, "test"
'Print #FileNum, mySite
'Close #FileNum
'Stop
'StatFileName = "C:\FILES\AFL\Stats.txt"
'FileNum = FreeFile
'Open StatFileName For Output As #FileNum 'overwrites file

secs1 = Time()

Application.DisplayStatusBar = True
    
Application.StatusBar = "Starting up browser ..."

Application.ScreenUpdating = True
'Application.Calculation = xlCalculationManual
'Application.EnableEvents = False
'#####

'StopMyProcess ("iexplore.exe")
StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

Range("AE:AF").Interior.ColorIndex = xlNone
Range("AH:AI").Interior.ColorIndex = xlNone

Range("T1").value = "Win"
Range("U1").value = "Place"
Range("AD1").value = "Rating"
'Range("AE1").Value = "FP %" 'clear
Range("AF1").value = "Form" 'clear
Range("AG1").value = "WinValue"
Range("AH1").value = "RaceTime" 'clear
Range("AI1").value = "NoOfHorses" 'clear
Range("AJ1").value = "FixedPrice"
Range("AK1").value = "Weather"
Range("AL1").value = "Track"
Range("AM1").value = "PlaceValue"

'add a comment for Form codes
Set formComment = Range("AF1").Comment
If formComment Is Nothing Then
    Range("AF1").AddComment ("B = beaten favourite last start" & vbCrLf & _
        "T = won at track of today's race" & vbCrLf & _
        "D = won at distance of today's race" & vbCrLf & _
        "C = won at both course & distance of today's race" & vbCrLf & _
        "W = won in wet conditions" & vbCrLf & _
        "N = won at a night meeting" & vbCrLf & _
        "H = racing on home track")
    Set formComment = Range("AF1").Comment
    formComment.Shape.TextFrame.AutoSize = True
End If


sURL = "https://tab.ubet.com/racing/horse-racing/"
'testing
            'sURL = "https://tab.ubet.com/racing/horse-racing/" & rTrack & "/Race-2/Win?Date=" & rDate
' get the web page
driver.Start "phantomjs", sURL
'driver.Start "chrome", sURL
'clearcache (driver) 'doesnt work
secs2 = Time()
mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
'Debug.Print "Started browser: " & mySecs

rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
'rDate = rYear & "/" & rMonth & "/" & rDay
rDate = rYear & rMonth & rDay

rTrack = Mid(rSheet, InStr(1, rSheet, " ") + 1, Len(rSheet))
rTrack = Left(rTrack, InStr(1, rTrack, ".") - 1)
myCol = ActiveSheet.UsedRange.Columns.count - 2
TimeNow = Format(Now, "hh:mm:ss")
'TimeNow = TimeNow + TimeSerial(0, 3, 0)
'On Error Resume Next
'-------------------------
Application.StatusBar = "Processings " & rTrack

scRow1 = 3 'start on the first horse
Set SCsel = Range("D2:D" & Range("D" & Rows.count).End(xlUp).Row)
For Each scX In SCsel 'Col D
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            Range("D" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
            If Range("AS" & scX.Row - 1) <> "" Then
                scRow1 = lastRow + 1
                GoTo NothingHere:
            End If
            posResults = ""
            pos = 0
            Finalised = False
            rRace = scX.Offset(-1, -3) ' race number
            chkRating = False 'reset rating check
            
            'https://tab.ubet.com/racing/horse-racing/Aquis-Park-Gold-Coast-QR/Race-1/Win?Date=20190302
'testing url
            'https://tab.ubet.com/racing/horse-racing/Tamworth-NR/Race-1/Win?Date=20190310
            'sURL = "https://tab.ubet.com/racing/horse-racing/" & rTrack & "/Race-" & rRace & "/Win?Date=" & rDate

'            secs1 = Time()

            driver.setImplicitWait 10000
            'driver.Wait (500)
            driver.get "/" & rTrack & "/Race-" & rRace & "/Win?Date=" & rDate, Raise:=False
            'driver.Wait (1000)
            driver.maximizeWindow
            

'get rid of the splash screen
            If InStr(1, driver.PageSource, "acc_exitButton") > 0 Then
                driver.findElementByXPath("//*[@id='acc_exitButton']").Click 'works
                'driver.getScreenshot.Copy 'works well
                'Stop
            End If

            secs2 = Time()
            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
            'Debug.Print "loaded webpage: " & mySecs
            Application.StatusBar = "Processings " & rTrack & " race " & rRace & " Time elapsed: " & mySecs & " seconds."
            

            'Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]/div/div/single-leg-container/div/div/div[2]/ul")
            'Set startElement = driver.findElementById("page-container")
            '//*[@id="page-container"]/racing-container/div/div[2]
            '//*[@id="page-container"]/racing-container/div/div[2]/div/div
            Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]")
'this seems to have all the data that is needed
'##### 'for testing
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\Horses\temp.txt"
'FileNum = FreeFile
'Open testFile For Output As #FileNum
'Print #FileNum, startElement.getAttribute("innerHTML")
'Close #FileNum
'Stop
            Set Elementxs = startElement.findElementsByTagName("div")
            For Each Elementx In Elementxs
                GotEverything = False
                'Debug.Print Elementx.getAttribute("Class")
                If Elementx.getAttribute("Class") = "race-info-full-container" Then
                    curWork = LCase(Elementx.getAttribute("innerHTML"))
                    'curWork = Elementx.text
                    'Debug.Print Elementx.getAttribute("Class")
'RACE TIME
                    If InStr(1, curWork, "racestatustext") > 0 Then
                        curWork = Mid(curWork, InStr(1, curWork, "racestatustext") + 16, Len(curWork))
                        theTime = Left(curWork, InStr(1, curWork, "<") - 1)
                        If theTime <> "paying" And theTime <> "interim" And theTime <> "closed" And InStr(1, theTime, "min") = 0 Then
                    'If Split(Elementx.text, vbCrLf)(3) <> "PAYING" Then
                    '    theTime = Split(Elementx.text, vbCrLf)(3)
                            scX.Offset(-1, 1) = theTime
                        ElseIf theTime = "paying" Then
                            theTime = UCase(theTime) 'this will be "PAYING"
                        Else
                            theTime = ""
                        End If
                    End If
 'track condition
                   If InStr(1, curWork, "raceinformation.trackconditionformatted") > 0 Then
                        curWork = Mid(curWork, InStr(1, curWork, "raceinformation.trackconditionformatted") + 40, Len(curWork))
                        curWork = Mid(curWork, InStr(1, curWork, ">") + 1, Len(curWork))
                        TrackCond = Left(curWork, InStr(1, curWork, "<") - 1)
                    Else
                        TrackCond = ""
                    End If
'weather
                    'Debug.Print curWork
                    'Stop
                    If InStr(1, curWork, "raceinformation.weathercondition"">") > 0 Then
                        curWork = Mid(curWork, InStr(1, curWork, "raceinformation.weathercondition"">") + 5, Len(curWork))
                        curWork = Mid(curWork, InStr(1, curWork, ">") + 1, Len(curWork))
                        weather = Left(curWork, InStr(1, curWork, "<") - 1)
                        If weather = "" Then
                            If InStr(1, curWork, "raceinformation.weathercondition"">") > 0 Then
                                curWork = Mid(curWork, InStr(1, curWork, "raceinformation.weathercondition"">") + 5, Len(curWork))
                                curWork = Mid(curWork, InStr(1, curWork, ">") + 1, Len(curWork))
                                weather = Left(curWork, InStr(1, curWork, "<") - 1)
                            End If
                        End If

                    Else
                        weather = ""
                    End If

                    'weather = Split(Elementx.text, vbCrLf)(5)
                    'TrackCond = Split(Elementx.text, vbCrLf)(4)
                    'Stop
                    
                    secs2 = Time()
                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                    'Debug.Print "Track condition: " & mySecs
                    'Print #FileNum, "From start to Track condition: " & mySecs

                    Exit For
                End If
            Next Elementx
            'Elementx = Nothing
            'Set startElement = Nothing
            '//*[@id="page-container"]/racing-container/div/div[2]/div/div/ubet-form-tips-navigation/div/div[1]/div[1]
            '//*[@id="page-container"]/racing-container/div/div[2]/div/div
            Set myElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]/div/div")
            curWork2 = LCase(myElement.getAttribute("innerHTML"))
                    '------------
'                    If rRace = 4 Then
'                        '##### 'for testing
'                        Dim testFile As String
'                        Dim FileNum As Long
'                        testFile = "C:\FILES\Horses\temp2.txt"
'                        FileNum = FreeFile
'                        Open testFile For Output As #FileNum
'                        Print #FileNum, curWork2
'                        Close #FileNum
'                        Stop
'                    End If

                    '-------------
            'Element.getAttribute("innerHTML")
            If InStr(1, curWork2, "tipstername") > 0 Then
            'This is: <div class="single-leg-container-racing-container"
            '#page-container > racing-container > div > div.racing-home > div > div
            'If InStr(1, curWork, "data-automationid=""tipsterName""") > 0 Then
                'Set startElement = driver.findElementByCssSelector("#page-container > racing-container > div > div.racing-home > div > div")
                'curWork2 = startElement.getAttribute("InnerHTML")
                'curWork2 = Mid(curWork2, InStr(1, curWork2, "tipstername") + 13, Len(curWork2))
                'Tipster = Left(curWork2, InStr(1, curWork2, "<") - 1)
                curWork2 = Mid(curWork2, InStr(1, curWork2, "tipstervalue") + 14, Len(curWork2))
                Tips = Left(curWork2, InStr(1, curWork2, "<") - 1)
                Tips = "-" & Tips & "-"
                Tips = Replace(Tips, "*", "")
                If InStr(1, curWork2, "late mail") > 0 Then
                    curWork2 = Mid(curWork2, InStr(1, curWork2, "late mail"), Len(curWork2))
                    curWork2 = Mid(curWork2, InStr(1, curWork2, "tipstervalue") + 14, Len(curWork2))
                    LateMail = Left(curWork2, InStr(1, curWork2, "<") - 1)
                    LateMail = Replace(LateMail, "*", "")
                End If

                If UCase(theTime) = "PAYING" And posResults = "" Then
'get the race results
                    'If rRace = 4 Then Stop
                    '"resultItem.position"
                    'Do While InStr(1, curWork2, """resultitem.position""") > 0
'fixed tied horses
                    Do While InStr(1, curWork2, "resultitem.runnername") > 0
                        a = InStr(1, curWork2, """resultitem.position""")
                        b = InStr(1, curWork2, "resultitem.runnername")
                        'Stop
                        If a < b And pos <> 4 And a <> 0 Then
                            curWork2 = Mid(curWork2, InStr(1, curWork2, """resultitem.position""") + 22, Len(curWork2))
                            pos = Left(curWork2, 1)
                        End If
                        ' resultItem.runnerName
                        curWork2 = Mid(curWork2, InStr(1, curWork2, "resultitem.runnername") + 23, Len(curWork2))
                        posHorse = Left(curWork2, InStr(1, curWork2, ". ") - 1)
'get tote results
                        'winner'resultitem.winoddstext">
                        '2nd and 3rd ' results-tote-place">
                        If pos = 1 Then
                            curWork2 = Mid(curWork2, InStr(1, curWork2, "resultitem.winoddstext"">") + 24, Len(curWork2))
                            toteWin = Left(curWork2, InStr(1, curWork2, "<") - 1)
                            curWork2 = Mid(curWork2, InStr(1, curWork2, "results-tote-place"">") + 20, Len(curWork2))
                            totePlace = Left(curWork2, InStr(1, curWork2, "<") - 1)
                            posResults = posResults & "|" & pos & "," & posHorse & "|" & toteWin & "|" & totePlace & "|@"
                        ElseIf pos = 2 Or pos = 3 Then
                            curWork2 = Mid(curWork2, InStr(1, curWork2, "results-tote-place"">") + 20, Len(curWork2))
                            totePlace = Left(curWork2, InStr(1, curWork2, "<") - 1)
                            posResults = posResults & "|" & pos & "," & posHorse & "|" & "" & "|" & totePlace & "|@"
                        ElseIf pos = 4 Then
                            posResults = posResults & "|" & pos & "," & posHorse & "|" & "" & "|" & "" & "|@"
                        End If
                    Loop
                    Finalised = True 'results have been obtained
                    Range("AS" & scX.Row - 1) = "race finalised"
                End If
                toteWin = ""
                totePlace = ""

            End If
            'Stop
            'curWork = ""
            'start element is : <ul class="runners" data-automationid="runner-list">
            Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]/div/div/single-leg-container/div/div/div[2]/ul")
            'Set Elements = startElement.findElementsByTagName("ul")
            'Set Elements = startElement.findElementsByTagName("li")
            secs2 = Time()
            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
            'Debug.Print "Loaded startElement: " & mySecs
            Set elements = startElement.findElementsByXPath("./*")
            For Each element In elements
                'Debug.Print "Element Class: " & Element.getAttribute("Class")
                'Debug.Print "Element Text: " & Element.text
                'Debug.Print "------------"
                'secs2 = Time()
                'mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                'Debug.Print "From start to next element (li): " & mySecs
                'Print #FileNum, "From start to next element (li): " & mySecs

                If element.getAttribute("Class") <> "win-place-list-runner" Then GoTo SkipElement:
'Stop
                If InStr(1, element.text, "SCRATCHED") = 0 Then
                    'Debug.Print Element.text
                    'curWork = Element.getAttribute("innerHTML")
                    'Debug.Print Element.getAttribute("innerHTML")
'maybe try:
'Set elements = startElement.findElementsByXPath(".//*") 'this one returns all decendant children, not just immediate
'Set Elements = startElement.findElementsByXPath("./*") 'this one returns immediate children only
    
                    'Set Element1s = Element.findElementsByTagName("div")
                    Set element1s = element.findElementsByTagName("li")
                    For Each element1 In element1s
                        'secs2 = Time()
                        'mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                        'Debug.Print "From start to next element1 (li): " & mySecs
'PROBLEM - finds runner-content before myNo
                        'Debug.Print "Element1 Class: " & Element1.getAttribute("Class")
                        'Debug.Print "Element1 Text: " & Element1.text
                        'Debug.Print "------------"
                        'Print #FileNum, Chr(9) & "From start to next element1 (li): " & mySecs
                        'Print #FileNum, Chr(9) & "Element1 Class: " & Element1.getAttribute("Class")
                        'Print #FileNum, Chr(9) & "------------"

'No 'Class: runner-number-container '"runner-list"
                        'If Element1.getAttribute("Class") = "runner-number-container" Then
                        If element1.getAttribute("Class") = "runner-list" Then
                            Set element2s = element1.findElementsByXPath("./*")
                            For Each element2 In element2s
                                'secs2 = Time()
                                'mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                'Debug.Print "From start to next element2 (immediate child): " & mySecs
                                'Debug.Print "Element2 Class: " & Element2.getAttribute("Class")
                                'Debug.Print "Element2 Text: " & Element2.text
                                'Debug.Print "------------"
                                'Print #FileNum, Chr(9) & Chr(9) & "From start to next element2 (immediate child): " & mySecs
                                'Print #FileNum, Chr(9) & Chr(9) & "Element2 Class: " & Element2.getAttribute("Class")
                                'Print #FileNum, Chr(9) & Chr(9) & "Element2 Text: " & Element2.text
                                'Print #FileNum, Chr(9) & Chr(9) & "------------"

                                
                                If element2.getAttribute("Class") = "runner-container-information" Then
                                    myNo = Split(element2.text, vbCrLf)(0)
                                    secs2 = Time()
                                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                    'Debug.Print "MyNo: " & mySecs

                                    Set Element3s = element2.findElementsByXPath("./*")
                                    For Each Element3 In Element3s
                                        'secs2 = Time()
                                        'mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                        'Debug.Print "From start to next element3 (immediate child): " & mySecs
                                        'Debug.Print "Element3 Class: " & Element3.getAttribute("Class")
                                        'Debug.Print "Element3 Text: " & Element3.text
                                        'Debug.Print "------------"
                                        'Print #FileNum, Chr(9) & Chr(9) & Chr(9) & "From start to next element3 (immediate child): " & mySecs
                                        'Print #FileNum, Chr(9) & Chr(9) & Chr(9) & "Element3 Class: " & Element3.getAttribute("Class")
                                        'Print #FileNum, Chr(9) & Chr(9) & Chr(9) & "Element3 Text: " & Element3.text
                                        'Print #FileNum, Chr(9) & Chr(9) & Chr(9) & "------------"
                                        
                                        If Element3.getAttribute("Class") = "runner-offer" Then
                                            myWin = Split(Element3.text, vbCrLf)(0)
                                            myWin = Trim(myWin)
                                            'lWin = myWin
                                            myPlace = Split(Element3.text, vbCrLf)(1)
                                            myPlace = Trim(myPlace)
                                            'lPlace = myPlace
                                            secs2 = Time()
                                            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                            'Debug.Print "MyWin MyPlace: " & mySecs

                                            myFixed = Split(Element3.text, vbCrLf)(2)
                                            myFixed = Trim(myFixed)
                                            secs2 = Time()
                                            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                            'Debug.Print "MyFixed: " & mySecs
                                        ElseIf Element3.getAttribute("Class") = "runner-info-right" Then
                                            Set Element4s = Element3.findElementsByTagName("li")
                                            For Each Element4 In Element4s
                                                If Element4.getAttribute("Class") = "rating" Then
                                                    myRating = Element4.text
                                                    secs2 = Time()
                                                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                                    'Debug.Print "MyRating: " & mySecs
                                                'End If
'Form
                                                ElseIf Element4.getAttribute("Class") = "form" Then
                                                    myForm = Element4.text
                                                    secs2 = Time()
                                                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                                    'Debug.Print "MyForm: " & mySecs
                                                    GotEverything = True
                                                    Exit For
                                                End If
                                            Next Element4
                                        End If
                                        If GotEverything = True Then Exit For
                                    Next Element3
                                End If
                                If GotEverything = True Then Exit For
                            Next element2
                        End If
                        'Stop
                        If GotEverything = True Then Exit For
                    Next element1
                End If
SkipElement:
                'If GotEverything = True Then Stop
                'If GotEverything = True Then Exit For
                GotEverything = False
'                        'Stop

'Close #FileNum
'--------------------------------------------
'##UP TO HERE
                secs2 = Time()
                mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                'Debug.Print "From start to GotEveryThing: " & mySecs
                Set Csel = Range("D" & scRow1 & ":D" & lastRow)
                hCount = Csel.count
                For Each cY In Csel 'the one race determined from Col D
                        If cY = myNo Then
                            cY.Offset(0, 26) = myRating 'Col AD
                            cY.Offset(0, 28) = myForm 'Col AF
                            cY.Offset(0, 29) = myWin 'Col AG
                            If UCase(theTime) <> "PAYING" And theTime <> "" Then
                                cY.Offset(0, 30) = theTime 'Col AH - race time
                            End If
                            cY.Offset(0, 31) = hCount 'AI
                            cY.Offset(0, 32) = myFixed 'AJ
                            cY.Offset(0, 33) = weather
                            cY.Offset(0, 34) = TrackCond
                            cY.Offset(0, 35) = myPlace 'col AM
'enter results
                            ' "|" & pos & "," & posHorse & "|" & toteWin & "|" & totePlace & "|@"
                            If InStr(1, posResults, "," & myNo & "|") > 0 Then
                                resultArray = Split(posResults, "@")
                                For p = LBound(resultArray) To UBound(resultArray)
                                   myString = resultArray(p)
                                    If InStr(1, myString, "," & myNo & "|") > 0 Then
                                        cY.Offset(0, -2) = Mid(myString, 2, 1)
                                        If cY.Offset(0, -2) = "1" Then
                                            'cY.Offset(0, 16) = cY.Offset(0, 29)
                                            'cY.Offset(0, 17) = cY.Offset(0, 35)
                                            cY.Offset(0, 16) = Split(myString, "|")(2)
                                            cY.Offset(0, 17) = Split(myString, "|")(3)
                                        ElseIf cY.Offset(0, -2) = "2" Or cY.Offset(0, -2) = "3" Then
                                            cY.Offset(0, 17) = Split(myString, "|")(3)
                                        'ElseIf cY.Offset(0, -2) = "3" _
                                          'And cY.Offset(0, 31) > 7 Then
                                            'cY.Offset(0, 17) = cY.Offset(0, 35)
                                        End If
                                        Exit For
                                    End If
                                Next p
                            End If
'enter tips & late mail
                            'Tips
                            If InStr(1, Tips, "-" & myNo & "-") > 0 Then
                                cY.Interior.ColorIndex = 20 'light blue
                            End If
                            If LateMail = myNo Then
                                cY.Interior.ColorIndex = 8 'dark blue
                            End If

                            secs2 = Time()
                            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                            'Debug.Print "updated sheet: " & mySecs
                            Exit For
                        End If
                Next cY


'                End If
'                    sY = ""
'                    r = 0
'                    x = 0
'                    y = 0
'                    a = 0
                    myNo = ""
                    myRating = ""
                    myWin = ""
                    myPlace = ""
                    myFixed = ""
                    myForm = ""
                secs2 = Time()
                mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                'Debug.Print "Finished that runner: " & mySecs & " x count: " & x
                x = x + 1
                'If x = 20 Then Stop
            Next element
'Stop
'-----------------
             scRow1 = lastRow + 1
        Else
            scRow1 = scRow1 + 1
        End If
    End If
' reset the variables
NothingHere:
    Tips = ""
    LateMail = ""
    curWork = ""
    findTime = ""
    theTime = ""
    hCount = 0
    weather = ""
    TrackCond = ""
    'driver.Close
'    Set oHttp = Nothing
    secs2 = Time()
    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
    'Debug.Print "Finished that race (next scX): " & mySecs
'Stop
Next scX
Application.StatusBar = ""
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
driver.stop
'driver.Close 'doesnt work
'Close #nFileNum
End Sub
Sub GetHorseRating()
' alse gets the current win value and race time

Dim rSheet     As String
Dim rDate      As String
Dim rYear      As String
Dim rMonth     As String
Dim rDay       As String
Dim rTrack     As String
Dim rRace      As String 'Current Race
Dim sURL        As String 'url for the current race
Dim curRace     As String 'the web page for current race
Dim curWork     As String
'Dim curWork2     As String
Dim myRating    As String 'rating
Dim chkRating   As Boolean
'Dim f           As Long
Dim myForm      As String
Dim myJockey    As String 'when jockey is missing
'Dim j           As Long

Dim sY          As String
'Dim oHttp       As Object
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim lastSheetRow As Long 'last row of the sheet
Dim x           As Long
Dim pos         As String
Dim posHorse    As String
Dim p           As Long
Dim posResults  As String
Dim posStatus   As String
Dim resultArray() As String
Dim runnerArray()   As String
Dim r           As Long
Dim myRunner    As String

Dim SCsel       As Range
Dim scX         As Range
Dim Csel        As Range ' current race selection
Dim cY          As Range 'horses in current race
Dim rng         As Range 'for deleting the scratchings
Dim s           As Long
Dim GotScratchings As Boolean

Dim a           As Long
Dim b           As Long
Dim myWin       As String 'win Value
'Dim lWin        As Double 'converted to a number
Dim myPlace       As String 'place Value
'Dim lPlace        As Double 'converted to a number
Dim toteWin     As String
Dim totePlace   As String

'Dim m           As Long
Dim myFixed     As String
'Dim lFixed      As Double
Dim myCol       As Long 'last used column
Dim hCount      As Long 'number of horses in this race

Dim findTime    As String
Dim theTime     As String
'Dim dTime       As Date 'time converted into a date
Dim TimeNow     As Date
'Dim aTime       As Date 'update win values time
'Dim bTime       As Date 'Bet time

'Dim rValues     As Range 'range of last win values in myCol
'Dim dY          As Range 'each of above
'Dim lCounts     As Long
Dim myString    As String
'Dim Status      As String

'Dim fileSaveName    As String
'Dim nFileNum As Long

Dim formComment     As Comment

Dim weather         As String
Dim TrackCond       As String

Dim Tipster         As String
Dim LateMail        As String
Dim Tips            As String


Dim startElement    As WebElement
'Dim myElement    As WebElement
'Dim nextElement    As WebElement
'Dim Elementxs        As WebElementCollection
'Dim Elementx         As WebElement
'Dim elements        As WebElementCollection
'Dim element         As WebElement
'Dim element1s        As WebElementCollection
'Dim element1         As WebElement
'Dim element2s        As WebElementCollection
'Dim element2         As WebElement
'Dim Element3s        As WebElementCollection
'Dim Element3         As WebElement
'Dim Element4s        As WebElementCollection
'Dim Element4         As WebElement
Dim myNo            As String
'Dim GotEverything   As Boolean
Dim Finalised       As Boolean

    Dim secs1 As Date 'timer
    Dim secs2 As Date
    Dim mySecs As Double


Dim driver As New SeleniumWrapper.WebDriver
'Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

secs1 = Time()

Application.DisplayStatusBar = True
    
Application.StatusBar = "Starting up browser ..."

Application.ScreenUpdating = True
'Application.Calculation = xlCalculationManual
'Application.EnableEvents = False
'#####

StopMyProcess ("chromedriver.exe")
'StopMyProcess ("chrome.exe")
StopMyProcess ("phantomjs.exe")

With driver
        .addArgument ("--headless")
End With

'-----------------------------------------------------------------------------------------------------------
'TESTING
'sURL = "https://tab.ubet.com/racing/horse-racing/"
'driver.Start "chrome", sURL
'driver.setImplicitWait 10000
'driver.get "/Sunshine-Coast-BR/Race-1/Win?Date=20190405", Raise:=False
'driver.maximizeWindow
            
'Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]")
'curRace = startElement.getAttribute("innerHTML")
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\Horses\tempA.txt"
'FileNum = FreeFile
'Open testFile For Output As #FileNum
'Print #FileNum, curRace
'Close #FileNum

'Stop
'--------------------------------------------------------------------------------------------------------
Range("AE:AF").Interior.ColorIndex = xlNone
Range("AH:AI").Interior.ColorIndex = xlNone

Range("T1").value = "Win"
Range("U1").value = "Place"
Range("AD1").value = "Rating"
'Range("AE1").Value = "FP %" 'clear
Range("AF1").value = "Form" 'clear
Range("AG1").value = "WinValue"
Range("AH1").value = "RaceTime" 'clear
Range("AI1").value = "NoOfHorses" 'clear
Range("AJ1").value = "FixedPrice"
Range("AK1").value = "Weather"
Range("AL1").value = "Track"
Range("AM1").value = "PlaceValue"

'add a comment for Form codes
Set formComment = Range("AF1").Comment
If formComment Is Nothing Then
    Range("AF1").AddComment ("B = beaten favourite last start" & vbCrLf & _
        "T = won at track of today's race" & vbCrLf & _
        "D = won at distance of today's race" & vbCrLf & _
        "C = won at both course & distance of today's race" & vbCrLf & _
        "W = won in wet conditions" & vbCrLf & _
        "N = won at a night meeting" & vbCrLf & _
        "H = racing on home track")
    Set formComment = Range("AF1").Comment
    formComment.Shape.TextFrame.AutoSize = True
End If

sURL = "https://tab.ubet.com/racing/horse-racing/"
'testing
'https://tab.ubet.com/racing/horse-racing/Sunshine-Coast-BR/Race-1/Win?Date=20190405
            'sURL = "https://tab.ubet.com/racing/horse-racing/" & rTrack & "/Race-2/Win?Date=" & rDate
' get the web page
'driver.Start "phantomjs", sURL
driver.Start "chrome", sURL

secs2 = Time()
mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
'Debug.Print "Started browser: " & mySecs

rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
'rDate = rYear & "/" & rMonth & "/" & rDay
rDate = rYear & rMonth & rDay

rTrack = Mid(rSheet, InStr(1, rSheet, " ") + 1, Len(rSheet))
rTrack = Left(rTrack, InStr(1, rTrack, ".") - 1)
myCol = ActiveSheet.UsedRange.Columns.count - 2
TimeNow = Format(Now, "hh:mm:ss")
GotScratchings = False
'TimeNow = TimeNow + TimeSerial(0, 3, 0)
'On Error Resume Next
'-------------------------
Application.StatusBar = "Processing " & rTrack

scRow1 = 3 'start on the first horse
Set SCsel = Range("D2:D" & Range("D" & Rows.count).End(xlUp).Row)
For Each scX In SCsel 'Col D
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            Range("D" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
            If Range("AS" & scX.Row - 1) <> "" Then
                scRow1 = lastRow + 1
                GoTo NothingHere:
            End If
            posResults = ""
            pos = 0
            Finalised = False
            rRace = scX.Offset(-1, -3) ' race number
            
            driver.setImplicitWait 10000
'###TESTING https://tab.ubet.com/racing/horse-racing/Wycheproof-ZR/Race-7/Win?Date=20191102
            driver.get "/" & rTrack & "/Race-" & rRace & "/Win?Date=" & rDate, Raise:=False
            'driver.get "/Wycheproof-ZR/Race-7/Win?Date=20191102", Raise:=False
            'driver.Wait (1000)
            driver.maximizeWindow
            driver.Wait (1000)

'get rid of the splash screen
            If InStr(1, driver.PageSource, "acc_exitButton") > 0 Then
                driver.findElementByXPath("//*[@id='acc_exitButton']").Click 'works
            End If

            secs2 = Time()
            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
            Application.StatusBar = "Processing " & rTrack & " race " & rRace & " Time elapsed: " & mySecs & " seconds."
            
            'Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]")
            Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container")
            '                                             //*[@id="page-container"]/racing-container
            'Set startElement = driver.findElementByXPath("/html/body/div[2]/div[3]/racing-container/div/div[2]/div")
'html for the whole race
            curRace = startElement.getAttribute("innerHTML")
'------------------------
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\Horses\tempA.txt"
'FileNum = FreeFile
'Open testFile For Output As #FileNum
'Print #FileNum, curRace
'Close #FileNum

'Stop

'---------------------------
            If InStr(1, curRace, "<div ng-if=""!RaceInformation.changingSingleMultiLeg"" class=""large-6 medium-5 small-12 columns weather-track-conditions""") > 0 Then
                a = InStr(1, curRace, "<div ng-if=""!RaceInformation.changingSingleMultiLeg"" class=""large-6 medium-5 small-12 columns weather-track-conditions""")
                If InStr(1, curRace, "</span><!----></div><!----></div></div>") > 0 Then
                    b = InStr(1, curRace, "</span><!----></div><!----></div></div>")
                ElseIf InStr(1, curRace, ":RaceInformation.haveWeatherRatingTrackChange}") > 0 Then
                    b = InStr(1, curRace, ":RaceInformation.haveWeatherRatingTrackChange}")
                End If
'------------------------------------------------------------------------------------------
'####race info group
                curWork = Mid(curRace, a, b - a)
                'Debug.Print curWork
                a = 0
                b = 0
                'Stop
'RACE TIME
                If InStr(1, LCase(curWork), "racestatustext") > 0 Then
                    theTime = Mid(LCase(curWork), InStr(1, LCase(curWork), "racestatustext") + 16, Len(curWork))
                    theTime = Left(theTime, InStr(1, theTime, "<") - 1)
                    If theTime <> "paying" And theTime <> "interim" And theTime <> "closed" And InStr(1, theTime, "min") = 0 Then
                        scX.Offset(-1, 1) = theTime
                    ElseIf theTime = "paying" Then
                        theTime = UCase(theTime) 'this will be "PAYING"
                    Else
                        theTime = ""
                    End If
                End If
                
                If LCase(theTime) = "abdn" Then
                    Range("AS" & scX.Row - 1) = "race finalised"
                    scX.Offset(-1, 1) = UCase(theTime)
                    GoTo NothingHere:
                End If
 'track condition
                If InStr(1, LCase(curWork), "raceinformation.trackconditionformatted") > 0 Then
                    TrackCond = Mid(LCase(curWork), InStr(1, LCase(curWork), "raceinformation.trackconditionformatted") + 40, Len(curWork))
                    TrackCond = Mid(TrackCond, InStr(1, TrackCond, ">") + 1, Len(curWork))
                    TrackCond = Left(TrackCond, InStr(1, TrackCond, "<") - 1)
                    TrackCond = Application.Proper(TrackCond)
                Else
                    TrackCond = ""
                End If
'weather
                If InStr(1, curWork, "html=""RaceInformation.raceInformation.weatherCondition"">") > 0 Then
                    weather = Mid(curWork, InStr(1, curWork, "html=""RaceInformation.raceInformation.weatherCondition"">") + 5, Len(curWork))
                    weather = Mid(weather, InStr(1, weather, ">") + 1, Len(weather))
                    'weather = Left(weather, InStr(1, weather, "<") - 1)
                Else
                    weather = ""
                End If
            End If
            curWork = ""
            'Stop
'### End of Race Info group
'------------------------------------------------------------------------------------------
'Get Tips
            If InStr(1, curRace, "<ubet-race-single-leg-desktop-tips") > 0 Then
                a = InStr(1, curRace, "<ubet-race-single-leg-desktop-tips")
                curWork = Mid(curRace, a, Len(curRace))
                curWork = Left(curWork, InStr(1, curRace, "</span><!----></div><!----></div></div>"))
                'curWork = Mid(curRace, a, b - a)
                a = 0
                b = 0
                If InStr(1, LCase(curWork), "tipstername") > 0 Then
                    Tips = Mid(LCase(curWork), InStr(1, LCase(curWork), "tipstervalue") + 14, Len(curWork))
                    Tips = Left(Tips, InStr(1, Tips, "<") - 1)
                    Tips = "-" & Tips & "-"
                    Tips = Replace(Tips, "*", "")
                    If InStr(1, LCase(curWork), "late mail") > 0 Then
                        LateMail = Mid(LCase(curWork), InStr(1, LCase(curWork), "late mail"), Len(curWork))
                        LateMail = Mid(LateMail, InStr(1, LateMail, "tipstervalue") + 14, Len(LateMail))
                        LateMail = Left(LateMail, InStr(1, LateMail, "<") - 1)
                        LateMail = Replace(LateMail, "*", "")
                    End If
                End If
            End If
            curWork = ""
'------------------------------------------------------------------------------------------
'## Start of results
'get the race results
            'Stop
            If UCase(theTime) = "PAYING" And posResults = "" Then
'fixed tied horses
                If InStr(1, curRace, "<div class=""race-results-container") > 0 Then
                    a = InStr(1, curRace, "<div class=""race-results-container")
                    b = InStr(1, curRace, "data-automationid=""exoticDividend"">")
                    curWork = Mid(curRace, a, b - a)
                    curWork = LCase(curWork)
                    a = 0
                    b = 0
                    
                    Do While InStr(1, curWork, "resultitem.runnername") > 0
                        a = InStr(1, curWork, """resultitem.position""")
                        b = InStr(1, curWork, "resultitem.runnername")
                        'Stop
                        If a < b And pos <> 4 And a <> 0 Then
                            curWork = Mid(curWork, InStr(1, curWork, """resultitem.position""") + 22, Len(curWork))
                            pos = Left(curWork, 1)
                        End If
                        ' resultItem.runnerName
                        curWork = Mid(curWork, InStr(1, curWork, "resultitem.runnername") + 23, Len(curWork))
                        posHorse = Left(curWork, InStr(1, curWork, ". ") - 1)
                        'posStatus = posStatus & posHorse & "-"
'get tote results
                        If pos = 1 Then
                            posStatus = posHorse & " - "
                            curWork = Mid(curWork, InStr(1, curWork, "resultitem.winoddstext"">") + 24, Len(curWork))
                            toteWin = Left(curWork, InStr(1, curWork, "<") - 1)
                            curWork = Mid(curWork, InStr(1, curWork, "results-tote-place"">") + 20, Len(curWork))
                            totePlace = Left(curWork, InStr(1, curWork, "<") - 1)
                            posResults = posResults & "|" & pos & "," & posHorse & "|" & toteWin & "|" & totePlace & "|@"
                        ElseIf pos = 2 Or pos = 3 Then
                            posStatus = posStatus & posHorse & " - "
                            curWork = Mid(curWork, InStr(1, curWork, "results-tote-place"">") + 20, Len(curWork))
                            totePlace = Left(curWork, InStr(1, curWork, "<") - 1)
                            posResults = posResults & "|" & pos & "," & posHorse & "|" & "" & "|" & totePlace & "|@"
                        ElseIf pos = 4 Then
                            posStatus = posStatus & posHorse
                            posResults = posResults & "|" & pos & "," & posHorse & "|" & "" & "|" & "" & "|@"
                        End If
                    Loop
                    Finalised = True 'results have been obtained
                    Range("AS" & scX.Row - 1) = "race finalised"
                    Application.StatusBar = "Processing " & rTrack & " race " & rRace & " Time elapsed: " & mySecs & " seconds. Results: " & posStatus
                End If
                toteWin = ""
                totePlace = ""
                posStatus = ""
            End If
            a = 0
            b = 0
            curWork = ""
'------------------------------------------------------------------------------------------
'## GET THE RUNNERS
            If InStr(1, curRace, "<ul class=""runners"" data-automationid=""runner-list"">") > 0 Then
                a = InStr(1, curRace, "<ul class=""runners"" data-automationid=""runner-list"">")
                b = InStr(1, curRace, "</ubet-race-single-leg-grid></li><!----></ul>")
                curWork = Mid(curRace, a, b - a)
                a = 0
                b = 0
        'Stop
                secs2 = Time()
                mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                
                curWork = Replace(curWork, "RaceSingleLegGrid.runner.runnerInformation.runnerNumber", "@@")
                'curWork = Replace(curWork, "RunnerNumber"">", "@@")
'split each runner
                runnerArray = Split(curWork, "@@")
                'For r = LBound(runnerArray) To UBound(runnerArray)
                For r = 1 To UBound(runnerArray)
                    myRunner = runnerArray(r)
                    'Stop
                    '                      >SCRATCHED<
                    'If InStr(1, myRunner, ">SCRATCHED<") > 0 Or InStr(1, myRunner, ">LATE SCRATCHING<") > 0 Then
                    'Stop
                        'scX.Offset(0, -2) = "SCR"
                        'GotScratchings = True
                        'GoTo NothingHere:
                    'End If
                    'Debug.Print myRunner
'Number
                    myNo = Mid(myRunner, InStr(1, myRunner, ">") + 1, Len(myRunner))
                    myNo = Left(myNo, InStr(1, myNo, "<") - 1)
                    myNo = Trim(myNo)
          'Stop          'If InStr(1, element.text, "SCRATCHED") = 0 Then
'Tote win                    myWin = Mid(myRunner, InStr(1, myRunner, ">Tote Win<"), Len(myRunner))
                    myWin = Mid(myRunner, InStr(1, myRunner, "class=""odds"">"), Len(myRunner))
                    myWin = Mid(myWin, InStr(1, myWin, ">") + 1, Len(myWin))
                    myWin = Left(myWin, InStr(1, myWin, "<") - 1)
                    myWin = Trim(myWin)
'Tote place
                    myPlace = Mid(myRunner, InStr(1, myRunner, ">Tote Place<"), Len(myRunner))
                    myPlace = Mid(myPlace, InStr(1, myPlace, "class=""odds"">"), Len(myPlace))
                    myPlace = Mid(myPlace, InStr(1, myPlace, ">") + 1, Len(myPlace))
                    myPlace = Left(myPlace, InStr(1, myPlace, "<") - 1)
                    myPlace = Trim(myPlace)
                                            secs2 = Time()
                                            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                    'Debug.Print "MyWin MyPlace: " & mySecs
'Fixed win
                    myFixed = Mid(myRunner, InStr(1, myRunner, ">Fixed Win<"), Len(myRunner))
                    myFixed = Left(myFixed, InStr(1, myFixed, "</offer-button>") - 1)
                    'Debug.Print myFixed
                    'Stop
                    If InStr(1, myFixed, "offerStatusText") > 0 Then
                        myFixed = Mid(myFixed, InStr(1, myFixed, "offerStatusText"), Len(myFixed))
                    Else
                        myFixed = Mid(myFixed, InStr(1, myFixed, "class=""odds"">"), Len(myFixed))
                    End If
                    myFixed = Mid(myFixed, InStr(1, myFixed, ">") + 1, Len(myFixed))
                    myFixed = Left(myFixed, InStr(1, myFixed, "<") - 1)
                    myFixed = Trim(myFixed)
                                            secs2 = Time()
                                            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
'jockey
                    'If myNo = 15 Then
                        'Debug.Print myRunner
                       ' Stop
                    'End If
                    'If InStr(1, myRunner, "RaceSingleLegGrid.runner.runnerInformation.riderChanged") > 0 _
                    '    Or InStr(1, myRunner, "RacingRaceRunnerInformation.runnerInformation.riderChanged") > 0 Then
                    If InStr(1, myRunner, "runnerInformation.riderChanged") > 0 Then
                        myJockey = Mid(myRunner, InStr(1, myRunner, "runnerInformation.riderChanged"), Len(myRunner))
                        myJockey = Mid(myJockey, InStr(1, myJockey, ">") + 1, Len(myJockey))
                        myJockey = Left(myJockey, InStr(1, myJockey, "<") - 1)
                        myJockey = Trim(myJockey)
                        myJockey = Application.Proper(myJockey)
                        If LCase(myJockey) = "not notified" Then
                            myJockey = ""
                        End If
                    End If
                    
'rating
                    If InStr(1, myRunner, "data-automationid=""RunnerRating"">") > 0 Then
                    '                      data-automationid="RunnerRating">
                        myRating = Mid(myRunner, InStr(1, myRunner, "data-automationid=""RunnerRating"">"), Len(myRunner))
                        myRating = Mid(myRating, InStr(1, myRating, ">") + 1, Len(myRating))
                        myRating = Left(myRating, InStr(1, myRating, "<") - 1)
                        myRating = Trim(myRating)
                    ElseIf InStr(1, myRunner, "RacingRaceRunnerInformation.runner.rating") > 0 Then
                        'Stop
                        myRating = Mid(myRunner, InStr(1, myRunner, "RacingRaceRunnerInformation.runner.rating"), Len(myRunner))
                        myRating = Mid(myRating, InStr(1, myRating, ">") + 1, Len(myRating))
                        myRating = Left(myRating, InStr(1, myRating, "<") - 1)
                        myRating = Trim(myRating)
                    End If

                                                    secs2 = Time()
                                                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                                    'Debug.Print "MyRating: " & myRating & " in " & mySecs
                                                'End If
'Form
                    'Stop
                    If InStr(1, myRunner, "<span>Form</span>") > 0 Then
                        myForm = Mid(myRunner, InStr(1, myRunner, "<span>Form</span>") + 14, Len(myRunner))
                        myForm = Mid(myForm, InStr(1, myForm, ">") + 1, Len(myForm))
                        myForm = Left(myForm, InStr(1, myForm, "<") - 1)
                        myForm = Trim(myForm)
                    End If
                                                    secs2 = Time()
                                                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                                                    'Debug.Print "MyForm: " & myForm & " in " & mySecs
                                                    'GotEverything = True
                    curWork = ""
'##END OF RUNNERS
'------------------------------------------------------------------------------------------
'##UP TO HERE
'Stop
                    secs2 = Time()
                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                        'Debug.Print "From start to GotEveryThing: " & mySecs
                    Set Csel = Range("D" & scRow1 & ":D" & lastRow)
                    hCount = Csel.count
                    For Each cY In Csel 'the one race determined from Col D
                        If cY = myNo Then
                            If cY.Offset(0, 3).Interior.ColorIndex = 3 _
                                And myJockey <> "" Then
                                cY.Offset(0, 3) = myJockey
                                cY.Offset(0, 3).Interior.ColorIndex = xlNone
                            End If
                            cY.Offset(0, 26) = myRating 'Col AD
                            cY.Offset(0, 28) = myForm 'Col AF
                            cY.Offset(0, 29) = myWin 'Col AG
                            If UCase(theTime) <> "PAYING" And theTime <> "" Then
                                cY.Offset(0, 30) = theTime 'Col AH - race time
                            End If
                            cY.Offset(0, 31) = hCount 'AI
                            cY.Offset(0, 32) = myFixed 'AJ
                            cY.Offset(0, 33) = weather
                            cY.Offset(0, 34) = TrackCond
                            cY.Offset(0, 35) = myPlace 'col AM
'enter results
                            ' "|" & pos & "," & posHorse & "|" & toteWin & "|" & totePlace & "|@"
                            If InStr(1, posResults, "," & myNo & "|") > 0 Then
                                resultArray = Split(posResults, "@")
                                For p = LBound(resultArray) To UBound(resultArray)
                                   myString = resultArray(p)
                                    If InStr(1, myString, "," & myNo & "|") > 0 Then
                                        cY.Offset(0, -2) = Mid(myString, 2, 1)
                                        If cY.Offset(0, -2) = "1" Then
                                            'cY.Offset(0, 16) = cY.Offset(0, 29)
                                            'cY.Offset(0, 17) = cY.Offset(0, 35)
                                            cY.Offset(0, 16) = Split(myString, "|")(2)
                                            cY.Offset(0, 17) = Split(myString, "|")(3)
                                        ElseIf cY.Offset(0, -2) = "2" Or cY.Offset(0, -2) = "3" Then
                                            cY.Offset(0, 17) = Split(myString, "|")(3)
                                        'ElseIf cY.Offset(0, -2) = "3" _
                                          'And cY.Offset(0, 31) > 7 Then
                                            'cY.Offset(0, 17) = cY.Offset(0, 35)
                                        End If
                                        Exit For
                                    End If
                                Next p
                            End If
'enter tips & late mail
                            'Tips
                            If InStr(1, Tips, "-" & myNo & "-") > 0 Then
                                cY.Interior.ColorIndex = 20 'light blue
                            End If
                            If LateMail = myNo Then
                                cY.Interior.ColorIndex = 8 'dark blue
                            End If

                            secs2 = Time()
                            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                            'Debug.Print "updated sheet: " & mySecs
                            Exit For
                        End If
                    Next cY
                    myNo = ""
                    myRating = ""
                    myWin = ""
                    myPlace = ""
                    myFixed = ""
                    myForm = ""
                    secs2 = Time()
                    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                    'Debug.Print "Finished that runner: " & mySecs & " x count: " & x
                    x = x + 1
                    'If x = 20 Then Stop
                Next r
            End If
            scRow1 = lastRow + 1
        Else
            scRow1 = scRow1 + 1
        End If
    End If
' reset the variables
NothingHere:
    Tips = ""
    LateMail = ""
    curWork = ""
    findTime = ""
    theTime = ""
    hCount = 0
    weather = ""
    TrackCond = ""
    secs2 = Time()
    mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
    'Debug.Print "Finished that race (next scX): " & mySecs
'Stop
Next scX
Application.StatusBar = ""
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True
driver.stop
'driver.Close 'doesnt work
'Close #nFileNum
If GotScratchings = True Then GoTo removeScratched:
Exit Sub
removeScratched:
Range("D1:D" & Range("D" & Rows.count).End(xlUp).Row).Offset(0, -2).Select
Set rng = Selection 'Col B
For s = rng.Rows.count To 1 Step -1
    If rng.Rows(s).value = "SCR" Then
        rng.Rows(s).EntireRow.Delete
    End If
Next s

End Sub
Function CountCcolor(rangeData As Range) As Long
'this is only used in gethorserating
    Dim datax As Range
    Dim xcolor As Long
For Each datax In rangeData
    If datax.Interior.ColorIndex = 6 Then
        CountCcolor = CountCcolor + 1
    End If
Next datax
End Function


Sub HighlightExp()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myExp           As Range
    Dim myExp2          As Range
    Dim myFP            As Range 'fixed price
    Dim myRating        As Range
    
    
    'Dim myRegress       As Range
    'Dim myRegPlace      As Range
    'Dim mySlopePlace    As Range
    
    Dim myRow1          As Long
    Dim myRow2          As Long
    Dim myRowEnd        As Long
    Dim mySum           As Long 'sum of AT range
    Dim mySumFP         As Double
    Dim myHorseCount    As Long
    Dim myTip           As Long

    On Error Resume Next
    'Columns("AN:AP").Interior.ColorIndex = xlNone
    Columns("AB:AD").Interior.ColorIndex = xlNone
    myRow1 = 3
    Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col D
            If myX.Row >= myRow1 Then
                If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                    Range("D" & myX.Row).End(xlDown).Select 'select whole race
                    myRowEnd = Selection.Row
                    myHorseCount = myX.Offset(0, 31).value
                    Set myRng = Range("D" & myRow1 & ":D" & myRowEnd) 'The range to work on D
                    Set myExp = Range("AB" & myRow1 & ":AB" & myRowEnd) 'myExp
                    Set myExp2 = Range("AN" & myRow1 & ":AN" & myRowEnd) 'myExp2
                    Set myRating = Range("AD" & myRow1 & ":AD" & myRowEnd) 'Rating col AD range
                    mySum = WorksheetFunction.Sum(myExp)
                    Set myFP = Range("AZ" & myRow1 & ":AZ" & myRowEnd) 'my Fixed Price
                    mySumFP = WorksheetFunction.Sum(myFP) - myHorseCount
                    
                    'Set myRegress = Range("AN" & myRow1 & ":AN" & myRowEnd) 'myRegression Slope
                    'Set myRegPlace = Range("AO" & myRow1 & ":AO" & myRowEnd) 'Calc place using trend
                    'Set mySlopePlace = Range("AP" & myRow1 & ":AP" & myRowEnd) 'calc place using slope
                        For Each myY In myRng 'the one race determined from Col J
                            If myY <> "" Then
                                If myY.Offset(0, 26).value >= Application.Average(myRating) _
                                    And myY.Offset(0, 26).value <> 0 Then
                                    myY.Offset(0, 26).Interior.ColorIndex = 19 ' pale yellow
                                End If
                                If myY.Offset(0, 24).value > Application.Max(myExp) - 75 Then
                                    myY.Offset(0, 24).Interior.ColorIndex = 19 ' pale yellow
                                End If
                                If myY.Offset(0, 24).value = Application.Max(myExp) Then
                                    myY.Offset(0, 24).Interior.ColorIndex = 6 ' yellow
                                End If
                                If myY.Offset(0, 36).value = Application.Max(myExp2) Then
                                    myY.Offset(0, 36).Interior.ColorIndex = 6 ' yellow
                                    myY.Offset(0, 37).value = myY.Offset(0, 36).value - Application.Large(myExp2, 2)
                                End If
                                If myY.Offset(0, 32).value = Application.Min(myFP) Then
                                    myY.Offset(0, 32).Interior.ColorIndex = 6 ' yellow
                                End If
                                myY.Offset(0, 25).value = (myY.Offset(0, 24).value / mySum) * 100 'percent
                                'myY.Offset(0, 44).Value = ((myY.Offset(0, 49).Value - 1) / mySumFP) * 100 'percent
                                'try PercentRank
                                myY.Offset(0, 27).value = Application.WorksheetFunction.PercentRank(myFP, myY.Offset(0, 49))
'---------- regress
'                                If myY.Offset(0, 36).value <> "" Then
'                                    If myY.Offset(0, 36).value = Application.Small(myRegress, 3) Then
'                                        myY.Offset(0, 36).Interior.ColorIndex = 15 ' light grey
'                                        myTip = myTip + 1
'                                    ElseIf myY.Offset(0, 36).value = Application.Small(myRegress, 2) Then
'                                        myY.Offset(0, 36).Interior.ColorIndex = 19 ' light yellow
'                                        myTip = myTip + 2
'                                    ElseIf myY.Offset(0, 36).value = Application.Small(myRegress, 1) Then
'                                        myY.Offset(0, 36).Interior.ColorIndex = 6 ' yellow
'                                        myTip = myTip + 3
'                                    End If
'
'                                    If myY.Offset(0, 37).value = Application.Small(myRegPlace, 3) Then
'                                        myY.Offset(0, 37).Interior.ColorIndex = 15
'                                        myTip = myTip + 1
'                                    ElseIf myY.Offset(0, 37).value = Application.Small(myRegPlace, 2) Then
'                                        myY.Offset(0, 37).Interior.ColorIndex = 19
'                                        myTip = myTip + 2
'                                    ElseIf myY.Offset(0, 37).value = Application.Small(myRegPlace, 1) Then
'                                        myY.Offset(0, 37).Interior.ColorIndex = 6
'                                        myTip = myTip + 3
'                                    End If
'
'                                    If myY.Offset(0, 38).value = Application.Small(mySlopePlace, 3) Then
'                                        myY.Offset(0, 38).Interior.ColorIndex = 15
'                                        myTip = myTip + 1
'                                    ElseIf myY.Offset(0, 38).value = Application.Small(mySlopePlace, 2) Then
'                                        myY.Offset(0, 38).Interior.ColorIndex = 19
'                                        myTip = myTip + 2
'                                    ElseIf myY.Offset(0, 38).value = Application.Small(mySlopePlace, 1) Then
'                                        myY.Offset(0, 38).Interior.ColorIndex = 6
'                                        myTip = myTip + 3
'                                    End If
'                                    myY.Offset(0, 40) = myTip
'                                    myTip = 0
'                                End If
'----------end of regress
                            End If
                        Next myY
                    myRow1 = myRowEnd + 1
                Else
                    myRow1 = myRow1 + 1
                End If
            End If
        Next myX
Range("A1").Select
End Sub
Private Sub SortExpScore()
Dim scRow1      As Long
Dim lastRow     As Long 'of the current race
Dim scSelect    As Range
Dim scX         As Range
Dim cSelect     As Range ' current race selection
Dim myCol2      As Long

myCol2 = ActiveSheet.UsedRange.Columns.count
scRow1 = 3 'start on the first horse
Set scSelect = Range("D2:D" & Range("D" & Rows.count).End(xlUp).Row)
For Each scX In scSelect 'Col D
    If scX.Row >= scRow1 Then
        If scX <> "" Then
            Range("D" & scX.Row).End(xlDown).Select
            lastRow = Selection.Row
            Set cSelect = Range(Cells(scRow1, 1), Cells(lastRow, myCol2))
                cSelect.Select
                'was AB, now AR, now back to AB
                Selection.Sort key1:=Range("AB" & scRow1), Order1:=xlDescending, _
                Header:=xlNo, OrderCustom:=1, MatchCase:=False, _
                Orientation:=xlTopToBottom
             scRow1 = lastRow + 1
        Else
            scRow1 = scRow1 + 1
        End If
    End If
Next scX
Range("B3").Select

End Sub
Sub PicWinner()

Dim myBunch     As Range
Dim myX         As Range
Dim myY         As Range
Dim myZ         As Range
Dim quadRest    As Range
Dim quinRest    As Range
Dim myDiff      As Double
Dim myD         As Long
Dim myE         As Long
Dim firstRow    As Long
Dim lastRow     As Long
Dim bottomRow   As Long
Dim curRow      As Long
Dim quadBM      As Long
Dim quinBM      As Long
Dim curRaceValue As Long
Dim quadLG      As Boolean
Dim triLG       As Boolean
Dim quinLG      As Boolean
Dim testBet     As Boolean
Dim sSheet      As String
Dim sTrack      As String
'Tote is declared as a public variable

Dim myRow1 As Long
Dim myRowEnd As Long
Dim raceDist As Long
Dim myEval As Range
Dim myEval_pc As Range
Dim myEval2 As Range
Dim myCalFin As Range
Dim myAdjCalFin As Range
Dim myMPS As Range
Dim myAMPS As Range
Dim myHValue As Range
Dim myMPS600 As Range
Dim myRating As Range

Dim wetHist As String
Dim x As Range
Dim myFormHist As Range
Dim myTipRating     As Range
Dim myDistBehind As Double
Dim myDistBehind2 As Double
Dim myDistBehind3 As Double
Dim myDistBehind4 As Double
Dim myCost      As Long
Dim myWin       As Double

Dim Price       As Integer
Dim Price2      As Integer
Dim chk         As Boolean
Dim myCount     As Long
Dim z           As Long

Price = 6
Price2 = 4

On Error Resume Next
sSheet = ActiveWorkbook.name
sTrack = Mid(sSheet, 12, 2)
   
' Clear colour from Cols A
Columns("A:A").Interior.ColorIndex = xlNone
Columns("Y:Y").Interior.ColorIndex = xlNone
Columns("AR:AR").Interior.ColorIndex = xlNone
Columns("AE:AE").Interior.ColorIndex = xlNone
bottomRow = Range("D" & Rows.count).End(xlUp).Row
'Range("Z2:Z" & Range("Z" & Rows.count).End(xlUp).Row).Clear
'Range("AE2:AE" & Range("AE" & Rows.count).End(xlUp).Row).Clear
Range("Z2:Z" & bottomRow).Clear
Range("AE2:AE" & bottomRow).Clear
'Range("AN2:AN" & bottomRow).Clear 'clears everything
'Range("AN2:AN" & bottomRow).ClearContents
'now use this for myExp2
'Range("AN1").FormulaArray = "=Product(if(AN2:AN" & bottomRow & " = ""x"", AM2:AM" & bottomRow & ", """"))"

myRow1 = 3
Set myBunch = Range("D2:D" & Range("D" & Rows.count).End(xlUp).Row) 'Horse No
For Each myX In myBunch 'Col D
'    If Range("B" & myX.Row).Interior.ColorIndex = 38 Then
'        myCost = myCost + 1
'        myWin = myWin + Range("T" & myX.Row).value
'    End If
    If myX.Row >= myRow1 Then
        If myX.value <> "" Then
            Range("D" & myX.Row).End(xlDown).Select 'select whole race
            myRowEnd = Selection.Row
            Set myEval = Range("AB" & myRow1 & ":AB" & myRowEnd) 'Eval
            Set myEval_pc = Range("AC" & myRow1 & ":AC" & myRowEnd) 'Eval%
            Set myEval2 = Range("AN" & myRow1 & ":AN" & myRowEnd) 'Eval2
            Set myCalFin = Range("R" & myRow1 & ":R" & myRowEnd)
            Set myAdjCalFin = Range("S" & myRow1 & ":S" & myRowEnd)
            Set myMPS = Range("O" & myRow1 & ":O" & myRowEnd)
            Set myAMPS = Range("P" & myRow1 & ":P" & myRowEnd)
            Set myHValue = Range("V" & myRow1 & ":V" & myRowEnd)
            Set myMPS600 = Range("W" & myRow1 & ":W" & myRowEnd)
            Set myFormHist = Range("AF" & myRow1 & ":AF" & myRowEnd)
            Set myTipRating = Range("AR" & myRow1 & ":AR" & myRowEnd)
            Set myRating = Range("AD" & myRow1 & ":AD" & myRowEnd)
            
            curRaceValue = Range("C" & myRow1 - 1)
            raceDist = Range("B" & myRow1 - 1)
            testBet = False
            'myD = Range("AB" & myX.Row).value - Range("AB" & myX.Row + 1).value 'Eval
            myD = Range("AB" & myX.Row) - Application.Large(myEval, 2)  'Eval
            myD = Format(myD, "0")
            myE = Range("AC" & myX.Row) - Application.Large(myEval_pc, 2)  'Eval
            myE = Format(myE, "0")

            Range("Z" & myX.Row).value = myD
            Range("AE" & myX.Row).NumberFormat = "0"
            Range("AE" & myX.Row).value = myE
            For Each myY In myEval
            'Application.Large(myFormCount, 2)
                If myY = Application.Large(myEval, 1) Then 'Best Eval
                    If Range("R" & myY.Row) <> "" And Range("S" & myY.Row) <> "" Then
'-------------------------------
allGo:
                        If Range("R" & myY.Row) = Application.Small(myCalFin, 1) _
                            And Range("S" & myY.Row) = Application.Small(myAdjCalFin, 1) Then
                            chk = IsError(Application.Small(myCalFin, 2))
                            If chk = False Then
                        'If myD >= 35 Then
                                z = Len(Range("AD" & myY.Row))
                                If z = 0 Then GoTo noRating:
                                If Range("AD" & myY.Row) = Application.Large(myRating, 1) And _
                                    Range("AD" & myY.Row) > Application.Large(myRating, 2) Then
                                    'And Range("AD" & myY.Row) > 0 And z > 0 Then
                                    If IsNumeric(Range("AJ" & myY.Row).value) = False _
                                        Or Range("AJ" & myY.Row).value = "" Then
                                        Range("A" & myY.Row).Interior.ColorIndex = 15 'grey
                                    ElseIf Range("AJ" & myY.Row).value > 0 Then
                                        If Range("AJ" & myY.Row).value >= Price Then
                                            Range("A" & myY.Row).Interior.ColorIndex = 3 'red
                                            'If Range("AM" & myY.Row) >= 1.5 And Range("AI" & myY.Row) > 7 Then
                                            '    Range("AN" & myY.Row) = "x"
                                            'End If
                                        ElseIf Range("AJ" & myY.Row).value >= Price2 Then
                                            Range("A" & myY.Row).Interior.ColorIndex = 38 'pink
                                            'If Range("AM" & myY.Row) >= 1.5 And Range("AI" & myY.Row) > 7 Then
                                            '    Range("AN" & myY.Row) = "x"
                                            'End If
                                        Else
                                            Range("A" & myY.Row).Interior.ColorIndex = 40 'pale orange
                                            'If Range("AM" & myY.Row) >= 1.5 And Range("AI" & myY.Row) > 7 Then
                                            '    Range("AN" & myY.Row) = "x"
                                            'End If
                                        End If
                                    Else
                                        Range("A" & myY.Row).Interior.ColorIndex = 1 'black
                                    End If
                                'Else
                                
                                End If
                            'Else
                                
                            End If
                        'Else
                        End If
                    End If
                    'Stop
                    If Range("A" & myY.Row).Interior.ColorIndex = xlNone _
                        And Range("AN" & myY.Row) = Application.Large(myEval2, 1) _
                        And Range("AO" & myY.Row) >= 30 Then
                        If IsNumeric(Range("AJ" & myY.Row).value) = False _
                            Or Range("AJ" & myY.Row).value = "" Then
                            Range("A" & myY.Row).Interior.ColorIndex = 15 'grey
                        ElseIf Range("AJ" & myY.Row).value > 0 Then
                            If Range("AJ" & myY.Row).value >= Price Then
                                Range("A" & myY.Row).Interior.ColorIndex = 3 'red
                            ElseIf Range("AJ" & myY.Row).value >= Price2 Then
                                Range("A" & myY.Row).Interior.ColorIndex = 38 'pink
                            Else
                                Range("A" & myY.Row).Interior.ColorIndex = 40 'pale orange
                            End If
                        Else
                            Range("A" & myY.Row).Interior.ColorIndex = 1 'black
                        End If
                                
                    End If

noRating:
                    'End If

Skip:
'if the top 3 horses are the only ones in the race valued over 90 in col AT (and there are more than 5 horses in the race)
                    If myX.Offset(0, 24).Interior.ColorIndex = 6 And myX.Offset(-1, 24).value = "" Then
                        quadLG = False
                        triLG = False
                        quinLG = False
                        myCount = myX.Offset(0, 31).value
                        firstRow = myX.Row
                        Range("D" & myX.Row).End(xlDown).Select 'get the one race
                        lastRow = Selection.Row
'first 4
                        Set quadRest = Range("AD" & firstRow + 4 & ":AD" & lastRow)
                        quadBM = Application.Max(quadRest) 'can add to this
                        For Each myZ In Range("AD" & firstRow & ":AD" & lastRow)
                            curRow = myZ.Row - firstRow
                            If myZ.value > quadBM And curRow <= 3 Then
                                quadLG = True
                            ElseIf myZ.value <= quadBM And curRow <= 3 Then
                                quadLG = False
                                Exit For
                            ElseIf curRow > 3 Then
                                Exit For
                            End If
                            If curRow = 3 Then
                                If quadLG = True And myX.Offset(0, 31).value > 5 Then
                                    Range("A" & firstRow + 3).Interior.ColorIndex = 5 'blue
                                    If myCount < 10 Then
                                        Range("B" & firstRow + 3).Interior.ColorIndex = 15 'grey
                                    End If
                                End If
                                Exit For
                            End If
                        Next myZ
'First 3 trifecta
                        For Each myZ In Range("AD" & firstRow & ":AD" & lastRow)
                            curRow = myZ.Row - firstRow
                            If myZ.value > 90 And curRow <= 2 Then
                                triLG = True
                            ElseIf myZ.value < 90 And curRow <= 2 Then
                                triLG = False
                                Exit For
                            ElseIf myZ.value > 90 And curRow > 2 Then
                                triLG = False
                                Exit For
                            End If
                            If myZ.Row = lastRow Then
                                If triLG = True And myX.Offset(0, 31).value > 5 Then
                                    Range("A" & firstRow + 2).Interior.ColorIndex = 4 'green
                                End If
                                Exit For
                            End If
                        Next myZ
'first 2 quinella
                        Set quinRest = Range("AD" & firstRow + 2 & ":AD" & lastRow)
                        quinBM = Application.Max(quinRest) + 2 'can add to this
                        For Each myZ In Range("AD" & firstRow & ":AD" & lastRow)
                            curRow = myZ.Row - firstRow
                            If myZ.value > quinBM And curRow <= 1 Then
                                quinLG = True
                            ElseIf myZ.value <= quinBM And curRow <= 1 Then
                                quinLG = False
                                Exit For
                            ElseIf curRow > 1 Then
                                Exit For
                            End If
                            If curRow = 1 Then
                                If quinLG = True And myX.Offset(0, 31).value > 5 Then
                                    Range("A" & firstRow + 1).Interior.ColorIndex = 6 'yellow
                                End If
                                Exit For
                            End If
                        Next myZ
                    End If
           
                End If
                'If Range("AR" & myY.Row) <> "" And myD <= 250 Then
                '    If Range("AR" & myY.Row).value > 6 And Range("AR" & myY.Row).value = Application.Large(myTipRating, 1) _
                '        And Application.Large(myTipRating, 1) > Application.Large(myTipRating, 2) Then
                '        Range("AR" & myY.Row).Interior.ColorIndex = 6 'yellow
                '        myCost = myCost + 1
                '        myWin = myWin + Range("T" & myY.Row).value
                '        If Range("AG" & myY.Row).value >= 6 Then
                            'Or Range("AJ" & myY.Row).value >= 8) Then 'if price is above $8
                '            Range("A" & myY.Row).Interior.ColorIndex = 3 'red
                '        Else
                '            Range("A" & myY.Row).Interior.ColorIndex = 38 'pink
                '        End If
                '    End If
                'End If
            Next myY
            'Stop
            myRow1 = myRowEnd + 1
        Else
            myRow1 = myRow1 + 1
        End If
    End If
Next myX
Range("AR1").NumberFormat = "@"
Range("AR1") = myWin & " - " & myCost
myCost = 0
myWin = 0

End Sub
Sub BuildRaceDaySummary()

Dim wb          As Workbook
Dim RDSOpen      As Boolean
Dim myGroup     As Range
Dim myX         As Range
Dim wbA         As Workbook 'Variant
Dim lastRow     As Long

Dim sSheet      As String
Dim sTrack      As String
Dim myDate      As Date
Dim myRaceNo    As String
Dim myRaceTime  As Date
Dim myhorse     As String
Dim Ind         As Integer

Dim myRowEnd As Long
Dim myRace As Range
Dim myY As Range

'check if rdSummary is open
RDSOpen = False
For Each wb In Workbooks
    If wb.name = "RDSummary.xls" Then
        RDSOpen = True
        Exit For
    End If
Next wb
If RDSOpen = False Then
    Workbooks.Open "C:\FILES\Horses\RDSummary.xls"
    RDSOpen = True
End If
Workbooks("RDSummary.xls").Worksheets("Sheet1").Activate
Range("G6:G250").EntireRow.Delete
'Range("G6:G250").Interior.ColorIndex = xlNone
Set wbA = ActiveWorkbook
If Range("A6").value <> "" Then
    MsgBox ("Old values exist in this sheet, at least in A6. Remove before continuing.")
    Exit Sub
End If
Range("A6").value = "PREP"
Range("B6").value = "0"

'Debug.Print wbA.name
'Debug.Print ActiveWorkbook.name
For Each wb In Workbooks
    If wb.name <> "RDSummary.xls" And InStr(1, LCase(wb.name), "r.xls") > 0 Then
        wb.Activate
        sSheet = wb.name
        sTrack = Mid(sSheet, 12, 2)
        myDate = Left(sSheet, 10)
        Set myGroup = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row) 'Race No
        For Each myX In myGroup 'Col C
            If myX.value <> "" Then
                wb.Activate
                myRaceNo = myX.value
                myRaceTime = myX.Offset(0, 3)
                Range("C" & myX.Row + 1).End(xlDown).Select 'select whole race
                myRowEnd = Selection.Row
                Set myRace = Range("C" & myX.Row + 1 & ":C" & myRowEnd) 'The range to work on C
                For Each myY In myRace
                    If Range("A" & myY.Row).Interior.ColorIndex = 3 _
                        Or Range("A" & myY.Row).Interior.ColorIndex = 38 Then 'red or pink entry
                        myhorse = myY
                        Ind = Range("A" & myY.Row).Interior.ColorIndex
                        If Ind = 38 Then 'pink to grey
                            Ind = 15 'grey
                        ElseIf Ind = 3 Then 'red to pink
                            Ind = 38 'pink
                        End If
                        Exit For
                    End If
                Next myY

                'ElseIf myX.Offset(2, 0).Interior.ColorIndex = 3 _
                '    Or myX.Offset(2, 0).Interior.ColorIndex = 38 Then ' 2nd entry
                '    myHorse = myX.Offset(2, 2)
                'ElseIf myX.Offset(3, 0).Interior.ColorIndex = 3 _
                '    Or myX.Offset(3, 0).Interior.ColorIndex = 38 Then ' 3rd entry
                '    myHorse = myX.Offset(3, 2)
            'End If
                wbA.Activate
                lastRow = Range("A65536").End(xlUp).Row + 1
                Range("A" & lastRow).value = sTrack
                Range("B" & lastRow).value = myRaceNo
                Range("C" & lastRow).value = myDate
                Range("D" & lastRow).value = myRaceTime
                Range("E" & lastRow).value = myDate & " " & myRaceTime
                If myhorse <> "" Then
                    Range("G" & lastRow).value = myhorse
                    Range("G" & lastRow).Interior.ColorIndex = Ind
                    myhorse = ""
                    Ind = 0
                End If
            End If
        Next myX
    End If
Next wb
'sort the sheet
wbA.Activate
lastRow = Range("A65536").End(xlUp).Row
Set myGroup = Range(Cells(7, 1), Cells(lastRow, 9))
    myGroup.Sort key1:=Range("D2"), Order1:=xlAscending, _
    Header:=xlNo, OrderCustom:=1, MatchCase:=False, _
    Orientation:=xlTopToBottom
'Range("C4").Select
'Range("A6").Value = "PREP"
'Range("B6").Value = "0"
Range("C6").value = Range("C7").value
Range("D6").value = Range("D7") - TimeSerial(0, 30, 0)
Range("E6").value = Range("C7").value & " " & Range("D7") - TimeSerial(0, 30, 0)
Range("F6").Select
End Sub
Sub AddBetFair()
Dim strPath         As String
Dim strPath2        As String
Dim vaFileName      As Variant
Dim sYear           As String
Dim sMonth          As String
Dim lMonth          As String
Dim sDay            As String
Dim i               As Integer

Dim FSO As Scripting.FileSystemObject
Dim SourceFolder As Scripting.Folder
Dim FileItem As Scripting.file


Call HorsesBets.PowerRacing

Set FSO = New Scripting.FileSystemObject

sYear = Format(Date, "yyyy")
lMonth = Format(Date, "mm mmm")
sMonth = Format(Date, "mm")
sDay = Format(Date, "dd")

strPath2 = "C:\FILES\Horses\Results\" & sYear & "\" & lMonth & "\Sheets\" & sYear & "-" & sMonth & "-" & sDay & "*.xls"
strPath = "C:\FILES\Horses\Results\" & sYear & "\" & lMonth & "\Sheets\"

Call CountFilesInFolder(strPath2)
BFReady = True
On Error Resume Next

Set SourceFolder = FSO.GetFolder(strPath)
For Each FileItem In SourceFolder.Files
    If InStr(1, FileItem.name, sYear & "-" & sMonth & "-" & sDay) > 0 Then
        'If InStr(1, FileItem.name, "DR") = 0 Then 'dont do darwin
        'Debug.Print FileItem.Path
        'Set wbResults = Workbooks.Open("C:\FILES\Horses\Results\" & sYear & "\" & lMonth & "\Sheets\" & strPath)
            If BFReady = False And i = 0 Then GoTo NoBetfair:
        'Stop
            'Workbooks.Open ("C:\FILES\Horses\Results\" & sYear & "\" & lMonth & "\Sheets\" & strPath)
            Workbooks.Open FileItem
            If Range("BI1") <> "BF Done" Then
                Call Add_BETFAIRmodel
            
                If BFReady = True Then
                    i = i + 1
                    Call EnterScratchings
                    Call UpdateSheet
                    Range("BI1") = "BF Done"
                ElseIf BFReady = False And i = 0 Then
                    WaitOnBF
                    ActiveWorkbook.Save
                    ActiveWorkbook.Close False
                    Exit Sub
               End If
            End If
            ActiveWorkbook.Save
            ActiveWorkbook.Close False
            'wbResults.Close SaveChanges:=True
        'End If
    End If
Next FileItem
'If BFReady = True Then 'all sheets have been processed
If i > 0 Then
    LogInformation "BetFair finalised. Found " & i & " out of " & myCount & " sheets."
    Call HorsesBets.ReScheduleStart
End If
NoBetfair:
'MsgBox "All done"
Set FileItem = Nothing
Set SourceFolder = Nothing
Set FSO = Nothing

End Sub
Private Sub WaitOnBF()
    myBFTime = Now + TimeSerial(0, 0, 300)
    Application.DisplayStatusBar = True
    Application.StatusBar = String(3, ChrW(9609)) & "Waiting on BETFAIR, running every 5 minutes, next due " & Now + TimeSerial(0, 0, 300)
    'If BFReady = False Then
    Application.OnTime EarliestTime:=myBFTime, Procedure:=BF_RunWhat, Schedule:=True
    'Application.OnTime EarliestTime:=myRunTime, Procedure:=BetRunWhat, Schedule:=False
    'Else
    '    Call HorsesBets.ReScheduleStart
    'End If
    'Application.StatusBar =
End Sub
Private Sub StopBF()
    On Error Resume Next
    Application.OnTime EarliestTime:=myBFTime, Procedure:=BF_RunWhat, Schedule:=False
    Application.StatusBar = ""
' change the PC power back to normal (sleep in 1 hr)
    'LogInformation "Process manually stopped."
    'PowerNormal
End Sub
Sub StopProcessingBF()
    StopBF
    Application.AutoRecover.Enabled = True
    Application.DisplayAlerts = True

End Sub
Private Sub CountFilesInFolder(strDir As String)
' Call CountFilesInFolder("C:\Users\Ryan\*txt")
Dim file As Variant
    myCount = 0
    file = Dir(strDir)
    While (file <> "")
        myCount = myCount + 1
        file = Dir
    Wend

End Sub

Private Sub Add_BETFAIRmodel()

Dim wkName      As String
Dim wkDate      As String
Dim wkCode      As String
Dim urlName     As String
'Dim myCol       As Range
'Dim myX         As Range
'Dim Team        As String
Dim mySite      As String
Dim ie          As InternetExplorer
Dim html        As HTMLDocument
Dim TeamArray() As String
Dim x           As String
Dim LineContent As String
'Dim margin      As String

Dim elements As IHTMLElementCollection
Dim element As IHTMLElement
Dim element1s As IHTMLElementCollection
Dim element1 As IHTMLElement
Dim element2s As IHTMLElementCollection
Dim element2 As IHTMLElement
Dim Element3s As IHTMLElementCollection
Dim Element3 As IHTMLElement

Dim Delimiter As String
Dim TextFile As Integer
Dim FilePath As String
Dim FileContent As String
Dim LineArray() As String
Dim y As Integer
Dim myCode As String 'TAB Code from CurrentCodes.txt
Dim myTrack As String 'track name from CurrentCodes.txt
Dim myhorse As String
Dim myBack As String
Dim mySel As String 'recommendation
Dim raceNo As String

Dim MeetingFound As Boolean
Dim racesFound As Boolean

Dim myRow1 As Long
Dim myselection As Range
Dim myX As Range
Dim myRowEnd As Long
Dim myBF As Range
Dim myY As Range
Dim lastRow As Long


StopMyProcess ("iexplore.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkCode = Mid(wkName, InStr(1, wkName, " ") + 1, Len(wkName))
wkCode = Trim(wkCode)
wkName = Replace(wkName, wkCode, "")
wkName = Trim(wkName)
wkDate = Split(wkName, "-")(2) & "-" & Split(wkName, "-")(1) & "-" & Split(wkName, "-")(0)

MeetingFound = False
racesFound = False



Delimiter = "|"
FilePath = "C:\FILES\Horses\CurrentCodes.txt"
TextFile = FreeFile
Open FilePath For Input As TextFile
FileContent = Input(LOF(TextFile), TextFile)
Close TextFile
        
LineArray() = Split(FileContent, vbCrLf)
For y = LBound(LineArray) To UBound(LineArray)
    If Len(Trim(LineArray(y))) <> 0 Then
        myCode = Split(LineArray(y), Delimiter)(0)
        If LCase(wkCode) = LCase(myCode) Then
            myTrack = Split(LineArray(y), Delimiter)(1)
            Exit For
        End If
    End If
Next y
If myTrack = "" Then
    'MsgBox "The track for code " & wkCode & " is not found in CurrentCodes.txt"
    End
End If
Columns("BH:BI").ClearContents
Range("BH1").value = "BetFair"
Range("BI1").value = "BF Bet"
'https://www.betfair.com.au/hub/uncategorized/historical-racing-model-data/
urlName = "https://www.betfair.com.au/hub/news/racing-selection-model-the-data-scientists/"
'urlName = "https://www.betfair.com.au/hub/uncategorized/historical-racing-model-data/"
'Dim x As Long
'#### end of testing
Set ie = New InternetExplorer
ie.Visible = False
'ie.Visible = True
ie.navigate urlName
    
Do While ie.READYSTATE <> READYSTATE_COMPLETE
    Application.StatusBar = "Getting BETFAIR Model ..."
    DoEvents
Loop
Application.Wait (Now + TimeValue("00:00:10")) 'This lets the widget load
'Stop
Set html = ie.document

mySite = html.documentElement.innerHTML

'Stop
If InStr(1, mySite, ">" & myTrack & "</div>") > 0 Then
    'Stop
    LogInformation "BetFair: found " & myTrack
    Set elements = html.getElementsByTagName("div")

    For Each element In elements
        'x = Element.innerText
        'Debug.Print "Element Classname: " & Element.ClassName
        If element.ClassName = "meeting" Then
            'Stop
            If InStr(1, element.innerHTML, ">" & myTrack & "</div>") > 0 Then 'found right div
                'Stop
                'Debug.Print "meeting element:" & Element.innerText
                MeetingFound = True
                Set element1s = element.getElementsByTagName("div")
                For Each element1 In element1s
                    'x = Element1.innerText
                    'Debug.Print "Element1 Classname: " & Element1.ClassName
                    'Debug.Print "Element1.innerText:" & Element1.innerText
                    If element1.ClassName = "races" Then
                        Set element2s = element1.getElementsByTagName("div")
                        For Each element2 In element2s
                            'x = Element2.innerText
                            'Debug.Print "Element2 Classname: " & Element2.ClassName
                            'Debug.Print "Element2.innerhtml:" & Element2.innerHTML
                            'Stop
                            If element2.ClassName = "race-name" And raceNo = "" Then
                            '##############
                            'ElseIf Element.ClassName = "race-name" And MeetingFound = True And racesFound = True Then
                                raceNo = element2.innerText
                                raceNo = Left(raceNo, InStr(1, raceNo, " ") - 1)
                                raceNo = Replace(raceNo, "R", "")
                                raceNo = Trim(raceNo)                                   'race number
                                'Debug.Print RaceNo
                            ElseIf element2.ClassName = "recommendation" Then
                                Set Element3s = element2.getElementsByTagName("div")
                                For Each Element3 In Element3s
                                    If Element3.ClassName = "name" And raceNo <> "" Then
                                        myhorse = Element3.innerText
                                        myhorse = Left(myhorse, InStr(1, myhorse, " ") - 1)
                                        myhorse = Trim(myhorse)
                                        'Debug.Print myHorse
                                    ElseIf Element3.ClassName = "selections" And raceNo <> "" And myhorse <> "" Then
                                        If Element3.innerText = "1" Then 'got it
   '##############
                                            'Debug.Print Element3.innerText
                                            myRow1 = 2
                                            lastRow = Range("A65536").End(xlUp).Row
                                            For Each myX In Range("A2:A" & lastRow)
                                                'Set mySelection = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row) 'RaceNo
                                                'For Each myX In mySelection 'Col A
                                                If myX.Row >= myRow1 Then
                                                    'Stop
                                                    If myX.value = raceNo Then 'found the right race
                                                        Range("C" & myX.Row + 1).End(xlDown).Select 'select whole race
                                                        myRowEnd = Selection.Row
                                                        Set myBF = Range("C" & myX.Row + 1 & ":C" & myRowEnd) 'The range to work on C
                                                        For Each myY In myBF
                                                            If myY = myhorse Then
                                                                Range("BH" & myY.Row) = "1"
                                                                'myY.Offset(0, 57) = "1"
                                                                'Stop
                                                                raceNo = ""
                                                                myhorse = ""
                                                                If myX.Row = lastRow Then GoTo allDone:
                                                                GoTo RaceDone:
                                                                'Exit For
                                                            End If
                                                        Next myY
                                                    End If
                                                End If
                                                myRow1 = myRowEnd + 1
                                                If myX.Row = lastRow Then GoTo allDone:
                    
                                            Next myX
                                        End If
                                    End If
                                Next Element3
                            End If
RaceDone:
                        Next element2
                    End If
                Next element1
                'Stop
            End If
        End If
    Next element
Else
    'MsgBox "BetFair model not ready yet !!"
    LogInformation "BetFair: " & myTrack & " NOT found yet."
    Application.StatusBar = ""
    
    Set html = Nothing
    ie.Quit
    Set ie = Nothing

    'ie.Quit
    'Set ie = Nothing
    'Set html = Nothing
    BFReady = False
    mySite = ""
    myTrack = ""
    myCode = ""
    GoTo allDone:
End If
'End If
'Stop

'##### 'for testing
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\Horses\test.txt"

'FileNum = FreeFile
'Open testFile For Append As #FileNum
'Print #FileNum, mySite
'Close #FileNum
'Stop
'#####

ie.Quit
Set ie = Nothing
Set html = Nothing
allDone:
Application.StatusBar = ""
mySite = ""
myTrack = ""
myCode = ""
Range("C3").Select
'MsgBox "All done"
End Sub
Private Sub Add_BETFAIRmodel_NEW()

Dim wkName      As String
Dim wkDate      As String
Dim wkCode      As String
Dim myURL     As String
Dim mySite      As String
'Dim ie          As InternetExplorer
'Dim html        As HTMLDocument
Dim TeamArray() As String
'Dim x           As String
Dim LineContent As String
'Dim margin      As String
Dim myMeeting As String

Dim startElement As WebElement

Dim elements As WebElementCollection
Dim element As WebElement
Dim element1s As WebElementCollection
Dim element1 As WebElement
Dim element2s As WebElementCollection
Dim element2 As WebElement
'Dim Element3s As WebElementCollection
'Dim Element3 As WebElement

Dim Delimiter As String
Dim TextFile As Integer
Dim FilePath As String
Dim FileContent As String
Dim LineArray() As String
Dim y As Integer
Dim myCode As String 'TAB Code from CurrentCodes.txt
Dim myTrack As String 'track name from CurrentCodes.txt
Dim myhorse As String
Dim myBack As String
Dim mySel As String 'recommendation
Dim raceNo As String

'Dim MeetingFound As Boolean
'Dim racesFound As Boolean

Dim myRow1 As Long
Dim myselection As Range
Dim myX As Range
Dim myRowEnd As Long
Dim myBF As Range
Dim myY As Range
Dim lastRow As Long

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter


'StopMyProcess ("iexplore.exe")
'StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkCode = Mid(wkName, InStr(1, wkName, " ") + 1, Len(wkName))
wkCode = Trim(wkCode)
wkName = Replace(wkName, wkCode, "")
wkName = Trim(wkName)
wkDate = Split(wkName, "-")(2) & "-" & Split(wkName, "-")(1) & "-" & Split(wkName, "-")(0)

'MeetingFound = False
'racesFound = False

Delimiter = "|"
FilePath = "C:\FILES\Horses\CurrentCodes.txt"
TextFile = FreeFile
Open FilePath For Input As TextFile
FileContent = Input(LOF(TextFile), TextFile)
Close TextFile
        
LineArray() = Split(FileContent, vbCrLf)
For y = LBound(LineArray) To UBound(LineArray)
    If Len(Trim(LineArray(y))) <> 0 Then
        myCode = Split(LineArray(y), Delimiter)(0)
        If LCase(wkCode) = LCase(myCode) Then
            myTrack = Split(LineArray(y), Delimiter)(1)
            Exit For
        End If
    End If
Next y
If myTrack = "" Then
    'MsgBox "The track for code " & wkCode & " is not found in CurrentCodes.txt"
    End
End If
Columns("BH:BI").ClearContents
Range("BH1").value = "BetFair"
Range("BI1").value = "BF Bet"
'##############################

Application.StatusBar = "Getting BETFAIR Model ..."

'driver.Start "chrome", "https://www.betfair.com.au/hub/news/racing-selection-model-the-data-scientists/"
driver.Start "phantomjs", "https://www.betfair.com.au/hub/news/racing-selection-model-the-data-scientists/"
'driver.setPreference "browser.password_manager_enabled", False
driver.setImplicitWait 10000
driver.Wait (500)

myURL = "/"
driver.get myURL, Raise:=False

driver.Wait (3000)

mySite = driver.getBodyText
'Debug.Print mySite
Stop
If InStr(1, mySite, myTrack) > 0 Then
'this is <div class="meetings-list">
'                                                 /html/body/div[3]/div/div[1]/div/div[2]/div[4]/div/div/div/div/div/div/div[4]/div
    'Set startElement = driver.findElementByXPath("/html/body/div[3]/div/div[1]/div/div[2]/div[4]/div/div/div/div/div/div/div[4]/div")
    'Set elements = startElement.findElementsByTagName("div")
    'Set elements = startElement.findElementsByClassName("meeting")
    'childs = MyCurrentWebElement.findElements(By.xpath("./child::*"))
    '/html/body/div[3]/div/div[1]/div/div[2]/div[4]/div/div/div/div/div/div/div[4]/div/div[
    'Set elements = startElement.findElementsByXPath("./child::*")
    Set elements = driver.findElementsByXPath("/html/body/div[3]/div/div[1]/div/div[2]/div[4]/div/div/div/div/div/div/div[4]/div/div[*]")
    For Each element In elements
    Debug.Print element.text
    Stop
        'LogInformation "BetFair: found " & myTrack
        'If Element.ClassName = "meeting" Then
        'If Element.findElementByClassName = "meeting" Then
            Stop
            If InStr(1, element.text, myTrack) > 0 Then 'found right div
                Stop
                myMeeting = element.text
                Debug.Print element.text
                'MeetingFound = True
                Set element1s = element.findElementsByTagName("div")
                For Each element1 In element1s
                    Debug.Print "Element1.Text:" & element1.text
                    If element1.ClassName = "races" Then
                        Set element2s = element1.findElementsByTagName("div")
                        For Each element2 In element2s
                            Debug.Print "Element2.text" & element2.text
                            Stop
                            'If Element2.ClassName = "race-name" And RaceNo = "" Then
                            '##############
                            'ElseIf Element.ClassName = "race-name" And MeetingFound = True And racesFound = True Then
                                'RaceNo = Element2.innerText
                                'RaceNo = Left(RaceNo, InStr(1, RaceNo, " ") - 1)
                                'RaceNo = Replace(RaceNo, "R", "")
                                'RaceNo = Trim(RaceNo)                                   'race number
                                'Debug.Print RaceNo
                            'ElseIf Element2.ClassName = "recommendation" Then
                                'Set Element3s = Element2.findElementsByTagName("div")
                                'For Each Element3 In Element3s
                                    'If Element3.ClassName = "name" And RaceNo <> "" Then
                                        'myHorse = Element3.innerText
                                        'myHorse = Left(myHorse, InStr(1, myHorse, " ") - 1)
                                        'myHorse = Trim(myHorse)
                                        'Debug.Print myHorse
                                    'ElseIf Element3.ClassName = "selections" And RaceNo <> "" And myHorse <> "" Then
                                        'If Element3.innerText = "1" Then 'got it
   '##############
                                            'Debug.Print Element3.innerText
                                            myRow1 = 2
                                            lastRow = Range("A65536").End(xlUp).Row
                                            For Each myX In Range("A2:A" & lastRow)
                                                'Set mySelection = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row) 'RaceNo
                                                'For Each myX In mySelection 'Col A
                                                If myX.Row >= myRow1 Then
                                                    'Stop
                                                    If myX.value = raceNo Then 'found the right race
                                                        Range("C" & myX.Row + 1).End(xlDown).Select 'select whole race
                                                        myRowEnd = Selection.Row
                                                        Set myBF = Range("C" & myX.Row + 1 & ":C" & myRowEnd) 'The range to work on C
                                                        For Each myY In myBF
                                                            If myY = myhorse Then
                                                                Range("BH" & myY.Row) = "1"
                                                                'myY.Offset(0, 57) = "1"
                                                                'Stop
                                                                raceNo = ""
                                                                myhorse = ""
                                                                If myX.Row = lastRow Then GoTo allDone:
                                                                GoTo RaceDone:
                                                                'Exit For
                                                            End If
                                                        Next myY
                                                    End If
                                                End If
                                                myRow1 = myRowEnd + 1
                                                If myX.Row = lastRow Then GoTo allDone:
                    
                                            Next myX
                                        'End If
                                    'End If
                                'Next Element3
                            'End If
RaceDone:
                        Next element2
                    End If
                Next element1
                'Stop
            End If
        'End If
    Next element
Else
    'MsgBox "BetFair model not ready yet !!"
    LogInformation "BetFair: " & myTrack & " NOT found yet."
    Application.StatusBar = ""
    
    'Set html = Nothing

    BFReady = False
    mySite = ""
    myTrack = ""
    myCode = ""
    GoTo allDone:
End If
'End If
'Stop

'##### 'for testing
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\Horses\test.txt"

'FileNum = FreeFile
'Open testFile For Append As #FileNum
'Print #FileNum, mySite
'Close #FileNum
'Stop
'#####

'Set html = Nothing
allDone:
Application.StatusBar = ""
mySite = ""
myTrack = ""
myCode = ""
Range("C3").Select
'MsgBox "All done"
End Sub
Sub buildHtmlPage()
Dim wb              As Workbook
Dim htmlFile        As String
Dim FileNum         As Long
Dim holder          As String
Dim track           As String
Dim myDate As String
Dim p               As Variant
    
'delete all files in C:\FILES\WEB PAGES\Lattitude27\Site\horses\results\
If Dir("C:\FILES\WEB PAGES\Lattitude27\Site\horses\results\*.*") <> "" Then
    Kill "C:\FILES\WEB PAGES\Lattitude27\Site\horses\results\*.*"
End If
'p = ActivePrinter
Application.ActivePrinter = "Microsoft Print to PDF on Ne01:"
'ActiveWindow.SelectedSheets.PrintOut copies:=1, ActivePrinter:= _
'        "Microsoft Print to PDF on Ne01:", PrintToFile:=True, collate:=True, _
'        PrToFileName:="C:\a\test.pdf"

htmlFile = "C:\FILES\WEB PAGES\Lattitude27\Site\horses\menu.html"
myDate = Format(Date, "dd-mm-yyyy")
FileNum = FreeFile
Open htmlFile For Output As #FileNum
Print #FileNum, "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"""
Print #FileNum, """http://www.w3.org/TR/html4/loose.dtd"">"
Print #FileNum, "<html>"
Print #FileNum, "<head>"
Print #FileNum, "<title>Chucks Horse Aid</title>"
Print #FileNum, "<meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"">"
Print #FileNum, "<script type=""text/javascript"" src=""hits.php?mid=<?php echo rand(1,15000); ?>""></script>"
Print #FileNum, "</head>"
Print #FileNum, "<body>"
Print #FileNum, "<br>"
Print #FileNum, myDate & "<br>"
Print #FileNum, "<br>"

For Each wb In Workbooks
   ' MsgBox (wb.Name)
    If wb.name <> "PERSONAL.XLS" And wb.name <> "RDSummary.xls" Then
        If InStr(1, UCase(wb.name), "R.XLS") > 0 Then
            wb.Activate
            Application.Wait (Now + TimeValue("00:00:03"))
            holder = wb.name
            holder = Replace(holder, ".xls", "")
            track = Mid(holder, InStr(1, holder, " ") + 1, Len(holder))
            Print #FileNum, "<DT><A HREF=""http://horses.lattitude27.com/results/" & holder & ".pdf?mid=<?php echo rand(1,15000); ?>"" target=""mainFrame"">" & track & "</A>"
            ActiveWindow.SelectedSheets.PrintOut copies:=1, ActivePrinter:= _
                "Microsoft Print to PDF on Ne01:", PrintToFile:=True, collate:=True, _
                PrToFileName:="C:\FILES\WEB PAGES\Lattitude27\Site\horses\results\" & holder & ".pdf"
        End If
    End If
Next wb
Print #FileNum, "</body>"
Print #FileNum, "</html>"
Close #FileNum

'ActivePrinter = p
'
'update the server
Shell "C:\FILES\Horses\updateHorses.bat"

End Sub
Sub UpdateAllSheets()
Dim wb              As Workbook
Dim htmlFile        As String
Dim FileNum         As Long
Dim holder          As String
Dim track           As String
Dim myDate As String
Dim p               As Variant
    
For Each wb In Workbooks
   ' MsgBox (wb.Name)
    If wb.name <> "PERSONAL.XLS" And wb.name <> "RDSummary.xls" Then
        If InStr(1, UCase(wb.name), "R.XLS") > 0 Then
            wb.Activate
            UpdateSheet
        End If
    End If
Next wb

End Sub
Sub UpdateAndPDFandUpload()
Dim wb              As Workbook
Dim htmlFile        As String
Dim FileNum         As Long
Dim holder          As String
Dim track           As String
Dim myDate As String
Dim p               As Variant
    
'p = ActivePrinter
Application.ActivePrinter = "Microsoft Print to PDF on Ne01:"
'ActiveWindow.SelectedSheets.PrintOut copies:=1, ActivePrinter:= _
'        "Microsoft Print to PDF on Ne01:", PrintToFile:=True, collate:=True, _
'        PrToFileName:="C:\a\test.pdf"

'htmlFile = "C:\FILES\WEB PAGES\Lattitude27\Site\horses\menu.html"
'myDate = Format(Date, "dd-mm-yyyy")
'FileNum = FreeFile
'Open htmlFile For Output As #FileNum
'Print #FileNum, "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"""
'Print #FileNum, """http://www.w3.org/TR/html4/loose.dtd"">"
'Print #FileNum, "<html>"
'Print #FileNum, "<head>"
'Print #FileNum, "<title>Chucks Horse Aid</title>"
'Print #FileNum, "<meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"">"
'Print #FileNum, "</head>"
'Print #FileNum, "<body>"
'Print #FileNum, "<br>"
'Print #FileNum, myDate & "<br>"
'Print #FileNum, "<br>"

For Each wb In Workbooks
   ' MsgBox (wb.Name)
    If wb.name <> "PERSONAL.XLS" And wb.name <> "RDSummary.xls" Then
        If InStr(1, UCase(wb.name), "R.XLS") > 0 Then
            wb.Activate
            UpdateSheet
            Application.Wait (Now + TimeValue("00:00:03"))
            holder = wb.name
            holder = Replace(holder, ".xls", "")
            track = Mid(holder, InStr(1, holder, " ") + 1, Len(holder))
            'Print #FileNum, "<DT><A HREF=""http://horses.lattitude27.com/results/" & holder & ".pdf?mid=<?php echo rand(1,15000); ?>"" target=""mainFrame"">" & track & "</A>"
            ActiveWindow.SelectedSheets.PrintOut copies:=1, ActivePrinter:= _
                "Microsoft Print to PDF on Ne01:", PrintToFile:=True, collate:=True, _
                PrToFileName:="C:\FILES\WEB PAGES\Lattitude27\Site\horses\results\" & holder & ".pdf"
        End If
    End If
Next wb
'Print #FileNum, "</body>"
'Print #FileNum, "</html>"
'Close #FileNum

'ActivePrinter = p
'
'update the server
Shell "C:\FILES\Horses\updateHorses.bat"

End Sub
Private Sub AdjustMPSforThisRace()

Dim myBunch     As Range
Dim myX         As Range
Dim myY         As Range

Dim myRow1 As Long
Dim myRowEnd As Long
Dim raceDist As Long
Dim myMPS As Range

Dim fileName    As String
Dim nFileNum        As Long
Dim gFile           As String
Dim FileArray()     As String
Dim myLine          As String
Dim y           As Long
Dim myCode      As String
Dim theCode     As String
Dim myDiff      As Double

fileName = "C:\FILES\Horses\MPSadjustmentData.txt"
nFileNum = FreeFile
Open fileName For Input As nFileNum
gFile = Input(LOF(nFileNum), nFileNum)
Close nFileNum

FileArray() = Split(gFile, vbCrLf)

myRow1 = 3
Set myBunch = Range("D2:D" & Range("D" & Rows.count).End(xlUp).Row) 'Horse No
For Each myX In myBunch 'Col D
    If myX.Row >= myRow1 Then
        If myX.value <> "" Then
            Range("D" & myX.Row).End(xlDown).Select 'select whole race
            myRowEnd = Selection.Row
            
            Set myMPS = Range("O" & myRow1 & ":O" & myRowEnd)
            
            raceDist = Range("B" & myRow1 - 1)
            Select Case raceDist
                Case Is < 1000
                    theCode = "990"
                Case Is < 1100
                    theCode = "1000"
                Case Is < 1200
                    theCode = "1100"
                Case Is < 1300
                    theCode = "1200"
                Case Is < 1400
                    theCode = "1300"
                Case Is < 1500
                    theCode = "1400"
                Case Is < 1600
                    theCode = "1500"
                Case Is < 1700
                    theCode = "1600"
                Case Is < 1800
                    theCode = "1700"
                Case Is < 1900
                    theCode = "1800"
                Case Is < 2000
                    theCode = "1900"
                Case Is < 2300
                    theCode = "2000"
                Case Is < 2600
                    theCode = "2300"
                Case Is < 2800
                    theCode = "2600"
                Case Is < 3000
                    theCode = "2800"
                Case Is < 3100
                    theCode = "3000"
                Case Else
                    theCode = "3100"
            End Select

            For y = LBound(FileArray) To UBound(FileArray)
                If Len(Trim(FileArray(y))) <> 0 Then
                    myLine = FileArray(y)
        
                    myCode = Split(FileArray(y), "|")(0)
                    If myCode = theCode Then
                        myDiff = Split(FileArray(y), "|")(1)
                        Exit For
                    End If
                End If
            Next y

            For Each myY In myMPS
                If myY <> "" Then
                    myY = myY.value - myDiff
                    myY.Offset(0, 1) = myY.Offset(0, 1).value - myDiff
                    myY.Offset(0, 8) = myY.Offset(0, 8).value - myDiff
                End If
            Next myY
            
            myRow1 = myRowEnd + 1
        Else
            myRow1 = myRow1 + 1
        End If
    End If
Next myX

End Sub
Attribute VB_Name = "HorsesBets"
Option Explicit
'Dim BetTTL      As Long
'Dim WinTTL      As Double
Public Const BetAmount As String = "1" 'the amount to be, replaces Sub betwhat
'Public BetRunWhen As Double
Dim BetRunWhen As Double
Dim myRunTime  As Double
Dim rtTimeTmp   As Date 'the time as a date of the next scheduled run "myRunTime"
Dim sSheet      As String 'the next meeting sheet to be processed
'Public Const cRunIntervalSeconds = 300 ' in seconds 600 = 10 minutes
Public Const cRunIntervalSeconds = 180 ' in seconds 180 = 3 minutes
'Public Const cRunIntervalSeconds = 30 ' in seconds 30 = 1/2 minutes (using status bar)
Public Const BetRunWhat = "StartProcessing"  ' the name of the procedure to run
Private Declare Function LockWorkStation Lib "user32.dll" () As Long
'Public Possible As Integer
'Public Probable As Integer
'18/1/15 added error handling in Place Bet. chuck
'29-10-15 added change power settings (PowerNoSleep and PowerNormal)
'           plus LockWorkstation. chuck
'1-11-2015 added StopMyProcess to kill firefox when error occurs. chuck
'11/11/15 added BetWin log update
'11/4/16 changed err to now quit excel and completely restart. ReScheduleStart and ReOpenSheets
'27/10/16 added new power setting - PowerRacing

Private Sub BetStartTimer()
'display a status bar to indicate macro is running
    Application.DisplayStatusBar = True
    Application.StatusBar = String(3, ChrW(9609)) & "Auto bet is due to run at " & rtTimeTmp

    'BetRunWhen = Now + TimeSerial(0, 0, cRunIntervalSeconds)
    Application.OnTime EarliestTime:=myRunTime, Procedure:=BetRunWhat, Schedule:=True
End Sub
Private Sub BetStartTimer_bac()
'original BetStartTimer
'display a status bar to indicate macro is running
    Application.DisplayStatusBar = True
    Application.StatusBar = String(3, ChrW(9609)) & "Auto bet is running every 3 minutes"

    BetRunWhen = Now + TimeSerial(0, 0, cRunIntervalSeconds)
    Application.OnTime EarliestTime:=BetRunWhen, Procedure:=BetRunWhat, Schedule:=True
End Sub
Private Sub BetStopTimer()
    On Error Resume Next
    Application.OnTime EarliestTime:=myRunTime, Procedure:=BetRunWhat, Schedule:=False
    Application.StatusBar = False
' change the PC power back to normal (sleep in 1 hr)
    LogInformation "Process manually stopped."
    PowerNormal
End Sub
Private Sub BetStopTimer_bac()
'Original process
    On Error Resume Next
    Application.OnTime EarliestTime:=BetRunWhen, Procedure:=BetRunWhat, Schedule:=False
    Application.StatusBar = False
' change the PC power back to normal (sleep in 1 hr)
    PowerNormal
End Sub
Sub StartProcess()
'set a new start for processing so that the PC power only gets changed at startup
'change the PC Power setting to never sleep
    PowerRacing
    Application.AutoRecover.Enabled = False
    Application.DisplayAlerts = False
    StopMyProcess ("thunderbird.exe")
    StopMyProcess ("firefox.exe")
    StopMyProcess ("chromedriver.exe")
    StopMyProcess ("iexplore.exe")
'start the processing
    'StartProcessing 'original method
    LogInformation "Process manually started."
    ProcessRaceDaySummary
End Sub
Private Sub StartProcessing()
Dim wb          As Workbook
Dim StartTime   As Date
Dim TimeNow     As Date
Dim wbCount     As Long
Dim sPos2       As Long 'position number for testing
Dim myPath      As String 'for closing and re-opening spreadsheet
'Dim ShtName     As String 'worksheet name for processing errors
Dim chk         As Boolean

'GoTo here: 'for testing
Application.StatusBar = String(10, ChrW(9609)) & "Running ..."
TryAgain:
On Error GoTo ProErr:
sPos2 = "1"
'TimeNow = Format(Now, "hh:mm:ss")
'StartTime = "10:00:00" ' don't start too early in the day
'If TimeNow < StartTime Then GoTo Skip:
   ' LogInformation "Run,"
sPos2 = "5"
'Possible = 0
'Probable = 0

'ClearRDSummary 'no good, ends up with nothing as sheets are dropped off

For Each wb In Workbooks
    'Application.EnableEvents = True
    sPos2 = "10"
'GoTo here:
   ' MsgBox (wb.Name)
    If wb.name <> "PERSONAL.XLS" And wb.name <> "RDSummary.xls" Then
        If InStr(1, UCase(wb.name), "R.XLS") > 0 Then
            sPos2 = "15"
            wb.Activate
            sPos2 = "20"
            Call Horses.EnterScratchings
            sPos2 = "25"
            Call Horses.UpdateSheet
            sPos2 = "30"
            GetWinnings
            sPos2 = "35"
            'placeBet
            placeBet_Chrome '################# had to update selenium
            sPos2 = "37"
            UpdateRDSummary
        Else
            wb.Close False
        End If
    End If
    sPos2 = "39"
Next wb
'Call HorsesBets.Costings
sPos2 = "40"
wbCount = Workbooks.count
'MsgBox (wbCount)
If wbCount < 3 Then GoTo AllOver: '1 wkbook is a blank one
sPos2 = "45"
'Skip:
    sPos2 = "50"
    ProcessRaceDaySummary
Exit Sub
AllOver:
sPos2 = "55"
    BetStopTimer
    LogInformation "Scheduled Timer stopped and power changed to normal"
'quit Firefox
    StopMyProcess ("firefox.exe")
    LogInformation "Firefox closed"
'lock the PC
sPos2 = "65"
    LockPC
    LogInformation "PC Locked"
sPos2 = "75"
'quit excel
LogInformation "Excel closed"
    Application.AutoRecover.Enabled = True
    Application.DisplayAlerts = True
    Application.Quit
Exit Sub
'###########################
'ProErr:
    'LogInformation "##ERROR in StartProcessing with " & wb.name & "##. Occurred just after Pos No:" & sPos2 & ","
    'sPos2 = "0"
'kill any open firefox
'here:
    'Application.EnableEvents = False
    'StopMyProcess ("firefox.exe")
    StopMyProcess ("chromedriver.exe")
    LogInformation "Firefox stop process run from within StartProcessing##"
'probably should look at closing the problem wb, without saving, then re-opening it
    myPath = Application.ActiveWorkbook.FullName
    'If myPath <> "" Then
        'If wb.name <> "PERSONAL.XLS" Then
    wb.Close False
    'LogInformation myPath & " closed from within StartProcessing##"
            'ActiveWorkbook.Close False
    'Application.Wait (Now + TimeValue("00:00:05"))
            'Application.EnableEvents = True
            'Workbooks.Open (myPath)
            'If InStr(1, UCase(wb.name), "R.XLS") > 0 Then
    Workbooks.Open fileName:=myPath, ReadOnly:=False
    LogInformation myPath & " closed and re-opened from within StartProcessing##"
            'Else 'not a race sheet
            '    LogInformation myPath & " left closed##"
            'End If
            'GoTo tryAgain:
    Resume Next
        'End If
    'Else
    '    LogInformation "No information in myPath: " & myPath
        ' BetStartTimer
        'Resume Next
    'End If
    'Application.EnableEvents = True
'####################################
ProErr:
here:
Application.DisplayAlerts = False
'On Error Resume Next
    If sPos2 > 10 And sPos2 < 40 Then
        LogInformation "##ERROR in StartProcessing with " & wb.name & "##. Occurred just after Pos No:" & sPos2 & ". Going for full RESTART,"
    Else
        LogInformation "##ERROR in StartProcessing just after Pos No:" & sPos2 & ". Going for full RESTART,"
    End If
    sPos2 = "0"
    'Application.EnableEvents = False
    'StopMyProcess ("firefox.exe")
    StopMyProcess ("chromedriver.exe")
    Call ReScheduleStart

End Sub

Sub StopProcessing()
    BetStopTimer
    Application.AutoRecover.Enabled = True
    Application.DisplayAlerts = True

End Sub
Private Sub BetWhat()
'use public const instead
'BetAmount = "1"
End Sub
Sub ReScheduleStart()
'this closes all open sheets, reschedules a new excel start and quits current application
Dim myWB    As Workbook

Application.DisplayAlerts = False
For Each myWB In Workbooks
    If myWB.name <> "PERSONAL.XLS" Then
        myWB.Close False
    End If
Next myWB

StopMyProcess ("chromedriver.exe")

LogInformation "3 Quitting Excel"
Application.Wait (Now + TimeValue("00:00:02"))

Shell Environ("COMSPEC") & " /c start """" ""C:\FILES\Horses\restartExcel.vbs""", 1
'ThisWorkbook.Saved = True
Application.Quit

End Sub
Sub placeBet_OLD()
'opens up a new webpage, logs in and places bets for the whole sheet
runAgain:
Dim myselection     As Range
Dim myX             As Range
Dim rSheet          As String
Dim rDate           As String
Dim rYear           As String
Dim rMonth          As String
Dim rDay            As String
Dim rTrack          As String
Dim rRace           As String 'Current Race
Dim x               As Date
Dim theDate         As Date
Dim theTime         As Date
Dim chkTime         As String
Dim url             As String
Dim horseNo         As String
Dim raceSelect      As String
Dim curTime         As Date

Dim Tote            As Boolean

Dim sPos            As String
Dim sRaceTime       As String 'for error reporting
Dim sToteOdds       As String ' as above

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

On Error GoTo PBErr:
'BetWhat
sPos = "1"
rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
sPos = "2"
rDate = rYear & "/" & rMonth & "/" & rDay
x = rDay & "/" & rMonth & "/" & rYear
theDate = Format(x, "dd-mmm-yy")
sPos = "3"
rTrack = Mid(rSheet, 12, 2)
sPos = "3.5"
curTime = Now
'curTime = "06-Mar-16 11:20:00 AM" 'for testing
'MsgBox (curTime)


sPos = "4" 'position for error checking
Set myselection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, -2)
    For Each myX In myselection 'Col A
        'MsgBox (myX.Interior.ColorIndex)
        Tote = True
        If myX <> "" Then
            rRace = myX
            chkTime = myX.Offset(0, 3).text
            theTime = theDate & " " & myX.Offset(0, 3).text & ":00"
            'Debug.Print theTime
        End If
        sPos = "5"
        horseNo = myX.Offset(0, 2) 'horseno is blank when myX is not null (Col A - has the race number)
        sRaceTime = myX.Offset(0, 49).text
        sToteOdds = myX.Offset(0, 48)
'Write Log
        If myX.Interior.ColorIndex = 3 And theTime > curTime Then
            LogInformation "Identified in A," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & sToteOdds
        End If
        sPos = "10"
        If (myX.Interior.ColorIndex = 3 Or myX.Interior.ColorIndex = 38) _
            And myX.Offset(0, 1).Interior.ColorIndex = 38 _
            And myX.Offset(0, 48).Interior.ColorIndex <> 38 Then
            ChkBetWin rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount
            myX.Offset(0, 48).Interior.ColorIndex = 38
        End If
'only continue if within 15 minutes of race start and no bet placed yet (TimeSerial(0, 0, 900) = 15 minutes)
'18/11/16 changed to 10 minutes (TimeSerial(0, 0, 600) = 10 minutes)
'25/1/17 changed to 2 minutes (TimeSerial(0, 0, 120) = 2 minutes) due to scheduled running from the summary

        If myX.Interior.ColorIndex = 3 And myX.Offset(0, 1).Interior.ColorIndex <> 38 _
            And curTime > theTime - TimeSerial(0, 0, 120) And theTime > curTime Then
           ' horseNo = myX.Offset(0, 2)
            sPos = "15"
            'If myX.Offset(0, 48).Value < myX.Offset(0, 51).Value Then
               ' Tote = False 'bet via fixed price
            'End If
            sPos = "20"
            On Error GoTo BetErr:
            driver.Start "firefox", "https://tatts.com/"
            driver.setImplicitWait 10000
            url = "/racing/" & rDate & "/" & rTrack & "/" & rRace
            driver.get url
'login here
            sPos = "25"
            driver.findElementById("Username").Clear
            driver.findElementById("Username").SendKeys "ctdent@smartchat.net.au"
            driver.findElementById("Password").Clear
            driver.findElementById("Password").SendKeys "4399Ngai"
            driver.findElementById("Login").Click
'enter bet details
            sPos = "30"
            driver.findElementById("MeetingList").SendKeys rTrack
            driver.findElementById("RaceList").Click
            driver.findElementById("RaceList").Click
            driver.SendKeys (rRace)
            driver.findElementById("RaceList").Click
            
            sPos = "35"
            driver.findElementById("ToteOrFixedList_0").Click 'tote price
            
            sPos = "40"
            driver.findElementById("SelectionsBox1").Clear
            driver.findElementById("SelectionsBox1").SendKeys horseNo
'Win
            sPos = "45"
            'driver.findElementById("WinBox").Clear
            'driver.findElementById("WinBox").SendKeys BetAmount
'Place
            sPos = "50"
            driver.findElementById("PlaceBox").Clear
            driver.findElementById("PlaceBox").SendKeys BetAmount
'Fixed or Tote bet
            sPos = "55"
            'If Tote = False Then
             sPos = "60"
             '   driver.findElementById("ToteOrFixedList_1").Click 'fixed price
            'Else
              sPos = "65"
              'driver.findElementById("ToteOrFixedList_0").Click 'tote price
            'End If
'PurchaseButton
            sPos = "70"
            driver.findElementById("PurchaseButton").Click
'ConfirmButton
            sPos = "75"
            driver.findElementById("ConfirmButton").Click
'btnLogout
            sPos = "80"
            driver.findElementById("btnLogout").Click
            sPos = "85"
            driver.stop
            sPos = "90"
            myX.Offset(0, 1).Interior.ColorIndex = 38
            If Tote = False Then
                sPos = "95"
                myX.Offset(0, 51).Interior.ColorIndex = 38
                LogInformation "##FIXED BET##," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & myX.Offset(0, 51)
            Else
'Write the log
                sPos = "100"
                LogInformation "##BET##," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & sToteOdds
'                BetTTL = BetTTL + BetAmount
                myX.Offset(0, 48).Interior.ColorIndex = 38
                ChkBetWin rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount
            End If
        End If
        horseNo = "0" 'reset horse number
        sRaceTime = "0"
        sToteOdds = "0"
    Next myX
sPos = "105"
Application.Calculation = xlCalculationAutomatic
ActiveWorkbook.Save
If curTime > theTime + TimeSerial(0, 0, 1200) Then
    sPos = "110"
    ActiveWorkbook.Close False
End If
sPos = "115"
Exit Sub

PBErr:
If chkTime <> "" Then
    LogInformation "##ERROR in start of placebet## just after sPos No:" & sPos & " in " & rSheet & ". Race time (theTime|chkTime|curTime):" & theTime & "|" & chkTime & "|" & curTime
Else
    LogInformation "##ERROR in 'theTime' at start of placebet## just after sPos No:" & sPos & " in " & rSheet & ". Race time (chkTime|curTime):" & chkTime & "|" & curTime
End If
Exit Sub

BetErr:
    LogInformation "##ERROR in placebet## just after sPos No:" & sPos & "," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & sToteOdds
    driver.findElementById("btnLogout").Click
    driver.stop
    sPos = "0"
    horseNo = "0"
    sRaceTime = "0"
    sToteOdds = "0"
'kill firefox
    'LogInformation "Firefox stopped from within placebet## script placebet## to be run again"
    'StopMyProcess ("firefox.exe")
    'GoTo runAgain:
End Sub
Sub placeBet_Chrome()
'opens up a new CHROME webpage, logs in and places bets for the whole sheet
runAgain:
'Dim myWB              As Workbook
Dim myselection     As Range
Dim myX             As Range
Dim rSheet          As String
Dim rDate           As String
Dim rYear           As String
Dim rMonth          As String
Dim rDay            As String
Dim rTrack          As String
Dim rRace           As String 'Current Race
Dim x               As Date
Dim theDate         As Date
Dim theTime         As Date
Dim chkTime         As String
Dim url             As String
Dim horseNo         As String
Dim raceSelect      As String
Dim curTime         As Date

Dim Tote            As Boolean

Dim sPos            As String
Dim sRaceTime       As String 'for error reporting
Dim sToteOdds       As String ' as above

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
 
'driver.setPreference "profile.password_manager_enabled", False

'GoTo here:
On Error GoTo PBErr:
sPos = "1"
rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
sPos = "2"
rDate = rYear & "/" & rMonth & "/" & rDay
x = rDay & "/" & rMonth & "/" & rYear
theDate = Format(x, "dd-mmm-yy")
sPos = "3"
rTrack = Mid(rSheet, 12, 2)
sPos = "3.5"
curTime = Now
'curTime = "06-Mar-16 11:20:00 AM" 'for testing
'MsgBox (curTime)


sPos = "4" 'position for error checking
Set myselection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, -2)
    For Each myX In myselection 'Col A
        'MsgBox (myX.Interior.ColorIndex)
        Tote = True
        If myX <> "" Then
            rRace = myX
            chkTime = myX.Offset(0, 3).text
            theTime = theDate & " " & myX.Offset(0, 3).text & ":00"
            'Debug.Print theTime
        End If
        sPos = "5"
        horseNo = myX.Offset(0, 2) 'horseno is blank when myX is not null (Col A - has the race number)
        sRaceTime = myX.Offset(0, 49).text
        sToteOdds = myX.Offset(0, 48)
'Write Log
        If myX.Interior.ColorIndex = 3 And theTime > curTime Then
            LogInformation "Identified in A," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & sToteOdds
        End If
        sPos = "10"
        If (myX.Interior.ColorIndex = 3 Or myX.Interior.ColorIndex = 38) _
            And myX.Offset(0, 1).Interior.ColorIndex = 38 _
            And myX.Offset(0, 48).Interior.ColorIndex <> 38 Then
            ChkBetWin rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount
            myX.Offset(0, 48).Interior.ColorIndex = 38
        End If
'only continue if within 15 minutes of race start and no bet placed yet (TimeSerial(0, 0, 900) = 15 minutes)
'18/11/16 changed to 10 minutes (TimeSerial(0, 0, 600) = 10 minutes)
'25/1/17 changed to 2 minutes (TimeSerial(0, 0, 120) = 2 minutes) due to scheduled running from the summary

        If myX.Interior.ColorIndex = 3 And myX.Offset(0, 1).Interior.ColorIndex <> 38 _
            And curTime > theTime - TimeSerial(0, 0, 120) And theTime > curTime Then
           ' horseNo = myX.Offset(0, 2)
            sPos = "15"
            'If myX.Offset(0, 48).Value < myX.Offset(0, 51).Value Then
               ' Tote = False 'bet via fixed price
            'End If
            sPos = "20"
            On Error GoTo BetErr:
here:
            'driver.get "/buy-lotto/purchase-ticket?product=Powerball", Raise:=False
            driver.Start "chrome", "https://tattsbet.ubet.com/"
            driver.setPreference "browser.password_manager_enabled", False
            driver.setImplicitWait 10000
            driver.Wait (500)
            sPos = "22"
'rDate = "2018/01/17"
'rTrack = "BR"
'rRace = "7"
'HorseNo = "9"
            url = "/racing/" & rDate & "/" & rTrack & "/" & rRace
            driver.get url, Raise:=False
            'driver.Open url
'login here
            sPos = "25"
            'driver.Click "id=Username"
            'driver.SendKeys "ctdent@smartchat.net.au"
            'driver.clickAndWait "id=Password"
            'driver.SendKeys "4399Ngai"
            'driver.clickAndWait "id=Login"
            'driver.Wait (1000)
'############
            driver.Type "id=Username", "ctdent@smartchat.net.au"
            driver.Type "id=Password", "4399Ngai"
            driver.clickAndWait "id=Login"
            driver.Wait (1000)
  
  
  'driver.Select "id=MeetingList", "label=QR"
  'driver.Select "id=RaceList", "label=2"
  'driver.Type "id=SelectionsBox1", "4"
  'driver.Type "id=WinBox", "1"
'##############
'enter bet details
           sPos = "30"
            driver.clickAndWait "id=MeetingList"
            driver.SendKeys rTrack
            
           
            driver.clickAndWait "id=RaceList"
            driver.clickAndWait "id=RaceList"
            driver.SendKeys rRace
            driver.clickAndWait "id=RaceList"
            
            sPos = "35"
            driver.clickAndWait "id=ToteOrFixedList_0"
            
            sPos = "40"
            driver.clickAndWait "id=SelectionsBox1"
            driver.SendKeys horseNo

'Win
            sPos = "45"
            driver.clickAndWait "id=WinBox"
            driver.SendKeys BetAmount

'Place
            sPos = "50"
            'driver.clickAndWait "id=PlaceBox"
            'driver.SendKeys BetAmount
'Fixed or Tote bet
            sPos = "55"
            'If Tote = False Then
             sPos = "60"
             '   driver.findElementById("ToteOrFixedList_1").Click 'fixed price
            'Else
              sPos = "65"
              'driver.findElementById("ToteOrFixedList_0").Click 'tote price
            'End If
'PurchaseButton
            sPos = "70"
            driver.clickAndWait "id=PurchaseButton"
'ConfirmButton
            driver.Wait (1000) 'wait 1 second
            sPos = "75"
            'ConfirmButton
            '//*[@id="ConfirmButton"]
            driver.clickAndWait "id=ConfirmButton"
'btnLogout
            sPos = "80"
            driver.clickAndWait "id=btnLogout"
            sPos = "85"
            driver.stop

'Exit Sub
            
            sPos = "90"
            myX.Offset(0, 1).Interior.ColorIndex = 38
            If Tote = False Then
                sPos = "95"
                myX.Offset(0, 51).Interior.ColorIndex = 38
                LogInformation "##FIXED BET##," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & myX.Offset(0, 51)
            Else
'Write the log
                sPos = "100"
                LogInformation "##BET##," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & sToteOdds
'                BetTTL = BetTTL + BetAmount
                myX.Offset(0, 48).Interior.ColorIndex = 38
                ChkBetWin rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount
            End If
        End If
        horseNo = "0" 'reset horse number
        sRaceTime = "0"
        sToteOdds = "0"
    Next myX
sPos = "105"
Application.Calculation = xlCalculationAutomatic
ActiveWorkbook.Save
If curTime > theTime + TimeSerial(0, 0, 1200) Then
    sPos = "110"
    ActiveWorkbook.Close False
End If
sPos = "115"
Exit Sub

PBErr:
    driver.stop

If chkTime <> "" Then
    LogInformation "##ERROR in start of placebet## just after sPos No:" & sPos & " in " & rSheet & ". Race time (theTime|chkTime|curTime):" & theTime & "|" & chkTime & "|" & curTime
Else
    LogInformation "##ERROR in 'theTime' at start of placebet## just after sPos No:" & sPos & " in " & rSheet & ". Race time (chkTime|curTime):" & chkTime & "|" & curTime
End If
Exit Sub

BetErr:
    driver.stop
    On Error Resume Next
    LogInformation "##ERROR in placebet## just after sPos No:" & sPos & "," & rTrack & rRace & "," & horseNo & "," & sRaceTime & "," & sToteOdds
    'driver.clickAndWait "id=btnLogout"
    sPos = "0"
    horseNo = "0"
    sRaceTime = "0"
    sToteOdds = "0"
    'LogInformation "1 Stopping Chromedriver"
    'StopMyProcess ("chromedriver.exe")
    LogInformation "2 Calling ReSchedule Start"
    
    Call ReScheduleStart

End Sub
Public Sub LogInformation(LogMessage As String)
Dim LogFileName As String
Dim FileNum As Integer
Dim ThisTimestamp As String

ThisTimestamp = Format(Date, "dd/mm/yyyy") & "," & Format(Time, "hh:mm") & ","
LogFileName = "C:\FILES\Horses\Logs\BetProcess_" & Format(Date, "yyyy-mm-dd") & ".csv"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, ThisTimestamp & LogMessage ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
Private Sub ChkBetWin(chk As String)
Dim LogFile As String
Dim aFileNum As Integer

LogFile = "C:\FILES\Horses\Logs\BetWinData.csv"
aFileNum = FreeFile ' next file number
Open LogFile For Append As #aFileNum 'creates the file
Print #aFileNum, chk ' write information at the end of the text file & vbCrLf
Close #aFileNum ' close the file

End Sub
Sub PowerNormal()
Dim PowerFile   As String
Dim Cmd         As String
'PowerFile = "C:\FILES\Horses\Power - Normal.lnk"
PowerFile = "C:\FILES\Horses\Power - New.lnk"
Cmd = "RunDLL32.EXE shell32.dll,ShellExec_RunDLL "
Shell (Cmd & PowerFile)
End Sub
Sub PowerRacing()
Dim PowerFile   As String
Dim Cmd         As String
PowerFile = "C:\FILES\Horses\power_racing.lnk"
Cmd = "RunDLL32.EXE shell32.dll,ShellExec_RunDLL "
Shell (Cmd & PowerFile)
End Sub
Private Sub LockPC()
LockWorkStation
End Sub

Private Sub GetWinnings()
'gets the win value from each horse bet on
Dim myselection     As Range
Dim myX             As Range
Dim rSheet          As String
Dim rDate           As String
Dim rYear           As String
Dim rMonth          As String
Dim rDay            As String
Dim rTrack          As String
Dim rRace           As String 'Current Race
Dim horseNo         As String
Dim fDate           As String
Dim fTrack          As String
Dim fRace           As String 'Current Race
Dim fhorseNo        As String

Dim sFileName   As String
Dim iFileNum    As Integer
Dim sBuf        As String
Dim sTemp       As String
Dim sData       As String
Dim iBetAm      As Long
Dim iWinnings   As Double
Dim iPlacings   As Double
Dim x           As String
Dim y           As String
Dim z           As String
Dim iPlace      As Long

On Error Resume Next
rSheet = ActiveWorkbook.name
rYear = Left(rSheet, 4) 'year
rMonth = Mid(rSheet, 6, 2) ' month
rDay = Mid(rSheet, 9, 2) ' day
rDate = rYear & "/" & rMonth & "/" & rDay
rTrack = Mid(rSheet, 12, 2)

'BetWhat 'gets the bet amount
iBetAm = BetAmount
Set myselection = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, -2)
    For Each myX In myselection 'Col A
        If myX <> "" Then
            rRace = myX
        End If
        horseNo = myX.Offset(0, 2) 'horseno is blank when myX is not null (Col A - has the race number)
        If ((myX.Interior.ColorIndex = 3 Or myX.Offset(0, 1).Interior.ColorIndex = 38) Or myX.Interior.ColorIndex = 38) _
            And myX.Offset(0, 1).Interior.ColorIndex = 38 _
            And myX.Offset(0, 48).Interior.ColorIndex = 38 _
            And myX.Offset(0, 18).Interior.ColorIndex <> 38 Then
            y = myX.Offset(0, 1).value
            'tidy up
            y = Replace(y, Chr(10), "")
            y = Replace(y, Chr(32), "")
            y = Replace(y, Chr(160), "")
            y = Trim(y)
            myX.Offset(0, 1).value = y
            ActiveWorkbook.Save
            If Len(y) > 0 Then
                iPlace = y
            Else
                iPlace = 0
            End If
            If iPlace > 0 Then
                sFileName = "C:\FILES\Horses\Logs\BetWinData.csv"
                iFileNum = FreeFile ' next file number
                Open sFileName For Input As #iFileNum
                Do Until EOF(iFileNum)
                    Line Input #iFileNum, sBuf
                    If Len(sBuf) > 10 Then
                        sTemp = sTemp & sBuf & vbCrLf
                    End If
                Loop
                Close #iFileNum
                sData = rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount
                'rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount
                If InStr(1, sTemp, sData) = 0 Then GoTo Skip:
                If InStr(1, sTemp, sData & "," & iPlace) = 0 Then
                    sTemp = Replace(sTemp, sData, sData & "," & iPlace)
                    sTemp = Left(sTemp, Len(sTemp) - 2) 'take off the last vbCrLf
                    iFileNum = FreeFile ' next file number
                    Open sFileName For Output As #iFileNum
                    Print #iFileNum, sTemp
                    Close #iFileNum
                End If
Skip:
                sTemp = ""
                sBuf = ""
                sData = ""
                y = ""
            End If
        End If
        If ((myX.Interior.ColorIndex = 3 Or myX.Offset(0, 1).Interior.ColorIndex = 38) Or myX.Interior.ColorIndex = 38) _
            And myX.Offset(0, 1).Interior.ColorIndex = 38 _
            And myX.Offset(0, 48).Interior.ColorIndex = 38 _
            And myX.Offset(0, 18).Interior.ColorIndex <> 38 _
            And iPlace > 0 Then
            x = myX.Offset(0, 18).value 'for a win
            z = myX.Offset(0, 19).value 'for a place
            If Len(x) > 0 Then
                iWinnings = x
            Else
                iWinnings = 0
            End If
            If Len(z) > 0 Then
                iPlacings = z
            Else
                iPlacings = 0
            End If
            If iWinnings > 0 Or iPlacings > 0 Then
                sFileName = "C:\FILES\Horses\Logs\BetWinData.csv"
                iFileNum = FreeFile ' next file number
                Open sFileName For Input As #iFileNum
                Do Until EOF(iFileNum)
                    Line Input #iFileNum, sBuf
                    If Len(sBuf) > 10 Then
                        sTemp = sTemp & sBuf & vbCrLf
                    End If
                Loop
                Close #iFileNum
                sData = rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount & "," & iPlace
                'rDate & "," & rTrack & rRace & "," & horseNo & "," & BetAmount
                If InStr(1, sTemp, sData) = 0 Then GoTo NotThere:
                sTemp = Replace(sTemp, sData, sData & "," & iWinnings * iBetAm & "," & iPlacings * iBetAm)
                sTemp = Left(sTemp, Len(sTemp) - 2) 'take off the last vbCrLf
                myX.Offset(0, 18).Interior.ColorIndex = 38
                ActiveWorkbook.Save
                iFileNum = FreeFile ' next file number
                Open sFileName For Output As #iFileNum
                Print #iFileNum, sTemp
                Close #iFileNum
NotThere:
                sTemp = ""
                iWinnings = 0
                iPlacings = 0
                x = ""
                z = ""
            End If
        End If
    Next myX
    ActiveWorkbook.Save
Exit Sub
GetWinErr:
    'LogInformation "##ERROR in GetWinnings## Sheet:" & rSheet & " x:" & x & " iWinnings:" & iWinnings & "," & rTrack & rRace & "," & HorseNo
    Resume Next
End Sub
Sub chkBetWinData()
Dim myselection     As Range
Dim myX             As Range
Dim rSheet          As String
Dim horseNo          As String
Dim sDate           As Date
Dim sYear           As String
Dim sMonth          As String
Dim sDay            As String
Dim rDate           As String
Dim rTrack          As String
Dim rRace           As String

Dim oHttp       As Object
Dim sURL        As String
Dim curRace     As String
Dim curWork     As String
Dim sScr        As String
Dim ScaNo       As Long

'GoTo here:
rSheet = ActiveWorkbook.name
If rSheet <> "BetWinData.csv" Then
    MsgBox ("BetWinData.csv is not the active sheet")
    End
End If
ScaNo = 0
Set myselection = Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row)
For Each myX In myselection
    If myX.Offset(0, 4) = "" Then 'didn't get a place
        sDate = myX
        sYear = Format(sDate, "yyyy")
        sMonth = Format(sDate, "mm")
        sDay = Format(sDate, "dd")
        rDate = sYear & "/" & sMonth & "/" & sDay
        rTrack = Left(myX.Offset(0, 1), 2)
        rTrack = Trim(rTrack)
        rRace = Mid(myX.Offset(0, 1), 3, Len(myX.Offset(0, 1)))
        horseNo = myX.Offset(0, 2)
        sURL = "https://tattsbet.ubet.com/racing/" & rDate & "/" & rTrack & "/" & rRace
        'https://tatts.com/racing/2016/12/26/QR/1
' get the web page
        Set oHttp = CreateObject("MSXML2.XMLHTTP")
        oHttp.Open "GET", sURL, False
        oHttp.send
        curRace = oHttp.responseText 'a contains source code of website
        curWork = curRace
        curWork = Replace(curWork, Chr(13), "") 'carriage return
        curWork = Replace(curWork, Chr(11), "") 'shift enter
        curWork = Replace(curWork, Chr(10), "") 'line feed
        curWork = Replace(curWork, Chr(160), "") 'space
        curWork = Replace(curWork, Chr(32), "") 'space
        curWork = Replace(curWork, " ", "") 'remove all spaces
        curWork = Trim(curWork)
        sScr = """Scratched-Runner""><tdwidth=""6""height=""27""></td><tdheight=""27""class=""race-scratched"">" & horseNo & "<" 'scratching string
        If InStr(1, curWork, sScr) > 0 Then
            myX.Offset(0, 6) = "SCRATCHED"
            ScaNo = ScaNo + 1
        End If
    End If
Next myX
MsgBox "Checked and found " & ScaNo & " scratched horses."
End Sub
Sub udBetWinHistory()
Dim myselection     As Range
Dim myX             As Range
Dim bSelect         As Range
Dim myY             As Range
Dim mySelect        As Range
Dim myZ             As Range
Dim myLine          As Range
Dim wbA             As Variant
Dim vaFileName      As String
Dim vaObj           As Variant
Dim rSheet          As String
Dim raceNo          As String
Dim RaceResult      As String
Dim sDate           As Date
Dim sYear           As String
Dim sMonth          As String
Dim eMonth          As String
Dim eDay            As String
Dim eDate           As String
Dim colCount        As Long
Dim rowCount        As Long
Dim iVal            As Integer
Dim found           As Boolean

Dim strPath         As String
Dim vaFile          As Variant
Dim tmpFileName     As String
Dim tmpX            As Range
Dim tmpRace         As String
Dim tmpWB           As Workbook
Dim myW             As Range
Dim iTTl            As Integer
Dim tmpPlace        As String

'GoTo here:
rSheet = ActiveWorkbook.name
If rSheet <> "BetWinData.csv" Then
    MsgBox ("BetWinData.csv is not the active sheet")
    End
End If
Set wbA = ActiveWorkbook
sDate = Range("A1")
sYear = Format(sDate, "yyyy")
sMonth = Format(sDate, "mm mmm")
eMonth = Format(sDate, "mm")
eDay = Format(sDate, "dd")
eDate = sYear & "-" & eMonth & "-" & eDay & " *.xls"

vaFileName = "C:\FILES\Horses\BetWinData_history.xls"
Workbooks.Open vaFileName
Set vaObj = ActiveWorkbook
Sheets("BetWinData").Select
colCount = ActiveSheet.UsedRange.Columns.count
rowCount = ActiveSheet.UsedRange.Rows.count
Cells(1, colCount + 1) = sDate
colCount = colCount + 1
Cells(1, colCount).ColumnWidth = 2.29
Range(Cells(1, colCount), Cells(65536, colCount)).Interior.ColorIndex = 15
wbA.Activate
Set myselection = Range("B1:B" & Range("B" & Rows.count).End(xlUp).Row)
    For Each myX In myselection 'Col B
        found = False
        raceNo = myX.value
        'If myX.Offset(0, 3).Value <> "" Then
            RaceResult = myX.Offset(0, 3).value
            vaObj.Activate
            Set bSelect = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
                For Each myY In bSelect
                    If myY = raceNo Then
                        found = True
                        Cells(myY.Row, colCount) = RaceResult
                        Cells(myY.Row, colCount).Interior.ColorIndex = xlNone
                        'myY.Offset(0, colCount) = RaceResult
                        GoTo FoundIt:
                    End If
                Next myY
            If found = False Then
                Cells(rowCount + 1, 1) = raceNo
                Cells(rowCount + 1, colCount) = RaceResult
                rowCount = rowCount + 1
            End If
        'End If
FoundIt:
    Next myX
wbA.Activate
ActiveWorkbook.Close False 'Close BetWinData.csv


strPath = "C:\FILES\Horses\Results\" & sYear & "\" & sMonth & "\Sheets\"
        'On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        '.FileName = ".xls"
        .fileName = eDate

        If .Execute > 0 Then

            For Each vaFile In .FoundFiles
' open the sheet
                Workbooks.Open vaFile
                Set tmpWB = ActiveWorkbook
                tmpFileName = ActiveWorkbook.name
                tmpFileName = Mid(tmpFileName, InStr(1, tmpFileName, ".") - 2, 2)
                'If InStr(1, "BR CR DR FR NR QR VR ZR", tmpFileName) > 0 Then
                    For Each tmpX In Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
                        If tmpX.value <> "" _
                        And (tmpX.Offset(1, 0).Interior.ColorIndex = 3 _
                            Or tmpX.Offset(1, 0).Interior.ColorIndex = 38) Then
                            tmpRace = tmpFileName & Trim(tmpX.value)
                            tmpPlace = Trim(tmpX.Offset(1, 1).value)
                            vaObj.Activate
                            For Each myZ In Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
                                If myZ.value = tmpRace Then
                                    Cells(myZ.Row, colCount).Interior.ColorIndex = xlNone
                                    Cells(myZ.Row, colCount).value = tmpPlace
                                    ActiveWorkbook.Save
                                    GoTo gotIt:
                                End If
                            Next myZ
                        End If
gotIt:
                    Next tmpX
                'End If
                tmpWB.Close
            Next vaFile
        End If
    End With

vaObj.Activate
here:
'colCount = Range("CB1").Column
colCount = ActiveSheet.UsedRange.Columns.count
Set mySelect = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
    For Each myZ In mySelect 'Col A
    iVal = 0
    iTTl = 0
    Set myLine = Range(Cells(myZ.Row, 3), (Cells(myZ.Row, colCount)))
    
        For Each myW In myLine
            If myW.value > 0 And myW.value < 4 Then
                iVal = iVal + 1
            End If
            If myW.Interior.ColorIndex = xlNone Then
                iTTl = iTTl + 1
            End If
        Next myW
        If iTTl > 0 Then
            myZ.Offset(0, 1).value = (iVal / iTTl) * 100
        Else
            myZ.Offset(0, 1).value = "0"
        End If
    Next myZ
ActiveWorkbook.Save
ActiveWorkbook.Close 'False
' open a new sheet
' Workbooks.Add
'26/5/16 added following 2 lines
Set wbA = Nothing
Set vaObj = Nothing

MsgBox ("BetWinData_history has been updated!!")
   
End Sub
Sub ReOpenSheets()
'opens all sheets for today and restarts auto betting
Dim strPath         As String
Dim vaFileName      As Variant
Dim sYear           As String
Dim sMonthLong      As String
Dim sMonthShort     As String
Dim sDay            As String
Dim myDate          As Date
'Dim fso             As Object

'Set fso = CreateObject("Scripting.FileSystemObject")

LogInformation "4 Re-opening race sheets"

sYear = Format(Date, "yyyy")
sMonthLong = Format(Date, "mm mmm")
sMonthShort = Format(Date, "mm")
sDay = Format(Date, "dd")
myDate = Format(Date, "dd-mm-yyyy")
strPath = "C:\FILES\Horses\Results\" & sYear & "\" & sMonthLong & "\Sheets\"

On Error Resume Next
'GoTo here:
'open each sheet
With Application.FileSearch
    .NewSearch
    .LookIn = strPath
    .SearchSubFolders = False
    .fileName = sYear & "-" & sMonthShort & "-" & sDay & "*.xls"

    If .Execute > 0 Then
        For Each vaFileName In .FoundFiles
            'Workbooks.Open(Filename:=vaFilename, ReadOnly:=False)
            Workbooks.Open vaFileName, , False
        Next vaFileName
    End If
End With
Workbooks.Open "C:\FILES\Horses\RDSummary.xls"
PowerRacing
Application.AutoRecover.Enabled = False
Application.DisplayAlerts = False
StopMyProcess ("thunderbird.exe")
StopMyProcess ("firefox.exe")
StopMyProcess ("iexplore.exe")
StopMyProcess ("chromedriver.exe")
here:
Workbooks("RDSummary.xls").Worksheets("Sheet1").Activate
'23-03-2018
If Range("C6").value <> myDate Then
    Call Horses.BuildRaceDaySummary
    LogInformation "4.5 rebuilding RDSummary.xls"
End If
LogInformation "5 Calling Start Processing"
Call StartProcessing 'run through the betting process again, it then calls ProcessRaceDaySummary
'Set fso = Nothing
'restart the betting process
'    Call StartProcess
End Sub

Private Sub ProcessRaceDaySummary()
'a new way to fire up placeBet
Dim myGroup     As Range
Dim myX         As Range
Dim lastRow     As Long
Dim sortGroup   As Range

'Dim sSheet      As String
Dim sTrack      As String
Dim myDate      As String
Dim sRaceNo     As String
Dim sURL        As String
Dim oHttp       As Object
Dim curWork     As String
Dim findTime    As String
Dim theTime     As String
Dim dTime       As Date
Dim myTime      As String

Dim rYear       As String
Dim rMonth      As String ' month
Dim rDay        As String ' day
Dim RDSOpen     As Boolean
Dim wb          As Workbook


Dim Leadin      As Long

'check if rdSummary is open
RDSOpen = False
For Each wb In Workbooks
    If wb.name = "RDSummary.xls" Then
        RDSOpen = True
        Exit For
    End If
Next wb
If RDSOpen = False Then
    Workbooks.Open "C:\FILES\Horses\RDSummary.xls"
    RDSOpen = True
End If

Workbooks("RDSummary.xls").Worksheets("Sheet1").Activate
Leadin = Range("H1").value
lastRow = Range("A65536").End(xlUp).Row
'Range("G6:I" & lastrow).ClearContents

'Set wbA = ActiveWorkbook
    'Set myGroup = Range("A6:A" & lastRow) 'Race No
    Set myGroup = Range("A7:A" & lastRow) 'Race No
'check the race time for each race not run
    For Each myX In myGroup 'Col A
        If myX.Offset(0, 5) = "" Then
            sTrack = myX.value
            sRaceNo = myX.Offset(0, 1).value
            'myTime = myX.Offset(0, 3).text
            myTime = Format(myX.Offset(0, 3), "hh:mm")
            myDate = Format(myX.Offset(0, 2), "yyyy") & "/" & Format(myX.Offset(0, 2), "MM") & "/" & Format(myX.Offset(0, 2), "dd")
            rYear = Format(myX.Offset(0, 2), "yyyy") 'year
            rMonth = Format(myX.Offset(0, 2), "MM") ' month
            rDay = Format(myX.Offset(0, 2), "dd") ' day

'####
'' https://tatts.com/racing/2015/6/20/BR/1
            sURL = "https://tattsbet.ubet.com/racing/" & myDate & "/" & sTrack & "/" & sRaceNo
' get the web page
            'Set oHttp = CreateObject("MSXML2.XMLHTTP")
            Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
            oHttp.Open "GET", sURL, False
            oHttp.send
            curWork = oHttp.responseText 'a contains source code of website
            Set oHttp = Nothing
            curWork = Replace(curWork, Chr(13), "")
            curWork = Replace(curWork, Chr(11), "")
            If InStr(1, curWork, ">" & rYear & "-" & rMonth & "-" & rDay & "T") > 0 Then
                findTime = Mid(curWork, InStr(1, curWork, ">" & rYear & "-" & rMonth & "-" & rDay & "T"), Len(curWork))
                theTime = Mid(findTime, InStr(1, findTime, "T") + 1, 5)
                dTime = theTime
                'If myTime <> dTime Then
                If myTime <> theTime Then
                    LogInformation "Race time for " & sTrack & sRaceNo & " updated from " & myTime & " to " & dTime & ","
                    myX.Offset(0, 3) = theTime 'put new race time put in col D
                    myX.Offset(0, 4) = myX.Offset(0, 2) & " " & theTime
                End If
            End If
        End If
        sURL = ""
        curWork = ""
    Next myX
'####
're-sort the sheet
Set sortGroup = Range(Cells(7, 1), Cells(lastRow, 9))
    sortGroup.Sort key1:=Range("D2"), Order1:=xlAscending, _
    Header:=xlNo, OrderCustom:=1, MatchCase:=False, _
    Orientation:=xlTopToBottom
'Range("C4").Select
ActiveWorkbook.Save
Set myGroup = Range("A6:A" & lastRow)
    For Each myX In myGroup 'Col A
        If myX.Offset(0, 4) > Now And myX.Offset(0, 5) = "" Then
        'If myX.Offset(0, 4) > Now And InStr(1, myX.Offset(0, 5), "ENDED") = 0 Then
            sTrack = myX.value
            myDate = Format(myX.Offset(0, 2), "yyyy") & "-" & Format(myX.Offset(0, 2), "MM") & "-" & Format(myX.Offset(0, 2), "dd")
            sSheet = myDate & " " & sTrack & ".xls"
            myX.Offset(0, 5) = "SCHEDULED"
            myRunTime = myX.Offset(0, 4) - TimeSerial(0, 0, Leadin)
            rtTimeTmp = myRunTime
            LogInformation "Autobet scheduled from sheet " & sSheet & " to run at:" & rtTimeTmp & ","
            Exit For
        Else
            If InStr(1, myX.Offset(0, 5).value, "ENDED") = 0 Then
                myX.Offset(0, 5).value = myX.Offset(0, 5).value & " - ENDED"
            End If
        End If
        If myX.Row = lastRow Then
            myRunTime = Now + TimeSerial(0, 0, 180) '3 minutes
            rtTimeTmp = myRunTime
            Exit For
        End If
    Next myX
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
ActiveWorkbook.Save
BetStartTimer
End Sub
Sub Costings()
Dim FSO As Object
Set FSO = CreateObject("Scripting.FileSystemObject")

Dim Fileout As Object
Set Fileout = FSO.CreateTextFile("C:\FILES\Horses\Logs\Costings.txt", True, True)
'Fileout.Write "Probable (Red) cost $" & Probable * BetAmount & " ($" & Probable & "x" & BetAmount & ")" & vbCrLf _
    & "Possible (Pink) cost $" & Possible * BetAmount & " ($" & Possible & "x" & BetAmount & ")"
Fileout.Close

End Sub
Private Sub UpdateRDSummary()
Dim wbA         As Workbook 'Current worksheet
Dim myGroup     As Range
Dim myX         As Range
Dim myRange     As Range
Dim myY         As Range
Dim sSheet      As String
Dim sTrack      As String
Dim myRaceNo    As String
Dim myRace      As String
Dim myhorse     As String
Dim myPlace     As String
Dim myPay       As String
Dim myBet       As Boolean
Dim x           As String
Dim lastRow     As Long
Dim Ind         As Integer
Dim myRowEnd As Long
Dim mySum As Range
Dim myA As Range

Set wbA = ActiveWorkbook
If wbA.name = "RDSummary.xls" Or wbA.name = "PERSONAL.XLS" Then GoTo allDone:
sSheet = wbA.name
sTrack = Mid(sSheet, 12, 2)

        
Set myGroup = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row) 'Race No
    For Each myX In myGroup
        wbA.Activate
        If myX.value <> "" Then
            myRaceNo = myX.value
            myRace = sTrack & myRaceNo
            myBet = False
            Range("C" & myX.Row + 1).End(xlDown).Select 'select whole race
            myRowEnd = Selection.Row
            Set mySum = Range("C" & myX.Row + 1 & ":C" & myRowEnd) 'The range to work on C
            For Each myA In mySum
                'wbA.Activate
                If Range("A" & myA.Row).Interior.ColorIndex = 3 _
                    Or Range("A" & myA.Row).Interior.ColorIndex = 38 _
                    Or Range("B" & myA.Row).Interior.ColorIndex = 38 Then 'red or pink top entry or bet already placed
                    Ind = Range("A" & myA.Row).Interior.ColorIndex
                    If Ind = 38 Then 'pink to grey
                        Ind = 15 'grey
                    ElseIf Ind = 3 Then 'red to pink
                        Ind = 38 'pink
                    End If
                    myhorse = myA
                    myPlace = Range("B" & myA.Row)
                    myPay = "W: " & Range("S" & myA.Row) & " P: " & Range("T" & myA.Row)
                    If Range("B" & myA.Row).Interior.ColorIndex = 38 Then
                        myBet = True
                    End If
                    'If myHorse <> "" Then
                    Workbooks("RDSummary.xls").Worksheets("Sheet1").Activate
                    Set myRange = Range("A7:A" & Range("A" & Rows.count).End(xlUp).Row) 'start at row 7
                    For Each myY In myRange 'Col A
                        'x = myY.value & myY.Offset(0, 1).value 'race code and number
                        x = Range("A" & myY.Row).value & Range("B" & myY.Row).value 'race code and number
                        If x = myRace Then
                            'myY.Offset(0, 6) = myHorse
                            Range("G" & myY.Row) = myhorse
                            'myY.Offset(0, 6).Interior.ColorIndex = xlNone
                            Range("G" & myY.Row).Interior.ColorIndex = xlNone
                            If myBet = True Then
                                'myY.Offset(0, 7) = myPlace
                                'myY.Offset(0, 8) = myPay
                                Range("H" & myY.Row) = myPlace
                                Range("I" & myY.Row) = myPay
                            End If
                            If Ind <> 0 Then
                                'myY.Offset(0, 6).Interior.ColorIndex = Ind
                                Range("G" & myY.Row).Interior.ColorIndex = Ind
                            End If
                            myhorse = ""
                            myPlace = ""
                            myPay = ""
                            x = ""
                            Exit For
                        End If
                    Next myY
                Else
                    Ind = 0
                    myhorse = ""
                    myPlace = ""
                    myPay = ""
                    'myBet = True 'forces a cleanout if late scratching exists
                End If
            Next myA
        End If
    Next myX
    wbA.Activate
    Range("D2").Select
allDone:
End Sub
Attribute VB_Name = "HorsesGetPastResults"
Option Explicit
Dim myTrack As String ' obtained in sub getRaceMeetingResult
Dim trackCode As String 'the trackcode as obtained from TrackTimeAdj.txt
Dim theDate As Date '   obtained in sub getRaceMeetingResult
Dim txDate As String
Dim currURL As String 'string of the current meeting for this date
Dim currURL2 As String 'string of the current race for the above meeting
Dim cntMeetings As Long ' a count of the meetings for this date
Dim cntRaces As Long 'a count of the races at this meeting
Dim theDist As String 'the race distance - in sub PrepNewCols
Dim theCond As String 'the race condition - in sub PrepNewCols
Dim theRaceNo As String 'the race number - in TidyRaceSheet
Dim abandoned As Boolean
Dim Testing As Boolean

Sub getRaceMeetingResult()
' finds each meeting
    Dim urlName2 As String
    Dim oHttp2 As Object
    Dim mySite2 As String
    Dim myA As String
    Dim myB As String
    Dim myC As String 'temp holding of the date
    Dim myYear As String 'year from the URL
    Dim myMonth As String 'month from the URL
    Dim myDay As String 'day from the URL
    Dim b As Long 'the day from the URL
    Dim a As Long 'position of start of track name
    Dim x As Long
    Dim y As Long 'lower date
    Dim w As Long 'upper date
    Dim z As String 'date
    Dim m As String
    Dim K As String
    Dim d As String 'whole date
    Dim qPrevFile As Integer
    
    Dim s(1 To 8) As String
    Dim n As Long
    
    Dim Delimiter As String
Dim TextFile As Integer
Dim FilePath As String
Dim FileContent As String
Dim LineArray() As String
'Dim DataArray() As String
'Dim TempArray() As String
Dim tempTrack As String

Dim pureTrack As String 'remove word trial
Dim f As Integer

'if no current blank worksheet
'Dim wSheet As Worksheet
'Set wSheet = ActiveSheet
'If wSheet Is Nothing Then
'    Workbooks.Add
'End If
' make sure the starting sheet is open
If ActiveWorkbook.name <> "01 Todays Meetings.xls" Then
    MsgBox ("The worksheet '01 Todays Meetings.xls' is not the current sheet")
    Exit Sub
End If
m = Cells(2, 8) 'year
K = Cells(2, 9) '3 character month Nov
' between the following dates
y = Cells(2, 10) 'lower date as a number
w = Cells(2, 11) 'upper date

'add a new sheet to start downloading
Workbooks.Add

'make sure a previous file doesn't already exist
If Dir("C:\FILES\Horses\Risa\CurrentUpload.txt") <> "" Then
    qPrevFile = MsgBox("A file already exists, add to it?", vbYesNoCancel, "CurrentUpload")
    If qPrevFile = vbNo Then
        Kill "C:\FILES\Horses\Risa\CurrentUpload.txt"
    ElseIf qPrevFile = vbCancel Then
        End
    End If
End If
    
'load the txt file with track to track code info
'Inputs
  Delimiter = "|"
  FilePath = "C:\FILES\Horses\TrackTimeAdj.txt"
  
'Open the text file in a Read State
  TextFile = FreeFile
  Open FilePath For Input As TextFile
  
'Store file content inside a variable
  FileContent = Input(LOF(TextFile), TextFile)

'Close Text File
  Close TextFile
    
    s(1) = "NSW"
    s(2) = "QLD"
    s(3) = "VIC"
    s(4) = "SA"
    s(5) = "ACT"
    s(6) = "WA"
    s(7) = "TAS"
    s(8) = "NT"
    
'On Error Resume Next
'
' Set the dates required
'm = "2016" 'year
'K = "Sep" '3 character month Nov

' between the following dates

'y = 12 'lower date as a number
'w = 12 'upper date

For n = LBound(s) To UBound(s)

'TESTING######################
' http://www.risa.com.au/FreeFields/Calendar_Results.aspx?State=NSW
'OLD BIG POND SITE: urlName2 = "http://www.racingnetwork.com.au/results/tabid/103/date/2012-03-10/default.aspx"
'
'
'##########################
    urlName2 = "https://www.racingaustralia.horse/FreeFields/Calendar_Results.aspx?State=" & s(n)
    '           https://www.racingaustralia.horse/FreeFields/Calendar_Results.aspx?State=NSW
    '18/4/15 changed to www.racingaustralia.horse
   ' urlName2 = "http://www.risa.com.au/FreeFields/Calendar_Results.aspx?State=" & s(n)
' get the date from the URL
'have't done this yet
' Get the URL for each meeting
'-----
    Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    oHttp2.Open "GET", urlName2, False
    oHttp2.send
    Application.Wait (Now + TimeValue("00:00:01"))
    Do While oHttp2.READYSTATE <> 4
        DoEvents
    Loop
    Do While oHttp2.Status <> 200
        DoEvents
    Loop

'----
    'Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
    ' Set oHttp2 = CreateObject("Microsoft.XMLHTTP")
    'oHttp2.Open "GET", urlName2, False
    'oHttp2.send
    mySite2 = oHttp2.responseText 'a contains source code of website
   ' myA = Mid
   '<td><a href='/FreeFields/Results.aspx[^>]*
    myA = RegExpFind2(mySite2, "<td><a href='/FreeFields/Results.aspx[^>]*", 1, False) ' URL up to ,
    For x = 1 To cntMeetings
        DoEvents 'stops the 'not responding' message
        myA = RegExpFind2(mySite2, "<td><a href='/FreeFields/Results.aspx[^>]*", x, False) ' URL up to ,
        myA = Application.WorksheetFunction.Clean(myA)
        myA = Application.WorksheetFunction.Trim(myA)
'        If InStr(1, myA, "abandoned") = 0 Then
' get the track name
        a = InStr(myA, s(n)) + (Len(s(n)) + 1)
        myB = Mid(myA, a, Len(myA) - 1)
        myB = Replace(myB, ",", " ")
        myB = Replace(myB, "'", "")
        myTrack = myB
        pureTrack = Replace(myTrack, "Trial", "")
        pureTrack = Trim(pureTrack)
        'get the track code here
        
        'Separate Out lines of data
        LineArray() = Split(FileContent, vbCrLf)

'Read Data into an Array Variable
        For f = LBound(LineArray) To UBound(LineArray)
            If Len(Trim(LineArray(f))) <> 0 Then
      'Split up line of text by delimiter
                tempTrack = Split(LineArray(f), Delimiter)(1)
                If LCase(tempTrack) = LCase(pureTrack) Then
                    trackCode = Split(LineArray(f), Delimiter)(0)
                    GoTo found:
                End If
            End If
        Next f
found:

        
'MsgBox ("MyTrack is " & myTrack)
' get the date
        myC = Mid(myA, 43, 9)
        myYear = Left(myC, 4)
        myMonth = Mid(myC, 5, 3)
        myDay = Right(myC, 2)
        theDate = myDay & "-" & myMonth & "-" & myYear
        txDate = Format(theDate, "dd/mm/yyyy")
        If Left(myDay, 1) = "0" Then
            myDay = Replace(myDay, "0", "")
        End If
        b = myDay
'MsgBox ("MyYear is " & myYear & "; MyMonth is " & myMonth & "; MyDay is " & b)
        If myB <> "" And myYear = m And myMonth = K And b >= y And b <= w Then
            myA = Replace(myA, "<td><a href='", "", 1)
            myA = Left(myA, Len(myA) - 1)
            myA = Application.WorksheetFunction.Clean(myA)
            myA = Application.WorksheetFunction.Trim(myA)
            ' http://www.risa.com.au/FreeFields/Results.aspx?Key=2012Mar24,NSW,Ardlethan,Picnic
            '18/4/15 changed to www.racingaustralia.horse
            currURL = "http://www.racingaustralia.horse" & myA
           ' MsgBox (currURL)
            Call GetHorseResults
        End If
    Next x
 Next n
'close the last blank sheet
ActiveWorkbook.Close SaveChanges:=False
 ' Turn the screen updating back on
    'Application.ScreenUpdating = True
    'Application.Calculation = xlCalculationAutomatic
MsgBox ("Da Da   done")
End Sub
Private Sub GetHorseResults()

On Error Resume Next
    Call getRaceDetail
    If abandoned = False Then
        Call TidySheet
        Call PrepNewCols
        Call EntTrackDetail
        Call ReTidySheet
        Call SaveResultData
    End If
    
End Sub
Private Sub getRaceDetail()
    Dim objWeb As QueryTable
    Dim urlName As String
    Dim oHttp As Object
    Dim l As String
    
    urlName = currURL
'   OLD SITE: urlName = "http://www.racingnetwork.com.au/carlton-draught-racing-sweep-handicap/tabid/87/date/2011-09-24/race/1/trackid/16/default.aspx"
'   urlName = "http://www.risa.com.au/FreeFields/Results.aspx?Key=2012Aug08,NSW,Newcastle"
'    urlName = "http://www.racingaustralia.horse/FreeFields/Results.aspx?Key=2016Feb02,NSW,Taree"
'-----
    Set oHttp = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    oHttp.Open "GET", urlName, False
    oHttp.send
    Application.Wait (Now + TimeValue("00:00:01"))
    Do While oHttp.READYSTATE <> 4
        DoEvents
    Loop
    Do While oHttp.Status <> 200
        DoEvents
    Loop
'----

    'Set oHttp = CreateObject("MSXML2.XMLHTTP")
'    Set oHttp = CreateObject("Microsoft.XMLHTTP")
    'oHttp.Open "GET", urlName, False
    'oHttp.send
    l = oHttp.responseText 'a contains source code of website
    l = RegExpFind(l, "Meeting Abandoned[^<]*", 1, False)
    If l = "" Then

        abandoned = False
    
        urlName = "URL;" & urlName
        Set objWeb = ActiveSheet.QueryTables.Add(Connection:=urlName, Destination:=Range("A1"))
    
        With objWeb
            .WebSelectionType = xlAllTables
            .Refresh BackgroundQuery:=False
            .SaveData = True
        End With
        Set objWeb = Nothing
    Else
        abandoned = True
    End If
'    MsgBox ("getRaceDetail")
End Sub
Function RegExpFind(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function
Function RegExpFind2(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind2 = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind2 = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
        cntMeetings = TheMatches.count ' count how many matches
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind2 = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind2 = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind2 = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind2 = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function

Private Sub TidySheet()
    Dim r As Long
    Dim n As Long
    Dim rng As Range

Testing = False
Cells.Hyperlinks.Delete
Cells.MergeCells = False
'Select Column A Get rid of all useless rows
    Range("B1:B" & Range("B" & Rows.count).End(xlUp).Row).Offset(0, -1).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
        'Debug.Print rng.Rows(r).value
        'Stop
            If rng.Rows(r).value = "" And rng.Rows(r).Offset(0, 1) = "" Then
                rng.Rows(r).EntireRow.Delete
'            ElseIf InStr(1, rng.Rows(r).Value, "$") > 0 And InStr(1, rng.Rows(r).Value, "Race") = 0 Then
'                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).value, "Apprentices") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).value, "Color") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).value, "Offical Comments") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).value, "Show Video") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).value, "Show Race") > 0 Then
                rng.Rows(r).EntireRow.Delete
'following to fix VIC result data '
            ElseIf InStr(1, rng.Rows(r).value, "Item") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).value, "before acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Day of nominations close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Day of acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "after nominations close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Day before acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "after acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "before acceptances close") > 0 Then
                rng.Rows(r).EntireRow.Delete
            ElseIf InStr(1, rng.Rows(r).Offset(0, 1).value, "Race Day") > 0 Then
                rng.Rows(r).EntireRow.Delete
'VIC done

            ElseIf rng.Rows(r).value = "" And rng.Rows(r).Offset(0, 1) <> "" Then
                rng.Rows(r).Delete Shift:=xlToLeft
            
            End If
        Next r
 'MsgBox ("tidySheet") Race Day
End Sub
Private Sub PrepNewCols()
'preps the sheet with the new cols
Dim myselection As Range
Dim myX         As Range
Dim rng         As Range
Dim r           As Long
Dim lastCol     As Long

'insert a header row
    Rows("1:1").Insert
'Insert new columns
    Columns("A:O").Insert Shift:=xlToRight
    Range("A:C, E:K, M:M").NumberFormat = "@"
   ' Range("C:C").NumberFormat = "dd/mm/yyyy"
    Range("D:D").NumberFormat = "0"
    Range("L:L").NumberFormat = "0.0"
    'Range("M:M").NumberFormat = "m:ss.00" 'change this to double
   ' Range("M:M").NumberFormat = "0.00"
    Range("N:O").NumberFormat = "0.0000000000"
    Range("N:O").ColumnWidth = 18
    Range("A1").value = "Track"
    Range("B1").value = "RaceNo"
    Range("C1").value = "Date"
    Range("C:C").ColumnWidth = 10
    Range("D1").value = "Distance"
    Range("E1").value = "Condition"
    Range("F1").value = "Position"
    Range("G1").value = "HorseNo"
    Range("H1").value = "Name"
    Range("I1").value = "Value"
    Range("J1").value = "Jockey"
    Range("K1").value = "Trainer"
    Range("L1").value = "Weight"
    Range("M1").value = "Time"
    Range("N1").value = "MPS"
    Range("O1").value = "MPS600"
 'MsgBox ("PrepNewCols")
End Sub
' 17/8/14 updated last600 to handle "timing method"
'04/02/2016 updated to handle added characters after distance.
'9/4/16 fixed mySec as getting too many characters
'3/12/19 added myTimingMethod to be used when adding data to the average race times
Private Sub EntTrackDetail()
    Dim myselection     As Range
    Dim myX             As Range
    Dim theTime         As String
    Dim the600Time      As String
    Dim myTime          As Double 'Race time in seconds
    Dim my600Time       As Double 'Last 600m time in seconds
    Dim s600Dist        As String 'the last metres when not 600
    Dim l600Dist        As Long 'last metres as a number
    'Dim myDate          As String
    Dim myLength        As String
    Dim myValue         As String
    Dim myTemp          As String
    Dim f As Long
    Dim g As Long
    Dim h As Long
    Dim i As Long
    Dim j As Long
    Dim K As Long
    Dim l As Long
    Dim a As Long
    Dim b As Long
    Dim c As Double
    Dim Kgs             As Double
    Dim myMin           As Long
    Dim mySec           As Long
    Dim myTenths        As Double
    Dim my600Sec        As Long
    Dim my600Tenths     As Double
    Dim Distance        As Double
    Dim myDistance      As Double 'TheDist - lengths behind
    Dim my600Distance   As Double
    Dim mps             As Double
    Dim mps600          As Double
    Dim headRow         As Boolean
    Dim stJockey        As String
    Dim sthorse         As String
    Dim stWeight        As String
    Dim stNo            As String 'Horse number

    Dim nFileNum As Long
    Dim myEntry As String
    Dim fileSaveName As String
    Dim myTimingMethod As String
    
    Dim myHistory As String
    Dim Cond As String
    Dim myDateDec  As Long 'date in long format

'Testing = True
'myTrack = "Tester"
'theDate = "02/02/2016"

'enter data for the new Cols, using P to get and set values
    Set myselection = Range("P2:P" & Range("P" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'Col O
            headRow = False
            If Left(myX, 18) = "Official Comments:" Then
                headRow = True
            End If
            'VIC & SA
            If Left(myX, 17) = "This race carries" Then
                headRow = True
            End If
            'NSW
            If Left(myX, 10) = "BOBS Bonus" Then
                headRow = True
            End If
            'QLD
            If Left(myX, 4) = "QTIS" Then
                headRow = True
            End If
            'VIC
           ' If InStr(1, myX, "SUPER VOBIS") > 0 Then
           '     headRow = True
           ' End If
            ' WA
            If Left(myX, 15) = "WestSpeed Bonus" Then
                headRow = True
            End If
            'NT TROBIS winner
            If Left(myX, 5) = "Bonus" Then
                headRow = True
            End If
            If Left(myX, 4) = "Race" Then
                f = InStr(1, myX, " -") - 1
                theRaceNo = Left(myX, f)
                theRaceNo = Replace(theRaceNo, "Race ", "")
                theRaceNo = Trim(theRaceNo) 'race no
                g = InStrRev(myX, "(") + 1
                theDist = Mid(myX, g, Len(myX))
                theDist = Left(theDist, InStr(1, theDist, Chr(41)) - 1)
                theDist = Replace(theDist, "METRES", "")
                theDist = Trim(theDist)
                f = 0
                g = 0
                headRow = True 'this is header detail
            End If
            If Left(myX, 4) = "Of $" Then
                f = InStr(1, myX, "1st") - 1
                myValue = Left(myX, f)
                myValue = Replace(myValue, "Of $", "")
                myValue = Replace(myValue, ".", "")
                myValue = Trim(myValue) 'race value
                c = myValue
                c = c / 1000
                myValue = c
                f = 0
                c = 0
                headRow = True 'this is header detail
            End If
            'If Left(myX, 15) = "Track Condition" Then
            If InStr(1, myX, "Track Condition") > 0 Then
                myTemp = Mid(myX, InStr(1, myX, "Track Condition"), Len(myX))
                f = InStr(1, myTemp, "Time") - 1
                theCond = Left(myTemp, f)
                theCond = Replace(theCond, "Track Condition: ", "")
                theCond = Trim(theCond)                                             'race condition
                g = InStr(1, myTemp, "Time:")
                theTime = Mid(myTemp, g, Len(myTemp))
                theTime = Replace(theTime, "Time: ", "")
                If InStr(1, theTime, " ") > 0 Then
                    h = InStr(1, theTime, " ")
                    theTime = Left(theTime, h)
                End If
                theTime = Trim(theTime)
                a = InStr(1, theTime, ":")
                b = InStr(1, theTime, ".")
                myMin = Left(theTime, a - 1) * 60
                'mySec = Mid(theTime, a + 1, b - 1) 'WRONG
                mySec = Mid(theTime, a + 1, (b - a) - 1)
                myTenths = "0." & Mid(theTime, b + 1, Len(theTime))
                myTime = myMin + mySec + myTenths
                If InStr(1, myTemp, "Timing Method") > 0 Then
                    myTimingMethod = Mid(myTemp, InStr(1, myTemp, "Timing Method:") + 14, Len(myTemp))
                    myTimingMethod = Trim(myTimingMethod)
                Else
                    myTimingMethod = "False" 'Electronic, Manual or False
                End If
                'Debug.Print myTimingMethod
                'Stop
' get the last 600m time
                If InStr(1, myTemp, "Last ") > 0 Then 'found a last something
                    If InStr(1, myTemp, "600m:") > 0 Then 'it is 600 metres
                        j = InStr(1, myTemp, "600m:")
                        the600Time = Mid(myTemp, j, Len(myTemp))
                        the600Time = Replace(the600Time, "600m:", "")
                        the600Time = Replace(the600Time, "0:", "")
                        the600Time = Trim(the600Time)
                        If InStr(1, the600Time, " ") > 0 Then
                            the600Time = Left(the600Time, InStr(1, the600Time, " ") - 1)
                        End If
                        K = InStr(1, the600Time, ".")
                        my600Sec = Left(the600Time, K - 1)
                        my600Tenths = "0." & Mid(the600Time, K + 1, Len(the600Time))
                        my600Time = my600Sec + my600Tenths
                    Else
                        l = InStr(1, myTemp, "Last ") + 4
                        s600Dist = Mid(myTemp, l, 4)
                        s600Dist = Replace(s600Dist, "m", "")
                        s600Dist = Trim(s600Dist)
                        l600Dist = s600Dist
                        If l600Dist > 600 And l600Dist <= 800 Then
                            j = InStr(1, myTemp, s600Dist & "m:")
                            the600Time = Mid(myTemp, j, Len(myTemp))
                            the600Time = Replace(the600Time, s600Dist & "m:", "")
                            the600Time = Replace(the600Time, "0:", "")
                            the600Time = Trim(the600Time)
                            If InStr(1, the600Time, " ") > 0 Then
                                the600Time = Left(the600Time, InStr(1, the600Time, " ") - 1)
                            End If
                            K = InStr(1, the600Time, ".")
                            my600Sec = Left(the600Time, K - 1)
                            my600Tenths = "0." & Mid(the600Time, K + 1, Len(the600Time))
                            my600Time = my600Sec + my600Tenths
                            my600Time = (my600Time / l600Dist) * 600
                        Else
                            my600Time = 0
                        End If
                    End If
                Else
                    my600Time = 0
                End If
                f = 0
                g = 0
                h = 0
                a = 0
                b = 0
                j = 0
                K = 0
                l = 0
                myTemp = ""
                headRow = True 'this is header detail
' write the track/value file
                'If myTimingMethod = "Electronic" Then
                    fileSaveName = "C:\FILES\Horses\TracksNewForDB.csv"
                    If myValue >= 50 Then
                        If myTrack & "," & myValue <> myEntry Then
                            myEntry = myTrack & "," & myValue
                            nFileNum = FreeFile
                            If Dir(fileSaveName) <> "" Then
                                Open fileSaveName For Append As #nFileNum
                            Else
                                Open fileSaveName For Output As #nFileNum
                            End If
        ' check value >= 30 and it is not a duplicate
                            Print #nFileNum, myEntry
                        End If
                        Close #nFileNum
                    End If
                'End If
            End If
            If headRow = False Then
' check to see if times are outside record times which indicate false times
                If theDist >= 2000 And myTime <= 119 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1900 And myTime <= 114 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1800 And myTime <= 107 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1700 And myTime <= 101 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1600 And myTime <= 93 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1500 And myTime <= 87 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1400 And myTime <= 80 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1300 And myTime <= 75 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1200 And myTime <= 67 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1100 And myTime <= 62 Then
                    GoTo NoFinish:
                ElseIf theDist >= 1000 And myTime <= 55 Then
                    GoTo NoFinish:
                End If

                If InStr(1, LCase(theCond), "heavy") > 0 Then GoTo NoFinish:
                If InStr(1, LCase(theCond), "slow") > 0 Then GoTo NoFinish:
                
                If myX.Offset(0, 1).value = "" Then GoTo NoFinish:
                myX.Offset(0, -15) = myTrack                                    'A
                myX.Offset(0, -14) = theRaceNo                                  'B
                myX.Offset(0, -13) = txDate                                     'C
                myX.Offset(0, -12) = theDist                                    'D Distance
                myX.Offset(0, -11) = theCond                                    'E
'check there is a finishing position
                If Not IsNumeric(myX) Then GoTo NoFinish:
                myX.Offset(0, -10) = myX                                        'F finishing position
                stNo = myX.Offset(0, 1)
                stNo = Replace(stNo, "e", "")
                myX.Offset(0, -9) = stNo                                        'G Horse No
                'Stop
                sthorse = myX.Offset(0, 2)
                sthorse = Replace(sthorse, "'", "")
                sthorse = Replace(sthorse, Chr(146), "") 'looks like a (')
                If InStr(1, sthorse, "(") > 0 Then
                    sthorse = Left(sthorse, InStr(1, sthorse, "(") - 1)
                End If
                sthorse = Replace(sthorse, vbCrLf, "")
                sthorse = Replace(sthorse, Chr(10), "")
                sthorse = Replace(sthorse, Chr(13), "")
                
                sthorse = UCase(sthorse)
                'If InStr(1, sthorse, "BOBS BONUS") > 0 Then Stop
                sthorse = cleanHorse(sthorse)
                'If InStr(1, sthorse, "BOBS BONUS") > 0 Then Stop
                'If Len(sthorse) = 0 Then Stop
                'stHorse = Replace(stHorse, "SUPER VOBIS BONUS SCHEME", "")
                'stHorse = Replace(stHorse, "BOBS BONUS SCHEME", "")
                'stHorse = Replace(stHorse, "BOBS EXTRA BONUS SCHEME", "")
                'stHorse = Replace(stHorse, "QTIS BONUS SCHEME", "")
                'stHorse = Replace(stHorse, "SABOIS BONUS SCHEME", "")
                'if i
                '              BLUE GRANITE SABIS BONUS SCHEME BREEDER PAID ONLY
                'stHorse = Replace(stHorse, "VOBIS GOLD BONUS SCHEME", "")
                'stHorse = Replace(stHorse, "TROBIS BONUS SCHEME", "")
                'stHorse = Trim(stHorse)
                myX.Offset(0, -8) = sthorse                                     'H Horse name
                myX.Offset(0, -7) = myValue                                     'I Race Value
                stJockey = myX.Offset(0, 4)
                stJockey = Replace(stJockey, "Mr", "")
                stJockey = Replace(stJockey, "Ms", "")
                stJockey = Replace(stJockey, "'", "")
                stJockey = Replace(stJockey, Chr(146), "") 'looks like a (')
                stJockey = Trim(stJockey)
                If InStr(1, stJockey, "(") > 0 Then
                    stJockey = Left(stJockey, InStr(1, stJockey, "(") - 1)
                End If
                stJockey = Trim(stJockey)
                myX.Offset(0, -6) = stJockey                                    'J Jockey
                myX.Offset(0, -5) = Replace(myX.Offset(0, 3), "'", "")          'K Trainer
                stWeight = myX.Offset(0, 7)
                If InStr(1, stWeight, " ") > 0 Then
                   i = InStr(1, stWeight, " ") - 1
                   stWeight = Left(stWeight, i)
                End If
                stWeight = Replace(stWeight, "kg", "")
                stWeight = Trim(stWeight)
                myX.Offset(0, -4) = stWeight                                    'L Weight
                If myX.Offset(0, 5) = "" And myX = "1" Then
                    myX.Offset(0, -3) = theTime '
                    myDistance = theDist
                    my600Distance = 600
                ElseIf myX.Offset(0, 5) = "" Then GoTo NoFinish:
                Else
                    myLength = Trim(myX.Offset(0, 5)) 'M time or margin behing
                    myX.Offset(0, -3) = myLength 'M time or margin behing
                    myDistance = theDist - Replace(myLength, "L", "") * 2.4
                    my600Distance = 600 - Replace(myLength, "L", "") * 2.4
                End If
' Build the kgs and distance for MPS
                If stWeight <> "" Then
                    Kgs = stWeight - 50
                Else
                    Kgs = 5
                End If
                If theDist < 1201 Then
                    Distance = myDistance + ((Kgs / 2) * 1.2) '2.0kgs = half length
                ElseIf theDist < 1401 Then
                    Distance = myDistance + ((Kgs / 1.5) * 1.2) '1.5kgs = half length
                ElseIf theDist < 1601 Then
                    Distance = myDistance + (Kgs * 1.2) '1kg = half length
                Else
                    Distance = myDistance + ((Kgs / 1.5) * 2.4) '1.5hgs = one length
                End If
                mps = Distance / myTime  'calc metres per second
                myX.Offset(0, -2) = mps                         'N metres per second rating
'Build the distance and mps for the last 600m
                If my600Time > 0 Then
                    mps600 = my600Distance / my600Time
                End If
                myX.Offset(0, -1) = mps600                        'O metres per second rating

'add to the TimesTrackHistory file
                myDateDec = theDate
                If myTimingMethod = "Electronic" Then
                    Cond = LCase(Left(theCond, 4))
                    If myX = "1" Then
'                        Select Case trackCode
'                            Case "ROCK", "WANG", "MRPK", "HOB", "DEVS", "CANB", "GOSF", "K GR", "NOWR", "TOWN", _
'                                "CANT", "MWBH", "RHIL", "TAMW", "S CK", "MORP", "ECHA", "BORD", "MREE", "MWBK", _
'                                "SCST", "WERR", "ATHN", "PRKS", "YEPP", "BLMT"
'                                If Distance >= 1000 Then
'                                    If (Cond = "good" Or Cond = "firm" Or Cond = "fast" Or Cond = "synt") Then                      'create history of winners csv
'                                        myHistory = trackCode & "," & theDate & "," & theDist & "," & Cond & "," _
'                                        & sthorse & "," & myValue & "," & stWeight & "," & theTime & "," & myTime & "," _
'                                        & mps & "," & trackCode & theDist & "," & trackCode & theDist & myDateDec & sthorse
'                                    End If
'                                End If
'                            Case Else
                                If (Cond = "good" Or Cond = "firm" Or Cond = "fast" Or Cond = "synt") Then                     'create history of winners csv
                                    myHistory = trackCode & "," & theDate & "," & theDist & "," & Cond & "," _
                                        & sthorse & "," & myValue & "," & stWeight & "," & theTime & "," & myTime & "," _
                                        & mps & "," & trackCode & theDist & "," & trackCode & theDist & myDateDec & sthorse
                                End If
'                        End Select
                        If Len(Trim(myHistory)) > 0 Then
                            TrackTimes (myHistory) ' write information at the end of the text file & vbCrLf
                        End If
                        myHistory = ""
                    End If
                End If
                    
NoFinish:
            End If
            stNo = ""
            sthorse = ""
       '     myValue = ""
            stJockey = ""
            stWeight = ""
            myDistance = 0
            my600Distance = 0
            s600Dist = ""
            l600Dist = 0
            Kgs = 0
            mps = 0
            mps600 = 0
        Next myX
        'Close #FileNum ' close the Track Times History file

' MsgBox ("enterTrackDetail - Track " & myTrack & " " & txDate)
End Sub
Private Sub ReTidySheet()
    Dim r As Long
    Dim n As Long
    Dim rng As Range

'Select Column N Get rid of all useless rows
    Range("P2:P" & Range("P" & Rows.count).End(xlUp).Row).Offset(0, -2).Select
    Set rng = Selection 'Col N mps
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
                rng.Rows(r).EntireRow.Delete
            End If
        Next r
' MsgBox ("reTidySheet")
End Sub
Private Sub SaveResultData()
    
        Const Delimiter As String = "^" 'or "|,", vbTab, etc.
        Dim myRecord As Range
        Dim myField As Range
        Dim nFileNum As Long
        Dim lastRow As Long
        Dim sOut As String
        Dim fileSaveName As String
        Dim lnCount As Integer
        Dim clCount As Integer
         
    Columns("A:N").Select
    Selection.Columns.AutoFit '

lastRow = Range("A65536").End(xlUp).Row
If lastRow < 2 Then GoTo noData:
' lnCount = InputBox("How many Rows are you loading")
' clCount = InputBox("How many Columns are you loading")
    clCount = 15

' Name the file and where to save it
    fileSaveName = "C:\FILES\Horses\Risa\CurrentUpload.txt"

    nFileNum = FreeFile
    If Dir("C:\FILES\Horses\Risa\CurrentUpload.txt") <> "" Then
        Open fileSaveName For Append As #nFileNum
    Else
        Open fileSaveName For Output As #nFileNum
    End If
    For Each myRecord In Range("A2:A" & _
        Range("A" & Rows.count).End(xlUp).Row)
        With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
            sOut = sOut & Delimiter & Trim(myField.text)
            Next myField
                sOut = Mid(sOut, 2) ' this take off the first delimiter
'                Print #nFileNum, Mid(sOut, 2)
                Print #nFileNum, sOut
                sOut = Empty
        End With
    Next myRecord
    Close #nFileNum
'close this sheet
noData:
'    MsgBox ("saveResultData")
    ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
    Workbooks.Add

End Sub
Private Sub TrackTimes(detail As String)
Dim LogFileName As String
Dim FileNum As Integer
'Dim ThisTimestamp As String

'ThisTimestamp = Format(Date, "dd/mm/yyyy") & "," & Format(Time, "hh:mm") & ","
LogFileName = "C:\FILES\Horses\TrackTimesHistory.csv"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, detail ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
Private Function cleanHorse(sthor As String)

Select Case True
    Case (InStr(1, sthor, "SUPER VOBIS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "SUPER VOBIS") - 1)
    Case (InStr(1, sthor, "BOBS BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "BOBS BONUS") - 1)
    Case (InStr(1, sthor, "BOBS EXTRA BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "BOBS EXTRA BONUS") - 1)
    Case (InStr(1, sthor, "QTIS BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "QTIS BONUS") - 1)
    Case (InStr(1, sthor, "SABOIS BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "SABOIS BONUS") - 1)
    Case (InStr(1, sthor, "SABIS BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "SABIS BONUS") - 1)
    Case (InStr(1, sthor, "VOBIS GOLD BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "VOBIS GOLD BONUS") - 1)
    Case (InStr(1, sthor, "TROBIS BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "TROBIS BONUS") - 1)
    Case (InStr(1, sthor, "WESTSPEED") > 0)
        sthor = Left(sthor, InStr(1, sthor, "WESTSPEED") - 1)
    Case (InStr(1, sthor, "TASBRED BONUS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "TASBRED BONUS") - 1)
        
    Case (InStr(1, sthor, "RIDING FOR THE") > 0)
        sthor = Left(sthor, InStr(1, sthor, "RIDING FOR THE") - 1)
    Case (InStr(1, sthor, "NATIONAL JOCKEYS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "NATIONAL JOCKEYS") - 1)
    Case (InStr(1, sthor, "SPEAK UP!") > 0)
        sthor = Left(sthor, InStr(1, sthor, "SPEAK UP!") - 1)
    Case (InStr(1, sthor, "MCGRATH FOUNDATION") > 0)
        sthor = Left(sthor, InStr(1, sthor, "MCGRATH FOUNDATION") - 1)
    Case (InStr(1, sthor, "CAMP QUALITY") > 0)
        sthor = Left(sthor, InStr(1, sthor, "CAMP QUALITY") - 1)
        
    Case (InStr(1, sthor, "VARIETY") > 0)
        sthor = Left(sthor, InStr(1, sthor, "VARIETY") - 1)
    Case (InStr(1, sthor, "RED KITE") > 0)
        sthor = Left(sthor, InStr(1, sthor, "RED KITE") - 1)
    Case (InStr(1, sthor, "RURAL AID") > 0)
        sthor = Left(sthor, InStr(1, sthor, "RURAL AID") - 1)
    Case (InStr(1, sthor, "AUTISM SPECTRUM") > 0)
        sthor = Left(sthor, InStr(1, sthor, "AUTISM SPECTRUM") - 1)
    Case (InStr(1, sthor, "DEMENTIA AUSTRALIA") > 0)
        sthor = Left(sthor, InStr(1, sthor, "DEMENTIA AUSTRALIA") - 1)
    Case (InStr(1, sthor, "CHANNEL 7") > 0)
        sthor = Left(sthor, InStr(1, sthor, "CHANNEL 7") - 1)
    Case (InStr(1, sthor, "RONALD MCDONALD") > 0)
        sthor = Left(sthor, InStr(1, sthor, "RONALD MCDONALD") - 1)
    Case (InStr(1, sthor, "DANII MEADS") > 0)
        sthor = Left(sthor, InStr(1, sthor, "DANII MEADS") - 1)
'    Case (InStr(1, sthor, "TASBRED BONUS") > 0)
'        sthor = Left(sthor, InStr(1, sthor, "TASBRED BONUS") - 1)
'    Case (InStr(1, sthor, "TASBRED BONUS") > 0)
'        sthor = Left(sthor, InStr(1, sthor, "TASBRED BONUS") - 1)
'    Case (InStr(1, sthor, "TASBRED BONUS") > 0)
'        sthor = Left(sthor, InStr(1, sthor, "TASBRED BONUS") - 1)
'    Case (InStr(1, sthor, "TASBRED BONUS") > 0)
'        sthor = Left(sthor, InStr(1, sthor, "TASBRED BONUS") - 1)
'    Case (InStr(1, sthor, "TASBRED BONUS") > 0)
'        sthor = Left(sthor, InStr(1, sthor, "TASBRED BONUS") - 1)
        
End Select
sthor = Trim(sthor)
cleanHorse = sthor
End Function
Private Sub testhorse()
Dim myhorse As String

myhorse = "CYMBALIC BOBS BONUS SCHEME"
myhorse = cleanHorse(myhorse)
End Sub
Attribute VB_Name = "Keno"
Option Explicit

Sub KenoEnterResults()
'used for checking keno results
'download results as csv, then transpose so that each game is in one column starting in Col B
Dim n(1 To 10) As Long
Dim myselection As Range
Dim myX         As Range
Dim myRecord    As Range
Dim myField     As Range
Dim clCount     As Long
Dim nCount      As Long
Dim myRow       As Long
Dim myCol       As Long


'The numbers drawn
    n(1) = 8
    n(2) = 15
    n(3) = 18
    n(4) = 24
    n(5) = 32
    n(6) = 56
    n(7) = 57
    n(8) = 62
    n(9) = 69
    n(10) = 77
'How many games (columns)
clCount = 10
'GoTo here:
For Each myRecord In Range("B2:B21")
        With myRecord
            For Each myField In Range(.Cells(1), Cells(.Row, clCount))
            Select Case myField
                Case n(1), n(2), n(3), n(4), n(5), n(6), n(7), n(8), n(9), n(10)
                    myField.Interior.ColorIndex = 28
            End Select
            Next myField
        End With
Next myRecord
here:
For myCol = 2 To clCount
    For myRow = 2 To 21
        If Cells(myRow, myCol).Interior.ColorIndex = 28 Then
            nCount = nCount + 1
        End If
    Next myRow
    Select Case nCount
        Case 4
            Cells(myRow + 2, myCol).value = 1
        Case 5
            Cells(myRow + 2, myCol).value = 2
        Case 6
            Cells(myRow + 2, myCol).value = 6
        Case 7
            Cells(myRow + 2, myCol).value = 50
        Case 8
            Cells(myRow + 2, myCol).value = 580
        Case 9
            Cells(myRow + 2, myCol).value = 10000
        Case 10
            Cells(myRow + 2, myCol).value = 1000000
    End Select
    nCount = 0
Next myCol


End Sub
Attribute VB_Name = "Module1"
Option Explicit
'working with CSS
'this works in DOM Document
'                                      (css)
'Set startElement = html.querySelector("div#result-target > div > div > header > div > div > div > div > div:nth-of-type(3) > button > i")
 '   startElement.Click
Sub TestingSaveFile()
Dim fileSaveName As String
Dim nFileNum As Long
'#################
'write curWork to a file
    fileSaveName = "C:\FILES\Horses\test.txt"
    nFileNum = FreeFile
    Open fileSaveName For Output As #nFileNum
    'for output, input, append
    Print #nFileNum, 'curWork
    Close #nFileNum
'################
End Sub



Sub dTest33()
Dim myselection     As Range
Dim myX             As Range
Dim bSelect         As Range
Dim myY             As Range
Dim mySelect        As Range
Dim myZ             As Range
Dim myLine          As Range
Dim wbA             As Variant
Dim vaFileName      As String
Dim vaObj           As Variant
Dim rSheet          As String
Dim raceNo          As String
Dim RaceResult      As String
Dim sDate           As Date
Dim sYear           As String
Dim sMonth          As String
Dim eMonth          As String
Dim eDay            As String
Dim eDate           As String
Dim colCount        As Long
Dim rowCount        As Long
Dim iVal            As Integer
Dim found           As Boolean

Dim strPath         As String
Dim vaFile          As Variant
Dim tmpFileName     As String
Dim tmpX            As Range
Dim tmpRace         As String
Dim tmpWB           As Workbook
Dim myW             As Range
Dim iTTl            As Integer
Dim tmpPlace        As String

' this is BetWinData_history.xls
Set vaObj = ActiveWorkbook
colCount = ActiveSheet.UsedRange.Columns.count
'colCount = Range("CF1").Column
Set myselection = Range(Cells(1, 3), Cells(1, colCount))
    For Each myX In myselection
        sDate = myX.value
        sYear = Format(sDate, "yyyy")
        sMonth = Format(sDate, "mm mmm")
        eMonth = Format(sDate, "mm")
        eDay = Format(sDate, "dd")
        eDate = sYear & "-" & eMonth & "-" & eDay & " *.xls"
        'Cells(1, 2) = Format(Date, "mmm")
        'GoTo here:
        'vaFilename = "C:\FILES\Horses\BetWinData_history.xls"
        'Workbooks.Open vaFilename
        'Set vaObj = ActiveWorkbook


        strPath = "C:\FILES\Horses\Results\" & sYear & "\" & sMonth & "\Sheets\"
        'On Error Resume Next
        ' Look in that director for spreadsheets
        With Application.FileSearch
            .NewSearch
            .LookIn = strPath
            .SearchSubFolders = False
            '.FileName = ".xls"
            .fileName = eDate

            If .Execute > 0 Then

                For Each vaFile In .FoundFiles
' open the sheet
                    Workbooks.Open vaFile
                    Set tmpWB = ActiveWorkbook
                    tmpFileName = ActiveWorkbook.name
                    tmpFileName = Mid(tmpFileName, InStr(1, tmpFileName, ".") - 2, 2)
                    For Each tmpX In Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
                        If tmpX.value <> "" _
                        And (tmpX.Offset(1, 0).Interior.ColorIndex = 3 _
                            Or tmpX.Offset(1, 0).Interior.ColorIndex = 38) Then
                            tmpRace = tmpFileName & Trim(tmpX.value)
                            tmpPlace = Trim(tmpX.Offset(1, 1).value)
                            vaObj.Activate
                            For Each myZ In Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
                                If myZ.value = tmpRace Then
                                    Cells(myZ.Row, myX.Column).Interior.ColorIndex = xlNone
                                    Cells(myZ.Row, myX.Column).value = tmpPlace
                                    ActiveWorkbook.Save
                                    GoTo gotIt:
                                End If
                            Next myZ
                        End If
gotIt:
                    Next tmpX
                    tmpWB.Close
                Next vaFile
            End If
        End With
    Next myX
'vaObj.Activate

End Sub
Private Sub temp77()
Dim myRange     As Range
Dim myX         As Range
Dim myCount     As Long
'Columns("A:A").Interior.ColorIndex = xlNone
Set myRange = Range("E2:E" & Range("E" & Rows.count).End(xlUp).Row)
    For Each myX In myRange
        If myX.Interior.ColorIndex = 19 Then
            myCount = myCount + 1
        End If
        
    Next myX
Debug.Print myCount
End Sub

Sub temper()
Dim myRange As Range
Dim myX As Range
Dim myStr As String
Dim last3   As String

Range("D:D").Interior.ColorIndex = xlNone
Set myRange = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row)
    For Each myX In myRange
        If myX.value <> "" Then
            myStr = myX.Offset(0, 1).text
            If Len(myStr) > 2 Then
                last3 = Right(myStr, 3)
                If Len(Replace(Replace(Replace(last3, "1", ""), "3", ""), "2", "")) = 0 Then
                    myX.Offset(0, 1).Interior.ColorIndex = 6
                End If
            End If
        End If
    Next myX
                                
End Sub

Private Sub validate()
Dim myRange As Range
Dim myX As Range

Set myRange = Range("C1:C" & Range("C" & Rows.count).End(xlUp).Row)
    For Each myX In myRange 'Col C
        If myX.value <> "" Then
            If myX.Offset(0, 1).Interior.ColorIndex = xlNone Then 'D
               myX.Offset(0, -2) = "DEL"
            ElseIf myX.Offset(0, 2).Interior.ColorIndex = xlNone Then 'E
               myX.Offset(0, -2) = "DEL"
            ElseIf myX.Offset(0, 3).Interior.ColorIndex = xlNone Then 'F
               myX.Offset(0, -2) = "DEL"
            ElseIf myX.Offset(0, 10).Interior.ColorIndex = xlNone Then 'M
               myX.Offset(0, -2) = "DEL"
            ElseIf myX.Offset(0, 13).Interior.ColorIndex = xlNone Then 'P
               myX.Offset(0, -2) = "DEL"
            ElseIf myX.Offset(0, 22).Interior.ColorIndex = xlNone Then 'Y
               myX.Offset(0, -2) = "DEL"
            ElseIf myX.Offset(0, 37).Interior.ColorIndex = xlNone Then 'AN
               myX.Offset(0, -2) = "DEL"
            ElseIf myX.Offset(0, 43).Interior.ColorIndex = xlNone Then 'AT
               myX.Offset(0, -2) = "DEL"
            End If
        End If
    Next myX

End Sub
Private Sub tttesttt()
'opens all sheets for today and restarts auto betting
Dim strPath         As String
'Dim strNewPath      As String
Dim vaFileName      As Variant
'Dim sFileName       As String
Dim sYear           As String
Dim sMonthLong      As String
Dim sMonthShort     As String
Dim sDay            As String
Dim FSO             As Object
Dim o As New ScriptControl

o.Language = "JScript"
With o
        .AddCode "function x(a,b) {return 'the answer is:' +(a+b);}"
        Debug.Print .Run("x", 1, 3)
End With


End Sub

Private Sub borderchk()
Dim rng As Range
Set rng = Range("B2:F10")

    With rng.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlMedium
    End With
    With rng.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlMedium
    End With
    With rng.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlMedium
    End With
    With rng.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlMedium
    End With
End Sub

Private Sub TestChome()
'this works PhantomJS - some parts may need changing though
  Dim selenium As New SeleniumWrapper.WebDriver
  'Dim elts As IHTMLElementCollection
  'Dim elts As WebElementCollection
  Dim i As Long
  
  StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

  'selenium.setProfile "default" 'added this new line - default profile - 11/6/16
  selenium.Start "chrome", "http://www.afl.com.au/"
    'selenium.Start "PhantomJS", "http://www.afl.com.au/"
    'selenium.Start "firefox", "http://www.afl.com.au/"
  selenium.Open "/stats"


'findElementsByClassName DOESN'T WORK
'Set elts = selenium.findElementsByCssSelector("player-stats > tbody > tr:nth-child(1) > td.first.player")
'Set elts = selenium.findElementsByClassName("first.player")
'#player-stats > tbody > tr:nth-child(1) > td.first.player
'Dim e As WebElement
'For Each e In elts
    'Debug.Print e.text 'output innerText
'Next e
'HOWEVER THIS - findElementsById - DOES
            'Set elts = selenium.findElementsById("bidBtn_btn")
            'For Each e In elts
             '   Debug.Print e.text 'output innerText
            'Next e


'For i = 0 To elts.count
'    ws.Cells(i + 1, 1) = elts(i).Text
'Next
'For i = 1 To elts.count
    'ws.Cells(i, 1) = elts(i - 1).Text
'    Debug.Print elts.count
'    Debug.Print (elts(i - 1).innerText)
    'Debug.Print (elts(i - 1).innerHTML)
'Next
'--------------
Dim wRound As WebElement
Dim x As Long
selenium.findElementByXPath("//*[@id='stats_tab']/ul/li[2]/a").Click 'select players
selenium.Wait (1000)
nextPage:
If x > 38 Then Stop
'Stop
'selenium.findElementByCssSelector ("stats-player-stats > div.pagi-holder > div > a.pageLink.next.disabled")
'Stop
'On Error Resume Next
'selenium.findElementsByLinkText(".pagelink.next").Click
'If selenium.isElementPresent("#stats-player-stats > div.pagi-holder > div > a.pageLink.next") Then
'If selenium.isElementPresent("stats-player-stats > div.pagi-holder > div > a.pageLink.next.disabled") Then
    'wRound = selenium.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").Enabled
'If selenium.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").getAttribute("outerHTML") Then
If InStr(1, selenium.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").getAttribute("outerHTML"), "pageLink next disabled") > 0 Then
    Stop
    'GoTo done:
Else
'    Set wRound = selenium.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]")
'    Debug.Print wRound.getAttribute("outerHTML")
    x = x + 1
    Debug.Print x
'if driver.isSomethingSelected
'If driver.findElementByClassName("pageLink next disabled") Then
    'Set wRound = driver.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]")
        'If wRound.Enabled Then 'GoTo done:
        '    Debug.Print "found wRound.enabled"
        'End If
        'If driver.findElementByClassName("pageLink next disabled") Then GoTo done:
'If driver.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").Size > 0 Then
    selenium.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").Click
'//*[@id="stats-player-stats"]/div[3]/div/a[2] 'next button
    GoTo nextPage:

End If
End Sub
Sub qinvestch()

Dim selenium As New SeleniumWrapper.WebDriver
  selenium.Start "firefox", "https://qsuper.qld.gov.au/"

  selenium.Open "/"
  selenium.clickAndWait "id=LoginLink"
  selenium.Type "id=login_username", "dentchuck"
  selenium.clickAndWait "id=phbody_1_phcontentcolumn_0_SubmitButton_ButtonControl"
  selenium.clickAndWait "id=phbody_2_pw_topnav_0_ctl00_LogoutLink"
  selenium.clickAndWait "id=LoginLink"
  selenium.Type "id=login_username", "dentchuck"
  selenium.clickAndWait "id=phbody_1_phcontentcolumn_0_SubmitButton_ButtonControl"
  selenium.clickAndWait "id=phbody_2_pw_topnav_0_ctl00_LogoutLink"

  selenium.stop
  End Sub

Sub tempMad()
Dim myX As Range
Dim x As Double
Dim theDateDec As Long
theDateDec = Now
For Each myX In Range("B2:B" & Range("B" & Rows.count).End(xlUp).Row)
    If InStr(1, myX.text, ".5") > 0 Then
        x = x + myX.Offset(0, 1)
    End If
    'Debug.Print myx & " - " & x
Next myX
End Sub
Sub xyz()

Dim lngRed As Long
Dim lngBlack As Long
Dim lngYellow As Long
Dim lngWhite As Long
Dim lngGreen As Long
Dim lngBlue As Long

'RGB(0, 0, 0) : black.
'RGB(255, 255, 255) : white.
'RGB(255, 0, 0) : red.
'RGB(0, 255, 0) : green.
'RGB(0, 0, 255) : blue
'rgb(255,255,0) yellow

lngRed = RGB(255, 0, 0)
lngBlack = RGB(0, 0, 0)
lngWhite = RGB(255, 255, 255)
lngGreen = RGB(0, 255, 0)
lngBlue = RGB(0, 0, 255)
lngYellow = RGB(255, 255, 0)
Debug.Print "Red: " & lngRed
Debug.Print "Black: " & lngBlack
Debug.Print "White: " & lngWhite
Debug.Print "Green: " & lngGreen
Debug.Print "Blue: " & lngBlue
Debug.Print "Yellow: " & lngYellow

End Sub
Private Sub SayThisString()
 
Dim SayThis As String
 
 
 
SayThis = "I love Microsoft Excel"
 
Application.Speech.Speak (SayThis)
 
 
 
End Sub
Private Sub SayThisCell()
 
Cells(3, 6).Speak

 
End Sub

Private Sub chromeHeadless()

Dim startElement As WebElement
Dim elements    As WebElementCollection
Dim element     As WebElement
Dim Rows        As WebElementCollection
Dim Row         As WebElement
Dim Boxes       As WebElementCollection
Dim Box         As WebElement
'Dim ie          As InternetExplorer
'Dim html        As HTMLDocument
Dim sURL        As String
Dim theDate     As String
Dim myTown      As String
Dim myCode      As String
Dim wb          As Workbook
Dim TMOpen      As Boolean
Dim gotCode     As Boolean
Dim myselection As Range
Dim myX         As Range
Dim lastRow     As Long
Dim raceCount   As Integer

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("chromedriver.exe")
'StopMyProcess ("phantomjs.exe")
'StopMyProcess ("iexplore.exe")

'Options = WebDriver.ChromeOptions()
'        options.add_argument('headless')
'Dim browser As New chromedriver

With driver
        .addArgument ("--headless")
End With


sURL = "https://tab.ubet.com/racing/"
'driver.Start "phantomjs", sURL
driver.Start "chrome", sURL
driver.setImplicitWait 10000
'driver.Wait (500)
driver.get "/horse-racing?Date=" & theDate, Raise:=False
'driver.get "/horse-racing?Date=20191027, Raise:=False"
driver.Wait (1000)
'driver.maximizeWindow
driver.captureEntirePageScreenshot ("C:\FILES\Horses\screenshot.jpg")
'driver.captureScreenshotToString ("C:\FILES\Horses\screenString.png")
Stop

Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]/div/ubet-racing-home-page/div/div/div/div/ubet-racing-race-grid/div/div[2]/div")


        
End Sub
Private Sub multyRange()

Range("AO1").FormulaArray = "=Product(if(an2:an50 = ""x"", AM2:Am50, """"))"

'worksheetfunction.Product(if(an2:an50 = "x", AM2:Am50, ""))

End Sub
Attribute VB_Name = "Module2"

Sub ImportAFLgames()
'to refer to the running copy of Internet Explorer
Dim ie As InternetExplorer
'to refer to the HTML document returned
Dim html As HTMLDocument
'open Internet Explorer in memory, and go to website
Dim StartLevel As IHTMLElement
Dim Level1Coll As IHTMLElementCollection
Dim Level1 As IHTMLElement
Dim rowNumber As Long
Dim QuestionId As String
Dim Level2Coll As IHTMLElementCollection
Dim Level2 As IHTMLElement
Dim Level3Coll  As IHTMLElementCollection
Dim Level3 As IHTMLElement
Dim TagName3 As IHTMLElementCollection 'TagName
Dim Tag3 As IHTMLElement
Dim Game As String
Dim team As String
Dim team1 As String
Dim team2 As String
Dim GameTime As String
Dim player As String
Dim views As String
Dim QuestionFieldLinks As IHTMLElementCollection

    Set ie = New InternetExplorer
    ie.Visible = True
    ie.navigate "http://www.afl.com.au/news/teams"
'Wait until IE is done loading page
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
        Application.StatusBar = "Trying to go to StackOverflow ..."
        DoEvents
    Loop
'show text of HTML document returned
    Set html = ie.document
'##########write html to a file
'    Dim fileSaveName As String
'    Dim curWork As String
'    Dim nFileNum As Long
'    curWork = html.documentElement.innerHTML
'    fileSaveName = "C:\FILES\AFL\teamsInnerHtml.txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Append As #nFileNum
'    Print #nFileNum, curWork
'    Close #nFileNum
'################
    Set StartLevel = html.GetElementByID("fieldTools")
    Set Level1Coll = StartLevel.Children
    For Each Level1 In Level1Coll
        If Level1.ClassName = "btn-expand" Then
        Set TagName3 = Level1.getElementsByTagName("a")
                    For Each Tag3 In TagName3
                        If Tag3.innerHTML = "Expand all games" Then
                            Tag3.Click
                              'GoTo HaveClick:
                        End If
                    Next Tag3
        End If
    Next Level1
HaveClick:
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
    Application.StatusBar = "Trying to go to StackOverflow ..."
        DoEvents
    Loop
    Set html = ie.document

    Set StartLevel = html.GetElementByID("tteamfield")
    Set Level1Coll = StartLevel.Children
    rowNumber = 2

    For Each Level1 In Level1Coll
'if this is the tag containing the question details, process it
        If Level1.ClassName = "game" Then
'first get and store the Level1 id in first column
            'Level1Id = Replace(Level1.ID, "question-summary-", "")
            'Cells(RowNumber, 1).Value = CLng(Level1Id)
'get a list of all of the parts of this Level1,
'and loop over them
            'Set Level2Coll = Level1.all
            Set Level2Coll = Level1.Children
            For Each Level2 In Level2Coll
'if this is the question's game, store it (get rid of any surrounding text)
                If Level2.ClassName = "lineup" Then
                    Set Level3Coll = Level2.all
                    For Each Level3 In Level3Coll
                        If Level3.ClassName = "team1" Then
                            team1 = Level3.innerText
                           ' Team1 = Replace(Level3.innerText, "game", "")
               '     game = Replace(game, "vote", "")
               '     Cells(RowNumber, 2).Value = Trim(game)
                        ElseIf Level3.ClassName = "team2" Then
                            team2 = Level3.innerText
                        ElseIf Level3.ClassName = "game-time" Then
                            GameTime = Level3.innerText
                            GameTime = Trim(GameTime)
                            Game = team1 & " v " & team2
                            Exit For
                        End If
                    Next Level3
                'End If
                ElseIf Left(Level2.ClassName, 12) = "field-inouts" Then
                    Set Level3Coll = Level2.all
                    For Each Level3 In Level3Coll
                        If Left(Level3.ClassName, 10) = "team1 team" Then
                            team = team1
                        ElseIf Left(Level3.ClassName, 10) = "team2 team" Then
                            team = team2
                        ElseIf Level3.ClassName = "player" Then
                            player = Level3.innerText
                            player = Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(player, "0", ""), _
                "9", ""), "8", ""), "7", ""), "6", ""), "5", ""), "4", ""), "3", ""), "2", ""), "1", "")
                            player = Replace(player, "Down", "")
                            player = Replace(player, Chr(13), "")
                            player = Replace(player, Chr(11), "")
                            player = Replace(player, Chr(10), "")
                            Cells(rowNumber, 1).value = Trim(Game) & " - " & GameTime
                            Cells(rowNumber, 2).value = Trim(team)
                            Cells(rowNumber, 3).value = Trim(player)
                            rowNumber = rowNumber + 1
                        ElseIf Level3.ClassName = "posGroup sidebars interchange" Then
                            Exit For
                        End If
                    Next Level3
                End If
'likewise for views (getting rid of any text)
                'If Level2.ClassName = "views" Then
                '    views = Level2.innerText
                '    views = Replace(views, "views", "")
                '    views = Replace(views, "view", "")
                '    Cells(RowNumber, 3).Value = Trim(views)
                'End If
'if this is the bit where author's name is ...
                'If Level2.ClassName = "started" Then
'get a list of all elements within, and store the
'text in the second one
                'Set QuestionFieldLinks = Level2.all
                '    Cells(RowNumber, 4).Value = QuestionFieldLinks(2).innerHTML
                'End If
            Next Level2
'go on to next row of worksheet
           ' RowNumber = RowNumber + 1
        End If
    Next Level1
    Set html = Nothing
    Set ie = Nothing

'Application.StatusBar = ""
    MsgBox "Done!"

End Sub
Sub Test()
'to refer to the running copy of Internet Explorer
Dim ie As InternetExplorer
'to refer to the HTML document returned
Dim html As HTMLDocument
'open Internet Explorer in memory, and go to website
Dim StartLevel As IHTMLElement
Dim Level1Coll As IHTMLElementCollection
Dim Level1 As IHTMLElement
Dim rowNumber As Long
Dim QuestionId As String
Dim Level2Coll As IHTMLElementCollection
Dim Level2 As IHTMLElement
Dim Level3Coll  As IHTMLElementCollection
Dim Level3 As IHTMLElement
Dim TagName3 As IHTMLElementCollection 'TagName
Dim Tag3 As IHTMLElement
Dim Game As String
Dim team As String
Dim team1 As String
Dim team2 As String
Dim GameTime As String
Dim player As String
Dim views As String
Dim QuestionFieldLinks As IHTMLElementCollection

    Set ie = New InternetExplorer
    ie.Visible = True
    ie.navigate "http://www.afl.com.au/news/teams"
'Wait until IE is done loading page
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
        Application.StatusBar = "Trying to go to StackOverflow ..."
        DoEvents
    Loop
'show text of HTML document returned
    Set html = ie.document
    rowNumber = 2
'##########write html to a file
'    Dim fileSaveName As String
'    Dim curWork As String
'    Dim nFileNum As Long
'    curWork = html.documentElement.innerHTML
'    fileSaveName = "C:\FILES\AFL\teamsInnerHtml.txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Append As #nFileNum
'    Print #nFileNum, curWork
'    Close #nFileNum
'################
    Set StartLevel = html.GetElementByID("fieldTools")
    Set Level1Coll = StartLevel.Children
    For Each Level1 In Level1Coll
        Cells(rowNumber, 1).value = Trim(Level1.ClassName)
        rowNumber = rowNumber + 1
        If Level1.ClassName = "btn-expand" Then
        Set TagName3 = Level1.getElementsByTagName("a")
                    For Each Tag3 In TagName3
                        Cells(rowNumber, 3).value = Trim(Tag3.innerHTML)
                        rowNumber = rowNumber + 1
                        If Tag3.innerHTML = "Expand all games" Then
                            Tag3.Click
                              GoTo HaveClick:
                        End If
                    Next Tag3
        End If
    Next Level1
HaveClick:
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
    Application.StatusBar = "Trying to go to StackOverflow ..."
        DoEvents
    Loop
    Set html = ie.document

    Set StartLevel = html.GetElementByID("tteamfield")
    Set Level1Coll = StartLevel.Children
    
    For Each Level1 In Level1Coll
        Cells(rowNumber, 1).value = Trim(Level1.ClassName)
        rowNumber = rowNumber + 1
        
        If Level1.ClassName = "game" Then
            Set Level2Coll = Level1.Children
            For Each Level2 In Level2Coll
                Cells(rowNumber, 2).value = Trim(Level2.ClassName)
                rowNumber = rowNumber + 1
                
                If Level2.ClassName = "lineup" Then
                    Set Level3Coll = Level2.all
                    For Each Level3 In Level3Coll
                        Cells(rowNumber, 3).value = Trim(Level3.ClassName)
                        rowNumber = rowNumber + 1
                      '  If Level3.ClassName = "button bluebtn toggleInouts" Then
                      '      Cells(RowNumber, 4).Value = Trim(Level3.innerHTML)
                      '      RowNumber = RowNumber + 1

                      '      Set TagName3 = Level2.getElementsByTagName("a")
                      '      For Each Tag3 In TagName3
                      '          Cells(RowNumber, 4).Value = Trim(Tag3.innerHTML)
                      '          RowNumber = RowNumber + 1
                      '          If Tag3.innerHTML = "Show Teams" Then
                      '              Tag3.Click
                                'GoTo HaveClick:
                      '          End If
                      '      Next Tag3
                      '  End If
                    Next Level3
                'End If
                ElseIf Level2.ClassName = "field-inouts active" Then
                    Set Level3Coll = Level2.all
                    For Each Level3 In Level3Coll
                        Cells(rowNumber, 3).value = Trim(Level3.ClassName)
                        rowNumber = rowNumber + 1
                    Next Level3
                ElseIf Level2.ClassName = "field-inouts" Then
                    Set Level3Coll = Level2.all
                    For Each Level3 In Level3Coll
                        Cells(rowNumber, 3).value = Trim(Level3.ClassName)
                        rowNumber = rowNumber + 1
                    Next Level3
                'ElseIf Level2.ClassName = "game-tools" Then
                    'Set Level3Coll = Level2.all
                    'For Each Level3 In Level3Coll
                     '   Cells(RowNumber, 3).Value = Trim(Level3.ClassName)
                      '  RowNumber = RowNumber + 1
                 '   Set TagName3 = Level2.getElementsByTagName("a")
                 '   For Each Tag3 In TagName3
                 '       Cells(RowNumber, 3).Value = Trim(Tag3.innerHTML)
                 '       RowNumber = RowNumber + 1
                 '       If Tag3.innerHTML = "Expand all games" Then
                 '           Tag3.Click
                              '  GoTo HaveClick:
                 '       End If
                 '   Next Tag3
                    'Next Level3
                End If
            Next Level2
        End If
'HaveClick:
    Next Level1
    Set html = Nothing
    Set ie = Nothing

'Application.StatusBar = ""
    MsgBox "Done!"

End Sub
Sub DoBrowse2()
'WONT WORK
    Dim urlName As String
    Dim oHttp As Object
    Dim a As String

    'ActiveWorkbook.FollowHyperlink Address:="c:\temp\MyHTMLfile.htm", NewWindow:=True
'    ActiveWorkbook.FollowHyperlink Address:="http://www.afl.com.au/stats", NewWindow:=True
    urlName = "http://www.afl.com.au/stats"
'    urlName = "http://horseracing.bigpondsport.com/todaysracing/fullracecard/tabid/73/meetid/5052/default.aspx"
    
' Get the track and the date
    Set oHttp = CreateObject("MSXML2.XMLHTTP")
    oHttp.Open "GET", urlName, False
    oHttp.send
    a = oHttp.responseText 'a contains source code of website
    Dim fileSaveName As String
'    Dim curWork As String
    Dim nFileNum As Long
'    curWork = html.documentElement.innerHTML
    fileSaveName = "C:\FILES\AFL\test.txt"
    nFileNum = FreeFile
    Open fileSaveName For Append As #nFileNum
    Print #nFileNum, a
    Close #nFileNum


End Sub
Attribute VB_Name = "Module3"
Option Explicit
'Option Base 1
Dim mySite As String
'Dim lookupValue As String
Sub Test()
    Dim ie As Object
     
   ' Sheets("Sheet3").Select
   ' Range("A1:A1000") = "" ' erase previous data
    Range("A1").Select
     
    Set ie = CreateObject("InternetExplorer.Application")
    With ie
        .Visible = True
        .navigate "http://www.afl.com.au/stats" ' should work for any URL
        Do Until .READYSTATE = 4: DoEvents: Loop
        End With
         
        ie.ExecWB 17, 0 '// SelectAll
        ie.ExecWB 12, 2 '// Copy selection
        ActiveSheet.PasteSpecial Format:="Text", link:=False, DisplayAsIcon:=False
        Range("A1").Select
        ie.Quit
        ie.Quit ' just to make sure
        Set ie = Nothing
    End Sub
Sub clickFormButton()
'we define the essential variables
Dim ie As Object
Dim form As Variant, Button As Variant

Dim myjobtype As String, myexperience As String, mycity As String

Dim TDelements As Object, TDelement As Object
Dim r As Long, c As Long

'add the "Microsoft Internet Controls" reference in your VBA Project indirectly
Set ie = CreateObject("InternetExplorer.Application")

'more variables for the inputboxes - makes our automation program user friendly
myjobtype = InputBox("Enter type of job, eg. sales, administration")
myexperience = InputBox("enter your no of years experience, for example, 3")
mycity = InputBox("Enter the city where you wish to work")

With ie

.Visible = True
.navigate ("http://www.monsterindia.com")

' we ensure that the web page downloads completely before we fill the form automatically
While ie.READYSTATE <> 4
DoEvents
Wend

'assigning the vinput variables to the html elements of the form
ie.document.getElementsByName("fts").Item.innerText = myjobtype
ie.document.getElementsByName("exp").Item(0).value = myexperience
ie.document.getElementsByName("lmy").Item.innerText = mycity
' accessing the button via the form
Set form = ie.document.getElementsByTagName("form")

Set Button = form(0).onsubmit
form(0).submit

' again ensuring that the web page loads completely before we start scraping data
Do While ie.Busy: DoEvents: Loop

Set TDelements = .document.getElementsByTagName("td")
r = 0
c = 0

For Each TDelement In TDelements
Sheet1.Range("A1").Offset(r, c).value = TDelement.innerText
r = r + 1
Next

End With

' cleaning up memory
Set ie = Nothing

End Sub
Sub tesstAFLstats()
Dim startElement As WebElement
'Dim wRounds As WebElementCollection
'Dim wRound As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim element1s As WebElementCollection
Dim element1 As WebElement
'Dim myWork As String
'Dim RndNo As String
'Dim myYear As String
Dim myURL As String
'Dim myCol As Range
'Dim myX As Range
'Dim wkName As String
'Dim Team1 As String
'Dim Team2 As String
'Dim Score1 As String
'Dim Goal1 As String
'Dim Point1 As String
'Dim Score2 As String
'Dim Goal2 As String
'Dim Point2 As String
'Dim CorrectRound As Boolean
'Dim QuestionFieldLinks As IHTMLElementCollection
Dim myCnt As String
Dim FoundPlayer As Boolean
'Dim ColNo As Long
Dim lpage As Long
Dim rowNumber As Long

Dim myStats         As String
Dim StatFileName    As String
Dim FileNum         As Integer

Dim toggle As Boolean

Dim secs1 As Date 'timer
Dim secs2 As Date
Dim mySecs As Double

Dim myWork As String
Dim LineArray()     As String
Dim LineContent     As String
Dim y As Integer
Dim statsArray()    As String
Dim statsContent    As String
Dim z As Integer

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

FoundPlayer = False
Application.DisplayStatusBar = True
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False
    

'Application.DisplayStatusBar = True
Application.StatusBar = "Waiting on AFL Webpage ..."

StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

StatFileName = "C:\FILES\AFL\Stats.txt"
FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

driver.Start "phantomjs", "http://www.afl.com.au/"
'driver.Start "chrome", "http://www.afl.com.au/"
'Stop
driver.setImplicitWait 10000
driver.Wait (500)

'myURL = "/match-centre?roundId=CD_R" & myYear & "014" & RndNo & "#tround"
myURL = "/stats"
driver.get myURL, Raise:=False
driver.Wait (3000)
'Stop

driver.findElementByXPath("//*[@id='stats_tab']/ul/li[2]/a").Click 'select players
driver.Wait (1000)

secs1 = Time()

nextPage:
lpage = lpage + 1
DoEvents
'Set startElement = driver.findElementByXPath("//*[@id='player-stats']/tbody")
myWork = driver.findElementByXPath("//*[@id='player-stats']/tbody").getAttribute("outerHTML")
myWork = strClean(myWork)
myWork = Replace(myWork, "  ", " ")
'myWork = Replace(myWork, "", "")
'Debug.Print myWork
'Debug.Print driver.findElementByXPath("//*[@id='player-stats']/tbody").getAttribute("outerHTML")
'Stop
myWork = Replace(myWork, "<tr", "^")
LineArray() = Split(myWork, "^")
    For y = 1 To UBound(LineArray) 'don't need the first one
    'For y = LBound(LineArray) To UBound(LineArray)
        DoEvents 'stops the 'not responding' message
 '      Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & y & " of " & UBound(LineArray)
        'On Error Resume Next
        If Len(Trim(LineArray(y))) <> 0 Then
            'Debug.Print y & " is " & LineArray(y)
            'Stop
            secs2 = Time()
            rowNumber = rowNumber + 1
            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
            If mySecs > 1 Then
                Application.StatusBar = "Processing page " & lpage & " record " & rowNumber & " at a rate of: " _
                    & Application.WorksheetFunction.Round((rowNumber / mySecs), 2) & " rows per second."
            End If
            LineContent = LineArray(y)
            LineContent = Mid(LineContent, InStr(1, LineContent, "</span>") + 2, Len(LineContent))
            'LineContent = Replace(LineContent, "<td title=", "|", 1, 1) 'replace the first one only
            LineContent = Replace(LineContent, "<td title=", "|")
                statsArray() = Split(LineContent, "|")
                toggle = True
                For z = LBound(statsArray) To UBound(statsArray)
                    DoEvents
                    statsContent = statsArray(z)
                    statsContent = Mid(statsContent, InStr(1, statsContent, ">") + 1, Len(statsContent))
                    statsContent = Left(statsContent, InStr(1, statsContent, "<") - 1)
                    statsContent = Trim(statsContent)
                    If toggle = True Then
                        If myStats = "" Then
                            myStats = statsContent
                            toggle = False
                        Else
                            myStats = myStats & "^" & statsContent
                            toggle = False
                        End If
                    Else
                        toggle = True
                    End If

                Next z
        End If
    Print #FileNum, myStats
    myStats = ""
    Next y

If InStr(1, driver.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").getAttribute("outerHTML"), "pageLink next disabled") > 0 Then
    GoTo done:
Else
    driver.findElementByXPath("//*[@id='stats-player-stats']/div[3]/div/a[2]").Click
End If
'driver.Wait (100)
GoTo nextPage:
done:
Close #FileNum
driver.stop
Application.ScreenUpdating = True
    'Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True

Application.StatusBar = ""

End Sub
Sub ImportModule()
' might be able to use something like this to update vba code on the fly
Dim oXL As Excel.Application
Dim VBP As VBIDE.VBProject
Dim sFileName As String

Set oXL = New Excel.Application
With oXL
    .Visible = True
    .Workbooks.Open "CataTest.xls"
    Set VBP = .ActiveWorkbook.VBProject
    sFileName = "c:dataModule1.bas"
    VBP.VBComponents.Import sFileName
    .ActiveWorkbook.Save
    .Quit
End With
Set oXL = Nothing
End Sub

Private Sub Test7764()
Dim myX         As Range
Dim url         As String
Dim ClubID      As String
Dim PlayerID    As String
Dim FullName    As String
Dim lastRow     As Integer

lastRow = Range("A65536").End(xlUp).Row
For Each myX In Range("B2:B" & lastRow)
    If myX.Offset(0, 3) = "" Then
        FullName = ""
        ClubID = myX.value
        PlayerID = myX.Offset(0, 2).value
        url = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/" & ClubID & "/playerid/" & PlayerID & "/seasonid/45/default.aspx"
        URLExists (url)
    'If URLExists(url) = True Then
    'If InStr(1, mySite, ">2017 Total<") <> 0 Then
        mySite = Replace(mySite, Chr(10), "") '[Line Feed Return]
        mySite = Replace(mySite, Chr(11), "") '[Shift+Enter]
        mySite = Replace(mySite, Chr(13), "") '[Carriage Return]
        mySite = Replace(mySite, Chr(9), "") '[Tab]
        FullName = Mid(mySite, InStr(1, mySite, "<title>") + 7, 200)
        FullName = Left(FullName, InStr(1, FullName, " -") - 1)
        FullName = Application.WorksheetFunction.Clean(FullName)
        FullName = Application.WorksheetFunction.Trim(FullName)
        myX.Offset(0, 3) = FullName
    End If
Next myX
End Sub
Function Test_URLExists()
'tests if a website URL exists - WORKS
  Dim url As String
  
  'url = "http://www.mrexcel.com/forum/showthread.php?t=567315"
  'MsgBox url, vbInformation, URLExists(url)
  
  'url = "http://xwww.mrexcel.com/forum/showthread.php?t=567315"
  'url = "http://lindyone.com"
  'clubid/11/playerid/6907/
  'url = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/11/playerid/6907/seasonid/45/default.aspx" 'true
  url = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/1/playerid/22/seasonid/45/default.aspx" 'false
  MsgBox url, vbInformation, URLExists(url)
End Function


Function CharacterArray(value As String)
    value = StrConv(value, vbUnicode)
    CharacterArray = Split(Left(value, Len(value) - 1), ",")
End Function
Sub example()
'Dim testString1 As String = "ABC"
' Create an array containing "A", "B", and "C".
'Dim charArray() As Char = testString1.ToCharArray
    Dim x As String
    Dim y As String
    Dim z As String
    Dim v As Long
    Dim a As Variant
    Dim myArrayx As Variant
    Dim myArrayy As Variant
    Dim myArrayz As Variant
    
    Dim myKnownx As Range
    Dim myKnowny As Range
    Dim myNewx As Range
    Worksheets("Sheet1").Activate
    'x = "1,2,3,4"
    'y = "2,4,6,8"
    'z = "5"
    'MyArray = Split(MyString,",")
    'myArrayx = Split(x, ",")
    'myArrayy = Split(y, ",")
     'myArrayz = Split(z, ",")
     v = 7
     'Worksheets("Sheet2").Activate
     Set myKnowny = Worksheets("Sheet2").Range("B1:B" & v)
     Set myKnownx = Worksheets("Sheet2").Range("A1:A" & v)
     Set myNewx = Worksheets("Sheet2").Range("A" & v + 1)
    a = Application.WorksheetFunction.Trend(myKnowny, myKnownx, myNewx, True)
    'a = Application.WorksheetFunction.Trend(myArrayy, myArrayx, myArrayz, True)
    'Debug.Print a
    Worksheets("Sheet2").Range("B8") = a
End Sub
Sub test6787()
'WORKS - replaces filesearch
Dim objFSO As Object
Dim objFolder As Object
Dim objFile As Object
Dim i As Integer
Dim dirname As String
Dim nrFiles As Integer
Dim sYear           As String
Dim sMonth          As String
Dim lMonth          As String
Dim sDay            As String
Dim ffilename As String

sYear = Format(Date, "yyyy")
lMonth = Format(Date, "mm mmm")
sMonth = Format(Date, "mm")
sDay = Format(Date, "dd")
'sYear & "-" & sMonth & "-" & sDay & "*.xls"
dirname = "C:\FILES\Horses\Results\" & sYear & "\" & lMonth & "\Sheets\"

Set objFSO = CreateObject("Scripting.FileSystemObject")
Set objFolder = objFSO.GetFolder(dirname)
If objFolder.Files.count > 0 Then
    nrFiles = objFolder.Files.count
    i = 1
    For Each objFile In objFolder.Files
        'Debug.Print objFile
        If InStr(1, objFile, sYear & "-" & sMonth & "-" & sDay) > 0 Then
        ffilename = objFile  ''<-Change is here''
            i = i + 1
        End If
    Next objFile
Else
    'MsgBox "There were no Files found."
End If
End Sub
Sub LoopThroughFiles()
Dim sYear           As String
Dim sMonth          As String
Dim lMonth          As String
Dim sDay            As String
Dim wbResults       As Workbook
Dim StrFile         As String

sYear = Format(Date, "yyyy")
lMonth = Format(Date, "mm mmm")
sMonth = Format(Date, "mm")
sDay = Format(Date, "dd")
'sDay = 22

StrFile = Dir("C:\FILES\Horses\Results\" & sYear & "\" & lMonth & "\Sheets\" & sYear & "-" & sMonth & "-" & sDay & "*.xls")
 Do While Len(StrFile) > 0
    'If InStr(1, StrFile, sYear & "-" & sMonth & "-" & sDay) > 0 Then
        Debug.Print StrFile
        Set wbResults = Workbooks.Open("C:\FILES\Horses\Results\" & sYear & "\" & lMonth & "\Sheets\" & StrFile)

                    'DO YOUR CODE HERE


        wbResults.Close SaveChanges:=True
    'End If
    StrFile = Dir
 Loop
End Sub
Sub Test659732()
Dim strPath         As String
Dim sYear           As String
Dim sMonth          As String
Dim lMonth          As String
Dim sDay            As String
Dim i               As Integer

' Rugby put some heading in
    Range("E1").value = "K"
    Range("F1").value = "KM"
    Range("G1").value = "TCK"
    Range("H1").value = "T"
    Range("I1").value = "PTS"
    Range("J1").value = "R"
    Range("K1").value = "RM"
    Range("L1").value = "LB"
    Range("M1").value = "TB"
    Range("N1").value = "OFF"
    Range("O1").value = "TO"
    Range("P1").value = "ERR"
    Range("Q1").value = "PEN"

    Range("R1").value = "MT"
    Range("S1").value = "YC"
    Range("T1").value = "RC"
    Range("U1").value = "P"
    Range("V1").value = "FAN"
    Range("W1").value = "Score"
    
    Range("X1").value = "K"
    Range("Y1").value = "KM"
    Range("Z1").value = "TCK"
    Range("AA1").value = "T"
    Range("AB1").value = "PTS"
    Range("AC1").value = "R"
    Range("AD1").value = "RM"
    Range("AE1").value = "LB"
    Range("AF1").value = "TB"
    Range("AG1").value = "OFF"
    Range("AH1").value = "TO"
    Range("AI1").value = "ERR"
    Range("AJ1").value = "PEN"
    
    Range("AK1").value = "MT"
    Range("AL1").value = "RC/YC"
    Range("AM1").value = "P"
    
    

End Sub
Sub WAN_IP()
'gets current WAN IP address
Dim objxmlHTTP As Object
Dim strHTMLText As String
Dim strIP As String
Dim varStart As Long
Dim varStop As Long

    Set objxmlHTTP = CreateObject("Microsoft.XMLHTTP")
    Call objxmlHTTP.Open("get", "http://checkip.dyndns.org", False)
    objxmlHTTP.send
'###
    'Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    'oHttp2.Open "GET", urlName2, False
    'oHttp2.send

'###
    strHTMLText = objxmlHTTP.responseText
    Set objxmlHTTP = Nothing

    If strHTMLText <> "" Then
        varStart = InStr(1, strHTMLText, "Current IP Address:", vbTextCompare) + 19
        If varStart Then varStop = InStr(varStart, strHTMLText, "</body>", vbTextCompare)
        If varStart And varStop Then strIP = Mid(strHTMLText, varStart, varStop - varStart)
    Else
        strIP = "Unavailable"
    End If

    strIP = Trim(strIP)
End Sub
Sub Tester()
Dim mySite As String
Dim fileSaveName As String
Dim nFileNum As Integer
    Dim sResponse As String, html As New HTMLDocument '<== Tools > References > HTML Object Library
    'Dim hTable As HTMLTable
    
    Application.ScreenUpdating = False
    With CreateObject("Microsoft.XMLHTTP")
        .Open "GET", "https://tab.ubet.com/racing/horse-racing/Aquis-Park-Gold-Coast-QR/Race-1/Win?Date=20190302", False
 '       .setRequestHeader "If-Modified-Since", "Sat, 1 Jan 2000 00:00:00 GMT"
        .send
        sResponse = StrConv(.responseBody, vbUnicode)
    End With
    sResponse = Mid$(sResponse, InStr(1, sResponse, "<!DOCTYPE "))
    'With html
    '    .Body.innerHTML = sResponse
        'Set hTable = .getElementById("cr1")
    fileSaveName = "C:\FILES\Horses\test.txt"
    nFileNum = FreeFile
    Open fileSaveName For Append As #nFileNum
    Print #nFileNum, sResponse
    Close #nFileNum
    'End With
    Application.ScreenUpdating = True
End Sub
'MsgBox GetSource("https://tab.ubet.com/racing/horse-racing/Aquis-Park-Gold-Coast-QR/Race-1/Win?Date=20190302")
'mySite = GetSource("https://tab.ubet.com/racing/horse-racing/Aquis-Park-Gold-Coast-QR/Race-1/Win?Date=20190302")
'write curWork to a file
 
'End Sub


Function GetSource(sURL As String) As String

Dim oXHTTP As Object

'Set oXHTTP = CreateObject("MSXML2.XMLHTTP")
Set oXHTTP = CreateObject("Msxml2.ServerXMLHTTP")
oXHTTP.Open "GET", sURL, False
oXHTTP.send
GetSource = oXHTTP.responseText
Set oXHTTP = Nothing

End Function
Sub CDO_Mail_Small_Text()
'sends email from excel - works well
    Dim iMsg As Object
    Dim iConf As Object
    Dim strbody As String
    Dim Flds As Variant

    Set iMsg = CreateObject("CDO.Message")
    Set iConf = CreateObject("CDO.Configuration")

        iConf.Load -1    ' CDO Source Defaults
        Set Flds = iConf.Fields
        With Flds
            .Item("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
            .Item("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "smtpout.asia.secureserver.net"
            .Item("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = 80
            .Item("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate") = 1
            .Item("http://schemas.microsoft.com/cdo/configuration/sendusername") = "admin@lattitude27.com"
            .Item("http://schemas.microsoft.com/cdo/configuration/sendpassword") = "target2233"
            .Update
        End With

    strbody = "Hi there" & vbNewLine & vbNewLine & _
        "This is line 1" & vbNewLine & _
        "This is line 2" & vbNewLine & _
        "This is line 3" & vbNewLine & _
        "This is line 4"

    With iMsg
        Set .Configuration = iConf
        .To = "chuck@bne27.com.au"
        .CC = ""
        .BCC = ""
        .From = """Ron"" <ron@something.nl>"
        .Subject = "Important message"
        .TextBody = strbody
        .send
    End With

    Set iMsg = Nothing
    Set iConf = Nothing
    Set Flds = Nothing
End Sub
Attribute VB_Name = "Module4"
Option Explicit
Const GET_FIRST As Boolean = True

Sub Test()
Dim sAnagram As String
Dim x
  sAnagram = "VASEEIV"
  Call Anagram(sAnagram, GET_FIRST)
  
    x = Application.CheckSpelling(sAnagram)
    If x = True Then
        MsgBox sAnagram
    ' Add LettersString to list of acceptable words
    End If
  'MsgBox sAnagram
  While Anagram(sAnagram)
        x = Application.CheckSpelling(sAnagram)
        If x = True Then
            If vbCancel = MsgBox(sAnagram + vbNewLine + vbNewLine + _
                " Continue?", vbOKCancel, "Anagram") Then
            Exit Sub
        End If
    End If
  Wend
End Sub

Function Anagram(AWord As String, _
         Optional FirstOrNext As Boolean = False) As Boolean
  If FirstOrNext = GET_FIRST Then
    Call SortLetters(AWord)
    Anagram = True
  Else
    Anagram = NextPermutation(AWord)
  End If
End Function

Private Sub SortLetters(AWord)
Dim i As Integer
Dim j As Integer
Dim s As String
  For i = 1 To Len(AWord) - 1
    For j = i + 1 To Len(AWord)
      If Mid(AWord, i, 1) > Mid(AWord, j, 1) Then
        s = Mid(AWord, i, 1)
        Mid(AWord, i, 1) = Mid(AWord, j, 1)
        Mid(AWord, j, 1) = s
      End If
    Next j
  Next i
End Sub

Private Function NextPermutation(AWord As String) As Boolean
' Algorithm: Working from right to left, find the "critical"
' position.  The "critical" position is the first letter that
' is lower in sort order than the one at its right.
' Exchange the "critical" position character with the
' smallest one from the letters to the right of it that is
' larger than the "critical" letter.  Then sort all letters
' to the right of the "critical" letter in ascending order.
' If no "critical" position is found, return False.
Dim i As Integer
Dim pCrit As Integer
Dim pSmallest As Integer
Dim sSmallest As String
Dim sCrit As String
Dim sLeft As String
Dim sRight As String

  ' Find "critical" position
  For i = Len(AWord) To 2 Step -1
    If Mid(AWord, i - 1, 1) < Mid(AWord, i, 1) Then
      pCrit = i - 1
      Exit For
    End If
  Next i
  If pCrit = 0 Then
    NextPermutation = False
  Else
  
    ' Find smallest letter larger than critical
    sSmallest = "z"
    sCrit = Mid(AWord, pCrit, 1)
    For i = pCrit + 1 To Len(AWord)
      If Mid(AWord, i, 1) > sCrit Then
        If Mid(AWord, i, 1) < sSmallest Then
          pSmallest = i
          sSmallest = Mid(AWord, pSmallest, 1)
        End If
      End If
    Next i
  
    ' Swap with critical
    Mid(AWord, pCrit, 1) = sSmallest
    Mid(AWord, pSmallest, 1) = sCrit
    
    ' Sort remaining letters
    sLeft = Mid(AWord, 1, pCrit)
    sRight = Mid(AWord, pCrit + 1)
    Call SortLetters(sRight)
    AWord = sLeft + sRight
    NextPermutation = True
  End If
End Function
Sub testBAT()


'Shell "C:\My Files\Junk\MyBat.bat"


End Sub
Sub temp54442()
'use this to mark tracktimeshistory with electronic tracks
'Dim Delimiter As String
Dim TextFile As Integer
Dim FilePath As String
Dim FileContent As String
Dim LineArray() As String

Dim lastRow As Long
Dim myX As Range

Dim f As Long
Dim tempTrack As String

'Inputs
  'Delimiter = "|"
  FilePath = "C:\FILES\Horses\Results\All\Electronictemp.txt"
  
'Open the text file in a Read State
  TextFile = FreeFile
  Open FilePath For Input As TextFile
  
'Store file content inside a variable
  FileContent = Input(LOF(TextFile), TextFile)

'Close Text File
  Close TextFile

LineArray() = Split(FileContent, vbCrLf)

lastRow = Range("A65536").End(xlUp).Row

For Each myX In Range("A2:A" & lastRow)

    For f = LBound(LineArray) To UBound(LineArray)
        If Len(Trim(LineArray(f))) <> 0 Then
            tempTrack = Trim(LineArray(f))
            If tempTrack = myX.value Then
                myX.Interior.ColorIndex = 6
                GoTo found:
            End If
        End If
    Next f
found:
Next myX

End Sub
Attribute VB_Name = "NRL"
Option Explicit
Option Base 1
Dim cntPlayers As Long


Sub GetNRLStats_NOT_THIS_SITE_NOW()
'04/07/16 chuck
'Requires 'Games.txt' to be generated first
'Also requires 'player_numbers.txt' which updates when the GetOnePlayerStats script runs
' Each year change the season id in the myA url, ie seasonid/44/default.aspx
' Also change the year in "2016 Total"

    Dim urlName2        As String
    Dim oHttp2          As Object
    Dim mySite2         As String
    Dim myB             As String
    Dim NoStats         As Boolean
    Dim TextFile        As Integer
    Dim FilePath        As String
    Dim FileContent     As String
    Dim LineArray()     As String
    Dim DataArray()     As String
    Dim TempArray()     As String
    Dim x               As Long
    
    Dim oFS As Object
    Dim creationDate As Date
    Dim PlayerName As String
    Dim PlayerNo As String

    Dim aClub As String
    Dim ClubTmp As String
    
    Dim PlayerPath As String
    Dim playerFile As Integer
    Dim PlayerContent As String
    Dim playerArray() As String
    Dim y As Long
    
    Dim myStats As String
    Dim StatFileName As String
    Dim FileNum As Integer

Dim objPing As Object
Dim objStatus As Object
Dim Host As String

Set oFS = CreateObject("Scripting.FileSystemObject")

'Text file containing players and their playerID

PlayerPath = "C:\FILES\NRL\static_data\player_numbers.txt"
If Dir(PlayerPath) = "" Then
    MsgBox "The file 'player_numbers.txt' cannot be found"
    GoTo NoFile:
End If
playerFile = FreeFile
Open PlayerPath For Input As playerFile
PlayerContent = Input(LOF(playerFile), playerFile)
Close playerFile
playerArray() = Split(PlayerContent, vbNewLine)

'Text file containing the current games
FilePath = "C:\FILES\NRL\data\Games.txt"
If Dir(FilePath) = "" Then
    MsgBox "The file 'Games.txt' cannot be found"
    GoTo NoFile:
Else '
    'creationDate = oFS.GetFile(FilePath).DateCreated
    creationDate = oFS.GetFile(FilePath).DateLastModified
    If creationDate < Now - TimeSerial(30, 0, 0) Then
        MsgBox "The file 'Games.txt' is over 30 hours old, renew Games.txt"
        GoTo NoFile:
    End If
End If
Application.DisplayStatusBar = True

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual
Application.EnableEvents = False

'Open the text file in a Read State
TextFile = FreeFile
Open FilePath For Input As TextFile
  
'Store file content inside a variable
FileContent = Input(LOF(TextFile), TextFile)

'Close Text File
Close TextFile

'Separate Out lines of data
'LineArray() = Split(FileContent, vbCrLf)
LineArray() = Split(FileContent, vbNewLine)

'Read Data into an Array Variable
For x = LBound(LineArray) To UBound(LineArray)
    NoStats = False
    DoEvents 'stops the 'not responding' message
    
    Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & x & " of " & UBound(LineArray)

    'On Error Resume Next
    If Len(Trim(LineArray(x))) <> 0 Then
        PlayerName = Split(LineArray(x), "^")(4) 'got the name
        For y = 0 To UBound(playerArray)
            If playerArray(y) <> "" Then 'blank line / last line ie player not found
                If PlayerName = Split(playerArray(y), "^")(0) Then
                    PlayerNo = Split(playerArray(y), "^")(1)
                    Exit For 'got the number
                End If
            End If
        Next y
        ClubTmp = Split(LineArray(x), "^")(2) 'got the Clubname
        ClubTmp = Replace(ClubTmp, "(home)", "")
        ClubTmp = Replace(ClubTmp, "(away)", "")
        Select Case ClubTmp
        Case "Broncos"
            aClub = "1"
        Case "Raiders"
            aClub = "2"
        Case "Bulldogs"
            aClub = "3"
        Case "Sharks"
            aClub = "4"
        Case "Sea Eagles"
            aClub = "5"
        Case "Storm"
            aClub = "6"
        Case "Knights"
            aClub = "7"
        Case "Cowboys"
            aClub = "8"
        Case "Eels"
            aClub = "9"
        Case "Panthers"
            aClub = "10"
        Case "Rabbitohs"
            aClub = "11"
        Case "Dragons"
            aClub = "12"
        Case "Roosters"
            aClub = "13"
        Case "Warriors"
            aClub = "14"
        Case "Tigers"
            aClub = "15"
        Case "Titans"
            aClub = "16"
        End Select
        urlName2 = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/" & aClub & "/playerid/" & PlayerNo & "/seasonid/45/default.aspx"
            'http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/1/playerid/111/seasonid/45/default.aspx 'false
            'http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/13/playerid/464/seasonid/45/default.aspx 'true
    'Host = "nrl.com"
    'Set objPing = GetObject("winmgmts:{impersonationLevel=impersonate}"). _
        ExecQuery("Select * from Win32_PingStatus Where Address = '" & Host & "'")
    'For Each objStatus In objPing
    '    Do While objStatus.StatusCode <> 0
    '        DoEvents
    '    Loop
    'Next objStatus
        
        Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
        oHttp2.Open "GET", urlName2, False
        oHttp2.send
        Application.Wait (Now + TimeValue("00:00:01"))
        Do While oHttp2.READYSTATE <> 4
            DoEvents
        Loop
        Do While oHttp2.Status <> 200
            DoEvents
        Loop
        mySite2 = oHttp2.responseText 'a contains source code of website
        Set oHttp2 = Nothing
        If InStr(1, mySite2, "There Was An Error Initializing The Module") = 0 Then
            mySite2 = strClean(mySite2)
            myB = Mid(mySite2, InStr(1, mySite2, ">2017 Total<"), Len(mySite2))
            myB = Replace(myB, Chr(32), "") 'space
            myB = Replace(myB, ">2017Total</th>", "")
            myB = Left(myB, InStr(1, myB, "</tr>") - 1)
            myB = Left(myB, InStr(1, myB, "<tdclass=") - 1)
            myB = Replace(myB, "<td>", "|")
            myB = Replace(myB, "</td>", "")
            myB = Replace(myB, "-", "0")
            myB = Replace(myB, ">", "")
            myB = Replace(myB, "<", "")
            myB = Replace(myB, "/", "")
            myB = Replace(myB, """", "")
            
            myB = Trim(myB)
            If myB = "" Then
                NoStats = True
            End If
'put the data onto the end of the stats file
            myStats = PlayerName & "^" & PlayerName & "^^"
            If NoStats = False Then
                myStats = myStats & Split(myB, "|")(1) & "^"
                myStats = myStats & Split(myB, "|")(2) & "^"
                myStats = myStats & Split(myB, "|")(3) & "^"
                myStats = myStats & Split(myB, "|")(4) & "^"
                myStats = myStats & Split(myB, "|")(5) & "^"
                myStats = myStats & Split(myB, "|")(6) & "^"
                myStats = myStats & Split(myB, "|")(7) & "^"
                myStats = myStats & Split(myB, "|")(8) & "^"
                myStats = myStats & Split(myB, "|")(9) & "^"
                myStats = myStats & Split(myB, "|")(10) & "^"
                myStats = myStats & Split(myB, "|")(11) & "^"
                myStats = myStats & Split(myB, "|")(12)
            Else
                myStats = myStats & "0^0^0^0^0^0^0^0^0^0^0^0"
            End If
        
            StatFileName = "C:\FILES\NRL\data\PlayerStats.txt"

            FileNum = FreeFile
            Open StatFileName For Append As #FileNum
            Print #FileNum, myStats
            Close #FileNum
    
            myB = ""
        End If
        mySite2 = ""
        PlayerName = ""
        PlayerNo = ""
        ClubTmp = ""
        aClub = ""
    End If
Next x
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True

MsgBox ("Da Da   done")
'Application.DisplayStatusBar = False
Application.StatusBar = ""
NoFile:
End Sub
Private Sub GetNRLStats_not_working()
'5/2/18 chuck
Dim pageHolder     As WebElement
Dim elements        As WebElementCollection
Dim element         As WebElement
Dim element1s       As WebElementCollection
Dim element1        As WebElement
Dim element2s       As WebElementCollection
Dim element2        As WebElement
Dim pageElements    As WebElementCollection
Dim pageElement     As WebElement
Dim urlName2        As String
Dim oHttp2          As Object
Dim mySite2         As String
Dim myB             As String
Dim TextFile        As Integer
Dim FilePath        As String
Dim FileContent     As String
Dim LineArray()     As String
Dim LineContent     As String
Dim x               As Integer
    
Dim myStats         As String
Dim StatFileName    As String
Dim FileNum         As Integer

Dim PageArray()     As String
Dim z               As String

Dim y               As Integer
Dim Pages           As Integer
Dim pageChk         As Integer

'Dim driver As New SeleniumWrapper.WebDriver
Dim driver As New WebDriver
'Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

'Pages = 23 'number of pages
'Pages = InputBox(Prompt:="Enter number of pages of stats", Title:="STATS", Default:="14")

StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

Application.DisplayStatusBar = True
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Application.StatusBar = String(3, ChrW(9609)) & "  Waiting on the NRL webpage."
StatFileName = "C:\FILES\NRL\data\PlayerStats.txt"

FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

'https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?sortBy=games
'https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?pageNumber=1
'https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?sortBy=games&pageNumber=2
'urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?sortBy=games&pageNumber=1"
urlName2 = "http://www.foxsports.com.au/nrl/nrl-premiership/stats/"
'Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
'oHttp2.Open "GET", urlName2, False
'oHttp2.send
'Application.Wait (Now + TimeValue("00:00:01"))
'Do While oHttp2.READYSTATE <> 4
'    DoEvents
'Loop
'Do While oHttp2.Status <> 200
'    DoEvents
'Loop
'-------------------

'driver.Start "phantomjs", urlName2
driver.Start "chrome", urlName2
driver.setImplicitWait 10000
driver.Wait (500)

    'myURL = "/"
    'https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?pageNumber=2
'driver.get "/players?sortBy=games&pageNumber=2", Raise:=False
driver.get "/players?pageNumber=1", Raise:=False
driver.Wait (1000)
driver.maximizeWindow
mySite2 = driver.PageSource
'mySite2 = driver.getHtmlSource
'Stop
'                                                 /html/body/div[4]/main/div[1]/article/div[3]/div/div/div/div/div[1]
    'Set startElement = driver.findElementByXPath("//*[@id='js-local-datetime']/div[1]/article/div[2]/div/div/div/div/div[1]")
'Set startElement = driver.findElementByXPath("/html/body/div[4]/main/div[1]/article/div[3]/div/div/div/div/div[1]")
    
'-----------------

'mySite2 = oHttp2.responseText 'a contains source code of website
PageArray() = Split(mySite2, "Show Page")
z = Left(PageArray(4), 10)
z = Left(z, InStr(1, z, """>") - 1)
z = Trim(z)
Pages = z
'Set oHttp2 = Nothing
urlName2 = ""
'mySite2 = ""
z = ""
'Stop
'nextPage:
For x = 1 To Pages
'    Select Case x
'        Case 5, 10, 15, 20, 25, 30
'            driver.stop
'            Stop
'            driver.Start "chrome", urlName2
'            driver.setImplicitWait 10000
'            driver.Wait (500)
'            driver.get "/players?pageNumber=" & x, Raise:=False
'            driver.Wait (1000)
'            driver.maximizeWindow
'            mySite2 = driver.PageSource
'    End Select

    Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & x & " of " & Pages & " pages"
'               https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?pageNumber=2
    'urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?sortBy=games&pageNumber=" & x
    'urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?pageNumber=1"
    'urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/"
    'urlName2 = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/" & aClub & "/playerid/" & PlayerNo & "/seasonid/45/default.aspx"
            'http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/1/playerid/111/seasonid/45/default.aspx 'false
            'http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/13/playerid/464/seasonid/45/default.aspx 'true
    'Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
    'Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    'oHttp2.Open "GET", urlName2, False
    'oHttp2.send
    'Application.Wait (Now + TimeValue("00:00:01"))
    'Do While oHttp2.READYSTATE <> 4
    '    DoEvents
    'Loop
    'Do While oHttp2.Status <> 200
    '    DoEvents
    'Loop
    'mySite2 = oHttp2.responseText 'a contains source code of website
    'Set oHttp2 = Nothing
'    driver.get "/players?pageNumber=" & x, Raise:=False
'    driver.Wait (1000)
    'mySite2 = driver.getHtmlSource
'    mySite2 = driver.PageSource

'##### 'for testing
'If x = 2 Then
'Dim testFile As String
'Dim fm As Long
'testFile = "C:\FILES\NRL\data\test.txt"

'fm = FreeFile
'Open testFile For Append As #fm
'Print #fm, mySite2
'Close #fm
'Stop
'End If
'#####

    'Stop
    'Do Until InStr(1, mySite2, "fiso-lab-table__row-heading-primary-data") > 0
    '    Application.Wait (Now + TimeValue("00:00:01"))
    'Loop
    mySite2 = Mid(mySite2, InStr(1, mySite2, "fiso-lab-table__row-heading-primary-data"), Len(mySite2))
    mySite2 = Left(mySite2, InStr(1, mySite2, "fiso-lab-pagination") - 1)
    mySite2 = strClean(mySite2)

    If InStr(1, mySite2, "There Was An Error Initializing The Module") = 0 Then
        myB = mySite2
        myB = Replace(myB, "fiso-lab-table__row-heading-primary-data", Chr(13)) 'find each record, add carriage return
        myB = Replace(myB, "<td class=", "|")
        myB = Replace(myB, "<span class=", "|")
        myB = Replace(myB, "<tr>", "|")
        myB = Replace(myB, "</tbody>", "|")
'
        myB = Replace(myB, "</span>", "")
        myB = Replace(myB, "</td>", "")
    
        myB = Replace(myB, "fiso-lab-table__row-heading-secondary-data", "")
        myB = Replace(myB, "fiso-lab-table__sorted-column", "")
        myB = Replace(myB, " title=", "")
        myB = Replace(myB, "</th>", "")
        myB = Replace(myB, "</tr>", "")
    
        myB = Replace(myB, "<", "")
        myB = Replace(myB, "/", "")
        myB = Replace(myB, """", "")
            
        myB = Trim(myB)
        If myB = "" Then
          '  NoStats = True
        End If
        'Stop
        LineArray() = Split(myB, Chr(13))
        For y = LBound(LineArray) To UBound(LineArray)
            'NoStats = False
            DoEvents 'stops the 'not responding' message
    
 '           Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & y & " of " & UBound(LineArray)

        'On Error Resume Next
            If Len(Trim(LineArray(y))) <> 0 Then
                'Debug.Print y & " is " & LineArray(y)
                LineContent = LineArray(y)
                LineContent = Replace(LineContent, ">", "|", 1, 1) 'replace the first one only
                LineContent = Replace(LineContent, ">", "") 'replace all the rest
                'If NoStats = False Then
                    myStats = myStats & Split(LineContent, "|")(0) & "^" 'full name
                    myStats = myStats & Split(LineContent, "|")(1) & "^" 'initial and surname
                    LineContent = Replace(LineContent, "-", "0")            'now replace the dash with a zero
                    LineContent = Replace(LineContent, ",", "")             'replace the comma
                    myStats = myStats & Split(LineContent, "|")(2) & "^"
                    myStats = myStats & Split(LineContent, "|")(3) & "^"
                    myStats = myStats & Split(LineContent, "|")(4) & "^"
                    myStats = myStats & Split(LineContent, "|")(5) & "^"
                    myStats = myStats & Split(LineContent, "|")(6) & "^"
                    myStats = myStats & Split(LineContent, "|")(7) & "^"
                    myStats = myStats & Split(LineContent, "|")(8) & "^"
                    myStats = myStats & Split(LineContent, "|")(9) & "^"
                    myStats = myStats & Split(LineContent, "|")(10) & "^"
                    myStats = myStats & Split(LineContent, "|")(11) & "^"
                    myStats = myStats & Split(LineContent, "|")(12) & "^"
                    myStats = myStats & Split(LineContent, "|")(13) & "^"
                    myStats = myStats & Split(LineContent, "|")(14) & "^"
                    myStats = myStats & Split(LineContent, "|")(15) & "^"
                    myStats = myStats & Split(LineContent, "|")(16) & "^"
                    myStats = myStats & Split(LineContent, "|")(17) & "^"
                    myStats = myStats & Split(LineContent, "|")(18) & "^"
                    myStats = myStats & Split(LineContent, "|")(19) & "^"
                    myStats = myStats & Split(LineContent, "|")(20) & "^"
                    myStats = myStats & Split(LineContent, "|")(21) & "^"
                    myStats = myStats & Split(LineContent, "|")(22) & "^"
                    myStats = myStats & Split(LineContent, "|")(23) & "^"
                    myStats = myStats & Split(LineContent, "|")(24)
                'Else
                '    myStats = myStats & "0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0"
                    '                    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
                'End If
                'Debug.Print myStats
                'Stop
                Print #FileNum, myStats
            End If
            LineContent = ""
            myStats = ""
skiphere:
           'Stop
        Next y
        mySite2 = ""
    End If
    mySite2 = ""
    myB = ""
    'Stop
    If x <> Pages Then
    '/html/body/div[5]/main/div
    '/html/body/div[7]/main/div
    '/html/body/div[7]
    '/html/body
        'driver.refreshAndWait

        'pageHolder = driver.findElementByXPath("/html/body/div[5]/main/div")
        Set pageHolder = driver.findElementByXPath("/html/body")
        'Set elements = startElement.findElementsByXPath(".//*") 'this one returns all decendant children, not just immediate
        Set elements = pageHolder.findElementsByXPath("./*") 'this one returns immediate children only
        For Each element In elements
            If element.getAttribute("class") = "container container--bordered" Then
                'Debug.Print element.getAttribute("class")
                'Debug.Print element.getCssValue
                'Stop
        'Next element
                Set element1s = element.findElementsByTagName("section")
                For Each element1 In element1s
                    If element1.getAttribute("class") = "fsui-normalise fiso-widget-lab fiso-lab-series-seasons-stats" Then
                        Set element2s = element1.findElementsByTagName("nav")
                        For Each element2 In element2s
                            If element2.getAttribute("class") = "fiso-lab-pagination" Then
                                Set pageElements = element2.findElementsByTagName("button")
                '                  element.findElementsByTagName
                                For Each pageElement In pageElements
                                    If pageElement.getAttribute("class") = "fiso-lab-pagination__button fiso-lab-pagination__button--next" Then
                                        'Debug.Print pageElement.text
                                        'pageChk = pageElement.text
                                        'If pageChk = x + 1 Then
                                            'Stop
                                            pageElement.Click
                                            driver.Wait (5000)
                                            'driver.Refresh
                                        
                                            mySite2 = driver.PageSource
                                            GoTo NewPage:
                                        'elseif
                                        'End If
                                    End If
                                Next pageElement
                            End If
                        Next element2
                    End If
                Next element1
            End If
        Next element
    End If
NewPage:
Next x

Close #FileNum
driver.stop
Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True

MsgBox ("Da Da   done")
'Application.DisplayStatusBar = False
Application.StatusBar = ""
NoFile:
End Sub
Private Sub GetNRLStats()
Dim urlName2        As String
Dim oHttp2          As Object
Dim mySite2         As String
Dim myB             As String
Dim TextFile        As Integer
Dim FilePath        As String
Dim FileContent     As String
Dim LineArray()     As String
Dim LineContent     As String
Dim x               As Integer
    
Dim myStats         As String
Dim StatFileName    As String
Dim FileNum         As Integer

Dim PageArray()     As String
Dim z               As String

Dim y               As Integer
Dim Pages           As Integer

Dim myName          As String
Dim myIname         As String


Application.DisplayStatusBar = True
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False
Application.StatusBar = String(3, ChrW(9609)) & "  Waiting on the NRL webpage."
StatFileName = "C:\FILES\NRL\data\PlayerStats.txt"

FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

urlName2 = "http://www.foxsports.com.au/nrl/nrl-premiership/stats//players?pageNumber=1"
Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
oHttp2.Open "GET", urlName2, False
oHttp2.send
Application.Wait (Now + TimeValue("00:00:01"))
Do While oHttp2.READYSTATE <> 4
    DoEvents
Loop
Do While oHttp2.Status <> 200
    DoEvents
Loop

mySite2 = oHttp2.responseText 'a contains source code of website
PageArray() = Split(mySite2, "Show Page")
z = Left(PageArray(4), 10)
z = Left(z, InStr(1, z, """>") - 1)
z = Trim(z)
Pages = z
Set oHttp2 = Nothing
urlName2 = ""
mySite2 = ""
z = ""
'Stop
'nextPage:
For x = 1 To Pages

    Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & x & " of " & Pages & " pages"
'               https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?pageNumber=2
    'urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?sortBy=games&pageNumber=" & x
    urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/players?pageNumber=" & x
    'urlName2 = "https://www.foxsports.com.au/nrl/nrl-premiership/stats/"
    'urlName2 = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/" & aClub & "/playerid/" & PlayerNo & "/seasonid/45/default.aspx"
            'http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/1/playerid/111/seasonid/45/default.aspx 'false
            'http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/13/playerid/464/seasonid/45/default.aspx 'true
    'Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
    Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    oHttp2.Open "GET", urlName2, False
    oHttp2.send
    Application.Wait (Now + TimeValue("00:00:01"))
    Do While oHttp2.READYSTATE <> 4
        DoEvents
    Loop
    Do While oHttp2.Status <> 200
        DoEvents
    Loop
    mySite2 = oHttp2.responseText 'a contains source code of website
    Set oHttp2 = Nothing
    
    mySite2 = Mid(mySite2, InStr(1, mySite2, "fiso-lab-table__row-heading-primary-data"), Len(mySite2))
    mySite2 = Left(mySite2, InStr(1, mySite2, "fiso-lab-pagination") - 1)
    mySite2 = strClean(mySite2)

    If InStr(1, mySite2, "There Was An Error Initializing The Module") = 0 Then
        myB = mySite2
        myB = Replace(myB, "fiso-lab-table__row-heading-primary-data", Chr(13)) 'find each record, add carriage return
        myB = Replace(myB, "<td class=", "|")
        myB = Replace(myB, "<span class=", "|")
        myB = Replace(myB, "<tr>", "|")
        myB = Replace(myB, "</tbody>", "|")
'
        myB = Replace(myB, "</span>", "")
        myB = Replace(myB, "</td>", "")
    
        myB = Replace(myB, "fiso-lab-table__row-heading-secondary-data", "")
        myB = Replace(myB, "fiso-lab-table__sorted-column", "")
        myB = Replace(myB, " title=", "")
        myB = Replace(myB, "</th>", "")
        myB = Replace(myB, "</tr>", "")
    
        myB = Replace(myB, "<", "")
        myB = Replace(myB, "/", "")
        myB = Replace(myB, """", "")
            
        myB = Trim(myB)
        If myB = "" Then
          '  NoStats = True
        End If
        'Stop
        LineArray() = Split(myB, Chr(13))
        For y = LBound(LineArray) To UBound(LineArray)
            'NoStats = False
            DoEvents 'stops the 'not responding' message
    
 '           Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & y & " of " & UBound(LineArray)

        'On Error Resume Next
            If Len(Trim(LineArray(y))) <> 0 Then
                'Debug.Print y & " is " & LineArray(y)
                LineContent = LineArray(y)
                LineContent = Replace(LineContent, ">", "|", 1, 1) 'replace the first one only
                LineContent = Replace(LineContent, ">", "") 'replace all the rest
                'If NoStats = False Then
                    myName = Split(LineContent, "|")(0)
                    myName = Replace(myName, "'", "")
                    'myStats = myStats & Split(LineContent, "|")(0) & "^" 'full name
                    myStats = myStats & myName & "^"                      'full name
                    myIname = Split(LineContent, "|")(1)
                    myIname = Replace(myIname, "'", "")
                    'myStats = myStats & Split(LineContent, "|")(1) & "^" 'initial and surname
                    myStats = myStats & myIname & "^"                     'initial and surname
                    LineContent = Replace(LineContent, "-", "0")            'now replace the dash with a zero
                    LineContent = Replace(LineContent, ",", "")             'replace the comma
                    myStats = myStats & Split(LineContent, "|")(2) & "^"
                    myStats = myStats & Split(LineContent, "|")(3) & "^"
                    myStats = myStats & Split(LineContent, "|")(4) & "^"
                    myStats = myStats & Split(LineContent, "|")(5) & "^"
                    myStats = myStats & Split(LineContent, "|")(6) & "^"
                    myStats = myStats & Split(LineContent, "|")(7) & "^"
                    myStats = myStats & Split(LineContent, "|")(8) & "^"
                    myStats = myStats & Split(LineContent, "|")(9) & "^"
                    myStats = myStats & Split(LineContent, "|")(10) & "^"
                    myStats = myStats & Split(LineContent, "|")(11) & "^"
                    myStats = myStats & Split(LineContent, "|")(12) & "^"
                    myStats = myStats & Split(LineContent, "|")(13) & "^"
                    myStats = myStats & Split(LineContent, "|")(14) & "^"
                    myStats = myStats & Split(LineContent, "|")(15) & "^"
                    myStats = myStats & Split(LineContent, "|")(16) & "^"
                    myStats = myStats & Split(LineContent, "|")(17) & "^"
                    myStats = myStats & Split(LineContent, "|")(18) & "^"
                    myStats = myStats & Split(LineContent, "|")(19) & "^"
                    myStats = myStats & Split(LineContent, "|")(20) & "^"
                    myStats = myStats & Split(LineContent, "|")(21) & "^"
                    myStats = myStats & Split(LineContent, "|")(22) & "^"
                    myStats = myStats & Split(LineContent, "|")(23) & "^"
                    myStats = myStats & Split(LineContent, "|")(24)
                'Else
                '    myStats = myStats & "0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0"
                    '                    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
                'End If
                'Debug.Print myStats
                'Stop
                Print #FileNum, myStats
            End If
            LineContent = ""
            myStats = ""
skiphere:
           'Stop
        Next y
        mySite2 = ""
    End If
    mySite2 = ""
    myB = ""
Next x

Close #FileNum
'driver.stop
Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True

MsgBox ("Da Da   done")
'Application.DisplayStatusBar = False
Application.StatusBar = ""
NoFile:
End Sub
Sub GetOnePlayerStats()
'25/5/16 chuck
' Each year change the season id in the myA url
' adds one player stats to the stats file
'8/6/16 changed to WHTTP object
    Dim urlName2        As String
    'Dim urlName3        As String
    'Dim oHttp2          As Object
    Dim WHTTP           As Object
    Dim mySite2         As String
    Dim myB             As String
    Dim myStats         As String
    
    Dim FullName        As String
    Dim PlayerID        As String
    Dim NoStats         As Boolean
    
    Dim rowNumber       As Long
    Dim ColNumber       As Long

    Dim StatFileName    As String
    Dim FileNum         As Integer
    Dim PlayersFileName    As String
    
    urlName2 = InputBox(Prompt:="Enter URL for this player", Title:="Player Profile")
    'urlName2 = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/16/playerid/468/seasonid/44/default.aspx"
    '            http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/14/playerid/6872/seasonid/44/default.aspx
    
    'urlName3 = Mid(urlName2, InStr(1, urlName2, "clubid"), Len(urlName2))
    'urlName3 = Left(urlName3, InStr(1, urlName3, "seasonid") - 1)
    PlayerID = Mid(urlName2, InStr(1, urlName2, "playerid") + 9, Len(urlName2))
    PlayerID = Left(PlayerID, InStr(1, PlayerID, "seasonid") - 2)
    
    'Set oHttp2 = CreateObject("MSXML2.XMLHTTP")
    'oHttp2.Open "GET", urlName2, False
    'oHttp2.send
    'mySite2 = oHttp2.responseText 'a contains source code of website
    'Set oHttp2 = Nothing
    Set WHTTP = CreateObject("WinHTTP.WinHTTPrequest.5.1")
    WHTTP.Open "GET", urlName2, False
    WHTTP.send

    Do While WHTTP.Status <> 200
        DoEvents
    Loop
    mySite2 = WHTTP.responseText 'a contains source code of website
    Set WHTTP = Nothing

    mySite2 = Replace(mySite2, Chr(10), "") '[Line Feed Return]
    mySite2 = Replace(mySite2, Chr(11), "") '[Shift+Enter]
    mySite2 = Replace(mySite2, Chr(13), "") '[Carriage Return]
    mySite2 = Replace(mySite2, Chr(9), "") '[Tab]
    FullName = Mid(mySite2, InStr(1, mySite2, "<title>") + 7, 200)
            
    FullName = Left(FullName, InStr(1, FullName, " -") - 1)
    FullName = Application.WorksheetFunction.Clean(FullName)
    FullName = Application.WorksheetFunction.Trim(FullName)
            
    myB = RegExpFind3(mySite2, ">2017 Total<[^*]+", 1, False)
    'myB = Application.WorksheetFunction.Clean(myB)
    'myB = Application.WorksheetFunction.Trim(myB)
    myB = Replace(myB, Chr(32), "")
            
    myB = Replace(myB, ">2017Total</th>", "")
    myB = Left(myB, InStr(1, myB, "</tr>") - 1)
            'MsgBox myB
    myB = Left(myB, InStr(1, myB, "<tdclass=") - 1)
    'myB = Replace(myB, "<tdclass="""">", "|")
    myB = Replace(myB, "<td>", "|")
    myB = Replace(myB, "</td>", "")
    myB = Replace(myB, "-", "0")
    myB = Replace(myB, ">", "")
    myB = Replace(myB, "<", "")
    myB = Replace(myB, "/", "")
    myB = Replace(myB, """", "")
    myB = Replace(myB, Chr(146), Chr(39)) 'standardise the ' char
            'fix any name issues Josh Ailoai
    myB = Replace(myB, "Josh Ailoai", "Josh Aloiai")
    'MsgBox (myB)
            
    myB = Trim(myB)
    If myB = "" Then
        NoStats = True
    End If
'put the data onto the end of the stats file
    myStats = FullName & "^" & FullName & "^^"
    If NoStats = False Then
        myStats = myStats & Split(myB, "|")(1) & "^"
        myStats = myStats & Split(myB, "|")(2) & "^"
        myStats = myStats & Split(myB, "|")(3) & "^"
        myStats = myStats & Split(myB, "|")(4) & "^"
        myStats = myStats & Split(myB, "|")(5) & "^"
        myStats = myStats & Split(myB, "|")(6) & "^"
        myStats = myStats & Split(myB, "|")(7) & "^"
        myStats = myStats & Split(myB, "|")(8) & "^"
        myStats = myStats & Split(myB, "|")(9) & "^"
        myStats = myStats & Split(myB, "|")(10) & "^"
        myStats = myStats & Split(myB, "|")(11) & "^"
        myStats = myStats & Split(myB, "|")(12)
    Else
        myStats = myStats & "0^0^0^0^0^0^0^0^0^0^0^0"
    End If
        
    StatFileName = "C:\FILES\NRL\data\PlayerStats.txt"

    FileNum = FreeFile
    Open StatFileName For Append As #FileNum
    Print #FileNum, myStats
    Close #FileNum
    
    'PlayersFileName = "C:\FILES\NRL\static_data\players.txt"
    PlayersFileName = "C:\FILES\NRL\static_data\player_numbers.txt"

    FileNum = FreeFile
    Open PlayersFileName For Append As #FileNum
    'Print #FileNum, urlName3
    Print #FileNum, FullName & "^" & PlayerID
    Close #FileNum
    
    myB = ""
    FullName = ""
    myStats = ""
    'Set oHttp2 = Nothing
    mySite2 = ""
    
MsgBox ("Da Da   done")
End Sub

Function RegExpFind(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
        cntPlayers = TheMatches.count ' count how many matches
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function
Function RegExpFind2(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind2 = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind2 = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind2 = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind2 = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind2 = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind2 = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function
Function RegExpFind3(LookIn As String, PatternStr As String, Optional pos, _
    Optional MatchCase As Boolean = True)

    ' This function uses Regular Expressions to parse a string (LookIn), and return matches to a
    ' pattern (PatternStr).  Use Pos to indicate which match you want:
    ' Pos omitted               : function returns a zero-based array of all matches
    ' Pos = 0                   : the last match
    ' Pos = 1                   : the first match
    ' Pos = 2                   : the second match
    ' Pos = <positive integer>  : the Nth match
    ' If Pos is greater than the number of matches, is negative, or is non-numeric, the function
    ' returns an empty string.  If no match is found, the function returns an empty string
    
    ' If MatchCase is omitted or True (default for RegExp) then the Pattern must match case (and
    ' thus you may have to use [a-zA-Z] instead of just [a-z] or [A-Z]).
    
    ' If you use this function in Excel, you can use range references for any of the arguments.
    ' If you use this in Excel and return the full array, make sure to set up the formula as an
    ' array formula.  If you need the array formula to go down a column, use TRANSPOSE()
    
    Dim RegX As Object
    Dim TheMatches As Object
    Dim Answer() As String
    Dim Counter As Long
    
    ' Evaluate Pos.  If it is there, it must be numeric and converted to Long
    If Not IsMissing(pos) Then
        If Not IsNumeric(pos) Then
            RegExpFind3 = ""
            Exit Function
        Else
            pos = CLng(pos)
        End If
    End If
    
    ' Create instance of RegExp object
    Set RegX = CreateObject("VBScript.RegExp")
    With RegX
        .Pattern = PatternStr
        .Global = True
        .IgnoreCase = Not MatchCase
    End With
        
    ' Test to see if there are any matches
    If RegX.Test(LookIn) Then
        
        ' Run RegExp to get the matches, which are returned as a zero-based collection
        Set TheMatches = RegX.Execute(LookIn)
        
        ' If Pos is missing, user wants array of all matches.  Build it and assign it as the
        ' function's return value
        If IsMissing(pos) Then
            ReDim Answer(0 To TheMatches.count - 1) As String
            For Counter = 0 To UBound(Answer)
                Answer(Counter) = TheMatches(Counter)
            Next
            RegExpFind3 = Answer
        
        ' User wanted the Nth match (or last match, if Pos = 0).  Get the Nth value, if possible
        Else
            Select Case pos
                Case 0                          ' Last match
                    RegExpFind3 = TheMatches(TheMatches.count - 1)
                Case 1 To TheMatches.count      ' Nth match
                    RegExpFind3 = TheMatches(pos - 1)
                Case Else                       ' Invalid item number
                    RegExpFind3 = ""
            End Select
        End If
    
    ' If there are no matches, return empty string
    Else
        RegExpFind3 = ""
    End If
    
    ' Release object variables
    Set RegX = Nothing
    Set TheMatches = Nothing
    
End Function
Private Sub SaveStatData()
    
Const Delimiter As String = "^" 'or "|,", vbTab, etc.
Dim myRecord As Range
Dim myField As Range
Dim nFileNum As Long
Dim lastRow As Long
Dim sOut As String
Dim fileSaveName As String
Dim lnCount As Integer
Dim clCount As Integer
         
Columns("A:U").Select
Selection.Columns.AutoFit '

lastRow = Range("A65536").End(xlUp).Row
If lastRow < 1 Then GoTo noData:
' lnCount = InputBox("How many Rows are you loading")
' clCount = InputBox("How many Columns are you loading")
    clCount = 15

' Name the file and where to save it
    fileSaveName = "C:\FILES\NRL\data\PlayerStats.txt"

    nFileNum = FreeFile
    Open fileSaveName For Output As #nFileNum
    For Each myRecord In Range("A1:A" & _
        Range("A" & Rows.count).End(xlUp).Row)
        With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
            sOut = sOut & Delimiter & Trim(myField.text)
            Next myField
                sOut = Mid(sOut, 2) ' this take off the first delimiter
'                Print #nFileNum, Mid(sOut, 2)
                Print #nFileNum, sOut
                sOut = Empty
        End With
    Next myRecord
    Close #nFileNum
    'close this sheet
noData:
'    MsgBox ("saveResultData")
    ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
    Workbooks.Add

End Sub
Sub getCurrentGames_OLD()
'games are no longer at this location
    Dim urlName As String
    Dim oHttp As Object
    Dim mySite As String
    Dim myA As String
    Dim myB As String
    
    Dim LogMessage As String
    Dim tLine As String
    Dim FileNum As Integer
    
'temporary holder of the data
    Const tempfile As String = "C:\tempfile.txt"
'if it already exists, delete it
    If Dir(tempfile) <> "" Then
        Kill tempfile
    End If

On Error Resume Next
'
'##########################
'    urlName = "http://www.nrl.com/News/OfficialTeamLists/tabid/10998/Default.aspx"
 '   urlName = "http://www.nrl.com/News/OfficialTeamLists/tabid/10998/Default.aspx"
 'urlName = "http://www.nrl.com/updated-round-1-nrl-team-lists/tabid/10874/newsid/84180/default.aspx"
 
 urlName = InputBox(Prompt:="Enter URL for this round games", Title:="URL")
 
    Set oHttp = CreateObject("MSXML2.XMLHTTP")
    ' Set oHttp = CreateObject("Microsoft.XMLHTTP")
    oHttp.Open "GET", urlName, False
    oHttp.send
    mySite = oHttp.responseText 'a contains source code of website
    myA = RegExpFind(mySite, "<div class=""game"">[^*]+", 1, False)
  '  myA = RegExpFind(mySite, "<div class=game>[^*]+", 1, False)
    myA = Replace(myA, Chr(13), "")
    myA = Replace(myA, Chr(11), "")
    myA = Application.WorksheetFunction.Clean(myA)
    myA = Application.WorksheetFunction.Trim(myA)
'    GoTo here: '<div class="articleShare
    myA = Left(myA, InStr(1, myA, "<div class=""articleShare") - 1) 'go to the end of the teams
   myA = Replace(myA, "<div class=""game"">", "")
    myA = Replace(myA, "<DIV class=game>", "")
    myA = Replace(myA, "<div class=""team"">", "")
    myA = Replace(myA, "<DIV class=team>", "")
   myA = Replace(myA, "<h3>", Chr(13)) 'the game
    myA = Replace(myA, "<H3>", Chr(13)) 'the game
    myA = Replace(myA, "<h4>", Chr(13) & Chr(9)) 'the team name line
    myA = Replace(myA, "<H4>", Chr(13) & Chr(9)) 'the team name line
    myA = Replace(myA, "</h3>", "") 'the game
  myA = Replace(myA, "</H3>", "") 'the game
  '  myA = Replace(myA, "</h4>", "") 'the team name line
 ' myA = Replace(myA, "</H4>", "") 'the team name line
     myA = Replace(myA, "</h4>", Chr(13) & Chr(9) & Chr(9)) 'the team name line
  myA = Replace(myA, "</H4>", Chr(13) & Chr(9) & Chr(9)) 'the team name line
    myA = Replace(myA, "</div>", "")
myA = Replace(myA, "</DIV>", "")
    myA = Replace(myA, "<p>", Chr(13) & Chr(9) & Chr(9)) 'start of the players - 2 tabs '
 myA = Replace(myA, "<P>", Chr(13) & Chr(9) & Chr(9)) 'start of the players - 2 tabs '
    myA = Replace(myA, "</p>", "")
 myA = Replace(myA, "</P>", "")
    myA = Replace(myA, "<br />", Chr(13) & Chr(9) & Chr(9)) 'between each player
 myA = Replace(myA, "<BR>", Chr(13) & Chr(9) & Chr(9)) 'between each player
    myA = Replace(myA, "<b>", "")
    myA = Replace(myA, "</B>", "")
    myA = Replace(myA, "</b>", "")
    myA = Replace(myA, "<DIV>", "") '<div>
    myA = Replace(myA, Chr(169), "") '|fffd| character
    myA = Replace(myA, Chr(150), Chr(45)) '- character
here:
      ' write the info out to a text file
    FileNum = FreeFile ' next file number
    Open tempfile For Append As #FileNum ' creates the file if it doesn't exist
    Print #FileNum, myA ' write information at the end of the text file
    Close #FileNum ' close the file
' Bring that file into Excel
    Workbooks.OpenText fileName:="C:\tempfile.txt", Origin:=xlWindows, _
        StartRow:=2, DataType:=xlDelimited, TextQualifier:=xlNone, _
        ConsecutiveDelimiter:=False, Tab:=True, FieldInfo:=Array(Array(1, 2), Array(2, 2), _
        Array(3, 2)), TrailingMinusNumbers:=True

Call tidyGameSheet
Call SaveGameData

Kill tempfile

End Sub
Sub getCurrentGames_string()
'OLD script to get the games when they are in string format
    
    Dim urlName         As String
    Dim oHttp           As Object
    Dim mySite          As String
    Dim myA             As String
    Dim myB             As String
    Dim myC             As String
    Dim venue           As String
    'Dim localTime       As String
    'Dim myDate          As Date
    'Dim myTime          As Date
    Dim HomeTeam        As String
    Dim AwayTeam        As String
    Dim Game            As String
    Dim myTeam          As String
    Dim TeamCount       As Integer
    Dim thePlayer       As String
    Dim thePosition     As Integer
    
    Dim mySplit()       As String
    Dim intN            As Integer
    Dim myPlayer()      As String
    Dim intP            As Integer
    Dim x As Integer
    
    
    'Dim rowNumber       As Long
    'Dim ColNumber       As Long
    Dim GameNo          As Long
    'Dim xRev            As Long
    'rowNumber = 1
    Dim GameFileName    As String
    Dim FileNum         As Integer
    'Dim iFileNum        As Integer
    'Dim MyTxtFile       As Variant
    Dim myForm As Form1
    Dim myTmp           As String
    
    
    Set myForm = New Form1
    Load myForm

    GameNo = 0

    
    GameFileName = "C:\FILES\NRL\data\Games.txt"

    FileNum = FreeFile
    Open GameFileName For Output As #FileNum 'overwrites file

 
    'urlName = InputBox(Prompt:="Enter URL for this round games", Title:="URL")
    urlName = InputBox(Prompt:="Enter URL for this round games", Title:="URL", Default:="https://www.nrl.com/news/2018/07/17/round-19-nrl-team-lists/")

 'urlName = "http://www.nrl.com/TeamsList/tabid/11656/roundid/1360/default.aspx"
    'Set oHttp = CreateObject("MSXML2.XMLHTTP")
    Set oHttp = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    ' Set oHttp = CreateObject("Microsoft.XMLHTTP")
    oHttp.Open "GET", urlName, False
    oHttp.send
    mySite = oHttp.responseText 'a contains source code of website
    Set oHttp = Nothing

    myA = Mid(mySite, InStr(1, mySite, "s-cms-content s-cms-content--article"), Len(mySite))
    myA = Left(myA, InStr(1, myA, "l-grid__cell l-grid__cell--100")) 'this contains all the games/teams
    'If InStr(1, myA, "teamsList__noData") > 0 Then
    '        MsgBox ("Only some Teams maybe available")
    '        myA = Left(myA, InStr(1, myA, "teamsList__noData"))
    '        xRev = InStrRev(myA, "venuename=", -1)
    '        myA = Left(myA, xRev)
    '        Exit Sub
    'End If
    mySplit = Split(myA, "<p>")
    For intN = 1 To UBound(mySplit) 'don't need up to the first 1
        myB = mySplit(intN)
        myB = Left(myB, InStr(1, myB, "</p>") - 1)
        'Debug.Print myB
        'Stop
        '<b>Sharks: 1</b>
        myB = Replace(myB, "</b>:", ":</b>")
        myB = Replace(myB, " 1</b>", "</b> 1")
        'Stop
        'Debug.Print myB
        If venue = "" Then
            TeamCount = 0
            'Stop
            '<a href="/news/2018/07/17/parramatta-eels-v-canterbury-bulldogs-round-19-preview/">Eels v Bulldogs preview</a>
            If InStr(1, myB, " v ") > 0 And InStr(1, myB, "preview") = 0 Then 'found the venue
                GameNo = GameNo + 1
                'Stop
                venue = Replace(myB, "<b>", "")
                venue = Replace(venue, "</b>", "")
                venue = Replace(venue, """", "")
                'Debug.Print GameNo & " " & venue
                venue = Replace(venue, "<i>" & Chr(160) & "</i>", "")
                '<i>&nbsp;</i>
                '                                                      <b style="                  background-color transparent;">
                venue = Replace(Replace(Replace(Replace(Replace(venue, "b style=", ""), ":", ""), "background-color transparent;", ""), """", ""), "<>", "")
                
                'venue = Replace(venue, "<b style=background-color: transparent;>", "")
                'venue = Replace(venue, "<b style=""background-color transparent;"">", "")
                '                       <b style=""background-color transparent;"">
                'Stop
                venue = strClean(venue)                                               'venue
                'Debug.Print GameNo & " " & venue
                'venue = Replace(venue, "b style=", "")
                'venue = Replace(venue, ":", "")
                'venue = Replace(venue, "background-color transparent;", "")
                'venue = Replace(venue, """", "")
                'venue = Replace(venue, "<>", "")
                'Stop
                'Exit For         myB = Replace(myB, Chr(160), "")

            End If
        End If
        If TeamCount < 2 Then
            'Debug.Print myB
            'Stop
            If InStr(1, Replace(myB, Chr(160), ""), ":</b>") > 0 _
                Or InStr(1, Replace(myB, Chr(32), ""), ":</b>") > 0 Then 'found team
                TeamCount = TeamCount + 1
                myTeam = Left(myB, InStr(1, myB, "</b>") - 1)
                myTeam = Replace(myTeam, "<b>", "")
                myTeam = Replace(myTeam, ":", "")
                myTeam = Replace(myTeam, Chr(160), "")
                myTeam = strClean(myTeam)                                               'team name
                myTeam = Replace(Replace(Replace(Replace(Replace(myTeam, "b style=", ""), ":", ""), "background-color transparent;", ""), """", ""), "<>", "")
                'If HomeTeam = "" Then
                '    HomeTeam = myTeam
                'Else
                '    AwayTeam = myTeam
                'End If
                Select Case myTeam
                    Case "Tigers"
                        myTeam = "Wests Tigers"
                End Select
                'Debug.Print myTeam
                'Stop
                myB = Mid(myB, InStr(1, myB, "</b>") + 4, Len(myB))
                'myB = Replace(myB, Chr(160), ",")
                'myB = Replace(myB, ",,", ",")
                'Debug.Print myB
                'Stop
                myB = Replace(myB, "</p>", "")
                myB = Replace(myB, "(c)", "")
                myB = Replace(myB, "</i>", "")
                myB = Replace(myB, "<i>", "")
                myB = Replace(myB, Chr(160), " ")
                myB = Replace(myB, ".", "")
                myB = Replace(myB, "</b>", "")
                myB = Replace(myB, "<b>", "")
                'Stop
                'Replace(Replace(Replace(teamAPoints, ")", ""), "-", ""), "(", "")
                myB = Replace(Replace(Replace(Replace(Replace(Replace(myB, "span style=", ""), "background-color: transparent;", ""), "</span>", ""), "i style=", "") _
                , """", ""), "<>", "")
                'myB = Replace(myB, "<span style=""background-color: transparent;"">", "")
                'myB = Replace(myB, "</span>", "")
                'Debug.Print Mid(myB, Len(myB), Len(myB))
                If Mid(myB, Len(myB), Len(myB)) = "," Then
                    myB = Left(myB, Len(myB) - 1)
                End If
                'Stop

                'Debug.Print "After: " & myB
TestAgain:
'Stop
                myPlayer = Split(myB, ",")
                If UBound(myPlayer) <> 12 Then
                'If UBound(myPlayer) = 12 Then
'there is an issue with the players listed.
                'export the current string of players to a form for editing
                    myTmp = myB
                    myB = ""
                    myForm.Label1 = myTmp
                    myForm.Label2 = "There is an issue with the " & UBound(myPlayer) & " players found in " & myTeam & " as above. Modify and press OK"
                    myForm.Show
                    myTmp = myForm.Label1
                    myB = myTmp
                    GoTo TestAgain:
                Else
                    x = UBound(myPlayer)
                End If
                For intP = 0 To x
                'For intP = 0 To 12
                    thePlayer = myPlayer(intP)
                    thePlayer = strClean(thePlayer)
                    'thePlayer = Replace(thePlayer, "'", "")
                    thePlayer = Replace(thePlayer, "  ", " ")
                    myC = Left(thePlayer, InStr(1, thePlayer, " ") - 1)
                    myC = Trim(myC)
                    thePosition = myC
                    If thePosition <> intP + 1 Then
                        thePosition = intP + 1
                    End If
                    myC = ""
                    'Debug.Print thePosition
                    thePlayer = Mid(thePlayer, InStr(1, thePlayer, " ") + 1, Len(thePlayer))
                    thePlayer = Replace(Replace(thePlayer, "jnr", "Junior"), "Jnr", "Junior")
                    thePlayer = Trim(thePlayer)
'fix player names
                    Select Case thePlayer
                    'a b c d
                        Case "Aiden Sezer"
                            thePlayer = "Aidan Sezer"
                        Case "AJ Brimson"
                            thePlayer = "Alexander Brimson"
                        Case "Brad Parker"
                            thePlayer = "Bradley Parker"
                        Case "Christopher Lawrence"
                            thePlayer = "Chris Lawrence"
                        Case "Clint Gutherson"
                            thePlayer = "Clinton Gutherson"
                        Case "Daniel Saifit"
                            thePlayer = "Daniel Saifiti"
                        Case "David Fusitu'a"
                            thePlayer = "David Fusitua"
                        Case "Brad Abbey"
                            thePlayer = "Bradley Abbey"
                    'e f g h
                    'i j k l Jayden S'uA
                        Case "Josh Addo-Carr"
                            thePlayer = "Joshua Addo-Carr"
                        Case "Joshua Jackson"
                            thePlayer = "Josh Jackson"
                        Case "Josh Aloisi"
                            thePlayer = "Josh Aloiai"
                        Case "Jayden S'uA"
                            thePlayer = "Jaydn Su'a"
                    'm n o p
                        Case "Matthew Frawley"
                            thePlayer = "Matt Frawley"
                         Case "Matt Dufty"
                            thePlayer = "Matthew Dufty"
                        Case "Matthew Prior"
                            thePlayer = "Matt Prior"
                        Case "Mitchell Cornish"
                            thePlayer = "Mitch Cornish"
                        Case "Matt Moylan"
                            thePlayer = "Matthew Moylan"
                        Case "Michael Chee-Kam"
                            thePlayer = "Michael Chee Kam"
                        Case "Matt Eisenhuth"
                            thePlayer = "Matthew Eisenhuth"
                        Case "Matt Scott"
                            thePlayer = "Matthew Scott"
                        Case "Mitch Barnett"
                            thePlayer = "Mitchell Barnett"
                    'q r s t
                        Case "Richie Kennar"
                            thePlayer = "Richard Kennar"
                        Case "Robbie Rochow"
                            thePlayer = "Robert Rochow"
                        Case "Samuel Thaiday"
                            thePlayer = "Sam Thaiday"
                        Case "Sam Lisone"
                            thePlayer = "Samuel Lisone"
                        Case "Siosiua Taukeiaho"
                            thePlayer = "Sio Siua Taukeiaho"
                        'Case "Siosiua Taukeiaho"
                        '    thePlayer = "Sio Siua Taukeiaho"
                    'u v w x y z
                        Case "Will Hopoate"
                            thePlayer = "William Hopoate"
                    End Select
                    'Debug.Print thePlayer
                    '1^Storm(home) v Cowboys(away) : 01-Oct-17, 6:15:00 PM, ANZ Stadium^Storm(home)^1^Billy Slater

                    Print #FileNum, GameNo & "^" & venue & "^" & myTeam & "^" & thePosition & "^" & thePlayer
                    
                    thePosition = 0
                    thePlayer = ""
                    'Stop
                Next intP
                myTeam = ""
                'Exit For
            End If
        End If
        'Stop
        myB = ""
        If TeamCount = 2 Then
            'Stop
            venue = ""
            TeamCount = 0
        End If
          
'            thePosition = Left(thePosition, InStr(1, thePosition, "<") - 1)
'            myC = Mid(myC, InStr(1, myC, "aspx"">") + 6)
'            thePlayer = Left(myC, InStr(1, myC, "<") - 1)
'            Cells(rowNumber, ColNumber) = GameNo
'            ColNumber = ColNumber + 1
'            Cells(rowNumber, ColNumber) = Game
'            ColNumber = ColNumber + 1
'            Cells(rowNumber, ColNumber) = myTeam
'            ColNumber = ColNumber + 1
'            Cells(rowNumber, ColNumber) = thePosition
'            ColNumber = ColNumber + 1
'            Cells(rowNumber, ColNumber) = thePlayer
'            rowNumber = rowNumber + 1
    Next intN
    '###############for testing
    'Const tempfile As String = "C:\FILES\NRL\tempfile2.txt"
    'Dim FileNum As Integer
    'FileNum = FreeFile ' next file number
    'Open tempfile For Append As #FileNum ' creates the file if it doesn't exist
    'Print #FileNum, myA ' write information at the end of the text file
    'Close #FileNum ' close the file
    '###################
    Close #FileNum ' close the file
    'Call tidyGameSheet
    'Call SaveGameData
    'Workbooks.Add
MsgBox "Done...."
End Sub
Sub getCurrentGames()
'CURRENT script to get the games when they are in a table format

    Dim startElement As WebElement
    Dim elements As WebElementCollection
    Dim element As WebElement
    Dim element1s As WebElementCollection
    Dim element1 As WebElement
    Dim element2s As WebElementCollection
    Dim element2 As WebElement
    Dim Element3s As WebElementCollection
    Dim Element3 As WebElement

    Dim urlName         As String
    'Dim oHttp           As Object
    Dim mySite          As String
    Dim myA             As String
    Dim myWork          As String
    Dim myB             As String
    Dim myC             As String
    Dim venue           As String
    Dim gameDate        As Date
    Dim HomeTeam        As String
    Dim AwayTeam        As String
    Dim myGame            As String
    Dim myTeam          As String
    Dim TeamCount       As Integer
    Dim homePlayer       As String
    Dim awayPlayer       As String
    Dim thePosition     As Integer
    
    Dim mySplit()       As String
    Dim intN            As Integer
    Dim myPlayer()      As String
    Dim intP            As Integer
    Dim x As Integer
    
    
    Dim GameNo          As Long
    Dim GameFileName    As String
    Dim FileNum         As Integer
    'Dim myForm As Form1
    Dim myTmp           As String
    
    Dim secs1 As Date 'timer
    Dim secs2 As Date
    Dim mySecs As Double

    
    Dim driver As New SeleniumWrapper.WebDriver
    Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter
    
    StopMyProcess ("chromedriver.exe")
    StopMyProcess ("phantomjs.exe")
    
    Application.DisplayStatusBar = True
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    
    'Set myForm = New Form1
    'Load myForm

    GameNo = 0
    
    GameFileName = "C:\FILES\NRL\data\Games.txt"

    FileNum = FreeFile
    Open GameFileName For Output As #FileNum 'overwrites file
 
    urlName = InputBox(Prompt:="Enter URL for this round games", Title:="URL", Default:="https://www.nrl.com/news/2019/08/13/round-22-nrl-team-announcements/")

    Application.StatusBar = "Waiting on NRL Webpage ..."

secs1 = Time()

    driver.Start "phantomjs", urlName
    driver.setImplicitWait 10000
    driver.Wait (500)

    'myURL = "/"
    driver.get "/", Raise:=False
    driver.Wait (1000)
'Stop
'                                                 /html/body/div[4]/main/div[1]/article/div[3]/div/div/div/div/div[1]
    'Set startElement = driver.findElementByXPath("//*[@id='js-local-datetime']/div[1]/article/div[2]/div/div/div/div/div[1]")
    Set startElement = driver.findElementByXPath("/html/body/div[4]/main/div[1]/article/div[3]/div/div/div/div/div[1]")
    'Set elements = startElement.findElementsByTagName("div")
    'Set elements = startElement.findElementsByXPath(".//*") 'this one returns all decendant children, not just immediate
    Set elements = startElement.findElementsByXPath("./*") 'this one returns immediate children only
    For Each element In elements
        DoEvents
'        Debug.Print Element.getAttribute("class")
'data for a whole game
'                                           u-spacing-mv-medium
        If element.getAttribute("class") = "u-spacing-mv-medium" Then
            secs2 = Time()
            GameNo = GameNo + 1
'Stop
            mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
            Application.StatusBar = "Getting game " & GameNo & ". " & mySecs & " seconds have elapsed."
            'Debug.Print mySecs & " seconds until starting on game " & GameNo
            'secs1 = Time()
            thePosition = 0
            Set element1s = element.findElementsByTagName("div")
            For Each element1 In element1s
'date, venue, teams material
                'Debug.Print element1.getAttribute("class")
                'Stop
                If element1.getAttribute("class") = "u-width-100" Then
                    'secs2 = Time()
                    'mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                    'Debug.Print mySecs & " seconds until starting on header details for " & GameNo
                    
                    'Debug.Print element1.getAttribute("innerHTML")
                    myA = element1.getAttribute("innerHTML")
                    myA = strClean(myA)
                    'Debug.Print myA
                    myWork = Mid(myA, InStr(1, myA, "datetime=") + 10, Len(myA))
                    myWork = Left(myWork, InStr(1, myWork, ":00Z") - 1)
                    myWork = Replace(myWork, "T", " ")
                    myWork = Trim(myWork)
                    'Stop
                    gameDate = myWork
                    myWork = ""
                    gameDate = gameDate + TimeSerial(10, 0, 0)
                    If InStr(1, myA, "Venue:</span>") > 0 Then
                        myWork = Mid(myA, InStr(1, myA, "Venue:</span>") + 13, Len(myA))
                    ElseIf InStr(1, myA, "Venue: </span>") > 0 Then
                        myWork = Mid(myA, InStr(1, myA, "Venue: </span>") + 14, Len(myA))
                    End If
                    myWork = Left(myWork, InStr(1, myWork, "</p>") - 1)
                    myWork = Trim(myWork)
                    venue = myWork
                    myWork = ""
                    myWork = Mid(myA, InStr(1, myA, "match-team__name match-team__name--home") + 1, Len(myA))
                    myWork = Mid(myWork, InStr(1, myWork, ">") + 1, Len(myWork))
                    myWork = Left(myWork, InStr(1, myWork, "</p>") - 1)
                    myWork = Trim(myWork)
                    HomeTeam = myWork
                    HomeTeam = fixTeam(HomeTeam)
                    myWork = ""
                    myWork = Mid(myA, InStr(1, myA, "match-team__name match-team__name--away") + 1, Len(myA))
                    myWork = Mid(myWork, InStr(1, myWork, ">") + 1, Len(myWork))
                    myWork = Left(myWork, InStr(1, myWork, "</p>") - 1)
                    myWork = Trim(myWork)
                    AwayTeam = myWork
                    AwayTeam = fixTeam(AwayTeam)
                    myWork = ""
                    '1^Storm(home) v Cowboys(away) : 01-Oct-17, 6:15:00 PM, ANZ Stadium
                    myGame = GameNo & "^" & HomeTeam & "(home) v " & AwayTeam & "(away) : " & gameDate & ", " & venue
                    'Debug.Print myGame
                    myA = ""
'players
                'ElseIf element1.getAttribute("class") = "teamsheet-group" Then
                ElseIf element1.getAttribute("class") = "teamsheet-group u-border-top" Then
                    'Forwards
                    If InStr(1, LCase(element1.text), "backs") > 0 Or InStr(1, LCase(element1.text), "forwards") > 0 Then
                        'Stop
                        Set element2s = element1.findElementsByTagName("li")
                        For Each element2 In element2s
                            'secs2 = Time()
                            'mySecs = DateDiff("s", CDate(secs1), CDate(secs2))
                            'Debug.Print mySecs & " seconds until starting on a teamsheet element for " & GameNo

                            myA = element2.text
                            homePlayer = Split(myA, Chr(13))(1) & " " & Split(myA, Chr(13))(2)
                            homePlayer = Replace(Replace(Replace(Replace(homePlayer, "jnr", "Junior"), "Jnr", "Junior"), Chr(13), ""), Chr(10), "")

                            homePlayer = Trim(homePlayer)
                            homePlayer = fixPlayer(homePlayer)
                            awayPlayer = Split(myA, Chr(13))(5) & " " & Split(myA, Chr(13))(6)
                            awayPlayer = Replace(Replace(Replace(Replace(awayPlayer, "jnr", "Junior"), "Jnr", "Junior"), Chr(13), ""), Chr(10), "")
                            awayPlayer = Trim(awayPlayer)
                            'Stop
                            awayPlayer = fixPlayer(awayPlayer)

                            thePosition = thePosition + 1
                            'Debug.Print homePlayer
                            'Debug.Print awayPlayer
                            '1^Storm(home) v Cowboys(away) : 01-Oct-17, 6:15:00 PM, ANZ Stadium^Storm(home)^1^Billy Slater
'Stop
                            Print #FileNum, myGame & "^" & HomeTeam & "^" & thePosition & "^" & homePlayer
                            Print #FileNum, myGame & "^" & AwayTeam & "^" & thePosition & "^" & awayPlayer
                    
                            homePlayer = ""
                            awayPlayer = ""
                            myA = ""
                            If thePosition = 13 Then GoTo TeamDone:

                        Next element2
                    End If
                End If
            Next element1
        End If
TeamDone:
    Next element
    Close #FileNum ' close the file
    driver.stop
    Application.DisplayStatusBar = True
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.StatusBar = ""
MsgBox "Done...."
End Sub
Private Function fixPlayer(myStr As String)
'fix player names
    myStr = Replace(myStr, "'", "")
    Select Case myStr
                    'a b c d
                        Case "Aiden Sezer"
                            myStr = "Aidan Sezer"
                        Case "AJ Brimson"
                            myStr = "Alexander Brimson"
                        Case "Brad Parker"
                            myStr = "Bradley Parker"
                        Case "Christopher Lawrence"
                            myStr = "Chris Lawrence"
                        Case "Clint Gutherson"
                            myStr = "Clinton Gutherson"
                        Case "Daniel Saifit"
                            myStr = "Daniel Saifiti"
                        'Case "David Fusitua"
                        '    myStr = "David Fusitua"
                        Case "Brad Abbey"
                            myStr = "Bradley Abbey"
                    'e f g h
                    'i j k l Jayden S'uA
                        Case "Josh Addo-Carr"
                            myStr = "Joshua Addo-Carr"
                        Case "Joshua Jackson"
                            myStr = "Josh Jackson"
                        Case "Josh Aloisi"
                            myStr = "Josh Aloiai"
                        Case "Jayden SuA"
                            myStr = "Jaydn Sua"
                        Case "Kenneath Bromwich"
                            myStr = "Kenny Bromwich"
                    'm n o p
                        Case "Matthew Frawley"
                            myStr = "Matt Frawley"
                         Case "Matt Dufty"
                            myStr = "Matthew Dufty"
                        Case "Matthew Prior"
                            myStr = "Matt Prior"
                        Case "Mitchell Cornish"
                            myStr = "Mitch Cornish"
                        Case "Matt Moylan"
                            myStr = "Matthew Moylan"
                        Case "Michael Chee-Kam"
                            myStr = "Michael Chee Kam"
                        Case "Matt Eisenhuth"
                            myStr = "Matthew Eisenhuth"
                        Case "Matt Scott"
                            myStr = "Matthew Scott"
                        Case "Mitch Barnett"
                            myStr = "Mitchell Barnett"
                    'q r s t
                        Case "Richie Kennar"
                            myStr = "Richard Kennar"
                        Case "Robbie Rochow"
                            myStr = "Robert Rochow"
                        Case "Samuel Thaiday"
                            myStr = "Sam Thaiday"
                        Case "Sam Lisone"
                            myStr = "Samuel Lisone"
                        Case "Siosiua Taukeiaho"
                            myStr = "Sio Siua Taukeiaho"
                        Case "Timoteo Lafai"
                            myStr = "Tim Lafai"
                    'u v w x y z
                        Case "Will Hopoate"
                            myStr = "William Hopoate"
                    End Select

fixPlayer = myStr
End Function
Private Function fixTeam(myStr As String)
'fix team names
    Select Case myStr
        Case "Tigers"
            myStr = "Wests Tigers"
        Case "Melbourne Storm"
            myStr = "Storm"
        Case "Brisbane Broncos"
            myStr = "Broncos"
        Case "Newcastle Knights"
            myStr = "Knights"
        Case "Cronulla Sharks"
            myStr = "Sharks"
        Case "Sydney Roosters"
            myStr = "Roosters"
        Case "South Sydney Rabbitohs"
            myStr = "Rabbitohs"
        Case "New Zealand Warriors"
            myStr = "Warriors"
        Case "Manly Sea Eagles"
            myStr = "Sea Eagles"
        Case "North Qld Cowboys"
            myStr = "Cowboys"
        Case "St George Illa"
            myStr = "Dragons"
        Case "Penrith Panthers"
            myStr = "Panthers"
        Case "Parramatta Eels"
            myStr = "Eels"
        Case "Gold Coast Titans"
            myStr = "Titans"
        Case "Canberra Raiders"
            myStr = "Raiders"
        Case "Penrith Panthers"
            myStr = "Panthers"
    End Select

fixTeam = myStr
End Function
Private Sub tidyGameSheet()
    Dim myX As Range
    Dim lastRow As Long
    Dim myPlayer As String

lastRow = Range("E65536").End(xlUp).Row

For Each myX In Range("E1:E" & lastRow)
    myX = Replace(myX, Chr(160), " ")
    myX = Replace(myX, "  ", " ")
    myX = Trim(myX)
    myPlayer = Replace(myPlayer, "(c)", "")
    myPlayer = Replace(myPlayer, "(C)", "")
    myPlayer = Replace(myPlayer, "(vc)", "")
    myPlayer = Replace(myPlayer, "(VC)", "")
    If InStr(1, myPlayer, "(") > 0 Then
        myPlayer = Left(myPlayer, InStr(1, myPlayer, "(") - 1)
    End If
    myPlayer = Trim(myPlayer)
'fix players names
'a
    myPlayer = Replace(myPlayer, "Aiden Guerra", "Aidan Guerra")
    'myPlayer = Replace(myPlayer, "", "")
'b Braidon  Burns
    myPlayer = Replace(myPlayer, "Bake Ayshford", "Blake Ayshford")
'c Cory Denniss
    myPlayer = Replace(myPlayer, "Clint Gutherson", "Clinton Gutherson")
    'myPlayer = Replace(myPlayer, "", "")
'd
    myPlayer = Replace(myPlayer, "Dallin Watene-Zelezniak", "Dallin Watene Zelezniak")
    myPlayer = Replace(myPlayer, "Dave Tyrrell", "David Tyrrell")
    myPlayer = Replace(myPlayer, "Dave Tyrell", "David Tyrrell")
    myPlayer = Replace(myPlayer, "David Fusitu'a", "David Fusitua")
    myPlayer = Replace(myPlayer, "Dumamis Lui", "Dunamis Lui")
    'myPlayer = Replace(myPlayer, "", "")
    'myPlayer = Replace(myPlayer, "", "")
'e Eto Nabuli
    myPlayer = Replace(myPlayer, "Eddy Pettybourne", "Edward Pettybourne")
    myPlayer = Replace(myPlayer, "Elliot Whitehead", "Elliott Whitehead")
    'myPlayer = Replace(myPlayer, "", "")
'f
    myPlayer = Replace(myPlayer, "Frank Paul Nuuausala", "Frank-Paul Nuuausala")
    myPlayer = Replace(myPlayer, "Frank-Paul Nu'uausala", "Frank-Paul Nuuausala")
'g
'h
'i Issac Liu
    myPlayer = Replace(myPlayer, "Issac De Gois", "Isaac De Gois")
'j
    myPlayer = Replace(myPlayer, "Jacob Safiti", "Jacob Saifiti")
    myPlayer = Replace(myPlayer, "James Taumalolo", "Jason Taumalolo")
    myPlayer = Replace(myPlayer, "Jazz Tevega", "Jazz Tevaga")
    myPlayer = Replace(myPlayer, "Jono Wright", "Jonathan Wright")
    myPlayer = Replace(myPlayer, "Josh Ailoai", "Josh Aloiai")
'k
    myPlayer = Replace(myPlayer, "Ken Edwards", "Kenny Edwards")
    myPlayer = Replace(myPlayer, "Kenny Bromwich", "Kenneath Bromwich")
    myPlayer = Replace(myPlayer, "Kenneth Bromwich", "Kenneath Bromwich")
'l
'm Mosese Pangai
    myPlayer = Replace(myPlayer, "Manu Mau", "Manu Ma'u")
    myPlayer = Replace(myPlayer, "Matt Allwood", "Matthew Allwood")
    myPlayer = Replace(myPlayer, "Matt Scott", "Matthew Scott")
    myPlayer = Replace(myPlayer, "Mitch Cornish", "Mitchell Cornish")
    'myPlayer = Replace(myPlayer, "", "")
    'myPlayer = Replace(myPlayer, "", "")
    'myPlayer = Replace(myPlayer, "", "")
    'myPlayer = Replace(myPlayer, "", "")
    'myPlayer = Replace(myPlayer, "", "")
'n
    myPlayer = Replace(myPlayer, "Nene McDonald", "Nene Macdonald")
'o
'p
    myPlayer = Replace(myPlayer, "Peter Hiku", "Peta Hiku")
    'myPlayer = Replace(myPlayer, "", "")
'q
'r Reagan Campell-Gillard
    myPlayer = Replace(myPlayer, "Reagan Campell-Gillard", "Reagan Campbell-Gillard")
    'myPlayer = Replace(myPlayer, "", "")
's Sebastine Ikahihfo
    myPlayer = Replace(myPlayer, "Sam Tagatese", "Sam Tagataese")
    myPlayer = Replace(myPlayer, "Sebastine Ikahihfo", "Sebastine Ikahihifo")
    myPlayer = Replace(myPlayer, "Siosia Vave", "Siosaia Vave")
    myPlayer = Replace(myPlayer, "Suaso ", "Sauaso ")
    'myPlayer = Replace(myPlayer, "", "")
     '
't Tim Lafai
    myPlayer = Replace(myPlayer, "Tim Lafia", "Timoteo Lafai")
    myPlayer = Replace(myPlayer, "Tim Lafai", "Timoteo Lafai")
    myPlayer = Replace(myPlayer, "Tom Burgess", "Thomas Burgess")
'u
'v
'w
    myPlayer = Replace(myPlayer, "William Chambers", "Will Chambers")
'x
'y
'z
    'myPlayer = Replace(myPlayer, "", "")
    'myPlayer = Replace(myPlayer, "", "")
    
'    myPlayer = Replace(myPlayer, "", "")
    
    myPlayer = Replace(myPlayer, Chr(146), Chr(39)) 'standardise the ' char
    
Next myX

End Sub
Private Sub SaveGameData()
    
        Const Delimiter As String = "^" 'or "|,", vbTab, etc.
        Dim myRecord As Range
        Dim myField As Range
        Dim nFileNum As Long
        Dim lastRow As Long
        Dim sOut As String
        Dim fileSaveName As String
        Dim lnCount As Integer
        Dim clCount As Integer
         
    Columns("A:N").Select
    Selection.Columns.AutoFit '

lastRow = Range("A65536").End(xlUp).Row
If lastRow < 2 Then GoTo noData:
' lnCount = InputBox("How many Rows are you loading")
' clCount = InputBox("How many Columns are you loading")
    clCount = 5

' Name the file and where to save it
    fileSaveName = "C:\FILES\NRL\data\Games.txt"

    nFileNum = FreeFile
    If Dir("C:\FILES\NRL\data\Games.txt") <> "" Then
        Open fileSaveName For Append As #nFileNum
    Else
        Open fileSaveName For Output As #nFileNum
    End If
    For Each myRecord In Range("A1:A" & _
        Range("A" & Rows.count).End(xlUp).Row)
        With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
            sOut = sOut & Delimiter & Trim(myField.text)
            Next myField
                sOut = Mid(sOut, 2) ' this take off the first delimiter
'                Print #nFileNum, Mid(sOut, 2)
                Print #nFileNum, sOut
                sOut = Empty
        End With
    Next myRecord
    Close #nFileNum
    'close this sheet
noData:
'    MsgBox ("saveResultData")
    ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
'    Workbooks.Add

End Sub
Sub SetUpNRL()
'7/4/16 removed nrlbuildscore, now get score in access from fantasy type points
    Call nrlSetupSheet
    Call nrlHLbest
    'Call nrlBuildScore
    Call nrlBuildTeamScores
    Call nrlHLFinalPoints
    Call NRLprintSheet
    
End Sub
Private Sub nrlSetupSheet()

    Cells.Select
    Selection.ClearOutline
    Cells.Select
    Selection.RowHeight = 13.5
    If Range("A1").value = "GameNo" Then
        Columns("A:A").Delete Shift:=xlToLeft
    End If
    
    Range("D2").Select
    ActiveWindow.FreezePanes = True
' set columns width
    Columns("A:B").ColumnWidth = 4
    Columns("C:C").ColumnWidth = 3
    Columns("D:D").ColumnWidth = 15
    Columns("E:T").ColumnWidth = 4.5
    Columns("U:AL").ColumnWidth = 5.5
' put some heading in
    Range("E1").value = "PTS"
    Range("F1").value = "T"
    Range("G1").value = "TA"
    Range("H1").value = "TCK"
    Range("I1").value = "R"
    Range("J1").value = "RM"
    Range("K1").value = "LB"
    Range("L1").value = "TB"
    Range("M1").value = "OFF"
    Range("N1").value = "K"
    Range("O1").value = "KM"
    Range("P1").value = "MT"
    Range("Q1").value = "ERR"
    Range("R1").value = "PEN"
    Range("S1").value = "SB/SO"
    Range("T1").value = "Value"


    Range("U1").value = "Score"
    Range("V1").value = "PTS"
    Range("W1").value = "T"
    Range("X1").value = "TA"
    Range("Y1").value = "TCK"
    Range("Z1").value = "R"
    Range("AA1").value = "RM"
    Range("AB1").value = "LB"
    Range("AC1").value = "TB"
    Range("AD1").value = "OFF"
    Range("AE1").value = "K"
    Range("AF1").value = "KM"
    Range("AG1").value = "MT"
    Range("AH1").value = "ERR"
    Range("AI1").value = "PEN"
    Range("AJ1").value = "SB/SO"
    'Range("AK1").value = "NRL"
    'Range("Z12").value = "Finals Codes"
    'Range("AA13").value = "Tattsbet Finals Code (odds)"
    'Range("AA14").value = "BetFair Finals Week Number"
    '
    'Range("X17").value = "Result Code - https://www.flashscore.com.au/afl/australia/afl/results/"

End Sub
Private Sub nrlHLbest()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myPoints        As Range
    Dim myTries         As Range
    Dim myTryAssists    As Range
    Dim myTackles       As Range
    Dim myAllRun        As Range
    Dim myARMetres      As Range
    
    Dim myLineBreaks    As Range
    Dim myTackleBusts   As Range
    Dim myOffLoads      As Range
    Dim myKicks         As Range
    Dim myKickMetres    As Range

    Dim myMissTackles   As Range
    Dim myErrors        As Range
    Dim myPenalties     As Range
    Dim mySinBin        As Range
    
    
    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    
    Dim team1           As Long
    Dim team2           As Long
    Dim T1HLit          As Long
    Dim T2HLit          As Long
    Dim TmpCount        As Long
StartAgain:
'Remove any previous col colours
    Range("D:AL").Interior.ColorIndex = xlNone
    On Error Resume Next
    myRow1 = 3
'get the whole sheet range
    lastRow = Range("D65536").End(xlUp).Row
'    lastRow = Range("D1:D" & Range("D" & Rows.Count).End(xlUp).Row)
    Range("A" & lastRow + 1).value = "END"
    Set myselection = Range("D2:D" & lastRow) 'Player name
        For Each myX In myselection 'col D
            If myX.Offset(0, -3) <> "" Then 'found the beginning of a game
   '             Range("A" & myX.Row).End(xlDown).Select 'select whole game with 2 teams
   '                 myRowEnd = Selection.Row
                team1 = Range("B" & myX.Row).End(xlDown).Row
                Range("A" & myX.Row).End(xlDown).Select 'select whole game with 2 teams
                myRowEnd = Selection.Row
                If myRowEnd Mod 29 <> 2 Then
                'If myRowEnd <> 234 And myRowEnd <> 205 And myRowEnd <> 176 And myRowEnd <> 147 And myRowEnd <> 118 _
                    And myRowEnd <> 89 And myRowEnd <> 60 And myRowEnd <> 31 Then
                    MsgBox ("The number of players in the sheet does not match 13 players for each game, rectify before continuing!")
                    Range("A" & myRowEnd).Select
                    End
                End If
                team2 = Range("B" & Selection.Row).End(xlUp).Row
                T1HLit = 0
                T2HLit = 0
            End If
                    If myX.Row = myRow1 Then
                        Set myRng = Range("D" & myRow1 & ":D" & myRowEnd) 'The range to work on Player
                        Set myPoints = Range("E" & myRow1 & ":E" & myRowEnd) 'Points 1
                        Set myTries = Range("F" & myRow1 & ":F" & myRowEnd)         '2
                        Set myTryAssists = Range("G" & myRow1 & ":G" & myRowEnd)    '3
                        Set myTackles = Range("H" & myRow1 & ":H" & myRowEnd)       '4
                        Set myAllRun = Range("I" & myRow1 & ":I" & myRowEnd)        '5
                        Set myARMetres = Range("J" & myRow1 & ":J" & myRowEnd)      '6
                        Set myLineBreaks = Range("K" & myRow1 & ":K" & myRowEnd)    '7
                        Set myTackleBusts = Range("L" & myRow1 & ":L" & myRowEnd)   '8
                        Set myOffLoads = Range("M" & myRow1 & ":M" & myRowEnd)      '9
                        Set myKicks = Range("N" & myRow1 & ":N" & myRowEnd)         '10
                        Set myKickMetres = Range("O" & myRow1 & ":O" & myRowEnd)    '11
                        Set myMissTackles = Range("P" & myRow1 & ":P" & myRowEnd)   '12
                        Set myErrors = Range("Q" & myRow1 & ":Q" & myRowEnd)        '13
                        Set myPenalties = Range("R" & myRow1 & ":R" & myRowEnd)     '14
                        Set mySinBin = Range("S" & myRow1 & ":S" & myRowEnd)        '15
                    
                        For Each myY In myRng 'the whole game worked on D Col
                            If myY <> "" Then
                                TmpCount = 0
                                If myY.Offset(0, 1).value > Application.Average(myPoints) Then
                                    myY.Offset(0, 1).Interior.ColorIndex = 19 ' pale yellow
                                End If
                                If myY.Offset(0, 1).value = Application.Max(myPoints) Then
                                    myY.Offset(0, 1).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                If myY.Offset(0, 2).value > Application.Average(myTries) Then
                                    myY.Offset(0, 2).Interior.ColorIndex = 19 ' pale yellow
                                End If
                                If myY.Offset(0, 2).value = Application.Max(myTries) Then
                                    myY.Offset(0, 2).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                
                                If myY.Offset(0, 3).value > Application.Average(myTryAssists) Then
                                    myY.Offset(0, 3).Interior.ColorIndex = 19 ' pale yellow
                                End If
                                If myY.Offset(0, 3).value = Application.Max(myTryAssists) Then
                                    myY.Offset(0, 3).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                
                                If myY.Offset(0, 4).value > Application.Average(myTackles) Then
                                    myY.Offset(0, 4).Interior.ColorIndex = 19 ' yellow
                                End If
                                If myY.Offset(0, 4).value = Application.Max(myTackles) Then
                                    myY.Offset(0, 4).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                If myY.Offset(0, 5).value > Application.Average(myAllRun) Then
                                    myY.Offset(0, 5).Interior.ColorIndex = 19 ' yellow
                                End If
                                If myY.Offset(0, 5).value = Application.Max(myAllRun) Then
                                    myY.Offset(0, 5).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                If myY.Offset(0, 6).value > Application.Average(myARMetres) Then
                                    myY.Offset(0, 6).Interior.ColorIndex = 19 ' yellow
                                End If
                                If myY.Offset(0, 6).value = Application.Max(myARMetres) Then
                                    myY.Offset(0, 6).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                If myY.Offset(0, 7).value > Application.Average(myLineBreaks) Then
                                    myY.Offset(0, 7).Interior.ColorIndex = 19 ' yellow
                                End If
                                If myY.Offset(0, 7).value = Application.Max(myLineBreaks) Then
                                    myY.Offset(0, 7).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                If myY.Offset(0, 8).value > Application.Average(myTackleBusts) Then
                                    myY.Offset(0, 8).Interior.ColorIndex = 19 ' yellow
                                End If
                                If myY.Offset(0, 8).value = Application.Max(myTackleBusts) Then
                                    myY.Offset(0, 8).Interior.ColorIndex = 6 ' yellow
                                    TmpCount = TmpCount + 1
                                End If
                                If myY.Offset(0, 6).value > 0 Or myY.Offset(0, 5).value > 0 _
                                    Or myY.Offset(0, 4).value > 0 Then 'ensure they have played before
                                    If myY.Offset(0, 12).value < Application.Average(myMissTackles) Then
                                        myY.Offset(0, 12).Interior.ColorIndex = 19 ' pale yellow
                                    End If
                                    If myY.Offset(0, 12).value = Application.Min(myMissTackles) Then
                                        myY.Offset(0, 12).Interior.ColorIndex = 6 ' yellow
                                        TmpCount = TmpCount + 1
                                    End If
                                    If myY.Offset(0, 13).value < Application.Average(myErrors) Then
                                        myY.Offset(0, 13).Interior.ColorIndex = 19 ' pale yellow
                                    End If
                                'MsgBox (Application.Min(MyErrors))
                                    If myY.Offset(0, 13).value = Application.Min(myErrors) Then
                                        myY.Offset(0, 13).Interior.ColorIndex = 6 ' yellow
                                        TmpCount = TmpCount + 1
                                    End If
                                
                                    If myY.Offset(0, 14).value < Application.Average(myPenalties) Then
                                        myY.Offset(0, 14).Interior.ColorIndex = 19 ' pale yellow
                                    End If
                                    If myY.Offset(0, 14).value = Application.Min(myPenalties) Then
                                        myY.Offset(0, 14).Interior.ColorIndex = 6 ' yellow
                                        TmpCount = TmpCount + 1
                                    End If
                                    'If myY.Offset(0, 15).value < Application.Average(mySinBin) Then
                                    '    myY.Offset(0, 15).Interior.ColorIndex = 19 ' pale yellow
                                    'End If
                                    'If myY.Offset(0, 15).value = Application.Min(mySinBin) Then
                                    '    myY.Offset(0, 15).Interior.ColorIndex = 6 ' yellow
                                    '    TmpCount = TmpCount + 1
                                    'End If
                                
                                Else
                                    If myY.Offset(0, 12).value <> "NA" Then
                                        myY.Offset(0, 12).value = "NA"
                                        myY.Offset(0, 13).value = "NA"
                                        myY.Offset(0, 14).value = "NA"
                                        myY.Offset(0, 15).value = "NA"
                                        GoTo StartAgain:
                                    End If
                                End If
                                If myY.Row < team2 Then
                                    T1HLit = T1HLit + TmpCount
                                ElseIf myY.Row > team2 Then
                                    T2HLit = T2HLit + TmpCount
                                End If
                                If myY.Row = myRowEnd - 1 Then
                                    Cells(team1 + 5, 24).value = T1HLit
                                    T1HLit = 0
                                    Cells(team1 + 6, 24).value = T2HLit
                                    T2HLit = 0
                                End If
                            End If
                        Next myY
                        myRow1 = myRowEnd + 1
                    End If
                Next myX
Range("A1").Select
End Sub
Private Sub nrlBuildScore_OLD()
'NOT USED
'removed 10/4/16 - this score now comes from dbase, generated from fantasy type scores
' Build the score in col N Value
    Dim myselection     As Range
    Dim myX             As Range
    Dim myScore         As Long
    Dim lAvPoint1       As Long
    Dim lAvPoint2       As Long
    Dim lAvTries1       As Long
    Dim lAvTries2       As Long
    Dim lAvTackles1       As Long
    Dim lAvTackles2       As Long
    Dim lAvAllRuns1       As Long
    Dim lAvAllRuns2       As Long
    Dim lAvAllRunMetres1       As Long
    Dim lAvAllRunMetres2       As Long
    Dim lAvLineBreaks1       As Long
    Dim lAvLineBreaks2       As Long
    Dim lAvHitUps1       As Long
    Dim lAvHitUps2       As Long
    Dim lAvMissedTackles1       As Long
    Dim lAvMissedTackles2       As Long
    Dim lAvErrors1       As Long
    Dim lAvErrors2       As Long

Range("N:N").NumberFormat = 0
' enter the values of the variables
lAvPoint1 = 5
lAvPoint2 = 3
lAvTries1 = 5
lAvTries2 = 3
lAvTackles1 = 5
lAvTackles2 = 2
lAvAllRuns1 = 5
lAvAllRuns2 = 3
lAvAllRunMetres1 = 5
lAvAllRunMetres2 = 3
lAvLineBreaks1 = 5
lAvLineBreaks2 = 3
lAvHitUps1 = 5
lAvHitUps2 = 3
lAvMissedTackles1 = 5
lAvMissedTackles2 = 3
lAvErrors1 = 5
lAvErrors2 = 3

Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row) 'Player name
    For Each myX In myselection 'Col D
        myScore = 0
        If myX.value <> "" Then
            If myX.Offset(0, 1).Interior.ColorIndex = 6 Then ' Bright Yellow
                myScore = myScore + lAvPoint1
            End If
            If myX.Offset(0, 1).Interior.ColorIndex = 19 Then ' Pale yellow
                myScore = myScore + lAvPoint2
            End If
            If myX.Offset(0, 2).Interior.ColorIndex = 6 Then '
                myScore = myScore + lAvTries1
            End If
            If myX.Offset(0, 2).Interior.ColorIndex = 19 Then '
                myScore = myScore + lAvTries2
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 6 Then
                myScore = myScore + lAvTackles1
            End If
            If myX.Offset(0, 3).Interior.ColorIndex = 19 Then
                myScore = myScore + lAvTackles2
            End If
            If myX.Offset(0, 4).Interior.ColorIndex = 6 Then
                myScore = myScore + lAvAllRuns1
            End If
            If myX.Offset(0, 4).Interior.ColorIndex = 19 Then
                myScore = myScore + lAvAllRuns2
            End If
            If myX.Offset(0, 5).Interior.ColorIndex = 6 Then
                myScore = myScore + lAvAllRunMetres1
            End If
            If myX.Offset(0, 5).Interior.ColorIndex = 19 Then
                myScore = myScore + lAvAllRunMetres2
            End If
            If myX.Offset(0, 6).Interior.ColorIndex = 6 Then
                myScore = myScore + lAvLineBreaks1
            End If
            If myX.Offset(0, 6).Interior.ColorIndex = 19 Then
                myScore = myScore + lAvLineBreaks2
            End If
            If myX.Offset(0, 7).Interior.ColorIndex = 6 Then
                myScore = myScore + lAvHitUps1
            End If
            If myX.Offset(0, 7).Interior.ColorIndex = 19 Then
                myScore = myScore + lAvHitUps2
            End If
            If myX.Offset(0, 5).value > 0 Then 'ensure they have played before
                If myX.Offset(0, 8).Interior.ColorIndex = 6 Then
                    myScore = myScore + lAvMissedTackles1
                End If
                If myX.Offset(0, 8).Interior.ColorIndex = 19 Then
                    myScore = myScore + lAvMissedTackles2
                End If
                If myX.Offset(0, 9).Interior.ColorIndex = 6 Then
                    myScore = myScore + lAvErrors1
                End If
                If myX.Offset(0, 9).Interior.ColorIndex = 19 Then
                    myScore = myScore + lAvErrors2
                End If
            End If
            myX.Offset(0, 10) = myScore
            If myScore >= 15 Then
                myX.Offset(0, 10).Interior.ColorIndex = 6
            End If
        End If
        myScore = 0
    Next myX
Range("N4").Select
End Sub
Private Sub nrlBuildTeamScores()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    Dim writeRow        As Long
'Remove any previous col colours
    Range("U:AK").Interior.ColorIndex = xlNone
    On Error Resume Next
    myRow1 = 3
'get the whole sheet range
    lastRow = Range("D65536").End(xlUp).Row
    Range("B" & lastRow + 1).value = "END"
    Set myselection = Range("D2:D" & lastRow) 'Player name whole sheet
        For Each myX In myselection 'col D
            If myX.Offset(0, -2) <> "" Then 'found the beginning of a team
                writeRow = myX.Row
                Range("B" & myX.Row).End(xlDown).Select 'select whole team
                myRowEnd = Selection.Row - 1
            End If
                If myX.Row = myRow1 Then
                    Range("U" & writeRow).value = Application.Sum(Range("T" & myRow1 & ":T" & myRowEnd)) 'sum Value = Score
                    Range("V" & writeRow).value = Application.Sum(Range("E" & myRow1 & ":E" & myRowEnd)) 'PTS
                    Range("W" & writeRow).value = Application.Sum(Range("F" & myRow1 & ":F" & myRowEnd)) 'T
                    Range("X" & writeRow).value = Application.Sum(Range("G" & myRow1 & ":G" & myRowEnd)) 'TA
                    Range("Y" & writeRow).value = Application.Sum(Range("H" & myRow1 & ":H" & myRowEnd)) 'TCK
                    Range("Z" & writeRow).value = Application.Sum(Range("I" & myRow1 & ":I" & myRowEnd)) 'R
                    Range("AA" & writeRow).value = Application.Sum(Range("J" & myRow1 & ":J" & myRowEnd)) 'RM
                    Range("AB" & writeRow).value = Application.Sum(Range("K" & myRow1 & ":K" & myRowEnd)) 'LB
                    Range("AC" & writeRow).value = Application.Sum(Range("L" & myRow1 & ":L" & myRowEnd)) 'TB
                    Range("AD" & writeRow).value = Application.Sum(Range("M" & myRow1 & ":M" & myRowEnd)) 'OFF
                    Range("AE" & writeRow).value = Application.Sum(Range("N" & myRow1 & ":N" & myRowEnd)) 'K
                    Range("AF" & writeRow).value = Application.Sum(Range("O" & myRow1 & ":O" & myRowEnd)) 'KM
                    Range("AG" & writeRow).value = Application.Sum(Range("P" & myRow1 & ":P" & myRowEnd)) 'MT
                    Range("AH" & writeRow).value = Application.Sum(Range("Q" & myRow1 & ":Q" & myRowEnd)) 'ERR
                    Range("AI" & writeRow).value = Application.Sum(Range("R" & myRow1 & ":R" & myRowEnd)) 'PEN
                    Range("AJ" & writeRow).value = Application.Sum(Range("S" & myRow1 & ":S" & myRowEnd)) 'SB/SO
                    myRow1 = myRowEnd + 1
                End If
        Next myX
Range("A1").Select
End Sub
Private Sub nrlHLFinalPoints()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myPoints        As Range
    Dim myTries         As Range
    Dim myTryAssists    As Range
    Dim myTackles       As Range
    Dim myLineBreaks    As Range
    Dim myTackleBusts   As Range
    Dim myOffLoads      As Range
    Dim myKicks         As Range
    Dim myKickMetres    As Range
    Dim myAllRun        As Range
    Dim myARMetres      As Range
    Dim myMissTackles   As Range
    Dim myErrors        As Range
    Dim myPenalties     As Range
    Dim mySinBins       As Range
    Dim myValue         As Range
    Dim borderRng       As Range
    
    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    
    Dim team1           As Long 'row no
    Dim team2           As Long
    Dim T1Count         As Long 'count of highlights for Team counts
    Dim T2Count         As Long
    Dim T1_1on1         As Long 'count of 1 on 1 highlights
    Dim T2_1on1         As Long
    Dim T1_fwdVal       As Long 'sum of forwards values
    Dim T2_fwdVal       As Long
    
    Dim T_bestValue     As Long 'Team with the bext Value
    Dim T_bestPoints    As Long 'Team with the bext points
    Dim T_bestHL        As Long
    Dim T_bestCount     As Long
    Dim T_best1to1      As Long
    Dim T_diffValue     As Double
    Dim T_diffPoints    As Double
    Dim T_diffHL        As Long
    Dim T_diffCount     As Long
    Dim T_diff1to1      As Long
    
    
    Dim WinTeam         As Long 'the forecasted winning team
    Dim LoseTeam        As Long
    Dim WinBy           As Long 'calc value to win by

'Remove any previous col colours
    Range("C:C").Interior.ColorIndex = xlNone

    On Error Resume Next
    myRow1 = 2
'get the whole sheet range
    lastRow = Range("D65536").End(xlUp).Row
    Set myselection = Range("D2:D" & lastRow) 'Player name
        For Each myX In myselection 'col D
            If myX.Offset(0, -3) <> "" Then 'found the beginning of a game
                team1 = Range("B" & myX.Row).End(xlDown).Row
                Range("A" & myX.Row).End(xlDown).Select 'select whole game with 2 teams
                myRowEnd = Selection.Row
                team2 = Range("B" & Selection.Row).End(xlUp).Row
'clear all the counts
                T1Count = 0
                T2Count = 0
                T1_1on1 = 0
                T2_1on1 = 0
                T_bestValue = 0
                T_bestPoints = 0
                T_bestHL = 0
                T_bestCount = 0
                T_best1to1 = 0
                T_diffHL = 0
                T_diffCount = 0
                T_diffValue = 0
                T_diffPoints = 0
                T_diff1to1 = 0
                WinTeam = 0
                WinBy = 0

                ' add a pagebreak after each game
                If myX.Row > 2 Then 'not the first game
                    ActiveSheet.HPageBreaks.Add Before:=ActiveSheet.Range("A" & myX.Row)
                End If
            End If
                If myX.Row = myRow1 Then
                    Set myRng = Range("U" & myRow1 & ":U" & myRowEnd) 'The range of the whole game
                    Set myValue = Range("U" & team1 & ", U" & team2) '0 (Score)
                    Set myPoints = Range("V" & team1 & ", V" & team2) '1
                    Set myTries = Range("W" & team1 & ", W" & team2) '2
                    Set myTryAssists = Range("X" & team1 & ", X" & team2) '3
                    Set myTackles = Range("Y" & team1 & ", Y" & team2) '4
                    Set myAllRun = Range("Z" & team1 & ", Z" & team2) '5
                    Set myARMetres = Range("AA" & team1 & ", AA" & team2) '6
                    Set myLineBreaks = Range("AB" & team1 & ", AB" & team2) '7
                    Set myTackleBusts = Range("AC" & team1 & ", AC" & team2) '8
                    
                    Set myOffLoads = Range("AD" & team1 & ", AD" & team2) '9
                    Set myKicks = Range("AE" & team1 & ", AE" & team2) '10
                    Set myKickMetres = Range("AF" & team1 & ", AF" & team2) '11
                    
                    Set myMissTackles = Range("AG" & team1 & ", AG" & team2) '12
                    Set myErrors = Range("AH" & team1 & ", AH" & team2) '13
                    
                    Set myPenalties = Range("AI" & team1 & ", AI" & team2) '14
                    Set mySinBins = Range("AJ" & team1 & ", AJ" & team2) '15
                    
                    For Each myY In myRng 'the one game Col U
                        If myY.Offset(0, -1) >= 40 Then 'col T Value
                            myY.Offset(0, -1).Interior.ColorIndex = 6
                        End If
                        If myY.Offset(0, -18) <> "" Then 'Col C - 1on1
                            If myY.Row < team2 Then
                                If myY.Offset(0, -1) > myY.Offset(14, -1) Then
                                    myY.Offset(0, -18).Interior.ColorIndex = 6 ' yellow
                                    T1_1on1 = T1_1on1 + 1
                                End If
                            ElseIf myY.Row > team2 Then
                                If myY.Offset(0, -1) > myY.Offset(-14, -1) Then
                                    myY.Offset(0, -18).Interior.ColorIndex = 6 ' yellow
                                    T2_1on1 = T2_1on1 + 1
                                End If
                                If myY.Row = myRowEnd - 1 Then
                                    Cells(team1 + 5, 25).value = T1_1on1
                                    Cells(team1 + 6, 25).value = T2_1on1
                                End If
                            End If
                        End If
                        If myY <> "" And (myY.Row = team1 Or myY.Row = team2) Then 'Col U
                            If myY.value = Application.Max(myValue) Then
                                myY.Interior.ColorIndex = 6 ' yellow
                                T_bestValue = myY.Row 'team with the best value
                            End If
                            If myY.Offset(0, 1).value = Application.Max(myPoints) Then 'V
                                myY.Offset(0, 1).Interior.ColorIndex = 45 ' orange
                                T_bestPoints = myY.Row
                            End If
                            If myY.Offset(0, 2).value = Application.Max(myTries) Then 'W
                                myY.Offset(0, 2).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            
                            If myY.Offset(0, 3).value = Application.Max(myTryAssists) Then 'X
                                myY.Offset(0, 3).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            
                            If myY.Offset(0, 4).value = Application.Max(myTackles) Then 'Y
                                myY.Offset(0, 4).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 5).value = Application.Max(myAllRun) Then 'Z
                                myY.Offset(0, 5).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 6).value = Application.Max(myARMetres) Then 'AA
                                myY.Offset(0, 6).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 7).value = Application.Max(myLineBreaks) Then 'AB
                                myY.Offset(0, 7).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 8).value = Application.Max(myTackleBusts) Then 'AC
                                myY.Offset(0, 8).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            
                            If myY.Offset(0, 9).value = Application.Max(myOffLoads) Then 'AD
                                myY.Offset(0, 9).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            
                            If myY.Offset(0, 10).value = Application.Max(myKicks) Then 'AE
                                myY.Offset(0, 10).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            
                            If myY.Offset(0, 11).value = Application.Max(myKickMetres) Then 'AF
                                myY.Offset(0, 11).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            
                            If myY.Offset(0, 12).value = Application.Min(myMissTackles) Then 'AG
                                myY.Offset(0, 12).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 13).value = Application.Min(myErrors) Then 'AH
                                myY.Offset(0, 13).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                        
                            If myY.Offset(0, 14).value = Application.Min(myPenalties) Then 'AI
                                myY.Offset(0, 14).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                        
                            If myY.Offset(0, 15).value = Application.Min(mySinBins) Then 'AJ
                                myY.Offset(0, 15).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                        End If
                        If myY.Row = team1 Then 'Col U
                            myY.Offset(1, 0).value = "Diff"
                            myY.Offset(2, 0).value = Range("U" & team1).value - Range("U" & team2).value 'value
                            T_diffValue = Abs(Range("U" & team1).value - Range("U" & team2).value) 'used to predict score
                            myY.Offset(2, 1).value = Range("V" & team1).value - Range("V" & team2).value 'Points
                            T_diffPoints = Abs(Range("V" & team1).value - Range("V" & team2).value)
                            myY.Offset(2, 2).value = Range("W" & team1).value - Range("W" & team2).value 'Tries
                            myY.Offset(2, 3).value = Range("X" & team1).value - Range("X" & team2).value 'Try Assists
                            myY.Offset(2, 4).value = Range("Y" & team1).value - Range("Y" & team2).value 'Tackles
                            myY.Offset(2, 5).value = Range("Z" & team1).value - Range("Z" & team2).value 'AllRuns
                            myY.Offset(2, 6).value = Range("AA" & team1).value - Range("AA" & team2).value 'ARMetres
                            myY.Offset(2, 7).value = Range("AB" & team1).value - Range("AB" & team2).value 'LineBreaks
                            myY.Offset(2, 8).value = Range("AC" & team1).value - Range("AC" & team2).value 'Tackle Busts
                            myY.Offset(2, 9).value = Range("AD" & team1).value - Range("AD" & team2).value 'Off Loads
                            myY.Offset(2, 10).value = Range("AE" & team1).value - Range("AE" & team2).value 'Kicks
                            myY.Offset(2, 11).value = Range("AF" & team1).value - Range("AF" & team2).value 'Kick Metres
                            myY.Offset(2, 12).value = Range("AG" & team1).value - Range("AG" & team2).value 'Missed Tackles
                            myY.Offset(2, 13).value = Range("AH" & team1).value - Range("AH" & team2).value 'Errors
                            myY.Offset(2, 14).value = Range("AI" & team1).value - Range("AI" & team2).value 'Penalties
                            myY.Offset(2, 15).value = Range("AJ" & team1).value - Range("AJ" & team2).value 'SinBin / SentOff
                            
                            myY.Offset(4, 0).value = "Best Players"
                            myY.Offset(5, 0).value = Range("B" & team1).value
                            myY.Offset(6, 0).value = Range("B" & team2).value
                            
                            myY.Offset(4, 3).value = "H/Lit"
                            myY.Offset(4, 4).value = "1 to 1"
                            
                            myY.Offset(4, 5).value = "Final Score"
                            Range("Z" & team1 + 7).NumberFormat = 0
                            myY.Offset(7, 5).value = "=Z" & team1 + 5 & "-Z" & team1 + 6
                            
                            Set borderRng = Range("Z" & team1 + 5 & ":Z" & team1 + 7)
                                With borderRng.Borders(xlEdgeLeft)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeTop)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeBottom)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeRight)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With

                            
                            myY.Offset(4, 7).value = "F/Cast Score"
                            myY.Offset(4, 11).value = "FootyForecaster" 'BETFAIR model
                            'myY.Offset(4, 13).value = "ROAR"
                            
                            T1_fwdVal = Application.Sum(Range("T" & team1 + 8 & ":" & "T" & team1 + 13))
                            myY.Offset(13, 0).value = T1_fwdVal
                            myY.Offset(12, 0).value = "FwdValue"
                            myY.Offset(12, 1).value = "Diff"
                            myY.Offset(8, 0).value = "Odds:"
                            Range("V" & team1 + 8 & ":Z" & team1 + 8).NumberFormat = "@"
                                
                            '-----------
                            'old ones
                            'myY.Offset(7, 6).Value = "=((O" & Team1 + 2 & "/2)+(P" & Team1 + 2 & "))+((Q" & Team1 + 5 & "-Q" & _
                            Team1 + 6 & ")/2)+((R" & Team1 + 5 & "-R" & Team1 + 6 & ")/2)+((X" & _
                            Team1 - 1 & "-X" & Team1 + 13 & "))"
                            '--------------
                            'real old ones:-
                            '=(AC5/2)+T5+(Q5/2)+((T8-T9)*2)
                            '=((O5/2)+(P5))+((Q8-Q9)/2)+((R8-R9)/2)+((X2-X16))
                            '-----------
                            myY.Offset(-1, 15).value = T1Count
                            'T1Count = 0
                        ElseIf myY.Row = team2 Then
                            myY.Offset(-1, 15).value = T2Count
                            'T2Count = 0
                            T2_fwdVal = Application.Sum(Range("T" & team2 + 8 & ":" & "T" & team2 + 13))
                            myY.Offset(13, 0).value = T2_fwdVal
                            myY.Offset(12, 0).value = "FwdValue"
                            'enter the diff value
                            myY.Offset(-1, 1).value = T1_fwdVal - T2_fwdVal
                            myY.Offset(3, 0).value = "Odds:"
                            Range("V" & team2 + 3 & ":Z" & team2 + 3).NumberFormat = "@"
                            
                        ElseIf myY.Row = myRowEnd - 1 Then
'predict winning team and score
'## Note we are not using forward values yet
'T_diffPoints calc
                            If T_diffPoints >= 30 Then
                                T_diffPoints = ((T_diffPoints - 13) / 2.5) + 13
                            ElseIf T_diffPoints >= 25 Then
                                T_diffPoints = ((T_diffPoints - 12) / 2.5) + 12
                            ElseIf T_diffPoints >= 20 Then
                                T_diffPoints = ((T_diffPoints - 11) / 2.5) + 11
                            ElseIf T_diffPoints >= 17.5 Then
                                T_diffPoints = ((T_diffPoints - 10) / 2.5) + 10
                            ElseIf T_diffPoints >= 15 Then
                                T_diffPoints = ((T_diffPoints - 9) / 2.5) + 9
                            ElseIf T_diffPoints >= 12.5 Then
                                T_diffPoints = ((T_diffPoints - 8) / 2.5) + 8
                            ElseIf T_diffPoints >= 10 Then
                                T_diffPoints = ((T_diffPoints - 7) / 2.5) + 7
                            ElseIf T_diffPoints >= 7.5 Then
                                T_diffPoints = ((T_diffPoints - 6) / 2.5) + 6
                            ElseIf T_diffPoints >= 5 Then
                                T_diffPoints = ((T_diffPoints - 5) / 2.5) + 5
                            ElseIf T_diffPoints > 1 Then
                                T_diffPoints = T_diffPoints
                            ElseIf T_diffPoints > 0 Then
                                T_diffPoints = 1
                            Else
                                T_diffPoints = 0
                                T_bestPoints = 0
                            End If
 'T_diffValue calc
                            If T_diffValue > 90 Then
                                T_diffValue = 12
                            ElseIf T_diffValue > 80 Then
                                T_diffValue = 10
                            ElseIf T_diffValue > 70 Then
                                T_diffValue = 9
                            ElseIf T_diffValue > 60 Then
                                T_diffValue = 8
                            ElseIf T_diffValue > 50 Then
                                T_diffValue = 7
                            ElseIf T_diffValue > 40 Then
                                T_diffValue = 6
                            ElseIf T_diffValue > 30 Then
                                T_diffValue = 5
                            ElseIf T_diffValue > 20 Then
                                T_diffValue = 4
                            ElseIf T_diffValue > 10 Then
                                T_diffValue = 3
                            ElseIf T_diffValue > 5 Then
                                T_diffValue = 2
                            ElseIf T_diffValue > 0 Then
                                T_diffValue = 1
                            Else
                                T_diffValue = 0
                                T_bestValue = 0
                            End If
'Team Counts (Totals in X Col above teams)
                            If T1Count <> T2Count Then
                                T_diffCount = Abs(T1Count - T2Count)
                                T_diffCount = T_diffCount * 1 'this can be changed 1.5
                                If T1Count > T2Count Then
                                    T_bestCount = team1
                                Else
                                    T_bestCount = team2
                                End If
                            Else 'if they are the same
                                T_bestCount = 0
                                T_diffCount = 0
                            End If
'HighLights
                            If Range("X" & team1 + 5).value <> Range("X" & team1 + 6).value Then 'best of H/Lit
                                T_diffHL = Abs(Range("X" & team1 + 5).value - Range("X" & team1 + 6).value)
                                T_diffHL = T_diffHL * 1 'this can be changed 2
                                If Range("X" & team1 + 5).value > Range("X" & team1 + 6).value Then
                                    T_bestHL = team1
                                Else
                                    T_bestHL = team2
                                End If
                            Else
                                T_diffHL = 0
                                T_bestHL = 0
                            End If
'1 to 1
                            If Range("Y" & team1 + 5).value <> Range("Y" & team1 + 6).value Then 'best of 1 to 1
                                T_diff1to1 = Abs(Range("Y" & team1 + 5).value - Range("Y" & team1 + 6).value)
                                T_diff1to1 = T_diff1to1 * 0.5 'this can be changed
                                'If T_diff1to1 >= 10 Then
                                '    T_diff1to1 = 5
                                'ElseIf T_diff1to1 >= 7 Then
                                '    T_diff1to1 = 4
                                'ElseIf T_diff1to1 >= 4 Then
                                '    T_diff1to1 = 3
                                'End If
                                If Range("Y" & team1 + 5).value > Range("Y" & team1 + 6).value Then
                                    T_best1to1 = team1
                                Else
                                    T_best1to1 = team2
                                End If
                            Else
                                T_best1to1 = 0
                                T_diff1to1 = 0
                            End If
'A - Team is best in Value and Points
                            If T_bestValue = T_bestPoints And T_diffValue > 0 Then 'team is best in value and points
                                If T_bestValue = team1 Then
                                    WinTeam = team1 + 5 'the row of the winning team
                                Else
                                    WinTeam = team1 + 6
                                End If
                                WinBy = T_diffValue + T_diffPoints              'Value and Points
                                If T_bestValue = T_bestCount Then
                                    WinBy = WinBy + T_diffCount                 'Team Counts X Col
                                ElseIf T_bestCount > 0 Then
                                    WinBy = WinBy - T_diffCount
                                End If
                                If T_bestValue = T_bestHL Then
                                    WinBy = WinBy + T_diffHL                    'Highlights Q Col
                                ElseIf T_bestHL > 0 Then
                                    WinBy = WinBy - T_diffHL
                                End If
                                If T_bestValue = T_best1to1 Then
                                    WinBy = WinBy + T_diff1to1                   '1 to 1 R Col
                                ElseIf T_best1to1 > 0 Then
                                    WinBy = WinBy - T_diff1to1
                                End If
                                'Range("W" & WinTeam).Value = WinBy
'C - Team is best in Team Counts (Col X)
                            ElseIf T1Count <> T2Count Then 'best of Team Counts (Totals in X Col above teams)
                                If T_bestCount = team1 Then
                                    WinTeam = team1 + 5
                                Else
                                    WinTeam = team1 + 6
                                End If
                                If T_bestCount = T_bestValue Then 'note T_bestValue <> T_bestPoints
                                    WinBy = T_diffValue + T_diffCount '- T_diffPoints
                                ElseIf T_bestCount = T_bestPoints Then
                                    WinBy = T_diffPoints + T_diffCount '- T_diffValue
                                Else 'if value and points are 0
                                    WinBy = T_diffCount
                                End If
                                If T_bestCount = T_bestHL Then
                                    WinBy = WinBy + T_diffHL                    'Highlights Q Col
                                ElseIf T_bestHL > 0 Then
                                    WinBy = WinBy - T_diffHL
                                End If
                                If T_bestCount = T_best1to1 Then
                                    WinBy = WinBy + T_diff1to1                   '1 to 1 R Col
                                ElseIf T_best1to1 > 0 Then
                                    WinBy = WinBy - T_diff1to1
                                End If
                                'Range("W" & WinTeam).Value = WinBy
'B - best in Highlights
                            ElseIf Range("X" & team1 + 5).value <> Range("X" & team1 + 6).value Then 'best of H/Lit
                                If T_bestHL = team1 Then
                                    WinTeam = team1 + 5 'the row of the winning team
                                Else
                                    WinTeam = team1 + 6
                                End If
                                If T_bestHL = T_bestValue Then
                                    WinBy = T_diffHL + T_diffValue '- T_diffPoints
                                ElseIf T_bestHL = T_bestPoints Then
                                    WinBy = T_diffHL + T_diffPoints '- T_diffValue
                                Else
                                    WinBy = T_diffHL
                                End If
                                If T_bestHL = T_bestCount Then
                                    WinBy = WinBy + T_diffCount                 'Team Counts X Col
                                ElseIf T_bestCount > 0 Then
                                    WinBy = WinBy - T_diffCount
                                End If
                                If T_bestHL = T_best1to1 Then
                                    WinBy = WinBy + T_diff1to1                   '1 to 1 R Col
                                ElseIf T_best1to1 > 0 Then
                                    WinBy = WinBy - T_diff1to1
                                End If
                                'Range("W" & WinTeam).Value = WinBy
'D
                            ElseIf Range("Y" & team1 + 5).value <> Range("Y" & team1 + 6).value Then 'best of 1 to 1
                                If T_best1to1 = team1 Then
                                    WinTeam = team1 + 5 'the row of the winning team
                                Else
                                    WinTeam = team1 + 6
                                End If
                                If T_best1to1 = T_bestValue Then
                                    WinBy = T_diff1to1 + T_diffValue '- T_diffPoints
                                ElseIf T_best1to1 = T_bestPoints Then
                                    WinBy = T_diff1to1 + T_diffPoints '- T_diffValue
                                Else
                                    WinBy = T_diff1to1
                                End If
                                If T_best1to1 = T_bestCount Then
                                    WinBy = WinBy + T_diffCount                 'Team Counts X Col
                                ElseIf T_bestCount > 0 Then
                                    WinBy = WinBy - T_diffCount
                                End If
                                If T_best1to1 = T_bestHL Then
                                    WinBy = WinBy + T_diffHL                    'Highlights Q Col
                                ElseIf T_bestHL > 0 Then
                                    WinBy = WinBy - T_diffHL
                                End If
                                'Range("W" & WinTeam).Value = WinBy
                            Else
                                MsgBox ("Can't separate the Teams using 'nrlHLFinalPoints'")
                                Exit Sub
                            End If
                            'If WinBy >= 30 Then
                            '    WinBy = ((WinBy - 13) / 2.5) + 13
                            'ElseIf WinBy >= 25 Then
                            '    WinBy = ((WinBy - 12) / 2.5) + 12
                            'ElseIf WinBy >= 20 Then
                            '    WinBy = ((WinBy - 11) / 2.5) + 11
                            'ElseIf WinBy >= 17.5 Then
                            '    WinBy = ((WinBy - 10) / 2.5) + 10
                            'ElseIf WinBy >= 15 Then
                            '    WinBy = ((WinBy - 9) / 2.5) + 9
                            'ElseIf WinBy >= 12.5 Then
                            '    WinBy = ((WinBy - 8) / 2.5) + 8
                            'ElseIf WinBy >= 10 Then
                            '    WinBy = ((WinBy - 7) / 2.5) + 7
                            'ElseIf WinBy >= 7.5 Then
                            '    WinBy = ((WinBy - 6) / 2.5) + 6
                            'ElseIf WinBy >= 5 Then
                            '    WinBy = ((WinBy - 5) / 2.5) + 5
                            'ElseIf WinBy > 0 Then
                            '    WinBy = WinBy
                            'Else
                            '    WinBy = 1
                            'End If
                            If WinBy >= 50 Then
                                WinBy = 25
                            ElseIf WinBy > 5 Then
                                WinBy = 0.5 * WinBy
                            ElseIf WinBy > 0 Then
                                WinBy = WinBy
                            Else
                                WinBy = 1
                            End If
'round to nearest 2
                            If WinBy > 2 Then
                                WinBy = Round(WinBy / 2, 0) * 2
                            End If
                            Range("AD" & WinTeam).value = WinBy
                            Range("AB" & WinTeam).value = "To win by:"
                            
                            Range("AB" & team1 + 7).value = "ChkScore"
                            '=P5+(O5/10)+(Q8-Q9)+(R8-R9)+(X2-X16)+(P16/10)
                            'modified to include an extra bracket
                            '=(P5+(O5/10))+(Q8-Q9)+(R8-R9)+(X2-X16)+(P16/10)
                            Range("AD" & team1 + 7).NumberFormat = 0
                            'Range("AD" & Team1 + 7).value = (Range("V" & Team1 + 2).value + _
                                (Range("U" & Team1 + 2).value / 18)) + _
                                (Range("X" & Team1 + 5).value - Range("X" & Team1 + 6).value) + _
                                (Range("Y" & Team1 + 5).value - Range("Y" & Team1 + 6).value) + _
                                (Range("AJ" & Team1 - 1).value - Range("AJ" & Team1 + 13).value) + _
                                (Range("V" & Team1 + 13).value / 18)
                            'Stop
                            Range("AD" & team1 + 7).value = WorksheetFunction.Round((Range("V" & team1 + 2).value + _
                                (Range("U" & team1 + 2).value / 18)) + _
                                (Range("X" & team1 + 5).value - Range("X" & team1 + 6).value) + _
                                (Range("Y" & team1 + 5).value - Range("Y" & team1 + 6).value) + _
                                (Range("AJ" & team1 - 1).value - Range("AJ" & team1 + 13).value) + _
                                (Range("V" & team1 + 13).value / 18), 0)

                            
                            If WinTeam = team1 + 5 Then 'the row of the winning team
                                LoseTeam = team1 + 6
                            Else
                                LoseTeam = team1 + 5
                            End If

                            NRLLog Range("U" & WinTeam).value & " to defeat " & Range("U" & LoseTeam).value & " by " & WinBy

                        End If
                        'T1Count = 0
                        'T2Count = 0
                        'T1_1on1 = 0
                        'T2_1on1 = 0
'Log used for testing
                        'NRLLog myX.Row & "," & Team1 & "," & Team2 & "," & myY.Row & "," & T1_1on1 & "," & T2_1on1 & _
                        "," & T_bestValue & "," & T_bestPoints & "," & T1Count & "," & T2Count & "," & T_diffValue & _
                        "," & T_diffPoints & "," & T_bestCount & "," & T_diffHL & "," & T_bestHL & "," & T_diff1to1 & _
                        "," & T_best1to1 & "," & WinTeam & "," & WinBy
                    Next myY
                    myRow1 = myRowEnd + 1
                End If
                'NRLLog myX.Row & "," & Team1 & "," & Team2 & "," & myY.Row & "," & T1_1on1 & "," & T2_1on1 & _
                "," & T_bestValue & "," & T_bestPoints & "," & T1Count & "," & T2Count & "," & T_diffValue & _
                "," & T_diffPoints & "," & T_bestCount & "," & T_diffHL & "," & T_bestHL & "," & T_diff1to1 & _
                "," & T_best1to1 & "," & WinTeam & "," & WinBy
        Next myX
Range("A1").Select
End Sub
Private Sub NRLprintSheet()
Dim lastRow As Long
lastRow = (Range("A" & Rows.count).End(xlUp).Row) - 1
    
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$1:$1"
        .PrintTitleColumns = ""
    End With
    ActiveSheet.PageSetup.PrintArea = "A1:AJ" & lastRow
    With ActiveSheet.PageSetup
        .CenterHeader = "&F"
        .LeftMargin = Application.InchesToPoints(0.196850393700787)
        .RightMargin = Application.InchesToPoints(0.196850393700787)
        .TopMargin = Application.InchesToPoints(0.393700787401575)
        .BottomMargin = Application.InchesToPoints(0.393700787401575)
        .HeaderMargin = Application.InchesToPoints(0.196850393700787)
        .FooterMargin = Application.InchesToPoints(0.196850393700787)
        .PrintHeadings = False
        .PrintGridlines = True
        .PrintComments = xlPrintNoComments
       ' .PrintQuality = 600
        .CenterHorizontally = False
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = False
        .PrintErrors = xlPrintErrorsDisplayed
     End With
    Range("D2").Select
End Sub
Sub JoinPlayers_old()
'Dim CurCell         As Range
Dim curRow          As Long

curRow = Selection.Row

If Selection <> "" Then
        Rows(curRow & ":" & curRow).Insert Shift:=xlDown
End If
Range("A" & curRow).value = Range("A" & curRow - 1)
Range("B" & curRow).value = Range("B" & curRow - 1)
Range("C" & curRow).value = Range("C" & curRow - 1)
Range("D" & curRow - 1) = Replace(Range("D" & curRow - 1), "-", "")
Range("D" & curRow - 2) = Replace(Range("D" & curRow - 2), "-", "")
Range("D" & curRow).value = Range("D" & curRow - 1) + Range("D" & curRow - 2)
Range("E" & curRow - 1) = Replace(Range("E" & curRow - 1), "-", "")
Range("E" & curRow - 2) = Replace(Range("E" & curRow - 2), "-", "")
Range("E" & curRow).value = Range("E" & curRow - 1) + Range("E" & curRow - 2)
Range("F" & curRow - 1) = Replace(Range("F" & curRow - 1), "-", "")
Range("F" & curRow - 2) = Replace(Range("F" & curRow - 2), "-", "")
Range("F" & curRow).value = Range("F" & curRow - 1) + Range("F" & curRow - 2)
Range("G" & curRow - 1) = Replace(Range("G" & curRow - 1), "-", "")
Range("G" & curRow - 2) = Replace(Range("G" & curRow - 2), "-", "")
Range("G" & curRow).value = Range("G" & curRow - 1) + Range("G" & curRow - 2)
Range("H" & curRow - 1) = Replace(Range("H" & curRow - 1), "-", "")
Range("H" & curRow - 2) = Replace(Range("H" & curRow - 2), "-", "")
Range("H" & curRow).value = Range("H" & curRow - 1) + Range("H" & curRow - 2)
Range("I" & curRow - 1) = Replace(Range("I" & curRow - 1), "-", "")
Range("I" & curRow - 2) = Replace(Range("I" & curRow - 2), "-", "")
Range("I" & curRow).value = Range("I" & curRow - 1) + Range("I" & curRow - 2)
Range("J" & curRow - 1) = Replace(Range("J" & curRow - 1), "-", "")
Range("J" & curRow - 2) = Replace(Range("J" & curRow - 2), "-", "")
Range("J" & curRow).value = Range("J" & curRow - 1) + Range("J" & curRow - 2)
Range("K" & curRow - 1) = Replace(Range("K" & curRow - 1), "-", "")
Range("K" & curRow - 2) = Replace(Range("K" & curRow - 2), "-", "")
Range("K" & curRow).value = Range("K" & curRow - 1) + Range("K" & curRow - 2)
Range("L" & curRow - 1) = Replace(Range("L" & curRow - 1), "-", "")
Range("L" & curRow - 2) = Replace(Range("L" & curRow - 2), "-", "")
Range("L" & curRow).value = Range("L" & curRow - 1) + Range("L" & curRow - 2)
Range("M" & curRow - 1) = Replace(Range("M" & curRow - 1), "-", "")
Range("M" & curRow - 2) = Replace(Range("M" & curRow - 2), "-", "")
Range("M" & curRow).value = Range("M" & curRow - 1) + Range("M" & curRow - 2)
Range("N" & curRow - 1) = Replace(Range("N" & curRow - 1), "-", "")
Range("N" & curRow - 2) = Replace(Range("N" & curRow - 2), "-", "")
Range("N" & curRow).value = Range("N" & curRow - 1) + Range("N" & curRow - 2)
Range("O" & curRow - 1) = Replace(Range("O" & curRow - 1), "-", "")
Range("O" & curRow - 2) = Replace(Range("O" & curRow - 2), "-", "")
Range("O" & curRow).value = Range("O" & curRow - 1) + Range("O" & curRow - 2)
Range("P" & curRow).value = Range("A" & curRow) & "^" & Range("B" & curRow) & "^" & Range("C" & curRow) & "^" & _
    Range("D" & curRow) & "^" & Range("E" & curRow) & "^" & Range("F" & curRow) & "^" & Range("G" & curRow) & "^" & _
    Range("H" & curRow) & "^" & Range("I" & curRow) & "^" & Range("J" & curRow) & "^" & Range("K" & curRow) & "^" & _
    Range("L" & curRow) & "^" & Range("M" & curRow) & "^" & Range("N" & curRow) & "^" & Range("O" & curRow)
End Sub
Sub JoinDuplicates()
'
Dim sFile           As String
Dim SFileBac           As String
Dim rng             As Range
'Dim myX             As Range
'Dim lastRow         As Long
Dim sName           As String
Dim nameCount       As Long
Dim r               As Long
Dim s(1 To 3)       As String
Dim n(4 To 25)      As Long
Dim d               As Long
Dim sAdd            As String
Dim nFileNum        As Long

Dim myRecord As Range
Dim myField As Range
Dim sOut As String

'backup original file
sFile = "C:\FILES\NRL\data\PlayerStats.txt"
SFileBac = "C:\FILES\NRL\data\PlayerStats_bac.txt"
FileCopy sFile, SFileBac
'import the file into excel
    Workbooks.OpenText fileName:=sFile, Origin:=437, StartRow:=1, _
        DataType:=xlDelimited, Other:=True, OtherChar:="^", _
        FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), _
        Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1), _
        Array(12, 1), Array(13, 1), Array(14, 1), Array(15, 1), Array(16, 1), Array(17, 1), _
        Array(18, 1), Array(19, 1), Array(20, 1), Array(21, 1), Array(22, 1), Array(23, 1), _
        Array(24, 1), Array(25, 1)), TrailingMinusNumbers:=True
    Cells.Select
    Selection.Sort key1:=Range("A1"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
        DataOption1:=xlSortNormal
'
    Application.DisplayAlerts = False 'allow it to overwrite
    ActiveWorkbook.SaveAs fileName:="C:\FILES\NRL\data\PlayerStats.xls"
    Application.DisplayAlerts = True
'delete the original file
    Kill sFile
'here:
'lastRow = Range("A" & Rows.Count).End(xlUp).Row
Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
Set rng = Selection
For r = rng.Rows.count To 1 Step -1
    sName = rng.Rows(r).value
    If sName <> "REM" Then
        nameCount = Application.WorksheetFunction.CountIf(rng.Columns(1), sName)
        If nameCount > 1 Then
            For d = 1 To nameCount
                s(1) = Range("A" & r - (d - 1))
                s(2) = Range("B" & r - (d - 1))
                s(3) = Range("C" & r - (d - 1))
'Range("D" & CurRow - 1) = Replace(Range("D" & CurRow - 1), "-", "")
                Range("D" & r - (d - 1)) = Replace(Range("D" & r - (d - 1)), "-", "")
                n(4) = n(4) + Range("D" & r - (d - 1))
                Range("E" & r - (d - 1)) = Replace(Range("E" & r - (d - 1)), "-", "")
                n(5) = n(5) + Range("E" & r - (d - 1))
                Range("F" & r - (d - 1)) = Replace(Range("F" & r - (d - 1)), "-", "")
                n(6) = n(6) + Range("F" & r - (d - 1))
                Range("G" & r - (d - 1)) = Replace(Range("G" & r - (d - 1)), "-", "")
                n(7) = n(7) + Range("G" & r - (d - 1))
                Range("H" & r - (d - 1)) = Replace(Range("H" & r - (d - 1)), "-", "")
                n(8) = n(8) + Range("H" & r - (d - 1))
                Range("I" & r - (d - 1)) = Replace(Range("I" & r - (d - 1)), "-", "")
                n(9) = n(9) + Range("I" & r - (d - 1))
                Range("J" & r - (d - 1)) = Replace(Range("J" & r - (d - 1)), "-", "")
                n(10) = n(10) + Range("J" & r - (d - 1))
                Range("K" & r - (d - 1)) = Replace(Range("K" & r - (d - 1)), "-", "")
                n(11) = n(11) + Range("K" & r - (d - 1))
                Range("L" & r - (d - 1)) = Replace(Range("L" & r - (d - 1)), "-", "")
                n(12) = n(12) + Range("L" & r - (d - 1))
                Range("M" & r - (d - 1)) = Replace(Range("M" & r - (d - 1)), "-", "")
                n(13) = n(13) + Range("M" & r - (d - 1))
                Range("N" & r - (d - 1)) = Replace(Range("N" & r - (d - 1)), "-", "")
                n(14) = n(14) + Range("N" & r - (d - 1))
                Range("O" & r - (d - 1)) = Replace(Range("O" & r - (d - 1)), "-", "")
                n(15) = n(15) + Range("O" & r - (d - 1))
            
                Range("P" & r - (d - 1)) = Replace(Range("P" & r - (d - 1)), "-", "")
                n(16) = n(16) + Range("P" & r - (d - 1))
                Range("Q" & r - (d - 1)) = Replace(Range("Q" & r - (d - 1)), "-", "")
                n(17) = n(17) + Range("Q" & r - (d - 1))
                Range("R" & r - (d - 1)) = Replace(Range("R" & r - (d - 1)), "-", "")
                n(18) = n(18) + Range("R" & r - (d - 1))
                Range("S" & r - (d - 1)) = Replace(Range("S" & r - (d - 1)), "-", "")
                n(19) = n(19) + Range("S" & r - (d - 1))
                Range("T" & r - (d - 1)) = Replace(Range("T" & r - (d - 1)), "-", "")
                n(20) = n(20) + Range("T" & r - (d - 1))
                Range("U" & r - (d - 1)) = Replace(Range("U" & r - (d - 1)), "-", "")
                n(21) = n(21) + Range("U" & r - (d - 1))
                Range("V" & r - (d - 1)) = Replace(Range("V" & r - (d - 1)), "-", "")
                n(22) = n(22) + Range("V" & r - (d - 1))
                Range("W" & r - (d - 1)) = Replace(Range("W" & r - (d - 1)), "-", "")
                n(23) = n(23) + Range("W" & r - (d - 1))
                Range("X" & r - (d - 1)) = Replace(Range("X" & r - (d - 1)), "-", "")
                n(24) = n(24) + Range("X" & r - (d - 1))
                Range("Y" & r - (d - 1)) = Replace(Range("Y" & r - (d - 1)), "-", "")
                n(25) = n(25) + Range("Y" & r - (d - 1))
            Next d
'build the file to add at the end
            sAdd = sAdd & s(1) & "^" & s(2) & "^" & s(3) & "^" & n(4) & "^" & n(5) & "^" & _
            n(6) & "^" & n(7) & "^" & n(8) & "^" & n(9) & "^" & n(10) & "^" & n(11) & "^" & n(12) & _
            "^" & n(13) & "^" & n(14) & "^" & n(15) & "^" & n(16) & "^" & n(17) & "^" & n(18) _
            & "^" & n(19) & "^" & n(20) & "^" & n(21) & "^" & n(22) & "^" & n(23) & "^" & n(24) _
            & "^" & n(25) & vbCrLf
'mark that row for deletion
            For d = 1 To nameCount
                Range("A" & r - (d - 1)) = "REM"
            Next d
            s(1) = ""
            s(2) = ""
            s(3) = ""
            n(4) = 0
            n(5) = 0
            n(6) = 0
            n(7) = 0
            n(8) = 0
            n(9) = 0
            n(10) = 0
            n(11) = 0
            n(12) = 0
            n(13) = 0
            n(14) = 0
            n(15) = 0
            n(16) = 0
            n(17) = 0
            n(18) = 0
            n(19) = 0
            n(20) = 0
            n(21) = 0
            n(22) = 0
            n(23) = 0
            n(24) = 0
            n(25) = 0
        End If
    End If
Next r
' now remove the rows marked for deletion
Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
Set rng = Selection
For r = rng.Rows.count To 1 Step -1
    If rng.Cells(r, 1).value = "REM" Then
        rng.Rows(r).EntireRow.Delete
    End If
Next r
' output the data and add sAdd
nFileNum = FreeFile
Open sFile For Output As #nFileNum
For Each myRecord In Range("A1:A" & _
    Range("A" & Rows.count).End(xlUp).Row)
    With myRecord
        For Each myField In Range(.Cells(1), Cells(.Row, 25))
            sOut = sOut & "^" & Trim(myField.text)
        Next myField
        sOut = Mid(sOut, 2) ' this take off the first delimiter
        Print #nFileNum, sOut
        sOut = Empty
    End With
Next myRecord
Print #nFileNum, sAdd
Close #nFileNum
'close this sheet
ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
'Workbooks.Add

End Sub
Sub NRLLog(LogMessage As String)
Dim LogFileName As String
Dim FileNum As Integer
'Dim ThisTimestamp As String

'ThisTimestamp = Format(Date, "dd/mm/yyyy") & "," & Format(Time, "hh:mm") & ","
LogFileName = "C:\FILES\NRL\data\Process.txt"
'LogFileName = "C:\FILES\NRL\Process.csv"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, LogMessage ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
Private Sub GetNRLStats_DOM()
' This script uses the DOM method however only seems to get the players that have actually played this year
' currently not being used.
'Obtains all the player statistics from website http://www.nrl.com/Stats/TelstraPremiership/PlayerStatistics/PlayerList/tabid/10833/Default.aspx
'23/07/2015 chuck
'Dim YearSelect As IHTMLElement
Dim QuestionList As IHTMLElement
Dim Questions As IHTMLElementCollection
Dim Question As IHTMLElement
Dim rowNumber As Long
Dim QuestionId As String
Dim QuestionFields As IHTMLElementCollection
Dim QuestionField As IHTMLElement
Dim BitsFields As IHTMLElementCollection '
Dim Bits As IHTMLElement
Dim LoadMore As IHTMLElementCollection 'LoadMore
Dim More As IHTMLElement
Dim AllMore As IHTMLElementCollection
Dim Piece As IHTMLElement
Dim GetMore As Boolean
'stats to averages
Dim StatType As IHTMLElement
Dim StatTypeButs As IHTMLElementCollection
Dim StatTypes As IHTMLElementCollection
Dim Buts As IHTMLElement
Dim Types As IHTMLElement
'stats to 2016 year
Dim YearType As IHTMLElement
Dim YearTypeList As IHTMLElementCollection
Dim List As IHTMLElement

Dim name As String
'Dim views As String
Dim QuestionFieldLinks As IHTMLElementCollection
Dim myCnt As String
Dim FoundPlayer As Boolean
Dim ColNo As Long
Dim lpage As Long

Dim PlayerURLS As IHTMLElementCollection
Dim PlayerURL As IHTMLElement
Dim IndURLS As IHTMLElementCollection
Dim IndURL As IHTMLElement
Dim sURL As String

Dim statsTable As IHTMLElementCollection
Dim eachSection As IHTMLElement

'to refer to the running copy of Internet Explorer
Dim ie As InternetExplorer
'to refer to the HTML document returned
Dim html As HTMLDocument
'Dim YearSelect As HTMLDocument
'open Internet Explorer in memory, and go to website
    Set ie = New InternetExplorer
   ' ie.Visible = False
    ie.Visible = True
'ie.navigate http://www.nrl.com/Stats/TelstraPremiership/PlayerStatistics/PlayerList/tabid/10833/Default.aspx
   ' ie.navigate "http://www.nrl.com/Stats/TelstraPremiership/PlayerStatistics/PlayerList/tabid/10833/Default.aspx" 'old
    'ie.navigate "http://www.nrl.com/stats/telstrapremiership/playerstatistics/tabid/10877/default.aspx" 'new
    ie.navigate "http://www.nrl.com/telstrapremiership/playerprofiles/wests-tigersplayerlist/tabid/10833/clubid/15/default.aspx"
'Wait until IE is done loading page
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
        Application.StatusBar = "Getting NRL Stats ..."
        DoEvents
    Loop
'show text of HTML document returned
    Set html = ie.document
    rowNumber = 1
'MsgBox html.documentElement.innerHTML
'#################
'write html to a file
'    Dim fileSaveName As String
'    Dim curWork As String
'    Dim nFileNum As Long
'    curWork = html.documentElement.innerHTML
'    fileSaveName = "C:\FILES\AFL\test.txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Append As #nFileNum
'    Print #nFileNum, curWork
'    Close #nFileNum
'################
'Dim Tmp2 As String
'Dim Tmp3 As String
'Dim Tmp4 As String
'Dim Tmp5 As String
'Dim Tmp6 As String
'GoTo here:
'Set Year to 2016 and stats to Averages
'Set StatType = html.getElementById("clubStatsModule116423") 'old
Set StatType = html.GetElementByID("clubStatsModule116479") 'new #clubStatsModule116479
Set StatTypes = StatType.Children
For Each Types In StatTypes
    If Types.ClassName = "clubStats__pickerContainer" Then
        Set YearTypeList = Types.all
        For Each List In YearTypeList
            If LCase(List.innerHTML) = "2016" Then
                List.Click
            End If
        Next List
    'ElseIf Types.ID = "radioBtnContainer_116423" Then 'old
    ElseIf Types.ID = "clubStatsModuleOptionsContainer_116479" Then 'new
        Set StatTypeButs = Types.all
        For Each Buts In StatTypeButs
            If Buts.TagName = "INPUT" Then
                If InStr(1, LCase(Buts.outerHTML), "averages") > 0 Then
                    Buts.Click
                End If
            End If
        Next Buts
    End If
Next Types
here:
CycleMore:
Set StatType = html.GetElementByID("clubStatsModule116479") 'new
Set LoadMore = StatType.getElementsByTagName("a")
For Each More In LoadMore
    If More.ClassName = "loadMoreContainer" Then
        Set AllMore = More.all
        For Each Piece In AllMore
            If Piece.ClassName = "loadMore" Then
                If InStr(1, LCase(Piece.outerHTML), "display: none") = 0 Then
                    Piece.Click
                    GoTo CycleMore:
                End If
            End If
        Next Piece
    End If
Next More
'Do While ie.READYSTATE <> READYSTATE_COMPLETE
'    DoEvents
'    Loop
'Set html = ie.document
   ' Set ie = Nothing
'    Application.StatusBar = ""

Set StatType = html.GetElementByID("clubStatsModule116479")
Set statsTable = StatType.Children
For Each eachSection In statsTable
    If eachSection.ClassName = "clubStats__statsTable" Then
        
        Set PlayerURLS = eachSection.getElementsByTagName("TR")
        For Each PlayerURL In PlayerURLS
            If PlayerURL.ClassName = "ladderRow averages" Then
                Set IndURLS = PlayerURL.getElementsByTagName("a")
                For Each IndURL In IndURLS
                    If Left(IndURL.outerHTML, 7) = "<a href" Then
                        sURL = IndURL.href
                        GetPlayerStats sURL
                    End If
                Next IndURL
            End If
        Next PlayerURL
    End If
Next eachSection

Set html = Nothing
   ' ie.stop
ie.Quit
Set ie = Nothing
Application.StatusBar = ""
    'MsgBox "Done!"
End Sub

Private Sub GetPlayerStats(newURL As String)
'-------------
'for testing
'End Sub
'Private Sub GetPlayerStatsTest()
'Dim newURL As String
'newURL = "http://www.nrl.com/telstrapremiership/playerstats/playerprofile/tabid/10898/clubid/16/playerid/6787/seasonid/44/default.aspx"
'---------------------
Dim StatStart As IHTMLElement
Dim StatHeads As IHTMLElementCollection
Dim StatHead As IHTMLElement
Dim PSie As InternetExplorer
Dim PShtml As HTMLDocument

Dim rowNumber As Long
Dim ColNumber As Long
Dim sName As String
Dim foundName As Boolean
Dim foundStats As Boolean
Dim StatStr As String
    
rowNumber = ActiveSheet.UsedRange.Rows.count
ColNumber = 1
If Cells(rowNumber, ColNumber) <> "" Then
    rowNumber = rowNumber + 1
End If
Set PSie = New InternetExplorer
'PSie.Visible = False
PSie.Visible = True
PSie.navigate newURL
    
Do While PSie.READYSTATE <> READYSTATE_COMPLETE
    Application.StatusBar = "Getting Player Stats ..."
    DoEvents
Loop
Set PShtml = PSie.document

foundName = False
foundStats = False
Set StatStart = PShtml.GetElementByID("dnn_ctr114407_ModuleContent")
Set StatHeads = StatStart.all
For Each StatHead In StatHeads
 '   foundName = False
    If StatHead.ClassName = "pageTitle" Then
        sName = StatHead.innerText
        foundName = True
    ElseIf StatHead.TagName = "TR" And _
        InStr(1, StatHead.innerHTML, ">2016 Total") > 0 And _
        foundName = True Then
        foundStats = True
        StatStr = StatHead.innerHTML
        StatStr = Mid(StatStr, InStr(1, StatStr, "2016 Total</th>") + 15, Len(StatStr))
        StatStr = Replace(StatStr, Chr(32), "")
        StatStr = Replace(StatStr, Chr(10), "")
        StatStr = Replace(StatStr, Chr(9), "")
        StatStr = Replace(StatStr, "<td>", "|")
        StatStr = Replace(StatStr, "</td>", "")
        StatStr = Replace(StatStr, "-", "0")
        StatStr = Trim(StatStr)
        'MsgBox StatStr
'put the data into the sheet
        Cells(rowNumber, ColNumber) = sName
        ColNumber = ColNumber + 1
        Cells(rowNumber, ColNumber) = sName
        ColNumber = ColNumber + 2
        'P played
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(1)
        ColNumber = ColNumber + 1
        'T Tries
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(2)
        ColNumber = ColNumber + 1
        'G Goals
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(3)
        ColNumber = ColNumber + 1
        'FG Field Goals
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(4)
        ColNumber = ColNumber + 1
        'AR All runs
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(5)
        ColNumber = ColNumber + 1
        'ARM All Run Metres
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(6)
        ColNumber = ColNumber + 1
        'LB Line Breaks
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(7)
        ColNumber = ColNumber + 1
        'HU Hitups
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(8)
        ColNumber = ColNumber + 1
        'OL Off Loads
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(9)
        ColNumber = ColNumber + 1
        'TK Tackles
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(10)
        ColNumber = ColNumber + 1
        'MT Missed Tackles
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(11)
        ColNumber = ColNumber + 1
        'E Errors
        Cells(rowNumber, ColNumber) = Split(StatStr, "|")(12)
        'ColNumber = ColNumber + 1
        foundName = False
        GoTo allDone:
    End If
Next StatHead
allDone:
    Set PShtml = Nothing
    PSie.Quit
    Set PSie = Nothing

End Sub
Sub BuildResultStats()
' Get the result stats for NRL games
' chuck 30/8/16
    Dim strPath         As String
    Dim Round           As String
    Dim nRound          As String
    Dim wbA             As Workbook
    Dim wbB             As Workbook
    Dim myBCol          As Range
    Dim myX             As Range
    Dim r               As Integer
    Dim Game            As String
    Dim FinalScore      As Double
    Dim value           As Long
    Dim Points          As Double
    Dim WinBy           As Long
    Dim ChkScore        As Long
    Dim a           As Double
    Dim b           As Double
    Dim OddsPoints      As Double
    
    Dim ROAR             As Double
    Dim GameCount       As Long
    
    Dim WinByChk        As Long
    Dim SBWinByChk      As Double
    Dim ChkScoreChk     As Long
    Dim SBChkScoreChk   As Double
    Dim OddsChk         As Long
    Dim SBOddsChk       As Double
    Dim NRL_pick        As Long
    Dim NRL_chk         As Long
    Dim SBNRL_chk       As Double
    Dim ROARChk          As Long
    Dim ROAR_chk       As Double
    
    Dim rng As Range
    Dim myR As Range
    Dim tgt As Long
    Dim t As Double
    Dim u As Double
    Dim x As Double


    If ActiveWorkbook.name <> "GameSummaries_2019.xls" Then
        MsgBox ("The worksheet 'GameSummaries_2019.xls' is not the current sheet")
        Exit Sub
    End If
    Set wbA = ActiveWorkbook
    nRound = InputBox("Round Number")
    Round = "round " & nRound & ".xls"
    
    strPath = "C:\FILES\NRL\Results\2019\"
    On Error Resume Next
    
    Workbooks.Open strPath & Round
    Set wbB = ActiveWorkbook
    Set myBCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1) 'wbB sheet
        For Each myX In myBCol 'this is col A
            If myX <> "" Then
                GameCount = GameCount + 1
                
                Game = myX.Offset(1, 1) & " v " & myX.Offset(15, 1)
                Game = Trim(Game)
                FinalScore = myX.Offset(8, 25)
                value = myX.Offset(3, 20)
                Points = myX.Offset(3, 21)
                WinBy = myX.Offset(6, 29) - myX.Offset(7, 29)
                ChkScore = myX.Offset(8, 29)
                a = myX.Offset(9, 22)
                b = myX.Offset(18, 22)
                'OddsPoints = myX.Offset(9, 22) - myX.Offset(18, 22)
                OddsPoints = a - b
                a = 0
                b = 0
                OddsPoints = WorksheetFunction.Round(OddsPoints, 0)
                NRL_pick = myX.Offset(6, 31) - myX.Offset(7, 31)
                'HitUps = myX.Offset(3, 21)
                'MissTackles = myX.Offset(3, 22)
                'Errors = myX.Offset(3, 23)
                'H_Lit = myX.Offset(6, 16) - myX.Offset(7, 16)
                'OneToOne = myX.Offset(6, 17) - myX.Offset(7, 17)
                'BestTTLs = myX.Offset(0, 23) - myX.Offset(14, 23)
                'FwdDiff = myX.Offset(14, 15)
                a = myX.Offset(6, 33)
                b = myX.Offset(7, 33)
                ROAR = a - b
                a = 0
                b = 0
                
                'ROAR = Application.Average((myX.Offset(6, 29) - myX.Offset(7, 29)), _
                (myX.Offset(6, 31) - myX.Offset(7, 31)), _
                (myX.Offset(9, 22) - myX.Offset(18, 22)), _
                myX.Offset(8, 29))
                'ROAR = WorksheetFunction.Round(AVG, 0)
            
                wbA.Activate
                Worksheets("Sheet1").Activate
                r = ActiveSheet.UsedRange.Rows.count + 1
                Worksheets("Sheet1").Cells(r, 1).value = nRound
                Worksheets("Sheet1").Cells(r, 2).value = Game
                Worksheets("Sheet1").Cells(r, 3).value = FinalScore
                Worksheets("Sheet1").Cells(r, 4).value = value
                Worksheets("Sheet1").Cells(r, 5).value = Points
                
                'WinByChk
                Worksheets("Sheet1").Cells(r, 6).value = WinBy
                If (FinalScore > 0 And WinBy > 0) _
                    Or (FinalScore < 0 And WinBy < 0) Then
                    Worksheets("Sheet1").Cells(r, 6).Interior.ColorIndex = 6
                    WinByChk = WinByChk + 1
                    SBWinByChk = SBWinByChk + 1
                    If FinalScore = WinBy Then
                        SBWinByChk = SBWinByChk + 1
                    End If
                End If
                If FinalScore - WinBy < 6 And WinBy - FinalScore < 6 Then
                    SBWinByChk = SBWinByChk + 0.5
                End If

                'ChkScoreChk SBChkScoreChk
                Worksheets("Sheet1").Cells(r, 8).value = ChkScore
                If (FinalScore > 0 And ChkScore > 0) _
                    Or (FinalScore < 0 And ChkScore < 0) Then
                    Worksheets("Sheet1").Cells(r, 8).Interior.ColorIndex = 6
                    ChkScoreChk = ChkScoreChk + 1
                    SBChkScoreChk = SBChkScoreChk + 1
                    If FinalScore = ChkScore Then
                        SBChkScoreChk = SBChkScoreChk + 1
                    End If
                End If
                If FinalScore - ChkScore < 6 And ChkScore - FinalScore < 6 Then
                    SBChkScoreChk = SBChkScoreChk + 0.5
                End If
                
                'OddsChk SBOddsChk
                'Worksheets("Sheet1").Cells(r, 10).value = OddsA
                'Worksheets("Sheet1").Cells(r, 11).value = OddsB
                Worksheets("Sheet1").Cells(r, 10).value = OddsPoints
                
                If (FinalScore > 0 And OddsPoints > 0) _
                    Or (FinalScore < 0 And OddsPoints < 0) Then
                    Worksheets("Sheet1").Cells(r, 10).Interior.ColorIndex = 6
                    OddsChk = OddsChk + 1
                    SBOddsChk = SBOddsChk + 1
                    If FinalScore = OddsPoints Then
                        SBOddsChk = SBOddsChk + 1
                    End If
                End If
                If FinalScore - OddsPoints < 6 And OddsPoints - FinalScore < 6 Then
                    SBOddsChk = SBOddsChk + 0.5
                End If
                
                'NRL_chk SBNRL_chk
                
                Worksheets("Sheet1").Cells(r, 12).value = NRL_pick
                If (FinalScore > 0 And NRL_pick > 0) _
                    Or (FinalScore < 0 And NRL_pick < 0) Then
                    Worksheets("Sheet1").Cells(r, 12).Interior.ColorIndex = 6
                    NRL_chk = NRL_chk + 1
                    SBNRL_chk = SBNRL_chk + 1
                    If FinalScore = NRL_pick Then
                        SBNRL_chk = SBNRL_chk + 1
                    End If
                End If
                If FinalScore - NRL_pick < 6 And NRL_pick - FinalScore < 6 Then
                    SBNRL_chk = SBNRL_chk + 0.5
                End If
                
'change to ROAR
                'AVGChk SBAVG_chk
                
                Worksheets("Sheet1").Cells(r, 14).value = ROAR
                If (FinalScore > 0 And ROAR > 0) _
                    Or (FinalScore < 0 And ROAR < 0) Then
                    Worksheets("Sheet1").Cells(r, 14).Interior.ColorIndex = 6
                    ROARChk = ROARChk + 1
                    ROAR_chk = ROAR_chk + 1
                    If FinalScore = ROAR Then
                        ROAR_chk = ROAR_chk + 1
                    End If
                End If
                If FinalScore - ROAR < 6 And ROAR - FinalScore < 6 Then
                    ROAR_chk = ROAR_chk + 0.5
                End If
                
                
'highlight the closest to the score

                tgt = FinalScore
                Set rng = Range("F" & r & ", H" & r & ", J" & r & ", L" & r & ", N" & r)
                t = WorksheetFunction.Max(rng) + 100
                For Each myR In rng
                    u = Abs(myR - tgt)
                    If u < t Then
                        t = u
                        x = myR
                    End If
                Next myR
                For Each myR In rng
                    If myR = x Then
                        If myR.Interior.ColorIndex = 6 Then
                            myR.Interior.ColorIndex = 4
                        End If
                    End If
                Next myR


'################
'Worksheets("Sheet1").Cells(r, 11).Value = HitUps
                'Worksheets("Sheet1").Cells(r, 12).Value = MissTackles
                'Worksheets("Sheet1").Cells(r, 13).Value = Errors
                'Worksheets("Sheet1").Cells(r, 14).Value = H_Lit
                'Worksheets("Sheet1").Cells(r, 15).Value = OneToOne
                'Worksheets("Sheet1").Cells(r, 16).Value = BestTTLs
                'Worksheets("Sheet1").Cells(r, 17).Value = FwdDiff
                'If (FinalScore > 0 And Points > 0) _
                '    Or (FinalScore < 0 And Points < 0) Then
                '    Worksheets("Sheet1").Cells(r, 2).Interior.ColorIndex = 6
                '    Hit = Hit + 1
                'End If
            End If

' Clear variables
            FinalScore = 0
            value = 0
            Points = 0
            WinBy = 0
            ChkScore = 0
            'OddsA = 0
            'OddsB = 0
            OddsPoints = 0
            NRL_pick = 0
            ROAR = 0
                    
        Next myX
        wbB.Close

        wbA.Activate
        Worksheets("Sheet1").Activate
        r = ActiveSheet.UsedRange.Rows.count
        'Worksheets("Sheet1").Cells(r, 7).Value = WinByChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 9).Value = ChkScoreChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 13).Value = OddsChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 15).Value = NRL_chk & " out of " & GameCount
        
        Worksheets("Sheet1").Cells(r, 7).value = WinByChk
        Worksheets("Sheet1").Cells(r, 9).value = ChkScoreChk
        Worksheets("Sheet1").Cells(r, 11).value = OddsChk
        Worksheets("Sheet1").Cells(r, 13).value = NRL_chk
        Worksheets("Sheet1").Cells(r, 15).value = ROARChk
'Enter the SuperBro Scores
        Worksheets("Sheet1").Cells(r, 16).value = SBWinByChk
        Worksheets("Sheet1").Cells(r, 17).value = SBChkScoreChk
        Worksheets("Sheet1").Cells(r, 18).value = SBOddsChk
        Worksheets("Sheet1").Cells(r, 19).value = SBNRL_chk
        Worksheets("Sheet1").Cells(r, 20).value = ROAR_chk

End Sub
Sub GetNRLOdds()

Dim wkName      As String
'Dim objWeb      As QueryTable
Dim urlName     As String
'Dim urlName1    As String
'Dim wbA         As Workbook
'Dim wbB         As Workbook
Dim myCol       As Range
Dim myX         As Range
Dim rng         As Range
Dim myY         As Range
Dim r           As Long
Dim found       As Long
Dim Title       As String
Dim teamA       As String
Dim teamB       As String
Dim teamAOdds   As String
Dim teamBOdds   As String
Dim teamAPoints As String
Dim teamBPoints As String

Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement

Dim myWork As String

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("phantomjs.exe")
StopMyProcess ("chromedriver.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkName = Replace(wkName, " ", "-")
'https://tab.ubet.com/sports/rugby-league/nrl/nrl-round-1
driver.Start "chrome", "https://tab.ubet.com/sports/rugby-league/nrl/"
driver.setImplicitWait 10000
driver.Wait (1000)

urlName = "/nrl-" & wkName
driver.get urlName, Raise:=False
driver.Wait (1000)
driver.maximizeWindow
On Error Resume Next
If InStr(1, driver.PageSource, "acc_exitButton") > 0 Then
    driver.findElementByXPath("//*[@id='acc_exitButton']").Click 'works
End If

Application.StatusBar = "Getting NRL Odds ..."
'                                             //*[@id="page-container"]/sports-container/div/div[3]/div/meetings/div/div[2]
Set startElement = driver.findElementByXPath("//*[@id='page-container']/sports-container/div/div[3]/div/meetings/div/div[2]")

Set elements = startElement.findElementsByTagName("div")
For Each element In elements
    If element.getAttribute("class") = "main-event" Then 'got the game
        myWork = element.text
        'Debug.Print myWork
        'Stop
        Title = Split(myWork, vbCrLf)(1)
        Title = Application.Proper(Title)
        teamA = Split(myWork, vbCrLf)(3)
        teamAOdds = Split(myWork, vbCrLf)(4)
        teamB = Split(myWork, vbCrLf)(5)
        teamBOdds = Split(myWork, vbCrLf)(6)
        teamAPoints = Split(myWork, vbCrLf)(8)
        If InStr(1, teamAPoints, "-") > 0 Then
            teamAPoints = Mid(teamAPoints, InStr(1, teamAPoints, "-") + 1, Len(teamAPoints))
        Else
            teamAPoints = ""
        End If
        teamBPoints = Split(myWork, vbCrLf)(10)
        If InStr(1, Split(myWork, vbCrLf)(10), "-") > 0 Then
            teamBPoints = Mid(teamBPoints, InStr(1, teamBPoints, "-") + 1, Len(teamBPoints))
        Else
            teamBPoints = ""
        End If
        teamAPoints = Trim(teamAPoints)
        teamBPoints = Trim(teamBPoints)
        teamA = fixTeam(teamA)
        teamB = fixTeam(teamB)
        
        Set myCol = Range("B2:B" & Range("B" & Rows.count).End(xlUp).Row)
        For Each myX In myCol 'this is col B
            'Stop
            If myX <> "" Then
                If myX = teamA Then
                    found = found + 1
                    If myX.Offset(8, 19) = "Odds:" Then 'this is the top team
                        myX.Offset(8, 20) = teamAOdds
                        myX.Offset(8, 21) = teamAPoints
                    Else
                        myX.Offset(3, 20) = teamAOdds
                        myX.Offset(3, 21) = teamAPoints
                    End If
                ElseIf myX = teamB Then
                    found = found + 1
                    If myX.Offset(8, 19) = "Odds:" Then 'this is the top team
                        myX.Offset(8, 20) = teamBOdds
                        myX.Offset(8, 21) = teamBPoints
                    Else
                        myX.Offset(3, 20) = teamBOdds
                        myX.Offset(3, 21) = teamBPoints
                    End If
                End If
            End If
            If found = 2 Then
                If teamAPoints > teamBPoints Then
                    NRLLog "Betting odds: " & teamA & " at $" & teamAOdds & " to beat " & teamB & " at $" _
                        & teamBOdds & " by " & teamAPoints
                ElseIf teamAPoints < teamBPoints Then
                    NRLLog "Betting odds: " & teamB & " at $" & teamBOdds & " to beat " & teamA & " at $" _
                        & teamAOdds & " by " & teamBPoints
                ElseIf teamAPoints = teamBPoints Then
                    NRLLog "Betting odds: Even money for " & teamB & " at $" & teamBOdds & " and " & teamA & " at $" _
                        & teamAOdds
                End If
            End If
            'found = 0
'NotFound:
            If found = 2 Then Exit For
        Next myX

    End If
    found = 0
    Title = ""
    teamA = ""
    teamAOdds = ""
    teamAPoints = ""
    teamB = ""
    teamBOdds = ""
    teamBPoints = ""

Next element
driver.stop
Application.StatusBar = ""
End Sub

Sub GetNRLResults()
'28/3/18 - all working ok
Dim wkName      As String
Dim a           As Long 'temp holder for round number code
Dim urlName     As String
Dim myCol       As Range
Dim myX         As Range
'Dim found       As Long
Dim team        As String
Dim Score       As String
'Dim teamA       As String
'Dim teamB       As String
'Dim teamAPoints As String
'Dim teamBPoints As String
Dim oHttp          As Object
Dim mySite         As String
Dim LineArray()     As String
Dim x               As Long
Dim TempStr         As String
'Dim TempScr         As String

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkName = Replace(wkName, "round ", "")
'round number code
a = wkName

'doesn't need and url changing for finals weeks

'https://www.nrl.com/draw/?competition=111&season=2018&round=1
'          https://www.nrl.com/draw/?competition=111&season=2019&round=1
urlName = "https://www.nrl.com/draw/?competition=111&season=2019&round=" & a

'Set oHttp = CreateObject("MSXML2.XMLHTTP")
Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
oHttp.Open "GET", urlName, False
oHttp.send
Do While oHttp.READYSTATE <> 4
    DoEvents
Loop
Do While oHttp.Status <> 200
    DoEvents
Loop
mySite = oHttp.responseText 'a contains source code of website
Set oHttp = Nothing

'tidy up mysite string
    mySite = Mid(mySite, InStr(1, mySite, "l-grid__cell l-grid__cell--padding-small l-grid__cell--padding-medium-at-960"), Len(mySite))
    'Debug.Print mySite
    'Stop
'##### 'for testing
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\NRL\data\test.txt"

'FileNum = FreeFile
'Open testFile For Output As #FileNum
'Print #FileNum, mySite
'Close #FileNum
'Stop
'#####
    LineArray() = Split(mySite, "nickName&quot;:")
'Stop
'Read Data into an Array Variable
    For x = 1 To UBound(LineArray)
        If InStr(1, LineArray(x), "odds&quot;:") = 0 Then
            TempStr = LineArray(x)
            'Debug.Print TempStr
            TempStr = Replace(TempStr, "&quot;", "")
            
            'Debug.Print Left(TempStr, 100)
            'Stop
            team = Left(TempStr, InStr(1, TempStr, ",") - 1)
            team = Trim(team)
            'Debug.Print Team
            
            'Stop
            If InStr(1, TempStr, "score:") > 0 Then
                Score = Mid(TempStr, InStr(1, TempStr, ":") + 1, Len(TempStr))
                Score = Left(Score, InStr(1, Score, ",") - 1)
                Score = Trim(Score)
            Else
                Score = "0"
            End If
            'Debug.Print Team & " " & Score
            Set myCol = Range("U2:U" & Range("U" & Rows.count).End(xlUp).Row)
            For Each myX In myCol 'this is col U
                If myX = team Then
                    myX.Offset(0, 5) = Score
                    'Stop
                    TempStr = ""
                    team = ""
                    Score = ""
                    Exit For
                End If
            Next myX
        End If
    Next x
End Sub
Sub FootyForecaster()
Dim wkName      As String
Dim a           As Long 'temp holder for round number code
Dim urlName     As String
Dim myCol       As Range
Dim myX         As Range
'Dim found       As Long
Dim team        As String
Dim Score       As String
'Dim teamA       As String
'Dim teamB       As String
'Dim teamAPoints As String
'Dim teamBPoints As String
Dim oHttp          As Object
Dim mySite         As String
Dim LineArray()     As String
Dim x               As Long
Dim TempStr         As String
'Dim TempScr         As String

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkName = Replace(wkName, "round ", "")
'round number code
a = wkName

'https://footyforecaster.com/NRL/RoundForecast/2019_Round_1
urlName = "https://footyforecaster.com/NRL/RoundForecast/2019_Round_" & a

'Set oHttp = CreateObject("MSXML2.XMLHTTP")
Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
oHttp.Open "GET", urlName, False
oHttp.send
Do While oHttp.READYSTATE <> 4
    DoEvents
Loop
Do While oHttp.Status <> 200
    DoEvents
Loop
mySite = oHttp.responseText 'a contains source code of website
Set oHttp = Nothing

'tidy up mysite string
    mySite = Mid(mySite, InStr(1, mySite, "<table id=""forecast"">"), Len(mySite))
    'Debug.Print mySite
    'Stop
'##### 'for testing
'Dim testFile As String
'Dim FileNum As Long
'testFile = "C:\FILES\NRL\data\test.txt"

'FileNum = FreeFile
'Open testFile For Output As #FileNum
'Print #FileNum, mySite
'Close #FileNum
'Stop
'#####
    LineArray() = Split(mySite, ">Forecast<")
'Stop
'Read Data into an Array Variable
    For x = 1 To UBound(LineArray)
        If InStr(1, LineArray(x), "<table><tbody>") > 0 Then
            TempStr = LineArray(x)
            'Debug.Print TempStr
            'TempStr = Replace(TempStr, "&quot;", "")
            TempStr = Mid(TempStr, InStr(1, TempStr, "<tr><td>") + 8, Len(TempStr))
            
            'Debug.Print Left(TempStr, 100)
            'Stop
            team = Left(TempStr, InStr(1, TempStr, "by") - 1)
            team = Trim(team)
            'Debug.Print Team
            
            'Stop
            'If InStr(1, TempStr, "score:") > 0 Then
            Score = Mid(TempStr, InStr(1, TempStr, "by") + 2, Len(TempStr))
            Score = Left(Score, InStr(1, Score, "point") - 1)
            Score = Trim(Score)
            'Else
            '    Score = "0"
            'End If
            'Debug.Print team & " " & Score
            'Stop
            Set myCol = Range("U2:U" & Range("U" & Rows.count).End(xlUp).Row)
            For Each myX In myCol 'this is col U
                If myX = team Then
                    myX.Offset(0, 11) = Score
                    NRLLog "Footy Forecaster: " & team & " by " & Score
                    'Stop
                    TempStr = ""
                    team = ""
                    Score = ""
                    Exit For
                End If
            Next myX
        End If
    Next x
End Sub
Sub GetNRLs_picks()
Dim QuestionList As IHTMLElement
Dim QuestionList_2 As IHTMLElement
Dim elements As IHTMLElementCollection
Dim element As IHTMLElement
Dim element1s As IHTMLElementCollection
Dim element1 As IHTMLElement
Dim element2s As IHTMLElementCollection
Dim element2 As IHTMLElement
Dim Element3s As IHTMLElementCollection
Dim Element3 As IHTMLElement

Dim ie As InternetExplorer
Dim html As HTMLDocument

Dim myTemp As String

Dim Round As String
Dim RowNo As Long
Dim ColNo As Long

Dim HomeTeam As String
Dim AwayTeam As String
Dim sURL As String

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

Workbooks.Add

Range("A:B").ColumnWidth = 25
Range("C:C").ColumnWidth = 75
Rows.AutoFit

StopMyProcess ("iexplore.exe")
StopMyProcess ("chromedriver.exe")

Application.DisplayStatusBar = True

Round = InputBox(Prompt:="Enter URL for this round games", Title:="URL", Default:="http://www.nrl.com/draw/telstrapremiership/draw/tabid/11180/default.aspx")
Set ie = New InternetExplorer
ie.Visible = False
'ie.Visible = True
ie.navigate Round

RowNo = 1
  
Do While ie.READYSTATE <> READYSTATE_COMPLETE
    Application.StatusBar = "Getting NRL Round draw ..."
    DoEvents
Loop
    
Set html = ie.document

Set QuestionList = html.GetElementByID("dnn_ctr115795_ModuleContent")
Set html = Nothing

driver.Start "chrome", "https://matchcentre.nrl.com"
'driver.Start "PhantomJS", "https://matchcentre.nrl.com"
driver.setImplicitWait 5000

Set elements = QuestionList.getElementsByTagName("div")
For Each element In elements
    If element.ClassName = "drawCentreGame" Then 'found right div
        Set element1s = element.getElementsByTagName("div")
        For Each element1 In element1s
            If element1.ClassName = "drawGame drawGame--post" _
                Or element1.ClassName = "drawGame drawGame--pre" Then
                ColNo = 1
                Set element2s = element1.getElementsByTagName("div")
                For Each element2 In element2s
                    If element2.ClassName = "drawGame__teamHome" Then
                        HomeTeam = element2.innerHTML
                        HomeTeam = strClean(HomeTeam)
                        HomeTeam = Mid(HomeTeam, InStr(1, HomeTeam, "<em>") + 4, Len(HomeTeam))
                        HomeTeam = Left(HomeTeam, InStr(1, HomeTeam, "</strong>") - 1)
                        HomeTeam = Replace(HomeTeam, "</em> <strong>", " | ")
                        'Debug.Print HomeTeam
                        Cells(RowNo, ColNo).value = Trim(HomeTeam)
                        ColNo = ColNo + 1
                    ElseIf element2.ClassName = "drawGame__teamAway" Then
                        AwayTeam = element2.innerHTML
                        AwayTeam = strClean(AwayTeam)
                        AwayTeam = Mid(AwayTeam, InStr(1, AwayTeam, "<em>") + 4, Len(AwayTeam))
                        AwayTeam = Left(AwayTeam, InStr(1, AwayTeam, "</strong>") - 1)
                        AwayTeam = Replace(AwayTeam, "</em> <strong>", " | ")
                        'Debug.Print AwayTeam
                        Cells(RowNo, ColNo).value = Trim(AwayTeam)
                        ColNo = ColNo + 1
                    ElseIf element2.ClassName = "drawGame__links__set2 drawGame__links__set2--post drawGame__links__set2--active" _
                        Or element2.ClassName = "drawGame__links__set2 drawGame__links__set2--pre drawGame__links__set2--active" Then
                        Set Element3s = element2.getElementsByTagName("a")
                        For Each Element3 In Element3s
                            If InStr(1, Element3.href, "matchcentre.nrl.com/match") > 0 Then
                                sURL = Element3.href
                                'https://matchcentre.nrl.com/match/2017/111/20171112360/#preview 'this is the one needed
                                'https://matchcentre.nrl.com/match/2017/111/20171112360/#match-report
                                
                                sURL = Replace(sURL, "https://matchcentre.nrl.com", "")
                                sURL = Replace(sURL, "#match-report", "#preview")
                                
                                'driver.Start "chrome", "https://matchcentre.nrl.com"
                                'driver.setImplicitWait 5000
  
                                'driver.Open "/match/2017/111/20171112360/#preview"
                                driver.Open sURL
                                driver.setImplicitWait 5000
                                Dim myPage As String
                                'myPage = driver.execute_script("return document.body;")
                                myTemp = driver.findElement(By.CssSelector("div.container:nth-child(5)")).getAttribute("innerHTML")
                                If InStr(1, myTemp, "unavailability") > 0 Then
                                    myTemp = "Preview unavailable"
                                Else
                                'Debug.Print myTemp
                                    myTemp = driver.findElement(By.CssSelector(".preview_content > p:nth-child(2)")).getAttribute("innerHTML")
                                    myTemp = strClean(myTemp)
                                'How we see it:
                                    If InStr(1, myTemp, "NRL.com predicts:") > 0 Then
                                        myTemp = Mid(myTemp, InStr(1, myTemp, "NRL.com predicts:"), Len(myTemp))
                                    ElseIf InStr(1, myTemp, "How we see it:") > 0 Then
                                        myTemp = Mid(myTemp, InStr(1, myTemp, "How we see it:"), Len(myTemp))
                                    End If
                                
                                    myTemp = Left(myTemp, InStr(1, myTemp, "</p>") - 1)
                                    myTemp = Replace(myTemp, "<strong>", "")
                                    myTemp = Replace(myTemp, "</strong>", "")
                                    myTemp = Replace(myTemp, "&nbsp;", "")
                                End If

                                Debug.Print myTemp
                                Cells(RowNo, ColNo).value = Trim(myTemp)
                                Cells(RowNo, ColNo).WrapText = True
                                'driver.stop
                                RowNo = RowNo + 1
                                ColNo = 1

                            End If
                        Next Element3
                    End If
                Next element2
            End If
            'Exit For
        Next element1
    End If
Next element
driver.stop
done:
    Set html = Nothing
    ie.Quit
    Set ie = Nothing
    Application.StatusBar = ""
    'MsgBox "Done!"
End Sub
Sub GetNRL_BETFAIRmodel()

Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim myWork As String
Dim wkNo As String
Dim wkName      As String
Dim urlName     As String
Dim myCol       As Range
Dim myX         As Range
Dim team        As String
Dim setRound As WebElement
Dim RndNo As String
Dim Score As String
Dim quest As Integer

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("phantomjs.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
RndNo = Replace(wkName, "round ", "")

If RndNo > 25 Then
    quest = MsgBox("Is this a Finals Week?", vbYesNo, "NRL Round")
    If quest = vbYes Then
        If Range("Z14") = "" Then
            wkNo = InputBox(Prompt:="Enter Finals Week Number", Title:="FINALS WEEK", Default:="1")
            Range("Z14") = wkNo
        Else
            wkNo = Range("Z14")
        End If
        'Finals
        wkNo = "Finals Wk " & wkNo
    ElseIf quest = vbNo Then
        'Normal
        wkNo = RndNo
    End If
Else
    wkNo = RndNo
End If
wkName = Application.Proper(wkName)

driver.Start "phantomjs", "https://www.betfair.com.au/hub/tools/models/nrl-prediction-model/"
driver.setImplicitWait 10000
driver.Wait (500)

urlName = "/"
driver.get urlName, Raise:=False
'Stop
Set setRound = driver.findElementByXPath("//*[@id='paragraphblock']/div/div/div[1]/div[2]/div[1]/div")
'                                         //*[@id="paragraphblock"]/div/div/div[1]/div[2]/div[1]/div
If setRound.text = wkNo Then

    
    Application.StatusBar = "Getting BETFAIR Model ..."
    Application.Wait (Now + TimeValue("00:00:05")) 'This lets the widget load
    Set startElement = driver.findElementByXPath("//*[@id='paragraphblock']/div/div/div[2]/div/div/div[2]")
    Set elements = startElement.findElementsByTagName("div")
    For Each element In elements
'        Debug.Print Element.text
'        Debug.Print "----------------"
    'Stop
        If Left(LCase(element.text), 18) = "predicted margin: " Then
    'If InStr(1, LCase(Element.text), "predicted margin:") > 0 Then 'game over
            myWork = element.text
        'Debug.Print Element.text
        'Debug.Print "----------------"
            team = Split(myWork, vbCrLf)(0)
            team = Mid(team, InStr(1, team, "argin: ") + 7, Len(team))
            team = Left(team, InStr(1, team, " by ") - 1)
            team = Trim(team)
            'Stop
            Select Case team
                Case "Melbourne"
                    team = "Storm"
                Case "Nth Queensland"
                    team = "Cowboys"
                Case "Canterbury"
                    team = "Bulldogs"
                Case "Penrith"
                    team = "Panthers"
                Case "Brisbane"
                    team = "Broncos"
                Case "Canberra"
                    team = "Raiders"
                Case "NZ Warriors"
                    team = "Warriors"
                Case "South Sydney"
                    team = "Rabbitohs"
                Case "Manly"
                    team = "Sea Eagles"
                Case "Parramatta"
                    team = "Eels"
                Case "Cronulla"
                    team = "Sharks"
                Case "Gold Coast"
                    team = "Titans"
                Case "St George"
                    team = "Dragons"
                Case "Sydney"
                    team = "Roosters"
                Case "Newcastle"
                    team = "Knights"
            End Select
            Score = Split(myWork, vbCrLf)(0)
            Score = Mid(Score, InStrRev(Score, " by ") + 4, Len(Score))
            Score = Trim(Score)
        'Stop
            Set myCol = Range("U2:U" & Range("U" & Rows.count).End(xlUp).Row - 1)
            For Each myX In myCol
                If myX = team Then
                    myX.Offset(0, 11) = Score
                    NRLLog "BETFAIR picks: " & team & " by " & Score
                    Exit For
                End If
            Next myX
            myWork = ""
            team = ""
            Score = ""
        End If
    Next element
Else
    MsgBox "BetFair does not have current round " & RndNo
End If

done:
    driver.stop
    Application.StatusBar = ""
    MsgBox "Done!"
End Sub


Sub GetNRLAverages()

Dim myCol       As Range
Dim myX         As Range
Dim teamA       As String
Dim teamB       As String
Dim Score       As Double


Set myCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1)
    For Each myX In myCol 'this is col A
        If myX <> "" Then
            'Stop
            teamA = Range("B" & myX.Row + 1)
            teamB = Range("B" & myX.Row + 15)
            'Debug.Print Range("AD" & myX.Row + 6) - Range("AD" & myX.Row + 7)
            'Debug.Print Range("AD" & myX.Row + 7)
            
            'Debug.Print Range("AF" & myX.Row + 6) - Range("AF" & myX.Row + 7)
            'Debug.Print Range("AF" & myX.Row + 7)
            
            'Debug.Print Range("W" & myX.Row + 9) - Range("W" & myX.Row + 18)
            'Debug.Print Range("W" & myX.Row + 18)
            
            'Debug.Print Range("AD" & myX.Row + 8)
            'Debug.Print Range("AD" & myX.Row + 7)
            Score = Application.Average((Range("AD" & myX.Row + 6) - (Range("AD" & myX.Row + 7))), _
                (Range("AF" & myX.Row + 6) - (Range("AF" & myX.Row + 7))), _
                (Range("W" & myX.Row + 9) - (Range("W" & myX.Row + 18))), _
                Range("AD" & myX.Row + 8))
            If Score > 0 Then
                NRLLog "Average: " & teamA & " to win by " & Abs(WorksheetFunction.Round(Score, 0))
            Else
                NRLLog "Average: " & teamB & " to win by " & Abs(WorksheetFunction.Round(Score, 0))
            End If
'Stop
        End If
        teamA = ""
        teamB = ""
        Score = 0
    Next myX
End Sub
Sub PDFandUpload()
Dim wb              As Workbook
'Dim wkName        As String
Dim FileNum         As Long
Dim holder          As String
Dim track           As String
Dim myDate As String
Dim p               As Variant
    
'p = ActivePrinter
Application.ActivePrinter = "Microsoft Print to PDF on Ne01:"

'Application.Wait (Now + TimeValue("00:00:03"))
holder = ActiveWorkbook.name
holder = Replace(holder, ".xls", "")
myDate = Format(Date, "yyyy")
'            track = Mid(holder, InStr(1, holder, " ") + 1, Len(holder))
ActiveWindow.SelectedSheets.PrintOut copies:=1, ActivePrinter:= _
    "Microsoft Print to PDF on Ne01:", PrintToFile:=True, collate:=True, _
    PrToFileName:="C:\FILES\NRL\Results\" & myDate & "\" & holder & ".pdf"

'ActivePrinter = p
'
'update the server
Shell "C:\FILES\NRL\FTPresults.bat"

End Sub
Attribute VB_Name = "Ping"
Option Explicit
'Dim BetRunWhen As Double
Dim myRunTime  As Double
Dim rtTimeTmp   As Date
'Public Const cRunIntervalSeconds = 180 ' in seconds 180 = 3 minutes
Public Const RunWhat = "GetPingResult"  ' the name of the procedure to run
Private Sub BetStartTimer()
'display a status bar to indicate macro is running
    Application.DisplayStatusBar = True
    Application.StatusBar = String(3, ChrW(9609)) & "Next ping at " & rtTimeTmp

    'BetRunWhen = Now + TimeSerial(0, 0, cRunIntervalSeconds)
    Application.OnTime EarliestTime:=myRunTime, Procedure:=RunWhat, Schedule:=True
End Sub
Sub PingStopTimer()
    On Error Resume Next
    Application.OnTime EarliestTime:=myRunTime, Procedure:=RunWhat, Schedule:=False
    Application.StatusBar = False
' change the PC power back to normal (sleep in 1 hr)
    'PowerNormal
End Sub
Sub GetPingResult()
'Ping a URL
Dim objPing As Object
Dim objStatus As Object
Dim strResult As String
Dim objPing1 As Object
Dim objStatus1 As Object
Dim strResult1 As String
Dim Host As String
Dim LANHost As String
Dim ThisTimestamp As String
Dim lastRow As Long
Dim wSheet As Worksheet

On Error Resume Next

ThisTimestamp = Format(Date, "dd/mm/yyyy") & " at " & Format(Time, "hh:mm:ss")
Set wSheet = Sheets("Sheet1")

If wSheet Is Nothing Then 'Doesn't exist
    Workbooks.Add
End If
        
lastRow = Range("A65536").End(xlUp).Row

If lastRow = 1 Then
    Cells(lastRow, 1) = "TimeStamp"
    Cells(lastRow, 2) = "Status"
    Cells(lastRow, 3) = "Time in ms"
    Columns("A:A").ColumnWidth = 20.5
    Columns("B:B").ColumnWidth = 15.5
    Columns("C:C").ColumnWidth = 12
    Cells(lastRow, 4) = "LAN Time"
    Cells(lastRow, 5) = "LAN Status"
    Cells(lastRow, 6) = "LAN Time in ms"
    Columns("D:D").ColumnWidth = 20.5
    Columns("E:E").ColumnWidth = 15.5
    Columns("F:F").ColumnWidth = 12
End If

'Host = "racingaustralia.horse"
Host = "110.142.168.247" 'Telstra Boondall
LANHost = "192.168.1.106" 'printer

'Do While objStatus.StatusCode <> 0
    Set objPing = GetObject("winmgmts:{impersonationLevel=impersonate}"). _
        ExecQuery("Select * from Win32_PingStatus Where Address = '" & Host & "'")

    For Each objStatus In objPing
        Select Case objStatus.StatusCode
            Case 0: strResult = "Connected"
            Case 11001: strResult = "Buffer too small"
            Case 11002: strResult = "Destination net unreachable"
            Case 11003: strResult = "Destination host unreachable"
            Case 11004: strResult = "Destination protocol unreachable"
            Case 11005: strResult = "Destination port unreachable"
            Case 11006: strResult = "No resources"
            Case 11007: strResult = "Bad option"
            Case 11008: strResult = "Hardware error"
            Case 11009: strResult = "Packet too big"
            Case 11010: strResult = "Request timed out"
            Case 11011: strResult = "Bad request"
            Case 11012: strResult = "Bad route"
            Case 11013: strResult = "Time-To-Live (TTL) expired transit"
            Case 11014: strResult = "Time-To-Live (TTL) expired reassembly"
            Case 11015: strResult = "Parameter problem"
            Case 11016: strResult = "Source quench"
            Case 11017: strResult = "Option too big"
            Case 11018: strResult = "Bad destination"
            Case 11032: strResult = "Negotiating IPSEC"
            Case 11050: strResult = "General failure"
            Case Else: strResult = "Unknown host"
        End Select
      'GetPingResult = strResult
      'MsgBox strResult
    Cells(lastRow + 1, 1) = ThisTimestamp
    Cells(lastRow + 1, 2) = strResult
    Cells(lastRow + 1, 3) = objStatus.ResponseTime
    'DoEvents
    
    Next objStatus
'Loop

ThisTimestamp = Format(Date, "dd/mm/yyyy") & " at " & Format(Time, "hh:mm:ss")

Set objPing1 = GetObject("winmgmts:{impersonationLevel=impersonate}"). _
    ExecQuery("Select * from Win32_PingStatus Where Address = '" & LANHost & "'")

For Each objStatus1 In objPing1
    Select Case objStatus1.StatusCode
        Case 0: strResult1 = "Connected"
        Case 11001: strResult1 = "Buffer too small"
        Case 11002: strResult1 = "Destination net unreachable"
        Case 11003: strResult1 = "Destination host unreachable"
        Case 11004: strResult1 = "Destination protocol unreachable"
        Case 11005: strResult1 = "Destination port unreachable"
        Case 11006: strResult1 = "No resources"
        Case 11007: strResult1 = "Bad option"
        Case 11008: strResult1 = "Hardware error"
        Case 11009: strResult1 = "Packet too big"
        Case 11010: strResult1 = "Request timed out"
        Case 11011: strResult1 = "Bad request"
        Case 11012: strResult1 = "Bad route"
        Case 11013: strResult1 = "Time-To-Live (TTL) expired transit"
        Case 11014: strResult1 = "Time-To-Live (TTL) expired reassembly"
        Case 11015: strResult1 = "Parameter problem"
        Case 11016: strResult1 = "Source quench"
        Case 11017: strResult1 = "Option too big"
        Case 11018: strResult1 = "Bad destination"
        Case 11032: strResult1 = "Negotiating IPSEC"
        Case 11050: strResult1 = "General failure"
        Case Else: strResult1 = "Unknown host"
    End Select
      'GetPingResult = strResult
      'MsgBox strResult
    Cells(lastRow + 1, 4) = ThisTimestamp
    Cells(lastRow + 1, 5) = strResult1
    Cells(lastRow + 1, 6) = objStatus1.ResponseTime
Next objStatus1

If strResult <> "Connected" Then
    myRunTime = Now + TimeSerial(0, 0, 1) 'seconds
Else
    myRunTime = Now + TimeSerial(0, 0, 30) 'seconds
End If

rtTimeTmp = myRunTime
BetStartTimer

End Sub
Attribute VB_Name = "Risa"
Option Explicit

Sub RISA_RaceDay(tabCode As String, urlName2 As String, filter As Boolean)
'Obtains all the horse statistics from website http://www.racingaustralia.horse/FreeFields/Form........
'15/1/16 chuck
' discard all results where finish > 5th
' 26/2/16 discard all results where length behind >= 6 lengths.
' 20/3/16 added TrackTimes to keep a history of race times
'25/5/16 testing - variable "Filter" - if False:-
'1. keep all finishing positions
'2. keep all races not just ones over a certain value
'3. keep all Lengths behind
'if True discard as per script
'19/9/16 included condition penalty for the last600

Dim QuestionList As IHTMLElement
Dim Questions As IHTMLElementCollection
Dim Question As IHTMLElement
Dim rowNumber As Long
Dim QuestionId As String
Dim QuestionFields As IHTMLElementCollection
Dim QuestionField As IHTMLElement
Dim BitsFields As IHTMLElementCollection '
Dim Bits As IHTMLElement
Dim TagName As IHTMLElementCollection 'TagName
Dim Tag As IHTMLElement
Dim myCnt As String
Dim urlName         As String
Dim raceNo          As String
Dim horseNo         As String
Dim HorseName       As String
Dim pos             As String
Dim lPos            As Long
Dim Meeting         As String
Dim RaceDate        As String
Dim Kgs             As String
Dim myKgs           As Double
Dim Distance        As String
Dim dDistance       As Double
Dim myDistance      As Double
Dim theDist         As Double
Dim Cond            As String
Dim RaceTime        As String
Dim myDate          As Date
Dim myDateDec       As Long 'date in long format
Dim a               As Long
Dim b               As Long
Dim g               As Double
Dim f               As Long
Dim x               As Long
Dim myMin           As Long
Dim mySec           As Long
Dim myTenths        As Double
Dim myTime          As Double
Dim tmpTime         As Double 'for the log file TrackTimesHistory
Dim rest            As String
Dim slast600        As String
Dim sdistBehind     As String
Dim dlast600        As Double
Dim NotValid        As Boolean
Dim fix800          As Boolean
'Dim filter          As Boolean
Dim myValue         As String
Dim dLen            As Double 'distance of a length
Dim mps             As Double
Dim mps600          As Double
Dim lastRow         As Long
Dim CondPen         As Double
Dim LenBeh          As Double
'Dim tabCode As String

Dim ie As InternetExplorer
Dim html As HTMLDocument

'Dim objPing As Object
'Dim objStatus As Object
'Dim Host As String

StopMyProcess ("iexplore.exe")

    dLen = 2.4
    'dLen = 4
'filter = False    'False = 1. keep all finishing positions
                    '2. keep all races not just ones over a certain value
                    '3. keep all Lengths behind

'prep the sheet
    Range("B:C").NumberFormat = "0"
    Range("B:C").ColumnWidth = 4
    Range("D:E, I:L").NumberFormat = "@"
    Range("G:G").NumberFormat = "0"
    Range("K:K").NumberFormat = "0.0"
    Range("M:N").NumberFormat = "0.0000000000"
    Range("M:N").ColumnWidth = 18
    
    Range("A1").value = "TabCode"
    Range("B1").value = "RaceNo"
    Range("C1").value = "HorseNo"
    Range("D1").value = "Name"
    Range("E1").value = "HTrack"
    Range("F1").value = "HDate"
    Range("F:F").ColumnWidth = 10
    Range("G1").value = "HDistance"
    Range("H1").value = "HCondition"
    Range("I1").value = "HPosition"
    Range("J1").value = "HValue"
    Range("K1").value = "HWeight"
    Range("L1").value = "HTime"
    Range("M1").value = "MPS"
    Range("N1").value = "MPS600"
 
    'tabCode = InputBox(Prompt:="Enter the TAB Race CODE", Title:="TAB CODE")
    'tabCode = UCase(tabCode)
    'urlName = InputBox(Prompt:="Enter the RISA Recent Form URL", Title:="Recent Form URL")
    'urlName = "http://www.racingaustralia.horse/FreeFields/Form.aspx?Key=2016Jan01,QLD,Doomben"
    'urlName = "http://www.racingaustralia.horse/FreeFields/Form.aspx?Key=2016Jan15,QLD,Toowoomba"
    urlName = urlName2
    
    Set ie = New InternetExplorer
    ie.Visible = False
    'ie.Visible = True
    'Host = "lindyone.com"
    'Set objPing = GetObject("winmgmts:{impersonationLevel=impersonate}"). _
        ExecQuery("Select * from Win32_PingStatus Where Address = '" & Host & "'")
    'For Each objStatus In objPing
    '    Do While objStatus.StatusCode <> 0
    '        DoEvents
    '    Loop
    'Next objStatus
    'For Each objStatus In objPing
    
    ie.navigate urlName
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
        Application.StatusBar = "Getting RISA data ..."
        DoEvents
    Loop
    Set html = ie.document
'    RowNumber = 1
'MsgBox html.documentElement.innerHTML
'#################
'write html to a file
'    Dim fileSaveName As String
'    Dim curWork As String
'    Dim nFileNum As Long
'    curWork = html.documentElement.innerHTML
'    fileSaveName = "C:\FILES\AFL\test.txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Append As #nFileNum
'    Print #nFileNum, curWork
'    Close #nFileNum
'################
    Set ie = Nothing
    Application.StatusBar = ""

    Set QuestionList = html.GetElementByID("page-content") 'contains all the races
    Set Questions = QuestionList.Children

    For Each Question In Questions
'if this is the tag containing the question details, process it
    If Question.ClassName = "race-title" Then 'Level 1 this is the start of a race
        myCnt = UCase(Question.innerText)
        myCnt = Replace(myCnt, Chr(13), "")
        myCnt = Replace(myCnt, Chr(10), "")
        raceNo = Left(myCnt, InStr(1, myCnt, "-") - 1)
        raceNo = Replace(raceNo, "RACE", "")
        raceNo = Trim(raceNo)                                                                   'Race number
        'If raceNo = "7" Then Stop
        myCnt = ""
    ElseIf Question.ClassName = "horse-form-table" Then 'Level 1 this is the start of each horse detail
        myCnt = Question.innerHTML
        'MsgBox (myCnt)
        If InStr(1, myCnt, ">SCRATCHED<") > 0 Then 'get rid of scratchings
            myCnt = ""
            GoTo Scratched:
        End If
        myCnt = ""
        Set QuestionFields = Question.all
            For Each QuestionField In QuestionFields
                If QuestionField.ClassName = "horse-number" Then
                    horseNo = QuestionField.innerText
                End If
                If QuestionField.ClassName = "horse-name" Then
                    HorseName = QuestionField.innerText
                    If InStr(1, HorseName, Chr(10)) > 0 Then
                        'Stop
                        HorseName = Left(HorseName, InStr(1, HorseName, Chr(10)) - 2)
                        HorseName = Replace(HorseName, Chr(10), "")
                        HorseName = Replace(HorseName, vbCrLf, "")
                    End If
                    HorseName = Trim(HorseName)                                                         'horsename
                    'Debug.Print HorseName
                End If
                If QuestionField.ClassName = "horse-last-start" Then
                    Set BitsFields = QuestionField.all
                        For Each Bits In BitsFields
                            If Bits.ClassName = "Pos" Then
                                NotValid = False
                                pos = Bits.innerText
                                pos = Replace(pos, "T", "") 'remove any Trial indicator
                                pos = Left(pos, InStr(1, pos, " "))
                                pos = Trim(pos)
                                If IsNumeric(pos) = False Then
                                    NotValid = True
                                    GoTo NoResult:
                                End If
                                lPos = pos                                                              'finishing position
'############## 1. finishing position 5th or less
                                If filter = True Then
                                    If lPos > 5 Then
                                    'If lPos > 4 Then
                                        NotValid = True
                                        pos = ""
                                        lPos = 0
                                        GoTo NoResult:
                                    End If
                                End If
'###################
                            'End If
                            ElseIf Bits.ClassName = "remain" And NotValid = False Then
                                myCnt = Bits.innerHTML
                                'Debug.Print myCnt
                                If InStr(1, myCnt, "racecode") > 0 Then
                                    Meeting = Mid(myCnt, InStr(1, myCnt, "racecode"), 100)
                                Else
                                    Meeting = Mid(myCnt, InStr(1, myCnt, "<b>"), 100)
                                End If
                                'MsgBox Meeting
                                Meeting = Mid(Meeting, InStr(1, Meeting, ">") + 1, 50)
                                Meeting = Left(Meeting, InStr(1, Meeting, "</") - 1)
                                RaceDate = Meeting
                                RaceDate = Mid(RaceDate, InStrRev(RaceDate, " ") + 1, Len(RaceDate))
                                If Len(RaceDate) = 7 Then ' a date
                                    myDate = Left(RaceDate, 2) & "-" & Mid(RaceDate, 3, 3) & "-" & Right(RaceDate, 2)
                                Else
                                    NotValid = True
                                    GoTo NoResult:
                                End If                                                                  'date
                                myDateDec = myDate
                                Meeting = Replace(Meeting, RaceDate, "")
                                Meeting = Trim(Meeting)                                                 'meeting
                                Distance = Mid(myCnt, InStr(1, myCnt, Meeting), 100)
                                Distance = Mid(Distance, InStr(1, Distance, "/b>") + 3, 55)
                                Cond = Distance
                                Distance = Left(Distance, InStr(1, Distance, "m ") - 1)
                                Distance = Trim(Distance)                                               'distance
                                dDistance = Distance
                                Cond = Replace(Cond, Distance & "m", "")
                                Cond = Trim(Cond)
                                Cond = Left(Cond, InStr(1, Cond, " ") - 1)
                                Cond = Replace(Replace(Replace(Replace(Replace(Replace(Replace _
                                (Replace(Replace(Replace(Cond, "0", ""), "9", ""), "8", ""), _
                                "7", ""), "6", ""), "5", ""), "4", ""), "3", ""), "2", ""), "1", "")
                                Cond = Trim(Cond)                                                       'track condition
                                'Firm 0
                                Select Case LCase(Cond)
                                    Case "firm"
                                        CondPen = 0
                                    Case "good"
                                        CondPen = 0.2
                                    Case "soft"
                                        CondPen = 1.5
                                    Case "heavy"
                                        CondPen = 3
                                    Case Else
                                        CondPen = 0
                                End Select
                                
                                'Good 0.2
                                'Soft 1.5
                                'Heavy 3
'Race class can be got about here btn track condition and race value

                                myValue = Mid(myCnt, InStr(1, myCnt, "$") + 1, 25)
                                myValue = Left(myValue, InStr(1, myValue, " ") - 1)
                                myValue = Trim(myValue)
                                g = myValue / 1000
                                myValue = g                                                    'race value
                                x = InStr(1, myCnt, "$") + 1
'############## 2. Race Value 24/6/16 turned off this filter
                                'If filter = True Then
                                '    If g <= 10 Then
                                '        NotValid = True
                                '        GoTo NoResult:
                                '    Else
                                '        myValue = g                                                    'race value
                                '    End If
                                'Else
                                '    myValue = g
                                'End If
'#################
                                If InStr(1, myCnt, "jockeycode") > 0 Then
                                    Kgs = Mid(myCnt, InStr(1, myCnt, "jockeycode"), 100)
                                    Kgs = Mid(Kgs, InStr(1, Kgs, "a>") + 2, 50)
                                    Kgs = Left(Kgs, InStr(1, Kgs, "kg ") - 1)
                                Else
                                    Kgs = Mid(myCnt, InStr(x, myCnt, " "), 100)
                                    Kgs = Left(Kgs, InStr(1, Kgs, "kg ") - 1)
                                    x = InStrRev(Kgs, " ")
                                    Kgs = Mid(Kgs, x, Len(Kgs))
                                End If
                                Kgs = Trim(Kgs)                                                     'kgs
                                If InStr(1, myCnt, ":") = 0 Then GoTo NoResult:
                                RaceTime = Mid(myCnt, InStr(1, myCnt, ":") - 6, 200)
                                rest = RaceTime
                                RaceTime = Mid(RaceTime, InStr(1, RaceTime, "kg") + 3, 200)
                                If InStr(1, RaceTime, "(") > 0 Then
                                    RaceTime = Left(RaceTime, InStr(1, RaceTime, "(") - 1)
                                ElseIf InStr(1, RaceTime, ", ") > 0 Then
                                    RaceTime = Left(RaceTime, InStr(1, RaceTime, ", ") - 1)
                                ElseIf InStr(1, RaceTime, " </i>") > 0 Then
                                    RaceTime = Left(RaceTime, InStr(1, RaceTime, " </i>") - 1)
                                ElseIf InStr(1, RaceTime, " $") > 0 Then
                                    RaceTime = Left(RaceTime, InStr(1, RaceTime, " $") - 1)
                                ElseIf InStr(1, RaceTime, " T") > 0 Then
                                    RaceTime = Left(RaceTime, InStr(1, RaceTime, " T") - 1)
                                End If
                                RaceTime = Trim(RaceTime)
                                RaceTime = Replace(RaceTime, ",", "")
                                RaceTime = Replace(RaceTime, "R", "")

                                a = InStr(1, RaceTime, ":")
                                b = InStr(1, RaceTime, ".")
                                myMin = Left(RaceTime, a - 1) * 60
                                mySec = Mid(RaceTime, a + 1, (b - a) - 1)
                                myTenths = "0." & Mid(RaceTime, b + 1, Len(RaceTime))
                                myTime = myMin + mySec + myTenths                                       'racetime - winner
                                tmpTime = myTime
                                myTime = myTime - CondPen
                                a = 0
                                b = 0
                                mySec = 0
                                myTenths = 0
                                If myTime = 0 Then 'no time found
                                    NotValid = True
                                    GoTo NoResult:
                                End If
                                
                                If lPos = "1" Then
                                    If InStr(1, rest, "(600m") > 0 Then
                                        slast600 = Mid(rest, InStr(1, rest, "(600m") + 6, 50)
                                        slast600 = Left(slast600, InStr(1, slast600, ")") - 1)
                                        fix800 = False
                                    ElseIf InStr(1, rest, "(800m") > 0 Then
                                        slast600 = Mid(rest, InStr(1, rest, "(800m") + 6, 50)
                                        slast600 = Left(slast600, InStr(1, slast600, ")") - 1)
                                        fix800 = True
                                    Else
                                        slast600 = ""
                                    End If
                                    If Len(slast600) > 0 Then
                                        b = InStr(1, slast600, ".")
                                        mySec = Left(slast600, b - 1)
                                        myTenths = "0." & Mid(slast600, b + 1, Len(slast600))
                                        dlast600 = mySec + myTenths                                       'last 600 time - winner
                                        If fix800 = True Then
                                            dlast600 = (dlast600 / 800) * 600
                                        End If
                                        b = 0
                                        mySec = 0
                                        myTenths = 0
                                    End If
                                    dlast600 = dlast600 - (CondPen / 3)                                  'last600 time penalty for track condition
                                End If
                                If lPos <> "1" Then
                                    If InStr(1, myCnt, "L,") > 0 Then
                                        f = InStr(1, myCnt, "L,")
                                    ElseIf InStr(1, myCnt, "0L $") > 0 Then 'changed all these from -1 to +1
                                        f = InStr(1, myCnt, "0L $") + 1
                                    ElseIf InStr(1, myCnt, "1L $") > 0 Then
                                        f = InStr(1, myCnt, "1L $") + 1
                                    ElseIf InStr(1, myCnt, "2L $") > 0 Then
                                        f = InStr(1, myCnt, "2L $") + 1
                                    ElseIf InStr(1, myCnt, "3L $") > 0 Then
                                        f = InStr(1, myCnt, "3L $") + 1
                                    ElseIf InStr(1, myCnt, "4L $") > 0 Then
                                        f = InStr(1, myCnt, "4L $") + 1
                                    ElseIf InStr(1, myCnt, "5L $") > 0 Then
                                        f = InStr(1, myCnt, "5L $") + 1
                                    ElseIf InStr(1, myCnt, "6L $") > 0 Then
                                        f = InStr(1, myCnt, "6L $") + 1
                                    ElseIf InStr(1, myCnt, "7L $") > 0 Then
                                        f = InStr(1, myCnt, "7L $") + 1
                                    ElseIf InStr(1, myCnt, "8L $") > 0 Then
                                        f = InStr(1, myCnt, "8L $") + 1
                                    ElseIf InStr(1, myCnt, "9L $") > 0 Then
                                        f = InStr(1, myCnt, "9L $") + 1
                                    ElseIf InStr(1, myCnt, "L T") > 0 Then
                                        f = InStr(1, myCnt, "L T")
                                    'ElseIf Right(myCnt, 1) = "L </i" Then
                                    ElseIf InStr(1, myCnt, "L </i") Then
                                        f = InStr(1, myCnt, "L </i")
                                        'f = Len(myCnt)
                                    End If
                                    If f = 0 Then
                                        NotValid = True
                                        GoTo NoResult:
                                    End If
                                    x = 0
                                    sdistBehind = Left(myCnt, f)
                                    x = InStrRev(sdistBehind, " ")
                                    sdistBehind = Mid(sdistBehind, x, Len(sdistBehind))
                                    sdistBehind = Trim(sdistBehind)                                     'myDistBehind
                                    sdistBehind = Replace(sdistBehind, "</i>", "")
                                    If Len(sdistBehind) > 0 Then
                                        LenBeh = Replace(sdistBehind, "L", "")
'############## 3. Lengths behind
                                        If filter = True Then
                                            If LenBeh < 6 Then
                                                myDistance = dDistance - (Replace(sdistBehind, "L", "") * dLen)
                                            Else
                                                NotValid = True
                                                GoTo NoResult:
                                            End If
                                        Else
                                            myDistance = dDistance - (Replace(sdistBehind, "L", "") * dLen)
                                        End If
'################
                                    Else
                                        NotValid = True
                                        GoTo NoResult:
                                    End If
                                Else
                                    myDistance = dDistance                                              'Distance behind
                                End If
'get positions at 800m and 400m about here after getting distance behind.
' 59kg 1:24.00 (600m 35.53), 1.10L, 1st@800m, 1st@400m, $9/$5/$5.50/$5F

' Build the kgs and distance for MPS
                                If Kgs > 50 Then
                                    myKgs = Kgs - 50
                                Else
                                    myKgs = 5
                                End If
                                '1000m 1.35k = 1 length
                                '3200m .45 kilo = 1 len
                                If dDistance < 999 Then
                                    theDist = myDistance + ((myKgs / 1.4) * dLen) '1.4kgs = length
                                ElseIf dDistance < 1201 Then
                                    theDist = myDistance + ((myKgs / 1.27) * dLen) '1.27kgs = length
                                ElseIf dDistance < 1401 Then
                                    theDist = myDistance + ((myKgs / 1.15) * dLen) '1.15kgs = length
                                ElseIf dDistance < 1601 Then
                                    theDist = myDistance + (myKgs * dLen) '1kg = length
                                ElseIf dDistance < 2001 Then
                                    theDist = myDistance + ((myKgs / 0.8) * dLen) '0.8kgs = one length
                                ElseIf dDistance < 2501 Then
                                    theDist = myDistance + ((myKgs / 0.65) * dLen) '0.65 kgs = one length
                                Else
                                    theDist = myDistance + ((myKgs / 0.45) * dLen) '0.45kgs = one length
                                End If
                                mps = theDist / myTime  'calc metres per second                             'MPS
                                If mps < 15 Then GoTo NoResult:
                                If mps > 19 Then GoTo NoResult:
' Build the MPS600
                                If dlast600 > 0 Then
                                    mps600 = 600 / dlast600                                                     'MPS600
                                End If
                                If mps600 < 1 Then
                                    mps600 = mps
                                End If
                            'End If
'dump that to the sheet
                                If NotValid = False Then
                                    lastRow = Range("A65536").End(xlUp).Row + 1
                                    Range("A" & lastRow).value = tabCode                'tabCode
                                    Range("B" & lastRow).value = raceNo                 'RaceNo
                                    Range("C" & lastRow).value = horseNo                'HorseNo
                                    Range("D" & lastRow).value = HorseName              'name
                                    Range("E" & lastRow).value = Meeting                'track
                                    Range("F" & lastRow).value = myDate                 'date
                                    Range("G" & lastRow).value = Distance               'distance
                                    Range("H" & lastRow).value = Cond                   'Condition
                                    Range("I" & lastRow).value = pos                    'Position
                                    Range("J" & lastRow).value = myValue                'Value
                                    Range("K" & lastRow).value = Kgs                    'Weight
                                    If lPos = 1 Then
                                        Range("L" & lastRow).value = RaceTime           'HTime
                                    Else
                                        Range("L" & lastRow).value = sdistBehind        'lengths behind
                                    End If
                                    Range("M" & lastRow).value = mps                    'MPS
                                    Range("N" & lastRow).value = mps600                 'MPS600
'write times to TrackTimesHistory
'                                    Select Case Meeting
'                                        Case "ROCK", "WANG", "MRPK", "HOB", "DEVS", "CANB", "GOSF", "K GR", "NOWR", "TOWN", _
'                                            "CANT", "MWBH", "RHIL", "TAMW", "S CK", "MORP", "ECHA", "BORD", "MREE", "MWBK", _
'                                            "SCST", "WERR", "ATHN", "PRKS", "YEPP", "BLMT"
'                                            If Distance >= 1000 Then
'                                                If lPos = 1 And (LCase(Cond) = "good" Or LCase(Cond) = "firm" _
'                                                    Or LCase(Cond) = "fast" Or LCase(Cond) = "synthetic") Then                      'create history of winners csv
'                                                    TrackTimes (Meeting & "," & myDate & "," & Distance & "," & Cond & "," _
'                                                    & HorseName & "," & myValue & "," & Kgs & "," & RaceTime & "," & tmpTime & "," _
'                                                    & mps & "," & Meeting & Distance & "," & Meeting & Distance & myDateDec & HorseName)
'                                                End If
'                                            End If
'                                        Case Else
'                                            If lPos = 1 And (LCase(Cond) = "good" Or LCase(Cond) = "firm" _
'                                                Or LCase(Cond) = "fast" Or LCase(Cond) = "synthetic") Then                      'create history of winners csv
'                                                TrackTimes (Meeting & "," & myDate & "," & Distance & "," & Cond & "," _
'                                                & HorseName & "," & myValue & "," & Kgs & "," & RaceTime & "," & tmpTime & "," _
'                                                & mps & "," & Meeting & Distance & "," & Meeting & Distance & myDateDec & HorseName)
'                                            End If
'                                    End Select
'                                    pos = ""
'                                    lPos = 0
                                End If
                            End If

NoResult:
                            'Pos = ""
                            'lPos = 0
                            myCnt = ""
                            Meeting = ""
                            RaceDate = ""
                            myDate = Empty
                            Distance = ""
                            Cond = ""
                            dDistance = 0
                            myValue = ""
                            g = 0
                            Kgs = ""
                            myKgs = 0
                            RaceTime = ""
                            rest = ""
                            myTime = 0
                            slast600 = ""
                            dlast600 = 0
                            sdistBehind = ""
                            f = 0
                            x = 0
                            myDistance = 0
                            theDist = 0
                            mps = 0
                            mps600 = 0
                            LenBeh = 0
                       Next Bits
                End If
            myCnt = ""
            Next QuestionField
    End If
Scratched:
Next Question
done:
    Set html = Nothing
   ' ie.stop
'    ie.Quit
    Set ie = Nothing
    Application.StatusBar = ""
    'MsgBox "Done!"
'adjust the mps times for that track
AdjTrackMpsTimes

'output the sheet
SaveData tabCode

'stop process
Call StopPro("iexplore.exe")

End Sub
Private Sub AdjTrackMpsTimes()
Dim myselection     As Range
Dim myX             As Range
'Dim x               As Long
Dim myLength        As Long
Dim myGroup         As Long
Dim myTrack         As String
Dim myTemp          As String
Dim myMPSAdj        As Double
Dim myDefault       As Double

Dim Delimiter As String
Dim TextFile As Integer
Dim FilePath As String
Dim FileContent As String
Dim LineArray() As String
Dim DataArray() As String
Dim TempArray() As String
'Dim rw As Long
'Dim col As Long
Dim x As Long
Dim G1 As Double
Dim G2 As Double
Dim G3 As Double
Dim G4 As Double
Dim G5 As Double
Dim G6 As Double
Dim G7 As Double


'Inputs
  Delimiter = "|"
  FilePath = "C:\FILES\Horses\TrackTimeAdj.txt"
  'rw = 0
  
'Open the text file in a Read State
  TextFile = FreeFile
  Open FilePath For Input As TextFile
  
'Store file content inside a variable
  FileContent = Input(LOF(TextFile), TextFile)

'Close Text File
  Close TextFile

G1 = -0.359038
G2 = -0.024873
G3 = 0.369173
G4 = 0.680753
G5 = 1.066574
G6 = 1.20265
G7 = 1.391719

Set myselection = Range("E2:E" & Range("E" & Rows.count).End(xlUp).Row) 'Track
    For Each myX In myselection
        myLength = myX.Offset(0, 2)
        Select Case myLength
            Case Is < 999
                myGroup = 2 'G1 this group is for the line split, not the distance group in track records.xls
                myDefault = G1 'an average of all other values
            Case Is < 1250
                myGroup = 3 'G2
                myDefault = G2
            Case Is < 1550
                myGroup = 4 'G3
                myDefault = G3
            Case Is < 1850
                myGroup = 5 'G4
                myDefault = G4
            Case Is < 2250
                myGroup = 6 'G5
                myDefault = G5
            Case Is < 2750
                myGroup = 7 'G6
                myDefault = G6
            Case Else
                myGroup = 8 'G7
                myDefault = G7
        End Select
        myTemp = ""
        myMPSAdj = 0 'reset variable
'Separate Out lines of data
        LineArray() = Split(FileContent, vbCrLf)

'Read Data into an Array Variable
        For x = LBound(LineArray) To UBound(LineArray)
            If Len(Trim(LineArray(x))) <> 0 Then
      'Split up line of text by delimiter
            'TempArray = Split(LineArray(x), Delimiter)
                myTrack = Split(LineArray(x), Delimiter)(0)
                If UCase(myX.text) = UCase(myTrack) Then
                    'myMPSAdj = Split(LineArray(x), Delimiter)(myGroup)
                    myTemp = Split(LineArray(x), Delimiter)(myGroup)
                    If myTemp <> "" Then
                        myMPSAdj = myTemp
                    Else
                        myMPSAdj = myDefault
                    End If
                    GoTo found:
                End If
            End If
        Next x
found:
        myX.Offset(0, 8) = myX.Offset(0, 8) + myMPSAdj
        myX.Offset(0, 9) = myX.Offset(0, 9) + myMPSAdj

    Next myX

End Sub
Private Sub SaveData(tabCode As String)
    
Const Delimiter As String = "^" 'or "|,", vbTab, etc.
Dim myRecord As Range
Dim myField As Range
Dim nFileNum As Long
Dim lastRow As Long
Dim sOut As String
Dim fileSaveName As String
'Dim lnCount As Integer
Dim clCount As Integer
         
Columns("A:L").Select
Selection.Columns.AutoFit '

lastRow = Range("A65536").End(xlUp).Row
If lastRow < 2 Then GoTo noData:
' lnCount = InputBox("How many Rows are you loading")
' clCount = InputBox("How many Columns are you loading")
    clCount = 14

' Name the file and where to save it
    fileSaveName = "C:\FILES\Horses\Risa\" & tabCode & "_Risa.txt"

    nFileNum = FreeFile
    If Dir("C:\FILES\Horses\Risa\" & tabCode & "_Risa.txt") <> "" Then
        Kill fileSaveName
    End If
    Open fileSaveName For Output As #nFileNum
    For Each myRecord In Range("A2:A" & _
        Range("A" & Rows.count).End(xlUp).Row)
        With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
            sOut = sOut & Delimiter & Trim(myField.text)
            Next myField
                sOut = Mid(sOut, 2) ' this take off the first delimiter
'                Print #nFileNum, Mid(sOut, 2)
                Print #nFileNum, sOut
                sOut = Empty
        End With
    Next myRecord
    Close #nFileNum
'close this sheet
noData:
'    MsgBox ("saveResultData")
    ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
'    Workbooks.Add

End Sub
Private Sub TrackTimes(detail As String)
Dim LogFileName As String
Dim FileNum As Integer
'Dim ThisTimestamp As String

'ThisTimestamp = Format(Date, "dd/mm/yyyy") & "," & Format(Time, "hh:mm") & ","
LogFileName = "C:\FILES\Horses\TrackTimesHistory.csv"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, detail ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
'Sub BuildTrackTimes()


'End Sub
Sub GetAvgTrackTimes()
'This script gets the average track times from "TrackTimesHistory.csv" and puts them into "TrackTimesTempory.csv"
'19/1/17 update to also remove entries older than 13 months
Dim myX         As Range
Dim detail      As String
Dim LogFileName As String
Dim FileNum     As Integer
Dim lastRow     As Long
Dim rng         As Range
Dim r           As Long
'Dim V           As Variant
Dim v           As String
Dim myDate      As Date
Dim x           As Long

If ActiveWorkbook.name <> "TrackTimesHistory.csv" Then
    MsgBox ("The worksheet 'TrackTimesHistory.csv' is not the current sheet")
    Exit Sub
End If

'sort the sheet on 'key'
Cells.Select
Selection.Sort key1:=Range("L2"), Order1:=xlAscending, Header:=xlGuess, _
    OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
    DataOption1:=xlSortNormal
'delete duplicate rows
'turn off calculation and screenupdating to speed up the macro.
    With Application
        .Calculation = xlCalculationManual
        .ScreenUpdating = False
        
        lastRow = Range("K65536").End(xlUp).Row
        Set rng = Range("L2", "L" & lastRow)
        For r = rng.Rows.count To 1 Step -1
            'delete if its a duplicate
            v = rng.Cells(r, 1).value
            If Application.WorksheetFunction.CountIf(rng.Columns(1), v) > 1 Then
                rng.Rows(r).EntireRow.Delete
            End If
            myDate = rng.Cells(r, -9)
            If myDate < Int(Now) - 395 Then '1 yr and 1 month
            'If myDate < Int(Now) - 1100 Then 'make it a bit longer - 3 yrs +
                'Debug.Print "Row " & r & " will be deleted - as Entry date:" & myDate & " is older than " & Int(Now) - 395
                'x = x + 1
                'Debug.Print x & " rows deleted"
                rng.Rows(r).EntireRow.Delete
            End If
        Next r

        .Calculation = xlCalculationAutomatic
        .ScreenUpdating = True
    End With

'save the sheet there
ActiveWorkbook.Save
'average on Seconds(Col 9) and MPS (col 10)
'Note the last group includes a grand total
Range("K2").Select
Selection.Subtotal GroupBy:=11, Function:=xlAverage, TotalList:=Array(9, 10), _
    Replace:=True, PageBreaks:=False, SummaryBelowData:=True

lastRow = Range("K65536").End(xlUp).Row 'this will be the Grand Total row

'create the new blank file
FileCopy "C:\FILES\Horses\TrackTimesHeader.csv", "C:\FILES\Horses\TrackTimesTempory.csv"

For Each myX In Range("A2", "A" & lastRow)
    If myX = "" And myX.Row < lastRow Then 'not the Grand Total Row
        detail = myX.Offset(-1, 0) & ",," & myX.Offset(-1, 2) & ",,,,,," & Format(myX.Offset(0, 8), "#0.00") & "," _
            & myX.Offset(0, 9) & "," & myX.Offset(0, 10)
        LogFileName = "C:\FILES\Horses\TrackTimesTempory.csv"
        FileNum = FreeFile ' next file number
        Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
        Print #FileNum, detail ' write information at the end of the text file & vbCrLf
        Close #FileNum ' close the file
    End If
Next myX

'close
ActiveWorkbook.Close SaveChanges:=False

End Sub
Sub UpdateTrackTimes()
'use this script to update the data from "TrackTimesTempory.csv" to the "Track Records.xls" sheet.
'start with "TrackTimesHistory.csv" open and that duplicates have been removed
'after running this script, open "Track Codes.xls" and run the script from the button that builds the text file
'23/9/17 added line Range("C2:AD" & oBklastRow).ClearContents to clear out all old data.
Dim wbA             As Workbook
Dim oBk             As Workbook
Dim wb              As Workbook
Dim myselection     As Range
Dim oBkSelection    As Range
Dim myX             As Range
Dim oBkX            As Range
Dim lastRow         As Long
Dim oBklastRow      As Long
Dim myDist          As Long
Dim myTime          As Double
Dim myTrack         As String
Dim colCount        As Long
Dim bookOpen        As Boolean

Dim LogFileName As String
Dim FileNum As Integer
Dim MPSFileName As String

'ensure TrackTimesHistory.csv is open
If ActiveWorkbook.name <> "TrackTimesTempory.csv" Then
    MsgBox ("The worksheet 'TrackTimesTempory.csv' is not the current sheet")
    Exit Sub
End If

Set wbA = Workbooks("TrackTimesTempory.csv")

bookOpen = False
For Each wb In Workbooks
    If wb.name = "Track Records.xls" Then
        bookOpen = True
    End If
Next wb

If bookOpen = False Then
    Workbooks.Open fileName:="C:\FILES\Horses\Track Records.xls", ReadOnly:=False
End If
Set oBk = Workbooks("Track Records.xls")
oBk.Activate
oBklastRow = Range("A65536").End(xlUp).Row
Range("C2:AD" & oBklastRow).ClearContents

Set oBkSelection = Range("A2:A" & oBklastRow)

wbA.Activate
lastRow = Range("A65536").End(xlUp).Row
Set myselection = Range("A2:A" & lastRow)
For Each myX In myselection
    If myX.Offset(0, 2) < 1100 And myX.Offset(0, 2) >= 800 Then
        If myX.Offset(0, 2) Mod 50 = 0 Then
            myTrack = myX.value
            myDist = myX.Offset(0, 2)
            myTime = myX.Offset(0, 8)
            Select Case myDist
                Case 800
                    colCount = 2
                Case 850
                    colCount = 3
                Case 900
                    colCount = 4
                Case 950
                    colCount = 5
                Case 1000
                    colCount = 6
                Case 1050
                    colCount = 7
            End Select
            oBk.Activate
            For Each oBkX In oBkSelection
                If oBkX.value = myTrack Then
                    oBkX.Offset(0, colCount) = myTime
                    GoTo FoundIt:
                End If
            Next oBkX
        Else
            GoTo SkipRecord:
        End If
    ElseIf myX.Offset(0, 2) Mod 100 = 0 Then
        myTrack = myX.value
        myDist = myX.Offset(0, 2)
        myTime = myX.Offset(0, 8)
        If myDist >= 1100 And myDist <= 3200 Then
            colCount = ((myDist - 1100) / 100) + 8
        Else
            GoTo SkipRecord:
        End If
        oBk.Activate
        For Each oBkX In oBkSelection
            If oBkX.value = myTrack Then
                oBkX.Offset(0, colCount) = myTime
                GoTo FoundIt:
            End If
        Next oBkX
    End If
SkipRecord:
FoundIt:
Next myX
oBk.Save
oBk.Activate

'Writes the final average times to a text file for copy and paste to AdjTrackMpsTimes
LogFileName = "C:\FILES\Horses\TempData.txt"

FileNum = FreeFile ' next file number
'Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Open LogFileName For Output As #FileNum
Print #FileNum, "G1 = " & Range("AJ546").text ' write information at the end of the text file & vbCrLf"
Print #FileNum, "G2 = " & Range("AP546").text
Print #FileNum, "G3 = " & Range("AU546").text
Print #FileNum, "G4 = " & Range("AZ546").text
Print #FileNum, "G5 = " & Range("BF546").text
Print #FileNum, "G6 = " & Range("BM546").text
Print #FileNum, "G7 = " & Range("BT546").text
Close #FileNum ' close the file

'------------------------------------------- 545
MPSFileName = "C:\FILES\Horses\MPSadjustmentData.txt"

FileNum = FreeFile ' next file number

Open MPSFileName For Output As #FileNum

Print #FileNum, "990|" & Range("AI546").text
Print #FileNum, "1000|" & Range("AK546").text
Print #FileNum, "1100|" & Range("AM546").text
Print #FileNum, "1200|" & Range("AN546").text
Print #FileNum, "1300|" & Range("AQ546").text
Print #FileNum, "1400|" & Range("AR546").text
Print #FileNum, "1500|" & Range("AS546").text
Print #FileNum, "1600|" & Range("AV546").text
Print #FileNum, "1700|" & Range("AW546").text
Print #FileNum, "1800|" & Range("AX546").text
Print #FileNum, "1900|" & Range("BA546").text
Print #FileNum, "2000|" & Range("BB546").text
Print #FileNum, "2300|" & Range("BG546").text
Print #FileNum, "2600|" & Range("BJ546").text
Print #FileNum, "2800|" & Range("BN546").text
Print #FileNum, "3000|" & Range("BP546").text
Print #FileNum, "3100|" & Range("BQ546").text

Close #FileNum ' close the file

End Sub
Private Function StopPro(strTerminateThis As String)
On Error Resume Next

Dim objWMIcimv2 As Object
Dim objProcess As Object
Dim objList As Object
Dim intError As Integer
     
Set objWMIcimv2 = GetObject("winmgmts:" _
    & "{impersonationLevel=impersonate}!\\.\root\cimv2")
     
Set objList = objWMIcimv2.ExecQuery _
    ("select * from win32_process where name='" & strTerminateThis & "'")

If objList.count <> 0 Then
    For Each objProcess In objList
        intError = objProcess.Terminate
    Next
    Set objProcess = Nothing
End If

Set objWMIcimv2 = Nothing
Set objList = Nothing

End Function
Sub AddRegression()
Dim myselection         As Range
Dim myX                 As Range
Dim myY                 As Range
Dim y                   As String 'URL
Dim filter              As Boolean
Dim tabCode             As String
Dim myTown              As String
Dim trackCode           As String
Dim fileSaveName             As String
Dim myDate              As String
Dim myFile              As String

If ActiveWorkbook.name <> "01 Todays Meetings.xls" Then
    MsgBox ("The worksheet '01 Todays Meetings.xls' is not the current sheet")
    Exit Sub
End If
    filter = Cells(1, 4)
For Each myY In Range("B3:B" & Range("B" & Rows.count).End(xlUp).Row)
    If InStr(1, myY, "Form.aspx") = 0 Then
        MsgBox ("The URL for " & myY.Offset(0, -1) & " is NOT set for the racing form!!!")
        End
    End If
Next myY
'see if Races have been done by checking first one
tabCode = Range("A3")
myTown = Range("F3")
myTown = Replace(myTown, " ", "-")
trackCode = myTown & "-" & tabCode
If tabCode <> "" Then
    myDate = Format(Now, "yyyy") & "-" & Format(Now, "MM") & "-" & Format(Now, "dd")
    myFile = "C:\FILES\Horses\Results\" & Format(Now, "yyyy") & "\" & Format(Now, "MM") & " " & Format(Now, "mmm") & "\Sheets\" & myDate & " " & trackCode & ".xls"
    If Dir(myFile) = "" Then
        MsgBox "The days Race Sheets haven't been processed yet"
        End
    End If
End If
tabCode = ""
myTown = ""
trackCode = ""
Set myselection = Range("A3:A" & Range("A" & Rows.count).End(xlUp).Row)
For Each myX In myselection 'Col A
    tabCode = UCase(myX.value)
    myTown = myX.Offset(0, 5)
    myTown = Replace(myTown, " ", "-")
    trackCode = myTown & "-" & tabCode
    If trackCode <> "" Then
        y = myX.Offset(0, 1).value
        Workbooks.Add
'On Error Resume Next
'##UP TO HERE
        Call RISA_FullHorseFinishes(trackCode, y, filter)
        Call GetRegression
        Call UpdateSheetWithRegression
   End If
   'Call StopProcess("iexplore.exe")
Next myX
    
End Sub
Sub RISA_FullHorseFinishes(trackCode As String, urlName2 As String, filter As Boolean)

'End Sub
'Sub RISA_FullHorseFinishes()
'Obtains all the horse finishes from website http://www.racingaustralia.horse/FreeFields/AllForm........
'21/5/17 chuck

Dim QuestionList As IHTMLElement
Dim Questions As IHTMLElementCollection
Dim Question As IHTMLElement
Dim rowNumber As Long
Dim QuestionId As String
Dim QuestionFields As IHTMLElementCollection
Dim QuestionField As IHTMLElement
Dim BitsFields As IHTMLElementCollection '
Dim Bits As IHTMLElement
Dim TagName As IHTMLElementCollection 'TagName
Dim Tag As IHTMLElement
Dim myCnt As String
Dim urlName         As String
Dim raceNo          As String
Dim horseNo         As String
Dim HorseName       As String
Dim pos             As String
Dim HistStr         As String
Dim lPos            As Long
Dim Meeting         As String
Dim RaceDate        As String
Dim myDate          As Date
Dim lastDate        As Date
Dim myDateDec       As Long 'date in long format
Dim theDateDec      As Long 'todays date as long
Dim NotValid        As Boolean
Dim lastRow         As Long
'Dim hCount          As Integer

Dim ie As InternetExplorer
Dim html As HTMLDocument

theDateDec = Now
'hCount = 0
'prep the sheet
    Range("B:C").NumberFormat = "0"
    Range("B:C").ColumnWidth = 4
    Range("D:D").ColumnWidth = 28
    Range("E:E").ColumnWidth = 70
    Range("D:E").NumberFormat = "@"
    'Range("F:F").ColumnWidth = 4
    'Range("E:E").NumberFormat = "@"
    
    Range("A1").value = "TrackCode"
    Range("B1").value = "RaceNo"
    Range("C1").value = "HorseNo"
    Range("D1").value = "Name"
    Range("E1").value = "History"
    Range("F1").value = "Slope"
    Range("G1").value = "Trend"
    Range("H1").value = "Last+Slope"
    Range("I1").value = "H_Count"
'###############testing
'Dim urlName2 As String
'Dim tabCode As String
'urlName2 = "http://www.racingaustralia.horse/FreeFields/Form.aspx?Key=2017Nov18,QLD,Doomben"
'tabCode = "BR"
'###################
    urlName = urlName2
    'change URL to fullForm
    urlName = Replace(urlName, "/Form.aspx", "/AllForm.aspx")
    
    Set ie = New InternetExplorer
    ie.Visible = False
    'ie.Visible = True
    
    ie.navigate urlName
    Do While ie.READYSTATE <> READYSTATE_COMPLETE
        Application.StatusBar = "Getting RISA data ..."
        DoEvents
    Loop
    Set html = ie.document
'    RowNumber = 1
'MsgBox html.documentElement.innerHTML
'#################
'write html to a file
'    Dim fileSaveName As String
'    Dim curWork As String
'    Dim nFileNum As Long
'    curWork = html.documentElement.innerHTML
'    fileSaveName = "C:\FILES\AFL\test.txt"
'    nFileNum = FreeFile
'    Open fileSaveName For Append As #nFileNum
'    Print #nFileNum, curWork
'    Close #nFileNum
'################
    Set ie = Nothing
    Application.StatusBar = ""

    Set QuestionList = html.GetElementByID("page-content") 'contains all the races
    Set Questions = QuestionList.Children

    For Each Question In Questions
    NotValid = True
'if this is the tag containing the question details, process it
    If Question.ClassName = "race-title" Then 'Level 1 this is the start of a race
        myCnt = UCase(Question.innerText)
        myCnt = Replace(myCnt, Chr(13), "")
        myCnt = Replace(myCnt, Chr(10), "")
        raceNo = Left(myCnt, InStr(1, myCnt, "-") - 1)
        raceNo = Replace(raceNo, "RACE", "")
        raceNo = Trim(raceNo)                                                                           'Race number
        myCnt = ""
    ElseIf Question.ClassName = "horse-form-table" Then 'Level 1 this is the start of each horse detail
        myCnt = Question.innerHTML
        'MsgBox (myCnt)
        If InStr(1, myCnt, ">SCRATCHED<") > 0 Then 'get rid of scratchings
            myCnt = ""
            NotValid = True
            GoTo Scratched:
        End If
        myCnt = ""
        Set QuestionFields = Question.all
            For Each QuestionField In QuestionFields
                If QuestionField.ClassName = "horse-number" Then
                    horseNo = QuestionField.innerText
                End If
                If QuestionField.ClassName = "horse-name" Then
                    HorseName = QuestionField.innerText
                    If InStr(1, HorseName, "(") > 0 Then
                        HorseName = Left(HorseName, InStr(1, HorseName, "(") - 1)
                    End If
                    HorseName = Trim(HorseName)                                                         'horsename
                End If
                If QuestionField.ClassName = "horse-last-start" Then
                    Set BitsFields = QuestionField.all
                        For Each Bits In BitsFields
                            If Bits.ClassName = "Pos" Then
                                NotValid = False
                                pos = Bits.innerText
                                If InStr(1, pos, "T") > 0 Then 'trial run
                                    pos = ""
                                    'NotValid = True
                                    GoTo NoResult:
                                End If
                                pos = Left(pos, InStr(1, pos, " "))
                                pos = Trim(pos)
                                If IsNumeric(pos) = False Then 'bypasses Fell and Lost Rider
                                    pos = ""
                                    'NotValid = True
                                    GoTo NoResult:
                                End If
                                If pos <> "" Then
                                    lPos = pos                                              'finishing position
                                End If
                                'If lPos > 9 Then
                                '    pos = "0"
                                'End If
                                                                                             'finishing position
                            ElseIf Bits.ClassName = "remain" And NotValid = False Then
                                myCnt = Bits.innerHTML
                                If InStr(1, myCnt, "racecode") > 0 Then
                                    Meeting = Mid(myCnt, InStr(1, myCnt, "racecode"), 100)
                                Else
                                    Meeting = Mid(myCnt, InStr(1, myCnt, "<b>"), 100)
                                End If
                                Meeting = Mid(Meeting, InStr(1, Meeting, ">") + 1, 50)
                                Meeting = Left(Meeting, InStr(1, Meeting, "</") - 1)
                                RaceDate = Meeting
                                RaceDate = Mid(RaceDate, InStrRev(RaceDate, " ") + 1, Len(RaceDate))
                                If Len(RaceDate) = 7 Then ' a date
                                    myDate = Left(RaceDate, 2) & "-" & Mid(RaceDate, 3, 3) & "-" & Right(RaceDate, 2)
                                Else
                                    pos = ""
                                    'NotValid = True
                                    GoTo NoResult:
                                End If                                                                  'date
                                myDateDec = myDate
                            End If
'only get the last 6 months worth of data 6mths = 180; 9 mths = 270
                            If (theDateDec - 270) >= myDateDec Then
                                GoTo NoResult:
                            End If
'13/11/17 have taken out the spell / x
' determine if this is a return from a spell or a letup
'spell => 12 weeks (3 mths)
'letup => 6 to 8 weeks ???
                            If NotValid = False And pos <> "" And RaceDate <> "" Then
'                                If myDate - TimeSerial(1344, 0, 0) >= lastDate Then 'spell
'                                    HistStr = HistStr & "x" & pos
'                                    pos = ""
'                                    lPos = 0
'                                    lastDate = myDate
                                'ElseIf myDate - TimeSerial(1344, 0, 0) >= lastDate Then 'letup
                                '    HistStr = HistStr & "u" & pos
                                '    pos = ""
                                '    lPos = 0
                                '    lastDate = myDate
'                                Else
                                    HistStr = HistStr & myDateDec & "," & lPos & "|"
                                    'hCount = hCount + 1 'count how many history runs are obtained
                                    pos = ""
                                    lPos = 0
'                                    lastDate = myDate
'                                End If
                                myDate = Empty
                            End If

NoResult:
                            myCnt = ""
                            Meeting = ""
                            RaceDate = ""
                            myDate = Empty
                       Next Bits
                End If
            myCnt = ""
            Next QuestionField
    End If
Scratched:
    If NotValid = False And HistStr <> "" Then
        'If lastDate + TimeSerial(1344, 0, 0) <= Now Then
        '    HistStr = HistStr & "x"
        'End If
        lastRow = Range("A65536").End(xlUp).Row + 1
        Range("A" & lastRow).value = trackCode                'town & tabCode
        Range("B" & lastRow).value = raceNo                 'RaceNo
        Range("C" & lastRow).value = horseNo                'HorseNo
        Range("D" & lastRow).value = HorseName              'name
        Range("E" & lastRow).value = HistStr                 'history
        'Range("F" & lastRow).value = hCount                 'H_Counts
    End If
    HistStr = ""
    'hCount = 0
    'lastDate = Empty
Next Question
done:
    Set html = Nothing
    Set ie = Nothing
    Application.StatusBar = ""

'SaveData tabCode

'stop process
Call StopPro("iexplore.exe")


End Sub

Sub ProcessString()
'
Dim myX         As Range
Dim myselection As Range
Dim currStr     As String
Dim x           As Long
Dim y           As Long
Dim colCount    As Long
Dim ttlSpells      As Long 'count of how many spells for this horse
Dim cntSpells   As Long
Dim currRun     As Boolean
Dim wins        As Long
Dim places      As Long
Dim z           As Long 'progressive count of runs
Dim starts      As Long 'starts before getting a win/place
Dim ready       As Boolean

Dim lastRow     As Long


lastRow = Range("A65536").End(xlUp).Row
Set myselection = Range("E2:E" & lastRow)
For Each myX In myselection
    currStr = myX.value
    ttlSpells = Len(currStr) - Len(Replace(currStr, "x", ""))
    wins = Len(currStr) - Len(Replace(currStr, "1", ""))
    places = Len(currStr) - Len(Replace(Replace(currStr, "2", ""), "3", ""))
    currRun = False
    ready = False
    If wins = 0 And places = 0 Then GoTo GotNothing:
    For x = 1 To Len(currStr)
        If Mid(currStr, x, 1) = "x" Then
            cntSpells = cntSpells + 1
            z = 0
            If cntSpells = ttlSpells And x = Len(currStr) Then 'found the last spell at the end
                If z >= starts - 1 Then
                    ready = True
                End If
            End If
        Else
            y = Mid(currStr, x, 1)
                If cntSpells = ttlSpells Then 'found the last spell
                    currRun = True
                    'z = 0
                End If
                z = z + 1
                If y = 0 Then
                    y = 10
                End If
                If currRun = False Then
                    If y > 0 And y < 4 Then
                        If starts > z And z > 0 Then
                            starts = z
                        ElseIf starts = 0 Then
                            starts = z 'first up result
                        End If
                    End If
                Else
                    If z >= starts - 1 Then
                        ready = True
                    End If
                End If
        End If
    Next x
GotNothing:
    myX.Offset(0, 1) = "Starts:" & starts & " z:" & z & " Ready?:" & ready
    starts = 0
    z = 0
    currStr = ""
    ttlSpells = 0
    wins = 0
    places = 0
    cntSpells = 0
Next myX
End Sub
Private Sub GetRegression()
' works on the resulting data from Sub RISA_FullHorseFinishes()
'gives the linear regression of the range, minus numbers are best
Dim myX         As Range
Dim myselection As Range
Dim currStr     As String
Dim x           As Long
Dim currDig     As String
Dim lastRow     As Long
Dim r           As Long
Dim myPred      As Double

Dim myKnownx    As Range
Dim myKnowny    As Range
Dim myNewx      As Range

Dim myLen As Long
Dim myDate As Long
'Dim theDate As Long

'theDate = Now

'On Error Resume Next
Worksheets("Sheet1").Activate
lastRow = Range("A65536").End(xlUp).Row
Set myselection = Range("E2:E" & lastRow)
For Each myX In myselection
    myPred = 0
    r = 1
    currStr = myX.value
    myLen = Len(currStr) - Len(Replace(currStr, "|", "")) 'the number of entries in the string
    'currStr = Replace(currStr, "x", "")
    Worksheets("Sheet2").Range("A1:B100").ClearContents
    'For x = 1 To Len(currStr)
    For x = 1 To myLen
        'currDig = Mid(currStr, x, 1)
        currDig = Split(currStr, "|")(x - 1)
        'If currDig = "0" Then
        '    currDig = "10"
        'End If
        Worksheets("Sheet2").Cells(r, 1).value = x
'        Worksheets("Sheet2").Cells(r, 2).value = currDig
'        Worksheets("Sheet2").Cells(r, 1).value = Split(currDig, ",")(0) 'using the date does not work effectively
        Worksheets("Sheet2").Cells(r, 2).value = Split(currDig, ",")(1)
        r = r + 1
    Next x
    Worksheets("Sheet2").Cells(r, 1).value = x
    'Worksheets("Sheet2").Cells(r, 1).value = theDate
    x = x - 1
    If x > 2 Then
'changed cols, y col is the data, x col is the increasing numbers
        'myPred = Format(Application.WorksheetFunction.Slope(Worksheets("Sheet2").Range("A1:A" & x), Worksheets("Sheet2").Range("B1:B" & x)), "#.0000")
        myPred = Format(Application.WorksheetFunction.Slope(Worksheets("Sheet2").Range("B1:B" & x), Worksheets("Sheet2").Range("A1:A" & x)), "#.0000")
'trend or forecast maybe better =TREND(B3:B8,A3:A8,A9)
        '=TREND(B1:B25,A1:A25,A26,TRUE)
        'myForecast = WorksheetFunction.TREND(Sheet2!"B1:B25",Sheet2!"A1:A25",Sheet2!A26)
        'myForecast = WorksheetFunction.Forecast(Worksheets("Sheet2").Range("B1:B10"), Worksheets("Sheet2").Range("A1:A10"), Worksheets("Sheet2").Range("A11"))
        'myForecast = Format(Application.WorksheetFunction.Trend(Worksheets("Sheet2").Range("B1:B" & x), Worksheets("Sheet2").Range("A1:A" & x), Worksheets("Sheet2").Range("A" & x + 1)), "#.0000")
    Else
   
        myPred = 0
    End If

    myX.Offset(0, 1) = myPred
    myX.Offset(0, 3) = Int(Split(currDig, ",")(1) + myPred)
    myX.Offset(0, 4) = myLen
    'myX.Offset(0, 2) = "=TREND(Sheet2!B1:B" & x & ",Sheet2!A1:A" & x & ",Sheet2!A" & x + 1 & ",TRUE)"
'########
    'a = Application.WorksheetFunction.Trend(Range("B1:B7"), Range("A1:A7"), Range("A8"), True) 'works
    Set myKnowny = Worksheets("Sheet2").Range("B1:B" & x)
    Set myKnownx = Worksheets("Sheet2").Range("A1:A" & x)
    Set myNewx = Worksheets("Sheet2").Range("A" & x + 1)
    myX.Offset(0, 2) = Application.WorksheetFunction.Trend(myKnowny, myKnownx, myNewx, True)
'###############

    
    'myX.Offset(0, 2) = Int(myX.Offset(0, 2).value)
    myX.Offset(0, 2) = Format(myX.Offset(0, 2).value, "#.0")
Next myX
End Sub
Private Sub UpdateSheetWithRegression()
' works on the resulting data from Sub RISA_FullHorseFinishes()
'gives the linear regression of the range, minus numbers are best
Dim wbA         As Workbook
Dim wbB         As Workbook
Dim myX         As Range
Dim myselection As Range
Dim myY         As Range
'Dim currStr     As String
'Dim x           As Long
'Dim currDig     As String
Dim lastRow     As Long
Dim lastRow2    As Long
'Dim r           As Long
Dim myPred      As Double
Dim myPos       As Double
Dim myPos2      As Double
Dim hCount      As Integer
Dim myTrack     As String
Dim myRace      As String
Dim myhorse     As String
Dim myDate      As String
Dim myFile      As String
Dim theRace     As String

myDate = Format(Now, "yyyy") & "-" & Format(Now, "MM") & "-" & Format(Now, "dd")
Set wbA = ActiveWorkbook
Worksheets("Sheet1").Activate
lastRow = Range("A65536").End(xlUp).Row
Set myselection = Range("A2:A" & lastRow)
myTrack = Range("A2")
'myFile = "C:\FILES\Horses\Results\2017\11 Nov\Sheets" & myDate & " " & myTrack & ".xls"
myFile = "C:\FILES\Horses\Results\" & Format(Now, "yyyy") & "\" & Format(Now, "MM") & " " & Format(Now, "mmm") & "\Sheets\" & myDate & " " & myTrack & ".xls"
    
Workbooks.Open myFile
Set wbB = ActiveWorkbook
Range("AN1") = "Slope"
Range("AO1") = "Trend"
Range("AP1") = "LastPos+Slope"
Range("AQ1") = "Hist_Count"
'wbA.Activate
For Each myX In myselection
    If myTrack = myX Then
        myRace = myX.Offset(0, 1)
        myhorse = myX.Offset(0, 2)
        myPred = myX.Offset(0, 5)
        myPos = myX.Offset(0, 6)
        myPos2 = myX.Offset(0, 7)
        hCount = myX.Offset(0, 8)
        wbB.Activate
        lastRow2 = Range("D65536").End(xlUp).Row
        For Each myY In Range("D2:D" & lastRow2)
            If myY.Offset(0, -3) <> "" Then
                theRace = myY.Offset(0, -3)
            End If
            If theRace = myRace Then
                If myY = myhorse Then
                    myY.Offset(0, 36) = myPred
                    myY.Offset(0, 37) = myPos
                    myY.Offset(0, 38) = myPos2
                    myY.Offset(0, 39) = hCount
                    Exit For
                End If
            End If
        Next myY
    End If
Next myX
wbB.Activate
'Call Horses.UpdateSheet
wbB.Save
wbB.Close
'### for testing NOTE only getting last 6 months worth of regress data
'wbA.SaveAs FileName:="C:\FILES\Horses\Results\" & Format(Now, "yyyy") & "\" & Format(Now, "MM") & " " & Format(Now, "mmm") & myDate & " " & myTrack & " Regression.xls"
'###
wbA.Close False
End Sub
Sub GetRisaURL()
'gets the URLs for the sheet '01 Todays Meetings'
Dim elements    As IHTMLElementCollection
Dim element     As IHTMLElement
Dim Rows        As IHTMLElementCollection
Dim Row         As IHTMLElement
Dim Boxes       As IHTMLElementCollection
Dim Box         As IHTMLElement
Dim TagName     As IHTMLElementCollection 'TagName
Dim Tag         As IHTMLElement

Dim ie          As InternetExplorer
Dim html        As HTMLDocument
Dim theDate     As String
Dim myDate      As Date
Dim boxDate     As Date

Dim myURL       As String
Dim myTown      As String
Dim rowNumber   As Long
Dim ColNo       As Long

'Dim objPing     As Object
'Dim objStatus   As Object
'Dim Host        As String
Dim wb          As Workbook
Dim TMOpen      As Boolean

'Dim fileSaveName As String
'    Dim curWork As String
'Dim nFileNum As Long

TMOpen = False
For Each wb In Workbooks
    If wb.name = "01 Todays Meetings.xls" Then
        TMOpen = True
        Exit For
    End If
Next wb
If TMOpen = False Then
    MsgBox "01 Todays Meetings.xls is not open"
    End
End If
Workbooks("01 Todays Meetings.xls").Worksheets("Sheet1").Activate
Range("A3:F100").ClearContents

'    curWork = html.documentElement.innerHTML
'fileSaveName = "C:\FILES\AFL\test.txt"
'nFileNum = FreeFile
'Open fileSaveName For Output As #nFileNum

Set ie = New InternetExplorer
ie.Visible = False
'ie.Visible = True

theDate = UCase(Format(Now, "dddd dd mmm"))
'myDate = Date
Application.DisplayStatusBar = True

'StopMyProcess ("iexplore.exe")

'Host = "116.240.194.177"
'Set objPing = GetObject("winmgmts:{impersonationLevel=impersonate}"). _
'    ExecQuery("Select * from Win32_PingStatus Where Address = '" & Host & "'")
'For Each objStatus In objPing
'    Do While objStatus.StatusCode <> 0
'        Application.StatusBar = "Trying to ping Risa ..."
'        DoEvents
'    Loop
'Next objStatus
'http://www.racingaustralia.horse/

'ie.navigate "http://www.racingaustralia.horse/"
ie.navigate "www.racingaustralia.horse"
Application.Wait (Now + TimeValue("00:00:02"))
Do While ie.READYSTATE <> READYSTATE_COMPLETE
    Application.StatusBar = "Getting Risa current race URLs ..."
    DoEvents
Loop
Set html = ie.document
rowNumber = 3

Application.StatusBar = ""

Set elements = html.getElementsByTagName("table")
For Each element In elements
    If element.ClassName = "full-calendar" Then 'right table
        Set Rows = element.getElementsByTagName("tr") 'rows
        For Each Row In Rows
            If Row.ClassName = "rows" Then
                Set Boxes = Row.getElementsByTagName("td") 'cells
                For Each Box In Boxes
                    'boxDate = Mid(Box.innerText, InStr(1, Box.innerText, " ") + 1, Len(Box.innerText)) & " " & Format(Date, "yy")
                    If Box.innerText = theDate Then
                    'If boxDate = myDate Then
                        Set TagName = Row.getElementsByTagName("a")
                        For Each Tag In TagName
                            ColNo = 1
                            myTown = Tag.innerText
                            myTown = Replace(myTown, "(Night)", "")
                            myTown = Replace(myTown, "Mount ", "Mt ")
                            myTown = Trim(myTown)
                            If myTown = "Racing.com Park" Then
                                myTown = "Pakenham"
                            ElseIf myTown = "Racing.com Park Synthetic" Then
                                myTown = "Pakenham"
                            ElseIf myTown = "bet365 Geelong" Then
                                myTown = "Geelong"
                            ElseIf myTown = "Rosehill Gardens" Then
                                myTown = "Rosehill"
                            ElseIf myTown = "Morphettville Parks" Then
                                myTown = "Morphettville"
                            ElseIf myTown = "bet365 Yarra Valley" Then
                                myTown = "Yarra Valley"
                            ElseIf myTown = "Ladbrokes Pioneer Park" Then
                                myTown = "Alice Springs"
                            ElseIf myTown = "Sportsbet-Ballarat" Then
                                myTown = "Ballarat"
                            ElseIf myTown = "bet365 Park Kyneton" Then
                                myTown = "Kyneton"
                            ElseIf myTown = "Ladbrokes Park Hillside" Then
                                myTown = "Sandown"
                            ElseIf myTown = "Ladbrokes Park Lakeside" Then
                                myTown = "Sandown"
                            ElseIf myTown = "Pinjarra Park" Then
                                myTown = "Pinjarra"
                            ElseIf myTown = "Dongara-Irwin" Then
                                myTown = "Dongara"
                            ElseIf myTown = "Devonport Tapeta Synthetic" Then
                                myTown = "Devonport"
                            ElseIf myTown = "bet365 Park Kilmore" Then
                                myTown = "Kilmore"
                            ElseIf myTown = "Aquis Park Gold Coast" Then
                                myTown = "Gold Coast"
                            ElseIf myTown = "Royal Randwick" Then
                                myTown = "Randwick"
                            ElseIf myTown = "Port Macquarie" Then
                                myTown = "Pt Macquarie"
                            ElseIf myTown = "The Valley" Then
                                myTown = "Moonee Valley"
                            ElseIf myTown = "Kensington" Then
                                myTown = "Randwick"
                            ElseIf myTown = "Canterbury Park" Then
                                myTown = "Canterbury"

                            ElseIf myTown = "Spendthrift Australia Park" Then
                                myTown = "Werribee"
                            ElseIf myTown = "Sportsbet-Ballarat Synthetic" Then
                                myTown = "Ballarat"
                            ElseIf myTown = "Sportsbet-Ballarat" Then
                                myTown = "Ballarat"
                            ElseIf myTown = "bet365 Echuca" Then
                                myTown = "Echuca"
                            ElseIf myTown = "bet365 Mildura" Then
                                myTown = "Mildura"
                            ElseIf myTown = "Canberra Acton" Then
                                myTown = "Canberra"
                            ElseIf myTown = "Port Augusta" Then
                                myTown = "Pt Augusta"
                            ElseIf myTown = "Port Hedland" Then
                                myTown = "Pt Hedland"
                            ElseIf myTown = "Murray Bridge GH" Then
                                myTown = "Murray Bridge"
                            ElseIf myTown = "Aquis Beaudesert" Then
                                myTown = "Beaudesert"
                            'ElseIf myTown = "Mount Isa" Then
                            '    myTown = "Mt Isa"
                            ElseIf myTown = "Beaumont Newcastle" Then
                                myTown = "Newcastle"
                            ElseIf myTown = "bet365 Bairnsdale" Then
                                myTown = "Bairnsdale"
                            ElseIf myTown = "Port Lincoln" Then
                                myTown = "Pt Lincoln"
                            
                            End If
                            myURL = Tag.outerHTML
                            'Debug.Print myUrl
                            'http://www.racingaustralia.horse/FreeFields/Form.aspx?Key=2017Aug07,NSW,Forbes
                            myURL = Replace(myURL, "<a href=""/", "http://www.racingaustralia.horse/")
                            myURL = Left(myURL, InStr(1, myURL, ">") - 2)
                            'Debug.Print myUrl
                            'Debug.Print myTown
'leaves A col blank
                            'Cells(rowNumber, ColNo) = myTown
                            ColNo = ColNo + 1
                            Cells(rowNumber, ColNo) = myURL
                            ColNo = ColNo + 4
                            Cells(rowNumber, ColNo) = myTown
                            rowNumber = rowNumber + 1

                        Next Tag
                    'ElseIf boxDate < myDate Then GoTo SkipRow:
                    Else
                        Exit For
                    End If
                    Exit For
'SkipRow:
                Next Box
                Exit For
            End If
            'Exit For
        Next Row
    End If
    Exit For
Next element

'Close #nFileNum

Set html = Nothing
ie.Quit
Set ie = Nothing
Application.StatusBar = ""

End Sub
Sub addTabCodesToTodaysURL()
'gets the TAB codes for the URLs in the sheet '01 Todays Meetings'

Dim startElement As WebElement
'Dim elements    As WebElementCollection
'Dim element     As WebElement
'Dim Rows        As WebElementCollection
'Dim Row         As WebElement
'Dim Boxes       As WebElementCollection
'Dim Box         As WebElement
'Dim ie          As InternetExplorer
'Dim html        As HTMLDocument
Dim sURL        As String
Dim theDate     As String
Dim myTown      As String
Dim myCode      As String
Dim wb          As Workbook
Dim TMOpen      As Boolean
Dim gotCode     As Boolean
Dim myselection As Range
Dim myX         As Range
Dim lastRow     As Long
Dim raceCount   As Integer

Dim myWork      As String
Dim curWork     As String
Dim MeetingArray() As String
Dim r           As Long
Dim myMeeting   As String


Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")
StopMyProcess ("iexplore.exe")

With driver
        .addArgument ("--headless")
End With

lastRow = (Range("F" & 65000).End(xlUp).Row)
raceCount = 0

Set myselection = Range("F3:F" & lastRow)


theDate = Format(Now, "yyyymmdd")
Application.DisplayStatusBar = True
Application.StatusBar = "Getting TAB Codes for current URLs ..."
'https://tab.ubet.com/racing?Date=20190519
'https://tab.ubet.com/racing/horse-racing?Date=20190603 ' WONT WORK
'ie.navigate "tab.ubet.com/racing?Date=" & theDate
'Application.Wait (Now + TimeValue("00:00:02"))
'Do While ie.READYSTATE <> READYSTATE_COMPLETE
'    Application.StatusBar = "Getting TAB Codes for current URLs ..."
'    DoEvents
'Loop
'Set html = ie.document
'sURL = "https://tab.ubet.com/racing/horse-racing?Date=" & theDate
sURL = "https://tab.ubet.com/racing/"
'driver.Start "phantomjs", sURL 'DOESNT WORK ANYMORE - NOT SUPPORTED
driver.Start "chrome", sURL
driver.setImplicitWait 10000
'driver.Wait (500)
driver.get "/horse-racing?Date=" & theDate, Raise:=False
'driver.get "/horse-racing?Date=20191027, Raise:=False"
driver.Wait (1000)
driver.maximizeWindow
driver.Wait (2000)

'driver.captureEntirePageScreenshot ("C:\FILES\Horses\screenshot.jpg")
'Stop
Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container")
'Set startElement = driver.findElementByXPath("/html/body/div[2]/div[3]/racing-container/div/div[2]/div/ubet-racing-home-page/div/div/div/div/ubet-racing-race-grid/div/div[2]/div")
'Set startElement = driver.findElementByXPath("//*[@id='page-container']/racing-container/div/div[2]/div/ubet-racing-home-page/div/div/div/div/ubet-racing-race-grid/div/div[2]/div")
'                                             //*[@id="page-container"]/racing-container/div/div[2]/div/ubet-racing-home-page/div/div/div/div[1]/ubet-racing-race-grid/div/div[2]/div
'                                             //*[@id="page-container"]/racing-container/div/div[2]/div/ubet-racing-home-page/div/div/div/div/ubet-racing-race-grid/div/div[2]/div
'Set elements = startElement.findElementsByTagName("div")
'Debug.Print startElement.text
'------------------
'Set elements = startElement.findElementsByXPath("./*")
'For Each element In elements
''Stop
'    'Debug.Print element.getAttribute("class")
'    If element.getAttribute("class") = "row row-for-medium-down meet alt-row" _
'        Or element.getAttribute("class") = "row row-for-medium-down meet" Then 'got the meeting div
'        'Set Rows = element.Find
'        Set Rows = element.findElementsByTagName("div")
'        For Each Row In Rows
'            'Debug.Print Row.getAttribute("class")
'            gotCode = False
'            'Stop
'            If Row.getAttribute("class") = "location" Then
'            'If Row.getAttribute("class") = "location" Then
'                Set Boxes = Row.findElementsByTagName("div") '
'                For Each Box In Boxes
'                    'Debug.Print "Box: " & Box.getAttribute("class")
'                    If Left(Box.getAttribute("class"), 4) = "name" Then 'got the town
'                        'myTown = Box.innerText
'                        myTown = Box.text
'                        'Debug.Print "myTown: " & myTown
'                    ElseIf Left(Box.getAttribute("class"), 4) = "code" Then
'                        myCode = Box.text
'                        myCode = Replace(Replace(myCode, "(", ""), ")", "")
'                        'Debug.Print "myCode: " & myCode
'                        If myTown <> "" And Mid(myCode, 2, 1) = "R" Then
'                            gotCode = True
'                            Exit For
'                        End If
'                    End If
'                Next Box
'                If gotCode = True Then
'                    For Each myX In myselection
'                        If myX = myTown And myX.Offset(0, -5) = "" Then
'                            myX.Offset(0, -5) = myCode
'                            raceCount = raceCount + 1
'                            'Debug.Print "Race count is " & raceCount
'                            'Stop
'                            myTown = ""
'                            myCode = ""
'                            If raceCount = lastrow - 2 Then GoTo allDone:
'                            Exit For
'                        End If
'                    Next myX
'                End If
'            End If
'        Next Row
'    End If
'Next element
'------------------------

myWork = startElement.getAttribute("innerHTML")
myWork = Mid(myWork, InStr(1, myWork, "data-automationid=""meetingNameLabel"">"), Len(myWork))
'split the locations
curWork = Replace(myWork, "data-automationid=""meetingNameLabel"">", "@@")

MeetingArray = Split(curWork, "@@")
                'For r = LBound(runnerArray) To UBound(runnerArray)
    For r = 1 To UBound(MeetingArray)
        myMeeting = MeetingArray(r)
        'Debug.Print myMeeting
        myTown = Left(myMeeting, InStr(1, myMeeting, "<") - 1)
        Trim (myTown)
        'Debug.Print myTown
        myCode = Mid(myMeeting, InStr(1, myMeeting, "meetingCodeLabel"">") + 18, Len(myMeeting))
        myCode = Left(myCode, InStr(1, myCode, "<") - 1)
        myCode = Replace(Replace(myCode, "(", ""), ")", "")
        myCode = Trim(myCode)
        'Debug.Print myCode
        'Stop
        For Each myX In myselection
            If myX = myTown And myX.Offset(0, -5) = "" Then
                myX.Offset(0, -5) = myCode
                raceCount = raceCount + 1
                'Debug.Print "Race count is " & raceCount
                'Stop
                myTown = ""
                myCode = ""
                If raceCount = lastRow - 2 Then GoTo allDone:
                Exit For
            End If
        Next myX
'        myTown = ""
'        myCode = ""
'
    Next r
allDone:
driver.stop
'Set html = Nothing
'ie.Quit
'Set ie = Nothing
Application.StatusBar = ""
MsgBox "All TAB codes obtained"
End Sub
Sub BuildURLfile()
'keeps the URLs from the sheet '01 Todays Meetings' for scratching reference
Dim myURL       As String
Dim myTown      As String
Dim myCode      As String
Dim fileSaveName As String
Dim nFileNum    As Long
Dim wb          As Workbook
Dim TMOpen      As Boolean

Dim myX         As Range
Dim myselection     As Range

TMOpen = False
For Each wb In Workbooks
    If wb.name = "01 Todays Meetings.xls" Then
        TMOpen = True
        Exit For
    End If
Next wb
If TMOpen = False Then
    Workbooks.Open fileName:="C:\FILES\Horses\01 Todays Meetings.xls", ReadOnly:=False
End If
fileSaveName = "C:\FILES\Horses\todays URLs.txt"
nFileNum = FreeFile
Open fileSaveName For Output As #nFileNum

Workbooks("01 Todays Meetings.xls").Worksheets("Sheet1").Activate
Set myselection = Range("A3:A" & Range("A" & Rows.count).End(xlUp).Row) 'Trackcode
    For Each myX In myselection
        If myX <> "" Then
            Print #nFileNum, myX & "|" & myX.Offset(0, 1) & "|" & myX.Offset(0, 5)
        Else
            MsgBox "Track Codes have not been set in '01 Todays Meetings'"
            End
        End If
    Next myX

Close #nFileNum
If TMOpen = False Then
    ActiveWorkbook.Close SaveChanges:=False
End If

End Sub

Attribute VB_Name = "RisaForm"
Sub getRisaForm()

Call GetFullMeet
Call RisaTidySheet

End Sub
Private Sub GetFullMeet()
    Dim objWeb As QueryTable
    Dim urlName As String
    urlName = InputBox(Prompt:="Enter URL", Title:="URL")
    urlName = "URL;" & urlName
    Set objWeb = ActiveSheet.QueryTables.Add(Connection:=urlName, Destination:=Range("A1"))
    With objWeb
        .WebSelectionType = xlAllTables
        .Refresh BackgroundQuery:=False
        .SaveData = True
    End With
    Set objWeb = Nothing
End Sub
Private Sub RisaTidySheet()
    Dim r As Long
    Dim rng As Range
'get rid of hyperlinks
    ActiveSheet.Hyperlinks.Delete
'take off any cell merge
    Cells.MergeCells = False

'Select Column A Get rid of all blank rows
    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
'Select Column A Get rid of all header rows
    Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).Select
    Set rng = Selection
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "No" Then
            rng.Rows(r).EntireRow.Delete
            End If
        Next r
End Sub
Private Sub RisaInsCols()
'insert columns
If Range("b1").value <> "RaceNo" Then
'insert header row
    Rows("1:1").Insert Shift:=xlDown

    Columns("A:AL").Insert Shift:=xlToRight
    Range("A:C, E:K, M:M").NumberFormat = "@"
   ' Range("C:C").NumberFormat = "dd/mm/yyyy"
    Range("D:D").NumberFormat = "0"
    Range("L:L").NumberFormat = "0.0"
    'Range("M:M").NumberFormat = "m:ss.00" 'change this to double
   ' Range("M:M").NumberFormat = "0.00"
    Range("N:N").NumberFormat = "0.0000000000"
    Range("N:N").ColumnWidth = 18
    Range("A1").value = "Race"
    Range("B1").value = "Distance"
    Range("C1").value = "No"
    Range("D1").value = "Last10"
    Range("E1").value = "Horse"
    Range("F1").value = "Jockey"
    Range("G1").value = "Barr"
    Range("H1").value = "Wgt"
    Range("I1").value = "HTrack"
    Range("J1").value = "HDate"
    Range("K1").value = "HDistance"
    Range("L1").value = "HWeight"
    Range("M1").value = "HTime"
    Range("N1").value = "MPS"
    Range("O1").value = "AMPS"
    Range("P1").value = "Trainer"
    Range("Q1").value = "CalcFinish"
    Range("R1").value = "AdjustedFinish"
    Range("S1").value = "Win"
    Range("T1").value = "Place"
    Range("U1").value = "Bet"
    Range("V1").value = "Combo"
    Range("W1").value = "ComboAll"
    Range("X1").value = "SCORE"
'then the working columns
    Range("Y1").value = "Track"
    Range("Z1").value = "RaceNo"
    Range("AA1").value = "Date"
    Range("AA:AA").ColumnWidth = 10
    Range("AB1").value = "Distance"
    Range("AC1").value = "Condition"
    Range("AD1").value = "Position"
    Range("AE1").value = "HorseNo"
    Range("AF1").value = "Name"
    Range("AG1").value = "Value"
    Range("AH1").value = "Jockey"
    Range("AI1").value = "Trainer"
    Range("AJ1").value = "Weight"
    Range("AK1").value = "Time"
    Range("AL1").value = "MPS"
End If
End Sub
Attribute VB_Name = "Shares"
Option Explicit
Private Sub CreateCompanyFile()
'loops through data in History and appends relevant data to the company file in Companies
Dim file            As Variant
Dim TextFile        As Integer
Dim FilePath        As String
Dim FileContent     As String
Dim LineArray()     As String
Dim x               As Long
Dim CCode           As String
Dim CRest           As String
Dim CValue          As Double
Dim fileName        As String
Dim FileNum         As Integer


file = Dir("C:\FILES\Shares\History\")
While (file <> "")
    FilePath = "C:\FILES\Shares\History\" & file
    TextFile = FreeFile
    Open FilePath For Input As TextFile
    FileContent = Input(LOF(TextFile), TextFile)
    Close TextFile
    LineArray() = Split(FileContent, vbCrLf)
    For x = LBound(LineArray) To UBound(LineArray)
        DoEvents 'stops the 'not responding' message
        If Len(Trim(LineArray(x))) <> 0 Then
            CCode = Split(LineArray(x), ",")(0)
            CValue = Split(LineArray(x), ",")(2)
            If Len(CCode) > 4 Then GoTo notCompany:
            If CValue >= 1000 Then GoTo notCompany:
            Select Case CCode
                Case "XMJ", "XMM", "XJR", "XXJ", "XEC", "XFJ", "XUJ", "XTO", "XTL", "XTJ", "XSO", "XSJ", "XPJ", "XNJ", "XMD", _
                    "XKO", "XJO", "XIJ", "XHJ", "XGD", "XFL", "XAF", "XIJ"
                    GoTo notCompany:
            End Select
            CRest = Replace(LineArray(x), CCode & ",", "")
            CRest = Trim(CRest)
            fileName = "C:\FILES\Shares\Companies\" & CCode & ".csv"
            FileNum = FreeFile ' next file number
            Open fileName For Append As #FileNum ' creates the file if it doesn't exist
            Print #FileNum, CRest ' write information at the end of the text file & vbCrLf
            Close #FileNum ' close the file
        End If
        CCode = ""
        CRest = ""
        fileName = ""
    Next x
notCompany:
file = Dir
Wend
End Sub
Private Sub GetLatestTrend()
'loops through Companies Dir and gets latest price and the trend
Dim myX             As Range
Dim myCompanies     As Range
Dim myY             As Range
Dim myselection     As Range
Dim lastRow     As Long
Dim lastRow2        As Long
Dim file            As Variant
'Dim TextFile        As Integer
'Dim FilePath        As String
'Dim FileContent     As String
'Dim LineArray()     As String
'Dim x               As Long
Dim ToDate       As Long
Dim CurrDate        As String
Dim properDate           As Date
Dim ToOld           As Boolean
Dim CurrPrice       As String
Dim No              As Long
Dim lngCounter As Long

Dim myKnownx    As Range
Dim myKnownx2   As Range
Dim myKnowny    As Range
Dim myNewx      As Range

Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

'On Error Resume Next
ToDate = Format(Now - 180, "yyyyMMdd")
If ActiveWorkbook.name <> "Full Company List.xls" Then
    MsgBox ("The worksheet 'Full Company List.xls' is not the current sheet")
    Exit Sub
End If
Worksheets("ASX_Companies").Activate
Range("E1") = "Trent - forcast for " & Format(Now + 7, "yyyyMMdd")

file = Dir("C:\FILES\Shares\Companies\")
While (file <> "")
    ToOld = False
    Worksheets("ASX_Companies").Activate

    lastRow = Range("A65536").End(xlUp).Row
    Set myCompanies = Range("A2:A" & lastRow)

'open a temp file
        Workbooks.OpenText fileName:="C:\FILES\Shares\Companies\" & file, Origin:= _
            437, StartRow:=1, DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, _
            ConsecutiveDelimiter:=False, Tab:=True, Semicolon:=False, Comma:=True _
            , Space:=False, Other:=False, FieldInfo:=Array(Array(1, 1), Array(2, 1), _
            Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1)), TrailingMinusNumbers:=True
        Cells.Select
'sort that data
        Selection.Sort key1:=Range("A1"), Order1:=xlAscending, Header:=xlNo, _
            OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
            DataOption1:=xlSortNormal
        lastRow2 = Range("B65536").End(xlUp).Row


        Set myselection = Range("A1:A" & lastRow2)
        For lngCounter = myselection.Cells.count To 1 Step -1
            If myselection(lngCounter).value < ToDate Then
                Selection.Rows(lngCounter).EntireRow.Delete
            End If
        Next lngCounter
    
        lastRow2 = Range("B65536").End(xlUp).Row
        No = 1
        If lastRow2 < 2 Then
            Workbooks(file).Close False
            Kill "C:\FILES\Shares\Companies\" & file
            GoTo noData:
        End If
        For Each myY In Range("A1:A" & lastRow2)
            myY.Offset(0, 6) = No
            No = No + 1
            If myY.Row = lastRow2 Then
                CurrDate = myY
                properDate = Mid(CurrDate, 7, 2) & "/" & Mid(CurrDate, 5, 2) & "/" & Left(CurrDate, 4)
                If properDate < Now - 45 Then
                    ToOld = True
                End If
                CurrPrice = myY.Offset(0, 1)
                myY.Offset(1, 0) = Format(Now + 7, "yyyyMMdd")
                Set myKnowny = Range("B1:B" & lastRow2)
                Set myKnownx = Range("A1:A" & lastRow2)
                Set myKnownx2 = Range("G1:G" & lastRow2)
                Set myNewx = Range("A" & lastRow2 + 1)
                For Each myX In myCompanies
                    If myX.value = Replace(file, ".csv", "") And ToOld = False Then
                        myX.Offset(0, 1) = CurrDate
                        myX.Offset(0, 2) = CurrPrice
                        myX.Offset(0, 3) = Format(Application.WorksheetFunction.Slope(myKnowny, myKnownx2), "#.0000")
                        myX.Offset(0, 4) = Application.WorksheetFunction.Trend(myKnowny, myKnownx, myNewx, True)
                        myX.Offset(0, 4) = Format(myX.Offset(0, 4), "#.000")
                        Exit For
                    ElseIf myX.value = Replace(file, ".csv", "") And ToOld = True Then
                        myX.Offset(0, 1) = "" 'CurrDate
                        myX.Offset(0, 2) = "" 'CurrPrice
                        myX.Offset(0, 3) = "" 'Format(Application.WorksheetFunction.Slope(myKnowny, myKnownx2), "#.0000")
                        myX.Offset(0, 4) = "" 'Application.WorksheetFunction.Trend(myKnowny, myKnownx, myNewx, True)
                        myX.Offset(0, 4) = "" 'Format(myX.Offset(0, 4), "#.000")
                        Exit For
                    ElseIf myX.Row = lastRow And ToOld = False Then
                        myX.Offset(1, 0) = Replace(file, ".csv", "")
                        myX.Offset(1, 1) = CurrDate
                        myX.Offset(1, 2) = CurrPrice
                        myX.Offset(1, 3) = Format(Application.WorksheetFunction.Slope(myKnowny, myKnownx2), "#.0000")
                        myX.Offset(1, 4) = Application.WorksheetFunction.Trend(myKnowny, myKnownx, myNewx, True)
                        myX.Offset(1, 4) = Format(myX.Offset(1, 4), "#.000")
                    End If
                Next myX
        End If
    Next myY
        

Workbooks(file).Save
Workbooks(file).Close False

noData:

file = Dir
Wend
Workbooks("Full Company List.xls").Save
    
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub
Private Sub Process_temp()
'temp use only
Dim file            As Variant
Dim sFile           As String
Dim TextFile        As Integer
Dim FilePath        As String
Dim FileContent     As String
Dim LineArray()     As String
Dim x               As Long
'Dim CCode           As String
'Dim CRest           As String
Dim sBuff           As String
Dim fileName        As String
Dim FileNum         As Integer

Dim OldFile         As String
Dim NewFile         As String

file = Dir("C:\FILES\Shares\Companies\")
While (file <> "")
    FilePath = "C:\FILES\Shares\Companies\" & file
    OldFile = "C:\FILES\Shares\Companies\" & file
    sFile = Replace(file, ".txt", ".csv")
    NewFile = "C:\FILES\Shares\Companies\" & sFile

    ' rename files
    Name OldFile As NewFile
    
    FilePath = "C:\FILES\Shares\Companies\" & sFile

    TextFile = FreeFile
    Open FilePath For Input As TextFile
    FileContent = Input(LOF(TextFile), TextFile)
    Close TextFile
                
    fileName = "C:\FILES\Shares\Companies\" & sFile
    FileNum = FreeFile ' next file number
    Open fileName For Output As #FileNum
    LineArray() = Split(FileContent, vbCrLf)
    If UBound(LineArray) > 1 Then
        For x = LBound(LineArray) To UBound(LineArray)
            DoEvents 'stops the 'not responding' message
            If Len(Trim(LineArray(x))) <> 0 Then
                sBuff = Replace(LineArray(x), Chr(9), ",")
                Print #FileNum, sBuff ' write information at the end of the text file & vbCrLf
            End If
            'FileName = ""
        Next x
    End If
    Close #FileNum ' close the file

    file = Dir
Wend
End Sub
Private Sub holdit()
Dim sBuf As String
Dim sTemp As String
Dim iFileNum As Integer
Dim sFileName As String

' Edit as needed
sFileName = "C:\Temp\test.txt"

iFileNum = FreeFile
Open sFileName For Input As iFileNum

Do Until EOF(iFileNum)
    Line Input #iFileNum, sBuf
    sTemp = sTemp & sBuf & vbCrLf
Loop
Close iFileNum

sTemp = Replace(sTemp, "THIS", "THAT")

iFileNum = FreeFile
Open sFileName For Output As iFileNum
Print #iFileNum, sTemp
Close iFileNum

End Sub
Sub UpdateBlueChipShares()
  
Dim myselection As Range
Dim myX As Range
Dim urlName As String
Dim oHttp As Object
Dim a As String
Dim x As Long
Dim b As String
Dim c As Long
Dim myCol As Long
Dim mySum As Double

'myCol = ActiveSheet.UsedRange.Columns.count
myCol = Cells(1, Columns.count).End(xlToLeft).Column
On Error Resume Next
Cells(1, myCol + 1).value = Date

Set myselection = Range("A2:A21")
For Each myX In myselection 'Col A
    urlName = "https://www.asx.com.au/asx/markets/priceLookup.do?by=asxCodes&asxCodes=" & myX.value
    Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
    oHttp.Open "GET", urlName, False
    oHttp.send
    a = oHttp.responseText 'a contains source code of website
    x = InStr(1, a, "<td class=""last"">")
    b = Mid(a, x + 17, 100)
    b = Left(b, InStr(1, b, Chr(10)) - 1)
    b = Trim(b)
    If IsNumeric(b) Then
    'Debug.Print b
    'Stop
        mySum = mySum + b
    Else
        b = "Not Found"
    End If
    myX.Offset(0, myCol) = b
    
Next myX
'Stop
Cells(23, myCol + 1) = mySum
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "StandardMacros"
Option Explicit
Public Function strClean(myStr As String)

myStr = Replace(myStr, Chr(10), "") '[Line Feed Return]
myStr = Replace(myStr, Chr(11), "") '[Shift+Enter]
myStr = Replace(myStr, Chr(13), "") '[Carriage Return]
myStr = Replace(myStr, Chr(9), "")  '[Tab]
myStr = Replace(myStr, Chr(146), Chr(39)) 'standardise the ' char
myStr = Replace(myStr, "&#x27;", Chr(39)) 'standardise the ' char
myStr = Trim(myStr)                 'trim

strClean = myStr
End Function
Sub RemoveHyperlinks()
'removes all hyperlinks from a sheet
ActiveSheet.Hyperlinks.Delete
End Sub
Sub DeleteAllPics()
'removes all images from a sheet
Dim Pic As Object
    For Each Pic In ActiveSheet.Pictures
        Pic.Delete
    Next Pic
End Sub
Public Function StopMyProcess(strTerminateThis As String)
On Error Resume Next

Dim objWMIcimv2 As Object
Dim objProcess As Object
Dim objList As Object
Dim intError As Integer
     
Set objWMIcimv2 = GetObject("winmgmts:" _
    & "{impersonationLevel=impersonate}!\\.\root\cimv2")
     
Set objList = objWMIcimv2.ExecQuery _
    ("select * from win32_process where name='" & strTerminateThis & "'")

If objList.count = 0 Then
    'The process isn't running
    'MsgBox "The process isn't running."
Else
    'The process is running
    For Each objProcess In objList
        'Terminate the process and all of its threads.
        intError = objProcess.Terminate
        If intError <> 0 Then
            'Return value is 0 for success. Any other number is an error.
            'MsgBox "There was an error closing this process."
        Else
            'MsgBox "Process terminated ok."
        End If
    Next
    Set objProcess = Nothing
End If

Set objWMIcimv2 = Nothing
Set objList = Nothing

End Function
Public Sub DelimitedOutputALLFile()
        Const Delimiter As String = "^" 'or "|", vbTab, etc.
        Dim myRecord As Range
        Dim myField As Range
        Dim nFileNum As Long
        Dim sOut As String
        Dim fileSaveName As String

        ' Name the file and where to save it
        fileSaveName = Application.GetSaveAsFilename( _
            FileFilter:="Text Files (*.txt), *.txt")
        
        nFileNum = FreeFile
        Open fileSaveName For Output As #nFileNum
        For Each myRecord In Range("A1:A" & _
                Range("A" & Rows.count).End(xlUp).Row)
            With myRecord
                For Each myField In Range(.Cells(1), _
                        Cells(.Row, Columns.count).End(xlToLeft))
                    sOut = sOut & Delimiter & myField.text
                 Next myField
                Print #nFileNum, Mid(sOut, 2)
                sOut = Empty
            End With
        Next myRecord
        Close #nFileNum
    End Sub
    Private Sub RobsDelimitedFile()
' Outputs a delimited file with the delimiter being set as the first variable
' Allows the user to stipulate the line and column counts
' Created by Chuck 12/07/2007

        Const Delimiter As String = "^" 'or "|", vbTab, etc.
        Dim myRecord As Range
        Dim myField As Range
        Dim nFileNum As Long
        Dim sOut As String
        Dim fileSaveName As String
        Dim lnCount As Integer
        Dim clCount As Integer
'
        ' Obtain how many rows and columns are being loaded
        lnCount = InputBox("How many Rows are you loading")
        clCount = InputBox("How many Columns are you loading")

        ' Name the file and where to save it
        fileSaveName = Application.GetSaveAsFilename( _
            FileFilter:="Text Files (*.txt), *.txt")
'
        nFileNum = FreeFile
        Open fileSaveName For Output As #nFileNum
         For Each myRecord In Range("A1:A" & lnCount)
           With myRecord
         For Each myField In Range(.Cells(1), Cells(.Row, clCount))
                   sOut = sOut & Delimiter & myField.text
                 Next myField
                Print #nFileNum, Mid(sOut, 2)
                sOut = Empty
            End With
        Next myRecord
        Close #nFileNum
    End Sub
Sub FillBlanks()
 ' User must select the area to fill and only 1 column at a time
 ' If the user doesn't convert the values at the end, the blank
 ' cells will retain the reference to the above cell only
 '
Dim rRange1 As Range, rRange2 As Range
Dim iReply As Integer
 
    'If Selection.Cells.Count = 1 Then
       'MsgBox "You must select your list and include the blank cells", _
       'vbInformation, "Fill Blank Cells Macro"
       'Exit Sub
    'ElseIf Selection.Columns.Count > 1 Then
       'MsgBox "You must select only one column", _
       'vbInformation, "Fill Blank Cells Macro"
       'Exit Sub
    'End If
   
   Set rRange1 = Range(Selection.Cells(1, 1), _
             Cells(65536, Selection.Column).End(xlUp))
           
    On Error Resume Next
    Set rRange2 = rRange1.SpecialCells(xlCellTypeBlanks)
    On Error GoTo 0
 
    If rRange2 Is Nothing Then
       MsgBox "No blank cells Found", _
              vbInformation, "Fill Blank Cells Macro"
        Exit Sub
    End If
 
    rRange2.FormulaR1C1 = "=R[-1]C"
   ' Converts the reference to the true value
    'iReply = MsgBox("Convert to Values", vbYesNo + vbQuestion, "Fill Blank Cells Macro")
    'If iReply = vbYes Then rRange1 = rRange1.Value
End Sub


Sub DeleteBlankRows()
'Deletes the entire row within the selection if the ENTIRE row contains no data.
'We use Long in case they have over 32,767 rows selected.
'User must select the range first by hand

Dim i As Long

If Selection.Cells.count = 1 Then
       MsgBox "You must select the full area to delete an entire blank row", _
       vbInformation, "Delete Blank Rows Macro"
       MsgBox "or select one column to delete this row if this cell is blank", _
       vbInformation, "Delete Blank Rows Macro"
       Exit Sub
    End If

    'We turn off calculation and screenupdating to speed up the macro.
    With Application
        .Calculation = xlCalculationManual
        .ScreenUpdating = False
    
    'We work backwards because we are deleting rows.
    For i = Selection.Rows.count To 1 Step -1
        If WorksheetFunction.CountA(Selection.Rows(i)) = 0 Then
            Selection.Rows(i).EntireRow.Delete
        End If
    Next i

        .Calculation = xlCalculationAutomatic
        .ScreenUpdating = True
    End With
End Sub
 
Public Sub DeleteDuplicateRows()
'
' This macro deletes duplicate rows in the selection.
' Select the column in which the Duplicates are
' One column dictates what row is a duplicate.

Dim col As Integer
Dim r As Long
Dim c As Range
Dim n As Long
Dim v As Variant
Dim rng As Range

If Selection.Cells.count = 1 Then
       MsgBox "You must select the column that contains the duplicate cells", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    ElseIf Selection.Columns.count > 1 Then
       MsgBox "You must select only one column", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    End If

On Error GoTo EndMacro
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

col = ActiveCell.Column

If Selection.Rows.count > 1 Then
    Set rng = Selection
Else
    Set rng = ActiveSheet.UsedRange.Rows
End If

n = 0
For r = rng.Rows.count To 1 Step -1
    v = rng.Cells(r, 1).value
    If Application.WorksheetFunction.CountIf(rng.Columns(1), v) > 1 Then
        rng.Rows(r).EntireRow.Delete
        n = n + 1
    End If
Next r

EndMacro:

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub
 
Sub ConvertToValue()
    '
    ' changes the references in cells to the true value

        Dim myX As Range
        Dim myF As Range
        For Each myX In Range("A1:A" & _
                Range("A" & Rows.count).End(xlUp).Row)
            With myX
                For Each myF In Range(.Cells(1), _
                        Cells(.Row, Columns.count).End(xlToLeft))
                    myF = myF.value
                 Next myF
            End With
        Next myX
                 

End Sub

Public Sub ColourDuplicateRows()
'
' This macro deletes duplicate rows in the selection.
' Select the column in which the Duplicates are
' One column dictates what row is a duplicate.

Dim col As Integer
Dim r As Long
Dim c As Range
Dim n As Long
Dim v As Variant
Dim rng As Range

If Selection.Cells.count = 1 Then
       MsgBox "You must select the column that contains the duplicate cells", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    ElseIf Selection.Columns.count > 1 Then
       MsgBox "You must select only one column", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    End If

On Error GoTo EndMacro
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

col = ActiveCell.Column

' If Selection.Rows.Count > 1 Then
    Set rng = Selection
' Else
    ' Set Rng = ActiveSheet.UsedRange.Rows
' End If

n = 0
For r = rng.Rows.count To 1 Step -1
    v = rng.Cells(r, 1).value
    If Application.WorksheetFunction.CountIf(rng.Columns(1), v) > 1 Then
        With rng.Rows(r).Interior
        .ColorIndex = 8
        .Pattern = xlSolid
        .PatternColorIndex = 8
        ' Rng.Rows(r).EntireRow.Delete
        n = n + 1
        End With
    End If
Next r

EndMacro:

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub

Public Sub DeleteNonColourRows()
'
' This macro deletes duplicate rows in the selection.
' Select the column in which the Duplicates are
' One column dictates what row is a duplicate.

Dim col As Integer
Dim r As Long
Dim c As Range
Dim n As Long
Dim v As Variant
Dim rng As Range

If Selection.Cells.count = 1 Then
       MsgBox "You must select the column that contains the duplicate cells", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    ElseIf Selection.Columns.count > 1 Then
       MsgBox "You must select only one column", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    End If

On Error GoTo EndMacro
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

col = ActiveCell.Column

' If Selection.Rows.Count > 1 Then
    Set rng = Selection
' Else
    ' Set Rng = ActiveSheet.UsedRange.Rows
' End If

n = 0
For r = rng.Rows.count To 1 Step -1
    v = rng.Cells(r, 1).value
    ' If Application.WorksheetFunction.CountIf(Rng.Columns(1), V) > 1 Then
        If rng.Rows(r).Interior.ColorIndex = xlNone Then
        ' .Pattern = xlSolid
        ' .PatternColorIndex = 8
        rng.Rows(r).EntireRow.Delete
        n = n + 1
    End If
Next r

EndMacro:

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub
Public Sub DeleteBlueRows()
'
' This macro deletes duplicate rows in the selection.
' Select the column in which the Duplicates are
' One column dictates what row is a duplicate.

Dim col As Integer
Dim r As Long
Dim c As Range
Dim n As Long
Dim v As Variant
Dim rng As Range

If Selection.Cells.count = 1 Then
       MsgBox "You must select the column that contains the duplicate cells", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    ElseIf Selection.Columns.count > 1 Then
       MsgBox "You must select only one column", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    End If

On Error GoTo EndMacro
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

col = ActiveCell.Column

    Set rng = Selection

For r = rng.Rows.count To 1 Step -1
    v = rng.Cells(r, 1).value
        If rng.Rows(r).Interior.ColorIndex = 8 Then
        rng.Rows(r).EntireRow.Delete
    End If
Next r

EndMacro:

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub

Public Sub DeleteCertainRows()
'
' This macro deletes entire rows for the col selected where the cell
' contains a certain value. Value to be entered below where "REGINA" currently is
' Select the column in which the value is
' One cell dictates what row is to be deleted.

Dim col As Integer
Dim r As Long
Dim c As Range
Dim rng As Range

If Selection.Cells.count = 1 Then
       MsgBox "You must select the column that contains the duplicate cells", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    ElseIf Selection.Columns.count > 1 Then
       MsgBox "You must select only one column", _
       vbInformation, "Duplicate Rows Macro"
       Exit Sub
    End If

On Error GoTo EndMacro
Application.ScreenUpdating = False
Application.Calculation = xlCalculationManual

    col = ActiveCell.Column
    Set rng = Selection
    For r = rng.Rows.count To 1 Step -1
        If rng.Rows(r).value = "REGINA" Then
        rng.Rows(r).EntireRow.Delete
    End If
Next r

EndMacro:

Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic

End Sub

Private Sub CopyProblemCells()
Dim myRecord As Range
Dim myCell As Range
Dim currRow As Long
Dim intCount As Integer

' If a cell in this macro copys the date value from

'currRow = Application.ActiveCell.Row
      For Each myRecord In Range("B1:B" & _
                Range("B" & Rows.count).End(xlUp).Row)
            With myRecord
            intCount = intCount + 1
            currRow = intCount
                'Set range of columns
               If IsEmpty(myRecord) Then
               Cells(currRow, 1) = Cells(currRow, 5).value
               ' MsgBox Cells(currRow, 1).Value
                  ' Cells(currRow, 5).Copy Destination:=Cells(currRow, 1)
                Else
                  Cells(currRow, 1).FormulaR1C1 = "=R[-1]C"
                  
               End If

            
            End With
        Next myRecord
        Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row) = _
        Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row).value
End Sub

Private Sub InvLogTMP()
'
' Cleanses the Investigation Log Spreadsheet and gets it ready for checking
' for duplicates
    Dim myselection As Range
    Dim col As Integer
    Dim r As Long
    Dim c As Range
    Dim n As Long
    Dim v As Variant
'
' Sort the spreadsheet
    Cells.Select
    Selection.Sort key1:=Range("C2"), Order1:=xlAscending, Key2:=Range("E2"), _
        Order2:=xlAscending, Key3:=Range("G2"), Order3:=xlAscending, Header:= _
        xlYes, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
        DataOption1:=xlSortNormal, DataOption2:=xlSortNormal, DataOption3:= _
        xlSortNormal
' Delete the first column
    Columns("A:A").Select
    Selection.Delete Shift:=xlToLeft
' Concatenate cells in I Column
    Range("I1").Select
    ActiveCell.FormulaR1C1 = "=RC[-7]&RC[-6]&RC[-5]&RC[-3]&RC[-2]"
    Range("H1").Select
    Selection.End(xlDown).Select
    Range(Selection, Selection.End(xlUp)).Select
    Selection.Offset(0, 1).FillDown
    Range("I2").Select

End Sub
Sub ColourBlankCells()
' created by Chuck 8/7/05
' this macro looks at the column where the curser is sitting
' and colours a blank cell blue

Dim r As Long
Dim n As Long
Dim rng As Range
  
   Set rng = Range(Selection.Cells(1, 1), _
             Cells(65536, Selection.Column).End(xlUp))
 
 'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'
    ' Set Rng = Selection
    n = 0
        For r = rng.Rows.count To 1 Step -1
            If rng.Rows(r).value = "" Then
                With rng.Rows(r).Interior
                .ColorIndex = 8
                .Pattern = xlSolid
                .PatternColorIndex = 8
                End With
        End If
        n = n + 1
        Next r
'
'turn screen updating back on
Application.ScreenUpdating = True
Application.Calculation = xlCalculationAutomatic
'
End Sub

Sub FixStreetType()
'
' Selects the column where the curser is currently sitting
' Looks at the short display of street type and inserts the full name
' Takes into account that the file has a header row.
' Further variations can be added to each line
' Further street types can be added by adding another CASE line
' Created by Chuck Dent 4004228 on 31/12/2007
'
    If MsgBox("Ensure your curser is in the top cell of the column to be cleansed. Cancel to fix", vbOKCancel, _
    "Correct Column") = vbCancel Then Exit Sub

    Dim thisType As Range 'each cell
    Dim allTypes As Range 'the whole column
  
    Set allTypes = Range(Selection.Cells(1, 1), _
             Cells(65536, Selection.Column).End(xlUp))
    allTypes.Select
 'turn the screen calculation off
'    Application.ScreenUpdating = False
'    Application.Calculation = xlCalculationManual
'
    For Each thisType In allTypes
            Select Case UCase(Trim(thisType.value))
                Case "AVENUE", "AVE", "AV" 'more variations can be added here
                    thisType.value = "Avenue"
                Case "BOULEVARD", "BLVD", "BVDE"
                    thisType.value = "Boulevard"
                Case "CHASE", "CH"
                    thisType.value = "Chase"
                Case "CIRCUIT", "CIR", "CCT", "CIRC"
                    thisType.value = "Circuit"
                Case "CLOSE", "CL", "CLS"
                    thisType.value = "Close"
                Case "CRESCENT", "CR", "CRS", "CRES"
                    thisType.value = "Crescent"
                Case "COURT", "CT", "CRT"
                    thisType.value = "Court"
                Case "DRIVE", "DR", "DRV"
                    thisType.value = "Drive"
                Case "ESPLANADE", "ESP", "ESPL"
                    thisType.value = "Esplanade"
                Case "GROVE", "GR", "GRV"
                    thisType.value = "Grove"
                Case "HIGHWAY", "HWY", "HWAY", "H-WAY"
                    thisType.value = "Highway"
                Case "LANE", "L", "LA"
                    thisType.value = "Lane"
                Case "PARADE", "PDE", "PRD"
                    thisType.value = "Parade"
                Case "PLACE", "PL", "PLC", "PCE"
                    thisType.value = "Place"
                Case "ROAD", "RD", "RDS"
                    thisType.value = "Road"
                Case "STREET", "ST", "STR", "STS", "ST."
                    thisType.value = "Street"
                Case "SQUARE", "SQ"
                    thisType.value = "Square"
                Case "TERRACE", "TCE", "TER"
                    thisType.value = "Terrace"
                Case "WAY", "WY"
                    thisType.value = "Way"
                Case Else
                    thisType.value = thisType.value
            End Select
        Next thisType
'
End Sub

Sub ReadInCustodyFile()
' Opens a html file that has been saved from the Custody Arrivals from QPRIME
' Once opened, reads the html file line by line
' and extracts name and DOB
' chuck dent 13/10/2008
    Dim sFileName As String
    Dim iFileNum As Integer
    Dim sBuf As String
    Dim r As Long
    Dim c As Long
'
    On Error Resume Next
' Select A1 to start
    Range("A1").Select
' get the file for input
    sFileName = Application.GetOpenFilename("html Files (*.html), *.html")
   ' If fileToOpen <> False Then
   ' End If
    r = -1
    c = 0
    iFileNum = FreeFile()
    Open sFileName For Input As iFileNum
    Do While Not EOF(iFileNum)
       Line Input #iFileNum, sBuf
       Select Case Left(sBuf, 14)
                    Case "<TD>Custody #:" ' locate the new entry indicator
                        r = r + 1 ' new row
                        c = 0 ' 1st column
                    Case "<TD>Name:</TD>" ' locate name, the next line contains the name
                        Line Input #iFileNum, sBuf
                        ActiveCell.Offset(r, c).value = Mid(sBuf, 15, InStr(1, sBuf, ",") - 15)  ' gets the surname
                        c = c + 1
                        ActiveCell.Offset(r, c).value = Mid(sBuf, InStr(1, sBuf, ",") + 2, Len(sBuf) - InStr(1, sBuf, ",") - 11) ' gets the given names
                        c = c + 1
                    Case "<TD>Date of bi" ' next line contains DOB
                        Line Input #iFileNum, sBuf
                        ActiveCell.Offset(r, c).value = Mid(sBuf, 5, Len(sBuf) - 9) ' return the DOB
                        c = c + 1
                    End Select
        Loop
    ' close the file
    Close iFileNum
' Now get the first given name by breaking out the given names Col.
' Puts the 1st given name in Col B
' Leaves any other given names to the right of the DOB Col
    Columns("B:B").EntireColumn.Select
    Selection.Cut
    ActiveCell.Offset(0, 3).Range("A1").Select
    ActiveSheet.Paste
    Selection.TextToColumns Destination:=ActiveCell, DataType:=xlDelimited, _
        TextQualifier:=xlDoubleQuote, ConsecutiveDelimiter:=True, Tab:=False, _
        Semicolon:=False, Comma:=False, Space:=True, Other:=False, FieldInfo _
        :=Array(Array(1, 1), Array(2, 1)), TrailingMinusNumbers:=True
    Selection.Copy
    ActiveCell.Offset(0, -3).Range("A1").Select
    ActiveSheet.Paste
' make the columns fit the content of the file
    Cells.Select
    Cells.EntireColumn.AutoFit
    Range("A1").Select
End Sub

Private Sub CharacterCodes()
        Dim nFileNum As Long
        Dim fileSaveName As String
        Dim x As Long

        ' Name the file and where to save it
        fileSaveName = Application.GetSaveAsFilename( _
            FileFilter:="Text Files (*.txt), *.txt")
        
        nFileNum = FreeFile
        Open fileSaveName For Output As #nFileNum
        
        For x = 0 To 255
            Print #nFileNum, ("Character " & x & " (Chr(" & x & "):  " & Chr(x) & Chr(10))
        Next x

        Close #nFileNum
    End Sub
Private Sub ConvertTimeToSeconds()
Dim myRange As Range
Dim myX As Range
Dim a As Long
Dim b As Long
Dim myMin As Long
Dim mySec As Long
Dim myTenths As Double
Dim myTime As Double
Dim RaceTime As String

Set myRange = Range("H2:H" & Range("H" & Rows.count).End(xlUp).Row)
    For Each myX In myRange
        RaceTime = myX.text
        Debug.Print "Racetime " & RaceTime
        a = InStr(1, RaceTime, ":")
        b = InStr(1, RaceTime, ".")
        myMin = Left(RaceTime, a - 1) * 60
        mySec = Mid(RaceTime, a + 1, (b - a) - 1)
        myTenths = "0." & Mid(RaceTime, b + 1, Len(RaceTime))
        myTime = myMin + mySec + myTenths
        Debug.Print "myTime " & myTime
        myX.Offset(0, 1) = myTime
    Next myX
                                
End Sub



















Attribute VB_Name = "SummaryBuilder"
Option Explicit

Sub GetSummaryCounts()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 2/11/2009
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    Dim sumCombo As Range 'range of all the combinations in the summary sheet
    Dim sumMyCombo As Range 'each combo
    Dim sumLen As Long 'length of the current combo
    Dim a As Long 'position of each letter in combo
    Dim sumLetter As String 'the current letter in the summary combo
    Dim curCombo As Range 'range of all the combos in the current sheet
    Dim curMyCombo As Range 'each combo in the current sheet
    
'    Dim curWin As Double 'current Win Value
'    Dim curPlace As Double 'current Place value
'    Dim curWPCount As Long '
'    Dim curComboCnt As Long 'current combo for win/place
'    Dim curComboAllCnt As Long 'current combo all
    
'    Dim sumWin As Double 'Summary Win Value
'    Dim sumPlace As Double 'Summary Place value
'    Dim sumComboCnt As Long 'Summary combo for win/place
'    Dim sumComboAllCnt As Long 'Summary combo all
'
Dim lM As Long
Dim lMN As Long
Dim lMNO As Long
Dim lMNOQ As Long
Dim lMNOQR As Long
Dim lMNOQRU As Long
Dim lMNOQU As Long
Dim lMNOR As Long
Dim lMNORU As Long
Dim lMNOU As Long
Dim lMNQ As Long
Dim lMNQR As Long
Dim lMNQRU As Long
Dim lMNQU As Long
Dim lMNU As Long
Dim lMO As Long
Dim lMOQR As Long
Dim lMOQRU As Long
Dim lMOR As Long
Dim lMORU As Long
Dim lMOU As Long
Dim lMQ As Long
Dim lMQR As Long
Dim lMQRU As Long
Dim lMQU As Long
Dim lMR As Long
Dim lMRU As Long
Dim lMU As Long
Dim lN As Long
Dim lNO As Long
Dim lNOQ As Long
Dim lNOQR As Long
Dim lNOQRU As Long
Dim lNOQU As Long
Dim lNOR As Long
Dim lNORU As Long
Dim lNOU As Long
Dim lNQ As Long
Dim lNQR As Long
Dim lNQRU As Long
Dim lNQU As Long
Dim lNR As Long
Dim lNRU As Long
Dim lNU As Long
Dim lO As Long
Dim lOQ As Long
Dim lOQR As Long
Dim lOQRU As Long
Dim lOQU As Long
Dim lOR As Long
Dim lORU As Long
Dim lOU As Long
Dim lQ As Long
Dim lQR As Long
Dim lQRU As Long
Dim lQU As Long
Dim lR As Long
Dim lRU As Long
Dim lU As Long
    
Dim aM As Long
Dim aMN As Long
Dim aMNO As Long
Dim aMNOQ As Long
Dim aMNOQR As Long
Dim aMNOQRU As Long
Dim aMNOQU As Long
Dim aMNOR As Long
Dim aMNORU As Long
Dim aMNOU As Long
Dim aMNQ As Long
Dim aMNQR As Long
Dim aMNQRU As Long
Dim aMNQU As Long
Dim aMNU As Long
Dim aMO As Long
Dim aMOQR As Long
Dim aMOQRU As Long
Dim aMOR As Long
Dim aMORU As Long
Dim aMOU As Long
Dim aMQ As Long
Dim aMQR As Long
Dim aMQRU As Long
Dim aMQU As Long
Dim aMR As Long
Dim aMRU As Long
Dim aMU As Long
Dim aN As Long
Dim aNO As Long
Dim aNOQ As Long
Dim aNOQR As Long
Dim aNOQRU As Long
Dim aNOQU As Long
Dim aNOR As Long
Dim aNORU As Long
Dim aNOU As Long
Dim aNQ As Long
Dim aNQR As Long
Dim aNQRU As Long
Dim aNQU As Long
Dim aNR As Long
Dim aNRU As Long
Dim aNU As Long
Dim aO As Long
Dim aOQ As Long
Dim aOQR As Long
Dim aOQRU As Long
Dim aOQU As Long
Dim aOR As Long
Dim aORU As Long
Dim aOU As Long
Dim aQ As Long
Dim aQR As Long
Dim aQRU As Long
Dim aQU As Long
Dim aR As Long
Dim aRU As Long
Dim aU As Long
    
Dim wM As Double
Dim wMN As Double
Dim wMNO As Double
Dim wMNOQ As Double
Dim wMNOQR As Double
Dim wMNOQRU As Double
Dim wMNOQU As Double
Dim wMNOR As Double
Dim wMNORU As Double
Dim wMNOU As Double
Dim wMNQ As Double
Dim wMNQR As Double
Dim wMNQRU As Double
Dim wMNQU As Double
Dim wMNU As Double
Dim wMO As Double
Dim wMOQR As Double
Dim wMOQRU As Double
Dim wMOR As Double
Dim wMORU As Double
Dim wMOU As Double
Dim wMQ As Double
Dim wMQR As Double
Dim wMQRU As Double
Dim wMQU As Double
Dim wMR As Double
Dim wMRU As Double
Dim wMU As Double
Dim wN As Double
Dim wNO As Double
Dim wNOQ As Double
Dim wNOQR As Double
Dim wNOQRU As Double
Dim wNOQU As Double
Dim wNOR As Double
Dim wNORU As Double
Dim wNOU As Double
Dim wNQ As Double
Dim wNQR As Double
Dim wNQRU As Double
Dim wNQU As Double
Dim wNR As Double
Dim wNRU As Double
Dim wNU As Double
Dim wO As Double
Dim wOQ As Double
Dim wOQR As Double
Dim wOQRU As Double
Dim wOQU As Double
Dim wOR As Double
Dim wORU As Double
Dim wOU As Double
Dim wQ As Double
Dim wQR As Double
Dim wQRU As Double
Dim wQU As Double
Dim wR As Double
Dim wRU As Double
Dim wU As Double

Dim pM As Double
Dim pMN As Double
Dim pMNO As Double
Dim pMNOQ As Double
Dim pMNOQR As Double
Dim pMNOQRU As Double
Dim pMNOQU As Double
Dim pMNOR As Double
Dim pMNORU As Double
Dim pMNOU As Double
Dim pMNQ As Double
Dim pMNQR As Double
Dim pMNQRU As Double
Dim pMNQU As Double
Dim pMNU As Double
Dim pMO As Double
Dim pMOQR As Double
Dim pMOQRU As Double
Dim pMOR As Double
Dim pMORU As Double
Dim pMOU As Double
Dim pMQ As Double
Dim pMQR As Double
Dim pMQRU As Double
Dim pMQU As Double
Dim pMR As Double
Dim pMRU As Double
Dim pMU As Double
Dim pN As Double
Dim pNO As Double
Dim pNOQ As Double
Dim pNOQR As Double
Dim pNOQRU As Double
Dim pNOQU As Double
Dim pNOR As Double
Dim pNORU As Double
Dim pNOU As Double
Dim pNQ As Double
Dim pNQR As Double
Dim pNQRU As Double
Dim pNQU As Double
Dim pNR As Double
Dim pNRU As Double
Dim pNU As Double
Dim pO As Double
Dim pOQ As Double
Dim pOQR As Double
Dim pOQRU As Double
Dim pOQU As Double
Dim pOR As Double
Dim pORU As Double
Dim pOU As Double
Dim pQ As Double
Dim pQR As Double
Dim pQRU As Double
Dim pQU As Double
Dim pR As Double
Dim pRU As Double
Dim pU As Double

Dim wkName As String

Application.DisplayStatusBar = True


'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B2:E60").Select
    Selection.ClearContents
'Set the Range of the combos in the Summary Sheet
    Set sumCombo = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
  
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
'            wbA.Activate
        For Each sumMyCombo In sumCombo
'                sumLen = Len(sumMyCombo)
' open the sheet
    Workbooks.Open vaFileName
    wkName = ActiveWorkbook.name
    wkName = Left(wkName, 10)
    
    Application.StatusBar = "Processing " & wkName
'    With ActiveWorkbook
        Set curCombo = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 20)
            For Each curMyCombo In curCombo 'this is col W
                If curMyCombo <> "" Then
                    Select Case sumMyCombo
                    Case "M"
                        If InStr(1, curMyCombo, "M") > 0 _
                        Then
                        lM = lM + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aM = aM + 1
                            wM = wM + curMyCombo.Offset(0, -4)
                            pM = pM + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MN"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                        Then
                        lMN = lMN + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMN = aMN + 1
                            wMN = wMN + curMyCombo.Offset(0, -4)
                            pMN = pMN + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNO"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                        Then
                        lMNO = lMNO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNO = aMNO + 1
                            wMNO = wMNO + curMyCombo.Offset(0, -4)
                            pMNO = pMNO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOQ"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lMNOQ = lMNOQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOQ = aMNOQ + 1
                            wMNOQ = wMNOQ + curMyCombo.Offset(0, -4)
                            pMNOQ = pMNOQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOQR"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMNOQR = lMNOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOQR = aMNOQR + 1
                            wMNOQR = wMNOQR + curMyCombo.Offset(0, -4)
                            pMNOQR = pMNOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOQRU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMNOQRU = lMNOQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOQRU = aMNOQRU + 1
                            wMNOQRU = wMNOQRU + curMyCombo.Offset(0, -4)
                            pMNOQRU = pMNOQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOQU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMNOQU = lMNOQU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOQU = aMNOQU + 1
                            wMNOQU = wMNOQU + curMyCombo.Offset(0, -4)
                            pMNOQU = pMNOQU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOR"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMNOR = lMNOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOR = aMNOR + 1
                            wMNOR = wMNOR + curMyCombo.Offset(0, -4)
                            pMNOR = pMNOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNORU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMNORU = lMNORU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNORU = aMNORU + 1
                            wMNORU = wMNORU + curMyCombo.Offset(0, -4)
                            pMNORU = pMNORU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMNOU = lMNOU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOU = aMNOU + 1
                            wMNOU = wMNOU + curMyCombo.Offset(0, -4)
                            pMNOU = pMNOU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNQ"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lMNQ = lMNQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNQ = aMNQ + 1
                            wMNQ = wMNQ + curMyCombo.Offset(0, -4)
                            pMNQ = pMNQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNQR"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMNQR = lMNQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNQR = aMNQR + 1
                            wMNQR = wMNQR + curMyCombo.Offset(0, -4)
                            pMNQR = pMNQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNQRU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMNQRU = lMNQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNQRU = aMNQRU + 1
                            wMNQRU = wMNQRU + curMyCombo.Offset(0, -4)
                            pMNQRU = pMNQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNQU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMNQU = lMNQU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNQU = aMNQU + 1
                            wMNQU = wMNQU + curMyCombo.Offset(0, -4)
                            pMNQU = pMNQU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMNU = lMNU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNU = aMNU + 1
                            wMNU = wMNU + curMyCombo.Offset(0, -4)
                            pMNU = pMNU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MO"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                        Then
                        lMO = lMO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMO = aMO + 1
                            wMO = wMO + curMyCombo.Offset(0, -4)
                            pMO = pMO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOQR"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMOQR = lMOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOQR = aMOQR + 1
                            wMOQR = wMOQR + curMyCombo.Offset(0, -4)
                            pMOQR = pMOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOQRU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMOQRU = lMOQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOQRU = aMOQRU + 1
                            wMOQRU = wMOQRU + curMyCombo.Offset(0, -4)
                            pMOQRU = pMOQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOR"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMOR = lMOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOR = aMOR + 1
                            wMOR = wMOR + curMyCombo.Offset(0, -4)
                            pMOR = pMOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MORU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMORU = lMORU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMORU = aMORU + 1
                            wMORU = wMORU + curMyCombo.Offset(0, -4)
                            pMORU = pMORU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMOU = lMOU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOU = aMOU + 1
                            wMOU = wMOU + curMyCombo.Offset(0, -4)
                            pMOU = pMOU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQ"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lMQ = lMQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQ = aMQ + 1
                            wMQ = wMQ + curMyCombo.Offset(0, -4)
                            pMQ = pMQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQR"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMQR = lMQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQR = aMQR + 1
                            wMQR = wMQR + curMyCombo.Offset(0, -4)
                            pMQR = pMQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQRU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMQRU = lMQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQRU = aMQRU + 1
                            wMQRU = wMQRU + curMyCombo.Offset(0, -4)
                            pMQRU = pMQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMQU = lMQU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQU = aMQU + 1
                            wMQU = wMQU + curMyCombo.Offset(0, -4)
                            pMQU = pMQU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MR"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMR = lMR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMR = aMR + 1
                            wMR = wMR + curMyCombo.Offset(0, -4)
                            pMR = pMR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MRU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMRU = lMRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMRU = aMRU + 1
                            wMRU = wMRU + curMyCombo.Offset(0, -4)
                            pMRU = pMRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMU = lMU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMU = aMU + 1
                            wMU = wMU + curMyCombo.Offset(0, -4)
                            pMU = pMU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "N"
                        If InStr(1, curMyCombo, "N") > 0 _
                        Then
                        lN = lN + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aN = aN + 1
                            wN = wN + curMyCombo.Offset(0, -4)
                            pN = pN + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NO"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                        Then
                        lNO = lNO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNO = aNO + 1
                            wNO = wNO + curMyCombo.Offset(0, -4)
                            pNO = pNO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOQ"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lNOQ = lNOQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOQ = aNOQ + 1
                            wNOQ = wNOQ + curMyCombo.Offset(0, -4)
                            pNOQ = pNOQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOQR"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lNOQR = lNOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOQR = aNOQR + 1
                            wNOQR = wNOQR + curMyCombo.Offset(0, -4)
                            pNOQR = pNOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOQRU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNOQRU = lNOQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOQRU = aNOQRU + 1
                            wNOQRU = wNOQRU + curMyCombo.Offset(0, -4)
                            pNOQRU = pNOQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOQU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNOQU = lNOQU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOQU = aNOQU + 1
                            wNOQU = wNOQU + curMyCombo.Offset(0, -4)
                            pNOQU = pNOQU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOR"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lNOR = lNOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOR = aNOR + 1
                            wNOR = wNOR + curMyCombo.Offset(0, -4)
                            pNOR = pNOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NORU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNORU = lNORU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNORU = aNORU + 1
                            wNORU = wNORU + curMyCombo.Offset(0, -4)
                            pNORU = pNORU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNOU = lNOU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOU = aNOU + 1
                            wNOU = wNOU + curMyCombo.Offset(0, -4)
                            pNOU = pNOU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NQ"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lNQ = lNQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNQ = aNQ + 1
                            wNQ = wNQ + curMyCombo.Offset(0, -4)
                            pNQ = pNQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NQR"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lNQR = lNQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNQR = aNQR + 1
                            wNQR = wNQR + curMyCombo.Offset(0, -4)
                            pNQR = pNQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NQRU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNQRU = lNQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNQRU = aNQRU + 1
                            wNQRU = wNQRU + curMyCombo.Offset(0, -4)
                            pNQRU = pNQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NQU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNQU = lNQU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNQU = aNQU + 1
                            wNQU = wNQU + curMyCombo.Offset(0, -4)
                            pNQU = pNQU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NR"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lNR = lNR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNR = aNR + 1
                            wNR = wNR + curMyCombo.Offset(0, -4)
                            pNR = pNR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NRU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNRU = lNRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNRU = aNRU + 1
                            wNRU = wNRU + curMyCombo.Offset(0, -4)
                            pNRU = pNRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NU"
                        If InStr(1, curMyCombo, "N") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lNU = lNU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNU = aNU + 1
                            wNU = wNU + curMyCombo.Offset(0, -4)
                            pNU = pNU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "O"
                        If InStr(1, curMyCombo, "O") > 0 _
                        Then
                        lO = lO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aO = aO + 1
                            wO = wO + curMyCombo.Offset(0, -4)
                            pO = pO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OQ"
                        If InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lOQ = lOQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOQ = aOQ + 1
                            wOQ = wOQ + curMyCombo.Offset(0, -4)
                            pOQ = pOQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OQR"
                        If InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lOQR = lOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOQR = aOQR + 1
                            wOQR = wOQR + curMyCombo.Offset(0, -4)
                            pOQR = pOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OQRU"
                        If InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lOQRU = lOQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOQRU = aOQRU + 1
                            wOQRU = wOQRU + curMyCombo.Offset(0, -4)
                            pOQRU = pOQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OQU"
                        If InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lOQU = lOQU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOQU = aOQU + 1
                            wOQU = wOQU + curMyCombo.Offset(0, -4)
                            pOQU = pOQU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OR"
                        If InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lOR = lOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOR = aOR + 1
                            wOR = wOR + curMyCombo.Offset(0, -4)
                            pOR = pOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "ORU"
                        If InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lORU = lORU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aORU = aORU + 1
                            wORU = wORU + curMyCombo.Offset(0, -4)
                            pORU = pORU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OU"
                        If InStr(1, curMyCombo, "O") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lOU = lOU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOU = aOU + 1
                            wOU = wOU + curMyCombo.Offset(0, -4)
                            pOU = pOU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Q"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lQ = lQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQ = aQ + 1
                            wQ = wQ + curMyCombo.Offset(0, -4)
                            pQ = pQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QR"
                        If InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lQR = lQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQR = aQR + 1
                            wQR = wQR + curMyCombo.Offset(0, -4)
                            pQR = pQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QRU"
                        If InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lQRU = lQRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQRU = aQRU + 1
                            wQRU = wQRU + curMyCombo.Offset(0, -4)
                            pQRU = pQRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QU"
                        If InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lQU = lQU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQU = aQU + 1
                            wQU = wQU + curMyCombo.Offset(0, -4)
                            pQU = pQU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "R"
                        If InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lR = lR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aR = aR + 1
                            wR = wR + curMyCombo.Offset(0, -4)
                            pR = pR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "RU"
                        If InStr(1, curMyCombo, "R") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lRU = lRU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aRU = aRU + 1
                            wRU = wRU + curMyCombo.Offset(0, -4)
                            pRU = pRU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "U"
                        If InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lU = lU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aU = aU + 1
                            wU = wU + curMyCombo.Offset(0, -4)
                            pU = pU + curMyCombo.Offset(0, -3)
                            End If
                        End If

                    Case Else
                        MsgBox ("New Combo found " & curMyCombo.Offset(0, 20))
                End Select
            End If
        Next curMyCombo
 '       .Close
 '       End With
    Next sumMyCombo
    ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
    ' Win Place Combo
    Worksheets("ComboSummary").Cells(2, 2).value = aM
    Worksheets("ComboSummary").Cells(3, 2).value = aMN
    Worksheets("ComboSummary").Cells(4, 2).value = aMNO
    Worksheets("ComboSummary").Cells(5, 2).value = aMNOQ
    Worksheets("ComboSummary").Cells(6, 2).value = aMNOQR
    Worksheets("ComboSummary").Cells(7, 2).value = aMNOQRU
    Worksheets("ComboSummary").Cells(8, 2).value = aMNOQU
    Worksheets("ComboSummary").Cells(9, 2).value = aMNOR
    Worksheets("ComboSummary").Cells(10, 2).value = aMNORU
    Worksheets("ComboSummary").Cells(11, 2).value = aMNOU
    Worksheets("ComboSummary").Cells(12, 2).value = aMNQ
    Worksheets("ComboSummary").Cells(13, 2).value = aMNQR
    Worksheets("ComboSummary").Cells(14, 2).value = aMNQRU
    Worksheets("ComboSummary").Cells(15, 2).value = aMNQU
    Worksheets("ComboSummary").Cells(16, 2).value = aMNU
    Worksheets("ComboSummary").Cells(17, 2).value = aMO
    Worksheets("ComboSummary").Cells(18, 2).value = aMOQR
    Worksheets("ComboSummary").Cells(19, 2).value = aMOQRU
    Worksheets("ComboSummary").Cells(20, 2).value = aMOR
    Worksheets("ComboSummary").Cells(21, 2).value = aMORU
    Worksheets("ComboSummary").Cells(22, 2).value = aMOU
    Worksheets("ComboSummary").Cells(23, 2).value = aMQ
    Worksheets("ComboSummary").Cells(24, 2).value = aMQR
    Worksheets("ComboSummary").Cells(25, 2).value = aMQRU
    Worksheets("ComboSummary").Cells(26, 2).value = aMQU
    Worksheets("ComboSummary").Cells(27, 2).value = aMR
    Worksheets("ComboSummary").Cells(28, 2).value = aMRU
    Worksheets("ComboSummary").Cells(29, 2).value = aMU
    Worksheets("ComboSummary").Cells(30, 2).value = aN
    Worksheets("ComboSummary").Cells(31, 2).value = aNO
    Worksheets("ComboSummary").Cells(32, 2).value = aNOQ
    Worksheets("ComboSummary").Cells(33, 2).value = aNOQR
    Worksheets("ComboSummary").Cells(34, 2).value = aNOQRU
    Worksheets("ComboSummary").Cells(35, 2).value = aNOQU
    Worksheets("ComboSummary").Cells(36, 2).value = aNOR
    Worksheets("ComboSummary").Cells(37, 2).value = aNORU
    Worksheets("ComboSummary").Cells(38, 2).value = aNOU
    Worksheets("ComboSummary").Cells(39, 2).value = aNQ
    Worksheets("ComboSummary").Cells(40, 2).value = aNQR
    Worksheets("ComboSummary").Cells(41, 2).value = aNQRU
    Worksheets("ComboSummary").Cells(42, 2).value = aNQU
    Worksheets("ComboSummary").Cells(43, 2).value = aNR
    Worksheets("ComboSummary").Cells(44, 2).value = aNRU
    Worksheets("ComboSummary").Cells(45, 2).value = aNU
    Worksheets("ComboSummary").Cells(46, 2).value = aO
    Worksheets("ComboSummary").Cells(47, 2).value = aOQ
    Worksheets("ComboSummary").Cells(48, 2).value = aOQR
    Worksheets("ComboSummary").Cells(49, 2).value = aOQRU
    Worksheets("ComboSummary").Cells(50, 2).value = aOQU
    Worksheets("ComboSummary").Cells(51, 2).value = aOR
    Worksheets("ComboSummary").Cells(52, 2).value = aORU
    Worksheets("ComboSummary").Cells(53, 2).value = aOU
    Worksheets("ComboSummary").Cells(54, 2).value = aQ
    Worksheets("ComboSummary").Cells(55, 2).value = aQR
    Worksheets("ComboSummary").Cells(56, 2).value = aQRU
    Worksheets("ComboSummary").Cells(57, 2).value = aQU
    Worksheets("ComboSummary").Cells(58, 2).value = aR
    Worksheets("ComboSummary").Cells(59, 2).value = aRU
    Worksheets("ComboSummary").Cells(60, 2).value = aU
' Bet Combo All
    Worksheets("ComboSummary").Cells(2, 3).value = lM
    Worksheets("ComboSummary").Cells(3, 3).value = lMN
    Worksheets("ComboSummary").Cells(4, 3).value = lMNO
    Worksheets("ComboSummary").Cells(5, 3).value = lMNOQ
    Worksheets("ComboSummary").Cells(6, 3).value = lMNOQR
    Worksheets("ComboSummary").Cells(7, 3).value = lMNOQRU
    Worksheets("ComboSummary").Cells(8, 3).value = lMNOQU
    Worksheets("ComboSummary").Cells(9, 3).value = lMNOR
    Worksheets("ComboSummary").Cells(10, 3).value = lMNORU
    Worksheets("ComboSummary").Cells(11, 3).value = lMNOU
    Worksheets("ComboSummary").Cells(12, 3).value = lMNQ
    Worksheets("ComboSummary").Cells(13, 3).value = lMNQR
    Worksheets("ComboSummary").Cells(14, 3).value = lMNQRU
    Worksheets("ComboSummary").Cells(15, 3).value = lMNQU
    Worksheets("ComboSummary").Cells(16, 3).value = lMNU
    Worksheets("ComboSummary").Cells(17, 3).value = lMO
    Worksheets("ComboSummary").Cells(18, 3).value = lMOQR
    Worksheets("ComboSummary").Cells(19, 3).value = lMOQRU
    Worksheets("ComboSummary").Cells(20, 3).value = lMOR
    Worksheets("ComboSummary").Cells(21, 3).value = lMORU
    Worksheets("ComboSummary").Cells(22, 3).value = lMOU
    Worksheets("ComboSummary").Cells(23, 3).value = lMQ
    Worksheets("ComboSummary").Cells(24, 3).value = lMQR
    Worksheets("ComboSummary").Cells(25, 3).value = lMQRU
    Worksheets("ComboSummary").Cells(26, 3).value = lMQU
    Worksheets("ComboSummary").Cells(27, 3).value = lMR
    Worksheets("ComboSummary").Cells(28, 3).value = lMRU
    Worksheets("ComboSummary").Cells(29, 3).value = lMU
    Worksheets("ComboSummary").Cells(30, 3).value = lN
    Worksheets("ComboSummary").Cells(31, 3).value = lNO
    Worksheets("ComboSummary").Cells(32, 3).value = lNOQ
    Worksheets("ComboSummary").Cells(33, 3).value = lNOQR
    Worksheets("ComboSummary").Cells(34, 3).value = lNOQRU
    Worksheets("ComboSummary").Cells(35, 3).value = lNOQU
    Worksheets("ComboSummary").Cells(36, 3).value = lNOR
    Worksheets("ComboSummary").Cells(37, 3).value = lNORU
    Worksheets("ComboSummary").Cells(38, 3).value = lNOU
    Worksheets("ComboSummary").Cells(39, 3).value = lNQ
    Worksheets("ComboSummary").Cells(40, 3).value = lNQR
    Worksheets("ComboSummary").Cells(41, 3).value = lNQRU
    Worksheets("ComboSummary").Cells(42, 3).value = lNQU
    Worksheets("ComboSummary").Cells(43, 3).value = lNR
    Worksheets("ComboSummary").Cells(44, 3).value = lNRU
    Worksheets("ComboSummary").Cells(45, 3).value = lNU
    Worksheets("ComboSummary").Cells(46, 3).value = lO
    Worksheets("ComboSummary").Cells(47, 3).value = lOQ
    Worksheets("ComboSummary").Cells(48, 3).value = lOQR
    Worksheets("ComboSummary").Cells(49, 3).value = lOQRU
    Worksheets("ComboSummary").Cells(50, 3).value = lOQU
    Worksheets("ComboSummary").Cells(51, 3).value = lOR
    Worksheets("ComboSummary").Cells(52, 3).value = lORU
    Worksheets("ComboSummary").Cells(53, 3).value = lOU
    Worksheets("ComboSummary").Cells(54, 3).value = lQ
    Worksheets("ComboSummary").Cells(55, 3).value = lQR
    Worksheets("ComboSummary").Cells(56, 3).value = lQRU
    Worksheets("ComboSummary").Cells(57, 3).value = lQU
    Worksheets("ComboSummary").Cells(58, 3).value = lR
    Worksheets("ComboSummary").Cells(59, 3).value = lRU
    Worksheets("ComboSummary").Cells(60, 3).value = lU
' Win
    Worksheets("ComboSummary").Cells(2, 4).value = wM / lM
    Worksheets("ComboSummary").Cells(3, 4).value = wMN / lMN
    Worksheets("ComboSummary").Cells(4, 4).value = wMNO / lMNO
    Worksheets("ComboSummary").Cells(5, 4).value = wMNOQ / lMNOQ
    Worksheets("ComboSummary").Cells(6, 4).value = wMNOQR / lMNOQR
    Worksheets("ComboSummary").Cells(7, 4).value = wMNOQRU / lMNOQRU
    Worksheets("ComboSummary").Cells(8, 4).value = wMNOQU / lMNOQU
    Worksheets("ComboSummary").Cells(9, 4).value = wMNOR / lMNOR
    Worksheets("ComboSummary").Cells(10, 4).value = wMNORU / lMNORU
    Worksheets("ComboSummary").Cells(11, 4).value = wMNOU / lMNOU
    Worksheets("ComboSummary").Cells(12, 4).value = wMNQ / lMNQ
    Worksheets("ComboSummary").Cells(13, 4).value = wMNQR / lMNQR
    Worksheets("ComboSummary").Cells(14, 4).value = wMNQRU / lMNQRU
    Worksheets("ComboSummary").Cells(15, 4).value = wMNQU / lMNQU
    Worksheets("ComboSummary").Cells(16, 4).value = wMNU / lMNU
    Worksheets("ComboSummary").Cells(17, 4).value = wMO / lMO
    Worksheets("ComboSummary").Cells(18, 4).value = wMOQR / lMOQR
    Worksheets("ComboSummary").Cells(19, 4).value = wMOQRU / lMOQRU
    Worksheets("ComboSummary").Cells(20, 4).value = wMOR / lMOR
    Worksheets("ComboSummary").Cells(21, 4).value = wMORU / lMORU
    Worksheets("ComboSummary").Cells(22, 4).value = wMOU / lMOU
    Worksheets("ComboSummary").Cells(23, 4).value = wMQ / lMQ
    Worksheets("ComboSummary").Cells(24, 4).value = wMQR / lMQR
    Worksheets("ComboSummary").Cells(25, 4).value = wMQRU / lMQRU
    Worksheets("ComboSummary").Cells(26, 4).value = wMQU / lMQU
    Worksheets("ComboSummary").Cells(27, 4).value = wMR / lMR
    Worksheets("ComboSummary").Cells(28, 4).value = wMRU / lMRU
    Worksheets("ComboSummary").Cells(29, 4).value = wMU / lMU
    Worksheets("ComboSummary").Cells(30, 4).value = wN / lN
    Worksheets("ComboSummary").Cells(31, 4).value = wNO / lNO
    Worksheets("ComboSummary").Cells(32, 4).value = wNOQ / lNOQ
    Worksheets("ComboSummary").Cells(33, 4).value = wNOQR / lNOQR
    Worksheets("ComboSummary").Cells(34, 4).value = wNOQRU / lNOQRU
    Worksheets("ComboSummary").Cells(35, 4).value = wNOQU / lNOQU
    Worksheets("ComboSummary").Cells(36, 4).value = wNOR / lNOR
    Worksheets("ComboSummary").Cells(37, 4).value = wNORU / lNORU
    Worksheets("ComboSummary").Cells(38, 4).value = wNOU / lNOU
    Worksheets("ComboSummary").Cells(39, 4).value = wNQ / lNQ
    Worksheets("ComboSummary").Cells(40, 4).value = wNQR / lNQR
    Worksheets("ComboSummary").Cells(41, 4).value = wNQRU / lNQRU
    Worksheets("ComboSummary").Cells(42, 4).value = wNQU / lNQU
    Worksheets("ComboSummary").Cells(43, 4).value = wNR / lNR
    Worksheets("ComboSummary").Cells(44, 4).value = wNRU / lNRU
    Worksheets("ComboSummary").Cells(45, 4).value = wNU / lNU
    Worksheets("ComboSummary").Cells(46, 4).value = wO / lO
    Worksheets("ComboSummary").Cells(47, 4).value = wOQ / lOQ
    Worksheets("ComboSummary").Cells(48, 4).value = wOQR / lOQR
    Worksheets("ComboSummary").Cells(49, 4).value = wOQRU / lOQRU
    Worksheets("ComboSummary").Cells(50, 4).value = wOQU / lOQU
    Worksheets("ComboSummary").Cells(51, 4).value = wOR / lOR
    Worksheets("ComboSummary").Cells(52, 4).value = wORU / lORU
    Worksheets("ComboSummary").Cells(53, 4).value = wOU / lOU
    Worksheets("ComboSummary").Cells(54, 4).value = wQ / lQ
    Worksheets("ComboSummary").Cells(55, 4).value = wQR / lQR
    Worksheets("ComboSummary").Cells(56, 4).value = wQRU / lQRU
    Worksheets("ComboSummary").Cells(57, 4).value = wQU / lQU
    Worksheets("ComboSummary").Cells(58, 4).value = wR / lR
    Worksheets("ComboSummary").Cells(59, 4).value = wRU / lRU
    Worksheets("ComboSummary").Cells(60, 4).value = wU / lU

'Place
    Worksheets("ComboSummary").Cells(2, 5).value = pM / lM
    Worksheets("ComboSummary").Cells(3, 5).value = pMN / lMN
    Worksheets("ComboSummary").Cells(4, 5).value = pMNO / lMNO
    Worksheets("ComboSummary").Cells(5, 5).value = pMNOQ / lMNOQ
    Worksheets("ComboSummary").Cells(6, 5).value = pMNOQR / lMNOQR
    Worksheets("ComboSummary").Cells(7, 5).value = pMNOQRU / lMNOQRU
    Worksheets("ComboSummary").Cells(8, 5).value = pMNOQU / lMNOQU
    Worksheets("ComboSummary").Cells(9, 5).value = pMNOR / lMNOR
    Worksheets("ComboSummary").Cells(10, 5).value = pMNORU / lMNORU
    Worksheets("ComboSummary").Cells(11, 5).value = pMNOU / lMNOU
    Worksheets("ComboSummary").Cells(12, 5).value = pMNQ / lMNQ
    Worksheets("ComboSummary").Cells(13, 5).value = pMNQR / lMNQR
    Worksheets("ComboSummary").Cells(14, 5).value = pMNQRU / lMNQRU
    Worksheets("ComboSummary").Cells(15, 5).value = pMNQU / lMNQU
    Worksheets("ComboSummary").Cells(16, 5).value = pMNU / lMNU
    Worksheets("ComboSummary").Cells(17, 5).value = pMO / lMO
    Worksheets("ComboSummary").Cells(18, 5).value = pMOQR / lMOQR
    Worksheets("ComboSummary").Cells(19, 5).value = pMOQRU / lMOQRU
    Worksheets("ComboSummary").Cells(20, 5).value = pMOR / lMOR
    Worksheets("ComboSummary").Cells(21, 5).value = pMORU / lMORU
    Worksheets("ComboSummary").Cells(22, 5).value = pMOU / lMOU
    Worksheets("ComboSummary").Cells(23, 5).value = pMQ / lMQ
    Worksheets("ComboSummary").Cells(24, 5).value = pMQR / lMQR
    Worksheets("ComboSummary").Cells(25, 5).value = pMQRU / lMQRU
    Worksheets("ComboSummary").Cells(26, 5).value = pMQU / lMQU
    Worksheets("ComboSummary").Cells(27, 5).value = pMR / lMR
    Worksheets("ComboSummary").Cells(28, 5).value = pMRU / lMRU
    Worksheets("ComboSummary").Cells(29, 5).value = pMU / lMU
    Worksheets("ComboSummary").Cells(30, 5).value = pN / lN
    Worksheets("ComboSummary").Cells(31, 5).value = pNO / lNO
    Worksheets("ComboSummary").Cells(32, 5).value = pNOQ / lNOQ
    Worksheets("ComboSummary").Cells(33, 5).value = pNOQR / lNOQR
    Worksheets("ComboSummary").Cells(34, 5).value = pNOQRU / lNOQRU
    Worksheets("ComboSummary").Cells(35, 5).value = pNOQU / lNOQU
    Worksheets("ComboSummary").Cells(36, 5).value = pNOR / lNOR
    Worksheets("ComboSummary").Cells(37, 5).value = pNORU / lNORU
    Worksheets("ComboSummary").Cells(38, 5).value = pNOU / lNOU
    Worksheets("ComboSummary").Cells(39, 5).value = pNQ / lNQ
    Worksheets("ComboSummary").Cells(40, 5).value = pNQR / lNQR
    Worksheets("ComboSummary").Cells(41, 5).value = pNQRU / lNQRU
    Worksheets("ComboSummary").Cells(42, 5).value = pNQU / lNQU
    Worksheets("ComboSummary").Cells(43, 5).value = pNR / lNR
    Worksheets("ComboSummary").Cells(44, 5).value = pNRU / lNRU
    Worksheets("ComboSummary").Cells(45, 5).value = pNU / lNU
    Worksheets("ComboSummary").Cells(46, 5).value = pO / lO
    Worksheets("ComboSummary").Cells(47, 5).value = pOQ / lOQ
    Worksheets("ComboSummary").Cells(48, 5).value = pOQR / lOQR
    Worksheets("ComboSummary").Cells(49, 5).value = pOQRU / lOQRU
    Worksheets("ComboSummary").Cells(50, 5).value = pOQU / lOQU
    Worksheets("ComboSummary").Cells(51, 5).value = pOR / lOR
    Worksheets("ComboSummary").Cells(52, 5).value = pORU / lORU
    Worksheets("ComboSummary").Cells(53, 5).value = pOU / lOU
    Worksheets("ComboSummary").Cells(54, 5).value = pQ / lQ
    Worksheets("ComboSummary").Cells(55, 5).value = pQR / lQR
    Worksheets("ComboSummary").Cells(56, 5).value = pQRU / lQRU
    Worksheets("ComboSummary").Cells(57, 5).value = pQU / lQU
    Worksheets("ComboSummary").Cells(58, 5).value = pR / lR
    Worksheets("ComboSummary").Cells(59, 5).value = pRU / lRU
    Worksheets("ComboSummary").Cells(60, 5).value = pU / lU


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.StatusBar = ""

End Sub
Sub GetSummaryCounts_BAC()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 2/11/2009
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    Dim sumCombo As Range 'range of all the combinations in the summary sheet
    Dim sumMyCombo As Range 'each combo
    Dim sumLen As Long 'length of the current combo
    Dim a As Long 'position of each letter in combo
    Dim sumLetter As String 'the current letter in the summary combo
    Dim curCombo As Range 'range of all the combos in the current sheet
    Dim curMyCombo As Range 'each combo in the current sheet
    
'    Dim curWin As Double 'current Win Value
'    Dim curPlace As Double 'current Place value
'    Dim curWPCount As Long '
'    Dim curComboCnt As Long 'current combo for win/place
'    Dim curComboAllCnt As Long 'current combo all
    
'    Dim sumWin As Double 'Summary Win Value
'    Dim sumPlace As Double 'Summary Place value
'    Dim sumComboCnt As Long 'Summary combo for win/place
'    Dim sumComboAllCnt As Long 'Summary combo all
'
    Dim lM As Long
    Dim lMN As Long
    Dim lMNO As Long
    Dim lMNOQ As Long
    Dim lMNOQR As Long
    Dim lMNOR As Long
    Dim lMNQ As Long
    Dim lMNQR As Long
    Dim lMO As Long
    Dim lMOQR As Long
    Dim lMOR As Long
    Dim lMQ As Long
    Dim lMQR As Long
    Dim lMR As Long
    Dim lN As Long
    Dim lNO As Long
    Dim lNOQ As Long
    Dim lNOQR As Long
    Dim lNOR As Long
    Dim lNQ As Long
    Dim lNQR As Long
    Dim lNR As Long
    Dim lO As Long
    Dim lOQ As Long
    Dim lOQR As Long
    Dim lOR As Long
    Dim lQ As Long
    Dim lQR As Long
    Dim lR As Long
    
    Dim aM As Long
    Dim aMN As Long
    Dim aMNO As Long
    Dim aMNOQ As Long
    Dim aMNOQR As Long
    Dim aMNOR As Long
    Dim aMNQ As Long
    Dim aMNQR As Long
    Dim aMO As Long
    Dim aMOQR As Long
    Dim aMOR As Long
    Dim aMQ As Long
    Dim aMQR As Long
    Dim aMR As Long
    Dim aN As Long
    Dim aNO As Long
    Dim aNOQ As Long
    Dim aNOQR As Long
    Dim aNOR As Long
    Dim aNQ As Long
    Dim aNQR As Long
    Dim aNR As Long
    Dim aO As Long
    Dim aOQ As Long
    Dim aOQR As Long
    Dim aOR As Long
    Dim aQ As Long
    Dim aQR As Long
    Dim aR As Long
    
    Dim wM As Double
    Dim wMN As Double
    Dim wMNO As Double
    Dim wMNOQ As Double
    Dim wMNOQR As Double
    Dim wMNOR As Double
    Dim wMNQ As Double
    Dim wMNQR As Double
    Dim wMO As Double
    Dim wMOQR As Double
    Dim wMOR As Double
    Dim wMQ As Double
    Dim wMQR As Double
    Dim wMR As Double
    Dim wN As Double
    Dim wNO As Double
    Dim wNOQ As Double
    Dim wNOQR As Double
    Dim wNOR As Double
    Dim wNQ As Double
    Dim wNQR As Double
    Dim wNR As Double
    Dim wO As Double
    Dim wOQ As Double
    Dim wOQR As Double
    Dim wOR As Double
    Dim wQ As Double
    Dim wQR As Double
    Dim wR As Double

    Dim pM As Double
    Dim pMN As Double
    Dim pMNO As Double
    Dim pMNOQ As Double
    Dim pMNOQR As Double
    Dim pMNOR As Double
    Dim pMNQ As Double
    Dim pMNQR As Double
    Dim pMO As Double
    Dim pMOQR As Double
    Dim pMOR As Double
    Dim pMQ As Double
    Dim pMQR As Double
    Dim pMR As Double
    Dim pN As Double
    Dim pNO As Double
    Dim pNOQ As Double
    Dim pNOQR As Double
    Dim pNOR As Double
    Dim pNQ As Double
    Dim pNQR As Double
    Dim pNR As Double
    Dim pO As Double
    Dim pOQ As Double
    Dim pOQR As Double
    Dim pOR As Double
    Dim pQ As Double
    Dim pQR As Double
    Dim pR As Double


'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B2:E30").Select
    Selection.ClearContents
'Set the Range of the combos in the Summary Sheet
    Set sumCombo = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
  
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
'            wbA.Activate
        For Each sumMyCombo In sumCombo
'                sumLen = Len(sumMyCombo)
' open the sheet
    Workbooks.Open vaFileName
'    With ActiveWorkbook
        Set curCombo = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 20)
            For Each curMyCombo In curCombo 'this is col W
                If curMyCombo <> "" Then
                    Select Case sumMyCombo
                    Case "M"
                        If InStr(1, curMyCombo, "M") > 0 Then
                        lM = lM + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aM = aM + 1
                            wM = wM + curMyCombo.Offset(0, -4)
                            pM = pM + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MN"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "N") > 0 Then
                        lMN = lMN + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMN = aMN + 1
                            wMN = wMN + curMyCombo.Offset(0, -4)
                            pMN = pMN + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNO"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "N") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 Then
                        lMNO = lMNO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNO = aMNO + 1
                            wMNO = wMNO + curMyCombo.Offset(0, -4)
                            pMNO = pMNO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOQ"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "N") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 And InStr(1, curMyCombo, "Q") > 0 Then
                        lMNOQ = lMNOQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOQ = aMNOQ + 1
                            wMNOQ = wMNOQ + curMyCombo.Offset(0, -4)
                            pMNOQ = pMNOQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOQR"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "N") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 And InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 Then
                        lMNOQR = lMNOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOQR = aMNOQR + 1
                            wMNOQR = wMNOQR + curMyCombo.Offset(0, -4)
                            pMNOQR = pMNOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNOR"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "N") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lMNOR = lMNOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNOR = aMNOR + 1
                            wMNOR = wMNOR + curMyCombo.Offset(0, -4)
                            pMNOR = pMNOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNQ"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "N") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 Then
                        lMNQ = lMNQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNQ = aMNQ + 1
                            wMNQ = wMNQ + curMyCombo.Offset(0, -4)
                            pMNQ = pMNQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MNQR"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "N") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lMNQR = lMNQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMNQR = aMNQR + 1
                            wMNQR = wMNQR + curMyCombo.Offset(0, -4)
                            pMNQR = pMNQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MO"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "O") > 0 Then
                        lMO = lMO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMO = aMO + 1
                            wMO = wMO + curMyCombo.Offset(0, -4)
                            pMO = pMO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOQR"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lMOQR = lMOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOQR = aMOQR + 1
                            wMOQR = wMOQR + curMyCombo.Offset(0, -4)
                            pMOQR = pMOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOR"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 Then
                        lMOR = lMOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOR = aMOR + 1
                            wMOR = wMOR + curMyCombo.Offset(0, -4)
                            pMOR = pMOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQ"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "Q") > 0 Then
                        lMQ = lMQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQ = aMQ + 1
                            wMQ = wMQ + curMyCombo.Offset(0, -4)
                            pMQ = pMQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQR"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 Then
                        lMQR = lMQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQR = aMQR + 1
                            wMQR = wMQR + curMyCombo.Offset(0, -4)
                            pMQR = pMQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MR"
                        If InStr(1, curMyCombo, "M") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lMR = lMR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMR = aMR + 1
                            wMR = wMR + curMyCombo.Offset(0, -4)
                            pMR = pMR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "N"
                        If InStr(1, curMyCombo, "N") > 0 Then
                        lN = lN + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aN = aN + 1
                            wN = wN + curMyCombo.Offset(0, -4)
                            pN = pN + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NO"
                        If InStr(1, curMyCombo, "N") > 0 And InStr(1, curMyCombo, "O") > 0 Then
                        lNO = lNO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNO = aNO + 1
                            wNO = wNO + curMyCombo.Offset(0, -4)
                            pNO = pNO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOQ"
                        If InStr(1, curMyCombo, "N") > 0 And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 Then
                        lNOQ = lNOQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOQ = aNOQ + 1
                            wNOQ = wNOQ + curMyCombo.Offset(0, -4)
                            pNOQ = pNOQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOQR"
                        If InStr(1, curMyCombo, "N") > 0 And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lNOQR = lNOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOQR = aNOQR + 1
                            wNOQR = wNOQR + curMyCombo.Offset(0, -4)
                            pNOQR = pNOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NOR"
                        If InStr(1, curMyCombo, "N") > 0 And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 Then
                        lNOR = lNOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNOR = aNOR + 1
                            wNOR = wNOR + curMyCombo.Offset(0, -4)
                            pNOR = pNOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NQ"
                        If InStr(1, curMyCombo, "N") > 0 And InStr(1, curMyCombo, "Q") > 0 Then
                        lNQ = lNQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNQ = aNQ + 1
                            wNQ = wNQ + curMyCombo.Offset(0, -4)
                            pNQ = pNQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NQR"
                        If InStr(1, curMyCombo, "N") > 0 And InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 Then
                        lNQR = lNQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNQR = aNQR + 1
                            wNQR = wNQR + curMyCombo.Offset(0, -4)
                            pNQR = pNQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "NR"
                        If InStr(1, curMyCombo, "N") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lNR = lNR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aNR = aNR + 1
                            wNR = wNR + curMyCombo.Offset(0, -4)
                            pNR = pNR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "O"
                        If InStr(1, curMyCombo, "O") > 0 Then
                        lO = lO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aO = aO + 1
                            wO = wO + curMyCombo.Offset(0, -4)
                            pO = pO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OQ"
                        If InStr(1, curMyCombo, "O") > 0 And InStr(1, curMyCombo, "Q") > 0 Then
                        lOQ = lOQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOQ = aOQ + 1
                            wOQ = wOQ + curMyCombo.Offset(0, -4)
                            pOQ = pOQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OQR"
                        If InStr(1, curMyCombo, "O") > 0 And InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 Then
                        lOQR = lOQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOQR = aOQR + 1
                            wOQR = wOQR + curMyCombo.Offset(0, -4)
                            pOQR = pOQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OR"
                        If InStr(1, curMyCombo, "O") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lOR = lOR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOR = aOR + 1
                            wOR = wOR + curMyCombo.Offset(0, -4)
                            pOR = pOR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Q"
                        If InStr(1, curMyCombo, "Q") > 0 Then
                        lQ = lQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQ = aQ + 1
                            wQ = wQ + curMyCombo.Offset(0, -4)
                            pQ = pQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QR"
                        If InStr(1, curMyCombo, "Q") > 0 And InStr(1, curMyCombo, "R") > 0 Then
                        lQR = lQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQR = aQR + 1
                            wQR = wQR + curMyCombo.Offset(0, -4)
                            pQR = pQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "R"
                        If InStr(1, curMyCombo, "R") > 0 Then
                        lR = lR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aR = aR + 1
                            wR = wR + curMyCombo.Offset(0, -4)
                            pR = pR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case Else
                        MsgBox ("New Combo found " & curMyCombo.Offset(0, 20))
                End Select
            End If
        Next curMyCombo
 '       .Close
 '       End With
    Next sumMyCombo
    ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
    ' Win Place Combo
    Worksheets("ComboSummary").Cells(2, 3).value = aM
    Worksheets("ComboSummary").Cells(2, 2).value = aM
    Worksheets("ComboSummary").Cells(3, 2).value = aMN
    Worksheets("ComboSummary").Cells(4, 2).value = aMNO
    Worksheets("ComboSummary").Cells(5, 2).value = aMNOQ
    Worksheets("ComboSummary").Cells(6, 2).value = aMNOQR
    Worksheets("ComboSummary").Cells(7, 2).value = aMNOR
    Worksheets("ComboSummary").Cells(8, 2).value = aMNQ
    Worksheets("ComboSummary").Cells(9, 2).value = aMNQR
    Worksheets("ComboSummary").Cells(10, 2).value = aMO
    Worksheets("ComboSummary").Cells(11, 2).value = aMOQR
    Worksheets("ComboSummary").Cells(12, 2).value = aMOR
    Worksheets("ComboSummary").Cells(13, 2).value = aMQ
    Worksheets("ComboSummary").Cells(14, 2).value = aMQR
    Worksheets("ComboSummary").Cells(15, 2).value = aMR
    Worksheets("ComboSummary").Cells(16, 2).value = aN
    Worksheets("ComboSummary").Cells(17, 2).value = aNO
    Worksheets("ComboSummary").Cells(18, 2).value = aNOQ
    Worksheets("ComboSummary").Cells(19, 2).value = aNOQR
    Worksheets("ComboSummary").Cells(20, 2).value = aNOR
    Worksheets("ComboSummary").Cells(21, 2).value = aNQ
    Worksheets("ComboSummary").Cells(22, 2).value = aNQR
    Worksheets("ComboSummary").Cells(23, 2).value = aNR
    Worksheets("ComboSummary").Cells(24, 2).value = aO
    Worksheets("ComboSummary").Cells(25, 2).value = aOQ
    Worksheets("ComboSummary").Cells(26, 2).value = aOQR
    Worksheets("ComboSummary").Cells(27, 2).value = aOR
    Worksheets("ComboSummary").Cells(28, 2).value = aQ
    Worksheets("ComboSummary").Cells(29, 2).value = aQR
    Worksheets("ComboSummary").Cells(30, 2).value = aR
' Bet Combo All
    Worksheets("ComboSummary").Cells(2, 3).value = lM
    Worksheets("ComboSummary").Cells(3, 3).value = lMN
    Worksheets("ComboSummary").Cells(4, 3).value = lMNO
    Worksheets("ComboSummary").Cells(5, 3).value = lMNOQ
    Worksheets("ComboSummary").Cells(6, 3).value = lMNOQR
    Worksheets("ComboSummary").Cells(7, 3).value = lMNOR
    Worksheets("ComboSummary").Cells(8, 3).value = lMNQ
    Worksheets("ComboSummary").Cells(9, 3).value = lMNQR
    Worksheets("ComboSummary").Cells(10, 3).value = lMO
    Worksheets("ComboSummary").Cells(11, 3).value = lMOQR
    Worksheets("ComboSummary").Cells(12, 3).value = lMOR
    Worksheets("ComboSummary").Cells(13, 3).value = lMQ
    Worksheets("ComboSummary").Cells(14, 3).value = lMQR
    Worksheets("ComboSummary").Cells(15, 3).value = lMR
    Worksheets("ComboSummary").Cells(16, 3).value = lN
    Worksheets("ComboSummary").Cells(17, 3).value = lNO
    Worksheets("ComboSummary").Cells(18, 3).value = lNOQ
    Worksheets("ComboSummary").Cells(19, 3).value = lNOQR
    Worksheets("ComboSummary").Cells(20, 3).value = lNOR
    Worksheets("ComboSummary").Cells(21, 3).value = lNQ
    Worksheets("ComboSummary").Cells(22, 3).value = lNQR
    Worksheets("ComboSummary").Cells(23, 3).value = lNR
    Worksheets("ComboSummary").Cells(24, 3).value = lO
    Worksheets("ComboSummary").Cells(25, 3).value = lOQ
    Worksheets("ComboSummary").Cells(26, 3).value = lOQR
    Worksheets("ComboSummary").Cells(27, 3).value = lOR
    Worksheets("ComboSummary").Cells(28, 3).value = lQ
    Worksheets("ComboSummary").Cells(29, 3).value = lQR
    Worksheets("ComboSummary").Cells(30, 3).value = lR
' Win
    Worksheets("ComboSummary").Cells(2, 4).value = wM / lM
    Worksheets("ComboSummary").Cells(3, 4).value = wMN / lMN
    Worksheets("ComboSummary").Cells(4, 4).value = wMNO / lMNO
    Worksheets("ComboSummary").Cells(5, 4).value = wMNOQ / lMNOQ
    Worksheets("ComboSummary").Cells(6, 4).value = wMNOQR / lMNOQ
    Worksheets("ComboSummary").Cells(7, 4).value = wMNOR / lMNOR
    Worksheets("ComboSummary").Cells(8, 4).value = wMNQ / lMNQ
    Worksheets("ComboSummary").Cells(9, 4).value = wMNQR / lMNQR
    Worksheets("ComboSummary").Cells(10, 4).value = wMO / lMO
    Worksheets("ComboSummary").Cells(11, 4).value = wMOQR / lMOQR
    Worksheets("ComboSummary").Cells(12, 4).value = wMOR / lMOR
    Worksheets("ComboSummary").Cells(13, 4).value = wMQ / lMQ
    Worksheets("ComboSummary").Cells(14, 4).value = wMQR / lMQR
    Worksheets("ComboSummary").Cells(15, 4).value = wMR / lMR
    Worksheets("ComboSummary").Cells(16, 4).value = wN / lN
    Worksheets("ComboSummary").Cells(17, 4).value = wNO / lNO
    Worksheets("ComboSummary").Cells(18, 4).value = wNOQ / lNOQ
    Worksheets("ComboSummary").Cells(19, 4).value = wNOQR / lNOQR
    Worksheets("ComboSummary").Cells(20, 4).value = wNOR / lNOR
    Worksheets("ComboSummary").Cells(21, 4).value = wNQ / lNQ
    Worksheets("ComboSummary").Cells(22, 4).value = wNQR / lNQR
    Worksheets("ComboSummary").Cells(23, 4).value = wNR / lNR
    Worksheets("ComboSummary").Cells(24, 4).value = wO / lO
    Worksheets("ComboSummary").Cells(25, 4).value = wOQ / lOQ
    Worksheets("ComboSummary").Cells(26, 4).value = wOQR / lOQR
    Worksheets("ComboSummary").Cells(27, 4).value = wOR / lOR
    Worksheets("ComboSummary").Cells(28, 4).value = wQ / lQ
    Worksheets("ComboSummary").Cells(29, 4).value = wQR / lQR
    Worksheets("ComboSummary").Cells(30, 4).value = wR / lR
'Place
    Worksheets("ComboSummary").Cells(2, 5).value = pM / lM
    Worksheets("ComboSummary").Cells(3, 5).value = pMN / lMN
    Worksheets("ComboSummary").Cells(4, 5).value = pMNO / lMNO
    Worksheets("ComboSummary").Cells(5, 5).value = pMNOQ / lMNOQ
    Worksheets("ComboSummary").Cells(6, 5).value = pMNOQR / lMNOQ
    Worksheets("ComboSummary").Cells(7, 5).value = pMNOR / lMNOR
    Worksheets("ComboSummary").Cells(8, 5).value = pMNQ / lMNQ
    Worksheets("ComboSummary").Cells(9, 5).value = pMNQR / lMNQR
    Worksheets("ComboSummary").Cells(10, 5).value = pMO / lMO
    Worksheets("ComboSummary").Cells(11, 5).value = pMOQR / lMOQR
    Worksheets("ComboSummary").Cells(12, 5).value = pMOR / lMOR
    Worksheets("ComboSummary").Cells(13, 5).value = pMQ / lMQ
    Worksheets("ComboSummary").Cells(14, 5).value = pMQR / lMQR
    Worksheets("ComboSummary").Cells(15, 5).value = pMR / lMR
    Worksheets("ComboSummary").Cells(16, 5).value = pN / lN
    Worksheets("ComboSummary").Cells(17, 5).value = pNO / lNO
    Worksheets("ComboSummary").Cells(18, 5).value = pNOQ / lNOQ
    Worksheets("ComboSummary").Cells(19, 5).value = pNOQR / lNOQR
    Worksheets("ComboSummary").Cells(20, 5).value = pNOR / lNOR
    Worksheets("ComboSummary").Cells(21, 5).value = pNQ / lNQ
    Worksheets("ComboSummary").Cells(22, 5).value = pNQR / lNQR
    Worksheets("ComboSummary").Cells(23, 5).value = pNR / lNR
    Worksheets("ComboSummary").Cells(24, 5).value = pO / lO
    Worksheets("ComboSummary").Cells(25, 5).value = pOQ / lOQ
    Worksheets("ComboSummary").Cells(26, 5).value = pOQR / lOQR
    Worksheets("ComboSummary").Cells(27, 5).value = pOR / lOR
    Worksheets("ComboSummary").Cells(28, 5).value = pQ / lQ
    Worksheets("ComboSummary").Cells(29, 5).value = pQR / lQR
    Worksheets("ComboSummary").Cells(30, 5).value = pR / lR

' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic

End Sub
Private Sub SummaryTemp()
' loops through a directory of occurrence sheets and adds
' Trades entered and Matches, by region
' returns these to the summary sheet
' chuck 2/11/2009
    Dim strPath As String
    Dim x As Variant 'occurrence sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    
    Dim curTraCent As Long 'current trades CENT
    Dim curTraFarnth As Long 'current trades FarNth
    Dim curTraMetnth As Long 'Metnth
    Dim curTraMetsth As Long 'MetSth
    Dim curTraNorth As Long 'North
    Dim curTraNthcst As Long 'NthCst
    Dim curTraSouth As Long 'South
    Dim curTraStheas As Long 'SthEas
    
    Dim curMatCent As Long 'current Matches CENT
    Dim curMatFarnth As Long 'current Matches FarNth
    Dim curMatMetnth As Long 'Metnth
    Dim curMatMetsth As Long 'MetSth
    Dim curMatNorth As Long 'North
    Dim curMatNthcst As Long 'NthCst
    Dim curMatSouth As Long 'South
    Dim curMatStheas As Long 'SthEas
    
    Dim curHrsCent As Double 'current Hours CENT
    Dim curHrsFarnth As Double 'current Hours FarNth
    Dim curHrsMetnth As Double 'Metnth
    Dim curHrsMetsth As Double 'MetSth
    Dim curHrsNorth As Double 'North
    Dim curHrsNthcst As Double 'NthCst
    Dim curHrsSouth As Double 'South
    Dim curHrsStheas As Double 'SthEas
    
    Dim curIntCent As Double 'current Intel Checks CENT
    Dim curIntFarnth As Double 'current Intel Checks FarNth
    Dim curIntMetnth As Double 'Metnth
    Dim curIntMetsth As Double 'MetSth
    Dim curIntNorth As Double 'North
    Dim curIntNthcst As Double 'NthCst
    Dim curIntSouth As Double 'South
    Dim curIntStheas As Double 'SthEas
'
    Dim sumTraCent As Long 'Summary trades CENT
    Dim sumTraFarnth As Long 'Summary trades FarNth
    Dim sumTraMetnth As Long 'Metnth
    Dim sumTraMetsth As Long 'MetSth
    Dim sumTraNorth As Long 'North
    Dim sumTraNthcst As Long 'NthCst
    Dim sumTraSouth As Long 'South
    Dim sumTraStheas As Long 'SthEas
    
    Dim sumMatCent As Long 'Summary Matches CENT
    Dim sumMatFarnth As Long 'Summary Matches FarNth
    Dim sumMatMetnth As Long 'Metnth
    Dim sumMatMetsth As Long 'MetSth
    Dim sumMatNorth As Long 'North
    Dim sumMatNthcst As Long 'NthCst
    Dim sumMatSouth As Long 'South
    Dim sumMatStheas As Long 'SthEas
    
    Dim sumHrsCent As Double 'Summary Hours CENT
    Dim sumHrsFarnth As Double 'Summary Hours FarNth
    Dim sumHrsMetnth As Double 'Metnth
    Dim sumHrsMetsth As Double 'MetSth
    Dim sumHrsNorth As Double 'North
    Dim sumHrsNthcst As Double 'NthCst
    Dim sumHrsSouth As Double 'South
    Dim sumHrsStheas As Double 'SthEas
    
    Dim sumIntCent As Double 'Summary Intel Checks CENT
    Dim sumIntFarnth As Double 'Summary Intel Checks FarNth
    Dim sumIntMetnth As Double 'Metnth
    Dim sumIntMetsth As Double 'MetSth
    Dim sumIntNorth As Double 'North
    Dim sumIntNthcst As Double 'NthCst
    Dim sumIntSouth As Double 'South
    Dim sumIntStheas As Double 'SthEas
    
'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
  
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
                ' open the workbook
                Workbooks.Open vaFileName
        
                With ActiveWorkbook
                    ' Get all the trades entered
                    curTraCent = Worksheets("Sheet1").Cells(6, 2).value
                    curTraFarnth = Worksheets("Sheet1").Cells(7, 2).value
                    curTraMetnth = Worksheets("Sheet1").Cells(8, 2).value
                    curTraMetsth = Worksheets("Sheet1").Cells(9, 2).value
                    curTraNorth = Worksheets("Sheet1").Cells(10, 2).value
                    curTraNthcst = Worksheets("Sheet1").Cells(11, 2).value
                    curTraSouth = Worksheets("Sheet1").Cells(13, 2).value
                    curTraStheas = Worksheets("Sheet1").Cells(14, 2).value
                    ' Get all the matches
                    curMatCent = Worksheets("Sheet1").Cells(6, 3).value
                    curMatFarnth = Worksheets("Sheet1").Cells(7, 3).value
                    curMatMetnth = Worksheets("Sheet1").Cells(8, 3).value
                    curMatMetsth = Worksheets("Sheet1").Cells(9, 3).value
                    curMatNorth = Worksheets("Sheet1").Cells(10, 3).value
                    curMatNthcst = Worksheets("Sheet1").Cells(11, 3).value
                    curMatSouth = Worksheets("Sheet1").Cells(13, 3).value
                    curMatStheas = Worksheets("Sheet1").Cells(14, 3).value
                    ' Get all the Hours
                    curHrsCent = Worksheets("Sheet1").Cells(6, 5).value
                    curHrsFarnth = Worksheets("Sheet1").Cells(7, 5).value
                    curHrsMetnth = Worksheets("Sheet1").Cells(8, 5).value
                    curHrsMetsth = Worksheets("Sheet1").Cells(9, 5).value
                    curHrsNorth = Worksheets("Sheet1").Cells(10, 5).value
                    curHrsNthcst = Worksheets("Sheet1").Cells(11, 5).value
                    curHrsSouth = Worksheets("Sheet1").Cells(13, 5).value
                    curHrsStheas = Worksheets("Sheet1").Cells(14, 5).value
                    ' Get all the Intel Checks
                    curIntCent = Worksheets("Sheet1").Cells(6, 4).value
                    curIntFarnth = Worksheets("Sheet1").Cells(7, 4).value
                    curIntMetnth = Worksheets("Sheet1").Cells(8, 4).value
                    curIntMetsth = Worksheets("Sheet1").Cells(9, 4).value
                    curIntNorth = Worksheets("Sheet1").Cells(10, 4).value
                    curIntNthcst = Worksheets("Sheet1").Cells(11, 4).value
                    curIntSouth = Worksheets("Sheet1").Cells(13, 4).value
                    curIntStheas = Worksheets("Sheet1").Cells(14, 4).value
                    
                    .Close
                End With
                ' keep a running total
                ' Trades
                sumTraCent = sumTraCent + curTraCent
                sumTraFarnth = sumTraFarnth + curTraFarnth
                sumTraMetnth = sumTraMetnth + curTraMetnth
                sumTraMetsth = sumTraMetsth + curTraMetsth
                sumTraNorth = sumTraNorth + curTraNorth
                sumTraNthcst = sumTraNthcst + curTraNthcst
                sumTraSouth = sumTraSouth + curTraSouth
                sumTraStheas = sumTraStheas + curTraStheas
                ' Matches
                sumMatCent = sumMatCent + curMatCent
                sumMatFarnth = sumMatFarnth + curMatFarnth
                sumMatMetnth = sumMatMetnth + curMatMetnth
                sumMatMetsth = sumMatMetsth + curMatMetsth
                sumMatNorth = sumMatNorth + curMatNorth
                sumMatNthcst = sumMatNthcst + curMatNthcst
                sumMatSouth = sumMatSouth + curMatSouth
                sumMatStheas = sumMatStheas + curMatStheas
                ' Hours
                sumHrsCent = sumHrsCent + curHrsCent
                sumHrsFarnth = sumHrsFarnth + curHrsFarnth
                sumHrsMetnth = sumHrsMetnth + curHrsMetnth
                sumHrsMetsth = sumHrsMetsth + curHrsMetsth
                sumHrsNorth = sumHrsNorth + curHrsNorth
                sumHrsNthcst = sumHrsNthcst + curHrsNthcst
                sumHrsSouth = sumHrsSouth + curHrsSouth
                sumHrsStheas = sumHrsStheas + curHrsStheas
                ' Intel Reports
                sumIntCent = sumIntCent + curIntCent
                sumIntFarnth = sumIntFarnth + curIntFarnth
                sumIntMetnth = sumIntMetnth + curIntMetnth
                sumIntMetsth = sumIntMetsth + curIntMetsth
                sumIntNorth = sumIntNorth + curIntNorth
                sumIntNthcst = sumIntNthcst + curIntNthcst
                sumIntSouth = sumIntSouth + curIntSouth
                sumIntStheas = sumIntStheas + curIntStheas

 ' reset all the values to 0
                curTraCent = 0
                curTraFarnth = 0
                curTraMetnth = 0
                curTraMetsth = 0
                curTraNorth = 0
                curTraNthcst = 0
                curTraSouth = 0
                curTraStheas = 0
'
                curMatCent = 0
                curMatFarnth = 0
                curMatMetnth = 0
                curMatMetsth = 0
                curMatNorth = 0
                curMatNthcst = 0
                curMatSouth = 0
                curMatStheas = 0
'
                curHrsCent = 0
                curHrsFarnth = 0
                curHrsMetnth = 0
                curHrsMetsth = 0
                curHrsNorth = 0
                curHrsNthcst = 0
                curHrsSouth = 0
                curHrsStheas = 0
'
                curIntCent = 0
                curIntFarnth = 0
                curIntMetnth = 0
                curIntMetsth = 0
                curIntNorth = 0
                curIntNthcst = 0
                curIntSouth = 0
                curIntStheas = 0
            Next
        End If
    End With
    ' write all the values to the summary sheet
    wbA.Activate
    ' Hours
    Worksheets("Sheet1").Cells(2, 2).value = sumHrsCent
    Worksheets("Sheet1").Cells(3, 2).value = sumHrsFarnth
    Worksheets("Sheet1").Cells(4, 2).value = sumHrsMetnth
    Worksheets("Sheet1").Cells(5, 2).value = sumHrsMetsth
    Worksheets("Sheet1").Cells(6, 2).value = sumHrsNorth
    Worksheets("Sheet1").Cells(7, 2).value = sumHrsNthcst
    Worksheets("Sheet1").Cells(8, 2).value = sumHrsSouth
    Worksheets("Sheet1").Cells(9, 2).value = sumHrsStheas
    ' Trades
    Worksheets("Sheet1").Cells(2, 3).value = sumTraCent
    Worksheets("Sheet1").Cells(3, 3).value = sumTraFarnth
    Worksheets("Sheet1").Cells(4, 3).value = sumTraMetnth
    Worksheets("Sheet1").Cells(5, 3).value = sumTraMetsth
    Worksheets("Sheet1").Cells(6, 3).value = sumTraNorth
    Worksheets("Sheet1").Cells(7, 3).value = sumTraNthcst
    Worksheets("Sheet1").Cells(8, 3).value = sumTraSouth
    Worksheets("Sheet1").Cells(9, 3).value = sumTraStheas
    ' Matches
    Worksheets("Sheet1").Cells(2, 4).value = sumMatCent
    Worksheets("Sheet1").Cells(3, 4).value = sumMatFarnth
    Worksheets("Sheet1").Cells(4, 4).value = sumMatMetnth
    Worksheets("Sheet1").Cells(5, 4).value = sumMatMetsth
    Worksheets("Sheet1").Cells(6, 4).value = sumMatNorth
    Worksheets("Sheet1").Cells(7, 4).value = sumMatNthcst
    Worksheets("Sheet1").Cells(8, 4).value = sumMatSouth
    Worksheets("Sheet1").Cells(9, 4).value = sumMatStheas
    ' Intel Checks
    Worksheets("Sheet1").Cells(2, 5).value = sumIntCent
    Worksheets("Sheet1").Cells(3, 5).value = sumIntFarnth
    Worksheets("Sheet1").Cells(4, 5).value = sumIntMetnth
    Worksheets("Sheet1").Cells(5, 5).value = sumIntMetsth
    Worksheets("Sheet1").Cells(6, 5).value = sumIntNorth
    Worksheets("Sheet1").Cells(7, 5).value = sumIntNthcst
    Worksheets("Sheet1").Cells(8, 5).value = sumIntSouth
    Worksheets("Sheet1").Cells(9, 5).value = sumIntStheas
' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic

End Sub
Sub GetSummaryUXYCounts()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 5/8/12
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    Dim sumCombo As Range 'range of all the combinations in the summary sheet
    Dim sumMyCombo As Range 'each combo
    Dim sumLen As Long 'length of the current combo
    Dim a As Long 'position of each letter in combo
    Dim sumLetter As String 'the current letter in the summary combo
    Dim curCombo As Range 'range of all the combos in the current sheet
    Dim curMyCombo As Range 'each combo in the current sheet
    
'    Dim curWin As Double 'current Win Value
'    Dim curPlace As Double 'current Place value
'    Dim curWPCount As Long '
'    Dim curComboCnt As Long 'current combo for win/place
'    Dim curComboAllCnt As Long 'current combo all
    
'    Dim sumWin As Double 'Summary Win Value
'    Dim sumPlace As Double 'Summary Place value
'    Dim sumComboCnt As Long 'Summary combo for win/place
'    Dim sumComboAllCnt As Long 'Summary combo all
'
Dim lU As Long
Dim lUX As Long
Dim lUXY As Long
Dim lUY As Long
Dim lX As Long
Dim lXY As Long
Dim lY As Long
    
Dim aU As Long
Dim aUX As Long
Dim aUXY As Long
Dim aUY As Long
Dim aX As Long
Dim aXY As Long
Dim aY As Long
    
Dim wU As Double
Dim wUX As Double
Dim wUXY As Double
Dim wUY As Double
Dim wX As Double
Dim wXY As Double
Dim wY As Double

Dim pU As Double
Dim pUX As Double
Dim pUXY As Double
Dim pUY As Double
Dim pX As Double
Dim pXY As Double
Dim pY As Double

Dim wkName As String

Application.DisplayStatusBar = True

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B2:E8").Select
    Selection.ClearContents
'Set the Range of the combos in the Summary Sheet
    Set sumCombo = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
 'MsgBox ("got to here")
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
'            wbA.Activate
        For Each sumMyCombo In sumCombo
'                sumLen = Len(sumMyCombo)
' open the sheet
    Workbooks.Open vaFileName
    wkName = ActiveWorkbook.name
    wkName = Left(wkName, 10)
    
    Application.StatusBar = "Processing " & wkName
'    With ActiveWorkbook
        Set curCombo = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 20)
            For Each curMyCombo In curCombo 'this is col W
                If curMyCombo <> "" Then
                    Select Case sumMyCombo
                    Case "U"
                        If InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lU = lU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aU = aU + 1
                            wU = wU + curMyCombo.Offset(0, -4)
                            pU = pU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "UX"
                        If InStr(1, curMyCombo, "U") > 0 _
                          And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lUX = lUX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aUX = aUX + 1
                            wUX = wUX + curMyCombo.Offset(0, -4)
                            pUX = pUX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "UXY"
                        If InStr(1, curMyCombo, "U") > 0 _
                          And InStr(1, curMyCombo, "X") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lUXY = lUXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aUXY = aUXY + 1
                            wUXY = wUXY + curMyCombo.Offset(0, -4)
                            pUXY = pUXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "UY"
                        If InStr(1, curMyCombo, "U") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lUY = lUY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aUY = aUY + 1
                            wUY = wUY + curMyCombo.Offset(0, -4)
                            pUY = pUY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "X"
                        If InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lX = lX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aX = aX + 1
                            wX = wX + curMyCombo.Offset(0, -4)
                            pX = pX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "XY"
                        If InStr(1, curMyCombo, "X") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lXY = lXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aXY = aXY + 1
                            wXY = wXY + curMyCombo.Offset(0, -4)
                            pXY = pXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Y"
                        If InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lY = lY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aY = aY + 1
                            wY = wY + curMyCombo.Offset(0, -4)
                            pY = pY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                End Select
            End If
        Next curMyCombo
 '       .Close
 '       End With
    Next sumMyCombo
    ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
    ' Win Place Combo
    Worksheets("ComboSummary").Cells(2, 2).value = aU
    Worksheets("ComboSummary").Cells(3, 2).value = aUX
    Worksheets("ComboSummary").Cells(4, 2).value = aUXY
    Worksheets("ComboSummary").Cells(5, 2).value = aUY
    Worksheets("ComboSummary").Cells(6, 2).value = aX
    Worksheets("ComboSummary").Cells(7, 2).value = aXY
    Worksheets("ComboSummary").Cells(8, 2).value = aY
    
' Bet Combo All
    Worksheets("ComboSummary").Cells(2, 3).value = lU
    Worksheets("ComboSummary").Cells(3, 3).value = lUX
    Worksheets("ComboSummary").Cells(4, 3).value = lUXY
    Worksheets("ComboSummary").Cells(5, 3).value = lUY
    Worksheets("ComboSummary").Cells(6, 3).value = lX
    Worksheets("ComboSummary").Cells(7, 3).value = lXY
    Worksheets("ComboSummary").Cells(8, 3).value = lY
    
' Win
    Worksheets("ComboSummary").Cells(2, 4).value = wU / lU
    Worksheets("ComboSummary").Cells(3, 4).value = wUX / lUX
    Worksheets("ComboSummary").Cells(4, 4).value = wUXY / lUXY
    Worksheets("ComboSummary").Cells(5, 4).value = wUY / lUY
    Worksheets("ComboSummary").Cells(6, 4).value = wX / lX
    Worksheets("ComboSummary").Cells(7, 4).value = wXY / lXY
    Worksheets("ComboSummary").Cells(8, 4).value = wY / lY
    
'Place
    Worksheets("ComboSummary").Cells(2, 5).value = pU / lU
    Worksheets("ComboSummary").Cells(3, 5).value = pUX / lUX
    Worksheets("ComboSummary").Cells(4, 5).value = pUXY / lUXY
    Worksheets("ComboSummary").Cells(5, 5).value = pUY / lUY
    Worksheets("ComboSummary").Cells(6, 5).value = pX / lX
    Worksheets("ComboSummary").Cells(7, 5).value = pXY / lXY
    Worksheets("ComboSummary").Cells(8, 5).value = pY / lY
    


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.StatusBar = ""

End Sub
Sub GetSummaryMOUXCounts()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 7/10/12
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    Dim sumCombo As Range 'range of all the combinations in the summary sheet
    Dim sumMyCombo As Range 'each combo
    Dim sumLen As Long 'length of the current combo
    Dim a As Long 'position of each letter in combo
    Dim sumLetter As String 'the current letter in the summary combo
    Dim curCombo As Range 'range of all the combos in the current sheet
    Dim curMyCombo As Range 'each combo in the current sheet
    
'    Dim curWin As Double 'current Win Value
'    Dim curPlace As Double 'current Place value
'    Dim curWPCount As Long '
'    Dim curComboCnt As Long 'current combo for win/place
'    Dim curComboAllCnt As Long 'current combo all
    
'    Dim sumWin As Double 'Summary Win Value
'    Dim sumPlace As Double 'Summary Place value
'    Dim sumComboCnt As Long 'Summary combo for win/place
'    Dim sumComboAllCnt As Long 'Summary combo all
'
Dim lM As Long
Dim lMO As Long
Dim lMOU As Long
Dim lMOUX As Long
Dim lMOX As Long
Dim lMU As Long
Dim lMUX As Long
Dim lMX As Long
Dim lO As Long
Dim lOU As Long
Dim lOUX As Long
Dim lOX As Long
Dim lU As Long
Dim lUX As Long
Dim lX As Long

Dim aM As Long
Dim aMO As Long
Dim aMOU As Long
Dim aMOUX As Long
Dim aMOX As Long
Dim aMU As Long
Dim aMUX As Long
Dim aMX As Long
Dim aO As Long
Dim aOU As Long
Dim aOUX As Long
Dim aOX As Long
Dim aU As Long
Dim aUX As Long
Dim aX As Long

Dim wM As Double
Dim wMO As Double
Dim wMOU As Double
Dim wMOUX As Double
Dim wMOX As Double
Dim wMU As Double
Dim wMUX As Double
Dim wMX As Double
Dim wO As Double
Dim wOU As Double
Dim wOUX As Double
Dim wOX As Double
Dim wU As Double
Dim wUX As Double
Dim wX As Double

Dim pM As Double
Dim pMO As Double
Dim pMOU As Double
Dim pMOUX As Double
Dim pMOX As Double
Dim pMU As Double
Dim pMUX As Double
Dim pMX As Double
Dim pO As Double
Dim pOU As Double
Dim pOUX As Double
Dim pOX As Double
Dim pU As Double
Dim pUX As Double
Dim pX As Double

Dim wkName As String

Application.DisplayStatusBar = True

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B2:E16").Select
    Selection.ClearContents
'Set the Range of the combos in the Summary Sheet
    Set sumCombo = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
  
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
'            wbA.Activate
        For Each sumMyCombo In sumCombo
'                sumLen = Len(sumMyCombo)
' open the sheet
    Workbooks.Open vaFileName
    wkName = ActiveWorkbook.name
    wkName = Left(wkName, 10)
    
    Application.StatusBar = "Processing " & wkName
'    With ActiveWorkbook
        Set curCombo = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 20)
            For Each curMyCombo In curCombo 'this is col W
                If curMyCombo <> "" Then
                    Select Case sumMyCombo
                    Case "M"
                        If InStr(1, curMyCombo, "M") > 0 _
                        Then
                        lM = lM + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aM = aM + 1
                            wM = wM + curMyCombo.Offset(0, -4)
                            pM = pM + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MO"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 _
                        Then
                        lMO = lMO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMO = aMO + 1
                            wMO = wMO + curMyCombo.Offset(0, -4)
                            pMO = pMO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOU"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMOU = lMOU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOU = aMOU + 1
                            wMOU = wMOU + curMyCombo.Offset(0, -4)
                            pMOU = pMOU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOUX"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "U") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lMOUX = lMOUX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOUX = aMOUX + 1
                            wMOUX = wMOUX + curMyCombo.Offset(0, -4)
                            pMOUX = pMOUX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MOX"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lMOX = lMOX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMOX = aMOX + 1
                            wMOX = wMOX + curMyCombo.Offset(0, -4)
                            pMOX = pMOX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MU"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMU = lMU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMU = aMU + 1
                            wMU = wMU + curMyCombo.Offset(0, -4)
                            pMU = pMU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MUX"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "U") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lMUX = lMUX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMUX = aMUX + 1
                            wMUX = wMUX + curMyCombo.Offset(0, -4)
                            pMUX = pMUX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MX"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lMX = lMX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMX = aMX + 1
                            wMX = wMX + curMyCombo.Offset(0, -4)
                            pMX = pMX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "O"
                        If InStr(1, curMyCombo, "O") > 0 _
                        Then
                        lO = lO + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aO = aO + 1
                            wO = wO + curMyCombo.Offset(0, -4)
                            pO = pO + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OU"
                        If InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lOU = lOU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOU = aOU + 1
                            wOU = wOU + curMyCombo.Offset(0, -4)
                            pOU = pOU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OUX"
                        If InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "U") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lOUX = lOUX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOUX = aOUX + 1
                            wOUX = wOUX + curMyCombo.Offset(0, -4)
                            pOUX = pOUX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "OX"
                        If InStr(1, curMyCombo, "O") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lOX = lOX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aOX = aOX + 1
                            wOX = wOX + curMyCombo.Offset(0, -4)
                            pOX = pOX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "U"
                        If InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lU = lU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aU = aU + 1
                            wU = wU + curMyCombo.Offset(0, -4)
                            pU = pU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "UX"
                        If InStr(1, curMyCombo, "U") > 0 _
                          And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lUX = lUX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aUX = aUX + 1
                            wUX = wUX + curMyCombo.Offset(0, -4)
                            pUX = pUX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "X"
                        If InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lX = lX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aX = aX + 1
                            wX = wX + curMyCombo.Offset(0, -4)
                            pX = pX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                End Select
            End If
        Next curMyCombo
 '       .Close
 '       End With
    Next sumMyCombo
    ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
' Win Place Combo
Worksheets("ComboSummary").Cells(2, 2).value = aM
Worksheets("ComboSummary").Cells(3, 2).value = aMO
Worksheets("ComboSummary").Cells(4, 2).value = aMOU
Worksheets("ComboSummary").Cells(5, 2).value = aMOUX
Worksheets("ComboSummary").Cells(6, 2).value = aMOX
Worksheets("ComboSummary").Cells(7, 2).value = aMU
Worksheets("ComboSummary").Cells(8, 2).value = aMUX
Worksheets("ComboSummary").Cells(9, 2).value = aMX
Worksheets("ComboSummary").Cells(10, 2).value = aO
Worksheets("ComboSummary").Cells(11, 2).value = aOU
Worksheets("ComboSummary").Cells(12, 2).value = aOUX
Worksheets("ComboSummary").Cells(13, 2).value = aOX
Worksheets("ComboSummary").Cells(14, 2).value = aU
Worksheets("ComboSummary").Cells(15, 2).value = aUX
Worksheets("ComboSummary").Cells(16, 2).value = aX
    
' Bet Combo All
Worksheets("ComboSummary").Cells(2, 3).value = lM
Worksheets("ComboSummary").Cells(3, 3).value = lMO
Worksheets("ComboSummary").Cells(4, 3).value = lMOU
Worksheets("ComboSummary").Cells(5, 3).value = lMOUX
Worksheets("ComboSummary").Cells(6, 3).value = lMOX
Worksheets("ComboSummary").Cells(7, 3).value = lMU
Worksheets("ComboSummary").Cells(8, 3).value = lMUX
Worksheets("ComboSummary").Cells(9, 3).value = lMX
Worksheets("ComboSummary").Cells(10, 3).value = lO
Worksheets("ComboSummary").Cells(11, 3).value = lOU
Worksheets("ComboSummary").Cells(12, 3).value = lOUX
Worksheets("ComboSummary").Cells(13, 3).value = lOX
Worksheets("ComboSummary").Cells(14, 3).value = lU
Worksheets("ComboSummary").Cells(15, 3).value = lUX
Worksheets("ComboSummary").Cells(16, 3).value = lX
    
' Win
Worksheets("ComboSummary").Cells(2, 4).value = wM / lM
Worksheets("ComboSummary").Cells(3, 4).value = wMO / lMO
Worksheets("ComboSummary").Cells(4, 4).value = wMOU / lMOU
Worksheets("ComboSummary").Cells(5, 4).value = wMOUX / lMOUX
Worksheets("ComboSummary").Cells(6, 4).value = wMOX / lMOX
Worksheets("ComboSummary").Cells(7, 4).value = wMU / lMU
Worksheets("ComboSummary").Cells(8, 4).value = wMUX / lMUX
Worksheets("ComboSummary").Cells(9, 4).value = wMX / lMX
Worksheets("ComboSummary").Cells(10, 4).value = wO / lO
Worksheets("ComboSummary").Cells(11, 4).value = wOU / lOU
Worksheets("ComboSummary").Cells(12, 4).value = wOUX / lOUX
Worksheets("ComboSummary").Cells(13, 4).value = wOX / lOX
Worksheets("ComboSummary").Cells(14, 4).value = wU / lU
Worksheets("ComboSummary").Cells(15, 4).value = wUX / lUX
Worksheets("ComboSummary").Cells(16, 4).value = wX / lX
    
'Place
Worksheets("ComboSummary").Cells(2, 5).value = pM / lM
Worksheets("ComboSummary").Cells(3, 5).value = pMO / lMO
Worksheets("ComboSummary").Cells(4, 5).value = pMOU / lMOU
Worksheets("ComboSummary").Cells(5, 5).value = pMOUX / lMOUX
Worksheets("ComboSummary").Cells(6, 5).value = pMOX / lMOX
Worksheets("ComboSummary").Cells(7, 5).value = pMU / lMU
Worksheets("ComboSummary").Cells(8, 5).value = pMUX / lMUX
Worksheets("ComboSummary").Cells(9, 5).value = pMX / lMX
Worksheets("ComboSummary").Cells(10, 5).value = pO / lO
Worksheets("ComboSummary").Cells(11, 5).value = pOU / lOU
Worksheets("ComboSummary").Cells(12, 5).value = pOUX / lOUX
Worksheets("ComboSummary").Cells(13, 5).value = pOX / lOX
Worksheets("ComboSummary").Cells(14, 5).value = pU / lU
Worksheets("ComboSummary").Cells(15, 5).value = pUX / lUX
Worksheets("ComboSummary").Cells(16, 5).value = pX / lX


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
Application.StatusBar = ""
End Sub

Sub GetSummaryMUYCounts()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 5/8/12
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    Dim sumCombo As Range 'range of all the combinations in the summary sheet
    Dim sumMyCombo As Range 'each combo
    Dim sumLen As Long 'length of the current combo
    Dim a As Long 'position of each letter in combo
    Dim sumLetter As String 'the current letter in the summary combo
    Dim curCombo As Range 'range of all the combos in the current sheet
    Dim curMyCombo As Range 'each combo in the current sheet
    
'
Dim lM As Long
Dim lMU As Long
Dim lMUY As Long
Dim lMY As Long
Dim lU As Long
Dim lUY As Long
Dim lY As Long

Dim aM As Long
Dim aMU As Long
Dim aMUY As Long
Dim aMY As Long
Dim aU As Long
Dim aUY As Long
Dim aY As Long

Dim wM As Double
Dim wMU As Double
Dim wMUY As Double
Dim wMY As Double
Dim wU As Double
Dim wUY As Double
Dim wY As Double


Dim pM As Double
Dim pMU As Double
Dim pMUY As Double
Dim pMY As Double
Dim pU As Double
Dim pUY As Double
Dim pY As Double

Dim wkName As String

Application.DisplayStatusBar = True

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B2:E8").Select
    Selection.ClearContents
'Set the Range of the combos in the Summary Sheet
    Set sumCombo = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
 'MsgBox ("got to here")
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
'            wbA.Activate
        For Each sumMyCombo In sumCombo
'                sumLen = Len(sumMyCombo)
' open the sheet
    Workbooks.Open vaFileName
    wkName = ActiveWorkbook.name
    wkName = Left(wkName, 10)
    
    Application.StatusBar = "Processing " & wkName
'    With ActiveWorkbook
        Set curCombo = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 20)
            For Each curMyCombo In curCombo 'this is col W
                If curMyCombo <> "" Then
                    Select Case sumMyCombo
                    Case "M"
                        If InStr(1, curMyCombo, "M") > 0 _
                        Then
                        lM = lM + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aM = aM + 1
                            wM = wM + curMyCombo.Offset(0, -4)
                            pM = pM + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MU"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lMU = lMU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMU = aMU + 1
                            wMU = wMU + curMyCombo.Offset(0, -4)
                            pMU = pMU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MUY"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "U") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMUY = lMUY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMUY = aMUY + 1
                            wMUY = wMUY + curMyCombo.Offset(0, -4)
                            pMUY = pMUY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MY"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMY = lMY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMY = aMY + 1
                            wMY = wMY + curMyCombo.Offset(0, -4)
                            pMY = pMY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "U"
                        If InStr(1, curMyCombo, "U") > 0 _
                        Then
                        lU = lU + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aU = aU + 1
                            wU = wU + curMyCombo.Offset(0, -4)
                            pU = pU + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "UY"
                        If InStr(1, curMyCombo, "U") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lUY = lUY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aUY = aUY + 1
                            wUY = wUY + curMyCombo.Offset(0, -4)
                            pUY = pUY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Y"
                        If InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lY = lY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aY = aY + 1
                            wY = wY + curMyCombo.Offset(0, -4)
                            pY = pY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                End Select
            End If
        Next curMyCombo
 '       .Close
 '       End With
    Next sumMyCombo
    ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
    ' Win Place Combo
    Worksheets("ComboSummary").Cells(2, 2).value = aM
    Worksheets("ComboSummary").Cells(3, 2).value = aMU
    Worksheets("ComboSummary").Cells(4, 2).value = aMUY
    Worksheets("ComboSummary").Cells(5, 2).value = aMY
    Worksheets("ComboSummary").Cells(6, 2).value = aU
    Worksheets("ComboSummary").Cells(7, 2).value = aUY
    Worksheets("ComboSummary").Cells(8, 2).value = aY
    
' Bet Combo All
    Worksheets("ComboSummary").Cells(2, 3).value = lM
    Worksheets("ComboSummary").Cells(3, 3).value = lMU
    Worksheets("ComboSummary").Cells(4, 3).value = lMUY
    Worksheets("ComboSummary").Cells(5, 3).value = lMY
    Worksheets("ComboSummary").Cells(6, 3).value = lU
    Worksheets("ComboSummary").Cells(7, 3).value = lUY
    Worksheets("ComboSummary").Cells(8, 3).value = lY
    
' Win
    Worksheets("ComboSummary").Cells(2, 4).value = wM / lM
    Worksheets("ComboSummary").Cells(3, 4).value = wMU / lMU
    Worksheets("ComboSummary").Cells(4, 4).value = wMUY / lMUY
    Worksheets("ComboSummary").Cells(5, 4).value = wMY / lMY
    Worksheets("ComboSummary").Cells(6, 4).value = wU / lU
    Worksheets("ComboSummary").Cells(7, 4).value = wUY / lUY
    Worksheets("ComboSummary").Cells(8, 4).value = wY / lY
    
'Place
    Worksheets("ComboSummary").Cells(2, 5).value = pM / lM
    Worksheets("ComboSummary").Cells(3, 5).value = pMU / lMU
    Worksheets("ComboSummary").Cells(4, 5).value = pMUY / lMUY
    Worksheets("ComboSummary").Cells(5, 5).value = pMY / lMY
    Worksheets("ComboSummary").Cells(6, 5).value = pU / lU
    Worksheets("ComboSummary").Cells(7, 5).value = pUY / lUY
    Worksheets("ComboSummary").Cells(8, 5).value = pY / lY
    


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
Application.StatusBar = ""

End Sub
Sub GetSummaryMQYCounts()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 3/11/17
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    Dim sumCombo As Range 'range of all the combinations in the summary sheet
    Dim sumMyCombo As Range 'each combo
    Dim sumLen As Long 'length of the current combo
    Dim a As Long 'position of each letter in combo
    Dim sumLetter As String 'the current letter in the summary combo
    Dim curCombo As Range 'range of all the combos in the current sheet
    Dim curMyCombo As Range 'each combo in the current sheet
    
'
Dim lM As Long
Dim lMQ As Long
Dim lMQY As Long
Dim lMY As Long
Dim lQ As Long
Dim lQY As Long
Dim lY As Long

Dim aM As Long
Dim aMQ As Long
Dim aMQY As Long
Dim aMY As Long
Dim aQ As Long
Dim aQY As Long
Dim aY As Long

Dim wM As Double
Dim wMQ As Double
Dim wMQY As Double
Dim wMY As Double
Dim wQ As Double
Dim wQY As Double
Dim wY As Double


Dim pM As Double
Dim pMQ As Double
Dim pMQY As Double
Dim pMY As Double
Dim pQ As Double
Dim pQY As Double
Dim pY As Double

Dim wkName As String

Application.DisplayStatusBar = True

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B2:E8").Select
    Selection.ClearContents
'Set the Range of the combos in the Summary Sheet
    Set sumCombo = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
 'MsgBox ("got to here")
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
'            wbA.Activate
        For Each sumMyCombo In sumCombo
'                sumLen = Len(sumMyCombo)
' open the sheet
    Workbooks.Open vaFileName
    wkName = ActiveWorkbook.name
    wkName = Left(wkName, 10)
    
    Application.StatusBar = "Processing " & wkName
'    With ActiveWorkbook
        Set curCombo = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 20)
            For Each curMyCombo In curCombo 'this is col W
                If curMyCombo <> "" Then
                    Select Case sumMyCombo
                    Case "M"
                        If InStr(1, curMyCombo, "M") > 0 _
                        Then
                        lM = lM + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aM = aM + 1
                            wM = wM + curMyCombo.Offset(0, -4)
                            pM = pM + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQ"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lMQ = lMQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQ = aMQ + 1
                            wMQ = wMQ + curMyCombo.Offset(0, -4)
                            pMQ = pMQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQY"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMQY = lMQY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQY = aMQY + 1
                            wMQY = wMQY + curMyCombo.Offset(0, -4)
                            pMQY = pMQY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MY"
                        If InStr(1, curMyCombo, "M") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMY = lMY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMY = aMY + 1
                            wMY = wMY + curMyCombo.Offset(0, -4)
                            pMY = pMY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Q"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lQ = lQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQ = aQ + 1
                            wQ = wQ + curMyCombo.Offset(0, -4)
                            pQ = pQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QY"
                        If InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lQY = lQY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQY = aQY + 1
                            wQY = wQY + curMyCombo.Offset(0, -4)
                            pQY = pQY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Y"
                        If InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lY = lY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aY = aY + 1
                            wY = wY + curMyCombo.Offset(0, -4)
                            pY = pY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                End Select
            End If
        Next curMyCombo
 '       .Close
 '       End With
    Next sumMyCombo
    ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
    ' Win Place Combo
    Worksheets("ComboSummary").Cells(2, 2).value = aM
    Worksheets("ComboSummary").Cells(3, 2).value = aMQ
    Worksheets("ComboSummary").Cells(4, 2).value = aMQY
    Worksheets("ComboSummary").Cells(5, 2).value = aMY
    Worksheets("ComboSummary").Cells(6, 2).value = aQ
    Worksheets("ComboSummary").Cells(7, 2).value = aQY
    Worksheets("ComboSummary").Cells(8, 2).value = aY
    
' Bet Combo All
    Worksheets("ComboSummary").Cells(2, 3).value = lM
    Worksheets("ComboSummary").Cells(3, 3).value = lMQ
    Worksheets("ComboSummary").Cells(4, 3).value = lMQY
    Worksheets("ComboSummary").Cells(5, 3).value = lMY
    Worksheets("ComboSummary").Cells(6, 3).value = lQ
    Worksheets("ComboSummary").Cells(7, 3).value = lQY
    Worksheets("ComboSummary").Cells(8, 3).value = lY
    
' Win
    Worksheets("ComboSummary").Cells(2, 4).value = wM / lM
    Worksheets("ComboSummary").Cells(3, 4).value = wMQ / lMQ
    Worksheets("ComboSummary").Cells(4, 4).value = wMQY / lMQY
    Worksheets("ComboSummary").Cells(5, 4).value = wMY / lMY
    Worksheets("ComboSummary").Cells(6, 4).value = wQ / lQ
    Worksheets("ComboSummary").Cells(7, 4).value = wQY / lQY
    Worksheets("ComboSummary").Cells(8, 4).value = wY / lY
    
'Place
    Worksheets("ComboSummary").Cells(2, 5).value = pM / lM
    Worksheets("ComboSummary").Cells(3, 5).value = pMQ / lMQ
    Worksheets("ComboSummary").Cells(4, 5).value = pMQY / lMQY
    Worksheets("ComboSummary").Cells(5, 5).value = pMY / lMY
    Worksheets("ComboSummary").Cells(6, 5).value = pQ / lQ
    Worksheets("ComboSummary").Cells(7, 5).value = pQY / lQY
    Worksheets("ComboSummary").Cells(8, 5).value = pY / lY
    


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
Application.StatusBar = ""

End Sub
Sub GetSummaryMQRXYCounts()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 7/10/12
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim wbA As Variant 'summary sheet
    Dim vaFileName As Variant 'names of the different occ sheets
    Dim sumCombo As Range 'range of all the combinations in the summary sheet
    Dim sumMyCombo As Range 'each combo
    Dim sumLen As Long 'length of the current combo
    Dim a As Long 'position of each letter in combo
    Dim sumLetter As String 'the current letter in the summary combo
    Dim curCombo As Range 'range of all the combos in the current sheet
    Dim curMyCombo As Range 'each combo in the current sheet
    
'    Dim curWin As Double 'current Win Value
'    Dim curPlace As Double 'current Place value
'    Dim curWPCount As Long '
'    Dim curComboCnt As Long 'current combo for win/place
'    Dim curComboAllCnt As Long 'current combo all
    
'    Dim sumWin As Double 'Summary Win Value
'    Dim sumPlace As Double 'Summary Place value
'    Dim sumComboCnt As Long 'Summary combo for win/place
'    Dim sumComboAllCnt As Long 'Summary combo all
'
Dim lM As Long
Dim lMQ As Long
Dim lMQR As Long
Dim lMQRX As Long
Dim lMQRXY As Long
Dim lMR As Long
Dim lMRX As Long
Dim lMRXY As Long
Dim lMX As Long
Dim lMXY As Long
Dim lMY As Long
Dim lQ As Long
Dim lQR As Long
Dim lQRX As Long
Dim lQRXY As Long
Dim lQX As Long
Dim lQXY As Long
Dim lQY As Long
Dim lR As Long
Dim lRX As Long
Dim lRXY As Long
Dim lRY As Long
Dim lX As Long
Dim lXY As Long
Dim lY As Long

Dim aM As Long
Dim aMQ As Long
Dim aMQR As Long
Dim aMQRX As Long
Dim aMQRXY As Long
Dim aMR As Long
Dim aMRX As Long
Dim aMRXY As Long
Dim aMX As Long
Dim aMXY As Long
Dim aMY As Long
Dim aQ As Long
Dim aQR As Long
Dim aQRX As Long
Dim aQRXY As Long
Dim aQX As Long
Dim aQXY As Long
Dim aQY As Long
Dim aR As Long
Dim aRX As Long
Dim aRXY As Long
Dim aRY As Long
Dim aX As Long
Dim aXY As Long
Dim aY As Long

Dim wM As Double
Dim wMQ As Double
Dim wMQR As Double
Dim wMQRX As Double
Dim wMQRXY As Double
Dim wMR As Double
Dim wMRX As Double
Dim wMRXY As Double
Dim wMX As Double
Dim wMXY As Double
Dim wMY As Double
Dim wQ As Double
Dim wQR As Double
Dim wQRX As Double
Dim wQRXY As Double
Dim wQX As Double
Dim wQXY As Double
Dim wQY As Double
Dim wR As Double
Dim wRX As Double
Dim wRXY As Double
Dim wRY As Double
Dim wX As Double
Dim wXY As Double
Dim wY As Double

Dim pM As Double
Dim pMQ As Double
Dim pMQR As Double
Dim pMQRX As Double
Dim pMQRXY As Double
Dim pMR As Double
Dim pMRX As Double
Dim pMRXY As Double
Dim pMX As Double
Dim pMXY As Double
Dim pMY As Double
Dim pQ As Double
Dim pQR As Double
Dim pQRX As Double
Dim pQRXY As Double
Dim pQX As Double
Dim pQXY As Double
Dim pQY As Double
Dim pR As Double
Dim pRX As Double
Dim pRXY As Double
Dim pRY As Double
Dim pX As Double
Dim pXY As Double
Dim pY As Double

Dim wkName As String

Application.DisplayStatusBar = True


'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B2:E26").Select
    Selection.ClearContents
'Set the Range of the combos in the Summary Sheet
    Set sumCombo = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row)
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
  
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
'            wbA.Activate
        For Each sumMyCombo In sumCombo
'                sumLen = Len(sumMyCombo)
' open the sheet
    Workbooks.Open vaFileName
    wkName = ActiveWorkbook.name
    wkName = Left(wkName, 10)
    
    Application.StatusBar = "Processing " & wkName
'    With ActiveWorkbook
        Set curCombo = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, 20)
            For Each curMyCombo In curCombo 'this is col W
                If curMyCombo <> "" Then
                    Select Case sumMyCombo
                    Case "M"
                        If InStr(1, curMyCombo, "M") > 0 _
                        Then
                        lM = lM + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aM = aM + 1
                            wM = wM + curMyCombo.Offset(0, -4)
                            pM = pM + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQ"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lMQ = lMQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQ = aMQ + 1
                            wMQ = wMQ + curMyCombo.Offset(0, -4)
                            pMQ = pMQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQR"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMQR = lMQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQR = aMQR + 1
                            wMQR = wMQR + curMyCombo.Offset(0, -4)
                            pMQR = pMQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQRX"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lMQRX = lMQRX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQRX = aMQRX + 1
                            wMQRX = wMQRX + curMyCombo.Offset(0, -4)
                            pMQRX = pMQRX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MQRXY"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMQRXY = lMQRXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMQRXY = aMQRXY + 1
                            wMQRXY = wMQRXY + curMyCombo.Offset(0, -4)
                            pMQRXY = pMQRXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MR"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lMR = lMR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMR = aMR + 1
                            wMR = wMR + curMyCombo.Offset(0, -4)
                            pMR = pMR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MRX"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lMRX = lMRX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMRX = aMRX + 1
                            wMRX = wMRX + curMyCombo.Offset(0, -4)
                            pMRX = pMRX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MRXY"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMRXY = lMRXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMRXY = aMRXY + 1
                            wMRXY = wMRXY + curMyCombo.Offset(0, -4)
                            pMRXY = pMRXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MX"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lMX = lMX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMX = aMX + 1
                            wMX = wMX + curMyCombo.Offset(0, -4)
                            pMX = pMX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MXY"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMXY = lMXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMXY = aMXY + 1
                            wMXY = wMXY + curMyCombo.Offset(0, -4)
                            pMXY = pMXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "MY"
                        If InStr(1, curMyCombo, "M") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lMY = lMY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aMY = aMY + 1
                            wMY = wMY + curMyCombo.Offset(0, -4)
                            pMY = pMY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Q"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        Then
                        lQ = lQ + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQ = aQ + 1
                            wQ = wQ + curMyCombo.Offset(0, -4)
                            pQ = pQ + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QR"
                        If InStr(1, curMyCombo, "Q") > 0 _
                          And InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lQR = lQR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQR = aQR + 1
                            wQR = wQR + curMyCombo.Offset(0, -4)
                            pQR = pQR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QRX"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lQRX = lQRX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQRX = aQRX + 1
                            wQRX = wQRX + curMyCombo.Offset(0, -4)
                            pQRX = pQRX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QRXY"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lQRXY = lQRXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQRXY = aQRXY + 1
                            wQRXY = wQRXY + curMyCombo.Offset(0, -4)
                            pQRXY = pQRXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QX"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lQX = lQX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQX = aQX + 1
                            wQX = wQX + curMyCombo.Offset(0, -4)
                            pQX = pQX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QXY"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lQXY = lQXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQXY = aQXY + 1
                            wQXY = wQXY + curMyCombo.Offset(0, -4)
                            pQXY = pQXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "QY"
                        If InStr(1, curMyCombo, "Q") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lQY = lQY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aQY = aQY + 1
                            wQY = wQY + curMyCombo.Offset(0, -4)
                            pQY = pQY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "R"
                        If InStr(1, curMyCombo, "R") > 0 _
                        Then
                        lR = lR + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aR = aR + 1
                            wR = wR + curMyCombo.Offset(0, -4)
                            pR = pR + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "RX"
                        If InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lRX = lRX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aRX = aRX + 1
                            wRX = wRX + curMyCombo.Offset(0, -4)
                            pRX = pRX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "RXY"
                        If InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "X") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lRXY = lRXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aRXY = aRXY + 1
                            wRXY = wRXY + curMyCombo.Offset(0, -4)
                            pRXY = pRXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "RY"
                        If InStr(1, curMyCombo, "R") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lRY = lRY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aRY = aRY + 1
                            wRY = wRY + curMyCombo.Offset(0, -4)
                            pRY = pRY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "X"
                        If InStr(1, curMyCombo, "X") > 0 _
                        Then
                        lX = lX + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aX = aX + 1
                            wX = wX + curMyCombo.Offset(0, -4)
                            pX = pX + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "XY"
                        If InStr(1, curMyCombo, "X") > 0 _
                        And InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lXY = lXY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aXY = aXY + 1
                            wXY = wXY + curMyCombo.Offset(0, -4)
                            pXY = pXY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                    Case "Y"
                        If InStr(1, curMyCombo, "Y") > 0 _
                        Then
                        lY = lY + 1
                            If curMyCombo.Offset(0, -1) <> "" Then
                            aY = aY + 1
                            wY = wY + curMyCombo.Offset(0, -4)
                            pY = pY + curMyCombo.Offset(0, -3)
                            End If
                        End If
                End Select
            End If
        Next curMyCombo
 '       .Close
 '       End With
    Next sumMyCombo
    ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
' Win Place Combo
'Worksheets("ComboSummary").Cells(2, 2).Value = aM
Worksheets("ComboSummary").Cells(2, 2).value = aM
Worksheets("ComboSummary").Cells(3, 2).value = aMQ
Worksheets("ComboSummary").Cells(4, 2).value = aMQR
Worksheets("ComboSummary").Cells(5, 2).value = aMQRX
Worksheets("ComboSummary").Cells(6, 2).value = aMQRXY
Worksheets("ComboSummary").Cells(7, 2).value = aMR
Worksheets("ComboSummary").Cells(8, 2).value = aMRX
Worksheets("ComboSummary").Cells(9, 2).value = aMRXY
Worksheets("ComboSummary").Cells(10, 2).value = aMX
Worksheets("ComboSummary").Cells(11, 2).value = aMXY
Worksheets("ComboSummary").Cells(12, 2).value = aMY
Worksheets("ComboSummary").Cells(13, 2).value = aQ
Worksheets("ComboSummary").Cells(14, 2).value = aQR
Worksheets("ComboSummary").Cells(15, 2).value = aQRX
Worksheets("ComboSummary").Cells(16, 2).value = aQRXY
Worksheets("ComboSummary").Cells(17, 2).value = aQX
Worksheets("ComboSummary").Cells(18, 2).value = aQXY
Worksheets("ComboSummary").Cells(19, 2).value = aQY
Worksheets("ComboSummary").Cells(20, 2).value = aR
Worksheets("ComboSummary").Cells(21, 2).value = aRX
Worksheets("ComboSummary").Cells(22, 2).value = aRXY
Worksheets("ComboSummary").Cells(23, 2).value = aRY
Worksheets("ComboSummary").Cells(24, 2).value = aX
Worksheets("ComboSummary").Cells(25, 2).value = aXY
Worksheets("ComboSummary").Cells(26, 2).value = aY
    
' Bet Combo All
'Worksheets("ComboSummary").Cells(2, 3).Value = lM
Worksheets("ComboSummary").Cells(2, 3).value = lM
Worksheets("ComboSummary").Cells(3, 3).value = lMQ
Worksheets("ComboSummary").Cells(4, 3).value = lMQR
Worksheets("ComboSummary").Cells(5, 3).value = lMQRX
Worksheets("ComboSummary").Cells(6, 3).value = lMQRXY
Worksheets("ComboSummary").Cells(7, 3).value = lMR
Worksheets("ComboSummary").Cells(8, 3).value = lMRX
Worksheets("ComboSummary").Cells(9, 3).value = lMRXY
Worksheets("ComboSummary").Cells(10, 3).value = lMX
Worksheets("ComboSummary").Cells(11, 3).value = lMXY
Worksheets("ComboSummary").Cells(12, 3).value = lMY
Worksheets("ComboSummary").Cells(13, 3).value = lQ
Worksheets("ComboSummary").Cells(14, 3).value = lQR
Worksheets("ComboSummary").Cells(15, 3).value = lQRX
Worksheets("ComboSummary").Cells(16, 3).value = lQRXY
Worksheets("ComboSummary").Cells(17, 3).value = lQX
Worksheets("ComboSummary").Cells(18, 3).value = lQXY
Worksheets("ComboSummary").Cells(19, 3).value = lQY
Worksheets("ComboSummary").Cells(20, 3).value = lR
Worksheets("ComboSummary").Cells(21, 3).value = lRX
Worksheets("ComboSummary").Cells(22, 3).value = lRXY
Worksheets("ComboSummary").Cells(23, 3).value = lRY
Worksheets("ComboSummary").Cells(24, 3).value = lX
Worksheets("ComboSummary").Cells(25, 3).value = lXY
Worksheets("ComboSummary").Cells(26, 3).value = lY

    
' Win
'Worksheets("ComboSummary").Cells(2, 4).Value = wM / lM
Worksheets("ComboSummary").Cells(2, 4).value = wM / lM
Worksheets("ComboSummary").Cells(3, 4).value = wMQ / lMQ
Worksheets("ComboSummary").Cells(4, 4).value = wMQR / lMQR
Worksheets("ComboSummary").Cells(5, 4).value = wMQRX / lMQRX
Worksheets("ComboSummary").Cells(6, 4).value = wMQRXY / lMQRXY
Worksheets("ComboSummary").Cells(7, 4).value = wMR / lMR
Worksheets("ComboSummary").Cells(8, 4).value = wMRX / lMRX
Worksheets("ComboSummary").Cells(9, 4).value = wMRXY / lMRXY
Worksheets("ComboSummary").Cells(10, 4).value = wMX / lMX
Worksheets("ComboSummary").Cells(11, 4).value = wMXY / lMXY
Worksheets("ComboSummary").Cells(12, 4).value = wMY / lMY
Worksheets("ComboSummary").Cells(13, 4).value = wQ / lQ
Worksheets("ComboSummary").Cells(14, 4).value = wQR / lQR
Worksheets("ComboSummary").Cells(15, 4).value = wQRX / lQRX
Worksheets("ComboSummary").Cells(16, 4).value = wQRXY / lQRXY
Worksheets("ComboSummary").Cells(17, 4).value = wQX / lQX
Worksheets("ComboSummary").Cells(18, 4).value = wQXY / lQXY
Worksheets("ComboSummary").Cells(19, 4).value = wQY / lQY
Worksheets("ComboSummary").Cells(20, 4).value = wR / lR
Worksheets("ComboSummary").Cells(21, 4).value = wRX / lRX
Worksheets("ComboSummary").Cells(22, 4).value = wRXY / lRXY
Worksheets("ComboSummary").Cells(23, 4).value = wRY / lRY
Worksheets("ComboSummary").Cells(24, 4).value = wX / lX
Worksheets("ComboSummary").Cells(25, 4).value = wXY / lXY
Worksheets("ComboSummary").Cells(26, 4).value = wY / lY


    
'Place
'Worksheets("ComboSummary").Cells(2, 5).Value = pM / lM
Worksheets("ComboSummary").Cells(2, 5).value = pM / lM
Worksheets("ComboSummary").Cells(3, 5).value = pMQ / lMQ
Worksheets("ComboSummary").Cells(4, 5).value = pMQR / lMQR
Worksheets("ComboSummary").Cells(5, 5).value = pMQRX / lMQRX
Worksheets("ComboSummary").Cells(6, 5).value = pMQRXY / lMQRXY
Worksheets("ComboSummary").Cells(7, 5).value = pMR / lMR
Worksheets("ComboSummary").Cells(8, 5).value = pMRX / lMRX
Worksheets("ComboSummary").Cells(9, 5).value = pMRXY / lMRXY
Worksheets("ComboSummary").Cells(10, 5).value = pMX / lMX
Worksheets("ComboSummary").Cells(11, 5).value = pMXY / lMXY
Worksheets("ComboSummary").Cells(12, 5).value = pMY / lMY
Worksheets("ComboSummary").Cells(13, 5).value = pQ / lQ
Worksheets("ComboSummary").Cells(14, 5).value = pQR / lQR
Worksheets("ComboSummary").Cells(15, 5).value = pQRX / lQRX
Worksheets("ComboSummary").Cells(16, 5).value = pQRXY / lQRXY
Worksheets("ComboSummary").Cells(17, 5).value = pQX / lQX
Worksheets("ComboSummary").Cells(18, 5).value = pQXY / lQXY
Worksheets("ComboSummary").Cells(19, 5).value = pQY / lQY
Worksheets("ComboSummary").Cells(20, 5).value = pR / lR
Worksheets("ComboSummary").Cells(21, 5).value = pRX / lRX
Worksheets("ComboSummary").Cells(22, 5).value = pRXY / lRXY
Worksheets("ComboSummary").Cells(23, 5).value = pRY / lRY
Worksheets("ComboSummary").Cells(24, 5).value = pX / lX
Worksheets("ComboSummary").Cells(25, 5).value = pXY / lXY
Worksheets("ComboSummary").Cells(26, 5).value = pY / lY


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
Application.StatusBar = ""

End Sub
Sub Get_A_Counts()
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 7/10/12
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Variant 'summary sheet
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim sumBet          As Long 'count of bets
    Dim sumWin          As Double 'total of wins
    Dim sumPlace        As Double
    Dim myCol           As Range 'col AU
    Dim myX             As Range

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    Range("B4:D4").Select
    Selection.ClearContents
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
  
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
' open the sheet
        Workbooks.Open vaFileName
'    With ActiveWorkbook
            Set myCol = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, -2)
                For Each myX In myCol 'this is col A
                    If myX.Interior.ColorIndex = 3 Then
                        sumBet = sumBet + 1
                        sumWin = sumWin + myX.Offset(0, 18) 'col S
                        sumPlace = sumPlace + myX.Offset(0, 19) 'col T
                    End If
                Next myX
        ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With

wbA.Activate
Worksheets("AUsummary").Cells(4, 2).value = sumBet
Worksheets("AUsummary").Cells(4, 3).value = sumWin / sumBet
Worksheets("AUsummary").Cells(4, 4).value = sumPlace / sumBet

' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
                    


End Sub
Sub Get_SummaryWinners()
' works on sheet 'SUMMARY - winners.xls'
' use results to update macro 'Horses BuildExpScore()'
' use CountColoredCells() with sheet "SUMMARY - count ColoredCells.xls" to get the values of D6 etc below
' loops through a directory of sheets and adds
' values from various cells and
' returns these to the summary sheet
' chuck 7/10/12
' the resulting data is output to: C:\FILES\Horses\TempSummaryWinners.txt
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Variant 'summary sheet
    Dim wbA1            As Variant
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim myCol           As Range '
    Dim myX             As Range
    Dim mySumm          As Range
    Dim myY             As Range
  '  Dim myCut           As Range
    Dim myRow           As Long
    Dim mySumRow        As Long
    Dim myDate          As String
    Dim myTrack         As String
    Dim myRace          As String
    Dim myDist          As String
    
    Dim rSheet          As String
    Dim rYear           As String
    Dim rMonth          As String
    Dim rDay            As String
    
    Dim lF              As Long
    Dim lG              As Long
    Dim lG2              As Long
    Dim lH              As Long
    Dim lH2              As Long
    Dim lH3              As Long
    Dim lH4              As Long
    Dim lI              As Long
    Dim lJ              As Long
    Dim lK              As Long
    Dim lK2              As Long
    Dim lL              As Long
    Dim lM              As Long
    'Dim lN              As Long 'not using
    Dim lO              As Long
    Dim lO2              As Long
    Dim lP              As Long
    Dim lQ              As Long
    Dim lQ2              As Long
    Dim lR              As Long
    Dim lR2              As Long
    Dim lR3              As Long
    Dim lR4              As Long
    Dim lS              As Long
    Dim lS2              As Long
    Dim lT              As Long
    Dim lT2              As Long
    Dim lW              As Long
    Dim lW2              As Long
    Dim lW3              As Long
    Dim lX              As Long
    Dim lX2              As Long
    Dim lX3              As Long
    Dim lY             As Long
    Dim lY2             As Long
    Dim lY3             As Long
    Dim lAP             As Long
    Dim lAP2            As Long
    Dim lAP3            As Long
    

    Dim E6          As Long
    Dim F6          As Long
    Dim F19         As Long
    Dim G6          As Long
    Dim G12         As Long
    Dim G19         As Long
    Dim G15         As Long
    Dim H19         As Long
    Dim I19         As Long
    Dim J6          As Long
    Dim J19         As Long
    Dim K6          As Long
    Dim L6          As Long
    Dim N6          As Long
    Dim N19         As Long
    Dim O6          As Long
    Dim P6          As Long
    Dim P19         As Long
    Dim Q6          As Long
    Dim Q12         As Long
    Dim Q19         As Long
    Dim Q15         As Long
    Dim R6          As Long
    Dim R19         As Long
    Dim S6          As Long
    Dim S19         As Long
    Dim V6          As Long
    Dim V19         As Long
    Dim V7          As Long
    Dim W6          As Long
    Dim W19         As Long
    Dim W15         As Long
    Dim X6          As Long
    Dim X19         As Long
    Dim X15         As Long

Dim LogFileName As String
Dim FileNum As Integer

Application.DisplayStatusBar = True
  
  'use CountColoredCells() to get these values
'####
'For updating SummaryBuilder!GetSummaryWinners()
'Data obtained from SummaryBuilder!CountColoredCells()
'
E6 = 55
F6 = 12
F19 = 20
G6 = 9
G12 = 16
G19 = 21
G15 = 18
H19 = 50
I19 = 50
J6 = 19
J19 = 29
K6 = 29
L6 = 80
N6 = 21
N19 = 49
O6 = 11
P6 = 11
P19 = 4
Q6 = 6
Q12 = 1
Q19 = 3
Q15 = 35
R6 = 11
R19 = 18
S6 = 11
S19 = 15
V7 = 7
V6 = 11
V19 = 10
W6 = 11
W19 = 24
W15 = 30
X6 = 13
X19 = 14
X15 = 25

'GoTo here:
'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
    mySumRow = Range("A65536").End(xlUp).Row + 1
'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
' open the sheet
        Workbooks.Open vaFileName
' With ActiveWorkbook
            Set wbA1 = ActiveWorkbook
            rSheet = ActiveWorkbook.name
            ' eg 2019-09-22 Sunshine-Coast-BR.xls
            Application.StatusBar = "Processing " & Left(rSheet, 10) 'just the date
            rYear = Left(rSheet, 4) 'year
            rMonth = Mid(rSheet, 6, 2) ' month
            rDay = Mid(rSheet, 9, 2) ' day
            myDate = rYear & "/" & rMonth & "/" & rDay
            myTrack = Mid(rSheet, 12, Len(rSheet))
            myTrack = Left(myTrack, InStr(1, myTrack, ".") - 1)
            
            Set myCol = Range("D2:D" & Range("D" & Rows.count).End(xlUp).Row)
                For Each myX In myCol 'this is col D
                    If myX = "" And myX.Offset(0, -3) <> "" Then
                        myRace = myX.Offset(0, -3).value
                        myDist = myX.Offset(0, -2).value
                    End If
                    If myX <> "" And myX.Offset(0, -2) = "1" Then
                        myRow = myX.Row
                        Range("D" & myRow & ":X" & myRow).Copy
                        wbA.Activate
                        Cells(mySumRow, 1) = myDate
                        Cells(mySumRow, 2) = myTrack
                        Cells(mySumRow, 3) = myRace
                        Cells(mySumRow, 4) = myDist
                        Range("E" & mySumRow & ":Y" & mySumRow).PasteSpecial
                        mySumRow = mySumRow + 1
                        wbA1.Activate
                    End If
                Next myX
        ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With
'enter the counts for the summary sheet
    wbA.Activate
'here:
    mySumRow = Range("E65536").End(xlUp).Row
    Set mySumm = Range("E2:E" & Range("E" & Rows.count).End(xlUp).Row)
        For Each myY In mySumm 'this is col E
'F Last 10 (E)
            If myY.Offset(0, 1).Interior.ColorIndex = 6 Then
                lF = lF + 1
            End If
'G Horse (F)
            If myY.Offset(0, 2).Interior.ColorIndex = 6 Then
                lG = lG + 1
            ElseIf myY.Offset(0, 2).Interior.ColorIndex = 19 Then
                lG2 = lG2 + 1
            End If
'H jockey (G)
            If myY.Offset(0, 3).Interior.ColorIndex = 6 Then
                lH = lH + 1
            ElseIf myY.Offset(0, 3).Interior.ColorIndex = 12 Then
                lH2 = lH2 + 1
            ElseIf myY.Offset(0, 3).Interior.ColorIndex = 19 Then
                lH3 = lH3 + 1
            ElseIf myY.Offset(0, 3).Interior.ColorIndex = 15 Then
                lH4 = lH4 + 1
            End If
'I Barrier (H)
            If myY.Offset(0, 4).Interior.ColorIndex = 19 Then 'pale yellow
                lI = lI + 1
            End If
'J Weight (I)
            If myY.Offset(0, 5).Interior.ColorIndex = 19 Then
                lJ = lJ + 1
            End If
'K HTrack (J) 6, 19
            If myY.Offset(0, 6).Interior.ColorIndex = 6 Then
                lK = lK + 1
            ElseIf myY.Offset(0, 6).Interior.ColorIndex = 19 Then
                lK2 = lK2 + 1
            End If
'L HDate (K)
            If myY.Offset(0, 7).Interior.ColorIndex = 6 Then
                lL = lL + 1
            End If
'M HDistance (L) 6
            If myY.Offset(0, 8).Interior.ColorIndex = 6 Then
                lM = lM + 1
            End If
'N HWeight (M)
           ' If myY.Offset(0, 9).Interior.ColorIndex = 6 Then
           '     lN = lN + 1
           ' End If
'O HTime (N) 6, 19
            If myY.Offset(0, 10).Interior.ColorIndex = 6 Then
                lO = lO + 1
            ElseIf myY.Offset(0, 10).Interior.ColorIndex = 19 Then
                lO2 = lO2 + 1
            End If
'P MPS (O) 6
            If myY.Offset(0, 11).Interior.ColorIndex = 6 Then
                lP = lP + 1
            End If
'Q AMPS (P) 6, 19
            If myY.Offset(0, 12).Interior.ColorIndex = 6 Then
                lQ = lQ + 1
            ElseIf myY.Offset(0, 12).Interior.ColorIndex = 19 Then
                lQ2 = lQ2 + 1
            End If
' R Trainer (Q) 6, 12, 19, 15
            If myY.Offset(0, 13).Interior.ColorIndex = 6 Then
                lR = lR + 1
            ElseIf myY.Offset(0, 13).Interior.ColorIndex = 12 Then
                lR2 = lR2 + 1
            ElseIf myY.Offset(0, 13).Interior.ColorIndex = 19 Then
                lR3 = lR3 + 1
            ElseIf myY.Offset(0, 13).Interior.ColorIndex = 15 Then
                lR4 = lR4 + 1
            End If
'S CalcFinish (R) 6, 19
            If myY.Offset(0, 14).Interior.ColorIndex = 6 Then
                lS = lS + 1
            ElseIf myY.Offset(0, 14).Interior.ColorIndex = 19 Then
                lS2 = lS2 + 1
            End If
'T Adjusted Finish (S) 6, 19
            If myY.Offset(0, 15).Interior.ColorIndex = 6 Then
                lT = lT + 1
            ElseIf myY.Offset(0, 15).Interior.ColorIndex = 19 Then
                lT2 = lT2 + 1
            End If
'W HValue (V) 7, 6, 19
            If myY.Offset(0, 18).Interior.ColorIndex = 7 Then
                lW = lW + 1
            ElseIf myY.Offset(0, 18).Interior.ColorIndex = 6 Then
                lW2 = lW2 + 1
            ElseIf myY.Offset(0, 18).Interior.ColorIndex = 19 Then
                lW3 = lW3 + 1
            End If
'X MPS600 (W) 6, 19, 15
            If myY.Offset(0, 19).Interior.ColorIndex = 6 Then
                lX = lX + 1
            ElseIf myY.Offset(0, 19).Interior.ColorIndex = 19 Then
                lX2 = lX2 + 1
            ElseIf myY.Offset(0, 19).Interior.ColorIndex = 15 Then
                lX3 = lX3 + 1
            End If
'Y Formcount (X) 6, 19, 15
            If myY.Offset(0, 20).Interior.ColorIndex = 6 Then
                lY = lY + 1
            ElseIf myY.Offset(0, 20).Interior.ColorIndex = 19 Then
                lY2 = lY2 + 1
            ElseIf myY.Offset(0, 20).Interior.ColorIndex = 15 Then
                lY3 = lY3 + 1
            End If
'AP FormCount (AN) 6, 19, 15
'            If myY.Offset(0, 37).Interior.ColorIndex = 6 Then
'                lAP = lAP + 1
'            ElseIf myY.Offset(0, 37).Interior.ColorIndex = 19 Then
'                lAP2 = lAP2 + 1
'            ElseIf myY.Offset(0, 37).Interior.ColorIndex = 15 Then
'                lAP3 = lAP3 + 1
'            End If
        Next myY
'here:
'mySumRow = 371
'lF = 100
'Writes the final counts to a text file for copy and paste to Horses BuildExpScore()
LogFileName = "C:\FILES\Horses\TempSummaryWinners.txt"

FileNum = FreeFile ' next file number
'Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Open LogFileName For Output As #FileNum
Print #FileNum, "'For updating Horses!BuildExpScore()"
Print #FileNum, "'Data obtained from SummaryBuilder!GetSummaryWinners()"
Print #FileNum, "'"

'Set up the summary
    Range("D" & mySumRow + 3 & ":E" & mySumRow + 8).NumberFormat = "@"
    Cells(mySumRow + 3, 4).Interior.ColorIndex = 6
    Cells(mySumRow + 3, 5) = "6"
    Cells(mySumRow + 4, 4).Interior.ColorIndex = 12
    Cells(mySumRow + 4, 5) = "12"
    Cells(mySumRow + 5, 4).Interior.ColorIndex = 19
    Cells(mySumRow + 5, 5) = "19"
    Cells(mySumRow + 6, 4).Interior.ColorIndex = 15
    Cells(mySumRow + 6, 5) = "15"
    Cells(mySumRow + 7, 4).Interior.ColorIndex = 7
    Cells(mySumRow + 7, 5) = "7"
    
    Range("D" & mySumRow + 2 & ":Y" & mySumRow + 2).NumberFormat = "@"
    'Range("F" & mySumRow + 3 & ":Y" & mySumRow + 7).NumberFormat = "0.00"
    Range("F" & mySumRow + 3 & ":Y" & mySumRow + 7).NumberFormat = "0"
    
'Now using
' (Count of winners / % of colored cells eg E6) * 100 = points
' mysumrow not used, that has prev been counted in count color cells
'F Last 10 (E)
    Cells(mySumRow + 2, 6) = "E" 'last 10
    'Cells(mySumRow + 3, 6) = (lF - (lF * D6)) / mySumRow
    'Cells(mySumRow + 3, 6) = (1 - (lF / mySumRow)) * E6
    Cells(mySumRow + 3, 6) = (lF / E6)
    'Print #FileNum, "E6 = " & Format((1 - (lF / mySumRow)) * E6, "0.00")
    'Print #FileNum, "lE = " & Format(((1 - (lF / mySumRow)) * E6) * 100, "00") & "  'last10 - color 6"
    Print #FileNum, "lE = " & Format((lF / E6), "00") & "  'last10 - color 6"
    ''(1-(lF / mySumRow))*d6
  '  Cells(mySumRow + 3, 6).NumberFormat = "0.00"
  '  If lF / mySumRow > 0.5 Then
  '      Cells(mySumRow + 3, 6).Interior.ColorIndex = 6
  '  End If
'G Horse (F) 6, 19
    Cells(mySumRow + 2, 7) = "F" 'Horse
    'Cells(mySumRow + 3, 7) = (lG - (lG * E6)) / mySumRow 'color 6
    Cells(mySumRow + 3, 7) = (lG / F6) 'color 6
    'Cells(mySumRow + 5, 7) = (lG2 - (lG2 * E19)) / mySumRow 'color 19
    Cells(mySumRow + 5, 7) = (lG2 / F19) 'color 19
    Print #FileNum, "lF = " & Format((lG / F6), "00") & "  'Horse - rating 6"
    Print #FileNum, "lF2 = " & Format((lG2 / F19), "00") & "  'Horse rating 19"
    'Cells(mySumRow + 3, 7).NumberFormat = "0.00"
    'If lG / mySumRow > 0.5 Then
    '    Cells(mySumRow + 3, 7).Interior.ColorIndex = 6
    'End If
'H jockey (G) 6, 12, 19, 15
    Cells(mySumRow + 2, 8) = "G"
    'Cells(mySumRow + 3, 8) = (lH - (lH * F6)) / mySumRow '6
    'Cells(mySumRow + 4, 8) = (lH2 - (lH2 * F12)) / mySumRow '12
    'Cells(mySumRow + 5, 8) = (lH3 - (lH3 * F19)) / mySumRow '19
    'Cells(mySumRow + 6, 8) = (lH4 - (lH4 * F15)) / mySumRow '15
    
    Cells(mySumRow + 3, 8) = (lH / G6) '6
    Print #FileNum, "lG = " & Format((lH / G6), "00") & "  'Jockey 6"
    Cells(mySumRow + 4, 8) = (lH2 / G12) '12
    Print #FileNum, "lG2 = " & Format((lH2 / G12), "00") & "  'Jockey 12"
    Cells(mySumRow + 5, 8) = (lH3 / G19) '19
    Print #FileNum, "lG3 = " & Format((lH3 / G19), "00") & "  'jockey 19"
    Cells(mySumRow + 6, 8) = (lH4 / G15) '15
    Print #FileNum, "lG4 = " & Format((lH4 / G15), "00") & "  'jockey 15"
    'Cells(mySumRow + 2, 8).NumberFormat = "0.00"
    'If lH / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 8).Interior.ColorIndex = 6
    'End If
'I Barrier (H) 19
    Cells(mySumRow + 2, 9) = "H"
    'Cells(mySumRow + 5, 9) = (lI - (lI * G19)) / mySumRow
    Cells(mySumRow + 5, 9) = (lI / H19)
    Print #FileNum, "lH = " & Format((lI / H19), "00") & "  'barrier 19"
    'Cells(mySumRow + 2, 9).NumberFormat = "0.00"
    'If lI / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 9).Interior.ColorIndex = 6
    'End If
'J Weight (I) 19
    Cells(mySumRow + 2, 10) = "I"
    'Cells(mySumRow + 5, 10) = (lJ - (lJ * H19)) / mySumRow
    Cells(mySumRow + 5, 10) = (lJ / I19)
    Print #FileNum, "lI = " & Format((lJ / I19), "00") & "  'weight 19"
    'Cells(mySumRow + 2, 10).NumberFormat = "0.00"
    'If lJ / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 10).Interior.ColorIndex = 6
    'End If
'K HTrack (J) 6, 19
    Cells(mySumRow + 2, 11) = "J"
    'Cells(mySumRow + 3, 11) = (lK - (lK * I6)) / mySumRow
    'Cells(mySumRow + 5, 11) = (lK2 - (lK2 * I19)) / mySumRow
    
    Cells(mySumRow + 3, 11) = (lK / J6)
    Print #FileNum, "lJ = " & Format((lK / J6), "00") & "  'Htrack 6"
    Cells(mySumRow + 5, 11) = (lK2 / J19)
    Print #FileNum, "lJ2 = " & Format((lK2 / J19), "00") & "  'Htrack 19"
    'Cells(mySumRow + 2, 11).NumberFormat = "0.00"
    'If lK / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 11).Interior.ColorIndex = 6
    'End If
'L HDate (K) 6
    Cells(mySumRow + 2, 12) = "K"
    'Cells(mySumRow + 3, 12) = (lL - (lL * J6)) / mySumRow
    Cells(mySumRow + 3, 12) = (lL / K6)
    Print #FileNum, "lK = " & Format((lL / K6), "00") & "  'Hdate 6"
    'Cells(mySumRow + 2, 12).NumberFormat = "0.00"
    'If lL / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 12).Interior.ColorIndex = 6
    'End If
'M HDistance (L) 6
    Cells(mySumRow + 2, 13) = "L"
    'Cells(mySumRow + 3, 13) = (lM - (lM * K6)) / mySumRow
    Cells(mySumRow + 3, 13) = (lM / L6)
    Print #FileNum, "lL = " & Format((lM / L6), "00") & "  'Hdistance 6"
    'Cells(mySumRow + 2, 13).NumberFormat = "0.00"
    'If lM / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 13).Interior.ColorIndex = 6
    'End If
'N HWeight (M)
    Cells(mySumRow + 2, 14) = "M"
   ' Cells(mySumRow + 2, 14) = lN / mySumRow
   ' Cells(mySumRow + 2, 14).NumberFormat = "0.00"
   ' If lN / mySumRow > 0.5 Then
   '     Cells(mySumRow + 2, 14).Interior.ColorIndex = 6
   ' End If
'O HTime (N) 6, 19
    Cells(mySumRow + 2, 15) = "N"
    'Cells(mySumRow + 3, 15) = lO / mySumRow
    'Cells(mySumRow + 5, 15) = lO2 / mySumRow
    
    Cells(mySumRow + 3, 15) = (lO / N6)
    Print #FileNum, "lN = " & Format((lO / N6), "00") & "  'Htime 6"
    Cells(mySumRow + 5, 15) = (lO2 / N19)
    Print #FileNum, "lN2 = " & Format((lO2 / N19), "00") & "  '19"
    'Cells(mySumRow + 5, 15).NumberFormat = "0.00"
    'If lO / mySumRow > 0.3 Then
    '    Cells(mySumRow + 2, 15).Interior.ColorIndex = 6
    'End If
'P MPS (O) 6
    Cells(mySumRow + 2, 16) = "O"
    'Cells(mySumRow + 3, 16) = (lP - (lP * N6)) / mySumRow
    Cells(mySumRow + 3, 16) = (lP / O6)
    Print #FileNum, "lO = " & Format((lP / O6), "00") & "  'MPS 6"
    'Cells(mySumRow + 2, 16).NumberFormat = "0.00"
    'If lP / mySumRow > 0.15 Then
    '    Cells(mySumRow + 2, 16).Interior.ColorIndex = 6
    'End If
'Q AMPS (P) 6, 19
    Cells(mySumRow + 2, 17) = "P"
    'Cells(mySumRow + 3, 17) = (lQ - (lQ * O6)) / mySumRow
    'Cells(mySumRow + 5, 17) = (lQ2 - (lQ2 * O19)) / mySumRow
    
    Cells(mySumRow + 3, 17) = (lQ / P6)
    Print #FileNum, "lP = " & Format((lQ / P6), "00") & "  'AMPS 6"
    Cells(mySumRow + 5, 17) = (lQ2 / P19)
    Print #FileNum, "lP2 = " & Format((lQ2 / P19), "00") & "  '19"
    'Cells(mySumRow + 2, 17).NumberFormat = "0.00"
    'If lQ / mySumRow > 0.15 Then
    '    Cells(mySumRow + 2, 17).Interior.ColorIndex = 6
    'End If
' R Trainer (Q) 6, 12, 19, 15
    Cells(mySumRow + 2, 18) = "Q"
    'Cells(mySumRow + 3, 18) = (lR - (lR * P6)) / mySumRow
    'Cells(mySumRow + 4, 18) = (lR2 - (lR2 * P12)) / mySumRow
    'Cells(mySumRow + 5, 18) = (lr3 - (lr3 * P19)) / mySumRow
    'Cells(mySumRow + 6, 18) = (lR4 - (lR4 * P15)) / mySumRow
    
    Cells(mySumRow + 3, 18) = (lR / Q6)
    Print #FileNum, "lQ = " & Format((lR / Q6), "00") & "  'trainer 6"
    Cells(mySumRow + 4, 18) = (lR2 / Q12)
    Print #FileNum, "lQ2 = " & Format((lR2 / Q12), "00") & "  '12"
    Cells(mySumRow + 5, 18) = (lR3 / Q19)
    Print #FileNum, "lQ3 = " & Format((lR3 / Q19), "00") & "  '19"
    Cells(mySumRow + 6, 18) = (lR4 / Q15)
    Print #FileNum, "lQ4 = " & Format((lR4 / Q15), "00") & "  '15"
    'Cells(mySumRow + 2, 18).NumberFormat = "0.00"
    'If lR / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 18).Interior.ColorIndex = 6
    'End If
'S CalcFinish (R) 6, 19
    Cells(mySumRow + 2, 19) = "R"
    'Cells(mySumRow + 3, 19) = (lS - (lS * Q6)) / mySumRow
    'Cells(mySumRow + 5, 19) = (lS2 - (lS2 * Q19)) / mySumRow
    
    Cells(mySumRow + 3, 19) = (lS / R6)
    Print #FileNum, "lR = " & Format((lS / R6), "00") & "  'CalcFinish 6"
    Cells(mySumRow + 5, 19) = (lS2 / R19)
    Print #FileNum, "lR2 = " & Format((lS2 / R19), "00") & "  '19"
    'Cells(mySumRow + 2, 19).NumberFormat = "0.00"
    'If lS / mySumRow > 0.15 Then
    '    Cells(mySumRow + 2, 19).Interior.ColorIndex = 6
    'End If
'T Adjusted Finish (S) 6, 19
    Cells(mySumRow + 2, 20) = "S"
    'Cells(mySumRow + 3, 20) = (lT - (lT * R6)) / mySumRow
    'Cells(mySumRow + 5, 20) = (lT2 - (lT2 * R19)) / mySumRow
    
    Cells(mySumRow + 3, 20) = (lT / S6)
    Print #FileNum, "lS = " & Format((lT / S6), "00") & "  'Adjusted Finish 6"
    Cells(mySumRow + 5, 20) = (lT2 / S19)
    Print #FileNum, "lS2 = " & Format((lT2 / S19), "00") & "  '19"
    'Cells(mySumRow + 2, 20).NumberFormat = "0.00"
    'If lT / mySumRow > 0.15 Then
    '    Cells(mySumRow + 2, 20).Interior.ColorIndex = 6
    'End If
'U and V - not used
    Cells(mySumRow + 2, 21) = "T"
    Cells(mySumRow + 2, 22) = "U"
'W HValue (V) 7, 6, 19
    Cells(mySumRow + 2, 23) = "V"
    'Cells(mySumRow + 7, 23) = (lW - (lW * U7)) / mySumRow
    'Cells(mySumRow + 3, 23) = (lW2 - (lW2 * U6)) / mySumRow
    'Cells(mySumRow + 5, 23) = (lW3 - (lW3 * U19)) / mySumRow
    
    Cells(mySumRow + 7, 23) = (lW / V7)
    Print #FileNum, "lV = " & Format((lW / V7), "00") & "  'Hvalue 7"
    Cells(mySumRow + 3, 23) = (lW2 / V6)
    Print #FileNum, "lV2 = " & Format((lW2 / V6), "00") & "  '6"
    Cells(mySumRow + 5, 23) = (lW3 / V19)
    Print #FileNum, "lV3 = " & Format((lW3 / V19), "00") & "  '19"
    'Cells(mySumRow + 2, 23).NumberFormat = "0.00"
    'If lW / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 23).Interior.ColorIndex = 6
    'End If
'X and Y - not used
'    Cells(mySumRow + 2, 24) = "V"
'    Cells(mySumRow + 2, 25) = "W"
'Z Score (X) 7, 6, 19 - don't depend on as it is derived from other columns
'    Cells(mySumRow + 2, 26) = "X"
    'Cells(mySumRow + 7, 26) = (lZ - (lZ * X7)) / mySumRow
    'Cells(mySumRow + 3, 26) = (lZ2 - (lZ2 * X6)) / mySumRow
    'Cells(mySumRow + 5, 26) = (lZ3 - (lZ3 * X19)) / mySumRow
    
'    Cells(mySumRow + 7, 26) = (1 - (lX / mySumRow)) * X7
'    Cells(mySumRow + 3, 26) = (1 - (lX2 / mySumRow)) * X6
'    Cells(mySumRow + 5, 26) = (1 - (lX3 / mySumRow)) * X19
    'Cells(mySumRow + 2, 26).NumberFormat = "0.00"
    'If lZ / mySumRow > 0.5 Then
    '    Cells(mySumRow + 2, 26).Interior.ColorIndex = 6
    'End If
'X MPS600 (W) 6, 19, 15
    Cells(mySumRow + 2, 24) = "W"
    'Cells(mySumRow + 3, 27) = (lAA - (lAA * Y6)) / mySumRow
    'Cells(mySumRow + 5, 27) = (lAA2 - (lAA2 * Y19)) / mySumRow
    'Cells(mySumRow + 6, 27) = (lAA3 - (lAA3 * Y15)) / mySumRow
    
    Cells(mySumRow + 3, 24) = (lX / W6)
    Print #FileNum, "lW = " & Format((lX / W6), "00") & "  'MPS600 6"
    Cells(mySumRow + 5, 24) = (lX2 / W19)
    Print #FileNum, "lW2 = " & Format((lX2 / W19), "00") & "  '19"
    Cells(mySumRow + 6, 24) = (lX3 / W15)
    Print #FileNum, "lW3 = " & Format((lX3 / W15), "00") & "  '15"
    'Cells(mySumRow + 3, 27).NumberFormat = "0.00"
    'If lAA / mySumRow > 0.15 Then
    '    Cells(mySumRow + 2, 27).Interior.ColorIndex = 6
    'End If
 '   Cells(mySumRow + 2, 28) = "Z"
 '   Cells(mySumRow + 2, 29) = "AA"
 '   Cells(mySumRow + 2, 30) = "AB"
 '   Cells(mySumRow + 2, 31) = "AC"
 '   Cells(mySumRow + 2, 32) = "AD"
 '   Cells(mySumRow + 2, 33) = "AE"
 '   Cells(mySumRow + 2, 34) = "AF"
 '   Cells(mySumRow + 2, 35) = "AG"
 '   Cells(mySumRow + 2, 36) = "AH"
 '   Cells(mySumRow + 2, 37) = "AI"
 '   Cells(mySumRow + 2, 38) = "AJ"
 '   Cells(mySumRow + 2, 39) = "AK"
 '   Cells(mySumRow + 2, 40) = "AL"
 '   Cells(mySumRow + 2, 41) = "AM"
'Y FormCount (X) 6, 19, 15
    Cells(mySumRow + 2, 25) = "X"
    'Cells(mySumRow + 3, 42) = (lAP - (lAP * AN6)) / mySumRow
    'Cells(mySumRow + 5, 42) = (lAP2 - (lAP2 * AN19)) / mySumRow
    'Cells(mySumRow + 6, 42) = (lAP3 - (lAP3 * AN15)) / mySumRow
    
    Cells(mySumRow + 3, 25) = (lY / X6)
    Print #FileNum, "lX = " & Format((lY / X6), "00") & "  'Formcount 6"
    Cells(mySumRow + 5, 25) = (lY2 / X19)
    Print #FileNum, "lX2 = " & Format((lY2 / X19), "00") & "  '19"
    Cells(mySumRow + 6, 25) = (lY3 / X15)
    Print #FileNum, "lX3 = " & Format((lY3 / X15), "00") & "  '15"
    
    Close #FileNum ' close the file

' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.StatusBar = ""
                   


End Sub
Private Sub CountColoredCells()
' loops through a directory of sheets and counts the coloured cells in each column
' use on sheet SUMMARY - count ColoredCells.xls
' then use data obtained to enter into macro 'Get_SummaryWinners()'
' the data obtained has been printed to : C:\FILES\Horses\TempCountColoredCellsResults.txt
' chuck 8/6/15
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Variant 'summary sheet
    Dim wbA1            As Variant
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim myCol           As Range '
    Dim myX             As Range
    Dim HorseCnt           As Long
    Dim RaceCnt         As Long
    Dim lE              As Long
    Dim lF              As Long
    Dim lF2             As Long
    Dim lG              As Long
    Dim lG2              As Long
    Dim lG3              As Long
    Dim lG4              As Long
    Dim lH              As Long
    Dim lI              As Long
    Dim lJ              As Long
    Dim lJ2              As Long
    Dim lK              As Long
    Dim lL              As Long
    Dim lN              As Long
    Dim lN2              As Long
    Dim lO              As Long
    Dim lP              As Long
    Dim lP2              As Long
    Dim lQ              As Long '
    Dim lQ2              As Long '
    Dim lQ3              As Long '
    Dim lQ4              As Long '
    Dim lR              As Long '
    Dim lR2              As Long '
    Dim lS              As Long '
    Dim lS2              As Long '
    Dim lV              As Long '
    Dim lV2              As Long '
    Dim lV3              As Long '
    'Dim lX              As Long
    'Dim lX2              As Long
    'Dim lX3              As Long
    Dim lW              As Long
    Dim lW2              As Long
    Dim lW3              As Long
    Dim lX            As Long
    Dim lX2            As Long
    Dim lX3            As Long
    'Dim lAR             As Long
    'Dim lAR2             As Long
   
Dim wkName As String

Dim LogFileName As String
Dim FileNum As Integer

Application.DisplayStatusBar = True
   
'Writes the final counts to a text file for copy and paste to Horses BuildExpScore()

LogFileName = "C:\FILES\Horses\TempCountColoredCellsResults.txt"

FileNum = FreeFile ' next file number
   
'GoTo here:
'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
'Remember the Summary workbook
    Set wbA = ActiveWorkbook
'clear any previous data
    Range("B8").ClearContents
    Range("B9").ClearContents
    Range("D2:Y8").ClearContents

'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

    If .Execute > 0 Then

    For Each vaFileName In .FoundFiles
' open the sheet
        Workbooks.Open vaFileName
        wkName = ActiveWorkbook.name
        wkName = Left(wkName, 10)
    
        Application.StatusBar = "Processing " & wkName
' With ActiveWorkbook
            Set wbA1 = ActiveWorkbook
            Set myCol = Range("D2:D" & Range("D" & Rows.count).End(xlUp).Row)
                For Each myX In myCol 'this is col D
                    If myX = "" And myX.Offset(0, -3) <> "" Then
                        RaceCnt = RaceCnt + 1
                    End If
                    If myX <> "" Then
                        HorseCnt = HorseCnt + 1 'count of horses
                        If myX.Offset(0, 1).Interior.ColorIndex = 6 Then
                            lE = lE + 1
                        End If
                        If myX.Offset(0, 2).Interior.ColorIndex = 6 Then
                            lF = lF + 1
                        ElseIf myX.Offset(0, 2).Interior.ColorIndex = 19 Then
                            lF2 = lF2 + 1
                        End If
                        If myX.Offset(0, 3).Interior.ColorIndex = 6 Then
                            lG = lG + 1
                        ElseIf myX.Offset(0, 3).Interior.ColorIndex = 12 Then
                            lG2 = lG2 + 1
                        ElseIf myX.Offset(0, 3).Interior.ColorIndex = 19 Then
                            lG3 = lG3 + 1
                        ElseIf myX.Offset(0, 3).Interior.ColorIndex = 15 Then
                            lG4 = lG4 + 1
                        End If
                        If myX.Offset(0, 4).Interior.ColorIndex = 19 Then
                            lH = lH + 1
                        End If
                        If myX.Offset(0, 5).Interior.ColorIndex = 19 Then
                            lI = lI + 1
                        End If
                        If myX.Offset(0, 6).Interior.ColorIndex = 6 Then
                            lJ = lJ + 1
                        ElseIf myX.Offset(0, 6).Interior.ColorIndex = 19 Then
                            lJ2 = lJ2 + 1
                        End If
                        If myX.Offset(0, 7).Interior.ColorIndex = 6 Then
                            lK = lK + 1
                        End If
                        If myX.Offset(0, 8).Interior.ColorIndex = 6 Then
                            lL = lL + 1
                        End If
                        ' miss L - weight history
                        If myX.Offset(0, 10).Interior.ColorIndex = 6 Then
                            lN = lN + 1
                        ElseIf myX.Offset(0, 10).Interior.ColorIndex = 19 Then
                            lN2 = lN2 + 1
                        End If
                        If myX.Offset(0, 11).Interior.ColorIndex = 6 Then
                            lO = lO + 1
                        End If
                        If myX.Offset(0, 12).Interior.ColorIndex = 6 Then
                            lP = lP + 1
                        ElseIf myX.Offset(0, 12).Interior.ColorIndex = 19 Then
                            lP2 = lP2 + 1
                        End If
                        If myX.Offset(0, 13).Interior.ColorIndex = 6 Then
                            lQ = lQ + 1
                        ElseIf myX.Offset(0, 13).Interior.ColorIndex = 12 Then
                            lQ2 = lQ2 + 1
                        ElseIf myX.Offset(0, 13).Interior.ColorIndex = 19 Then
                            lQ3 = lQ3 + 1
                        ElseIf myX.Offset(0, 13).Interior.ColorIndex = 15 Then
                            lQ4 = lQ4 + 1
                        End If
                        If myX.Offset(0, 14).Interior.ColorIndex = 6 Then
                            lR = lR + 1
                        ElseIf myX.Offset(0, 14).Interior.ColorIndex = 19 Then
                            lR2 = lR2 + 1
                        End If
                        If myX.Offset(0, 15).Interior.ColorIndex = 6 Then
                            lS = lS + 1
                        ElseIf myX.Offset(0, 15).Interior.ColorIndex = 19 Then
                            lS2 = lS2 + 1
                        End If
                        '
                        If myX.Offset(0, 18).Interior.ColorIndex = 7 Then
                            lV = lV + 1
                        ElseIf myX.Offset(0, 18).Interior.ColorIndex = 6 Then
                            lV2 = lV2 + 1
                        ElseIf myX.Offset(0, 18).Interior.ColorIndex = 19 Then
                            lV3 = lV3 + 1
                        End If
                        '
                        'If myX.Offset(0, 21).Interior.ColorIndex = 7 Then
                        '    lX = lX + 1
                        'ElseIf myX.Offset(0, 21).Interior.ColorIndex = 6 Then
                        '    lX2 = lX2 + 1
                        'ElseIf myX.Offset(0, 21).Interior.ColorIndex = 19 Then
                        '    lX3 = lX3 + 1
                        'End If
                        If myX.Offset(0, 19).Interior.ColorIndex = 6 Then
                            lW = lW + 1
                        ElseIf myX.Offset(0, 19).Interior.ColorIndex = 19 Then
                            lW2 = lW2 + 1
                        ElseIf myX.Offset(0, 19).Interior.ColorIndex = 15 Then
                            lW3 = lW3 + 1
                        End If
                        If myX.Offset(0, 20).Interior.ColorIndex = 6 Then
                            lX = lX + 1
                        ElseIf myX.Offset(0, 20).Interior.ColorIndex = 19 Then
                            lX2 = lX2 + 1
                        ElseIf myX.Offset(0, 20).Interior.ColorIndex = 15 Then
                            lX3 = lX3 + 1
                        End If
                        'If myX.Offset(0, 41).Interior.ColorIndex = 6 Then
                        '    lAR = lAR + 1
                        'ElseIf myX.Offset(0, 41).Interior.ColorIndex = 19 Then
                        '    lAR2 = lAR2 + 1
                        'End If
                    End If
                Next myX
        ActiveWorkbook.Close False
    Next vaFileName
    End If
    End With
'enter the counts for the summary sheet
    wbA.Activate
'here:
    Range("B8").NumberFormat = "0"
    Range("B8").value = HorseCnt
    Range("B9").NumberFormat = "0"
    Range("B9").value = RaceCnt
    'Range("E2:X7").NumberFormat = "0.00"
    Range("E2:X7").NumberFormat = "0"
'######
Open LogFileName For Output As #FileNum
Print #FileNum, "'For updating SummaryBuilder!GetSummaryWinners()"
Print #FileNum, "'Data obtained from SummaryBuilder!CountColoredCells()"
Print #FileNum, "'"

'Not using this any more:
'using minus 1 to get reverse number:
'1D/Horsecnt eg 26/100 = .26
'1-(1D/Horsecnt eg 1-(26/100) = .74
'------------------
'NOW:
'(1E/Horsecnt) * 100 = % of colored cells
'eg (26/100) = 26
'    Range("E2").value = 1 - (lE / HorseCnt) 'yellow
'    Print #FileNum, "E6 = " & Format(1 - (lE / HorseCnt), "0.00")
'    Range("E7").value = 1 - (lE / HorseCnt)
'    Range("F2").value = 1 - (lF / HorseCnt) 'yellow
'    Print #FileNum, "F6 = " & Format(1 - (lF / HorseCnt), "0.00")
'    Range("F4").value = 1 - (lF2 / HorseCnt)
'    Print #FileNum, "F19 = " & Format(1 - (lF2 / HorseCnt), "0.00")
'    Range("F7").value = 1 - ((lF + lF2) / HorseCnt)
'    Range("G2").value = 1 - (lG / HorseCnt)
'    Print #FileNum, "G6 = " & Format(1 - (lG / HorseCnt), "0.00")
'    Range("G3").value = 1 - (lG2 / HorseCnt)
'    Print #FileNum, "G12 = " & Format(1 - (lG2 / HorseCnt), "0.00")
'    Range("G4").value = 1 - (lG3 / HorseCnt)
'    Print #FileNum, "G19 = " & Format(1 - (lG3 / HorseCnt), "0.00")
'    Range("G5").value = 1 - (lG4 / HorseCnt)
'    Print #FileNum, "G15 = " & Format(1 - (lG4 / HorseCnt), "0.00")
'    Range("G7").value = 1 - ((lG + lG2 + lG3 + lG4) / HorseCnt)
'    Range("H4").value = 1 - (lH / HorseCnt)
'    Print #FileNum, "H19 = " & Format(1 - (lH / HorseCnt), "0.00")
'    Range("H7").value = 1 - (lH / HorseCnt)
'    Range("I4").value = 1 - (lI / HorseCnt)
'    Print #FileNum, "I19 = " & Format(1 - (lI / HorseCnt), "0.00")
'    Range("I7").value = 1 - (lI / HorseCnt)
'    Range("J2").value = 1 - (lJ / HorseCnt)
'    Print #FileNum, "J6 = " & Format(1 - (lJ / HorseCnt), "0.00")
'    Range("J4").value = 1 - (lJ2 / HorseCnt)
'    Print #FileNum, "J19 = " & Format(1 - (lJ2 / HorseCnt), "0.00")
'    Range("J7").value = 1 - ((lJ + lJ2) / HorseCnt)
'    Range("K2").value = 1 - (lK / HorseCnt)
'    Print #FileNum, "K6 = " & Format(1 - (lK / HorseCnt), "0.00")
'    Range("K7").value = 1 - (lK / HorseCnt)
'    Range("L2").value = 1 - (lL / HorseCnt)
'    Print #FileNum, "L6 = " & Format(1 - (lL / HorseCnt), "0.00")
'    Range("L7").value = 1 - (lL / HorseCnt)
'    Range("N2").value = 1 - (lN / HorseCnt)
'    Print #FileNum, "N6 = " & Format(1 - (lN / HorseCnt), "0.00")
'    Range("N4").value = 1 - (lN2 / HorseCnt)
'    Print #FileNum, "N19 = " & Format(1 - (lN2 / HorseCnt), "0.00")
'    Range("N7").value = 1 - ((lN + lN2) / HorseCnt)
'    Range("O2").value = 1 - (lO / HorseCnt)
'    Print #FileNum, "O6 = " & Format(1 - (lO / HorseCnt), "0.00")
'    Range("O7").value = 1 - (lO / HorseCnt)
'    Range("P2").value = 1 - (lP / HorseCnt)
'    Print #FileNum, "P6 = " & Format(1 - (lP / HorseCnt), "0.00")
'    Range("P4").value = 1 - (lP2 / HorseCnt)
'    Print #FileNum, "P19 = " & Format(1 - (lP2 / HorseCnt), "0.00")
'    Range("P7").value = 1 - ((lP + lP2) / HorseCnt)
'    Range("Q2").value = 1 - (lQ / HorseCnt)
'    Print #FileNum, "Q6 = " & Format(1 - (lQ / HorseCnt), "0.00")
'    Range("Q3").value = 1 - (lQ2 / HorseCnt)
'    Print #FileNum, "Q12 = " & Format(1 - (lQ2 / HorseCnt), "0.00")
'    Range("Q4").value = 1 - (lQ3 / HorseCnt)
'    Print #FileNum, "Q19 = " & Format(1 - (lQ3 / HorseCnt), "0.00")
'    Range("Q5").value = 1 - (lQ4 / HorseCnt)
'    Print #FileNum, "Q15 = " & Format(1 - (lQ4 / HorseCnt), "0.00")
'    Range("Q7").value = 1 - ((lQ + lQ2 + lQ3 + lQ4) / HorseCnt)
'    Range("R2").value = 1 - (lR / HorseCnt)
'    Print #FileNum, "R6 = " & Format(1 - (lR / HorseCnt), "0.00")
'    Range("R4").value = 1 - (lR2 / HorseCnt)
'    Print #FileNum, "R19 = " & Format(1 - (lR2 / HorseCnt), "0.00")
'    Range("R7").value = 1 - ((lR + lR2) / HorseCnt)
'    Range("S2").value = 1 - (lS / HorseCnt)
'    Print #FileNum, "S6 = " & Format(1 - (lS / HorseCnt), "0.00")
'    Range("S4").value = 1 - (lS2 / HorseCnt)
'    Print #FileNum, "S19 = " & Format(1 - (lS2 / HorseCnt), "0.00")
'    Range("S7").value = 1 - ((lS + lS2) / HorseCnt)
'    Range("V6").value = 1 - (lV / HorseCnt)
'    Print #FileNum, "V7 = " & Format(1 - (lV / HorseCnt), "0.00")
'    Range("V2").value = 1 - (lV2 / HorseCnt)
'    Print #FileNum, "V6 = " & Format(1 - (lV2 / HorseCnt), "0.00")
'    Range("V4").value = 1 - (lV3 / HorseCnt)
'    Print #FileNum, "V19 = " & Format(1 - (lV3 / HorseCnt), "0.00")
'    Range("V7").value = 1 - ((lV + lV2 + lV3) / HorseCnt)
'    'Range("X6").value = 1 - (lX / HorseCnt)
'    'Range("X2").value = 1 - (lX2 / HorseCnt)
'    'Range("X4").value = 1 - (lX3 / HorseCnt)
'    'Range("X7").value = 1 - ((lX + lX2 + lX3) / HorseCnt)
'    Range("W2").value = 1 - (lW / HorseCnt)
'    Print #FileNum, "W6 = " & Format(1 - (lW / HorseCnt), "0.00")
'    Range("W4").value = 1 - (lW2 / HorseCnt)
'    Print #FileNum, "W19 = " & Format(1 - (lW2 / HorseCnt), "0.00")
'    Range("W5").value = 1 - (lW3 / HorseCnt)
'    Print #FileNum, "W15 = " & Format(1 - (lW3 / HorseCnt), "0.00")
'    Range("W7").value = 1 - ((lW + lW2 + lW3) / HorseCnt)
'    Range("X2").value = 1 - (lX / HorseCnt)
'    Print #FileNum, "X6 = " & Format(1 - (lX / HorseCnt), "0.00")
'    Range("X4").value = 1 - (lX2 / HorseCnt)
'    Print #FileNum, "X19 = " & Format(1 - (lX2 / HorseCnt), "0.00")
'    Range("X5").value = 1 - (lX3 / HorseCnt)
'    Print #FileNum, "X15 = " & Format(1 - (lX3 / HorseCnt), "0.00")
'    Range("X7").value = 1 - ((lX + lX2 + lX3) / HorseCnt)
'#######
    Range("E2").value = (lE / HorseCnt) * 100 'yellow
    Print #FileNum, "E6 = " & Format((lE / HorseCnt) * 100, "0")
    Range("E7").value = (lE / HorseCnt) * 100
    Range("F2").value = (lF / HorseCnt) * 100 'yellow
    Print #FileNum, "F6 = " & Format((lF / HorseCnt) * 100, "0")
    Range("F4").value = (lF2 / HorseCnt) * 100
    Print #FileNum, "F19 = " & Format((lF2 / HorseCnt) * 100, "0")
    Range("F7").value = ((lF + lF2) / HorseCnt) * 100
    Range("G2").value = (lG / HorseCnt) * 100
    Print #FileNum, "G6 = " & Format((lG / HorseCnt) * 100, "0")
    Range("G3").value = (lG2 / HorseCnt) * 100
    Print #FileNum, "G12 = " & Format((lG2 / HorseCnt) * 100, "0")
    Range("G4").value = (lG3 / HorseCnt) * 100
    Print #FileNum, "G19 = " & Format((lG3 / HorseCnt) * 100, "0")
    Range("G5").value = (lG4 / HorseCnt) * 100
    Print #FileNum, "G15 = " & Format((lG4 / HorseCnt) * 100, "0")
    Range("G7").value = ((lG + lG2 + lG3 + lG4) / HorseCnt) * 100
    Range("H4").value = (lH / HorseCnt) * 100
    Print #FileNum, "H19 = " & Format((lH / HorseCnt) * 100, "0")
    Range("H7").value = (lH / HorseCnt) * 100
    Range("I4").value = (lI / HorseCnt) * 100
    Print #FileNum, "I19 = " & Format((lI / HorseCnt) * 100, "0")
    Range("I7").value = (lI / HorseCnt) * 100
    Range("J2").value = (lJ / HorseCnt) * 100
    Print #FileNum, "J6 = " & Format((lJ / HorseCnt) * 100, "0")
    Range("J4").value = (lJ2 / HorseCnt) * 100
    Print #FileNum, "J19 = " & Format((lJ2 / HorseCnt) * 100, "0")
    Range("J7").value = ((lJ + lJ2) / HorseCnt) * 100
    Range("K2").value = (lK / HorseCnt) * 100
    Print #FileNum, "K6 = " & Format((lK / HorseCnt) * 100, "0")
    Range("K7").value = (lK / HorseCnt) * 100
    Range("L2").value = (lL / HorseCnt) * 100
    Print #FileNum, "L6 = " & Format((lL / HorseCnt) * 100, "0")
    Range("L7").value = (lL / HorseCnt) * 100
    Range("N2").value = (lN / HorseCnt) * 100
    Print #FileNum, "N6 = " & Format((lN / HorseCnt) * 100, "0")
    Range("N4").value = (lN2 / HorseCnt) * 100
    Print #FileNum, "N19 = " & Format((lN2 / HorseCnt) * 100, "0")
    Range("N7").value = ((lN + lN2) / HorseCnt) * 100
    Range("O2").value = (lO / HorseCnt) * 100
    Print #FileNum, "O6 = " & Format((lO / HorseCnt) * 100, "0")
    Range("O7").value = (lO / HorseCnt) * 100
    Range("P2").value = (lP / HorseCnt) * 100
    Print #FileNum, "P6 = " & Format((lP / HorseCnt) * 100, "0")
    Range("P4").value = (lP2 / HorseCnt) * 100
    Print #FileNum, "P19 = " & Format((lP2 / HorseCnt) * 100, "0")
    Range("P7").value = ((lP + lP2) / HorseCnt) * 100
    Range("Q2").value = (lQ / HorseCnt) * 100
    Print #FileNum, "Q6 = " & Format((lQ / HorseCnt) * 100, "0")
    Range("Q3").value = (lQ2 / HorseCnt) * 100
    Print #FileNum, "Q12 = " & Format((lQ2 / HorseCnt) * 100, "0")
    Range("Q4").value = (lQ3 / HorseCnt) * 100
    Print #FileNum, "Q19 = " & Format((lQ3 / HorseCnt) * 100, "0")
    Range("Q5").value = (lQ4 / HorseCnt) * 100
    Print #FileNum, "Q15 = " & Format((lQ4 / HorseCnt) * 100, "0")
    Range("Q7").value = ((lQ + lQ2 + lQ3 + lQ4) / HorseCnt) * 100
    Range("R2").value = (lR / HorseCnt) * 100
    Print #FileNum, "R6 = " & Format((lR / HorseCnt) * 100, "0")
    Range("R4").value = (lR2 / HorseCnt) * 100
    Print #FileNum, "R19 = " & Format((lR2 / HorseCnt) * 100, "0")
    Range("R7").value = ((lR + lR2) / HorseCnt) * 100
    Range("S2").value = (lS / HorseCnt) * 100
    Print #FileNum, "S6 = " & Format((lS / HorseCnt) * 100, "0")
    Range("S4").value = (lS2 / HorseCnt) * 100
    Print #FileNum, "S19 = " & Format((lS2 / HorseCnt) * 100, "0")
    Range("S7").value = ((lS + lS2) / HorseCnt) * 100
    Range("V6").value = (lV / HorseCnt) * 100
    Print #FileNum, "V7 = " & Format((lV / HorseCnt) * 100, "0")
    Range("V2").value = (lV2 / HorseCnt) * 100
    Print #FileNum, "V6 = " & Format((lV2 / HorseCnt) * 100, "0")
    Range("V4").value = (lV3 / HorseCnt) * 100
    Print #FileNum, "V19 = " & Format((lV3 / HorseCnt) * 100, "0")
    Range("V7").value = ((lV + lV2 + lV3) / HorseCnt) * 100
    Range("W2").value = (lW / HorseCnt) * 100
    Print #FileNum, "W6 = " & Format((lW / HorseCnt) * 100, "0")
    Range("W4").value = (lW2 / HorseCnt) * 100
    Print #FileNum, "W19 = " & Format((lW2 / HorseCnt) * 100, "0")
    Range("W5").value = (lW3 / HorseCnt) * 100
    Print #FileNum, "W15 = " & Format((lW3 / HorseCnt) * 100, "0")
    Range("W7").value = ((lW + lW2 + lW3) / HorseCnt) * 100
    Range("X2").value = (lX / HorseCnt) * 100
    Print #FileNum, "X6 = " & Format((lX / HorseCnt) * 100, "0")
    Range("X4").value = (lX2 / HorseCnt) * 100
    Print #FileNum, "X19 = " & Format((lX2 / HorseCnt) * 100, "0")
    Range("X5").value = (lX3 / HorseCnt) * 100
    Print #FileNum, "X15 = " & Format((lX3 / HorseCnt) * 100, "0")
    Range("X7").value = ((lX + lX2 + lX3) / HorseCnt) * 100

    Close #FileNum ' close the file
    
' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.StatusBar = ""
                    


End Sub
Sub GetUniqueForm()
'checks whether betting on best form would work
    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myFormCount     As Range
    Dim myRow1          As Long
    Dim lRaces          As Long
    Dim myWinnings      As Double
    Dim myPlacings      As Double
    Dim myRowEnd        As Long
    Dim sSheet          As String
    Dim sYear           As String
    Dim sMonth          As String
    Dim sDay            As String
    Dim myDate          As Date
    
    On Error Resume Next
    
    myRow1 = 3

sSheet = ActiveWorkbook.name
sYear = Left(sSheet, 4) 'year
sMonth = Mid(sSheet, 6, 2) ' month
sDay = Mid(sSheet, 9, 2) ' day
myDate = sDay & "/" & sMonth & "/" & sYear
    Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col C
            If myX.Row >= myRow1 Then
                If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                    Range("C" & myX.Row).End(xlDown).Select 'select whole race
                    myRowEnd = Selection.Row
                    Set myFormCount = Range("AN" & myRow1 & ":AN" & myRowEnd) 'The range to work on AN
                        For Each myY In myFormCount 'the one race determined from Col AN
                            If myY.value = Application.Min(myFormCount) _
                                And myY.value <= Application.Small(myFormCount, 2) - 3 _
                                And myY.Offset(0, 9) >= 3 Then
                                'And Application.WorksheetFunction.CountIf(myFormCount, myY.Value) = 1 _
                                'And myY.Offset(0, 9) >= 3 Then
                                'Application.Small(myFormCount, 2) gets 2nd smallest number in the range
                                lRaces = lRaces + 1
                                'myY.Offset(0, 1).Interior.ColorIndex = 6 ' yellow
                                If myY.Offset(0, -38) = "1" Then 'col B
                                    myWinnings = myWinnings + myY.Offset(0, -21)
                                    myPlacings = myPlacings + myY.Offset(0, -20)
                                ElseIf myY.Offset(0, -38) = "2" Or myY.Offset(0, -38) = "3" Then
                                    myPlacings = myPlacings + myY.Offset(0, -20)
                                End If
                            End If
                        Next myY
                    myRow1 = myRowEnd + 1
                Else
                    myRow1 = myRow1 + 1
                End If
            End If
        Next myX
        MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."
Range("AN3").Select
End Sub
Sub BestMPS600()
'checks whether betting on best MPS600 by .45 would work
    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myFormCount     As Range
    Dim myRow1          As Long
    Dim lRaces          As Long
    Dim myWinnings      As Double
    Dim myPlacings      As Double
    Dim myRowEnd        As Long
    Dim chk             As Boolean
    Dim myMPS600        As Double
    
    On Error Resume Next
    
    myRow1 = 3

    Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col C
            If myX.Row >= myRow1 Then
                If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                    Range("C" & myX.Row).End(xlDown).Select 'select whole race
                    myRowEnd = Selection.Row
                    Set myFormCount = Range("Y" & myRow1 & ":Y" & myRowEnd) 'The range to work on Y
                        For Each myY In myFormCount 'the one race determined from Col AN
                            If myY.value = Application.Max(myFormCount) Then
                                myMPS600 = myY.value
                                myY.Offset(0, 18).NumberFormat = "0.00"
                                myY.Offset(0, 18).value = myMPS600 - Application.Large(myFormCount, 2) 'AQ
                                If myY.value >= Application.Large(myFormCount, 2) + 0.4 Then
                                    chk = IsError(Application.Large(myFormCount, 2))
                                    If chk = False Then
                                        lRaces = lRaces + 1
                                        myY.Offset(0, 16).Interior.ColorIndex = 4 ' green
                                        If myY.Offset(0, 24) >= 3 Then
                                            myY.Offset(0, -24).Interior.ColorIndex = 3 'A red
                                        Else
                                            myY.Offset(0, -24).Interior.ColorIndex = 38 'pink
                                        End If
                                    End If
                                End If
                            End If
                        Next myY
                    myRow1 = myRowEnd + 1
                Else
                    myRow1 = myRow1 + 1
                End If
            End If
        Next myX
End Sub
Sub BestMPS600_Bet()
' lowest Trend if > 2 Hist Count
' and in top 3
' and best slope
' else 2nd best trend if >2 Hist Count and in top 3 and best slope
    Dim myselection     As Range
    Dim myX             As Range
    Dim myRow1          As Integer
    Dim myRowEnd        As Integer
    Dim myEval          As Range
    Dim rMPS600         As Range
    Dim myY             As Range
    Dim chk             As Boolean
    Dim myCount         As Long
    Dim myStr           As String
    Dim last3           As String
    Dim y               As String
    Dim HTime           As Double
Dim myTrend As Range
Dim myZ As Range
Dim mySlope As Range

On Error Resume Next
myRow1 = 3
Set myselection = Range("D3:D" & Range("D" & Rows.count).End(xlUp).Row) 'HorseNo
    For Each myX In myselection 'Col D
        If myX.Row >= myRow1 Then
            If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                Range("D" & myX.Row).End(xlDown).Select 'select whole race
                myRowEnd = Selection.Row
'#### form of betting
                myCount = 0
                'Stop
                Set myEval = Range("AB" & myRow1 & ":AB" & myRowEnd) 'The range to work on AB
                'Set rMPS600 = Range("Y" & myRow1 & ":Y" & myRowEnd)
                For Each myY In myEval
                    myCount = myCount + 1
                    'y = myY.Offset(0, -31).value
                    'HTime = 1
                    'If InStr(1, y, "L") > 0 Then
                    '    HTime = Replace(y, "L", "")
                    'End If
' Version 3
' Best Eval (AR) (top of the list);
' plus Best MPS last 800 (Col Y);
' plus best MPS (Col N);
' plus Best CalcFinish (Col Q) or best finish (Col R);
' plus Win value 5 or more
'                    If myY.value = Application.Large(MyEval, 1) _
'                        And myY.Offset(0, -19).Interior.ColorIndex = 6 _
'                        And myY.Offset(0, -27).Interior.ColorIndex = 6 _
'                        And ((myY.Offset(0, 12).value <= 0 And myY.Offset(0, 12) <> "") _
'                            Or myY.Offset(0, 12).Interior.ColorIndex = 6) _
'                        And ((myY.Offset(0, 13).value <= 2 And myY.Offset(0, 13) <> "") _
'                            Or myY.Offset(0, 13).Interior.ColorIndex = 6) Then
                        
                    If myY.value = Application.Large(myEval, 1) _
                        And Range("W" & myY.Row).Interior.ColorIndex = 6 _
                        And Range("O" & myY.Row).Interior.ColorIndex = 6 _
                        And (Range("R" & myY.Row).Interior.ColorIndex = 6 _
                            Or Range("S" & myY.Row).Interior.ColorIndex = 6) Then
                        
                        chk = IsError(Application.Large(myEval, 2))
                        If chk = False Then
                            If Range("AG" & myY.Row) >= 5 Then 'tote WIN value
                                Range("A" & myY.Row).Interior.ColorIndex = 3 'A red
                            Else
                                Range("A" & myY.Row).Interior.ColorIndex = 38 'pink
                            End If
                        End If
                    End If
'version 4
'                    If myY.Value >= Application.Large(MyEval, 2) + 250 _
'                        And myY.Offset(0, 7) > 7 Then
'                        Chk = IsError(Application.Large(MyEval, 2))
'                        If Chk = False Then
'                            If myY.Offset(0, 11) >= 1.5 Then 'tote place value
'                                myY.Offset(0, -43).Interior.ColorIndex = 3 'A red
'                                Probable = Probable + 1
'                            Else
'                                myY.Offset(0, -43).Interior.ColorIndex = 38 'pink
'                                Possible = Possible + 1
'                            End If
'                        End If
'                    End If
'version 1
' Best Eval (AR) (top of the list);
' plus Best MPS last 800 (Col Y);
' plus Best CalcFinish (Col Q);
' plus regression <= 0 (Col BD)
' plus Place calc from regression <= 3 (Col BE)
' plus Win value 5 or more
'                    If myY.value >= Application.Large(MyEval, 1) _
'                        And myY.Offset(0, -19).Interior.ColorIndex = 6 _
'                        And myY.Offset(0, -27).Interior.ColorIndex = 6 _
'                        And ((myY.Offset(0, 12).value <= 0 And myY.Offset(0, 12) <> "") _
'                            Or myY.Offset(0, 12).Interior.ColorIndex = 6) _
'                        And ((myY.Offset(0, 13).value <= 2 And myY.Offset(0, 13) <> "") _
'                            Or myY.Offset(0, 13).Interior.ColorIndex = 6) Then
'                        Chk = IsError(Application.Large(MyEval, 2))
'                        If Chk = False Then
'                            If myY.Offset(0, 5) >= 5 Then 'tote WIN value
'                                myY.Offset(0, -43).Interior.ColorIndex = 3 'A red
                                'Probable = Probable + 1
'                            Else
'                                myY.Offset(0, -43).Interior.ColorIndex = 38 'pink
                                'Possible = Possible + 1
'                            End If
'                        End If
'                    End If
'Version 2
'                    If myY.value >= Application.Large(MyEval, 1) _
'                        And (myY.Offset(0, 12) < 0 And myY.Offset(0, 12).Interior.ColorIndex = 6) _
'                        And (myY.Offset(0, 13) <> "" And myY.Offset(0, 13).Interior.ColorIndex = 6) _
'                        And (myY.Offset(0, 14) <> "" And myY.Offset(0, 14).Interior.ColorIndex = 6) Then
'                        Chk = IsError(Application.Large(MyEval, 2))
'                        If Chk = False Then
'                            If myY.Offset(0, 5) > 1 Then 'tote WIN value
'                                myY.Offset(0, -43).Interior.ColorIndex = 3 'A red
'                            Else
'                                myY.Offset(0, -43).Interior.ColorIndex = 38 'pink
'                            End If
'                        End If
'                    End If

'Version 1
'                    If Range("BH" & myY.Row) = "1" Then
'                        If Range("AW" & myY.Row) >= 5 Or Range("AZ" & myY.Row) >= 5 Then 'tote & fixed WIN value
'                            Range("A" & myY.Row).Interior.ColorIndex = 3 'A red
'                        Else
'                            Range("A" & myY.Row).Interior.ColorIndex = 38 'pink
'                        End If
'                        Exit For
'                    End If
'#############
'version 1
'Dim dFixed As Double
'Dim dTote As Double
'Set myTrend = Range("BE" & myRow1 & ":BE" & myRowEnd)
'Set mySlope = Range("BD" & myRow1 & ":BD" & myRowEnd)
'                For Each myY In myTrend
'                    myCount = myCount + 1
                    'Stop
'                    If myY.value <> "" And myY.value = Application.Small(myTrend, 1) Then
                    'Stop
                        'If myY.value = "0" Then Stop
'                        If myY.Offset(0, 2) > 2 Then
'                            If myY.Row < myRow1 + 3 And myY.Offset(0, -1) = Application.Small(mySlope, 1) Then
'                                dFixed = myY.Offset(0, -8)
'                                dTote = myY.Offset(0, -5)
'                                If dFixed >= 5 Or dTote >= 5 Then
'                                    myY.Offset(0, -56).Interior.ColorIndex = 3 'A red
'                                    Exit For
'                                Else
'                                    myY.Offset(0, -56).Interior.ColorIndex = 38 'pink
'                                    Exit For
'                                End If
'                            End If
'                        ElseIf myY.Offset(0, 2) < 3 Then
'                            For Each myZ In myTrend
'                                If myZ.value = Application.Small(myTrend, 2) Then
'                                    If myZ.Offset(0, 2) > 2 Then
'                                        If myZ.Row < myRow1 + 3 And myZ.Offset(0, -1) = Application.Small(mySlope, 1) Then
'                                            dFixed = myZ.Offset(0, -8)
'                                            dTote = myZ.Offset(0, -5)

'                                            If dFixed >= 5 Or dTote >= 5 Then
'                                                myZ.Offset(0, -56).Interior.ColorIndex = 3 'A red
'                                                Exit For
'                                            Else
'                                                myZ.Offset(0, -56).Interior.ColorIndex = 38 'pink
'                                                Exit For
'                                            End If
'                                        End If
'                                    End If
'                                End If
'                            Next myZ
'                        End If
'                    End If
                'Next myY
                            

'###############
'version 5
'                    If myY.Value = Application.Large(MyEval, 1) _
'                    And (InStr(1, y, "L") = 0 Or HTime <= 0.5) Then
'                        Chk = IsError(Application.Large(MyEval, 2))
'                        If Chk = False Then
'                            If myY.Offset(0, 5) >= 10 Then 'tote WIN value
'                                myY.Offset(0, -43).Interior.ColorIndex = 3 'A red
                                'Probable = Probable + 1
'                            ElseIf myY.Offset(0, 5) >= 9 Then
'                                myY.Offset(0, -43).Interior.ColorIndex = 38 'pink
                                'Possible = Possible + 1
'                            End If
'                        End If
'                    End If
 
 'calc diff between top mps800 and 2nd best mps800
 '                   If myY.Offset(0, -19).value = Application.Large(rMPS600, 1) _
 '                       And myY.value = Application.Large(MyEval, 1) Then
 '                       myY.Offset(0, -3) = Application.Large(rMPS600, 1) - Application.Large(rMPS600, 2)
 '                   End If

'#### end  betting
'#### new format
'                myCount = 0
'                Set MyEval = Range("D" & myRow1 & ":D" & myRowEnd) 'The range to work on D
'                For Each myY In MyEval
'                    myCount = myCount + 1
'                    myStr = myY.text
'                    If Len(myStr) > 2 _
'                        And myY.Offset(0, 47) > 7 Then
'                        last3 = Right(myStr, 3)
'                        If Len(Replace(Replace(Replace(last3, "1", ""), "3", ""), "2", "")) = 0 Then
'                                    'lRaces = lRaces + 1
'                            If myY.Offset(0, 51) >= 2 Then 'place value
'                                myY.Offset(0, -3).Interior.ColorIndex = 3 'A red
'                            Else
'                                myY.Offset(0, -3).Interior.ColorIndex = 38 'pink
'                            End If
'                            Exit For
'                        End If
'                    End If
'#### end of new format
'##New format

'###end new format
                    If myCount >= 1 Then Exit For
                Next myY
                myRow1 = myRowEnd + 1
            Else
                myRow1 = myRow1 + 1
            End If
        End If
            'myCount = 0
    Next myX
Range("A2").Select
End Sub
Sub BestMPS600_InTop3_summary()
' This is 1.
'1. BetFair pick
'
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Workbook 'summary sheet
    Dim wbB             As Workbook
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim myWinnings          As Double 'total of wins
    Dim myPlacings        As Double 'total of places
    Dim myselection     As Range
    Dim myX             As Range
    Dim myRow1          As Integer
    Dim myRowEnd        As Integer
    Dim myEval          As Range
    Dim myTrend         As Range
    Dim myY             As Range
    Dim chk             As Boolean
    Dim lRaces          As Integer
    Dim myCount         As Long
    'Dim dollValue        As Double
    Dim obj             As New DataObject 'for writing to clipboard
    Dim txt             As String
    'Dim EvalDiff        As Long


'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    x = Application.GetSaveAsFilename(InitialFileName:="C:\FILES\Horses\Results\All\_", Title:="Browse to desired directory and click Save")
    strPath = CurDir
    On Error Resume Next
    
'dollValue = InputBox(Prompt:="Enter Dollar Value", Title:="$$", Default:="1.5")
    'dollValue = 1
'EvalDiff = InputBox(Prompt:="Enter Evaluation Difference eg 250", Title:="EvalDiff", Default:="250")
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"
        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
                Workbooks.Open vaFileName
                myRow1 = 3

                Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
                For Each myX In myselection 'Col C
                    If myX.Row >= myRow1 Then
                        If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                            Range("C" & myX.Row).End(xlDown).Select 'select whole race
                            myRowEnd = Selection.Row
                            Set myEval = Range("BH" & myRow1 & ":BH" & myRowEnd) 'The range to work on AR
                            'Set myTrend = Range("BE" & myRow1 & ":BE" & myRowEnd)
                            For Each myY In myEval
                                'Debug.Print Application.Small(myTrend, 1)
                                If myY = "1" Then
                                        'Chk = IsError(Application.Small(myTrend, 2))
                                        'If Chk = False Then
                                    lRaces = lRaces + 1
                                    'If myY.Offset(0, -42) = "1" Then 'col B
                                    If Range("B" & myY.Row) = "1" Then 'col B
                                        myWinnings = myWinnings + Range("S" & myY.Row)
                                        myPlacings = myPlacings + Range("T" & myY.Row)
                                    ElseIf Range("B" & myY.Row) = "2" Or Range("B" & myY.Row) = "3" Then
                                        myPlacings = myPlacings + Range("T" & myY.Row)
                                    End If
                                    Exit For
                                End If
                                'If myCount >= 1 Then Exit For
                            Next myY
                            myRow1 = myRowEnd + 1
                        Else
                            myRow1 = myRow1 + 1
                        End If
                    End If
                    'myCount = 0
                Next myX

                ActiveWorkbook.Close 'False
            Next vaFileName
        End If
    End With


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
                                    
                                    
'put results in clipboard
  txt = lRaces & Chr(9) & myWinnings & Chr(9) & myPlacings
  obj.SetText txt
  obj.PutInClipboard

MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."

End Sub
Sub BestMPS600_summary_dir()
' this is: 2. Best600Test
' 2. Best in Slope(BD) and Trend(BE) and Slope+lastPos(BF)
' chuck 31/5/17
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Workbook 'summary sheet
    Dim wbB             As Workbook
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim myWinnings          As Double 'total of wins
    Dim myPlacings        As Double 'total of places
    Dim myselection     As Range
    Dim myX             As Range
    Dim myRow1          As Integer
    Dim myRowEnd        As Integer
    Dim myFormCount     As Range
    Dim myY             As Range
    Dim chk             As Boolean
    Dim lRaces          As Integer
    Dim obj             As New DataObject 'for writing to clipboard
    Dim txt             As String
    Dim myStr           As String
    Dim last3           As String
    Dim myCount         As Long

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    x = Application.GetSaveAsFilename(InitialFileName:="C:\FILES\Horses\Results\All\_", Title:="Browse to desired directory and click Save")
    strPath = CurDir
    On Error Resume Next
    
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"
        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
                Workbooks.Open vaFileName
                myRow1 = 3

                Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
                For Each myX In myselection 'Col C
                    If myX.Row >= myRow1 Then
                        If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                            Range("C" & myX.Row).End(xlDown).Select 'select whole race
                            myRowEnd = Selection.Row
                            Set myFormCount = Range("AR" & myRow1 & ":AR" & myRowEnd) 'The range to work on AR
                                For Each myY In myFormCount
                                    myCount = myCount + 1
                                    'If myY.Value = Application.Large(myFormCount, 1)
                                    If myY.value >= Application.Large(myFormCount, 1) _
                                        And (myY.Offset(0, 12) < 0 And myY.Offset(0, 12).Interior.ColorIndex = 6) _
                                        And (myY.Offset(0, 13) <> "" And myY.Offset(0, 13).Interior.ColorIndex = 6) _
                                        And (myY.Offset(0, 14) <> "" And myY.Offset(0, 14).Interior.ColorIndex = 6) Then
                                        'If myY.Value > Application.Large(myFormCount, 2) + 100 Then
                                        chk = IsError(Application.Large(myFormCount, 3))
                                        If chk = False Then
                                            lRaces = lRaces + 1
                                            If myY.Offset(0, -42) = "1" Then 'col B
                                                myWinnings = myWinnings + myY.Offset(0, -25)
                                                myPlacings = myPlacings + myY.Offset(0, -24)
                                            ElseIf myY.Offset(0, -42) = "2" Or myY.Offset(0, -42) = "3" Then
                                                myPlacings = myPlacings + myY.Offset(0, -24)
                                            End If
                                        End If
                                        'End If
                                        'Exit For
                                    End If
                                    If myCount >= 1 Then Exit For
                                Next myY
                            myRow1 = myRowEnd + 1
                        Else
                            myRow1 = myRow1 + 1
                        End If
                    End If
                    myCount = 0
                Next myX

                ActiveWorkbook.Close 'False
            Next vaFileName
        End If
    End With


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
                   
'put results in clipboard
  txt = lRaces & Chr(9) & myWinnings & Chr(9) & myPlacings
  obj.SetText txt
  obj.PutInClipboard
                   
MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."

End Sub
Sub TopOver10_summary()
' This is 3.
    
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Workbook 'summary sheet
    Dim wbB             As Workbook
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim myWinnings          As Double 'total of wins
    Dim myPlacings        As Double 'total of places
    Dim myselection     As Range
    Dim myX             As Range
    Dim myRow1          As Integer
    Dim myRowEnd        As Integer
    Dim myFormCount     As Range
    Dim myY             As Range
    Dim chk             As Boolean
    Dim lRaces          As Integer
    Dim myCount         As Long
    'Dim dollValue        As double
    Dim obj             As New DataObject 'for writing to clipboard
    Dim txt             As String


'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    x = Application.GetSaveAsFilename(InitialFileName:="C:\FILES\Horses\Results\All\_", Title:="Browse to desired directory and click Save")
    strPath = CurDir
    On Error Resume Next
    
    'dollValue = InputBox(Prompt:="Enter Dollar Value", Title:="$$")

    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"
        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
                Workbooks.Open vaFileName
                myRow1 = 3

                Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
                For Each myX In myselection 'Col C
                    If myX.Row >= myRow1 Then
                        If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                            Range("C" & myX.Row).End(xlDown).Select 'select whole race
                            myRowEnd = Selection.Row
                            Set myFormCount = Range("AR" & myRow1 & ":AR" & myRowEnd) 'The range to work on BH
                                For Each myY In myFormCount
'#########
                                    If myY.value = Application.Large(myFormCount, 1) _
                                        And Range("Y" & myY.Row).Interior.ColorIndex = 6 _
                                        And Range("N" & myY.Row).Interior.ColorIndex = 6 _
                                        And (Range("Q" & myY.Row).Interior.ColorIndex = 6 _
                                            Or Range("R" & myY.Row).Interior.ColorIndex = 6) _
                                        And Range("AW" & myY.Row) >= 5 Then
                        
                                        chk = IsError(Application.Large(myFormCount, 2))
                                        If chk = False Then
                                            lRaces = lRaces + 1
                                            If Range("B" & myY.Row) = "1" Then 'col B
                                                myWinnings = myWinnings + Range("S" & myY.Row)
                                                myPlacings = myPlacings + Range("T" & myY.Row)
                                            ElseIf Range("B" & myY.Row) = "2" Or Range("B" & myY.Row) = "3" Then
                                                myPlacings = myPlacings + Range("T" & myY.Row)
                                            End If
                                         End If
                                    End If

'###########
                               Next myY
                            myRow1 = myRowEnd + 1
                        Else
                            myRow1 = myRow1 + 1
                        End If
                    End If
                    myCount = 0
                Next myX

                ActiveWorkbook.Close 'False
            Next vaFileName
        End If
    End With


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
                                    
                                    
'                                        And myY.Offset(0, 15).Interior.ColorIndex = 6 _

'put results in clipboard
  txt = lRaces & Chr(9) & myWinnings & Chr(9) & myPlacings
  obj.SetText txt
  obj.PutInClipboard

MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."

End Sub
Sub BestEvalBy300()
'This is 4.
'BetFair > 5 in value in top 3
'
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Workbook 'summary sheet
    Dim wbB             As Workbook
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim myWinnings          As Double 'total of wins
    Dim myPlacings        As Double 'total of places
    Dim myselection     As Range
    Dim myX             As Range
    Dim myRow1          As Integer
    Dim myRowEnd        As Integer
    Dim myFormCount     As Range
    Dim myY             As Range
    Dim chk             As Boolean
    Dim lRaces          As Integer
    Dim obj             As New DataObject 'for writing to clipboard
    Dim txt             As String
    Dim myStr           As String
    Dim last3           As String
    Dim myCount         As Long

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    x = Application.GetSaveAsFilename(InitialFileName:="C:\FILES\Horses\Results\All\_", Title:="Browse to desired directory and click Save")
    strPath = CurDir
    On Error Resume Next
    
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"
        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
                Workbooks.Open vaFileName
                myRow1 = 3

                Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
                For Each myX In myselection 'Col C
                    If myX.Row >= myRow1 Then
                        If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                            Range("C" & myX.Row).End(xlDown).Select 'select whole race
                            myRowEnd = Selection.Row
                            Set myFormCount = Range("AR" & myRow1 & ":AR" & myRowEnd) 'The range to work on AR
                                For Each myY In myFormCount
                                    myCount = myCount + 1
                                    If Range("BH" & myY.Row) = 1 _
                                        And Range("AW" & myY.Row) >= 5 Then
                                        lRaces = lRaces + 1
                                        If Range("B" & myY.Row) = "1" Then 'col B
                                            myWinnings = myWinnings + Range("S" & myY.Row)
                                            myPlacings = myPlacings + Range("T" & myY.Row)
                                        ElseIf ("B" & myY.Row) = "2" Or ("B" & myY.Row) = "3" Then
                                            myPlacings = myPlacings + Range("T" & myY.Row)
                                        End If
                                    End If
                                    If myCount >= 3 Then Exit For
                                Next myY
                            myRow1 = myRowEnd + 1
                        Else
                            myRow1 = myRow1 + 1
                        End If
                    End If
                    myCount = 0
                Next myX

                ActiveWorkbook.Close 'False
            Next vaFileName
        End If
    End With


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
                   
'put results in clipboard
  txt = lRaces & Chr(9) & myWinnings & Chr(9) & myPlacings
  obj.SetText txt
  obj.PutInClipboard
                   
MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."

End Sub
Sub BestMPS800_Date()
'This is 5.
'Best Eval (AR) (top of the list);
'Win is 10 or better
'HTime is a win or .5 or better

'
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Workbook 'summary sheet
    Dim wbB             As Workbook
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim myWinnings          As Double 'total of wins
    Dim myPlacings        As Double 'total of places
    Dim myselection     As Range
    Dim myX             As Range
    Dim myRow1          As Integer
    Dim myRowEnd        As Integer
    Dim myFormCount     As Range
    Dim myY             As Range
    Dim chk             As Boolean
    Dim lRaces          As Integer
    Dim myCount         As Long
    Dim dollValue        As Double
    Dim obj             As New DataObject 'for writing to clipboard
    Dim txt             As String
    'Dim EvalDiff        As Long
    Dim y               As String
    Dim HTime           As Double

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    x = Application.GetSaveAsFilename(InitialFileName:="C:\FILES\Horses\Results\All\_", Title:="Browse to desired directory and click Save")
    strPath = CurDir
    On Error Resume Next
    
    'dollValue = InputBox(Prompt:="Enter Dollar Value", Title:="$$", Default:="1.5")
    dollValue = 10
    'EvalDiff = InputBox(Prompt:="Enter Evaluation Difference eg 250", Title:="EvalDiff", Default:="250")
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"
        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
                Workbooks.Open vaFileName
                myRow1 = 3

                Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
                For Each myX In myselection 'Col C
                    If myX.Row >= myRow1 Then
                        If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                            Range("C" & myX.Row).End(xlDown).Select 'select whole race
                            myRowEnd = Selection.Row
                            Set myFormCount = Range("AR" & myRow1 & ":AR" & myRowEnd) 'The range to work on AR
                                For Each myY In myFormCount
                                    myCount = myCount + 1
                                    y = myY.Offset(0, -31).value
                                    HTime = 1
                                    If InStr(1, y, "L") > 0 Then
                                        HTime = Replace(y, "L", "")
                                    End If
                                    If myY.value = Application.Large(myFormCount, 1) _
                                        And myY.Offset(0, 5) >= dollValue _
                                        And (InStr(1, y, "L") = 0 Or HTime <= 0.5) Then
                                        chk = IsError(Application.Large(myFormCount, 2))
                                        If chk = False Then
                                            
                                            lRaces = lRaces + 1
                                            If myY.Offset(0, -42) = "1" Then 'col B
                                                myWinnings = myWinnings + myY.Offset(0, -25)
                                                myPlacings = myPlacings + myY.Offset(0, -24)
                                            ElseIf myY.Offset(0, -42) = "2" Or myY.Offset(0, -42) = "3" Then
                                                myPlacings = myPlacings + myY.Offset(0, -24)
                                            End If
                                        End If
                                    End If
                                    If myCount >= 1 Then Exit For
                                Next myY
                            myRow1 = myRowEnd + 1
                        Else
                            myRow1 = myRow1 + 1
                        End If
                    End If
                    myCount = 0
                Next myX

                ActiveWorkbook.Close 'False
            Next vaFileName
        End If
    End With


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
                                    
                                    
'put results in clipboard
  txt = lRaces & Chr(9) & myWinnings & Chr(9) & myPlacings
  obj.SetText txt
  obj.PutInClipboard

MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."
End Sub
Sub GetBetWinCounts()
' use this to get bet/win totals for the Betting Progress Sheet
' chuck 14/5/16
    Dim strPath         As String
    Dim x               As Variant 'sheet folder
    Dim wbA             As Workbook 'summary sheet
    Dim wbB             As Workbook
    Dim vaFileName      As Variant 'names of the different occ sheets
    Dim sumBet          As Long 'count of bets
    Dim sumWin          As Double 'total of wins
    'Dim sumPlace        As Double
    Dim posValues       As Long
    Dim sumPos          As Long
    Dim pos             As Long
    Dim myCol           As Range 'col AU
    Dim myX             As Range
    Dim rSheet          As String
    Dim rDate           As String
    Dim lastDate        As String
    Dim r               As Integer
    Dim a               As Integer

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
' open a new sheet to start
    Workbooks.Add
    Set wbA = ActiveWorkbook
    r = 2
    x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
    strPath = CurDir
    On Error Resume Next
    
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"
        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
                Workbooks.Open vaFileName
                Call Horses.EnterScratchings
                Call Horses.UpdateSheet
                Set wbB = ActiveWorkbook
                rSheet = ActiveWorkbook.name
                rDate = Left(rSheet, 4) & "/" & Mid(rSheet, 6, 2) & "/" & Mid(rSheet, 9, 2)
                If rDate <> lastDate And lastDate <> "" Then
                    wbA.Activate
                    Worksheets("Sheet1").Cells(r, 1).value = lastDate
                    Worksheets("Sheet1").Cells(r, 2).value = sumBet
                    Worksheets("Sheet1").Cells(r, 3).value = sumWin
                    Worksheets("Sheet1").Cells(r, 4).value = posValues / sumPos
                    r = r + 1
                    sumBet = 0
                    sumWin = 0
                    posValues = 0
                    sumPos = 0
                    wbB.Activate
                End If
                lastDate = rDate
                Set myCol = Range("C2:C" & Range("C" & Rows.count).End(xlUp).Row).Offset(0, -2)
                For Each myX In myCol 'this is col A
                    If myX.Interior.ColorIndex = 3 Or myX.Offset(0, 1).Interior.ColorIndex = 38 Then
                        sumBet = sumBet + 1
                        sumWin = sumWin + myX.Offset(0, 18) 'col S
                    End If
                    If myX.Offset(0, 2).value = "" Then
                        'For a = 1 To 3
                            sumPos = sumPos + 1
                            pos = myX.Offset(1, 1).value 'only look at top position
                            If pos > 0 And pos < 4 Then
                                posValues = posValues + (4 - pos)
                            End If
                            pos = 0
                        'Next a
                    End If
                Next myX
                Application.Calculation = xlCalculationAutomatic
                ActiveWorkbook.Save
                ActiveWorkbook.Close 'False
            Next vaFileName
        End If
    End With

wbA.Activate
Worksheets("Sheet1").Cells(r, 1).value = lastDate
Worksheets("Sheet1").Cells(r, 2).value = sumBet
Worksheets("Sheet1").Cells(r, 3).value = sumWin
Worksheets("Sheet1").Cells(r, 4).value = posValues / sumPos

Worksheets("Sheet1").Cells(1, 1).value = "Date"
Worksheets("Sheet1").Cells(1, 2).value = "Bet"
Worksheets("Sheet1").Cells(1, 3).value = "Win"
Worksheets("Sheet1").Cells(1, 4).value = "PositionValues"

' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
                    


End Sub
Sub BestRating_summary()
'checks whether betting on best Rating would work
'1. (Best in rating (not equal best)
'2. and Price > 5)
'3 or (2nd best (not equal 2nd)
'4 and price > 5)
    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myZ             As Range
    Dim myW             As Range
    Dim myRatingRange     As Range
    Dim myRow1          As Long
    Dim lRaces          As Long
    Dim myWinnings      As Double
    Dim myPlacings      As Double
    Dim myRowEnd        As Long
    Dim chk             As Boolean
    Dim myMPS600        As Double
    Dim myCount         As Long
    Dim horseCount      As Long
    Dim myRating        As Long
    
    On Error Resume Next
    
    myRow1 = 3

    Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col C
            If myX.Row >= myRow1 Then
                If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                    Range("C" & myX.Row).End(xlDown).Select 'select whole race
                    myRowEnd = Selection.Row
                    myCount = 0
                    Set myRatingRange = Range("AT" & myRow1 & ":AT" & myRowEnd) 'The range to work on AT
                        'Debug.Print "Large1: " & Application.Large(myRatingRange, 1)
                        'Debug.Print "Large2: " & Application.Large(myRatingRange, 2)
                        'Debug.Print "Large3: " & Application.Large(myRatingRange, 3)
                        If Application.Large(myRatingRange, 1) - Application.Large(myRatingRange, 2) > 0 Then
                            For Each myY In myRatingRange
                                If myY.value = Application.Large(myRatingRange, 1) _
                                    And myY.Offset(0, 3).value >= 10 Then
                                    myRating = Application.Large(myRatingRange, 1)
                                    chk = True
                                    'Debug.Print "Found1 at row: " & myY.row & " value: " & myRating
                                    Exit For
                                End If
                            Next myY
                        End If
'                        If Chk = False _
'                            And Application.Large(myRatingRange, 1) - Application.Large(myRatingRange, 2) > 0 _
'                            And Application.Large(myRatingRange, 2) - Application.Large(myRatingRange, 3) > 0 Then
'                            For Each myW In myRatingRange
'                                If myW.Value = Application.Large(myRatingRange, 2) _
'                                    And myW.Offset(0, 3).Value >= 5 Then
'                                    myRating = Application.Large(myRatingRange, 2)
'                                    Chk = False
'                                    'Debug.Print "Found2 at row: " & myW.row & " value: " & myRating
'                                    Exit For
'                                End If
'                            Next myW
'                        End If
                        If myRating <> 0 Then
                            For Each myZ In myRatingRange
                                If myZ.value = myRating Then
                                    lRaces = lRaces + 1
                                    If myZ.Offset(0, -44) = "1" Then 'col B
                                        myWinnings = myWinnings + myZ.Offset(0, -27)
                                        myPlacings = myPlacings + myZ.Offset(0, -26)
                                    ElseIf myZ.Offset(0, -44) = "2" Or myZ.Offset(0, -44) = "3" Then
                                        myPlacings = myPlacings + myZ.Offset(0, -26)
                                    End If
                                    Exit For
                                End If
                            Next myZ
                        chk = False
                        End If
                        myRating = 0
                        chk = False
                    myRow1 = myRowEnd + 1
                Else
                    myRow1 = myRow1 + 1
                End If
            End If
            myCount = 0
        Next myX
        MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."
Range("AN3").Select
End Sub
Sub BestRating_working_summary()
'This is called by Horses.UpdateSheet for betting
'checks whether betting on best Rating would work
'1. (Best in rating (not equal best)
'2. and Price > 5)
'3 or (2nd best (not equal 2nd)
'4 and price > 5)
    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myZ             As Range
    Dim myW             As Range
    Dim myRatingRange     As Range
    Dim myRow1          As Long
    Dim lRaces          As Long
    Dim myWinnings      As Double
    Dim myPlacings      As Double
    Dim myRowEnd        As Long
    Dim chk             As Boolean
    Dim myMPS600        As Double
    Dim myCount         As Long
    Dim horseCount      As Long
    Dim myRating        As Long
    
    On Error Resume Next
' Re head the column
Range("AQ1").value = "RateDiff"
    myRow1 = 3

    Set myselection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).Row) 'HorseNo
        For Each myX In myselection 'Col C
            If myX.Row >= myRow1 Then
                If myX.value <> "" And myX.Offset(1, 0).value <> "" Then 'and not just 1 row
                    Range("C" & myX.Row).End(xlDown).Select 'select whole race
                    myRowEnd = Selection.Row
                    'myCount = 0
                    Set myRatingRange = Range("AT" & myRow1 & ":AT" & myRowEnd) 'The range to work on AT
                        If Application.Large(myRatingRange, 1) - Application.Large(myRatingRange, 2) > 0 Then
                            For Each myY In myRatingRange
                                If myY.value = Application.Large(myRatingRange, 1) Then
                                    myY.Offset(0, -3).value = Application.Large(myRatingRange, 1) - Application.Large(myRatingRange, 2) 'AQ
                                    If myY.Offset(0, 3).value >= 5 Then
                                        myY.Offset(0, -45).Interior.ColorIndex = 3 'red
                                    Else
                                        myY.Offset(0, -45).Interior.ColorIndex = 38 'pink
                                    'myRating = Application.Large(myRatingRange, 1)
                                    'Chk = True
                                        Exit For
                                    End If
                                End If
                            Next myY
                        End If
'                        If Chk = False _
'                            And Application.Large(myRatingRange, 1) - Application.Large(myRatingRange, 2) > 0 _
'                            And Application.Large(myRatingRange, 2) - Application.Large(myRatingRange, 3) > 0 Then
'                            For Each myW In myRatingRange
'                                If myW.Value = Application.Large(myRatingRange, 2) _
'                                    And myW.Offset(0, 3).Value >= 5 Then
'                                    myRating = Application.Large(myRatingRange, 2)
'                                    Chk = False
'                                    Exit For
'                                End If
'                            Next myW
'                        End If
'                        If myRating <> 0 Then
'                            For Each myZ In myRatingRange
'                                If myZ.Value = myRating Then
'                                    myZ.Offset(0, -45).Interior.ColorIndex = 3 'A red
'                                    'lRaces = lRaces + 1
'                                    'If myZ.Offset(0, -44) = "1" Then 'col B
'                                    '    myWinnings = myWinnings + myZ.Offset(0, -27)
'                                    '    myPlacings = myPlacings + myZ.Offset(0, -26)
'                                    'ElseIf myZ.Offset(0, -44) = "2" Or myZ.Offset(0, -44) = "3" Then
'                                    '    myPlacings = myPlacings + myZ.Offset(0, -26)
'                                    'End If
'                                    Exit For
'                                End If
'                            Next myZ
'                        Chk = False
'                        End If
'                        myRating = 0
'                        Chk = False
                    myRow1 = myRowEnd + 1
                Else
                    myRow1 = myRow1 + 1
                End If
            End If
            myCount = 0
        Next myX
        'MsgBox lRaces & " races for " & myWinnings & " in winnings and " & myPlacings & " in placings."
'Range("AN3").Select
End Sub

Private Sub ProcessDir()
' loops through a directory of sheets and runs scripts over each sheet
    Dim strPath As String
    Dim x As Variant 'sheet folder
    Dim vaFileName As Variant 'names of the different occ sheets
    

'turn the screen calculation off
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

'Show dialog and let user browse to a directory
  x = Application.GetSaveAsFilename(InitialFileName:="_", Title:="Browse to desired directory and click Save")
  
'Get current directory
    strPath = CurDir
    On Error Resume Next
' Look in that director for spreadsheets
    With Application.FileSearch
        .NewSearch
        .LookIn = strPath
        .SearchSubFolders = False
        .fileName = ".xls"

        If .Execute > 0 Then

            For Each vaFileName In .FoundFiles
' open the sheet
                Workbooks.Open vaFileName

' call whatever script
                'Call Horses.UpdateSheet
                'Call Horses.HighlightWinners
                Call Horses.HighlightExp
                'Call Horses.PicWinner
                
                'Call Horses.BuildCombo
'Save that sheet
                ActiveWorkbook.Save
                
                ActiveWorkbook.Close 'False
            Next vaFileName
        End If
    End With


' Turn the screen updating back on
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic

End Sub
Attribute VB_Name = "SuperRugby"
Option Explicit
Dim Round As String

Sub GetRugbyStats()
'12/2/18 chuck

Dim urlName2        As String
Dim oHttp2          As Object
Dim mySite2         As String
Dim myB             As String
Dim TextFile        As Integer
Dim FilePath        As String
Dim FileContent     As String
Dim LineArray()     As String
Dim LineContent     As String
Dim x               As Integer
Dim InitSurname     As String
Dim ClubCode        As String
Dim ClubName        As String
Dim Key             As String
    
Dim myStats         As String
Dim StatFileName    As String
Dim FileNum         As Integer

Dim PageArray()     As String
Dim z               As String

Dim y               As Integer
Dim Pages           As Integer

'Pages = 20 'number of pages
'Pages = InputBox(Prompt:="Enter number of pages of stats", Title:="STATS", Default:="22")

Application.DisplayStatusBar = True
Application.ScreenUpdating = False
'Application.Calculation = xlCalculationManual
Application.EnableEvents = False

StatFileName = "C:\FILES\SuperRugby\Data\Stats.txt"

FileNum = FreeFile
Open StatFileName For Output As #FileNum 'overwrites file

urlName2 = "https://www.foxsports.com.au/rugby/super-rugby/stats/players?sortBy=games&pageNumber=1"
Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
oHttp2.Open "GET", urlName2, False
oHttp2.send
Application.Wait (Now + TimeValue("00:00:01"))
Do While oHttp2.READYSTATE <> 4
    DoEvents
Loop
Do While oHttp2.Status <> 200
    DoEvents
Loop
mySite2 = oHttp2.responseText 'a contains source code of website
PageArray() = Split(mySite2, "Show Page")
z = Left(PageArray(4), 10)
z = Left(z, InStr(1, z, """>") - 1)
z = Trim(z)
Pages = z
Set oHttp2 = Nothing
urlName2 = ""
mySite2 = ""
z = ""
'Stop

For x = 1 To Pages
    Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & x & " of " & Pages & " pages"

    urlName2 = "https://www.foxsports.com.au/rugby/super-rugby/stats/players?sortBy=games&pageNumber=" & x
    '"https://www.foxsports.com.au/rugby/super-rugby/stats/players?sortBy=games&pageNumber=" & y
    Set oHttp2 = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    oHttp2.Open "GET", urlName2, False
    oHttp2.send
    Application.Wait (Now + TimeValue("00:00:01"))
    Do While oHttp2.READYSTATE <> 4
        DoEvents
    Loop
    Do While oHttp2.Status <> 200
        DoEvents
    Loop
    mySite2 = oHttp2.responseText 'a contains source code of website
    Set oHttp2 = Nothing
    Application.Wait (Now + TimeValue("00:00:02"))
    mySite2 = Mid(mySite2, InStr(1, mySite2, "fiso-lab-table__row-heading-primary-data"), Len(mySite2))
    '<span class="                            fiso-lab-table__row-heading-primary-data" title="Michael Hooper">M. Hooper</span>
    mySite2 = Left(mySite2, InStr(1, mySite2, "fiso-lab-pagination") - 1)
    mySite2 = strClean(mySite2)
'##### 'for testing
'Dim testFile As String
'testFile = "C:\FILES\SuperRugby\Data\test.txt"

'FileNum = FreeFile
'Open testFile For Append As #FileNum
'Print #FileNum, mySite2
'Close #FileNum
'Stop
'#####
    If InStr(1, mySite2, "There Was An Error Initializing The Module") = 0 Then
        myB = mySite2
        myB = Replace(myB, "fiso-lab-table__row-heading-primary-data", Chr(13)) 'find each record, add carriage return
        myB = Replace(myB, "<td class=", "|")
        myB = Replace(myB, "<span class=", "|")
        myB = Replace(myB, "<tr>", "|")
        myB = Replace(myB, "</tbody>", "|")
'
        myB = Replace(myB, "</span>", "")
        myB = Replace(myB, "</td>", "")
    
        myB = Replace(myB, "fiso-lab-table__row-heading-secondary-data", "")
        myB = Replace(myB, "fiso-lab-table__sorted-column", "")
        myB = Replace(myB, " title=", "")
        myB = Replace(myB, "</th>", "")
        myB = Replace(myB, "</tr>", "")
    
        myB = Replace(myB, "<", "")
        myB = Replace(myB, "/", "")
        myB = Replace(myB, """", "")
            
        myB = Trim(myB)
        'If myB = "" Then
          '  NoStats = True
        'End If
        'Stop
        LineArray() = Split(myB, Chr(13))
        For y = LBound(LineArray) To UBound(LineArray)
            'NoStats = False
            DoEvents 'stops the 'not responding' message
    
 '           Application.StatusBar = String(3, ChrW(9609)) & "  Retrieving " & y & " of " & UBound(LineArray)


        'On Error Resume Next
            If Len(Trim(LineArray(y))) <> 0 Then
                'Debug.Print y & " is " & LineArray(y)
                LineContent = LineArray(y)
                LineContent = Replace(LineContent, ">", "|", 1, 1) 'replace the first one only
                LineContent = Replace(LineContent, ">", "") 'replace all the rest
                'If NoStats = False Then
'handle duplicates
'a smith
                    If Split(LineContent, "|")(0) = "Aaron Smith" Then
                        InitSurname = "Aa Smith"
                        'myStats = myStats & "Aa Smith" & "^"
                    ElseIf Split(LineContent, "|")(0) = "Adrian Smith" Then
                        InitSurname = "Ad Smith"
'r arnold
                    ElseIf Split(LineContent, "|")(0) = "Rory Arnold" Then
                        InitSurname = "Ro Arnold"
                    ElseIf Split(LineContent, "|")(0) = "Richie Arnold" Then
                        InitSurname = "Ri Arnold"
'j goodhue
                    ElseIf Split(LineContent, "|")(0) = "Jack Goodhue" Then
                        InitSurname = "Ja Goodhue"
                    ElseIf Split(LineContent, "|")(0) = "Josh Goodhue" Then
                        InitSurname = "Jo Goodhue"
'R Smith
                    ElseIf Split(LineContent, "|")(0) = "Rhyno Smith" Then
                        InitSurname = "Rh Smith"
                    ElseIf Split(LineContent, "|")(0) = "Ruan Smith" Then
                        InitSurname = "Ru Smith"
'J Brown
                    ElseIf Split(LineContent, "|")(0) = "Jahrome Brown" Then
                        InitSurname = "Ja Brown"
                    ElseIf Split(LineContent, "|")(0) = "Jed Brown" Then
                        InitSurname = "Je Brown"
'A Mafi
                    ElseIf Split(LineContent, "|")(0) = "Alex Mafi" Then
                        InitSurname = "Al Mafi"
                    ElseIf Split(LineContent, "|")(0) = "Amanaki Mafi" Then
                        InitSurname = "Am Mafi"
'V Fifita

                    ElseIf Split(LineContent, "|")(0) = "Vaea Fifita" Then
                        InitSurname = "Va Fifita"
                    ElseIf Split(LineContent, "|")(0) = "Vunipola Fifita" Then
                        InitSurname = "Vu Fifita"

                    Else
                        InitSurname = Split(LineContent, "|")(1)                'initial and surname
                    End If
                    InitSurname = Replace(InitSurname, ".", "") 'remove the full stop
                    'InitSurname = Replace(InitSurname, "'", "") 'remove the inverted comma
                    
                    myStats = InitSurname & "^"
                    myStats = myStats & Split(LineContent, "|")(0) & "^"        'full name
                    LineContent = Replace(LineContent, "-", "0") 'now replace the dash with a zero
                    LineContent = Replace(LineContent, ",", "") 'replace the comma
                    ClubName = Split(LineContent, "|")(2)
                    ClubCode = Mid(ClubName, InStr(1, ClubName, "("), Len(ClubName))
                    ClubName = Left(ClubName, InStr(1, ClubName, "(") - 1)
                    ClubName = Trim(ClubName)               'club name
                    ClubCode = Replace(ClubCode, "(", "")
                    ClubCode = Replace(ClubCode, ")", "") 'club Code
                    Key = InitSurname & ClubCode            'key
                    
                    myStats = myStats & ClubName & "^" & ClubCode & "^" & Key & "^"
                   
                    'myStats = myStats & Split(LineContent, "|")(2) & "^"
                    myStats = myStats & Split(LineContent, "|")(3) & "^"
                    myStats = myStats & Split(LineContent, "|")(4) & "^"
                    myStats = myStats & Split(LineContent, "|")(5) & "^"
                    myStats = myStats & Split(LineContent, "|")(6) & "^"
                    myStats = myStats & Split(LineContent, "|")(7) & "^"
                    myStats = myStats & Split(LineContent, "|")(8) & "^"
                    myStats = myStats & Split(LineContent, "|")(9) & "^"
                    myStats = myStats & Split(LineContent, "|")(10) & "^"
                    myStats = myStats & Split(LineContent, "|")(11) & "^"
                    myStats = myStats & Split(LineContent, "|")(12) & "^"
                    myStats = myStats & Split(LineContent, "|")(13) & "^"
                    myStats = myStats & Split(LineContent, "|")(14) & "^"
                    myStats = myStats & Split(LineContent, "|")(15) & "^"
                    myStats = myStats & Split(LineContent, "|")(16) & "^"
                    myStats = myStats & Split(LineContent, "|")(17) & "^"
                    myStats = myStats & Split(LineContent, "|")(18) & "^"
                    myStats = myStats & Split(LineContent, "|")(19) & "^"
                    myStats = myStats & Split(LineContent, "|")(20) & "^"
                    myStats = myStats & Split(LineContent, "|")(21) & "^"
                    myStats = myStats & Split(LineContent, "|")(22) & "^"
                    myStats = myStats & Split(LineContent, "|")(23) & "^"
                    myStats = myStats & Split(LineContent, "|")(24) & "^"
                    myStats = myStats & Split(LineContent, "|")(25)
                'Else
                '    myStats = myStats & "0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0^0"
                    '                    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
                'End If
                'Debug.Print myStats
                'Stop
                Print #FileNum, myStats
            End If
            LineContent = ""
            myStats = ""
skiphere:
           'Stop
        Next y
        mySite2 = ""
    End If
    mySite2 = ""
    myB = ""
Next x

Close #FileNum

Application.ScreenUpdating = True
'Application.Calculation = xlCalculationAutomatic
Application.EnableEvents = True

MsgBox ("Da Da   done")
'Application.DisplayStatusBar = False
Application.StatusBar = ""
NoFile:
End Sub
Sub FindDuplicates()
'
Dim sFile           As String
'Dim SFileBac           As String
Dim rng             As Range
'Dim myX             As Range
'Dim lastRow         As Long
Dim sName           As String
Dim nameCount       As Long
Dim r               As Long
Dim DupNames        As String
'Dim s(1 To 3)       As String
'Dim n(4 To 15)      As Long
'Dim d               As Long
'Dim sAdd            As String
'Dim nFileNum        As Long

'Dim mySelection As Range
'Dim myField As Range
'Dim sOut As String

sFile = "C:\FILES\SuperRugby\Data\Stats.txt"
'SFileBac = "C:\FILES\NRL\data\PlayerStats_bac.txt"
'FileCopy SFile, SFileBac
'import the file into excel
'    Workbooks.OpenText FileName:=SFile, Origin:=437, StartRow:=1, _
'        DataType:=xlDelimited, Other:=True, OtherChar:="^", _
'        FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), _
'        Array(6, 1), Array(7, 1), Array(8, 1), Array(9, 1), Array(10, 1), Array(11, 1), _
'        Array(12, 1), Array(13, 1), Array(14, 1), Array(15, 1)), TrailingMinusNumbers:=True
    
     Workbooks.OpenText fileName:=sFile, Origin:= _
        437, StartRow:=1, DataType:=xlDelimited, Other:=True, OtherChar:="^", _
        FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1), Array(15 _
        , 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), Array(20, 1), Array(21, 1), _
        Array(22, 1), Array(23, 1), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array( _
        28, 1)), TrailingMinusNumbers:=True
    Cells.Select
    Selection.Sort key1:=Range("E1"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
        DataOption1:=xlSortNormal
'Set mySelection = Range("C3:C" & Range("C" & Rows.count).End(xlUp).row) 'HorseNo
'    For Each myX In mySelection 'Col C
Set rng = Range("E1:E" & Range("E" & Rows.count).End(xlUp).Row)
For r = 1 To rng.Rows.count
    sName = rng.Rows(r).value
    nameCount = Application.WorksheetFunction.CountIf(rng.Columns(1), sName)
    If nameCount > 1 Then
        Range("E" & r).Interior.ColorIndex = 8 'blue
        If DupNames <> "" Then
            DupNames = DupNames & vbCrLf & sName
        Else
            DupNames = sName
        End If
    End If
Next r
If DupNames <> "" Then
    MsgBox "Duplicate names were found" & vbCrLf & DupNames
    End
Else
    MsgBox "No duplicates found"
End If
ActiveWorkbook.Close SaveChanges:=False
End Sub

Sub GetRugbygames()
Dim Work As String
Dim oHttp As Object

'make sure teams have been picked
    'Round = InputBox(Prompt:="Enter URL for this round games", Title:="URL")
    Round = InputBox(Prompt:="Enter URL for this round games", Title:="URL", Default:="https://www.foxsports.com.au/rugby/super-rugby/lineups/round/2")
'https://www.foxsports.com.au/rugby/super-rugby/lineups/round/2
    'Set oHttp = CreateObject("MSXML2.XMLHTTP")
    Set oHttp = CreateObject("Msxml2.ServerXMLHTTP") 'this one stops the Access Denied error
    oHttp.Open "GET", Round, False
    oHttp.send
    Work = oHttp.responseText 'a contains source code of website
    Set oHttp = Nothing
    Work = strClean(Work) 'public function in StandMacros
    If InStr(1, Work, "Line Ups information not available yet") > 0 Then
            MsgBox ("Not all teams announced yet")
            Work = ""
            'GoTo NoTeams:
    End If
        Call RugbyGames
        MsgBox "Done!"
NoTeams:
End Sub
Private Sub RugbyGames()
Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim element1s As WebElementCollection
Dim element1 As WebElement
Dim element2s As WebElementCollection
Dim element2 As WebElement
Dim Element3s As WebElementCollection
Dim Element3 As WebElement
Dim Element4s As WebElementCollection
Dim Element4 As WebElement
Dim Element5s As WebElementCollection
Dim Element5 As WebElement
'Dim Element6s As IHTMLElementCollection
'Dim Element6 As IHTMLElement

'Dim SpanNames As IHTMLElementCollection
'Dim SpanName As IHTMLElement

Dim myWork As String
Dim urlName As String

'Dim ie As InternetExplorer
'Dim html As HTMLDocument

'Dim myTemp As String
Dim Location As String
Dim Stadium As String
Dim team1 As String
Dim team2 As String
Dim Team1Code As String
Dim Team2Code As String
Dim MatchDate As String
Dim GameNo As Integer

Dim myGame As String 'details of the game
Dim myPlayer As String 'details of each player
Dim PlayerCode As String 'code
Dim PlayerNo As Integer
Dim Player1 As String
Dim Player2 As String
Dim StatFileName As String
Dim FileNum As Integer

Dim x As String

Dim TeamArray() As String
Dim z           As Integer
Dim LineContent As String


'$$$ testing
'https://www.foxsports.com.au/rugby/super-rugby/lineups
'        https://www.foxsports.com.au/rugby/super-rugby/lineups/round/2
'Round = "https://www.foxsports.com.au/rugby/super-rugby/lineups/round/20"
'Dim x As Long
'#### end of testing

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("phantomjs.exe")
'---------------
Application.StatusBar = "Waiting on Rugby webpage ..."

driver.Start "phantomjs", Round
driver.setImplicitWait 10000
driver.Wait (500)

urlName = "/"
driver.get urlName, Raise:=False
GameNo = 0
    '/html/body/div[7]
Set startElement = driver.findElementByXPath("/html/body/div[7]")
Set elements = startElement.findElementsByTagName("div")
'If InStr(1, elements.getAttribute("alt"), "Team logo for") > 0 Then
For Each element In elements
    'Stop
    'Debug.Print Element.getAttribute("class")
    If InStr(1, element.getAttribute("class"), "fiso-widget fiso-widgets-lineups-by-round") > 0 Then

        'Stop
        'Debug.Print Element.text
        Set element1s = element.findElementsByTagName("ul")
        For Each element1 In element1s
            'Debug.Print Element1.text
            If element1.getAttribute("class") = "fiso-widgets-lineups-by-round__tile-list" Then
                'Debug.Print Element1.text
                Set element2s = element1.findElementsByTagName("li")
                For Each element2 In element2s
                    GameNo = GameNo + 1
                    PlayerNo = 0
                    'Stop
                    'Debug.Print Element2.text
                    If InStr(1, element2.getAttribute("innerHTML"), "Line Ups information not available yet") > 0 _
                        Or InStr(1, element2.getAttribute("innerHTML"), "player--empty") > 0 Then
                        MsgBox ("Teams have not yet been announced for game: " & GameNo)
                        'myWork = ""
                        'Exit For
                        GoTo SkipThisOne:
                    End If
                    Set Element3s = element2.findElementsByTagName("div")
                    For Each Element3 In Element3s
                        If Element3.getAttribute("class") = "fsui-normalise fiso-widgets-scorecard" Then
                        'Stop
                            'myWork = Element3.text
                            'Debug.Print myWork
                            myWork = Element3.getAttribute("innerHTML")
                            'Stop
                            'Debug.Print "-------------------------------"
                            myWork = strClean(myWork)
                            'Debug.Print myWork
                            myWork = Replace(myWork, "><", Chr(13))
                            Location = Split(myWork, Chr(13))(3)
                            Location = Mid(Location, InStr(1, Location, "content=") + 9, Len(Location))
                            Location = Replace(Location, """", "")
                            
                            Stadium = Split(myWork, Chr(13))(4)
                            Stadium = Mid(Stadium, InStr(1, Stadium, "content=") + 9, Len(Stadium))
                            Stadium = Replace(Stadium, """", "")
                            
                            team1 = Split(myWork, Chr(13))(8)
                            team1 = Mid(team1, InStr(1, team1, "content=") + 9, Len(team1))
                            team1 = Replace(team1, """", "")
                            
                            Team1Code = Split(myWork, Chr(13))(10)
                            Team1Code = Mid(Team1Code, InStr(1, Team1Code, "team-name") + 11, Len(Team1Code))
                            Team1Code = Replace(Team1Code, "</div", "")
                            
                            team2 = Split(myWork, Chr(13))(17)
                            team2 = Mid(team2, InStr(1, team2, "content=") + 9, Len(team2))
                            team2 = Replace(team2, """", "")
                            
                            Team2Code = Split(myWork, Chr(13))(19)
                            Team2Code = Mid(Team2Code, InStr(1, Team2Code, "team-name") + 11, Len(Team2Code))
                            Team2Code = Replace(Team2Code, "</div", "")
                            
                            MatchDate = Split(myWork, Chr(13))(22)
                            MatchDate = Mid(MatchDate, InStr(1, MatchDate, "match-date") + 12, Len(MatchDate))
                            MatchDate = Replace(MatchDate, "</div", "")

                            myGame = GameNo & "^" & GameNo & " " & team1 & " v " & team2 & " : " & MatchDate & " " & Stadium & ", " & Location
                            
                            'Debug.Print myGame
                            
                         End If
                        myWork = ""
                        'myTemp = ""
                        
                    Next Element3
                    'Stop
                    Set Element4s = element2.findElementsByTagName("tbody") 'there is only 1 table
                    For Each Element4 In Element4s
                        Set Element5s = Element4.findElementsByTagName("tr")
                        For Each Element5 In Element5s
                            If InStr(1, Element5.getAttribute("innerHTML"), "Line Ups information not available yet") > 0 _
                                Or InStr(1, Element5.getAttribute("innerHTML"), "player--empty") > 0 Then
                                MsgBox ("Teams have not yet been announced for game: " & GameNo)
                                'myWork = ""
                                'myGame = ""
                                'Exit For
                                GoTo SkipThisOne:
                            End If
                    
                                PlayerNo = PlayerNo + 1
                                Application.StatusBar = "Process Game No " & GameNo & " Player No " & PlayerNo
                                myWork = Element5.getAttribute("innerHTML")
                                myWork = strClean(myWork)
                                'Debug.Print myWork
                                myWork = Replace(myWork, "><", Chr(13))
                                PlayerCode = Split(myWork, Chr(13))(2)
                                PlayerCode = Mid(PlayerCode, InStr(1, PlayerCode, "player-code") + 13, Len(PlayerCode))
                                PlayerCode = Replace(PlayerCode, "</span", "")
                                
                                Player1 = Split(myWork, Chr(13))(3)
                                Player1 = Mid(Player1, InStr(1, Player1, "player-name") + 13, Len(Player1))
                                Player1 = Replace(Player1, "</span", "")
                                Player1 = Replace(Player1, ".", "")
                                
                                Player2 = Split(myWork, Chr(13))(9)
                                Player2 = Mid(Player2, InStr(1, Player2, "player-name") + 13, Len(Player2))
                                Player2 = Replace(Player2, "</span", "")
                                Player2 = Replace(Player2, ".", "")
                                
'a smith
                                If Player1 = "A Smith" And Team1Code = "HIG" Then
                                    If PlayerCode = "SHLF" Then
                                        Player1 = "Aa Smith"
                                    ElseIf PlayerCode = "HOOK" Then
                                        Player1 = "Ad Smith"
                                    End If
                                ElseIf Player2 = "A Smith" And Team2Code = "HIG" Then
                                    If PlayerCode = "SHLF" Then
                                        Player2 = "Aa Smith"
                                    ElseIf PlayerCode = "HOOK" Then
                                        Player2 = "Ad Smith"
                                    End If
'j Goodhue
                                ElseIf Player1 = "J Goodhue" And Team1Code = "CRU" Then
                                    Player1 = "Ja Goodhue"
                                ElseIf Player1 = "J Goodhue" And Team1Code = "BLU" Then
                                        Player1 = "Jo Goodhue"
                                ElseIf Player2 = "J Goodhue" And Team2Code = "CRU" Then
                                    Player2 = "Ja Goodhue"
                                ElseIf Player2 = "J Goodhue" And Team2Code = "BLU" Then
                                        Player2 = "Jo Goodhue"
'r arnold
                                ElseIf Player1 = "Rory Arnold" Then
                                    Player1 = "Ro Arnold"
                                ElseIf Player1 = "Richie Arnold" Then
                                    Player1 = "Ri Arnold"
                                ElseIf Player1 = "R Arnold" And Team1Code = "BRU" Then
                                    If PlayerCode = "LCK1" Then
                                        Player1 = "Ro Arnold"
                                    Else
                                        Player1 = "Ri Arnold"
                                    End If
                                ElseIf Player2 = "Rory Arnold" Then
                                    Player2 = "Ro Arnold"
                                ElseIf Player2 = "Richie Arnold" Then
                                    Player2 = "Ri Arnold"
                                ElseIf Player2 = "R Arnold" And Team2Code = "BRU" Then
                                    If PlayerCode = "LCK1" Then
                                        Player2 = "Ro Arnold"
                                    Else
                                        Player2 = "Ri Arnold"
                                    End If
                                End If
'R Smith
                                If Player1 = "R Smith" And Team1Code = "SHA" Then
                                       Player1 = "Rh Smith"
                                ElseIf Player1 = "R Smith" And Team1Code = "RED" Then
                                        Player1 = "Ru Smith"
                                ElseIf Player2 = "R Smith" And Team2Code = "SHA" Then
                                       Player2 = "Rh Smith"
                                ElseIf Player2 = "R Smith" And Team2Code = "RED" Then
                                        Player2 = "Ru Smith"
                                End If
'J Brown
                                If Player1 = "J Brown" Then
                                    Player1 = fixPlayer(Player1 & Team1Code)
                                ElseIf Player2 = "J Brown" Then
                                    Player2 = fixPlayer(Player2 & Team2Code)
                                End If
                               
 '                               If Player1 = "J Brown" And Team1Code = "BRU" Then
 '                                      Player1 = "Ja Brown"
 '                               ElseIf Player1 = "J Brown" And Team1Code = "BLU" Then
 '                                       Player1 = "Je Brown"
 '                               ElseIf Player2 = "J Brown" And Team2Code = "BRU" Then
 '                                      Player2 = "Ja Brown"
 '                               ElseIf Player2 = "J Brown" And Team2Code = "BLU" Then
 '                                       Player2 = "Je Brown"
 '                               End If
'Al Mafi Alex Mafi   Reds    RED
'Am Mafi Amanaki Mafi    Sunwolves   SUN
'A Mafi
                                If Player1 = "A Mafi" Then
                                    Player1 = fixPlayer(Player1 & Team1Code)
                                ElseIf Player2 = "A Mafi" Then
                                    Player2 = fixPlayer(Player2 & Team2Code)
                                End If
                                
                                'If Player1 = "A Mafi" And Team1Code = "RED" Then
                                '       Player1 = "Al Mafi"
                                'ElseIf Player1 = "A Mafi" And Team1Code = "SUN" Then
                                '        Player1 = "Am Mafi"
                                'ElseIf Player2 = "A Mafi" And Team2Code = "RED" Then
                                '       Player2 = "Al Mafi"
                                'ElseIf Player2 = "A Mafi" And Team2Code = "SUN" Then
                                '        Player2 = "Am Mafi"
                                'End If
'V Fifita
                                If Player1 = "V Fifita" Then
                                    Player1 = fixPlayer(Player1 & Team1Code)
                                ElseIf Player2 = "V Fifita" Then
                                    Player2 = fixPlayer(Player2 & Team2Code)
                                End If
                                
                                myWork = ""
                                StatFileName = "C:\FILES\SuperRugby\Data\Games.txt"

                                FileNum = FreeFile
                                Open StatFileName For Append As #FileNum
                                Print #FileNum, myGame & "^" & team1 & "^" & PlayerNo & "^" & PlayerCode & "^" & Player1 & "^" & Player1 & Team1Code
                                Print #FileNum, myGame & "^" & team2 & "^" & PlayerNo & "^" & PlayerCode & "^" & Player2 & "^" & Player2 & Team2Code
                                Close #FileNum
                                
                                PlayerCode = ""
                                Player1 = ""
                                Player2 = ""
                                'myWork = ""
                                'Stop
                                If PlayerNo = 15 Then Exit For
                        Next Element5

                    Next Element4

SkipThisOne:
                    myGame = ""
                    Location = ""
                    Stadium = ""
                    team1 = ""
                    Team1Code = ""
                    team2 = ""
                    Team2Code = ""
                    MatchDate = ""
                Next element2

            End If
        Next element1

    End If
Next element
done:
    driver.stop
    Application.StatusBar = ""
    'MsgBox "Done!"
End Sub
Private Function fixPlayer(myStr As String)
'fix player initial and surname
    Select Case myStr
        Case "V FifitaHUR"
            myStr = "Va Fifita"
        Case "V FifitaBRU"
            myStr = "Vu Fifita"
        Case "A MafiRED"
            myStr = "Al Mafi"
        Case "A MafiSUN"
            myStr = "Am Mafi"
        Case "J BrownBRU"
            myStr = "Ja Brown"
        Case "J BrownBLU"
            myStr = "Je Brown"
    End Select

fixPlayer = myStr
End Function
Sub SetUpRUGBYsheet()

    Call RUGBYSetupSheet
    Call RUGBYbest
    'Call RUGBYBuildScore 'Don't use - done in dbase
    Call RUGBYBuildTeamScores
    Call RUGBYFinalPoints
    Call RUGBYprintSheet
    
End Sub
Private Sub RUGBYSetupSheet()

    Cells.Select
    Selection.ClearOutline
    Cells.Select
    Selection.RowHeight = 13.5
    If Range("A1").value = "GameNo" Then
        Columns("A:A").Delete Shift:=xlToLeft
    End If
    Range("D2").Select
    ActiveWindow.FreezePanes = True
' set columns width
    Columns("A:C").ColumnWidth = 2.56
    'Columns("C:C").ColumnWidth = 15 'player no
    Columns("D:D").ColumnWidth = 14
    Columns("E:Q").ColumnWidth = 4.11
    Columns("R:AN").ColumnWidth = 4.11
    'Columns("AJ:AJ").ColumnWidth = 6
' put some heading in
    Range("W1").value = "Score"
    'Range("X1").value = "Score"
    Range("X1").value = "K"
    Range("Y1").value = "KM"
    Range("Z1").value = "TCK"
    Range("AA1").value = "T"
    Range("AB1").value = "PTS"
    Range("AC1").value = "R"
    Range("AD1").value = "RM"
    Range("AE1").value = "LB"
    Range("AF1").value = "TB"
    Range("AG1").value = "OFF"
    Range("AH1").value = "TO"
    Range("AI1").value = "ERR"
    Range("AJ1").value = "PEN"
    
    Range("AK1").value = "MT"
    Range("AL1").value = "RC/YC"
    Range("AM1").value = "P"
    'Range("AN1").value = "Fantasy"
'Remove any previous col colours
    Range("W:AN").Interior.ColorIndex = xlNone

'highlight the important ones
'    Range("S1, T1, U1, V1, W1, Y1, Z1, AB1, T1, AA1, AC1").Interior.ColorIndex = 6
'    Range("R1, V1").Interior.ColorIndex = 6
End Sub
Private Sub RUGBYbest()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myKicks         As Range
    Dim myKickMetres    As Range
    Dim myTackles       As Range
    Dim myTries         As Range
    Dim myPoints        As Range
    Dim myRuns          As Range
    Dim myRunMetres     As Range
    Dim myLineBreaks    As Range
    Dim myTackleBusts   As Range
    Dim myOffLoads      As Range
    Dim myTurnovers     As Range
    Dim myHandlingErrors As Range
    Dim myPenaltiesConceded As Range
    Dim myMissedTackles As Range
    Dim myYellowCards   As Range
    Dim myRedCards      As Range
    Dim myPilfers       As Range
    Dim MyFantasy       As Range
    
    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    
    Dim team1           As Long
    Dim team2           As Long
    Dim T1HLit          As Long
    Dim T2HLit          As Long
    Dim TmpCount        As Long
    
'Remove any previous col colours
    Range("E:V").Interior.ColorIndex = xlNone
    On Error Resume Next
    myRow1 = 3
    lastRow = Range("D65536").End(xlUp).Row
    Range("A" & lastRow + 1).value = "END"
    Set myselection = Range("D2:D" & lastRow) 'Player name
        For Each myX In myselection 'col D
            If myX.Offset(0, -3) <> "" Then 'found the beginning of a game
                team1 = Range("B" & myX.Row).End(xlDown).Row
                Range("A" & myX.Row).End(xlDown).Select 'select whole game with 2 teams
                myRowEnd = Selection.Row
'check correct amount of players
                If myRowEnd Mod 33 <> 2 Then
                'If myRowEnd <> 332 And myRowEnd <> 299 And myRowEnd <> 266 And myRowEnd <> 233 And myRowEnd <> 200 And myRowEnd <> 167 And myRowEnd <> 118 _
                    And myRowEnd <> 134 And myRowEnd <> 101 And myRowEnd <> 68 And myRowEnd <> 35 Then
                    MsgBox ("The number of players in the sheet does not match 15 players for each game, rectify before continuing!")
                    Range("A" & myRowEnd).Select
                    End
                End If
                team2 = Range("B" & Selection.Row).End(xlUp).Row
                T1HLit = 0
                T2HLit = 0
           End If
            If myX.Row = myRow1 Then

                Set myRng = Range("D" & myRow1 & ":D" & myRowEnd) 'The range to work on Player Name
                Set myKicks = Range("E" & myRow1 & ":E" & myRowEnd)
                Set myKickMetres = Range("F" & myRow1 & ":F" & myRowEnd)
                Set myTackles = Range("G" & myRow1 & ":G" & myRowEnd)
                Set myTries = Range("H" & myRow1 & ":H" & myRowEnd)
                Set myPoints = Range("I" & myRow1 & ":I" & myRowEnd)
                Set myRuns = Range("J" & myRow1 & ":J" & myRowEnd)
                Set myRunMetres = Range("K" & myRow1 & ":K" & myRowEnd)
                Set myLineBreaks = Range("L" & myRow1 & ":L" & myRowEnd)
                Set myTackleBusts = Range("M" & myRow1 & ":M" & myRowEnd)
                Set myOffLoads = Range("N" & myRow1 & ":N" & myRowEnd)
                Set myTurnovers = Range("O" & myRow1 & ":O" & myRowEnd)
                Set myHandlingErrors = Range("P" & myRow1 & ":P" & myRowEnd)
                Set myPenaltiesConceded = Range("Q" & myRow1 & ":Q" & myRowEnd)
                Set myMissedTackles = Range("R" & myRow1 & ":R" & myRowEnd)
                Set myYellowCards = Range("S" & myRow1 & ":S" & myRowEnd)
                Set myRedCards = Range("T" & myRow1 & ":T" & myRowEnd)
                Set myPilfers = Range("U" & myRow1 & ":U" & myRowEnd)
                Set MyFantasy = Range("V" & myRow1 & ":V" & myRowEnd)
                    
                For Each myY In myRng 'the one game working down Col D
                    If myY <> "" Then
                        TmpCount = 0
                        If myY.Offset(0, 1).value = Application.Max(myKicks) Then
                            myY.Offset(0, 1).Interior.ColorIndex = 4 ' green
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 1).value > Application.Average(myKicks) Then
                            myY.Offset(0, 1).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 2).value = Application.Max(myKickMetres) Then
                            myY.Offset(0, 2).Interior.ColorIndex = 4 ' green
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 2).value > Application.Average(myKickMetres) Then
                            myY.Offset(0, 2).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 3).value = Application.Max(myTackles) Then
                            myY.Offset(0, 3).Interior.ColorIndex = 4 '
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 3).value > Application.Average(myTackles) Then
                            myY.Offset(0, 3).Interior.ColorIndex = 19 '
                        End If
                        If myY.Offset(0, 4).value = Application.Max(myTries) Then
                            myY.Offset(0, 4).Interior.ColorIndex = 4 '
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 4).value > Application.Average(myTries) Then
                            myY.Offset(0, 4).Interior.ColorIndex = 19 '
                        End If
                        If myY.Offset(0, 5).value = Application.Max(myPoints) Then
                            myY.Offset(0, 5).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 5).value > Application.Average(myPoints) Then
                            myY.Offset(0, 5).Interior.ColorIndex = 19
                        End If
                        If myY.Offset(0, 6).value = Application.Max(myRuns) Then
                            myY.Offset(0, 6).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 6).value > Application.Average(myRuns) Then
                            myY.Offset(0, 6).Interior.ColorIndex = 19 '
                        End If
                        If myY.Offset(0, 7).value = Application.Max(myRunMetres) Then
                            myY.Offset(0, 7).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 7).value > Application.Average(myRunMetres) Then
                            myY.Offset(0, 7).Interior.ColorIndex = 19
                        End If
                        If myY.Offset(0, 8).value = Application.Max(myLineBreaks) Then
                            myY.Offset(0, 8).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 8).value > Application.Average(myLineBreaks) Then
                            myY.Offset(0, 8).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 9).value = Application.Max(myTackleBusts) Then
                            myY.Offset(0, 9).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 9).value > Application.Average(myTackleBusts) Then
                            myY.Offset(0, 9).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 10).value = Application.Max(myOffLoads) Then
                            myY.Offset(0, 10).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 10).value > Application.Average(myOffLoads) Then
                            myY.Offset(0, 10).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 11).value = Application.Max(myTurnovers) Then
                            myY.Offset(0, 11).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 11).value > Application.Average(myTurnovers) Then
                            myY.Offset(0, 11).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 18).value <> 0 Then 'ensure they have played before
                            If myY.Offset(0, 12).value = Application.Min(myHandlingErrors) Then
                                myY.Offset(0, 12).Interior.ColorIndex = 4
                                TmpCount = TmpCount + 1
                            ElseIf myY.Offset(0, 12).value < Application.Average(myHandlingErrors) Then
                                myY.Offset(0, 12).Interior.ColorIndex = 19 ' pale yellow
                            End If
                        End If
                        If myY.Offset(0, 18).value <> 0 Then 'ensure they have played before
                            If myY.Offset(0, 13).value = Application.Min(myPenaltiesConceded) Then
                                myY.Offset(0, 13).Interior.ColorIndex = 4
                                TmpCount = TmpCount + 1
                            ElseIf myY.Offset(0, 13).value < Application.Average(myPenaltiesConceded) Then
                                myY.Offset(0, 13).Interior.ColorIndex = 19 ' pale yellow
                            End If
                        End If
                        If myY.Offset(0, 18).value <> 0 Then 'ensure they have played before
                            If myY.Offset(0, 14).value = Application.Min(myMissedTackles) Then
                                myY.Offset(0, 14).Interior.ColorIndex = 4
                                TmpCount = TmpCount + 1
                            ElseIf myY.Offset(0, 14).value < Application.Average(myMissedTackles) Then
                                myY.Offset(0, 14).Interior.ColorIndex = 19 ' pale yellow
                            End If
                        End If
                        If myY.Offset(0, 18).value <> 0 Then 'ensure they have played before
                            'If myY.Offset(0, 15).value = Application.Min(MyYellowCards) Then
                            If myY.Offset(0, 15).value <> Application.Min(myYellowCards) Then
                                'myY.Offset(0, 15).Interior.ColorIndex = 4 'green
                                myY.Offset(0, 15).Interior.ColorIndex = 22 'pink
                                'TmpCount = TmpCount + 1
                            'ElseIf myY.Offset(0, 15).value < Application.Average(MyYellowCards) Then
                                'myY.Offset(0, 15).Interior.ColorIndex = 19 ' pale yellow
                            End If
                        End If
                        If myY.Offset(0, 18).value <> 0 Then 'ensure they have played before
                            'If myY.Offset(0, 16).value = Application.Min(MyRedCards) Then
                            If myY.Offset(0, 16).value <> Application.Min(myRedCards) Then
                                'myY.Offset(0, 16).Interior.ColorIndex = 4
                                myY.Offset(0, 16).Interior.ColorIndex = 22 ' pink
                                'TmpCount = TmpCount + 1
                            'ElseIf myY.Offset(0, 16).value < Application.Average(MyRedCards) Then
                                'myY.Offset(0, 16).Interior.ColorIndex = 19 ' pale yellow
                            End If
                        End If
                        If myY.Offset(0, 17).value = Application.Max(myPilfers) Then
                            myY.Offset(0, 17).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 17).value > Application.Average(myPilfers) Then
                            myY.Offset(0, 17).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        If myY.Offset(0, 18).value = Application.Max(MyFantasy) Then
                            myY.Offset(0, 18).Interior.ColorIndex = 4
                            TmpCount = TmpCount + 1
                        ElseIf myY.Offset(0, 18).value > Application.Average(MyFantasy) Then
                            myY.Offset(0, 18).Interior.ColorIndex = 19 ' pale yellow
                        End If
                        
                        If myY.Row < team2 Then
                            T1HLit = T1HLit + TmpCount
                        ElseIf myY.Row > team2 Then
                            T2HLit = T2HLit + TmpCount
                        End If
                        If myY.Row = myRowEnd - 1 Then
                            myY.Offset(-26, 21).value = T1HLit
                            T1HLit = 0
                            myY.Offset(-25, 21).value = T2HLit
                            T2HLit = 0
                        End If
                    End If
                Next myY
                myRow1 = myRowEnd + 1
            End If
        Next myX
Range("A1").Select
End Sub
Private Sub RUGBYBuildTeamScores()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    'Dim myRng           As Range
    Dim myValue         As Range
    Dim myKicks         As Range
    Dim myKickMetres       As Range
    Dim myTackles        As Range
    Dim myTries         As Range
    Dim myPoints      As Range
    Dim myRuns      As Range
    Dim myRunMetres         As Range
    Dim myLineBreaks       As Range
    Dim myTackleBusts       As Range
    Dim myOffLoads   As Range
    Dim myTurnovers       As Range
    Dim myHandlingErrors      As Range
    
    Dim myPenaltiesConceded      As Range
    Dim myMissedTackles      As Range
    Dim myYellowCards      As Range
    Dim myRedCards      As Range
    Dim myPilfers      As Range
    
    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    Dim writeRow        As Long
    
    On Error Resume Next
    myRow1 = 3
'get the whole sheet range
    lastRow = Range("D65536").End(xlUp).Row
    Range("B" & lastRow + 1).value = "END"
    Set myselection = Range("D2:D" & lastRow) 'Player name whole sheet
        For Each myX In myselection 'col D
            If myX.Offset(0, -2) <> "" Then 'found the beginning of a team
                writeRow = myX.Row
                Range("B" & myX.Row).End(xlDown).Select 'select whole team
                myRowEnd = Selection.Row - 1
            End If
                If myX.Row = myRow1 Then
                    'Set myRng = Range("C" & myRow1 & ":C" & myRowEnd) 'The range to work on Player
                    Set myValue = Range("V" & myRow1 & ":V" & myRowEnd) 'Player Value
                    Set myKicks = Range("E" & myRow1 & ":E" & myRowEnd)
                    Set myKickMetres = Range("F" & myRow1 & ":F" & myRowEnd)
                    Set myTackles = Range("G" & myRow1 & ":G" & myRowEnd)
                    Set myTries = Range("H" & myRow1 & ":H" & myRowEnd)
                    Set myPoints = Range("I" & myRow1 & ":I" & myRowEnd)
                    Set myRuns = Range("J" & myRow1 & ":J" & myRowEnd)
                    Set myRunMetres = Range("K" & myRow1 & ":K" & myRowEnd)
                    Set myLineBreaks = Range("L" & myRow1 & ":L" & myRowEnd)
                    Set myTackleBusts = Range("M" & myRow1 & ":M" & myRowEnd)
                    Set myOffLoads = Range("N" & myRow1 & ":N" & myRowEnd)
                    Set myTurnovers = Range("O" & myRow1 & ":O" & myRowEnd)
                    Set myHandlingErrors = Range("P" & myRow1 & ":P" & myRowEnd)
                    
                    Set myPenaltiesConceded = Range("Q" & myRow1 & ":Q" & myRowEnd)
                    Set myMissedTackles = Range("R" & myRow1 & ":R" & myRowEnd)
                    Set myYellowCards = Range("S" & myRow1 & ":S" & myRowEnd)
                    Set myRedCards = Range("T" & myRow1 & ":T" & myRowEnd)
                    Set myPilfers = Range("U" & myRow1 & ":U" & myRowEnd)
                    
                    Range("W" & writeRow).value = Application.Sum(myValue)
                    Range("X" & writeRow).value = Application.Sum(myKicks)
                    Range("Y" & writeRow).value = Application.Sum(myKickMetres)
                    Range("Z" & writeRow).value = Application.Sum(myTackles)
                    Range("AA" & writeRow).value = Application.Sum(myTries)
                    Range("AB" & writeRow).value = Application.Sum(myPoints)
                    Range("AC" & writeRow).value = Application.Sum(myRuns)
                    Range("AD" & writeRow).value = Application.Sum(myRunMetres)
                    Range("AE" & writeRow).value = Application.Sum(myLineBreaks)
                    Range("AF" & writeRow).value = Application.Sum(myTackleBusts)
                    Range("AG" & writeRow).value = Application.Sum(myOffLoads)
                    Range("AH" & writeRow).value = Application.Sum(myTurnovers)
                    Range("AI" & writeRow).value = Application.Sum(myHandlingErrors)
                    Range("AJ" & writeRow).value = Application.Sum(myPenaltiesConceded)
                    Range("AK" & writeRow).value = Application.Sum(myMissedTackles)
                    Range("AL" & writeRow).value = Application.Sum(myYellowCards) + Application.Sum(myRedCards)
                    Range("AM" & writeRow).value = Application.Sum(myPilfers)
                    
                    myRow1 = myRowEnd + 1
                End If
        Next myX
Range("A1").Select
End Sub
Private Sub RUGBYFinalPoints()

    Dim myselection     As Range
    Dim myX             As Range
    Dim myY             As Range
    Dim myRng           As Range
    Dim myValue As Range
    Dim myKicks As Range
    Dim myKickMetres As Range
    Dim myTackles As Range
    Dim myTries As Range
    Dim myPoints As Range
    Dim myRuns As Range
    Dim myRunMetres As Range
    Dim myLineBreaks As Range
    Dim myTackleBusts As Range
    Dim myOffLoads As Range
    Dim myTurnovers As Range
    Dim myHandlingErrors As Range
    Dim myPenaltiesConceded As Range
    Dim myMissedTackles As Range
    Dim myY_RCards As Range
    Dim myPilfers As Range
    Dim borderRng       As Range

    Dim myRow1          As Long
    Dim myRowEnd        As Long
    Dim lastRow         As Long
    Dim team1           As Long 'row no
    Dim team2           As Long
    Dim T1Count         As Long 'count of highlights for Team counts
    Dim T2Count         As Long
    Dim GameNo          As String
    
    Dim T1_1on1         As Long
    Dim T2_1on1         As Long
    
    Dim WinTeam         As Long
    Dim LoseTeam        As Long
    Dim WinBy           As Long
    Dim T_bestValue     As Long 'Team with the bext Value
    Dim T_bestPoints    As Long 'Team with the bext points
    'Dim T_bestFantasy   As Long
    Dim T_bestHL        As Long
    Dim T_bestCount     As Long
    Dim T_best1to1      As Long
    Dim T_diffHL        As Long
    Dim T_diffCount     As Long
    Dim T_diffValue     As Long
    Dim T_diffPoints    As Long
    Dim x               As Double
    Dim T_diff1to1      As Long
    'Dim T_diffFantasy   As Long
     
    
    On Error Resume Next
    myRow1 = 2
'get the whole sheet range
    lastRow = Range("D65536").End(xlUp).Row
    Set myselection = Range("D2:D" & lastRow) 'Player name
        For Each myX In myselection 'col D
            If myX.Offset(0, -3) <> "" Then 'the beginning of a game
                GameNo = Range("A" & myX.Row).value
                GameNo = Left(GameNo, InStr(1, GameNo, " ") - 1)
                GameNo = Trim(GameNo)
                team1 = Range("B" & myX.Row).End(xlDown).Row
                Range("A" & myX.Row).End(xlDown).Select 'select whole game with 2 teams
                myRowEnd = Selection.Row
                team2 = Range("B" & Selection.Row).End(xlUp).Row
                T1Count = 0
                T2Count = 0
                T1_1on1 = 0
                T2_1on1 = 0
                
                T_bestValue = 0
                T_bestPoints = 0
                T_bestHL = 0
                T_bestCount = 0
                T_best1to1 = 0
                T_diffHL = 0
                T_diffCount = 0
                T_diffValue = 0
                T_diffPoints = 0
                T_diff1to1 = 0
                WinTeam = 0
' add a Horizontal pagebreak after each game
                If myX.Row > 2 Then 'not the first game
                    ActiveSheet.HPageBreaks.Add Before:=ActiveSheet.Range("A" & myX.Row)
                End If
            End If
                If myX.Row = myRow1 Then
                    Set myRng = Range("W" & myRow1 & ":W" & myRowEnd) 'The range of the whole game
                    Set myValue = Range("W" & team1 & ", W" & team2) 'Player Value 0
                    Set myKicks = Range("X" & team1 & ", X" & team2) '1
                    Set myKickMetres = Range("Y" & team1 & ", Y" & team2) '2
                    Set myTackles = Range("Z" & team1 & ", Z" & team2) '3
                    Set myTries = Range("AA" & team1 & ", AA" & team2) '4
                    Set myPoints = Range("AB" & team1 & ", AB" & team2) '5
                    Set myRuns = Range("AC" & team1 & ", AC" & team2) '6
                    Set myRunMetres = Range("AD" & team1 & ", AD" & team2) '7
                    Set myLineBreaks = Range("AE" & team1 & ", AE" & team2) '8
                    Set myTackleBusts = Range("AF" & team1 & ", AF" & team2) '9
                    Set myOffLoads = Range("AG" & team1 & ", AG" & team2) '10
                    Set myTurnovers = Range("AH" & team1 & ", AH" & team2) '11
                    Set myHandlingErrors = Range("AI" & team1 & ", AI" & team2) '12
                    Set myPenaltiesConceded = Range("AJ" & team1 & ", AJ" & team2) '13
                    Set myMissedTackles = Range("AK" & team1 & ", AK" & team2) '14
                    Set myY_RCards = Range("AL" & team1 & ", AL" & team2) '15
                    Set myPilfers = Range("AM" & team1 & ", AM" & team2) '16
                    

                    For Each myY In myRng 'the one game
                        If myY.Offset(0, -20) <> "" Then
                            If myY.Row < team2 Then
                                If myY.Offset(0, -1) > myY.Offset(16, -1) Then
                                    myY.Offset(0, -20).Interior.ColorIndex = 6 ' yellow
                                    T1_1on1 = T1_1on1 + 1
                                End If
                            ElseIf myY.Row > team2 Then
                                If myY.Offset(0, -1) > myY.Offset(-16, -1) Then
                                    myY.Offset(0, -20).Interior.ColorIndex = 6 ' yellow
                                    T2_1on1 = T2_1on1 + 1
                                End If
                                If myY.Row = myRowEnd - 1 Then
                                    myY.Offset(-26, 3).value = T1_1on1
                                    T1_1on1 = 0
                                    myY.Offset(-25, 3).value = T2_1on1
                                    T2_1on1 = 0
                                End If
                            End If
                        End If
                        If myY <> "" And (myY.Row = team1 Or myY.Row = team2) Then 'col R
                            If myY.value = Application.Max(myValue) Then
                                myY.Interior.ColorIndex = 6 ' yellow
                                T_bestValue = myY.Row 'team with the best value
                            End If
                            If myY.Offset(0, 1).value = Application.Max(myKicks) Then
                                myY.Offset(0, 1).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                           End If
                            If myY.Offset(0, 2).value = Application.Max(myKickMetres) Then
                                myY.Offset(0, 2).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 3).value = Application.Max(myTackles) Then
                                myY.Offset(0, 3).Interior.ColorIndex = 6 '
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 4).value = Application.Max(myTries) Then
                                myY.Offset(0, 4).Interior.ColorIndex = 6 ' yellow
                            End If
                            If myY.Offset(0, 5).value = Application.Max(myPoints) Then
                                myY.Offset(0, 5).Interior.ColorIndex = 45 ' orange
                                T_bestPoints = myY.Row
                            End If
                            If myY.Offset(0, 6).value = Application.Max(myRuns) Then
                                myY.Offset(0, 6).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 7).value = Application.Max(myRunMetres) Then
                                myY.Offset(0, 7).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 8).value = Application.Max(myLineBreaks) Then
                                myY.Offset(0, 8).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 9).value = Application.Max(myTackleBusts) Then
                                myY.Offset(0, 9).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 10).value = Application.Max(myOffLoads) Then
                                myY.Offset(0, 10).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 11).value = Application.Max(myTurnovers) Then
                                myY.Offset(0, 11).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 12).value = Application.Min(myHandlingErrors) Then
                                myY.Offset(0, 12).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                        
                            If myY.Offset(0, 13).value = Application.Min(myPenaltiesConceded) Then
                                myY.Offset(0, 13).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 14).value = Application.Min(myMissedTackles) Then
                                myY.Offset(0, 14).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 15).value = Application.Min(myY_RCards) Then
                                myY.Offset(0, 15).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                            If myY.Offset(0, 16).value = Application.Max(myPilfers) Then
                                myY.Offset(0, 16).Interior.ColorIndex = 6 ' yellow
                                If myY.Row = team1 Then
                                    T1Count = T1Count + 1
                                ElseIf myY.Row = team2 Then
                                    T2Count = T2Count + 1
                                End If
                            End If
                        
                        End If
                        If myY.Row = team1 Then
                            myY.Offset(1, 0).value = "Diff"
                            myY.Offset(2, 0).value = Range("W" & team1).value - Range("W" & team2).value 'value
                            T_diffValue = Abs(Range("W" & team1).value - Range("W" & team2).value)
                            myY.Offset(2, 1).value = Range("X" & team1).value - Range("X" & team2).value 'kicks
                            myY.Offset(2, 2).value = Range("Y" & team1).value - Range("Y" & team2).value 'kick metres
                            myY.Offset(2, 3).value = Range("Z" & team1).value - Range("Z" & team2).value 'tackles
                            myY.Offset(2, 4).value = Range("AA" & team1).value - Range("AA" & team2).value 'Tries
                            myY.Offset(2, 5).value = Range("AB" & team1).value - Range("AB" & team2).value 'points
                            x = Abs(Range("AB" & team1).value - Range("AB" & team2).value)
                            If x < 1 Then
                                x = 1
                            End If
                            T_diffPoints = x

                            myY.Offset(2, 6).value = Range("AC" & team1).value - Range("AC" & team2).value 'runs
                            myY.Offset(2, 7).value = Range("AD" & team1).value - Range("AD" & team2).value 'run metres
                            myY.Offset(2, 8).value = Range("AE" & team1).value - Range("AE" & team2).value 'linebreaks
                            myY.Offset(2, 9).value = Range("AF" & team1).value - Range("AF" & team2).value 'tackle bust
                            myY.Offset(2, 10).value = Range("AG" & team1).value - Range("AG" & team2).value 'off loads
                            myY.Offset(2, 11).value = Range("AH" & team1).value - Range("AH" & team2).value 'turnovers
                            myY.Offset(2, 12).value = Range("AI" & team1).value - Range("AI" & team2).value 'handling errors
                            
                            myY.Offset(2, 13).value = Range("AJ" & team1).value - Range("AJ" & team2).value 'penalty conceded
                            myY.Offset(2, 14).value = Range("AK" & team1).value - Range("AK" & team2).value 'missedTackles
                            myY.Offset(2, 15).value = Range("AL" & team1).value - Range("AL" & team2).value 'Y/R cards
                            myY.Offset(2, 16).value = Range("AM" & team1).value - Range("AM" & team2).value 'Pilfers
                            
                            myY.Offset(4, 0).value = "Best Players"
                            myY.Offset(4, 2).value = "H/lit"
                            myY.Offset(4, 3).value = "1 on 1"
                            myY.Offset(4, 5).value = "Final Score"
                            myY.Offset(5, 0).value = Range("B" & team1).value
                            'myY.Offset(5, 7).value = "=(W" & Team1 + 5 & "*6)+X" & Team1 + 5 'this is for AFL
                            myY.Offset(6, 0).value = Range("B" & team2).value
                            'myY.Offset(6, 7).value = "=(W" & Team1 + 6 & "*6)+X" & Team1 + 6
                            myY.Offset(7, 5).value = "=AB" & team1 + 5 & "-AB" & team1 + 6
                            
                            myY.Offset(4, 8).value = "Forecast Score"
                            myY.Offset(-1, 16).value = T1Count
                            
                            'myY.Offset(4, 12).value = "BETFAIR forecast"
                            myY.Offset(3, 12).value = "Other forecasts"
                            myY.Offset(4, 12).value = "FootyForecaster"
                            myY.Offset(4, 14).value = "RUGBY365"
                            
                            myY.Offset(9, 1).value = "Odds:"
                            Range("Y" & team1 + 9 & ":AB" & team1 + 9).NumberFormat = "@"
                            
                            Set borderRng = Range("AB" & team1 + 5 & ":AB" & team1 + 7)
                                With borderRng.Borders(xlEdgeLeft)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeTop)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeBottom)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With
                                With borderRng.Borders(xlEdgeRight)
                                    .LineStyle = xlContinuous
                                    .Weight = xlMedium
                                End With

                        ElseIf myY.Row = team2 Then
                            myY.Offset(-1, 16).value = T2Count
                            myY.Offset(3, 1).value = "Odds:"
                            Range("Y" & team2 + 3 & ":AB" & team2 + 3).NumberFormat = "@"
                        ElseIf myY.Row = myRowEnd - 1 Then
'--------------------------
'predict winning team and score
'T_diffPoints calc (try without changing)
'T_diffValue calc (0.4 of initial value)
                            If T_diffValue > 1 Then
                                T_diffValue = T_diffValue * 0.1 'changed to .1 from .4
                                If T_diffValue = 0 Then
                                    T_diffValue = 1
                                End If
                            Else
                                T_diffValue = 1
                            End If
'T_diffFantasy
'                            If T_diffFantasy > 0 Then
'                                T_diffFantasy = T_diffFantasy * 0.05
'                            Else
'                                T_diffFantasy = 0
'                            End If

'A Value / Points
                            If T_bestValue = T_bestPoints And _
                                T_diffValue > 0 And T_diffPoints > 0 Then
                                If T_bestValue = team1 Then
                                    WinTeam = team1 + 5 'the row of the winning team
                                Else
                                    WinTeam = team1 + 6
                                End If
                                Range("AG" & WinTeam).value = T_diffValue + T_diffPoints
'B Value / Points
'not using fantasy
 '                           ElseIf T_bestValue = T_bestPoints And _
 '                               T_diffValue > 0 And T_diffPoints > 0 Then
 '                               If T_bestValue = Team1 Then
 '                                   WinTeam = Team1 + 5 'the row of the winning team
 '                               Else
 '                                   WinTeam = Team1 + 6
 '                               End If
 '                               Range("AC" & WinTeam).value = T_diffValue + T_diffPoints 'minus T_diffFantasy?
'C Team highlights
                            ElseIf T1Count <> T2Count Then
                                T_diffCount = Abs(T1Count - T2Count)
                                T_diffCount = T_diffCount * 1 'this can be changed 1.5
                                If T1Count > T2Count Then
                                    T_bestCount = team1
                                Else
                                    T_bestCount = team2
                                End If
                                If T_bestValue = T_bestCount Then
                                    If T_bestValue = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AG" & WinTeam).value = T_diffValue + T_diffCount
                                ElseIf T_bestPoints = T_bestCount Then
                                    If T_bestPoints = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AG" & WinTeam).value = T_diffPoints + T_diffCount
                                End If
'D 1on1
                            ElseIf Range("Z" & team1 + 5).value <> Range("Z" & team1 + 6).value Then 'best of 1 to 1
                                T_diff1to1 = Abs(Range("Z" & team1 + 5).value - Range("Z" & team1 + 6).value)
                                T_diff1to1 = T_diff1to1 * 1.5 'changed from 2 to 1.5
                                If Range("Z" & team1 + 5).value > Range("Z" & team1 + 6).value Then
                                    T_best1to1 = team1
                                Else
                                    T_best1to1 = team2
                                End If
                                If T_bestValue = T_best1to1 Then
                                    If T_bestValue = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AG" & WinTeam).value = T_diffValue + T_diff1to1
                                ElseIf T_bestPoints = T_best1to1 Then
                                    If T_bestPoints = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AG" & WinTeam).value = T_diffPoints + T_diff1to1
                                End If
'E H/Lit
                            ElseIf Range("Y" & team1 + 5).value <> Range("Y" & team1 + 6).value Then 'best of H/Lit
                                T_diffHL = Abs(Range("Y" & team1 + 5).value - Range("Y" & team1 + 6).value)
                                T_diffHL = T_diffHL * 1.5 'this can be changed 2
                                If Range("Y" & team1 + 5).value > Range("Y" & team1 + 6).value Then
                                    T_bestHL = team1
                                Else
                                    T_bestHL = team2
                                End If
                                If T_bestValue = T_bestHL Then
                                    If T_bestValue = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AG" & WinTeam).value = T_diffValue + T_diffHL
                                ElseIf T_bestPoints = T_bestHL Then
                                    If T_bestPoints = team1 Then
                                        WinTeam = team1 + 5 'the row of the winning team
                                    Else
                                        WinTeam = team1 + 6
                                    End If
                                    Range("AG" & WinTeam).value = T_diffPoints + T_diffHL
                                End If
                            Else
                                MsgBox ("Can't separate the Teams using 'RUGBY FinalPoints'")
                            End If
                            
                            Range("AE" & WinTeam).value = "To win by:"
                            
                            Range("AE" & team1 + 7).value = "ChkScore"
                            Range("AG" & team1 + 7).value = Range("AB" & team1 + 2).value + _
                                (Range("Y" & team1 + 5).value - Range("Y" & team1 + 6).value) + _
                                (Range("Z" & team1 + 5).value - Range("Z" & team1 + 6).value) + _
                                (Range("AM" & team1 - 1).value - Range("AM" & team1 + 15).value)
                            
                            'Debug.Print "T_diffPoints: " & T_diffPoints
                            If WinTeam = team1 + 5 Then 'the row of the winning team
                                LoseTeam = team1 + 6
                            Else
                                LoseTeam = team1 + 5
                            End If
                                
                            WinBy = Range("AG" & WinTeam).value
                            'Debug.Print WinBy
                            RUGBYLog "Game: " & GameNo & " " & Range("W" & WinTeam).value & " to defeat " & Range("W" & LoseTeam).value & " by " & WinBy
                            
                            'works okay but could have more work on this area

'----------------------------
                        End If
                    Next myY
                    myRow1 = myRowEnd + 1
                End If
        Next myX
Range("A1").Select
End Sub
Sub RUGBYLog(LogMessage As String)
Dim LogFileName As String
Dim FileNum As Integer

LogFileName = "C:\FILES\SuperRugby\Process.txt"

FileNum = FreeFile ' next file number
Open LogFileName For Append As #FileNum ' creates the file if it doesn't exist
Print #FileNum, LogMessage ' write information at the end of the text file & vbCrLf
Close #FileNum ' close the file

End Sub
Private Sub RUGBYprintSheet()
Dim lastRow As Long
lastRow = (Range("A" & Rows.count).End(xlUp).Row) - 1
     
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$1:$1"
        .PrintTitleColumns = ""
    End With
    ActiveSheet.PageSetup.PrintArea = "A1:AM" & lastRow
    With ActiveSheet.PageSetup
        .CenterHeader = "&F"
        .LeftMargin = Application.InchesToPoints(0.196850393700787)
        .RightMargin = Application.InchesToPoints(0.196850393700787)
        .TopMargin = Application.InchesToPoints(0.393700787401575)
        .BottomMargin = Application.InchesToPoints(0.393700787401575)
        .HeaderMargin = Application.InchesToPoints(0.196850393700787)
        .FooterMargin = Application.InchesToPoints(0.196850393700787)
        .PrintHeadings = False
        .PrintGridlines = True
        .PrintComments = xlPrintNoComments
       ' .PrintQuality = 600
        .CenterHorizontally = False
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = False
        .PrintErrors = xlPrintErrorsDisplayed
     End With
    Range("D2").Select
End Sub
Sub GetRUGBYOdds()

Dim wkName      As String
Dim objWeb      As QueryTable
Dim urlName     As String
Dim urlName1    As String
Dim wbA         As Workbook
Dim wbB         As Workbook
Dim myCol       As Range
Dim myX         As Range
Dim rng         As Range
Dim myY         As Range
Dim r           As Long
Dim found       As Long
'Dim teamA       As String
'Dim teamB       As String
'Dim teamAOdds   As String
'Dim teamBOdds   As String
'Dim teamAPoints As String
'Dim teamBPoints As String

Dim team1       As String
Dim team2       As String
Dim team1Odds   As String
Dim team2Odds   As String
Dim team1Points As String
Dim team2Points As String

Dim GameNo      As String

Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
'Dim element1s As WebElementCollection
'Dim Element1 As WebElement

Dim myWork As String
Dim RndNo As String
Dim Title As String


Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

StopMyProcess ("phantomjs.exe")
StopMyProcess ("chromedriver.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkName = Replace(wkName, " ", "-")
'Set wbA = ActiveWorkbook 'current round

'driver.Start "phantomjs", "https://tab.ubet.com/sports/rugby-union/super-rugby/super-rugby-matches"
driver.Start "chrome", "https://tab.ubet.com/sports/rugby-union/super-rugby/super-rugby-matches"
driver.setImplicitWait 10000
driver.Wait (1000)

urlName = "/"
driver.get urlName, Raise:=False
driver.Wait (1000)
driver.maximizeWindow
On Error Resume Next
If InStr(1, driver.PageSource, "acc_exitButton") > 0 Then
    driver.findElementByXPath("//*[@id='acc_exitButton']").Click 'works
    'driver.getScreenshot.Copy 'works well
    'Stop

'    Set startElement = driver.findElementByXPath("//*[@id='acc_lightbox']/div[1]")
'    Set Elements = startElement.findElementsByTagName("button")
'    For Each Element In Elements
'        If Element.getAttribute("id") = "acc_exitButton" Then
'            Element.Click
'            Exit For
'        End If
'    Next Element
End If
Application.StatusBar = "Getting Rugby Odds ..."
Set startElement = driver.findElementByXPath("//*[@id='page-container']/sports-container/div/div[3]/div/meetings/div")

Set elements = startElement.findElementsByTagName("div")
For Each element In elements
    If element.getAttribute("class") = "main-event" Then 'got the game
        myWork = element.text
        Title = Split(myWork, vbCrLf)(0)
        team1 = Split(myWork, vbCrLf)(2)
        team1Odds = Split(myWork, vbCrLf)(3)
        team2 = Split(myWork, vbCrLf)(4)
        team2Odds = Split(myWork, vbCrLf)(5)
        team1Points = Split(myWork, vbCrLf)(7)
        If InStr(1, Split(myWork, vbCrLf)(7), "-") > 0 Then
            team1Points = Mid(team1Points, InStr(1, team1Points, "-") + 1, Len(team1Points))
        Else
            team1Points = ""
        End If
        team2Points = Split(myWork, vbCrLf)(9)
        If InStr(1, Split(myWork, vbCrLf)(9), "-") > 0 Then
            team2Points = Mid(team2Points, InStr(1, team2Points, "-") + 1, Len(team2Points))
        Else
            team2Points = ""
        End If
        team1Points = Trim(team1Points)
        team2Points = Trim(team2Points)
    'Stop
        Select Case team1
            Case "Melbourne Rebels"
                team1 = "Rebels"
            Case "QLD Reds"
                team1 = "Reds"
            Case "ACT Brumbies"
                team1 = "Brumbies"
            Case "NSW Waratahs"
                team1 = "Waratahs"
        End Select
        Select Case team2
            Case "Melbourne Rebels"
                team2 = "Rebels"
            Case "QLD Reds"
                team2 = "Reds"
            Case "ACT Brumbies"
                team2 = "Brumbies"
            Case "NSW Waratahs"
                team2 = "Waratahs"
        End Select
 
        Set myCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1)
        For Each myX In myCol 'this is col A
            If myX <> "" Then
                If InStr(1, LCase(myX), LCase(team1)) > 0 And InStr(1, LCase(myX), LCase(team2)) > 0 Then 'found the right game
                    GameNo = myX.value
                    GameNo = Left(GameNo, InStr(1, GameNo, " ") - 1)
                    GameNo = Trim(GameNo)
                    If team1 = myX.Offset(1, 1) Then
                        myX.Offset(10, 25) = team1Odds
                        myX.Offset(10, 26) = team1Points
                    ElseIf team1 = myX.Offset(17, 1) Then
                        myX.Offset(20, 25) = team1Odds
                        myX.Offset(20, 26) = team1Points
                    End If
                    If team2 = myX.Offset(1, 1) Then
                        myX.Offset(10, 25) = team2Odds
                        myX.Offset(10, 26) = team2Points
                    ElseIf team2 = myX.Offset(17, 1) Then
                        myX.Offset(20, 25) = team2Odds
                        myX.Offset(20, 26) = team2Points
                    End If
                    If team1Points > team2Points Then
                        RUGBYLog "Betting odds game " & GameNo & ": " & team1 & " at $" & team1Odds & " to beat " & team2 & " at $" _
                        & team2Odds & " by " & team1Points
                    ElseIf team1Points < team2Points Then
                        RUGBYLog "Betting odds game " & GameNo & ": " & team2 & " at $" & team2Odds & " to beat " & team1 & " at $" _
                        & team1Odds & " by " & team2Points
                    Else
                        RUGBYLog "Betting odds game " & GameNo & ": " & team1 & " at $" & team1Odds & " EVEN with " & team2 & " at $" _
                        & team2Odds & " by " & team1Points
                    End If
                    Exit For
                End If
            End If
        Next myX
            

        myWork = ""
        Title = ""
        team1 = ""
        team1Odds = ""
        team1Points = ""
        team2 = ""
        team2Odds = ""
        team2Points = ""
        GameNo = ""

    End If

Next element
driver.stop

Application.StatusBar = ""
MsgBox ("Done.... !")

End Sub
Sub GetRUGBY365picks()
Dim startElement As WebElement
Dim myCol       As Range
Dim myX         As Range
Dim urlName     As String
Dim team        As String
Dim margin      As String
Dim PicksPage   As String
Dim PageArray() As String
Dim myPage      As String
Dim myWork      As String
Dim RndNo       As String
Dim Title       As String
Dim GameNo      As String
Dim y           As Long
Dim LogFileName As String
Dim FileNum     As Integer
Dim sOut        As String
Dim myTemp As String

Dim foundTitle  As Boolean
Dim foundTeam   As Boolean
Dim foundMargin As Boolean



Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

'CurrentRugby365Webpage.txt
LogFileName = "C:\FILES\SuperRugby\Data\CurrentRugby365Webpage.txt"

'FileNum = FreeFile
'    Open FilePath For Input As TextFile
'    FileContent = Input(LOF(TextFile), TextFile)
'    Close TextFile
    
FileNum = FreeFile ' next file number
Open LogFileName For Input As #FileNum
sOut = Input(LOF(FileNum), FileNum)
Close #FileNum ' close the file

StopMyProcess ("phantomjs.exe")
StopMyProcess ("chromedriver.exe")
Application.StatusBar = "Waiting on Rugby365 webpage ..."

PicksPage = InputBox(Prompt:="Enter URL for the current Rugby365 picks", Title:="URL", Default:=sOut)

If PicksPage <> sOut Then
    FileNum = FreeFile
    Open LogFileName For Output As #FileNum
    Print #FileNum, PicksPage
    sOut = Empty
    Close #FileNum ' close the file
End If
'------------------
'Dim oHttp As Object
'Dim a As String
'    Set oHttp = CreateObject("MSXML2.XMLHTTP")
'    oHttp.Open "GET", PicksPage, False
'    oHttp.send
    'a = oHttp.responseText 'a contains source code of website
'    a = oHttp.text

'##### 'for testing
'Dim testFile As String
'testFile = "C:\FILES\SuperRugby\Data\test.txt"

'FileNum = FreeFile
'Open testFile For Append As #FileNum
'Print #FileNum, a
'Close #FileNum
'Stop

'-----------------
'driver.Start "phantomjs", PicksPage
driver.Start "chrome", PicksPage
driver.setImplicitWait 10000
driver.Wait (1000)

urlName = "/"
driver.get urlName, Raise:=False
driver.Wait (5000)
driver.maximizeWindow
'driver.getScreenshot.Copy
'Stop
'On Error Resume Next
'//*[@id="article-content-container"]
Set startElement = driver.findElementByXPath("//*[@id='article-content-container']")
'myPage = startElement.getAttribute("innerHTML")
myPage = startElement.text
driver.stop

'##### 'for testing
'Dim testFile As String
'testFile = "C:\FILES\SuperRugby\Data\test.txt"

'FileNum = FreeFile
'Open testFile For Append As #FileNum
'Print #FileNum, myPage
'Close #FileNum
'Stop
foundTitle = False
foundTeam = False
foundMargin = False
PageArray() = Split(myPage, vbCrLf)
    For y = 1 To UBound(PageArray)
        DoEvents 'stops the 'not responding' message
        If Len(Trim(PageArray(y))) <> 0 Then
            myWork = Trim(PageArray(y))
            'Debug.Print Left(myWork, 30)
            If InStr(1, myWork, " ") = 0 Then GoTo SkipEntry:
            myTemp = Left(myWork, InStr(1, myWork, " ") + 2)
            'Stop
            'myTemp = Trim(myTemp)
            If foundTitle = False Then
                
                'Debug.Print "|" & Mid(myTemp, InStr(1, myTemp, " "), 3) & "|"
                'If Mid(myTemp, InStr(1, myTemp, " ") + 2) = " v " Then
                'Stop
                If Mid(myTemp, InStr(1, myTemp, " "), 3) = " v " _
                    Or Mid(myTemp, InStr(1, myTemp, " "), 4) = " vs" Then
                'If InStr(1, LCase(PageArray(y)), " v ") = 0 Then GoTo SkipEntry:
                'Stop
                    Title = myWork
            
                    'Title = myWork, InStr(1, myWork, "<") - 1)
                    Title = WorksheetFunction.Proper(Title)
                    Title = Replace(Title, " V ", " v ")
                    foundTitle = True
                End If
            ElseIf foundTitle = True Then
                'myWork = Trim(PageArray(y))
                'Stop
                myWork = Replace(myWork, "points", "")
                If Left(myWork, 11) = "Prediction:" And Len(myWork) < 30 Then
                    'team = Mid(myWork, InStr(1, myWork, "winner:") + 7, Len(myWork))
                    team = myWork
                    team = Replace(team, "Prediction: ", "")
                    team = Trim(team)
                    foundTeam = True
                    'team = Replace(team, "</strong>", "")
                    'team = Trim(team)
                    'team = Left(team, InStr(1, team, "<") - 1)
                    'team = WorksheetFunction.Proper(team)
                ElseIf Left(myWork, 7) = "Margin:" And Len(myWork) < 15 And foundTeam = True Then
            
                    'margin = Mid(myWork, InStr(1, myWork, "margin:") + 7, Len(myWork))
                    'margin = Replace(margin, "</strong>", "")
                    margin = myWork
                    margin = Replace(margin, "Margin: ", "")
                    'margin = Replace(margin, "points", "")
                    margin = Trim(margin)
                    Select Case LCase(margin)
                        Case "one"
                            margin = "1"
                        Case "two"
                            margin = "2"
                        Case "three"
                            margin = "3"
                        Case "four"
                            margin = "4"
                        Case "five"
                            margin = "5"
                        Case "six"
                            margin = "6"
                        Case "seven"
                            margin = "7"
                        Case "eight"
                            margin = "8"
                        Case "nine"
                            margin = "9"
                        Case "ten"
                            margin = "10"
                    End Select
                    foundMargin = True
                    'Stop
                    'margin = Left(margin, InStr(1, margin, "<") - 1)
                End If
            End If
            If foundTitle = True And foundTeam = True And foundMargin = True Then
                Set myCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1)
                For Each myX In myCol 'this is col A
                    If myX <> "" Then
                        If InStr(1, LCase(myX), LCase(team)) > 0 Then 'found the right game
                            GameNo = myX.value
                            GameNo = Left(GameNo, InStr(1, GameNo, " ") - 1)
                            GameNo = Trim(GameNo)
                            If team = myX.Offset(1, 1) Then
                                myX.Offset(6, 36) = margin
                            ElseIf team = myX.Offset(17, 1) Then
                                myX.Offset(7, 36) = margin
                            End If
                    
                            RUGBYLog "Rugby365 picks game " & GameNo & ": " & Title & ". " & team & " to win by " & margin
                       
                            Exit For
                        End If
                    End If
                Next myX
                myWork = ""
                Title = ""
                team = ""
                margin = ""
                myTemp = ""
                foundTitle = False
                foundTeam = False
                foundMargin = False
            End If
        End If
SkipEntry:
    Next y
'driver.stop

Application.StatusBar = ""
MsgBox ("Done.... !")

End Sub

Sub GetBETFAIRmodel()

Dim wkName      As String
Dim urlName     As String
Dim myCol       As Range
Dim myX         As Range
Dim team        As String
Dim mySite      As String
'Dim ie          As InternetExplorer
'Dim html        As HTMLDocument
Dim TeamArray() As String
Dim x           As Integer
Dim LineContent As String
Dim margin      As String
Dim GameNo      As String
Dim setRound As WebElement

Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim myWork As String
Dim RndNo As String


Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

'StopMyProcess ("iexplore.exe")

StopMyProcess ("phantomjs.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
'wkName = Replace(wkName, " ", "-")
RndNo = Replace(wkName, "round ", "")
wkName = Application.Proper(wkName)

'urlName = "https://www.betfair.com.au/hub/news/super-rugby-predictions/"
'urlName = "https://www.betfair.com.au/hub/tools/models/super-rugby-prediction-model/"
'Round = "https://www.foxsports.com.au/rugby/super-rugby/lineups/round/2"
'Dim x As Long
'#### end of testing

driver.Start "phantomjs", "https://www.betfair.com.au/hub/tools/models/super-rugby-prediction-model/"
driver.setImplicitWait 10000
driver.Wait (500)

urlName = "/"
driver.get urlName, Raise:=False

'Set html = ie.document
'mySite = html.documentElement.innerHTML
'Set html = Nothing

'Set setRound = driver.findElementByXPath("//*[@id='paragraphblock']/div/div/div[1]/div[2]/div[1]/div")
'                                         //*[@id="paragraphblock"]/div/div/div[1]/div[2]/div[1]/div
'If setRound.text = RndNo Then 'doesnt handle QF quarter final

    Application.StatusBar = "Getting BETFAIR Model ..."
    'Application.Wait (Now + TimeValue("00:00:05")) 'This lets the widget load
    Set startElement = driver.findElementByXPath("//*[@id='paragraphblock']/div/div/div[2]/div/div/div[2]")
    Set elements = startElement.findElementsByTagName("div")
    For Each element In elements
        If Left(LCase(element.text), 18) = "predicted margin: " Then
            myWork = element.text
            team = Split(myWork, vbCrLf)(0)
            team = Mid(team, InStr(1, team, "argin: ") + 7, Len(team))
            team = Left(team, InStr(1, team, " by ") - 1)
            team = Trim(team)
            'Stop
            margin = Split(myWork, vbCrLf)(0)
            margin = Mid(margin, InStrRev(margin, " by ") + 4, Len(margin))
            margin = Trim(margin)

            DoEvents
            Set myCol = Range("W2:W" & Range("W" & Rows.count).End(xlUp).Row - 1)
            For Each myX In myCol
                If myX = team Then
                    If myX.Offset(-6, -22) <> "" Then
                        GameNo = myX.Offset(-6, -22).value
                    Else
                        GameNo = myX.Offset(-7, -22).value
                    End If
                    GameNo = Left(GameNo, InStr(1, GameNo, " ") - 1)
                    GameNo = Trim(GameNo)
                    myX.Offset(0, 12) = margin
                    RUGBYLog "BETFAIR picks game " & GameNo & ": " & team & " by " & margin
                    'Stop
                    Exit For
                End If
            Next myX
            'LineContent = ""
            team = ""
            margin = ""
        End If
    Next element

'Else
'    MsgBox "can't find " & wkName & " model"

'End If
driver.stop

Application.StatusBar = ""
MsgBox ("Done.... !")
End Sub

Sub UpdateRugbyResults()
Dim startElement As WebElement
Dim elements As WebElementCollection
Dim element As WebElement
Dim Element1Imgs As WebElementCollection
Dim element1Img As WebElement
Dim myWork As String
Dim RndNo As String
Dim myURL As String
Dim myCol As Range
Dim myX As Range
Dim wkName As String
Dim team1 As String
Dim team2 As String
Dim Score1 As String
Dim Score2 As String

Dim driver As New SeleniumWrapper.WebDriver
Dim By As New By, Assert As New Assert, Verify As New Verify, Waiter As New Waiter

'StopMyProcess ("chromedriver.exe")
StopMyProcess ("phantomjs.exe")

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
RndNo = Replace(wkName, "round ", "")

Application.StatusBar = "Getting RUGBY Results ..."

'https://www.foxsports.com.au/score-centre/rugby/super-rugby/season-2018!122/round-week-6!6
'driver.Start "chrome", "https://www.foxsports.com.au/score-centre/rugby/super-rugby/"
driver.Start "phantomjs", "https://www.foxsports.com.au/score-centre/rugby/super-rugby/"
'driver.setPreference "browser.password_manager_enabled", False
driver.setImplicitWait 10000
driver.Wait (500)
'https://www.foxsports.com.au/score-centre/rugby/super-rugby/season-2019!123/round-1!1
myURL = "/season-2019!123/round-" & RndNo & "!" & RndNo
driver.get myURL, Raise:=False
'/html/body/div[6]/main
'Set startElement = driver.findElementByClassName("fiso-sc-sport__list")
Set startElement = driver.findElementByXPath("/html/body/div[6]/main")
Set elements = startElement.findElementsByTagName("li")
For Each element In elements
    If InStr(1, LCase(element.text), "full time") > 0 Then 'game over
    'Stop
        Set Element1Imgs = element.findElementsByTagName("img")
        For Each element1Img In Element1Imgs
            If InStr(1, element1Img.getAttribute("alt"), "Team logo for") > 0 Then
                'Debug.Print element1Img.text
                'Debug.Print "------"
                'Debug.Print element1Img.getAttribute("alt")
                myWork = myWork & element1Img.getAttribute("alt") & vbCrLf
                End If
        Next element1Img
        'Stop
        myWork = myWork & element.text
        'Debug.Print myWork
        'Debug.Print "------"
        'Stop
        team1 = Split(myWork, vbCrLf)(0)
        team1 = Replace(team1, "Team logo for ", "")
        team1 = Trim(team1)
        Score1 = Split(myWork, vbCrLf)(2)
        Score1 = Trim(Score1)
                            
        team2 = Split(myWork, vbCrLf)(1)
        team2 = Replace(team2, "Team logo for ", "")
        team2 = Trim(team2)
        Score2 = Split(myWork, vbCrLf)(5)
        Score2 = Trim(Score2)
        Set myCol = Range("W2:W" & Range("W" & Rows.count).End(xlUp).Row - 1)
        For Each myX In myCol 'this is col A
            If myX = team1 Then
                myX.Offset(0, 5) = Score1
            ElseIf myX = team2 Then
                myX.Offset(0, 5) = Score2
            End If
        Next myX
        myWork = ""
        team1 = ""
        Score1 = ""
        team2 = ""
        Score2 = ""
    End If
Next element

done:
    driver.stop
    Application.StatusBar = ""
    MsgBox "Done!"
End Sub
Sub BuildRUGBYResultStats()
' Get the result stats for RUGBY games
' chuck 3/3/18
    Dim strPath         As String
    Dim Round           As String
    Dim nRound          As String
    Dim wbA             As Workbook
    Dim wbB             As Workbook
    Dim myBCol          As Range
    Dim myX             As Range
    Dim myBestPick      As Range
    Dim myY             As Range
    Dim r               As Integer
    Dim Game            As String
    Dim FinalScore      As Double
    Dim value           As Long
    Dim Points          As Double
    Dim WinBy           As Long
    Dim ChkScore        As Long
    'Dim OddsA           As Double
    'Dim OddsB           As Double
    Dim OddsPoints      As Double
    Dim GameCount       As Long
    Dim WinByChk        As Long
    Dim SBWinByChk      As Double
    Dim ChkScoreChk     As Long
    Dim SBChkScoreChk   As Double
    Dim OddsChk         As Long
    Dim SBOddsChk       As Double
    Dim ROAR_pick        As Long
    Dim ROAR_chk        As Long
    Dim SBROAR_chk       As Double
    
    Dim RUGBY365_pick        As Long
    Dim RUGBY365_chk        As Long
    Dim SBRUGBY365_chk       As Double
    
'    Dim AVG             As Double
'    Dim AVGChk          As Long
 '   Dim SBAVG_chk       As Double
    
'    Dim avgOddsBF       As Double
'    Dim SBavgOddsBF     As Double
    
    Dim rng As Range
    Dim myR As Range
    Dim tgt As Long
    Dim t As Double
    Dim u As Double
    Dim x As Double
    Dim tempX As String
    Dim OddsPointsA As Double
    Dim OddsPointsB As Double

    If ActiveWorkbook.name <> "RUGBYGameSummaries_2019.xls" Then
        MsgBox ("The worksheet 'RUGBYGameSummaries_2019.xls' is not the current sheet")
        Exit Sub
    End If
    Set wbA = ActiveWorkbook
    nRound = InputBox("Round Number")
    Round = "round " & nRound & ".xls"
    
    strPath = "C:\FILES\SuperRugby\Results\2019\"
    On Error Resume Next
    
    Workbooks.Open strPath & Round
    Set wbB = ActiveWorkbook
    Set myBCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1) 'wbB sheet
        For Each myX In myBCol 'this is col A
            If myX <> "" Then
                GameCount = GameCount + 1
                
                Game = myX.Offset(1, 1) & " v " & myX.Offset(17, 1)
                Game = Trim(Game)
                FinalScore = myX.Offset(8, 27)
                value = myX.Offset(3, 22)
                Points = myX.Offset(3, 27)
                WinBy = myX.Offset(6, 32) - myX.Offset(7, 32)
                ChkScore = myX.Offset(8, 32)
                'OddsA = myX.Offset(10, 25)
                'OddsB = myX.Offset(20, 25)
                If myX.Offset(10, 26) <> "" Then
                    tempX = myX.Offset(10, 26)
                    tempX = Replace(Replace(Replace(tempX, "(", ""), "-", ""), ")", "")
                    OddsPointsA = tempX
                ElseIf myX.Offset(20, 26) <> "" Then
                    tempX = myX.Offset(20, 26)
                    tempX = Replace(Replace(Replace(tempX, "(", ""), "-", ""), ")", "")
                    OddsPointsB = tempX
                End If
                tempX = ""
                OddsPoints = OddsPointsA - OddsPointsB

                ROAR_pick = myX.Offset(6, 34) - myX.Offset(7, 34)
                RUGBY365_pick = myX.Offset(6, 36) - myX.Offset(7, 36)
                
                'AVG = Application.Average((myX.Offset(6, 32) - myX.Offset(7, 32)), _
                '(myX.Offset(6, 34) - myX.Offset(7, 34)), _
                '(myX.Offset(10, 26) - myX.Offset(20, 26)), _
                'myX.Offset(8, 32))
                
'                If ROAR_pick <> 0 Then
'                    AVG = Application.Average(WinBy, ROAR_pick, OddsPoints, ChkScore)
'                    avgOddsBF = Application.Average(ROAR_pick, OddsPoints)
'                Else
'                    AVG = Application.Average(WinBy, OddsPoints, ChkScore)
'                    avgOddsBF = OddsPoints
'                End If
                
'                AVG = WorksheetFunction.Round(AVG, 0)
'                avgOddsBF = WorksheetFunction.Round(avgOddsBF, 0)
                
                wbA.Activate
                Worksheets("Sheet1").Activate
                r = ActiveSheet.UsedRange.Rows.count + 1
                Worksheets("Sheet1").Cells(r, 1).value = nRound
                Worksheets("Sheet1").Cells(r, 2).value = Game
                Worksheets("Sheet1").Cells(r, 3).value = FinalScore
                Worksheets("Sheet1").Cells(r, 4).value = value
                Worksheets("Sheet1").Cells(r, 5).value = Points
                
                'WinByChk
                Worksheets("Sheet1").Cells(r, 6).value = WinBy
                If (FinalScore > 0 And WinBy > 0) _
                    Or (FinalScore < 0 And WinBy < 0) Then
                    Worksheets("Sheet1").Cells(r, 6).Interior.ColorIndex = 6
                    WinByChk = WinByChk + 1
                    SBWinByChk = SBWinByChk + 1
                    If FinalScore = WinBy Then
                        SBWinByChk = SBWinByChk + 1
                    End If
                End If
                If FinalScore - WinBy < 6 And WinBy - FinalScore < 6 Then
                    SBWinByChk = SBWinByChk + 0.5
                End If

                'ChkScoreChk SBChkScoreChk
                Worksheets("Sheet1").Cells(r, 8).value = ChkScore
                If (FinalScore > 0 And ChkScore > 0) _
                    Or (FinalScore < 0 And ChkScore < 0) Then
                    Worksheets("Sheet1").Cells(r, 8).Interior.ColorIndex = 6
                    ChkScoreChk = ChkScoreChk + 1
                    SBChkScoreChk = SBChkScoreChk + 1
                    If FinalScore = ChkScore Then
                        SBChkScoreChk = SBChkScoreChk + 1
                    End If
                End If
                If FinalScore - ChkScore < 6 And ChkScore - FinalScore < 6 Then
                    SBChkScoreChk = SBChkScoreChk + 0.5
                End If
                
                'OddsChk SBOddsChk
                'Worksheets("Sheet1").Cells(r, 10).value = OddsA
                'Worksheets("Sheet1").Cells(r, 11).value = OddsB
                Worksheets("Sheet1").Cells(r, 10).value = OddsPoints
                
                If (FinalScore > 0 And OddsPoints > 0) _
                    Or (FinalScore < 0 And OddsPoints < 0) Then
                    Worksheets("Sheet1").Cells(r, 10).Interior.ColorIndex = 6
                    OddsChk = OddsChk + 1
                    SBOddsChk = SBOddsChk + 1
                    If FinalScore = OddsPoints Then
                        SBOddsChk = SBOddsChk + 1
                    End If
                End If
                If FinalScore - OddsPoints < 6 And OddsPoints - FinalScore < 6 Then
                    SBOddsChk = SBOddsChk + 0.5
                End If
                
                'ROAR_chkSBROAR_chk
                
                Worksheets("Sheet1").Cells(r, 12).value = ROAR_pick
                If (FinalScore > 0 And ROAR_pick > 0) _
                    Or (FinalScore < 0 And ROAR_pick < 0) Then
                    Worksheets("Sheet1").Cells(r, 12).Interior.ColorIndex = 6
                    ROAR_chk = ROAR_chk + 1
                    SBROAR_chk = SBROAR_chk + 1
                    If FinalScore = ROAR_pick Then
                        SBROAR_chk = SBROAR_chk + 1
                    End If
                End If
                If FinalScore - ROAR_pick < 6 And ROAR_pick - FinalScore < 6 Then
                    SBROAR_chk = SBROAR_chk + 0.5
                End If
                
                 'AVGChk SBAVG_chk
                
'                Worksheets("Sheet1").Cells(r, 14).value = AVG
'                If (FinalScore > 0 And AVG > 0) _
'                    Or (FinalScore < 0 And AVG < 0) Then
'                    Worksheets("Sheet1").Cells(r, 14).Interior.ColorIndex = 6
'                    AVGChk = AVGChk + 1
'                    SBAVG_chk = SBAVG_chk + 1
'                    If FinalScore = AVG Then
'                        SBAVG_chk = SBAVG_chk + 1
'                    End If
'                End If
'                If FinalScore - AVG < 6 And AVG - FinalScore < 6 Then
'                    SBAVG_chk = SBAVG_chk + 0.5
'                End If
                
                'RUGBY365_chk SBRUGBY365_chk

                
                Worksheets("Sheet1").Cells(r, 14).value = RUGBY365_pick
                If (FinalScore > 0 And RUGBY365_pick > 0) _
                    Or (FinalScore < 0 And RUGBY365_pick < 0) Then
                    Worksheets("Sheet1").Cells(r, 14).Interior.ColorIndex = 6
                    RUGBY365_chk = RUGBY365_chk + 1
                    SBRUGBY365_chk = SBRUGBY365_chk + 1
                    If FinalScore = RUGBY365_pick Then
                        SBRUGBY365_chk = SBRUGBY365_chk + 1
                    End If
                End If
                If FinalScore - RUGBY365_pick < 6 And RUGBY365_pick - FinalScore < 6 Then
                    SBRUGBY365_chk = SBRUGBY365_chk + 0.5
                End If
              
                    'avgOddsBF SBavgOddsBF
'                If (FinalScore > 0 And avgOddsBF > 0) _
'                    Or (FinalScore < 0 And avgOddsBF < 0) Then
                    'Worksheets("Sheet1").Cells(r, 14).Interior.ColorIndex = 6
                    'AVGChk = AVGChk + 1
'                    SBavgOddsBF = SBavgOddsBF + 1
'                    If FinalScore = avgOddsBF Then
'                        SBavgOddsBF = SBavgOddsBF + 1
'                    End If
'                End If
'                If FinalScore - avgOddsBF < 6 And avgOddsBF - FinalScore < 6 Then
'                    SBavgOddsBF = SBavgOddsBF + 0.5
'                End If
             
                
'highlight the closest to the score

                tgt = FinalScore
                Set rng = Range("F" & r & ", H" & r & ", J" & r & ", L" & r & ", N" & r)
                t = WorksheetFunction.Max(rng) + 100
                For Each myR In rng
                    u = Abs(myR - tgt)
                    If u < t Then
                        t = u
                        x = myR
                    End If
                Next myR
                For Each myR In rng
                    If myR = x Then
                        If myR.Interior.ColorIndex = 6 Then
                            myR.Interior.ColorIndex = 4
                        End If
                    End If
                Next myR


'################
'Worksheets("Sheet1").Cells(r, 11).Value = HitUps
                'Worksheets("Sheet1").Cells(r, 12).Value = MissTackles
                'Worksheets("Sheet1").Cells(r, 13).Value = Errors
                'Worksheets("Sheet1").Cells(r, 14).Value = H_Lit
                'Worksheets("Sheet1").Cells(r, 15).Value = OneToOne
                'Worksheets("Sheet1").Cells(r, 16).Value = BestTTLs
                'Worksheets("Sheet1").Cells(r, 17).Value = FwdDiff
                'If (FinalScore > 0 And Points > 0) _
                '    Or (FinalScore < 0 And Points < 0) Then
                '    Worksheets("Sheet1").Cells(r, 2).Interior.ColorIndex = 6
                '    Hit = Hit + 1
                'End If
            End If

' Clear variables
            FinalScore = 0
            value = 0
            Points = 0
            WinBy = 0
            ChkScore = 0
            'OddsA = 0
            'OddsB = 0
            OddsPoints = 0
            OddsPointsA = 0
            OddsPointsB = 0
            ROAR_pick = 0
            RUGBY365_pick = 0
                    
        Next myX
        wbB.Close

        wbA.Activate
        Worksheets("Sheet1").Activate
        r = ActiveSheet.UsedRange.Rows.count
        'Worksheets("Sheet1").Cells(r, 7).Value = WinByChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 9).Value = ChkScoreChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 13).Value = OddsChk & " out of " & GameCount
        'Worksheets("Sheet1").Cells(r, 15).Value = ROAR_chk& " out of " & GameCount
        
        Worksheets("Sheet1").Cells(r, 7).value = WinByChk
        Worksheets("Sheet1").Cells(r, 9).value = ChkScoreChk
        Worksheets("Sheet1").Cells(r, 11).value = OddsChk
        Worksheets("Sheet1").Cells(r, 13).value = ROAR_chk
        Worksheets("Sheet1").Cells(r, 15).value = RUGBY365_chk
'Enter the SuperBro Scores
        Worksheets("Sheet1").Cells(r, 16).value = SBWinByChk
        Worksheets("Sheet1").Cells(r, 17).value = SBChkScoreChk
        Worksheets("Sheet1").Cells(r, 18).value = SBOddsChk
        Worksheets("Sheet1").Cells(r, 19).value = SBROAR_chk
        Worksheets("Sheet1").Cells(r, 20).value = SBRUGBY365_chk
        'Worksheets("Sheet1").Cells(r, 21).value = SBavgOddsBF
'get the best score

        Range("G2:U2").Interior.ColorIndex = xlNone
        Set myBestPick = Range("G2:O2")
            For Each myY In myBestPick
                If myY = Application.Max(myBestPick) Then
                    myY.Interior.ColorIndex = 6
                    'Exit For
                End If
            Next myY
        Set myBestPick = Range("P2:T2")
            For Each myY In myBestPick
                If myY = Application.Max(myBestPick) Then
                    myY.Interior.ColorIndex = 6
                    'Exit For
                End If
            Next myY

End Sub
Sub JoinRUGBYDuplicates()
'
Dim sFile           As String
Dim SFileBac           As String
Dim rng             As Range
Dim sName           As String
Dim nameCount       As Long
Dim r               As Long
Dim s(1 To 5)       As String
Dim n(6 To 28)      As Long
Dim d               As Long
Dim sAdd            As String
Dim nFileNum        As Long

Dim myRecord As Range
Dim myField As Range
Dim sOut As String
'GoTo here:
'backup original file
sFile = "C:\FILES\SuperRugby\Data\Stats.txt"
SFileBac = "C:\FILES\SuperRugby\Data\Stats_bac.txt"
FileCopy sFile, SFileBac
'import the file into excel
    Workbooks.OpenText fileName:=sFile, Origin:= _
        437, StartRow:=1, DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, _
        ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False, Comma:=False _
        , Space:=False, Other:=True, OtherChar:="^", FieldInfo:=Array(Array(1, 1 _
        ), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1), Array(6, 1), Array(7, 1), Array(8, 1), _
        Array(9, 1), Array(10, 1), Array(11, 1), Array(12, 1), Array(13, 1), Array(14, 1), Array(15 _
        , 1), Array(16, 1), Array(17, 1), Array(18, 1), Array(19, 1), Array(20, 1), Array(21, 1), _
        Array(22, 1), Array(23, 1), Array(24, 1), Array(25, 1), Array(26, 1), Array(27, 1), Array( _
        28, 1)), TrailingMinusNumbers:=True
    Cells.Select
    Selection.Sort key1:=Range("B1"), Order1:=xlAscending, Header:=xlNo, _
        OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _
        DataOption1:=xlSortNormal
'
    Application.DisplayAlerts = False 'allow it to overwrite
    ActiveWorkbook.SaveAs fileName:="C:\FILES\NRL\data\PlayerStats.xls"
    Application.DisplayAlerts = True
'delete the original file
    Kill sFile
here:
'lastRow = Range("A" & Rows.Count).End(xlUp).Row
Range("B1:B" & Range("B" & Rows.count).End(xlUp).Row).Select
Set rng = Selection
For r = rng.Rows.count To 1 Step -1
    sName = rng.Rows(r).value
    If sName <> "REM" Then
        nameCount = Application.WorksheetFunction.CountIf(rng.Columns(1), sName)
        If nameCount > 1 Then
            For d = 1 To nameCount
                s(1) = Range("A" & r - (d - 1))
                s(2) = Range("B" & r - (d - 1))
                s(3) = Range("C" & r - (d - 1))
                s(4) = Range("D" & r - (d - 1))
                s(5) = Range("E" & r - (d - 1))
'Range("D" & CurRow - 1) = Replace(Range("D" & CurRow - 1), "-", "")
                Range("F" & r - (d - 1)) = Replace(Range("F" & r - (d - 1)), "-", "")
                n(6) = n(6) + Range("F" & r - (d - 1))
                Range("G" & r - (d - 1)) = Replace(Range("G" & r - (d - 1)), "-", "")
                n(7) = n(7) + Range("G" & r - (d - 1))
                Range("H" & r - (d - 1)) = Replace(Range("H" & r - (d - 1)), "-", "")
                n(8) = n(8) + Range("H" & r - (d - 1))
                Range("I" & r - (d - 1)) = Replace(Range("I" & r - (d - 1)), "-", "")
                n(9) = n(9) + Range("I" & r - (d - 1))
                Range("J" & r - (d - 1)) = Replace(Range("J" & r - (d - 1)), "-", "")
                n(10) = n(10) + Range("J" & r - (d - 1))
                Range("K" & r - (d - 1)) = Replace(Range("K" & r - (d - 1)), "-", "")
                n(11) = n(11) + Range("K" & r - (d - 1))
                Range("L" & r - (d - 1)) = Replace(Range("L" & r - (d - 1)), "-", "")
                n(12) = n(12) + Range("L" & r - (d - 1))
                Range("M" & r - (d - 1)) = Replace(Range("M" & r - (d - 1)), "-", "")
                n(13) = n(13) + Range("M" & r - (d - 1))
                Range("N" & r - (d - 1)) = Replace(Range("N" & r - (d - 1)), "-", "")
                n(14) = n(14) + Range("N" & r - (d - 1))
                Range("O" & r - (d - 1)) = Replace(Range("O" & r - (d - 1)), "-", "")
                n(15) = n(15) + Range("O" & r - (d - 1))
            
                Range("P" & r - (d - 1)) = Replace(Range("P" & r - (d - 1)), "-", "")
                n(16) = n(16) + Range("P" & r - (d - 1))
                Range("Q" & r - (d - 1)) = Replace(Range("Q" & r - (d - 1)), "-", "")
                n(17) = n(17) + Range("Q" & r - (d - 1))
                Range("R" & r - (d - 1)) = Replace(Range("R" & r - (d - 1)), "-", "")
                n(18) = n(18) + Range("R" & r - (d - 1))
                Range("S" & r - (d - 1)) = Replace(Range("S" & r - (d - 1)), "-", "")
                n(19) = n(19) + Range("S" & r - (d - 1))
                Range("T" & r - (d - 1)) = Replace(Range("T" & r - (d - 1)), "-", "")
                n(20) = n(20) + Range("T" & r - (d - 1))
                Range("U" & r - (d - 1)) = Replace(Range("U" & r - (d - 1)), "-", "")
                n(21) = n(21) + Range("U" & r - (d - 1))
                Range("V" & r - (d - 1)) = Replace(Range("V" & r - (d - 1)), "-", "")
                n(22) = n(22) + Range("V" & r - (d - 1))
                Range("W" & r - (d - 1)) = Replace(Range("W" & r - (d - 1)), "-", "")
                n(23) = n(23) + Range("W" & r - (d - 1))
                Range("X" & r - (d - 1)) = Replace(Range("X" & r - (d - 1)), "-", "")
                n(24) = n(24) + Range("X" & r - (d - 1))
                Range("Y" & r - (d - 1)) = Replace(Range("Y" & r - (d - 1)), "-", "")
                n(25) = n(25) + Range("Y" & r - (d - 1))
                Range("Z" & r - (d - 1)) = Replace(Range("Z" & r - (d - 1)), "-", "")
                n(26) = n(26) + Range("Z" & r - (d - 1))
                Range("AA" & r - (d - 1)) = Replace(Range("AA" & r - (d - 1)), "-", "")
                n(27) = n(27) + Range("AA" & r - (d - 1))
                Range("AB" & r - (d - 1)) = Replace(Range("AB" & r - (d - 1)), "-", "")
                n(28) = n(28) + Range("AB" & r - (d - 1))
            Next d
'build the file to add at the end
            sAdd = sAdd & s(1) & "^" & s(2) & "^" & s(3) & "^" & s(4) & "^" & s(5) & "^" & _
            n(6) & "^" & n(7) & "^" & n(8) & "^" & n(9) & "^" & n(10) & "^" & n(11) & "^" & n(12) & _
            "^" & n(13) & "^" & n(14) & "^" & n(15) & "^" & n(16) & "^" & n(17) & "^" & n(18) _
            & "^" & n(19) & "^" & n(20) & "^" & n(21) & "^" & n(22) & "^" & n(23) & "^" & n(24) _
            & "^" & n(25) & "^" & n(26) & "^" & n(27) & "^" & n(28) & vbCrLf
'mark that row for deletion
            For d = 1 To nameCount
                Range("B" & r - (d - 1)) = "REM"
            Next d
            s(1) = ""
            s(2) = ""
            s(3) = ""
            s(4) = ""
            s(5) = ""
            n(6) = 0
            n(7) = 0
            n(8) = 0
            n(9) = 0
            n(10) = 0
            n(11) = 0
            n(12) = 0
            n(13) = 0
            n(14) = 0
            n(15) = 0
            n(16) = 0
            n(17) = 0
            n(18) = 0
            n(19) = 0
            n(20) = 0
            n(21) = 0
            n(22) = 0
            n(23) = 0
            n(24) = 0
            n(25) = 0
            n(26) = 0
            n(27) = 0
            n(28) = 0
        End If
    End If
    'Stop
Next r
' now remove the rows marked for deletion
Range("B1:B" & Range("B" & Rows.count).End(xlUp).Row).Select
Set rng = Selection
For r = rng.Rows.count To 1 Step -1
    If rng.Cells(r, 1).value = "REM" Then
        rng.Rows(r).EntireRow.Delete
    End If
Next r
' output the data and add sAdd
nFileNum = FreeFile
Open sFile For Output As #nFileNum
For Each myRecord In Range("A1:A" & _
    Range("A" & Rows.count).End(xlUp).Row)
    With myRecord
        For Each myField In Range(.Cells(1), Cells(.Row, 28))
            sOut = sOut & "^" & Trim(myField.text)
        Next myField
        sOut = Mid(sOut, 2) ' this take off the first delimiter
        Print #nFileNum, sOut
        sOut = Empty
    End With
Next myRecord
Print #nFileNum, sAdd
Close #nFileNum
'close this sheet
ActiveWorkbook.Close SaveChanges:=False
' open a new sheet
'Workbooks.Add

End Sub
Sub GetRUGBYAverages()

Dim myCol       As Range
Dim myX         As Range
Dim teamA       As String
Dim teamB       As String
Dim Score       As Double
Dim GameNo      As String


Set myCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1)
    For Each myX In myCol 'this is col A
        If myX <> "" Then
            GameNo = myX.value
            GameNo = Left(GameNo, InStr(1, GameNo, " ") - 1)
            GameNo = Trim(GameNo)
'Stop
            teamA = Range("B" & myX.Row + 1)
            teamB = Range("B" & myX.Row + 17)
            Score = Application.Average((Range("AG" & myX.Row + 6) - (Range("AG" & myX.Row + 7))), _
                (Range("AI" & myX.Row + 6) - (Range("AI" & myX.Row + 7))), _
                (Range("AA" & myX.Row + 10) - (Range("AA" & myX.Row + 20))), _
                Range("AG" & myX.Row + 8))
            If Score > 0 Then
                RUGBYLog "Average game " & GameNo & ": " & teamA & " to win by " & Abs(WorksheetFunction.Round(Score, 0))
            Else
                RUGBYLog "Average game " & GameNo & ": " & teamB & " to win by " & Abs(WorksheetFunction.Round(Score, 0))
            End If
'Stop
        End If
        teamA = ""
        teamB = ""
        Score = 0
        GameNo = ""
    Next myX
Call GetRUGBYOddsBFAverages
End Sub
Private Sub GetRUGBYOddsBFAverages()

Dim myCol       As Range
Dim myX         As Range
Dim teamA       As String
Dim teamB       As String
Dim Score       As Double
Dim GameNo      As String


Set myCol = Range("A2:A" & Range("A" & Rows.count).End(xlUp).Row - 1)
    For Each myX In myCol 'this is col A
        If myX <> "" Then
            GameNo = myX.value
            GameNo = Left(GameNo, InStr(1, GameNo, " ") - 1)
            GameNo = Trim(GameNo)
'Stop
            teamA = Range("B" & myX.Row + 1)
            teamB = Range("B" & myX.Row + 17)
            If Application.Average((Range("AI" & myX.Row + 6) - (Range("AI" & myX.Row + 7)))) <> 0 Then
                Score = Application.Average((Range("AI" & myX.Row + 6) - (Range("AI" & myX.Row + 7))), _
                    (Range("AA" & myX.Row + 10) - (Range("AA" & myX.Row + 20))))
            Else
                Score = (Range("AA" & myX.Row + 10) - (Range("AA" & myX.Row + 20)))
            End If
            If Score > 0 Then
                RUGBYLog "Odds&BF Average game " & GameNo & ": " & teamA & " to win by " & Abs(WorksheetFunction.Round(Score, 0))
            Else
                RUGBYLog "Odds&BF Average game " & GameNo & ": " & teamB & " to win by " & Abs(WorksheetFunction.Round(Score, 0))
            End If
'Stop
        End If
        teamA = ""
        teamB = ""
        Score = 0
        GameNo = ""
    Next myX
End Sub
Sub FootyForecasterRUGBY()
Dim wkName      As String
Dim a           As Long 'temp holder for round number code
Dim urlName     As String
Dim myCol       As Range
Dim myX         As Range
Dim GameNo      As String
Dim team        As String
Dim Score       As String
Dim oHttp          As Object
Dim mySite         As String
Dim LineArray()     As String
Dim x               As Long
Dim TempStr         As String

wkName = ActiveWorkbook.name
wkName = Left(wkName, InStr(1, wkName, ".") - 1)
wkName = Replace(wkName, "round ", "")
'round number code
a = wkName

'https://footyforecaster.com/Super_Rugby/RoundForecast/2019_Round_
urlName = "https://footyforecaster.com/Super_Rugby/RoundForecast/2019_Round_" & a

'Set oHttp = CreateObject("MSXML2.XMLHTTP")
Set oHttp = CreateObject("Msxml2.ServerXMLHTTP")
oHttp.Open "GET", urlName, False
oHttp.send
Do While oHttp.READYSTATE <> 4
    DoEvents
Loop
Do While oHttp.Status <> 200
    DoEvents
Loop
mySite = oHttp.responseText 'a contains source code of website
Set oHttp = Nothing

'tidy up mysite string
    mySite = Mid(mySite, InStr(1, mySite, "<table id=""forecast"">"), Len(mySite))
    LineArray() = Split(mySite, ">Forecast<")
'Stop
'Read Data into an Array Variable
    For x = 1 To UBound(LineArray)
        If InStr(1, LineArray(x), "<table><tbody>") > 0 Then
            TempStr = LineArray(x)
            'Debug.Print TempStr
            'TempStr = Replace(TempStr, "&quot;", "")
            TempStr = Mid(TempStr, InStr(1, TempStr, "<tr><td>") + 8, Len(TempStr))
            
            'Debug.Print Left(TempStr, 100)
            'Stop
            team = Left(TempStr, InStr(1, TempStr, "by") - 1)
            team = Trim(team)
            'team = fixTeam(team)
            'Debug.Print Team
            
            'Stop
            'If InStr(1, TempStr, "score:") > 0 Then
            Score = Mid(TempStr, InStr(1, TempStr, "by") + 2, Len(TempStr))
            Score = Left(Score, InStr(1, Score, "point") - 1)
            Score = Trim(Score)
            'Else
            '    Score = "0"
            'End If
            'Debug.Print team & " " & Score
            'Stop
            Set myCol = Range("W2:W" & Range("W" & Rows.count).End(xlUp).Row)
            For Each myX In myCol 'this is col R
                If myX = team Then
                    If myX.Offset(-6, -22) <> "" Then
                        GameNo = Left(myX.Offset(-6, -22), 1)
                    ElseIf myX.Offset(-7, -22) <> "" Then
                        GameNo = Left(myX.Offset(-7, -22), 1)
                    End If
                    myX.Offset(0, 12) = Score
                    RUGBYLog "Footy Forecaster game" & GameNo & ": " & team & " by " & Score
                    'Stop
                    TempStr = ""
                    team = ""
                    Score = ""
                    GameNo = ""
                    Exit For
                End If
            Next myX
        End If
    Next x
End Sub
Sub RUGBYPDFandUpload()
Dim wb              As Workbook
'Dim wkName        As String
Dim FileNum         As Long
Dim holder          As String
Dim track           As String
Dim myDate As String
Dim p               As Variant
    
'p = ActivePrinter
Application.ActivePrinter = "Microsoft Print to PDF on Ne01:"

'Application.Wait (Now + TimeValue("00:00:03"))
holder = ActiveWorkbook.name
holder = Replace(holder, ".xls", "")
myDate = Format(Date, "yyyy")
'            track = Mid(holder, InStr(1, holder, " ") + 1, Len(holder))
ActiveWindow.SelectedSheets.PrintOut copies:=1, ActivePrinter:= _
    "Microsoft Print to PDF on Ne01:", PrintToFile:=True, collate:=True, _
    PrToFileName:="C:\FILES\SuperRugby\Results\" & myDate & "\" & holder & ".pdf"
'
'ActivePrinter = p
'
'update the server
Shell "C:\FILES\SuperRugby\FTPresults.bat"

End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Timer"
Option Explicit
Public SRRunWhen As Double
Public Const cRunIntervalSeconds = 600 ' in seconds
Public Const SRRunWhat = "SRUpdateOdds"  ' the name of the procedure to run
Private Sub SRUpdateOdds()
' all these odds checkers work
    Dim myselection As Range
    Dim myX As Range
    Dim colCount As Long
    Dim rowNum As Long
    Dim myOdds As String
'    Dim ddate As Date
'    Dim vDist As Long
Workbooks("RaceDay SR.xls").Activate
Sheets("SRSummary").Select
colCount = Range("IV1").End(xlToLeft).Column
'enter data for the new Cols, using A to set values
    Set myselection = Range("A1:A" & Range("A" & Rows.count).End(xlUp).Row)
        For Each myX In myselection 'col A
            
            Select Case myX
                Case "Race"
                    myX.Offset(0, colCount) = Time()
                Case "1"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR1").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "2"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR2").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "3"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR3").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "4"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR4").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "5"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR5").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "6"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR6").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "7"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR7").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "8"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR8").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "9"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR9").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                Case "10"
                    If myX.value <> myX.Offset(-1, 0).value Then
                        rowNum = 15
                    Else
                        rowNum = rowNum + 1
                    End If
                    myOdds = Sheets("SR10").Range("W" & rowNum)
                    myOdds = Application.Substitute(myOdds, "Shortened Odds", "")
                    myX.Offset(0, colCount) = myOdds
                End Select
                If myX.Offset(0, colCount) < myX.Offset(0, colCount - 1) Then
                    myX.Offset(0, colCount).Interior.ColorIndex = 6
                End If
        Next myX
'    SRStartTimer
End Sub

Private Sub SRStartTimer()
    SRRunWhen = Now + TimeSerial(0, 0, cRunIntervalSeconds)
    Application.OnTime EarliestTime:=SRRunWhen, Procedure:=SRRunWhat, _
        Schedule:=True
End Sub
Private Sub SRStopTimer()
    On Error Resume Next
    Application.OnTime EarliestTime:=SRRunWhen, Procedure:=SRRunWhat, _
        Schedule:=False
End Sub

Sub myTimer()

' Time a section of VBA code using the Time function
Dim secs1 As Date
Dim secs2 As Date
Dim mySecs As Double

secs1 = Time()
' Code to be timed

Application.Wait (Now + TimeValue("00:00:13"))

' End of code to be timed
secs2 = Time()

mySecs = DateDiff("s", CDate(secs1), CDate(secs2))

MsgBox ("Time taken to run code:" & vbNewLine & mySecs & " seconds")
End Sub


' InQuest injected base64 decoded content
' tZ+y
' z[?i
' bzWl
' bzWl
' 'v+b
' bzWl
' y'+y
' tZ+y
' bzWl
' QP`X9

INQUEST-PP=macro
