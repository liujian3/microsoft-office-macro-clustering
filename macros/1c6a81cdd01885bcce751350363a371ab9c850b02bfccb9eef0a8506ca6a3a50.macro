Attribute VB_Name = "AccrualCalculations"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Range("A1").Select
End Sub
Attribute VB_Name = "ClearAndRoll"
Sub clear()
'
' clear Macro
' Macro recorded 6/11/98 by Practitioners Publishing Company
'

'
Dim Msg, Style, TITLE, Response
Beep
Msg = "All input information will be cleared. Do you want to continue?"   ' Define message.
Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
TITLE = "PPC's Workpapers"  ' Define title.
Response = MsgBox(Msg, Style, TITLE)
If Response = vbCancel Then    ' User chose Cancel.
    GoTo Quit
End If

Application.ScreenUpdating = False
InputSheet.Select
Range("clear_input").ClearContents
Range("option_default").Select
Selection.Copy
Range("option_response").Select
ActiveSheet.Paste
Application.CutCopyMode = False
Range("fsdate").Value = "=PPC_GetBalanceSheetDate()"
Range("Client").Value = "=PPC_GetClientName()"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name") = "[Client Name]"
Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
Range("input").Select
Application.ScreenUpdating = True
Exit Sub

Quit:
End Sub

Sub Rollforward()
'
' Rollforward Macro
' Macro recorded by Practitioners Publishing Company
'

'   Warn user that amounts will be rolled forward.
    Application.ScreenUpdating = False
    Dim Msg, Style, TITLE, Response
    Beep
    Msg = "End of period amounts will be moved to beginning of period amounts. Do you want to continue?"   ' Define message.
    Style = vbOKCancel + vbQuestion + vbDefaultButton1 ' Define buttons.
    TITLE = "PPC's Workpapers"  ' Define title.
    Response = MsgBox(Msg, Style, TITLE)
    If Response = vbCancel Then    ' User chose Cancel.
        GoTo Quit
    End If

'   Copy the end of period accruals and paste to end of period cells.
    AccrualCalculations.Select
    Range("eop_accrued_int").Select
    Selection.Copy
    Range("accrual_calc").Select
    InputSheet.Select
    Range("bop_accrued_int").Select
    Selection.PasteSpecial Paste:=xlValues, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
    Range("interest_received").Select
    Selection.ClearContents
    
    Range("preparer").Value = ""
    Range("dateprepared").Value = ""
    If Range("fsdate").Value = "=PPC_GetBalanceSheetDate()" Or Range("fsdate").Value = "" Then
        Range("beginning_date").ClearContents
        Else
        Range("beginning_date").Value = Range("fsdate").Value + 1
    End If
    Range("fsdate").Value = "=PPC_GetBalanceSheetDate()"
    Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date") = ""
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = False
    Application.ActiveWorkbook.ActiveSheet.EnableCalculation = True
    Range("input").Select
    Application.ScreenUpdating = True
Exit Sub
Quit:
End Sub

Attribute VB_Name = "EditorialMacros"
Option Explicit

Public Sub InitForEditorial()
  '
  ' Code for editorial special setups that need to be called
  '  after saving or on worksheet initialization.
  '
End Sub

Public Sub Workbook_BeforeClose_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  before close.
  '
End Sub

Attribute VB_Name = "EditorialMacros_Deactivate"
Option Explicit

Public Sub Workbook_Deactivate_Editorial()
  '
  ' Code for editorial special setups that need to be called
  '  when leaving the workbook without closing it. This, will
  '  also run when closing workbook.
  '
End Sub

Attribute VB_Name = "FinancialStatementInformation"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Range("A1").Select
End Sub
Attribute VB_Name = "InputSheet"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Worksheet_Activate()
If ThisWorkbook.bIsSaving Then Exit Sub
Range("A1").Select
End Sub
Attribute VB_Name = "PPC_CodeModule"
Public Sub MacroCheck()
'Do nothing. This sub will be called from .NET code to check macro is enabled or not
End Sub


Public Function PPC_GetClientName()
  PPC_GetClientName = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Client_Name")
End Function

Public Function PPC_GetBalanceSheetDate()
  PPC_GetBalanceSheetDate = Application.ActiveWorkbook.CustomDocumentProperties("PPC_Template_Engagement_Date")
End Function

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'
' This code is protected and passworded when complete.
'

Private Const XL4MACRO As String = "PPCSecurityMacro"
Private Const INFORMATION As String = "INFORMATION"

Private Const bIsIDxR As Boolean = False        ' Set True if Interactive Disclosure Library
#Const IDxR = 0                                 ' Set 1 if Interactive Disclosure Library

      ' Declare security class

Private Sub Workbook_Activate()

  
  InitForEditorial
  
  On Error GoTo 0
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Workbook_BeforeClose_Editorial
End Sub



Public Function bIsSaving() As Boolean
  bIsSaving = False
End Function



INQUEST-PP=macro
