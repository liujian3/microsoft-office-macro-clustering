Attribute VB_Name = "Optimize_Code"
Option Explicit

Public CalcState As Long
Public EventState As Boolean
Public PageBreakState As Boolean


Public Sub OptimizeCode_Begin()

    Application.ScreenUpdating = False
    
    EventState = Application.EnableEvents
    Application.EnableEvents = False
    
    CalcState = Application.Calculation
    Application.Calculation = xlCalculationManual
    
    PageBreakState = ActiveSheet.DisplayPageBreaks
    ActiveSheet.DisplayPageBreaks = False

End Sub



Public Sub OptimizeCode_End()

    ActiveSheet.DisplayPageBreaks = PageBreakState
    Application.Calculation = CalcState
    Application.EnableEvents = EventState
    Application.ScreenUpdating = True

End Sub

Sub ResetOptimize()

    Application.ScreenUpdating = True
    Application.EnableEvents = True
    ActiveSheet.DisplayPageBreaks = PageBreakState
    Application.Calculation = xlCalculationAutomatic

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Sub Copy_SBs()

' =================================================================================================
' ===                                                                                           ===
' === Written By: MDH                                                                           ===
' === Written Date: 10/24/2019                                                                  ===
' === Updated By:                                                                               ===
' === Updated Date:                                                                             ===
' ===                                                                                           ===
' === Description: The purpose of this subroutine is to copy the indicated rows of the "Boiler  ===
' === Plate SB's" tab to the "Final Checklist" tab in order to create a list of project-specific===
' === submittals to aid the District construction staff in contract administration              ===
' ===                                                                                           ===
' =================================================================================================
'
' === Declare Variables ===========================================================================

Dim Include_Sheet As Worksheet      'Worksheet of table that indicates what is included (inclusion table)
Dim Include_Table As Range          'Location of upper left of inclusino table
Dim Include_SB_cOff As Integer      'Column offset of SB column
Dim Include_Prov_cOff As Integer    'Column offset of special provision title column
Dim Include_Ind_cOff As Integer     'Column offset of column that indicates what is included
Dim Include_rOff As Long            'Row offset of inclusion table
Dim Provision_Text As String        'Special Provision label stored as text

Dim Copy_Sheet As Worksheet         'Worksheet of table that gets copied
Dim Copy_Table As Range             'Location of upper left of table that gets copied
Dim Copy_Prov_cOff As Integer       'Column offset of special provision title column
Dim Copy_rOff As Long               'Row offset of copy table
Dim Copy_Cols As Integer            'Number of rows to copy

Dim Paste_Sheet As Worksheet        'Workbook of table that gets values pasted (paste table)
Dim Paste_Table As Range            'Location of upper left of paste table
Dim Paste_rOff As Long              'Row offset for next blank row of paste table
Dim Paste_startRow As Integer       'Row of starting value of paste table
Dim Paste_endRow As Long            'Number of rows in the paste table when the progam starts
Dim Paste_startCol As String        'Starting column of paste table indicated by letter
Dim Paste_endCol As String          'End column of paste table indicated by letter

Dim i As Long                       'Generic loop variable

' === Define Variables  ===========================================================================

Set Include_Sheet = Worksheets("Step 1")
Set Include_Table = Include_Sheet.Range("D6")
Include_SB_cOff = 0
Include_Prov_cOff = 1
Include_Ind_cOff = 2
Include_rOff = 1

Set Copy_Sheet = Worksheets("Boiler Plate SB's")
Set Copy_Table = Copy_Sheet.Range("A4")
Copy_Prov_cOff = 1
Copy_rOff = 1
Copy_Cols = 17

Set Paste_Sheet = Worksheets("Final Checklist")
Set Paste_Table = Paste_Sheet.Range("A4")
Paste_rOff = 1
Paste_startRow = Paste_Table.Row + 1
Paste_endRow = Paste_Table.Offset(0, 1).End(xlDown).Row
Paste_startCol = "A"
Paste_endCol = "Q"

' === Code ========================================================================================

' === Run Code Optimizer ===
Call OptimizeCode_Begin

'Clear all rows of the Paste Table
Paste_Sheet.Range(Paste_startCol & Paste_startRow & ":" & Paste_endCol & Paste_endRow).ClearContents

Do While Not IsEmpty(Include_Table.Offset(Include_rOff, Include_Prov_cOff))
    
    'Check if column indicates provision is included
    If IsEmpty(Include_Table.Offset(Include_rOff, Include_Ind_cOff)) Then
        'Do Nothing
        
    Else
        'Move to Copy Table to copy correct rows
        
        Do While Not IsEmpty(Copy_Table.Offset(Copy_rOff, Copy_Prov_cOff))
        
            'Check if row is for the correct provision
            If Include_Table.Offset(Include_rOff, Include_Prov_cOff).Value2 = Copy_Table.Offset(Copy_rOff, Copy_Prov_cOff).Value2 Then
                'Provisions match. Copy data.
                'Write the cell values into the source text, with the exception of column "A" which needs the SB # and column "N" which needs to retain the formula
                For i = 1 To Copy_Cols
                    If i = 1 Then 'Column "A"
                        Paste_Table.Offset(Paste_rOff, i - 1) = Include_Table.Offset(Include_rOff, Include_SB_cOff)
                    ElseIf i = 14 Then 'Column "N"
                        Paste_Table.Offset(Paste_rOff, i - 1) = Copy_Table.Offset(Copy_rOff, i - 1).FormulaR1C1
                    Else
                        Paste_Table.Offset(Paste_rOff, i - 1) = Copy_Table.Offset(Copy_rOff, i - 1).Value2
                    End If
                Next i
                
                'Move to next row of Paste Table
                Paste_rOff = Paste_rOff + 1
                
            Else
                'Provisions do not match. Do nothing.
                
            End If
            
            'Move to next row of Copy Table
            Copy_rOff = Copy_rOff + 1
        
        Loop
        
    End If
    
    'Move to next row of Inclusion Table
    Include_rOff = Include_rOff + 1
    
    'Reset Copy Table offset counter
    Copy_rOff = 1

Loop

' === Run Code Optimizer ===
Call OptimizeCode_End

End Sub
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
