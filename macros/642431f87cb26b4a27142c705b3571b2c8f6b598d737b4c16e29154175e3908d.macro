Attribute VB_Name = "Module1"
Sub CopySelected()
Attribute CopySelected.VB_ProcData.VB_Invoke_Func = " \n14"
Dim lItem As Long
    Dim SelectedValue As String
    Dim SelectedGroups As String
    Dim WorkRow As Range
    Dim commaSplit As Variant
     
    'Get selected item in list
 
    If Sheet2.ListBox1.Visible Then
        For lItem = 0 To Sheet2.ListBox1.ListCount - 1
            If Sheet2.ListBox1.Selected(lItem) Then     'Loop over listbox items, and store value for each selection
                SelectedValue = Sheet2.ListBox1.List(lItem)
            
                For Each c In Sheet4.Range("A4:A27").Cells
                    If c.Value = SelectedValue Then
                
                        commaSplit = Split(Sheet4.Cells(c.Row, 2).Value, ",")  'Select corresponding entires in settings and parse data
                    
                        For Each strLine In commaSplit
                            SelectedGroups = strLine
        
                            For Each c2 In Sheet2.Range("A13:A300").Cells   'For each class, copy number of parts
                                If c2.Value = SelectedGroups Then Sheet2.Cells(c2.Row, 8).Value = Sheet2.Cells(c2.Row, 7).Value
                            Next
                        Next
                    End If
                Next
            
            End If
        Next lItem
    End If
    
    If Sheet2.ListBox2.Visible Then
        For lItem = 0 To Sheet2.ListBox2.ListCount - 1
            If Sheet2.ListBox2.Selected(lItem) Then
                SelectedValue = Sheet2.ListBox2.List(lItem)
                
                For Each c In Sheet4.Range("A31:A33").Cells
                    If c.Value = SelectedValue Then
                        SelectedKit = Sheet4.Cells(c.Row, 2).Value
                        For Each c2 In Sheet2.Range("E13:E300").Cells
                            commaSplit = Split(c2.Value, ",")
                            For Each kit In commaSplit
                                If Trim(kit) = SelectedKit Then Sheet2.Cells(c2.Row, 8).Value = Sheet2.Cells(c2.Row, 7).Value
                            Next
                        Next
                    End If
                Next
            End If
        Next lItem
    End If
End Sub

Sub CopyAll()

    Dim maxRow As Integer
    
    maxRows = Sheet2.Range("F13").CurrentRegion.Rows.Count
    
    For Each c In Sheet2.Range(Sheet2.Cells(13, 7), Sheet2.Cells(13 + maxRows - 2, 7))
        If c.Value <> "" Then Sheet2.Cells(c.Row, 8).Value = c.Value
    Next

End Sub

Sub CreateOffer()

    MyWorkbook = ActiveWorkbook.Name

    Dim NewWorkbook As Workbook
    Set NewBook = Workbooks.Add
        With NewBook
            .Title = "My Sales"
            .Subject = "Sales"
            .SaveAs Filename:="Spareparts Offer.xls"
        End With
    
    Windows(MyWorkbook).Activate
    ActiveWorkbook.Sheets("Spares Summary").Select
    ActiveWorkbook.Sheets("Spares Summary").Copy Before:=Workbooks("Spareparts Offer.xls").Sheets(1)
    
    Windows(MyWorkbook).Activate
    ActiveWorkbook.Sheets("Cover Page").Select
    ActiveWorkbook.Sheets("Cover Page").Copy Before:=Workbooks("Spareparts Offer.xls").Sheets(1)
    
    Windows("Spareparts Offer.xls").Activate
    ActiveWorkbook.Sheets("Spares Summary").Select
    
    Dim obj As OLEObject
     'Selects all ActiveX controls on the active sheet and deletes them
    For Each obj In ActiveSheet.OLEObjects
        obj.Delete
    Next obj

    'Remove rows with no quantity
     
    'Set the first and last row to loop through
    Firstrow = ActiveWorkbook.Sheets("Spares Summary").UsedRange.Cells(11, 8).Row
    'Lastrow = ActiveWorkbook.Sheets("Spares Summary").UsedRange.Rows(ActiveWorkbook.Sheets("Spares Summary").Columns.UsedRange.Rows.Count).Row
    Lastrow = 200

    For Lrow = Lastrow To Firstrow Step -1

            'We check the values in the A column in this example
            With ActiveWorkbook.Sheets("Spares Summary").Cells(Lrow, "H")

                If Not IsError(.Value) Then

                    If .Value = "" Then .EntireRow.Delete
                    'This will delete each row with the Value "ron"
                    'in Column A, case sensitive.

                End If

            End With

    Next Lrow
    
    ActiveSheet.Range("G1").Value = ""
    
    Application.DisplayAlerts = False
    On Error Resume Next
    Sheets("Sheet1").Delete
    Sheets("Sheet2").Delete
    Sheets("Sheet3").Delete
    Application.DisplayAlerts = True
    On Error GoTo 0

End Sub

Sub ShowUserFormAndCreateContents()
    UserForm1.Show vbModeless  'Needs modeless to be editable
    
    Dim newLabel As Object
    Dim newMinTextbox As Object
    Dim newMaxTextbox As Object
    Dim newRecTextbox As Object

    UserForm1.Frame1.Controls.Clear
    UserForm1.FrameMax.Controls.Clear
    UserForm1.FrameRec.Controls.Clear

    For Each c In Sheet4.Range("A5:A25").Cells
               
        If (c.Value <> "") Then
            
            Set newLabel = UserForm1.Controls.Add("Forms.Label.1", "Label" & c.Row, True)
            With newLabel
                .Caption = c.Value & ".........................................."
                .Left = 10
                .Width = 145
                .WordWrap = False
                .Top = 20 * (c.Row - 3)
            End With
            
            Set newMinTextbox = UserForm1.Frame1.Controls.Add("Forms.Textbox.1", "Min" & c.Row, True)
            With newMinTextbox
                .Text = Sheet4.Cells(c.Row, 3).Value
                .Left = 10
                .Width = 50
                .Top = 20 * (c.Row - 4)
            End With
            
            Set newMaxTextbox = UserForm1.FrameMax.Controls.Add("Forms.Textbox.1", "Max" & c.Row, True)
            With newMaxTextbox
                .Text = Sheet4.Cells(c.Row, 4).Value
                .Left = 10
                .Width = 50
                .Top = 20 * (c.Row - 4)
            End With
            
            Set newRecTextbox = UserForm1.FrameRec.Controls.Add("Forms.Textbox.1", "Req" & c.Row, True)
            With newRecTextbox
                .Text = Sheet4.Cells(c.Row, 5).Value
                .Left = 10
                .Width = 50
                .Top = 20 * (c.Row - 4)
            End With
        
        End If
    Next
End Sub

Sub CalculateRecomended()
    Dim min As Integer
    Dim max As Integer
    Dim recomendedP As Integer
    Dim calculatedValue As Integer
    Dim origQuantity
    

    For Each c2 In Sheet2.Range("F13:F300").Cells
        If IsNumeric(c2.Value) Then 'Verify that value can be used in calculation
            
            origQuantity = c2.Value 'Store original quantity
            
            For Each c In Sheet4.Range("B4:B25").Cells
                If c.Value = Sheet2.Cells(c2.Row, 1).Value Then 'Find matching group
                    
                    If (IsNumeric(Sheet4.Cells(c.Row, 3).Value) And IsNumeric(Sheet4.Cells(c.Row, 4).Value) And IsNumeric(Sheet4.Cells(c.Row, 5).Value)) Then
                        min = Sheet4.Cells(c.Row, 3).Value
                        max = Sheet4.Cells(c.Row, 4).Value
                        recomendedP = Sheet4.Cells(c.Row, 5).Value
                        
                        calculatedValue = recomendedP * origQuantity / 100
                        
                        If (calculatedValue < min) Then calculatedValue = min
                        If (calculatedValue > max) Then calculatedValue = max
                        
                        If (calculatedValue > 0) Then Sheet2.Cells(c2.Row, 7).Value = calculatedValue
                                           
                    End If
                    
                End If
            Next
            
            
            
        End If
        
    Next
End Sub
Attribute VB_Name = "Module2"
Sub ClearSelection()
Attribute ClearSelection.VB_ProcData.VB_Invoke_Func = " \n14"
'
' ClearSelection Macro
'

    Range("H13").Select
    Range("H13:H1000").Select
    Selection.ClearContents
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton2, 17, 0, MSForms, CommandButton"
Attribute VB_Control = "CommandButton1, 11, 1, MSForms, CommandButton"
Attribute VB_Control = "ListBox1, 10, 2, MSForms, ListBox"
Attribute VB_Control = "CommandButtonClear, 19, 3, MSForms, CommandButton"
Attribute VB_Control = "CommandButton3, 25, 4, MSForms, CommandButton"
Attribute VB_Control = "CommandButton4, 26, 5, MSForms, CommandButton"
Attribute VB_Control = "CommandButton5, 28, 6, MSForms, CommandButton"
Attribute VB_Control = "ListBox2, 72, 7, MSForms, ListBox"
Attribute VB_Control = "LabelFilterName, 203, 8, MSForms, Label"
Attribute VB_Control = "LabelFilterSparePArts, 264, 9, MSForms, Label"
Attribute VB_Control = "OptionButtonSpareKitFilter, 265, 10, MSForms, OptionButton"
Attribute VB_Control = "OptionButtonGroupFilter, 268, 11, MSForms, OptionButton"

Private Sub CommandButton1_Click()
    CopySelected
End Sub

Private Sub CommandButton2_Click()
    CreateOffer
End Sub

Private Sub CommandButton3_Click()
    CopyAll
End Sub

Private Sub CommandButton4_Click()
    If ListBox1.Visible Then
        For i = 0 To ListBox1.ListCount - 1
            ListBox1.Selected(i) = False
        Next i
    End If
    If ListBox2.Visible Then
        For i = 0 To ListBox2.ListCount - 1
            ListBox2.Selected(i) = False
        Next i
    End If
End Sub

Private Sub CommandButton5_Click()
    ShowUserFormAndCreateContents
End Sub

Private Sub CommandButtonClear_Click()
    ClearSelection
End Sub

Private Sub OptionButtonGroupFilter_Click()
  ListBox1.Visible = True
  ListBox2.Visible = False
  LabelFilterName.Caption = "Groups"
End Sub

Private Sub OptionButtonSpareKitFilter_Click()
  ListBox1.Visible = False
  ListBox2.Visible = True
  LabelFilterName.Caption = "Spare kits"
End Sub

Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{37AE8473-8485-40DD-9877-46067F08CAFC}{1C89D5A7-B4E1-48D5-A733-34FDAD6D6636}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CommandButton1_Click() 'Save button
    
    Dim rowNumber As Integer
    Dim tb As Control
    
    rowNumber = 5  'Settings start at row 5
    
    For Each tb In UserForm1.Frame1.Controls
    
        If TypeName(tb) = "TextBox" Then
            Sheet4.Cells(rowNumber, 3).Value = tb.Text
            rowNumber = rowNumber + 1
        End If
            
    Next
    
    rowNumber = 5  'Settings start at row 5
    
    For Each tb In UserForm1.FrameMax.Controls
    
        If TypeName(tb) = "TextBox" Then
            Sheet4.Cells(rowNumber, 4).Value = tb.Text
            rowNumber = rowNumber + 1
        End If
            
    Next
    
    rowNumber = 5  'Settings start at row 5
    
    For Each tb In UserForm1.FrameRec.Controls
    
        If TypeName(tb) = "TextBox" Then
            Sheet4.Cells(rowNumber, 5).Value = tb.Text
            rowNumber = rowNumber + 1
        End If
            
    Next
    
    CalculateRecomended

    UserForm1.Hide
    
End Sub

Private Sub CommandButton2_Click() 'Cancel button
    UserForm1.Hide
End Sub


INQUEST-PP=macro
