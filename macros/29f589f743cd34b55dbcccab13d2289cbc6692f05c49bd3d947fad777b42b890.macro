Attribute VB_Name = "AddRevision"
Attribute VB_Base = "0{8A10F6BC-42E4-411C-B18C-D23DFEEC6078}{4CD3BF96-324A-4BB7-8D0A-F1FDB3B33A98}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub AddRevision_Click()
If RevisionName.Text = "Your Name" Or RevisionName.Text = "" Then
MsgBox "Please Enter Your Name."
Exit Sub
ElseIf RevisionDescription.Text = "Brief Description of Revision(s) Made" Or RevisionDescription.Text = "" Then
MsgBox "Please Provide a Brief Description of the Revision(s) You Made to this Project Plan."
Exit Sub
Else
Call Layout.UpdateRevisionTable
End If
Hide
End Sub


Private Sub SkipRevision_Click()
Hide
End Sub

Attribute VB_Name = "AddingMilestones"
Attribute VB_Base = "0{6DA82BA1-4194-42CF-AB06-D9432C049238}{E5C802E8-99D9-46CD-AE51-3FDD9108CABB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub approve_Click()
AddingMilestones.Hide
End Sub

Attribute VB_Name = "ClientInfoUpdate"
Attribute VB_Base = "0{36445E66-294D-4EB3-A9B9-AAA0C139696A}{A8F05CAD-ED85-4195-B1E2-41F60508DE65}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub GoToProjectPlan_Click()
If TimeAndMaterialsProject.Value = True Then
[TEMPLATETYPE].Value = "Time & Materials Project Plan"
Else
[TEMPLATETYPE].Value = "Fixed Fee Project Plan"
End If

If ClientNameText.Value = "" And ProjDescriptionText.Value = "" Then
    Call NoClientNameAndProjectDescription
    Exit Sub
ElseIf ClientNameText.Value = "" Then
    Call NoClientName
    Exit Sub
ElseIf ProjDescriptionText.Value = "" Then
    Call NoProjDescription
Exit Sub
Else
Call UpdateClientNameAndProjDescription
Hide
End If
End Sub

Sub NoClientName()
MsgBox "Please Enter the Client's Name"
End Sub
Sub NoProjDescription()
MsgBox "Please Provide a Brief Description of the Project."
End Sub
Sub NoClientNameAndProjectDescription()
MsgBox "Please Enter Client's Name and Project Description"
End Sub

Sub UpdateClientNameAndProjDescription()
Application.ScreenUpdating = False
Application.Goto Reference:="CLIENTNAME"
ActiveCell.Value = ClientNameText.Text
Application.Goto Reference:="PROJDESCRIPTION"
ActiveCell.Value = ProjDescriptionText.Text
If [PROJDATE].Value = "" Then
[PROJDATE].Select
With ActiveCell
.NumberFormat = "MMMM D, yyyy"
.Value = Now()
End With
End If
Range("B5").Select

Application.ScreenUpdating = True
End Sub




Attribute VB_Name = "ConsolidateSure"
Attribute VB_Base = "0{8D43F620-FF54-40AF-8181-5F5F2DDC1F5E}{584829F5-F1BD-4335-9E0E-1C59429BA5F8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CancelConsolidation_Click()
Application.ScreenUpdating = False
ConsolidateSure.Hide
Application.ScreenUpdating = True
End Sub

Private Sub ConsolidateYes_Click()
ConsolidateSure.Hide
Application.ScreenUpdating = False
Call Layout.ConsolidateProjectPlan
Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "DeleteExtraLines"
Attribute VB_Base = "0{4EB07690-FAB5-4272-9DA0-BAC06F59FA6A}{DF7CB552-C46F-424F-A5C7-841B979E8B52}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CancelDeleteExtraLines_Click()
    Application.ScreenUpdating = False
        DeleteExtraLines.Hide
        Call Layout.DeleteExtraTaskLinesCancel
    Application.ScreenUpdating = True
End Sub

Private Sub DeleteExtraLinesYes_Click()
    Application.ScreenUpdating = False
         DeleteExtraLines.Hide
        Call Layout.DeleteExtraTaskLinesFinish
    Application.ScreenUpdating = True
End Sub
Attribute VB_Name = "DeletePhase"
Attribute VB_Base = "0{813318EA-BFF6-485B-BCCD-C1D237A596BC}{A3C01EFA-C134-4FDF-BD18-DA786ACF628A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CancelDeletePhase_Click()
Application.ScreenUpdating = False
DeletePhase.Hide
Call Layout.DeletePhaseFormPageCancel
Application.ScreenUpdating = True
End Sub

Private Sub DeletePhaseYes_Click()
Application.ScreenUpdating = False
DeletePhase.Hide
Call Layout.DeletePhaseFormPageFinish
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "DeleteTask"
Attribute VB_Base = "0{C6657BBB-03F0-4D9E-9D9F-F070F0F61130}{5BCF3BFD-43AC-4E17-AC79-B042FF8316B2}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CancelDeleteTask_Click()
Application.ScreenUpdating = False
DeleteTask.Hide
Call Layout.DeleteTaskFormPageCancel
Application.ScreenUpdating = True
End Sub

Private Sub DeleteTaskYes_Click()
Application.ScreenUpdating = False
DeleteTask.Hide
Call Layout.DeleteTaskFormPageFinish
Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "ExportToQuosal"
Attribute VB_Base = "0{543DD7E2-358D-4C68-8A97-34800C1E53BF}{C05018FA-29CC-488D-8C26-26495750B7BE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub approve_Click()
ExportToQuosal.Hide
End Sub

Private Sub CommandButton1_Click()
ExportToQuosal.Hide
End Sub

Attribute VB_Name = "IncompleteTaskOnSave"
Attribute VB_Base = "0{4C5DB7A2-E216-4266-8662-EDD9F90C769F}{7CF3ABD4-C784-43C6-B18A-9A64AC5DF74C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CancelFix_Click()
   Call OnSaveRestrictions.CancelFix
End Sub

Private Sub YesSave_Click()
Call OnSaveRestrictions.YesSave
End Sub

Attribute VB_Name = "Layout"
Public LastTaskCheck As Integer
Public ValidLocationChecker As Integer
Public FirstPhaseChecker As Integer
Public FirstTaskChecker As Integer


Sub NotesToReviewer()
'Application.ScreenUpdating = False
 Application.CutCopyMode = False
'Application.Goto Reference:="REVIEWER"
'Application.ScreenUpdating = True
End Sub

Sub RevisionBeforeSave()
AddRevision.RevisionDateText = "Date: " & [TODAY].Value
AddRevision.Show
End Sub

Sub ResetProjectHoursAndRatesRange()

'The ESTHOURS Range is used to calculate the Project Management Requirements. The value is equal to the Total Project Hours minus the Project Management Hours.
ActiveWorkbook.Names("ESTHOURS").Delete
Range([ESTHOURSTOP].Offset(1, 0), [PROJTOTALHOURS].Offset(-1, 0)).Select
ActiveWorkbook.Names.Add Name:="ESTHOURS", RefersToR1C1:=Selection

'The value is equal to the Total Project Hours including the Project Management Hours.
ActiveWorkbook.Names("FULLPROJHOURS").Delete
Range([ESTHOURSTOP], [PROJTOTALHOURS].Offset(-1, 0)).Select
ActiveWorkbook.Names.Add Name:="FULLPROJHOURS", RefersToR1C1:=Selection

'This range is used for the Project Resource Summary section. Make sure the Project Rates and Project Hours Ranges are accurate as Tasks and Phases are added and removed.
ActiveWorkbook.Names("FULLPROJRATES").Delete
Range([ESTHOURSTOP].Offset(0, 1), [PROJTOTALHOURS].Offset(-1, 1)).Select
ActiveWorkbook.Names.Add Name:="FULLPROJRATES", RefersToR1C1:=Selection

End Sub
Sub UpdateRevisionTable()
[Revisions].Offset(0, 1).Select
Selection.End(xlUp).Select
ActiveCell.Offset(1, 0).Select
    If ActiveCell.Offset(-1, 0).Value = "" Then
        ActiveCell.Value = ActiveCell.Value
        MsgBox "Please Add More Revision Lines"
        Exit Sub
    Else
        ActiveCell.Value = ActiveCell.Value
    End If
ActiveCell.Value = AddRevision.RevisionName.Text & "  -  " & AddRevision.RevisionDescription.Text
ActiveCell.Offset(0, 1).Select

    With ActiveCell
    .NumberFormat = "m/d/yy"
    .Value = Now()
    End With
    
AddRevision.RevisionName.Text = "Your Name"
AddRevision.RevisionDescription.Text = "Brief Description of Revision(s) Made"
    [TEMPLATETYPE].Offset(2, 0).Select
End Sub

Sub TemplateTitle()
    [TEMPLATETYPE].Select
    If [TEMPLATETYPE] = "Fixed Price Project Plan" Then
    Exit Sub
    ElseIf [TEMPLATETYPE] <> "Fixed Price Project Plan" Then
     [TEMPLATETYPE] = "Fixed Price Project Plan"
    Columns("E:E").Select
    Selection.EntireColum.Hidden = True
    [TEMPLATETYPE].Select
    End If
 Application.CutCopyMode = False
End Sub
Sub GoToRevisions()
   Application.Goto Reference:="Revisions"
End Sub

Sub Fixed()
On Error Resume Next
Application.ScreenUpdating = False
[ESTHOURS].Select
Selection.EntireColumn.Hidden = False
[ESTHOURSTOP] = "=SUM(ESTHOURS)*0.8"
[ESTHOURS].Select

Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
[ESTHOURS20TOP].Select
[ESTHOURS20TOP] = "=SUM(ESTHOURS20)*0.8"
Selection.EntireColumn.Hidden = True
[ESTHOURS80TOP].Select
[ESTHOURS80TOP] = "=SUM(ESTHOURS80)*0.8"
Selection.EntireColumn.Hidden = True
[TEMPLATETYPE].Select
[TEMPLATETYPE] = "Fixed Cost Project Plan"
Call GoToA2

Application.ScreenUpdating = True
End Sub

Sub TandM()
Dim hours As Range
Application.ScreenUpdating = False
On Error Resume Next

[ESTHOURS].Select
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
Selection.Copy

[ESTHOURS20].Select
Selection.EntireColumn.Hidden = False

[ESTHOURS80].Select
Selection.EntireColumn.Hidden = False

[ESTHOURS].Select
Selection.Copy
[ESTHOURS20].Select
Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
Selection.Copy
[ESTHOURS80].Select
Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False

[ESTHOURS20TOP] = "=SUM(ESTHOURS20)*0.8"

[ESTHOURS80TOP].Select
Selection.EntireColumn.Hidden = False
Selection.Copy
Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
[ESTHOURS80TOP] = "=SUM(ESTHOURS80)*0.8"


[ESTHOURS].Select
For Each hours In Selection
     If Left(hours.Offset(0, -3).Value, 4) = "Task" Or hours.Offset(0, -2).Value <> "" Then
       hours.Value = "=IF(AND(RC[1]<>"""",RC[2]<>""""),AVERAGE(RC[1]:RC[2]),IF(AND(RC[1]="""",RC[2]<>""""),RC[2],IF(AND(RC[1]<>"""",RC[2]=""""),RC[1],"""")))"
    Else
        hours.Value = ""
    End If
Next hours
Selection.EntireColumn.Hidden = True
[TEMPLATETYPE].Select
[TEMPLATETYPE] = "Time & Materials Project Plan"
Call GoToA2
Application.CutCopyMode = False
Application.ScreenUpdating = True
End Sub

Sub TaskHeaderBorder()
    Selection.Font.Bold = True
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub

Sub TaskPlainBorder()
    Selection.Font.Bold = False
        With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
End Sub

Sub BlueBackground()
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight2
        .TintAndShade = 0.799981688894314
        .PatternTintAndShade = 0
    End With
End Sub

Sub YellowBackground()
      With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
End Sub

Sub DarkBlueBackground()
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = 13603328
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
End Sub

Sub GrayBorders()
    Range(Selection, Selection.Offset(0, 10)).Select
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ThemeColor = 1
        .TintAndShade = -0.249946592608417
        .Weight = xlThin
    End With
End Sub

Sub WhiteBackground()
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
End Sub

Sub FinalizeProjectPlan()
    [TASKEND].Offset(-1, 2).Select
    If ActiveCell.Value = "" And ActiveCell.Offset(-1, 0).Value = "" And ActiveCell(-2, 0).Value = "" And ActiveCell(-3, 0).Value = "" Then
        ActiveCell.Offset(-3, 0).Select
        Else
        Exit Sub
    End If
    
    Range(Selection, Selection.End(xlUp)).Select
    Range(Selection.Offset(1, 0), Selection.Offset(1, 0)).Select
    Selection.EntireRow.Delete
    Call GoToA2
End Sub

Sub AddNewPhase()
    Application.ScreenUpdating = False
    
    'Always run this when doing anything to 1) Remember where you started 2) Set PhaseTop and TaskTop Values
    Call SetAtStart
    
    'Make sure you're trying to add a Phase in a valid location of the Project Plan
    Call CheckForValidLocation
    If ValidLocationChecker = 1 Then
        Call ResetAtEnd
        MsgBox "You are attempting to Add a Phase outside of the Project Plan area. Please try again."
        Exit Sub
    End If
            
    'Find where to Add the New Phase
    Cells(ActiveCell.Row, 2).Select
    If Left(ActiveCell.Value, 6) = "Phase:" Then
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        GoTo GetNewPhase
    Else
        Selection.End(xlDown).Select
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        GoTo GetNewPhase
     End If
     
GetNewPhase:
    Application.Goto Reference:="INSERTROWHERE"
    Range(Selection, Selection.Offset(0, 10)).Select
    Call Layout.AddNewPhaseFinish
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
    
    Application.ScreenUpdating = True
End Sub

Sub AddNewPhaseFinish()
    Application.Goto Reference:="NEWPHASE"
    Selection.Copy
    Application.Goto Reference:="INSERTROWHERE"
    Selection.Insert Shift:=xlDown
    
    'This becomes the new "Go back here" point when deletion has finished.
    ActiveWorkbook.Names("GOBACKHERE").Delete
    ActiveWorkbook.Names.Add Name:="GOBACKHERE", RefersToR1C1:=ActiveCell.Offset(0, 3)
    
    Selection.Copy
    Call UpdatePhaseNumbers
    Call UpdateProjectTotalCost
    Call ResetProjectHoursAndRatesRange
    Application.CutCopyMode = False
        
End Sub

Sub AddNewPhaseCancel()
    Application.Goto Reference:="INSERTROWHERE"
    ActiveWorkbook.Names("INSERTROWHERE").Delete
End Sub

Sub UpdateProjectTotalCost()
    [PROJTOTALCOST].Offset(-1, 0).Select
   ActiveWorkbook.Names.Add Name:="PROJTOTALCOSTBOTTOM", RefersToR1C1:=Selection
    Range([PROJTOTALCOSTTOP], [PROJTOTALCOSTBOTTOM]).Select
    ActiveWorkbook.Names.Add Name:="PROJTOTALCOSTRANGE", RefersToR1C1:=Selection
    [PROJTOTALCOST].Value = "=SUM(PROJTOTALCOSTRANGE)"
    ActiveWorkbook.Names("PROJTOTALCOSTBOTTOM").Delete
End Sub

Sub SetAtStart()
    [TASKTOP].Value = "TaskTop"
    [TASKEND].Value = "TaskEnd"
    [PHASETOP].Value = "PhaseTop"
    [PHASEBOTTOM].Value = "PhaseBottom"
    ActiveWorkbook.Names.Add Name:="GOBACKHERE", RefersToR1C1:=Selection
End Sub

Sub ResetAtEnd()
    On Error Resume Next
    [TASKTOP].Value = "Task"
    [TASKEND].Value = ""
    [PHASETOP].Value = "Phase:"
    [PHASEBOTTOM].Value = ""
    [GOBACKHERE].Value = [GOBACKHERE].Value
    [GOBACKHERE].Select
    ActiveWorkbook.Names("GOBACKHERE").Delete
End Sub
Sub AddNewTask()
    Application.ScreenUpdating = False
    
    'Always run this when doing anything to 1) Remember where you started 2) Set PhaseTop and TaskTop Values
    Call SetAtStart
    
    'Make sure you're trying to add a task in a valid location of the Project Plan
    Call CheckForValidLocation
    If ValidLocationChecker = 1 Then
        Call ResetAtEnd
        MsgBox "You are attempting to Add a Task outside of the Project Plan area. Please try again."
        Exit Sub
    End If
    
    'If trying to add a Task while selecting a Phase Line, do this...
    Cells(ActiveCell.Row, 2).Select
    If Left(ActiveCell.Value, 6) = "Phase:" Then
        Cells(ActiveCell.Row + 1, 3).Select
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        GoTo GetNewTask
    End If
    
    'Otherwise, do this...
    Cells(ActiveCell.Row, 3).Select
    
    'You're in the Task Row and the next row is a Task Row too.
    If Left(ActiveCell.Value, 4) = "Task" And Left(ActiveCell.Offset(1, 0).Value, 4) = "Task" Then
         ActiveCell.Offset(1, 0).Select
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        GoTo GetNewTask
    End If
    
    'You're in the Task Row and the next row is a Phase Row.
    If Left(ActiveCell.Value, 4) = "Task" And Left(ActiveCell.Offset(1, -1).Value, 5) = "Phase" Then
         ActiveCell.Offset(1, 0).Select
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        GoTo GetNewTask
    End If
    
    'You're in the Task Row
    If Left(ActiveCell.Value, 4) = "Task" Then
         Selection.End(xlDown).Select
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        GoTo GetNewTask
    End If
    
    'You're not in the Task Row. You need to find it.
    Selection.End(xlUp).Select
    If Left(ActiveCell.Value, 4) = "Task" Then
        Selection.End(xlDown).Select
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        GoTo GetNewTask
    End If
        
GetNewTask:
    'Determine if the New Task is the first Project Management Task. If so, add below.
    If [INSERTROWHERE].Value = [TASKTOP].Value Then
        ActiveWorkbook.Names("INSERTROWHERE").Delete
        ActiveCell.Offset(0, -1).Select
        Selection.End(xlDown).Select
        ActiveCell.Offset(0, 1).Select
        ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection
        MsgBox "You Cannot Enter a New Task Above the Project Management Task. The New Task will be added below this Task."
    End If
    Application.Goto Reference:="INSERTROWHERE"
    Range(Selection.Offset(0, -1), Selection.Offset(0, 8)).Select
    Call Layout.AddNewTaskFinish
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
    
    Application.ScreenUpdating = True
End Sub

Sub AddNewTaskFinish()
    Application.Goto Reference:="NEWTASK"
    Selection.Copy
    Application.Goto Reference:="INSERTROWHERE"
    [INSERTROWHERE].Offset(0, -1).Select
    Selection.Insert Shift:=xlDown
    
    'This becomes the new "Go back here" point when deletion has finished.
    ActiveWorkbook.Names("GOBACKHERE").Delete
    ActiveWorkbook.Names.Add Name:="GOBACKHERE", RefersToR1C1:=ActiveCell.Offset(0, 3)
        
    Call GrayBorders
    Selection.Copy
    Call UpdateTaskNumbers
    Call UpdateProjectTotalCost
    Call ResetProjectHoursAndRatesRange
    Application.Goto Reference:="INSERTROWHERE"
    ActiveWorkbook.Names("INSERTROWHERE").Delete
    ActiveCell.Offset(0, -1).Select
    Call GrayBorders
    ActiveCell.Offset(0, 2).Select
    Application.CutCopyMode = False
End Sub

Sub UpdateTaskNumbers()
    Dim tasknumber As Integer
    Dim Task As Range
    
    Cells(ActiveCell.Row, 2).Select
    If Left(ActiveCell.Value, 6) = "Phase:" And Left(ActiveCell.Offset(1, 0).Value, 6) = "Phase:" Then
        Exit Sub
    ElseIf Left(ActiveCell.Value, 6) = "Phase:" Then
        Range(Selection, Selection.End(xlDown)).Select
        GoTo UpdateTaskNumbers
    End If

    Selection.End(xlUp).Select
    Range(Selection, Selection.End(xlDown)).Select
    
UpdateTaskNumbers:
    Range(Selection.Offset(0, 2), Selection.Offset(0, 2)).Select
    tasknumber = 0
    For Each Task In Selection
        If Task.Offset(0, -1).Value = "Task" Or Task.Offset(0, -1).Value = "TaskTop" Then
            tasknumber = tasknumber + 1
            Task.Value = tasknumber
        Else
            tasknumber = tasknumber
            Task.Value = Task.Value
        End If
    Next Task
End Sub

Sub UpdatePhaseNumbers()
    Dim phasenumber As Integer
    Dim Phase As Range
    
    Range([PHASETOP], [PHASEBOTTOM]).Select
    Range(Selection.Offset(0, 1), Selection.Offset(0, 1)).Select
    phasenumber = 0
    For Each Phase In Selection
        If Phase.Offset(0, -1).Value = "Phase:" Or Phase.Offset(0, -1).Value = "PhaseTop" Then
            phasenumber = phasenumber + 1
            Phase.Value = phasenumber
        Else
            phasenumber = phasenumber
            Phase.Value = Phase.Value
        End If
    Next Phase
End Sub

Sub CheckForValidLocation()
'This Macro makes sure you're in the project plan area when trying to do something.
phasetoprow = [PHASETOP].Row
phasebottomrow = [PHASEBOTTOM].Row
activecellrow = ActiveCell.Row
ValidLocationChecker = 0

If activecellrow < phasetoprow Or activecellrow > phasebottomrow Then
    ValidLocationChecker = 1
    Exit Sub
ElseIf activecellrow = phasetoprow Then
    ActiveCell.Offset(1, 0).Select
    ValidLocationChecker = 0
ElseIf activecellrow = phasebottomrow Then
    ActiveCell.Offset(-1, 0).Select
    ValidLocationChecker = 0
End If

End Sub

Sub AddNewLines()
On Error GoTo EndLines
Application.ScreenUpdating = False

    'Always run this when doing anything to 1) Remember where you started 2) Set PhaseTop and TaskTop Values
    Call SetAtStart
    
    Call CheckForValidLocation
    If ValidLocationChecker = 1 Then
        Call ResetAtEnd
        MsgBox "You are attempting to add lines outside of the Project Plan. Please try again."
        Exit Sub
    End If

    'This is where the selection will return to after the new lines are added.
    ActiveWorkbook.Names.Add Name:="ADDLINESHOME", RefersToR1C1:=ActiveCell.Offset(-1, 0)

    'Go to the third column in the row to find out where you are in the plan.
    Cells(ActiveCell.Row, 3).Select
    
    'Are you in the Phase? If so, move one cell down
    If Left(ActiveCell.Offset(0, -1).Value, 6) = "Phase:" Then
        ActiveCell.Offset(1, 0).Select
        ActiveWorkbook.Names.Add Name:="INSERTLINESTASK", RefersToR1C1:=Selection
        GoTo GetNewLines
    Else
        ActiveWorkbook.Names.Add Name:="INSERTLINESTASK", RefersToR1C1:=Selection
        GoTo GetNewLines
    End If
        
GetNewLines:
    ActiveCell.Offset(1, -1).Select
        GoTo InsertNewLines

InsertNewLines:
        ActiveWorkbook.Names.Add Name:="INSERTLINESHERE", RefersToR1C1:=Selection
        Application.Goto Reference:="NEWTASKLINES"
        Application.CutCopyMode = False
        Selection.Copy
        Application.Goto Reference:="INSERTLINESHERE"
        Selection.Insert Shift:=xlDown
        ActiveWorkbook.Names("INSERTLINESHERE").Delete
        GoTo NewLinesAdded

NewLinesAdded:
    Call UpdateProjectTotalCost
    Call ResetProjectHoursAndRatesRange
    [INSERTLINESTASK].Select
    ActiveWorkbook.Names("INSERTLINESTASK").Delete
    Application.CutCopyMode = False
    
EndLines:
    [ADDLINESHOME].Offset(1, 0).Select
    ActiveWorkbook.Names("ADDLINESHOME").Delete
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
    
Application.ScreenUpdating = True
End Sub


Sub DeleteBlankLinesTaskFormPage()
Dim rng As Range
Dim i As Long
Range([PHASETOP].Offset(1, 0), [PHASEBOTTOM].Offset(-1, 0)).Select
Set rng = Selection
Application.Calculation = xlCalculationManual
For i = rng.Rows.Count To 1 Step -1
    If rng.Cells(i).Offset(0, 1).Value = "" And rng.Cells(i).Offset(0, 3).Value = "" And rng.Cells(i).Offset(-1, 3).Value = "" And rng.Cells(i).Offset(-1, 1).Value = "" Then
        rng.Cells(i).EntireRow.Delete
   ElseIf rng.Cells(i).Offset(0, 3).Value <> "" Then
         rng.Cells(i).Value = rng.Cells(i)
   End If
   Next
Application.Calculation = xlCalculationAutomatic

End Sub

Sub CheckForFirstPhaseLocation()
    'This is an error checker to make sure that you're not deleting the first or only Phase in a Project Plan
    phasetoprow = [PHASETOP].Row
    phasebottomrow = [PHASEBOTTOM].Row
    activecellrow = ActiveCell.Row
    FirstPhaseChecker = 0
    
    'Save your spot while checking if the phase you're trying to delete is the first phase
    ActiveWorkbook.Names.Add Name:="DELETEROWHERE", RefersToR1C1:=Selection
    
        [PHASETOP].Select
        Selection.End(xlDown).Select
        
        'Find the start of the Second Phase
        secondphasestartrow = ActiveCell.Row
    
        'If the Phase Bottom row is the same as the Second Phase Start Row, don't delete it. This is how we find if you are trying to delete the one and only Phase
        If phasebottomrow = secondphasestartrow Then
            FirstPhaseChecker = 2
        'If the activeCell row is equal to the PhaseTop row And ActiveCell is less than the SecondPhaseStartRow, it must be somewhere in between. Therefore, it's the first phase - Don't Delete
        ElseIf phasetoprow <= activecellrow And activecellrow < secondphasestartrow Then
            FirstPhaseChecker = 1
        End If
    
    'Go back to where you started
    [DELETEROWHERE].Select
    ActiveWorkbook.Names("DELETEROWHERE").Delete
End Sub

Sub DeletePhaseFormPage()
    'Always run this when doing anything to 1) Remember where you started 2) Set PhaseTop and TaskTop Values
    Call SetAtStart
    
    'This is an error checker to make sure you're deleting a phase in the Project Plan
    Call CheckForValidLocation
    If ValidLocationChecker = 1 Then
        MsgBox "You are attempting to delete a phase outside of the Project Plan. Please try again."
        Exit Sub
    End If
    
    'This is an error checker to make sure that you're not deleting the first or only Phases in a Project Plan
    Call CheckForFirstPhaseLocation
    If FirstPhaseChecker = 1 Then
        MsgBox "You are attempting to delete the First Phase of this Project Plan. This phase is required and cannot be deleted."
        Exit Sub
    ElseIf FirstPhaseChecker = 2 Then
        MsgBox "You are attempting to delete the only Phase of this Project Plan. At least one phase is required and cannot be deleted."
        Exit Sub
    End If

    Cells(ActiveCell.Row, 2).Select
    
    'Check to see if this is the Top Row in a Phase that is eligible for deletion
    If Left(ActiveCell.Value, 6) = "Phase:" Then
        ActiveWorkbook.Names.Add Name:="DELETEROWHERE", RefersToR1C1:=Selection
        GoTo DeleteThisPhase
    End If
    
    'Find the Top Row of the current Phase and see if it's eligible for deletion
    Cells(ActiveCell.Row, 2).Select
    Selection.End(xlUp).Select
    If Left(ActiveCell.Value, 6) = "Phase:" Then
        ActiveWorkbook.Names.Add Name:="DELETEROWHERE", RefersToR1C1:=Selection
        GoTo DeleteThisPhase
        
    'If the ActiveCell Doesn't equal phase, we're lost. We can't find the Phase to delete.
    ElseIf Left(ActiveCell.Value, 6) <> "Phase:" Then
        MsgBox "Unable to locate a Phase to Delete. Make sure Column B of the Phase you want to delete begins with 'Phase:'."
        [PHASETOP].Value = "Phase:"
        [PHASEBOTTOM].Value = ""
        Exit Sub
    End If
        
DeleteThisPhase:
    [DELETEROWHERE].Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(-1, 0).Select
    Range(Selection, Selection.End(xlUp)).Select
    Range(Selection, Selection.Offset(0, 10)).Select
    Application.ScreenUpdating = True
    DeletePhase.Show
End Sub

Sub DeletePhaseFormPageFinish()
    Selection.EntireRow.Delete
    ActiveCell.Select
    ActiveWorkbook.Names.Add Name:="NEWDELETEROWHERE", RefersToR1C1:=Selection
    Call UpdatePhaseNumbers
    Application.Goto Reference:="NEWDELETEROWHERE"
    ActiveWorkbook.Names("NEWDELETEROWHERE").Delete
    
    'This becomes the new "Go back here" point when deletion has finished.
    ActiveWorkbook.Names("GOBACKHERE").Delete
    ActiveWorkbook.Names.Add Name:="GOBACKHERE", RefersToR1C1:=Selection
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
End Sub

Sub DeletePhaseFormPageCancel()
    Application.Goto Reference:="DELETEROWHERE"
    ActiveWorkbook.Names("DELETEROWHERE").Delete
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
End Sub

Sub LastTaskChecker()
'The Purpose of this Sub is to make sure that you don't delete the only Task in a Phase
    Dim tasknumber As Integer
    Dim Task As Range
    ActiveWorkbook.Names.Add Name:="LASTTASKCHECKERSPOT", RefersToR1C1:=Selection
    Cells(ActiveCell.Row, 2).Select
    If Left(ActiveCell.Value, 6) = "Phase:" And Left(ActiveCell.Offset(1, 0).Value, 6) = "Phase:" Then
        Exit Sub
    ElseIf Left(ActiveCell.Value, 6) = "Phase:" Then
        Range(Selection, Selection.End(xlDown)).Select
    End If
    Selection.End(xlUp).Select
    Range(Selection, Selection.End(xlDown)).Select

    
'See if there is only one Task in a Phase. If so, don't delete the final task.
CheckTaskTotals:
    Range(Selection.Offset(0, 2), Selection.Offset(0, 2)).Select
    tasknumber = 0
    For Each Task In Selection
        If Task.Offset(0, -1).Value = "Task" Or Task.Offset(0, -1).Value = "TaskTop" Then
            tasknumber = tasknumber + 1
            Task.Value = tasknumber
        Else
            tasknumber = tasknumber
            Task.Value = Task.Value
        End If
    Next Task
    
        If tasknumber = 1 Then
            tasknumber = tasknumber + 1
            LastTaskCheck = 1
        End If
        [LASTTASKCHECKERSPOT].Select
        ActiveWorkbook.Names("LASTTASKCHECKERSPOT").Delete
End Sub

Sub CheckForFirstTaskLocation()
    'This is an error checker to make sure that you're not deleting the first or only Task in a Project Plan
    tasktoprow = [TASKTOP].Row
    taskbottomrow = [TASKEND].Row
    activecellrow = ActiveCell.Row
    FirstTaskChecker = 0
    
    'Save your spot while checking if the phase you're trying to delete is the first phase
    ActiveWorkbook.Names.Add Name:="DELETEROWHERE", RefersToR1C1:=Selection
    
        [TASKTOP].Select
        
        'Populate the Task Top
        Selection.End(xlDown).Select
        
        'Find the start of the next Task
        secondtaskstartrow = ActiveCell.Row
    
        'If the Task End row is the same as the Next Task Start Row, don't delete it. This is how we find if you are trying to delete the one and only Task
        If taskbottomrow = secondtaskstartrow Then
            FirstTaskChecker = 2
            
        'If the ActiveCell row is greater or equal to the TaskTop row and less than the SecondTaskStartRow, it must be in between. Therefore, it is the First Task - Don't Delete
        ElseIf tasktoprow <= activecellrow And activecellrow < secondtaskstartrow Then
            FirstTaskChecker = 1
        End If
    
    'Go back to where you started
    [DELETEROWHERE].Select
    ActiveWorkbook.Names("DELETEROWHERE").Delete
End Sub

Sub DeleteTaskFormPage()
    LastTaskCheck = 0
    
    'Always run this when doing anything to 1) Remember where you started 2) Set PhaseTop and TaskTop Values
    Call SetAtStart
    
    'This is an error checker to make sure that you're deleting a valid Task in the Project Plan
    Call CheckForValidLocation
    If ValidLocationChecker = 1 Then
        Call ResetAtEnd
        MsgBox "You are attempting to delete a Task outside of the Project Plan. Please try again."
        Exit Sub
    End If
    
    'This is an error checker to make sure that you're not deleting the first or only Task in a Project Plan
    Call CheckForFirstTaskLocation
    If FirstTaskChecker = 1 Then
        Call ResetAtEnd
        MsgBox "You are attempting to delete the First Task of this Project Plan. This Task is required and cannot be deleted."
        Exit Sub
    ElseIf FirstTaskChecker = 2 Then
        Call ResetAtEnd
        MsgBox "You are attempting to delete the only Task of this Project Plan. At least one Task is required and cannot be deleted."
        Exit Sub
    End If

    Cells(ActiveCell.Row, 3).Select
    
    'Are you in the Phase Line? If so, move one cell down
    If Left(ActiveCell.Offset(0, -1).Value, 6) = "Phase:" Then
        ActiveCell.Offset(1, 0).Select
    End If
    
    'Check to see if this is the Top Row in a Task that is eligible for deletion
    If Left(ActiveCell.Value, 4) = "Task" Then
        ActiveWorkbook.Names.Add Name:="DELETEROWHERE", RefersToR1C1:=Selection
        GoTo DeleteThisTask
    End If
    
    'Find the Top Row of the current Task and see if it's eligible for deletion
    Cells(ActiveCell.Row, 3).Select
    Selection.End(xlUp).Select
    If Left(ActiveCell.Value, 4) = "Task" Then
        ActiveWorkbook.Names.Add Name:="DELETEROWHERE", RefersToR1C1:=Selection
        GoTo DeleteThisTask
    
    'If the ActiveCell Doesn't equal Task, we're lost. We can't find the Task to delete.
    ElseIf Left(ActiveCell.Value, 4) <> "Task" Then
        Call ResetAtEnd
        MsgBox "Unable to locate a Task to Delete. Make sure Column C of the Task you want to delete begins with 'Task'."
        Exit Sub
    End If

        
DeleteThisTask:
    Call LastTaskChecker
    If LastTaskCheck > 0 Then
        Call ResetAtEnd
        MsgBox "You are attempting to delete the only Task in this Phase. Please delete the entire Phase instead."
        Exit Sub
    End If

    [TASKTOP].Value = "Task"
    [TASKEND].Value = "TaskEnd"
    [DELETEROWHERE].Select
    Selection.End(xlDown).Select
    [TASKEND].Value = ""
    ActiveCell.Offset(-1, 0).Select
    Range(Selection, Selection.End(xlUp)).Select
    Range(Selection.Offset(0, -1), Selection.Offset(0, -1)).Select
    Range(Selection, Selection.Offset(0, 10)).Select
    Application.ScreenUpdating = True
    DeleteTask.Show
End Sub

Sub DeleteTaskUpdateNumbers()
    Dim tasknumber As Integer
    Dim Task As Range

    ActiveCell.Select
    Range(Selection, Selection.End(xlDown)).Select
    Range(Selection.Offset(0, 2), Selection.Offset(0, 2)).Select
    tasknumber = 0
    For Each Task In Selection
        
        If Task.Offset(0, -1).Value = "Task" Then
            tasknumber = tasknumber + 1
            Task.Value = tasknumber
        Else
            tasknumber = tasknumber
            Task.Value = Task.Value
        End If
    Next Task
End Sub

Sub DeleteTaskFormPageFinish()
    Selection.EntireRow.Delete
    ActiveCell.Select
    ActiveWorkbook.Names.Add Name:="NEWDELETEROWHERE", RefersToR1C1:=Selection
    Call UpdateTaskNumbers
    Application.Goto Reference:="NEWDELETEROWHERE"
    ActiveCell.Select
    ActiveWorkbook.Names("NEWDELETEROWHERE").Delete
    
    'This becomes the new "Go back here" point when deletion has finished.
    ActiveWorkbook.Names("GOBACKHERE").Delete
    ActiveWorkbook.Names.Add Name:="GOBACKHERE", RefersToR1C1:=Selection
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
End Sub

Sub DeleteTaskFormPageCancel()
    Application.Goto Reference:="DELETEROWHERE"
    ActiveCell.Select
    ActiveWorkbook.Names("DELETEROWHERE").Delete
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
End Sub

Sub DeleteExtraTaskLines()
Application.ScreenUpdating = False
On Error Resume Next
    'Always run this when doing anything to 1) Remember where you started 2) Set PhaseTop and TaskTop Values
    Call SetAtStart
    
    'This is an error checker to make sure that you're deleting lines in a valid Task in the Project Plan
    Call CheckForValidLocation
    If ValidLocationChecker = 1 Then
        Call ResetAtEnd
        MsgBox "You are attempting to delete lines outside of the Project Plan. Please try again."
        Exit Sub
    End If
    
    Cells(ActiveCell.Row, 3).Select
    
    'Are you in the Phase Line? If so, move one cell down
    If Left(ActiveCell.Offset(0, -1).Value, 6) = "Phase:" Then
        ActiveCell.Offset(1, 0).Select
    End If
        
    If Left(ActiveCell.Value, 4) = "Task" Then
        ActiveWorkbook.Names.Add Name:="DELETELINESTASK", RefersToR1C1:=Selection
        GoTo ExtraTaskLinesDelete
    End If
    Cells(ActiveCell.Row, 3).Select
    
    'You aren't in the Task Line, so find the Task line by jumping up.
    Selection.End(xlUp).Select
    If Left(ActiveCell.Value, 4) = "Task" Then
        ActiveWorkbook.Names.Add Name:="DELETELINESTASK", RefersToR1C1:=Selection
        GoTo ExtraTaskLinesDelete
    End If
    
    'Are you in the Task Line? If so, OK.
    If Left(ActiveCell.Value, 4) <> "Task" Then
        Call DeleteExtraLinesErrors
        Exit Sub
    Else
        ActiveWorkbook.Names.Add Name:="DELETELINESTASK", RefersToR1C1:=Selection
    GoTo ExtraTaskLinesDelete
    End If
        
ExtraTaskLinesDelete:
    ' If your Task Line doesn't have a Task Name. Return error
    If Left([DELETELINESTASK].Value, 4) = "Task" And Left([DELETELINESTASK].Offset(0, 2).Value, 4) = "" Then
        Call DeleteExtraLinesErrorNoTaskDescription
        Exit Sub
    End If
    ' If you're a Task on top of a Task, you have no extra lines to delete. Return Error.
    If Left([DELETELINESTASK].Value, 4) = "Task" And Left([DELETELINESTASK].Offset(1, 0).Value, 4) = "Task" Then
        Call DeleteExtraLinesErrors
        Exit Sub
    End If
   If [DELETELINESTASK].Offset(1, 2).Value <> "" And [DELETELINESTASK].Offset(0, 2).Value <> "" Then
       [DELETELINESTASK].Offset(0, 2).Select
        Selection.End(xlDown).Offset(1, 0).Select
        GoTo CountExtraBlankLines
    ElseIf [DELETELINESTASK].Offset(0, 2).Value <> "" And [DELETELINESTASK].Offset(1, 2).Value = "" And [DELETELINESTASK].Offset(2, 2).Value <> "" Then
        Call DeleteExtraLinesErrors
        Exit Sub
     ElseIf [DELETELINESTASK].Offset(0, 2).Value <> "" And [DELETELINESTASK].Offset(1, 2).Value = "" And [DELETELINESTASK].Offset(2, 2).Value = "" Then
       [DELETELINESTASK].Offset(1, 0).Select
        GoTo CountExtraBlankLines
    Else
        Call DeleteExtraLinesErrors
        Exit Sub
    End If
    
CountExtraBlankLines:
    Cells(ActiveCell.Row, 3).Select
    If Left(ActiveCell.Value, 4) = "Task" And Left(ActiveCell.Offset(1, 0).Value, 4) = "Task" Then
        Call DeleteExtraLinesErrors
        Exit Sub
    ElseIf Left(ActiveCell.Value, 4) = "Task" Or Left(ActiveCell.Offset(1, 0).Value, 4) = "Task" Or Left(ActiveCell.Offset(2, 0).Value, 4) = "Task" Then
        Call DeleteExtraLinesErrors
        Exit Sub
    Else
    ActiveWorkbook.Names.Add Name:="DELETEEXTRALINESSTART", RefersToR1C1:=Selection
    Selection.End(xlDown).Offset(-2, 0).Select
    ActiveWorkbook.Names.Add Name:="DELETEEXTRALINESEND", RefersToR1C1:=Selection
    End If
    
HighlightExtraLines:
    Range([DELETEEXTRALINESSTART], [DELETEEXTRALINESEND]).Select
    Range(Selection.Offset(0, -1), Selection.Offset(0, -1)).Select
    Range(Selection, Selection.Offset(0, 10)).Select

Application.ScreenUpdating = True
 DeleteExtraLines.Show

End Sub

Sub DeleteExtraLinesErrors()
On Error Resume Next
[DELETELINESTASK].Select
ActiveWorkbook.Names("DELETELINESTASK").Delete

'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
Call ResetAtEnd
MsgBox "Unable to Find Extra Blank Lines to Delete in the Current Project Task. There should be one blank line separating each Project Task. Make sure that the first cell in Column C of the Task you want to delete extra lines from begins with 'Task'."

End Sub
Sub DeleteExtraLinesErrorNoTaskDescription()
On Error Resume Next
[DELETELINESTASK].Offset(0, 2).Select
ActiveWorkbook.Names("DELETELINESTASK").Delete

'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
Call ResetAtEnd
MsgBox "This Task does not have a Task Name in Column E. Before the Extra Lines can be deleted, you need to populate this cell."

End Sub

Sub DeleteExtraTaskLinesFinish()
    Range([DELETEEXTRALINESSTART], [DELETEEXTRALINESEND]).Select
    Selection.EntireRow.Delete
    [DELETELINESTASK].Select
    ActiveWorkbook.Names("DELETELINESTASK").Delete
   
    'This becomes the new "Go back here" point when deletion has finished.
    ActiveWorkbook.Names("GOBACKHERE").Delete
    ActiveWorkbook.Names.Add Name:="GOBACKHERE", RefersToR1C1:=Selection
    
    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
End Sub

Sub DeleteExtraTaskLinesCancel()
    ActiveWorkbook.Names("DELETELINESTASK").Delete
    ActiveWorkbook.Names("DELETEEXTRALINESSTART").Delete
    ActiveWorkbook.Names("DELETEEXTRALINESEND").Delete

    'Always run this at end when finished doing anything to 1) Reset to where you started 2) Reset PhaseTop and TaskTop to their default values
    Call ResetAtEnd
    
End Sub

Sub HeadersView()

    If [Header].EntireRow.Hidden = False Then
        [Header].EntireRow.Hidden = True
        ActiveSheet.HeadersView.Caption = "Show Headers"
     ElseIf [Header].EntireRow.Hidden = True Then
        [Header].EntireRow.Hidden = False
        [Header].RowHeight = 24.5
        ActiveSheet.HeadersView.Caption = "Hide Headers"
    End If
End Sub
Sub TotalsView()

    If [TotalsHeader].EntireRow.Hidden = False Then
        [TotalsHeader].EntireRow.Hidden = True
        ActiveSheet.TotalsView.Caption = "Show Totals"
    ElseIf [TotalsHeader].EntireRow.Hidden = True Then
        [TotalsHeader].EntireRow.Hidden = False
        [TotalsHeader].RowHeight = 14.25
        ActiveSheet.TotalsView.Caption = "Hide Totals"
    End If
End Sub

Sub GeneralInfoView()

    If [GeneralInfo].EntireRow.Hidden = False Then
    [GeneralInfo].EntireRow.Hidden = True
        ActiveSheet.ClientInfoView.Caption = "Show Client"
    ElseIf [GeneralInfo].EntireRow.Hidden = True Then
        ActiveSheet.ClientInfoView.Caption = "Hide Client"
    [GeneralInfo].EntireRow.Hidden = False
    End If

End Sub

Sub Picture146_Click()
Application.ScreenUpdating = False
Call COMPLETEFormatProjectPlan
Application.ScreenUpdating = True
End Sub
Sub Picture2_Click()
    Application.Goto Reference:="PHASETOP"
End Sub
Sub AddLine()
        Application.Goto Reference:="NEWTASKLINE"
        Application.CutCopyMode = False
        Selection.Copy
        Application.Goto Reference:="INSERTLINESHERE"
        Selection.Insert Shift:=xlDown
        i = i + 1
        Range([TASKTOP], [INSERTLINESHERE].Offset(1, 1)).Select
        ActiveWorkbook.Names("INSERTLINESHERE").Delete
End Sub
Sub AddExtraLines()
'This Macro was added to make sure there is at least one blank line between each Task when consolidating the plan. It's a reverse of the ConsolidateProjectPlan macro.
Dim i As Long
Dim rng As Range

Application.Goto Reference:="TASKS"
Set rng = Selection

With Application
.Calculation = xlCalculationManual

For i = rng.Rows.Count To 1 Step -1
    'ActiveRow is Project Total Row and Row Before is Task with Task Name - Need to add lines
    If rng.Cells(i).Offset(0, 2).Value = "Project Total" And rng.Cells(i).Offset(-1, 2).Value <> "" Then
        ActiveWorkbook.Names.Add Name:="INSERTLINESHERE", RefersToR1C1:=rng.Cells(i).Offset(0, -1)
        Call AddLine
     'ActiveRow is Phase and Row Before is Task Description - Need to add lines
    ElseIf rng.Cells(i).Offset(0, -1).Value = "Phase:" And rng.Cells(i).Offset(-1, 2).Value <> "" Then
        ActiveWorkbook.Names.Add Name:="INSERTLINESHERE", RefersToR1C1:=rng.Cells(i).Offset(0, -1)
        Call AddLine
     'ActiveRow is Task and Row Before isn't a Phase and has Task Description - Need to add lines
    ElseIf rng.Cells(i).Value = "Task" And rng.Cells(i).Offset(-1, -1).Value <> "Phase:" And rng.Cells(i).Offset(-1, 2).Value <> "" Then
        ActiveWorkbook.Names.Add Name:="INSERTLINESHERE", RefersToR1C1:=rng.Cells(i).Offset(0, -1)
        Call AddLine
     'ActiveRow is Task and Row Before is Task - Need to add lines
    ElseIf rng.Cells(i).Value = "Task" And rng.Cells(i).Offset(-1, 0).Value = "Task" And rng.Cells(i).Offset(-1, 2).Value <> "" Then
        ActiveWorkbook.Names.Add Name:="INSERTLINESHERE", RefersToR1C1:=rng.Cells(i).Offset(0, -1)
        Call AddLine
   End If
    
NextI:

   Next
   
.Calculation = xlCalculationAutomatic
End With

[PHASETOP].Select
End Sub

Sub ConsolidateProjectPlan()
Dim i As Long
Dim rng As Range

'This adds an extra line between every task, if necessary, before consolidating the plan. Incorporating add extras and deleting extras into a single macro was a nightmare.
Call AddExtraLines

Application.Goto Reference:="TASKS"
Set rng = Selection

With Application
.Calculation = xlCalculationManual

For i = rng.Rows.Count To 1 Step -1
    If rng.Cells(i).Offset(0, 2).Value = "Project Total" Then
        GoTo NextI
    'You're in the Project Management Line
    ElseIf rng.Cells(i).Offset(0, -1).Value = "Phase:" And rng.Cells(i).Offset(0, 1).Value = "Project Management" Then
        GoTo NextI
    'You're in a Milestone
    ElseIf rng.Cells(i).Offset(0, -1).Value = "Milestone:" Or rng.Cells(i).Offset(0, -1).Value = "Milestone" Then
        GoTo NextI
    'Don't Delete the first Task under the Project Management Phase - This is just an emergency condition to prevent this from happening
    ElseIf rng.Cells(i).Offset(-1, -1).Value = "Phase:" And rng.Cells(i).Offset(-1, 1).Value = "Project Management" Then
         GoTo NextI
    'ActiveRow Blank and Row Before is Blank
    ElseIf rng.Cells(i).Offset(0, -1).Value <> "Phase:" And rng.Cells(i).Offset(0, 2).Value = "" And rng.Cells(i).Offset(-1, 2).Value = "" Then
        rng.Cells(i).EntireRow.Delete
    'ActiveRow is Phase and Row Before is Blank And Row After is No Task
    ElseIf rng.Cells(i).Offset(0, -1).Value = "Phase:" And rng.Cells(i).Offset(-1, 2).Value = "" And rng.Cells(i).Offset(1, 0).Value <> "Task" Then
        rng.Cells(i).EntireRow.Delete
    'ActiveRow Blank and Row Before is Non-Blank Description Row and Row After is non-Blank Description Row.
    ElseIf rng.Cells(i).Offset(0, -1).Value <> "Phase:" And rng.Cells(i).Offset(0, 2).Value = "" And rng.Cells(i).Offset(-1, 2).Value <> "" And rng.Cells(i).Offset(1, 2).Value <> "" And rng.Cells(i).Offset(1, 0).Value = "" And rng.Cells(i).Offset(1, 2).Value <> "Project Total" Then
        rng.Cells(i).EntireRow.Delete
    'ActiveRow is a Phase Row with no task in front
    ElseIf rng.Cells(i).Offset(0, -1).Value = "Phase:" And rng.Cells(i).Offset(1, 0).Value <> "Task" Then
        rng.Cells(i).EntireRow.Delete
    'ActiveRow is a Blank Task Row
    ElseIf rng.Cells(i).Value = "Task" And rng.Cells(i).Offset(0, 2).Value = "" Then
        rng.Cells(i).EntireRow.Delete

   End If
    
NextI:

   Next
   
.Calculation = xlCalculationAutomatic
End With

[PHASETOP].Select
End Sub



Attribute VB_Name = "Milestones"
Option Explicit
Public MilestoneCount As Long
Public MilestoneChecker As Integer
Public MilestoneFirstAdd As Integer

Sub AddMilestone()
    If MilestoneFirstAdd = 0 Then
        MilestoneFirstAdd = 1
        AddingMilestones.Show
        Exit Sub
    End If
    
    Call CheckMilestoneLocation
    If MilestoneChecker = 1 Then
        'MsgBox MilestoneChecker
        Exit Sub
    Else
    End If
    Call FindMilestoneRange
End Sub
Sub DeleteMilestone()
    Dim RangeName As Name
    Dim RangeVersion As String
    Dim ThisCell As String
    Dim ws As Worksheet
    Dim myName As Name
    
   Cells(ActiveCell.Row, 2).Select
   On Error Resume Next
    ThisCell = ActiveCell.Name.Name
     If Left(ActiveCell.Value, 9) <> "Milestone" Or Len(ThisCell) = 0 Then
        MsgBox "Select the first list of the Milestone you wish to delete. The value of the milestone start cell in Column C must start with 'Milestone'."
        Exit Sub
     Else
        
    End If

    RangeVersion = Replace(ThisCell, "MSTONETOP", "")
    'Delete Bottom Mileston Row
    Application.Goto Reference:="MSTONEBOTTOM" & RangeVersion
    Selection.EntireRow.Delete
    
    'Delete Top Milestone Row
    Application.Goto Reference:="MSTONETOP" & RangeVersion
    Selection.EntireRow.Delete
        
    'Delete Leftover Ranges
    ActiveWorkbook.Names("MSTONECOSTTOP" & RangeVersion).Delete
    ActiveWorkbook.Names("MSTONECOSTBOTTOM" & RangeVersion).Delete
    ActiveWorkbook.Names("MSTONEHRSTOP" & RangeVersion).Delete
    ActiveWorkbook.Names("MSTONEHRSBOTTOM" & RangeVersion).Delete
   
End Sub

Sub ClearMilestoneRanges()
Dim ws As Worksheet
Dim myName As Name
On Error Resume Next

For Each myName In ThisWorkbook.Names

If myName.NameLocal Like "*" & "MSTONE" & "*" Then myName.Delete

Next
End Sub

Sub FindMilestoneRange()
    Dim cell As Range, MergeVal$
    Dim TR&, BR&, LC%, RC%
    With Selection
        TR = .Row
        BR = .Rows.Count + .Row - 1
        LC = .Column
        RC = .Columns.Count + .Column - 1
    End With
    
    Call IncreaseMilestoneCount
'TOP MILESTONE
    Cells.Item(TR, LC).Select
    Cells(ActiveCell.Row, 2).Select
    
    'Make sure InsertRow Here is not saved elsewhere
    ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection

    'Copy New Milestone Top and Insert at InsertRowHere
    Application.Goto Reference:="NEWMILESTONESTART"
    Selection.Copy
    
    Application.Goto Reference:="INSERTROWHERE"
    Selection.Insert Shift:=xlDown
    ActiveWorkbook.Names("INSERTROWHERE").Delete
    ActiveWorkbook.Names.Add Name:="MSTONETOP" & MilestoneCount, RefersToR1C1:=Selection

'BOTTOM MILESTONE
    Cells.Item(BR, RC).Select
    Cells(ActiveCell.Row, 2).Offset(1, 0).Select ' Need to push this off two instead of one because everything is down 1 when top is entered.
    
    'Make sure InsertRow Here is not saved elsewhere
    ActiveWorkbook.Names.Add Name:="INSERTROWHERE", RefersToR1C1:=Selection

    'Copy New Milestone End and Insert at InsertRowHere
    Application.Goto Reference:="NEWMILESTONEEND"
    Selection.Copy
    
    Application.Goto Reference:="INSERTROWHERE"
    Selection.Insert Shift:=xlDown
    ActiveWorkbook.Names("INSERTROWHERE").Delete
    ActiveWorkbook.Names.Add Name:="MSTONEBOTTOM" & MilestoneCount, RefersToR1C1:=Selection
    
    Call MilestoneRatesAndCosts

End Sub

Sub MilestoneRatesAndCosts()
    'Find top of Mstone Range and Make Hours Top
    Application.Goto Reference:="MSTONETOP" & MilestoneCount
    ActiveCell.Offset(0, 4).Select
    ActiveWorkbook.Names.Add Name:="MSTONEHRSTOP" & MilestoneCount, RefersToR1C1:=Selection
    
    'Find top of Mstone Range and Make Cost Top
    Application.Goto Reference:="MSTONETOP" & MilestoneCount
    ActiveCell.Offset(0, 7).Select
    ActiveWorkbook.Names.Add Name:="MSTONECOSTTOP" & MilestoneCount, RefersToR1C1:=Selection
    
    'Find top of Mstone Range and Make Hours End
    Application.Goto Reference:="MSTONEBOTTOM" & MilestoneCount
    ActiveCell.Offset(0, 4).Select
    ActiveWorkbook.Names.Add Name:="MSTONEHRSBOTTOM" & MilestoneCount, RefersToR1C1:=Selection
    
    'Find top of Mstone Range and Make Cost End
    Application.Goto Reference:="MSTONEBOTTOM" & MilestoneCount
    ActiveCell.Offset(0, 7).Select
    ActiveWorkbook.Names.Add Name:="MSTONECOSTBOTTOM" & MilestoneCount, RefersToR1C1:=Selection
    
    'Assign Value to Total Milestone Hours
    Application.Goto Reference:="MSTONEBOTTOM" & MilestoneCount
    ActiveCell.Offset(0, 5).Select
    ActiveCell.FormulaR1C1 = "=SUM(MSTONEHRSTOP" & MilestoneCount & ":MSTONEHRSBOTTOM" & MilestoneCount & ")"
    
    'Assign Value to Total Milestone Cost
    Application.Goto Reference:="MSTONEBOTTOM" & MilestoneCount
    ActiveCell.Offset(0, 6).Select
    ActiveCell.FormulaR1C1 = "=SUM(MSTONECOSTTOP" & MilestoneCount & ":MSTONECOSTBOTTOM" & MilestoneCount & ")"
    
    Application.Goto Reference:="MSTONETOP" & MilestoneCount
    ActiveCell.Offset(0, 2).Select

End Sub

Sub IncreaseMilestoneCount()
    MilestoneCount = [MILESTONERUNNINGCOUNT].Value
    MilestoneCount = MilestoneCount + 1
    [MILESTONERUNNINGCOUNT].Value = MilestoneCount
    'MsgBox MilestoneCount
End Sub

Sub DeleteAllMilestoneRanges()
Dim ws As Worksheet
Dim myName As Name
On Error Resume Next

For Each myName In ThisWorkbook.Names

If myName.NameLocal Like "*" & "MSTONE" & "*" Then myName.Delete

Next

End Sub

Sub CheckMilestoneLocation()
    Dim cell As Range, MergeVal$
    Dim TR&, BR&, LC%, RC%
    Dim phasetoprow As Integer
    Dim phasebottomrow As Integer
    Dim milestonetoprow As Integer
    Dim milestonebottomrow As Integer
    
    With Selection
        TR = .Row
        BR = .Rows.Count + .Row - 1
    End With
    
    'This is an error checker to make sure that you're not putting a Milestone outside of the Project Plan Area
    phasetoprow = [PHASETOP].Row
    phasebottomrow = [PHASEBOTTOM].Row
    milestonetoprow = TR
    milestonebottomrow = BR
    MilestoneChecker = 0

        'If the Phase Bottom row is the same as the Second Phase Start Row, don't delete it. This is how we find if you are trying to delete the one and only Phase
        If phasebottomrow < milestonebottomrow Then
            MilestoneChecker = 1
            MsgBox "You are attempting to add or delete a milestone outside of the acceptable range."
        'If the activeCell row is equal to the PhaseTop row And ActiveCell is less than the SecondPhaseStartRow, it must be somewhere in between. Therefore, it's the first phase - Don't Delete
        ElseIf phasetoprow > milestonetoprow Then
            MilestoneChecker = 1
            MsgBox "You are attempting to add or delete a milestone outside of the acceptable range."
        End If
    
End Sub



Attribute VB_Name = "Navigation"
Sub Move()
    ActiveWorkbook.Names.Add Name:="GOBACKHERE", RefersToR1C1:=Selection
    If ActiveSheet.NavBox1.Value = "Jump To..." Then
        Exit Sub
    ElseIf ActiveSheet.NavBox1.Value = "Home" Then
        Call ResetBox
        Application.Goto Reference:="TEMPLATETYPE"
    ElseIf ActiveSheet.NavBox1.Value = "Product" Then
        Call ResetBox
        Sheets("Product").Select
    ElseIf ActiveSheet.NavBox1.Value = "Quosal Export" Then
        Call ResetBox
        Sheets("Quosal Export").Select
    ElseIf ActiveSheet.NavBox1.Value = "Review Checklist" Then
        Call ResetBox
        Call GetData
    ElseIf ActiveSheet.NavBox1.Value = "Resources" Then
        Call ResetBox
        Application.Goto Reference:="RATESCHEDULE"
        Application.Goto Reference:="RATESCHEDULEHOME"
    ElseIf ActiveSheet.NavBox1.Value = "Assumptions" Then
        Call ResetBox
        Application.Goto Reference:="ASSUMPTIONS"
        Application.Goto Reference:="ASSUMPTIONSHOME"
    ElseIf ActiveSheet.NavBox1.Value = "Revisions" Then
        Call ResetBox
        Call Layout.GoToRevisions
    ElseIf ActiveSheet.NavBox1.Value = "Notes to Reviewer" Then
        Call ResetBox
        Application.Goto Reference:="REVIEWER"
    Else
        [GOBACKHERE].Select
        ActiveWorkbook.Names("GOBACKHERE").Delete
    End If
End Sub

Sub ResetBox()
On Error GoTo TheEnd
ActiveSheet.NavBox1.Clear
With ActiveSheet.NavBox1
   .AddItem "Jump To..."
   .AddItem "Home"
   .AddItem "Quosal Export"
   .AddItem "Product"
   .AddItem "Review Checklist"
   .AddItem "Resources"
   .AddItem "Assumptions"
   .AddItem "Revisions"
   .AddItem "Notes to Reviewer"
End With

ActiveSheet.NavBox1.Value = "Jump To..."
ActiveWorkbook.Names("GOBACKHERE").Delete

TheEnd:
Exit Sub

End Sub
Sub DDD()
        ActiveWorkbook.Names("GOBACKHERE").Delete
ActiveSheet.NavBox1.Value = "Jump To..."

End Sub
Sub DSFD()
    If ActiveSheet.Name = "Form" Then
        ActiveSheet.NavBox1.Value = "Jump To..."
    ElseIf ActiveSheet.Name = "Task Components" Then
        ActiveSheet.NavBox1.Value = "Task Components"
        End If
End Sub
Sub SetAllNavBoxesOnOpen()
On Error GoTo ErrHandler

Dim Sht As Worksheet
Dim sCurrentSheet As String
sCurrentSheet = ActiveSheet.Name
Application.ScreenUpdating = False

    For Each Sht In Application.Worksheets
        Sht.Activate
        Call Navigation.ResetBox
    Next Sht

Worksheets(sCurrentSheet).Activate
Application.ScreenUpdating = True

ErrHandler:

End Sub
Attribute VB_Name = "OnSaveRestrictions"
Public PublicVar1
Sub CancelFix()
    PublicVar1 = 0
    IncompleteTaskOnSave.Hide
End Sub
Sub YesSave()
    PublicVar1 = 1
    IncompleteTaskOnSave.Hide
End Sub
Sub ClearPublicVar1()
  PublicVar1 = 0
End Sub
Attribute VB_Name = "ProjectAssumptions"
Attribute VB_Base = "0{33F418AA-4943-46D3-85D5-02BF1A6153B9}{46FFA5B6-53D8-442F-8534-07A69958F3FA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub IncludeProjectAssumptions_Click()
ProjectAssumptions.Hide
Call Quosal.FormatProjectAssumptions
End Sub

Private Sub NoProjectAssumptions_Click()
ProjectAssumptions.Hide
End Sub
Attribute VB_Name = "Qs"
Attribute VB_Base = "0{75DB117A-55FC-405B-B55A-76A21C4EC547}{D01ABC60-7785-4BCC-A310-59E81EA07578}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub Finished_Click()
If OptionButton2N.Value = True Then
    With HQuestion2
        ' Set the text of the label.
        '.Caption = "This is Label Example 1"
        ' Automatically size the label control.
        .AutoSize = True
        .WordWrap = False
        ' Set the font used by the Label control.
        .Font.Name = "Arial"
        .Font.Size = 12
        .Font.Bold = True
        ' Set the font color to blue.
        .ForeColor = RGB(0, 0, 255)
    End With
    MsgBox = "In the text field below, please explain why the answer to this question is No."
End If

End Sub


Private Sub ResetChecklist_Click()
    ResetChecklistConfirm.Show
End Sub

Private Sub ExitWithoutSave_Click()
    Qs.Hide
End Sub

Private Sub SaveAndClose_Click()
    Call ReviewChecklist.SendData
    Qs.Hide
End Sub

Attribute VB_Name = "Quosal"
Public errornum As Integer
Sub GoToRateSchedule()
Sheets("Rate Schedule").Select
End Sub
Sub GoToForm()
Sheets("Form").Select
End Sub
Sub ResetQuosal2()
On Error Resume Next
ActiveWorkbook.Names("QUOSAL2").Delete
[PROJTOTALCOST].Offset(1, 0).Select
ActiveWorkbook.Names.Add Name:="QUOSAL2", RefersToR1C1:=Selection
End Sub

'Sub CreateQuosalRanges()
'By default, these will be left as a part of the template. No need to create Quosal1 and Quosal2 every time.
'Sheets("Form").Select
'Cells.Find(What:="Project Outline", After:=ActiveCell, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Select
'ActiveCell.Offset(0, -2).Select
'ActiveWorkbook.Names.Add Name:="QUOSAL1", RefersToR1C1:=Selection
'Cells.Find(What:="Project Total", After:=ActiveCell, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Select
'ActiveCell.Offset(-1, 4).Select
'ActiveWorkbook.Names.Add Name:="QUOSAL2", RefersToR1C1:=Selection
'End Sub

Sub ExportDataToQuosalTab()
Sheets("Quosal Export").Select
Call GoToA2
Rows("4:1000").Delete
Range("A4").Select
Call GoToForm
Range("A3").Select
Range("A3").Value = "x.x"
Range("A3").Select
Cells.Replace What:="x.x", Replacement:="", LookAt:=xlWhole, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
Call ResetQuosal2
Range([QUOSAL1], [QUOSAL2]).Select
Selection.Copy
Sheets("Quosal Export").Select
Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
ActiveWorkbook.Names.Add Name:="QUOSALEXPORT", RefersToR1C1:=Selection

End Sub

Sub COMPLETEFormatProjectPlan()

Application.ScreenUpdating = False

'Call ResetProjectFormNamedRanges
Call DeleteNamedRanges
Application.ScreenUpdating = False
Call DeleteMarker
Application.ScreenUpdating = False
'Make Sure Every Phase has a Phase Number and Rate Code
Call ExportErrorCheck
Application.ScreenUpdating = False
If errornum > 0 Then
    errornum = 0
    GoTo FailedErrorCheck
End If
Call ExportDataToQuosalTab
Call RemoveMilestonesForExport
Application.ScreenUpdating = False
'Find Last Cell Used in the Phase Description Column
Call FindLastRow
Application.ScreenUpdating = False
Call MergePhaseNumber
Application.ScreenUpdating = False
Call CreateTaskDescriptions
Application.ScreenUpdating = False
Call FormatOutput
Application.ScreenUpdating = False
ProjectAssumptions.Show
Call Transition
FailedErrorCheck:
Application.ScreenUpdating = True

End Sub

Sub RestoreScreenUpdating()
Application.ScreenUpdating = True
End Sub
Sub RemoveMilestonesForExport()
Dim i As Long
Dim rng As Range

Range("A5").Select
ActiveWorkbook.Names.Add Name:="MILESTONEFIRST", RefersToR1C1:=Selection
ActiveCell.Offset(5000, 0).Select
Selection.End(xlUp).Select
ActiveWorkbook.Names.Add Name:="MILESTONELAST", RefersToR1C1:=Selection
Range([MILESTONELAST], [MILESTONEFIRST]).Select


Set rng = Selection

With Application
.Calculation = xlCalculationManual

For i = rng.Rows.Count To 1 Step -1
    If rng.Cells(i).Value = "Milestone:" Or rng.Cells(i).Value = "Milestone" Then
        rng.Cells(i).EntireRow.Delete
    End If
    
NextI:
   Next
   .Calculation = xlCalculationAutomatic
End With

    ActiveWorkbook.Names("MILESTONEFIRST").Delete
    ActiveWorkbook.Names("MILESTONELAST").Delete

End Sub
Sub FindLastRow()
Application.ScreenUpdating = False
Cells.Find(What:="Phase Description", After:=ActiveCell, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Select

'Copy Description Section - Later, all but the first row of each Task will be removed to create a ShortDescription Column. The rest will be erased.
Selection.EntireColumn.Select
    Application.CutCopyMode = False
    Selection.Copy
    ActiveCell.Offset(5000, 0).Select
    Selection.End(xlUp).Select
    ActiveCell.Offset(1, 0).Select
'Named Ranges for Bottom of Quosal Export Table
'Ranges all in relation to Column D
    ActiveWorkbook.Names.Add Name:="LastTaskDescriptionCell", RefersToR1C1:=Selection
    ActiveWorkbook.Names.Add Name:="LastTaskMarker", RefersToR1C1:=ActiveCell.Offset(0, -1)
    ActiveWorkbook.Names.Add Name:="LastTaskCell", RefersToR1C1:=ActiveCell.Offset(0, -2)
    ActiveWorkbook.Names.Add Name:="LastPhaseCell", RefersToR1C1:=ActiveCell.Offset(0, -3)
    ActiveCell.Offset(0, -1).Select

End Sub

Sub MergePhaseNumber()
Dim Phase As Range
Dim Task As Range
Dim taskdetail As Range

Application.ScreenUpdating = False
On Error Resume Next
'Make Sure entire first column is just Phase without spaces on either side
Range("A2").Select
Selection.EntireColumn.Select
Selection.Replace What:="*Phase*", Replacement:="Phase", LookAt:=xlWhole, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
Selection.Find(What:="Phase", After:=ActiveCell, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Select
ActiveWorkbook.Names.Add Name:="FirstPhaseCell", RefersToR1C1:=Selection

'Make Sure entire second column is just Tasks without spaces on either side
Range("B2").Select
Selection.EntireColumn.Select
Selection.Replace What:="*Task*", Replacement:="Task", LookAt:=xlWhole, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
Selection.Find(What:="Task", After:=ActiveCell, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Select

[FirstPhaseCell].Select
ActiveWorkbook.Names.Add Name:="FirstTaskDescriptionCell", RefersToR1C1:=ActiveCell.Offset(0, 3)
ActiveWorkbook.Names.Add Name:="FirstTaskCell", RefersToR1C1:=ActiveCell.Offset(0, 1)
    
'Create First Cell Ranges
Application.Goto Reference:="LastTaskDescriptionCell"
ActiveCell.Offset(1, 0).Select
'Delete Extra Rows at bottom of Project Plan
Call DeleteExtraRows

'Convert Phase Numbers into "Phase"&Number while deleting cells in the CellTaskHeader Column that is not the Task Title.
Range([FirstPhaseCell], [LastPhaseCell]).Select
  For Each Phase In Selection
       If Phase.Value = "Phase" And Phase.Offset(0, 1).Value <> "" And Phase.Offset(0, 2).Value <> "" Then
        Phase.Value = Phase.Value & " " & Format(Phase.Offset(0, 1).Value, "#####.0") & " - " & Phase.Offset(0, 2).Value
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
       ElseIf Phase.Offset(0, 1).Value = "Task" And Phase.Offset(0, 2).Value <> "" Then
        Phase.Offset(0, 1).Value = Phase.Offset(0, 1).Value & " " & Format(Phase.Offset(0, 2).Value, "#####.0") & " - " & Phase.Offset(0, 3).Value
        Phase.Offset(0, 2).Value = "New Task"
        Phase.Offset(0, 3).Value = ""
       ElseIf Phase.Value = "" Then
        Phase.Value = ""
        End If
    Next Phase
    
'FORMAT TASK DESCRIPTION ITEM - Add a " - " to Every Task Description Item
Range([FirstTaskDescriptionCell], [LastTaskDescriptionCell]).Select
  For Each taskdetail In Selection
        If taskdetail.Value <> "" Then
        taskdetail.Value = " - " & taskdetail.Value
        Else
        taskdetail.Value = taskdetail.Value
        End If
  Next taskdetail
    
'Shift entire Phase Description column up buy one. It needs to be moved up even with the Task Row.
[FirstTaskDescriptionCell].Select
Selection.Delete Shift:=xlUp

'The Task and Task Description level are still one row below the Phase level. This makes them even so the Phase, Task, and Task Description are all in the same row
Range([FirstTaskCell], [FirstTaskCell].Offset(0, 8)).Select
Selection.Delete Shift:=xlUp

'The "FirstTaskCell" was deleted in the previous function. This restores it.
ActiveCell.Select
ActiveWorkbook.Names.Add Name:="FirstTaskCell", RefersToR1C1:=Selection
ActiveCell.Offset(0, 1).Select

'This creates the FirstMarkerCell which will be used in the CreateTaskDescription loop.
ActiveWorkbook.Names.Add Name:="FirstMarkerCell", RefersToR1C1:=Selection
'MARK is used to remember where in the loop you were so you don't start over every time. By default, it starts at the same spot as 'FirstMarkerCell. However, it changes every loop after.
ActiveWorkbook.Names.Add Name:="MARK", RefersToR1C1:=Selection

End Sub

Sub SetQuantityTo1()
Dim i As Long
Dim quantity As Range
'Application.ScreenUpdating = False

'When Finished with CreateTaskDescriptions loop, you need to delete all remaining blank rows
Range([FirstTaskCell], [LastTaskCell]).Select
With Application
.Calculation = xlCalculationManual
    For i = Selection.Rows.Count - 1 To 1 Step -1
        If WorksheetFunction.CountA(Selection.Rows(i)) = 0 Then
            Selection.Rows(i).EntireRow.Delete
        End If
    Next i

.Calculation = xlCalculationAutomatic
End With

End Sub

Sub DeleteNamedRanges()
On Error Resume Next
    ActiveWorkbook.Names("LastPlanCell").Delete
    ActiveWorkbook.Names("FirstPlanCell").Delete
    ActiveWorkbook.Names("LastTaskCell").Delete
    ActiveWorkbook.Names("FirstTaskCell").Delete
    ActiveWorkbook.Names("LastPhaseCell").Delete
    ActiveWorkbook.Names("FirstPhaseCell").Delete
    ActiveWorkbook.Names("FirstTaskDescriptionCell").Delete
    ActiveWorkbook.Names("LastTaskDescriptionCell").Delete
    ActiveWorkbook.Names("FirstMarkerCell").Delete
    ActiveWorkbook.Names("Mark").Delete
    ActiveWorkbook.Names("QuosalExport").Delete
    ActiveWorkbook.Names("EXPORTASSUMPTIONS").Delete
    ActiveWorkbook.Names("FINALASSUMPTIONS").Delete
End Sub

Sub ResetMark()
On Error Resume Next
Application.Goto Reference:="FirstMarkerCell"
  ActiveWorkbook.Names.Add Name:="MARK", RefersToR1C1:=Selection
End Sub

Sub DeleteExtraRows()
    Range(Selection, Selection.End(xlDown)).Select
        Selection.EntireRow.Delete
End Sub
Sub DeleteHome()
 On Error Resume Next
ActiveWorkbook.Names("HOME").Delete
End Sub
Sub DeleteMarker()
 On Error Resume Next
ActiveWorkbook.Names("MARK").Delete
End Sub
Sub Tur()
Application.ScreenUpdating = True
End Sub
Sub CreateTaskDescriptions()

Dim marker As Range
'Application.ScreenUpdating = False
Range([MARK], [LastTaskMarker]).Select
    Call DeleteMarker
  For Each marker In Selection
       If marker.Value = "New Task" Then
       marker.Value = ""
       ActiveWorkbook.Names.Add Name:="MARK", RefersToR1C1:=marker
       marker.Offset(0, 1).Select
       ActiveWorkbook.Names.Add Name:="HOME", RefersToR1C1:=Selection
          Call CombineTaskDescriptionCells
       End If
    Next marker

Call ResetMark
'This will delete all rows with a blank value in the FirstTask-LastTask column
Call SetQuantityTo1
ActiveCell.Select

'Find the last used row to insert the Assumptions.
RetryAssumptions:
If ActiveCell.Value <> "" Then
    ActiveCell.Offset(1, 0).Select
    GoTo RetryAssumptions
Else
    ActiveWorkbook.Names.Add Name:="EXPORTASSUMPTIONS", RefersToR1C1:=Selection
End If
    Rows("4:1000").Select
    Selection.RowHeight = 13.5
    'Range("A4").Select

'Application.CutCopyMode = False
End Sub

Sub CombineTaskDescriptionCells()
Dim firstCell As Range
Dim lastCell As Range
Dim offsetCell As Range
Dim i As Integer
'Application.ScreenUpdating = False
Application.Goto Reference:="HOME"

'No Task Description to be Added - Go back to Creating Task Descriptions loop
If ActiveCell.Value = "" Then
ActiveCell.Value = ActiveCell.Value
Application.Goto Reference:="MARK"
Call CreateTaskDescriptions
End If

'Only one Task Description Loop - Go back to Creating Task Descriptions loop
If ActiveCell.Value <> "" And ActiveCell.Offset(1, 0).Value = "" Then
ActiveCell.Value = ActiveCell.Value
Application.Goto Reference:="MARK"
Call CreateTaskDescriptions
End If

'More than one Task Description - Need to Combine.
Range(Selection, Selection.End(xlDown)).Select

'Delete Blank lines
Set firstCell = Selection(1)
Set lastCell = Selection(Selection.Count)
Set offsetCell = Selection(1)

If lastCell > 1 Then
    For i = 2 To Selection.Count
    firstCell = firstCell & Chr(10) & Selection(i)
    Selection(i) = ""
    Next
    Else
    ActiveCell.Value = ""
End If

Call CreateTaskDescriptions
End Sub

Sub ApproveRateSchedule()
'Import Latest Rates prior to allowing user to edit rates
ActiveWorkbook.Names.Add Name:="IMPORTRATE", RefersToR1C1:=Selection
Call UpdateRate.ImportRateSchedule
Application.Goto Reference:="IMPORTRATE"
ActiveWorkbook.Names("IMPORTRATE").Delete
UpdateRate.Show
End Sub

Sub ProjectCosts()
UpdateRate.Show
End Sub
Sub FormatOutput()
[FirstTaskCell].Offset(0, 1).Select
Selection.EntireColumn.Delete
    Range("C4").Select
    If ActiveCell.Offset(1, 0).Value = "" And ActiveCell.Offset(2, 1).Value <> "" Then
    Selection.EntireRow.Delete
    Selection.EntireRow.Delete
    End If
    Range("B4").Select
    Selection.EntireRow.Insert , CopyOrigin:=xlFormatFromLeftOrAbove
    Range("A4").Select
    ActiveCell.FormulaR1C1 = "Product Category"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.FormulaR1C1 = "Product Sub Category"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.FormulaR1C1 = "Item Notes"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.FormulaR1C1 = "Qty"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.FormulaR1C1 = "Vendor Part #"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.Value = "Cost"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.Value = "Extended Cost"
    Columns("A:A").ColumnWidth = 35
    Columns("B:B").ColumnWidth = 35
    Columns("C:C").ColumnWidth = 35
    Columns("D:D").ColumnWidth = 7
    Columns("E:E").ColumnWidth = 11
    Columns("F:F").ColumnWidth = 10
    Columns("G:G").ColumnWidth = 10
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlTop
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    Range("A2").Select
    Range("A2").Value = "TYPE"
    ActiveCell.Offset(0, 1).FormulaR1C1 = [TEMPLATETYPE].Value
    Range("A3").Select
    Range("A3").Value = "PROJECT TOTAL"
    ActiveCell.Offset(0, 1).FormulaR1C1 = Format(Range("PROJTOTALCOST").Value, "Currency")
    Selection.End(xlDown).Select
 Range("A3").Select
Application.CutCopyMode = False

End Sub
Sub Transition()

Application.Goto Reference:="QUOSALEXPORT"
Selection.Copy
Application.CutCopyMode = False
ExportToQuosal.Show
ActiveWorkbook.Names("QUOSALEXPORT").Delete
End Sub
Sub GoToA2()
    Range("A2").Select
    Call NameWorksheet
    Call ProjCostLabel
    Call ProjHoursLabel
End Sub


Sub NameWorksheet()
On Error Resume Next
    ActiveSheet.Label1.Caption = ActiveSheet.Name

End Sub

Sub ProjCostLabel()
On Error Resume Next
ActiveSheet.EstProjectCost.Caption = Format(Range("PROJTOTALCOST").Value, "Currency")

End Sub

Sub ProjHoursLabel()
On Error Resume Next
ActiveSheet.EstTotalHours.Caption = Format(Range("PROJTOTALHOURS").Value, "Standard")

End Sub

Sub ExportErrorCheck()
Dim phasecheck As Range
Dim taskcheck As Range

Application.Goto Reference:="PHASES"
errornum = 0
For Each phasecheck In Selection
    If Left(phasecheck.Value, 6) = "Phase:" And phasecheck.Offset(0, 1).Value = "" Then
        MsgBox "Please Enter a Phase Number in the Selected Cell."
        phasecheck.Offset(0, 1).Select
        errornum = 1
        Exit Sub
        
    ElseIf Left(phasecheck.Value, 4) = "Phase:" And phasecheck.Offset(0, 2).Value = "" Then
        MsgBox "Please Enter a Phase Name in the Selected Cell."
        phasecheck.Offset(0, 2).Select
        errornum = 1
        Exit Sub
    End If
 Next phasecheck
 
Application.Goto Reference:="TASKS"
errornum = 0
For Each taskcheck In Selection
    If Left(taskcheck.Value, 4) = "Task" And taskcheck.Offset(0, 2).Value <> "" And taskcheck.Offset(0, 1).Value = "" Then
        taskcheck.Offset(0, 1).Select
        errornum = 1
        Application.ScreenUpdating = True
        MsgBox "Please Enter a Task Number in the Selected Cell."
        Exit Sub
        
    ElseIf Left(taskcheck.Value, 4) = "Task" And taskcheck.Offset(0, 2).Value = "" Then
        errornum = 1
        taskcheck.Offset(0, 2).Select
        Application.ScreenUpdating = True
        MsgBox "Please Enter a Task Name in the Selected Cell."
        Exit Sub
    
    ElseIf Left(taskcheck.Value, 4) = "Task" And taskcheck.Offset(0, 2).Value <> "" And taskcheck.Offset(0, 3).Value = "" Then
        errornum = 1
        taskcheck.Offset(0, 3).Select
        Application.ScreenUpdating = True
        MsgBox "Please Enter the Estimated Hours for Task " & taskcheck.Offset(0, 1).Value & " - " & taskcheck.Offset(0, 2).Value & "."
        Exit Sub

    ElseIf Left(taskcheck.Value, 4) = "Task" And taskcheck.Offset(0, 2).Value <> "" And taskcheck.Offset(0, 4).Value = "" Then
        errornum = 1
        taskcheck.Select
        taskcheck.Offset(0, 4).Select
        Application.ScreenUpdating = True
        MsgBox "Please Enter a Rate Code for Task " & taskcheck.Offset(0, 1).Value & " - " & taskcheck.Offset(0, 2).Value & "."
        Exit Sub

    End If
 Next taskcheck
 
ItsOver:

End Sub

Sub FormatProjectAssumptions()
Dim assumption As Range
Dim firstCell As Range
Dim lastCell As Range
Dim offsetCell As Range
Dim i As Integer

Application.Goto Reference:="ASSUMPTIONS"

Application.CutCopyMode = False
Selection.Copy

Sheets("Quosal Export").Select
[EXPORTASSUMPTIONS].Offset(0, -1).Value = "Project Assumptions"
[EXPORTASSUMPTIONS].Value = "Project Assumptions"
[EXPORTASSUMPTIONS].Offset(0, 1).Select
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
ActiveWorkbook.Names.Add Name:="FINALASSUMPTIONS", RefersToR1C1:=Selection
Selection.Rows.AutoFit

'FORMATTING -  Add a " - " before each assumption
For Each assumption In Selection
        If assumption.Value <> "" Then
            assumption.Value = " - " & assumption.Value
            Else
            assumption.Value = assumption.Value
        End If
  Next assumption
  
'Combine Assumptions
Set firstCell = Selection(1)
Set lastCell = Selection(Selection.Count)
Set offsetCell = Selection(1)

'Selection.Count determines the Total Number of Lines in the Assumptions.
'ActiveCell.Select and Range(Selection, Selection.End(xlDown)).Select are not used to determine the range of the selection because if there is only one assumption,
'the Selection.Count will be 104,800 or something close. That's because the range will be maxed out to the bottom row of the worksheet.
'Also, if there are breaks in between the assumptions, the assumption range will be inaccurate. The most accurate method is to take the entire "Assumptions" section on the Form page and consolidate that.

' In the Assumption section... If the Only Project Assumption starts with "Project Assumptions", set this line as blank.
'This assume that the default Project Assumption for a new template is starts with "Project Assumptions". As of now, it's set as "Project Assumptions start here|fffd|"

' firstCell always refers to the first cell in the range
' Selection(i) refers to the specific cell as it's going through the loop. If Selection(i) has a value (meaning it isn't blank), it will be added to firstCell and then Selection(i) will be cleared.
For i = 2 To Selection.Count
        'FirstCell is the default Project Assumption value, set firstCell to Selection(i) and move to the next Selection(i)
        If Left(firstCell.Value, 19) = "Project Assumptions" Then
            firstCell = Selection(i)
          GoTo SkipToNextSelectionI
        End If
       'FirstCell is a linebreak, set firstCell to Selection(i) and move to the next Selection(i)
        If firstCell = Chr(10) Then
            firstCell = Selection(i)
       'Selection(i) is blank, leave firstCell as its current value and move to the next Selection(i)
        ElseIf Selection(i) = "" Then
           firstCell = firstCell
        Else
        'Selection(i) isn't blank so it will be added to the bottom of firstCell
           firstCell = firstCell & Chr(10) & Selection(i)
        End If
    
SkipToNextSelectionI:
        Selection(i) = ""
    Next
[EXPORTASSUMPTIONS].Offset(0, 2).Value = "1.00"
ActiveWorkbook.Names("FINALASSUMPTIONS").Delete

NoProjectAssumptions:

End Sub

Sub DeleteButtons()
On Error Resume Next
 ActiveSheet.Shapes("CommandButton1").Delete
 ActiveSheet.Shapes("CommandButton2").Delete
 ActiveSheet.Shapes("CommandButton3").Delete
 ActiveSheet.Shapes("CommandButton4").Delete
 ActiveSheet.Shapes("CommandButton5").Delete
  ActiveSheet.Shapes("Label2").Delete
 ActiveSheet.Shapes("Label3").Delete
 ActiveSheet.Shapes("Label4").Delete
 ActiveSheet.Shapes("Label5").Delete
 ActiveSheet.Shapes("CommandButton6").Delete
 ActiveSheet.Shapes("CommandButton7").Delete
 ActiveSheet.Shapes("CommandButton8").Delete
 ActiveSheet.Shapes("CommandButton9").Delete
 ActiveSheet.Shapes("CommandButton10").Delete
 ActiveSheet.Shapes("CommandButton11").Delete
 ActiveSheet.Shapes("CommandButton12").Delete
 ActiveSheet.Shapes("CommandButton13").Delete
 ActiveSheet.Shapes("CommandButton14").Delete
 ActiveSheet.Shapes("CommandButton15").Delete
 ActiveSheet.Shapes("CommandButton16").Delete
 ActiveSheet.Shapes("CommandButton17").Delete
 ActiveSheet.Shapes("CommandButton18").Delete
 ActiveSheet.Shapes("CommandButton19").Delete
 ActiveSheet.Shapes("CommandButton20").Delete
 ActiveSheet.Shapes("CommandButton21").Delete
 ActiveSheet.Shapes("CommandButton22").Delete
 ActiveSheet.Shapes("CommandButton23").Delete
 ActiveSheet.Shapes("CommandButton24").Delete
 ActiveSheet.Shapes("CommandButton25").Delete
 ActiveSheet.Shapes("CommandButton26").Delete
 ActiveSheet.Shapes("CommandButton27").Delete
 ActiveSheet.Shapes("CommandButton28").Delete
 ActiveSheet.Shapes("CommandButton29").Delete
 ActiveSheet.Shapes("CommandButton30").Delete
 ActiveSheet.Shapes("CommandButton31").Delete
 ActiveSheet.Shapes("CommandButton32").Delete
 ActiveSheet.Shapes("CommandButton33").Delete
 ActiveSheet.Shapes("CommandButton34").Delete
 ActiveSheet.Shapes("CommandButton35").Delete
 ActiveSheet.Shapes("CommandButton36").Delete
 ActiveSheet.Shapes("CommandButton37").Delete
 ActiveSheet.Shapes("CommandButton38").Delete
 ActiveSheet.Shapes("CommandButton39").Delete
 ActiveSheet.Shapes("CommandButton40").Delete
 End Sub

Attribute VB_Name = "QuosalTextExport"
Public errornum As Integer
Sub CompleteTextProjectPlan()

'Call ResetProjectFormNamedRanges
Call Quosal.DeleteNamedRanges
Call Quosal.DeleteMarker

Call Quosal.ExportErrorCheck
'Make Sure Every Phase has a Phase Number and Rate Code

If errornum > 0 Then
    errornum = 0
    GoTo FailedErrorCheck
End If
Call Quosal.ExportDataToQuosalTab

'Find Last Cell Used in the Phase Description Column
Call Quosal.FindLastRow
Call TextMergePhaseNumber
Call TextFormatProjectAssumptions
Call AddTotalHours
[FirstPhaseCell].Offset(-1, 0).Select
ActiveCell.Value = "Scope of Service"
    Selection.Font.Bold = True
    Selection.Font.Italic = True
    With Selection.Font
        .Name = "Arial"
        .Size = 12
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    
[FirstPhaseCell].Offset(-3, 0).Value = [TEMPLATETYPE].Value

FailedErrorCheck:


End Sub
Sub AddTotalHours()
    [FirstPhaseCell].Offset(-1, 0).Select
    ActiveCell.Offset(5000, 0).Select
    Selection.End(xlUp).Select
    ActiveCell.Offset(2, 0).Select
     ActiveCell.Value = "Total Project Hours: " & Format([PROJTOTALHOURS].Value, "#####.00") & " hrs."
    Selection.Font.Bold = True
End Sub

Sub GoToRateSchedule()
Sheets("Rate Schedule").Select
End Sub
Sub GoToForm()
Sheets("Form").Select
End Sub
Sub ResetQuosal2()
On Error Resume Next
ActiveWorkbook.Names("QUOSAL2").Delete
[PROJTOTALCOST].Offset(1, 0).Select
ActiveWorkbook.Names.Add Name:="QUOSAL2", RefersToR1C1:=Selection
End Sub

Sub ExportDataToQuosalTab()
Sheets("Quosal Export").Select
Call GoToA2
Rows("4:1000").Delete
Range("A4").Select
Call GoToForm
Range("A3").Select
Range("A3").Value = "x.x"
Range("A3").Select
Cells.Replace What:="x.x", Replacement:="", LookAt:=xlWhole, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
Call ResetQuosal2
Range([QUOSAL1], [QUOSAL2]).Select
Selection.Copy
Sheets("Quosal Export").Select
Selection.PasteSpecial Paste:=xlPasteValuesAndNumberFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
ActiveWorkbook.Names.Add Name:="QUOSALEXPORT", RefersToR1C1:=Selection

End Sub


Sub TextMergePhaseNumber()
Dim Phase As Range
Dim Task As Range
Dim taskdetail As Range


On Error Resume Next
'Make Sure entire first column is just Phase without spaces on either side
Range("A2").Select
Selection.EntireColumn.Select
Selection.Replace What:="*Phase*", Replacement:="Phase", LookAt:=xlWhole, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
Selection.Find(What:="Phase", After:=ActiveCell, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Select
ActiveWorkbook.Names.Add Name:="FirstPhaseCell", RefersToR1C1:=Selection

'Make Sure entire second column is just Tasks without spaces on either side
Range("B2").Select
Selection.EntireColumn.Select
Selection.Replace What:="*Task*", Replacement:="Task", LookAt:=xlWhole, SearchOrder:=xlByRows, MatchCase:=False, SearchFormat:=False, ReplaceFormat:=False
Selection.Find(What:="Task", After:=ActiveCell, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False).Select

[FirstPhaseCell].Select
ActiveWorkbook.Names.Add Name:="FirstTaskDescriptionCell", RefersToR1C1:=ActiveCell.Offset(0, 3)
ActiveWorkbook.Names.Add Name:="FirstTaskCell", RefersToR1C1:=ActiveCell.Offset(0, 1)
    
'Create First Cell Ranges
Application.Goto Reference:="LastTaskDescriptionCell"
ActiveCell.Offset(1, 0).Select
'Delete Extra Rows at bottom of Project Plan
Call DeleteExtraRows

'Convert Phase Numbers into "Phase"&Number while deleting cells in the CellTaskHeader Column that is not the Task Title.
Range([FirstPhaseCell], [LastPhaseCell]).Select
  For Each Phase In Selection
       If Phase.Value = "Phase" And Phase.Offset(0, 1).Value <> "" And Phase.Offset(0, 2).Value <> "" Then
        Phase.Value = Phase.Value & " " & Format(Phase.Offset(0, 1).Value, "#####.0") & " - " & Phase.Offset(0, 2).Value
        Phase.Font.Bold = True
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
        Phase.Offset(0, 3).Value = ""
        Phase.Offset(0, 4).Value = ""
        Phase.Offset(0, 5).Value = ""
        Phase.Offset(0, 6).Value = ""
        Phase.Offset(0, 7).Value = ""
       ElseIf Phase.Offset(0, 3).Value = "Project Total" Then
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
        Phase.Offset(0, 3).Value = ""
        Phase.Offset(0, 4).Value = ""
        Phase.Offset(0, 5).Value = ""
        Phase.Offset(0, 6).Value = ""
        Phase.Offset(0, 7).Value = ""
       ElseIf Phase.Offset(0, 1).Value = "Task" And Phase.Offset(0, 2).Value <> "" And Phase.Offset(0, 4).Value = "" Then
        Phase.Value = Chr(32) & Chr(32) & Chr(149) & Chr(32) & Phase.Offset(0, 1).Value & " " & Format(Phase.Offset(0, 2).Value, "#####.0") & " - " & Phase.Offset(0, 3).Value
        Phase.Font.Italic = True
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
        Phase.Offset(0, 3).Value = ""
        Phase.Offset(0, 4).Value = ""
        Phase.Offset(0, 5).Value = ""
        Phase.Offset(0, 6).Value = ""
        Phase.Offset(0, 7).Value = ""
      ElseIf Phase.Offset(0, 1).Value = "Task" And Phase.Offset(0, 2).Value <> "" And Phase.Offset(0, 4).Value <> "" And Phase.Offset(0, 4).Value < "1.1" Then
        Phase.Value = Chr(32) & Chr(32) & Chr(149) & Chr(32) & Phase.Offset(0, 1).Value & " " & Format(Phase.Offset(0, 2).Value, "#####.0") & " - " & Phase.Offset(0, 3).Value & " [ " & Phase.Offset(0, 5).Value & " - " & Format(Phase.Offset(0, 4).Value, "#####.0") & " hr ]"
        Phase.Font.Italic = True
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
        Phase.Offset(0, 3).Value = ""
        Phase.Offset(0, 4).Value = ""
        Phase.Offset(0, 5).Value = ""
        Phase.Offset(0, 6).Value = ""
        Phase.Offset(0, 7).Value = ""
       ElseIf Phase.Offset(0, 1).Value = "Task" And Phase.Offset(0, 2).Value <> "" And Phase.Offset(0, 4).Value <> "" And Phase.Offset(0, 4).Value > "1.0" Then
        Phase.Value = Chr(32) & Chr(32) & Chr(149) & Chr(32) & Phase.Offset(0, 1).Value & " " & Format(Phase.Offset(0, 2).Value, "#####.0") & " - " & Phase.Offset(0, 3).Value & " [ " & Phase.Offset(0, 5).Value & " - " & Format(Phase.Offset(0, 4).Value, "#####.0") & " hrs ]"
        Phase.Font.Italic = True
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
        Phase.Offset(0, 3).Value = ""
        Phase.Offset(0, 4).Value = ""
        Phase.Offset(0, 5).Value = ""
        Phase.Offset(0, 6).Value = ""
        Phase.Offset(0, 7).Value = ""
       ElseIf Phase.Offset(0, 3).Value <> "" Then
        Phase.Value = Chr(32) & Chr(32) & " - " & Chr(32) & Phase.Offset(0, 3).Value
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
        Phase.Offset(0, 3).Value = ""
        Phase.Offset(0, 4).Value = ""
        Phase.Offset(0, 5).Value = ""
        Phase.Offset(0, 6).Value = ""
        Phase.Offset(0, 7).Value = ""
       ElseIf Phase.Value = "" Then
        Phase.Value = ""
        Phase.Offset(0, 1).Value = ""
        Phase.Offset(0, 2).Value = ""
        Phase.Offset(0, 3).Value = ""
        Phase.Offset(0, 4).Value = ""
        Phase.Offset(0, 5).Value = ""
        Phase.Offset(0, 6).Value = ""
        Phase.Offset(0, 7).Value = ""
        End If
    Next Phase
    
'Find the last used row to insert the Assumptions.
RetryAssumptions:
[LastPhaseCell].Select
ActiveWorkbook.Names.Add Name:="EXPORTASSUMPTIONS", RefersToR1C1:=Selection
   Columns("A:A").ColumnWidth = 130#

End Sub

Sub DeleteHome()
 On Error Resume Next
ActiveWorkbook.Names("HOME").Delete
End Sub

Sub GoToA2()
    Range("A2").Select
    Call Quosal.NameWorksheet
    Call Quosal.ProjCostLabel
    Call Quosal.ProjHoursLabel
End Sub

Sub TextFormatProjectAssumptions()
Dim assumption As Range
Dim firstCell As Range
Dim lastCell As Range
Dim offsetCell As Range
Dim i As Integer

Application.Goto Reference:="ASSUMPTIONS"
Selection.Copy
Sheets("Quosal Export").Select
[EXPORTASSUMPTIONS].Offset(1, 0).Select
Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False

[EXPORTASSUMPTIONS].Value = "Project Assumptions"
[EXPORTASSUMPTIONS].Font.Bold = True
If [EXPORTASSUMPTIONS].Offset(1, 0).Value = "" Then
ActiveCell.Value = "No Assumptions"
End If

OnError:

End Sub

Attribute VB_Name = "ResetChecklistConfirm"
Attribute VB_Base = "0{BA8FCC93-7BF5-4C52-A368-C85906FE9BE2}{966B0007-657D-423F-A894-E8D070B8881E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub ResetChecklistConfirmNo_Click()
   ResetChecklistConfirm.Hide
End Sub

Private Sub ResetChecklistConfirmYes_Click()
    ResetChecklistConfirm.Hide
    Qs.Hide
    Call ReviewChecklist.ResetChecklist
End Sub
Attribute VB_Name = "ReviewChecklist"
Sub ResetChecklist()
Application.ScreenUpdating = False
Dim question As Range
ActiveWorkbook.Names.Add Name:="ReviewChecklistReturn", RefersToR1C1:=Selection
Application.Goto Reference:="RESET_CHECKLIST"
For Each question In Selection
    If question.Offset(0, -5).Value <> "" And question.Offset(1, -5).Value = "" Then
        question.Offset(0, 1).Value = "If you answered 'No' to any of the questions above, please explain your reasoning in this space provided."
    ElseIf question.Value = "" Then
        GoTo Skip
    ElseIf question.Offset(0, -1).Value = "" And question.Value <> "" Then
        GoTo Skip
    Else
        question.Offset(0, -3).Value = "FALSE"
        question.Offset(0, -2).Value = "FALSE"
        question.Offset(0, -1).Value = "FALSE"
        question.Offset(0, 2).Value = ""
        question.Offset(0, 3).Value = ""
        question.Offset(0, 4).Value = ""
    End If
Skip:
  Next question
Application.Goto Reference:="ReviewChecklistReturn"
ActiveWorkbook.Names("ReviewChecklistReturn").Delete
Application.ScreenUpdating = True
End Sub

Sub GetData()
    Call ReviewChecklist.MakeAllVisible
    Call ReviewChecklist.GetDataT1
    Call ReviewChecklist.GetDataT2
    Call ReviewChecklist.GetDataT3
    Call ReviewChecklist.GetDataT4
    Call ReviewChecklist.GetDataT5
    Call ReviewChecklist.GetDataT6
    Call ReviewChecklist.GetDataT7
    Call ReviewChecklist.GetDataT8
    Call ReviewChecklist.GetDataT9
    Call ReviewChecklist.GetDataT0
    Qs.MultiPage1.Value = 0
    Qs.Show
End Sub

Sub SendData()
    Call ReviewChecklist.SendDataT1
    Call ReviewChecklist.SendDataT2
    Call ReviewChecklist.SendDataT3
    Call ReviewChecklist.SendDataT4
    Call ReviewChecklist.SendDataT5
    Call ReviewChecklist.SendDataT6
    Call ReviewChecklist.SendDataT7
    Call ReviewChecklist.SendDataT8
    Call ReviewChecklist.SendDataT9
    Call ReviewChecklist.SendDataT0
    Qs.Hide

End Sub

Sub GetDataT1()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(0).Caption = [SECTION1].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(0).Frame1.Caption = [SECTION1].Offset(0, 1).Value
If [SECTION1].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S1.Caption = [SECTION1].Offset(1, 1).Value
Qs.MultiPage1.Pages(0).T1S1Ver.Value = [SECTION1].Offset(1, 2).Value
Qs.MultiPage1.Pages(0).T1S1Notes.Value = [SECTION1].Offset(1, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S1.Visible = False
Qs.MultiPage1.Pages(0).T1S1Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S1Notes.Visible = False
End If
'-------

If [SECTION1].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S2.Caption = [SECTION1].Offset(2, 1).Value
Qs.MultiPage1.Pages(0).T1S2Ver.Value = [SECTION1].Offset(2, 2).Value
Qs.MultiPage1.Pages(0).T1S2Notes.Value = [SECTION1].Offset(2, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S2.Visible = False
Qs.MultiPage1.Pages(0).T1S2Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S2Notes.Visible = False
End If
'-------
If [SECTION1].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S3.Caption = [SECTION1].Offset(3, 1).Value
Qs.MultiPage1.Pages(0).T1S3Ver.Value = [SECTION1].Offset(3, 2).Value
Qs.MultiPage1.Pages(0).T1S3Notes.Value = [SECTION1].Offset(3, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S3.Visible = False
Qs.MultiPage1.Pages(0).T1S3Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S3Notes.Visible = False
End If
'-------
If [SECTION1].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S4.Caption = [SECTION1].Offset(4, 1).Value
Qs.MultiPage1.Pages(0).T1S4Ver.Value = [SECTION1].Offset(4, 2).Value
Qs.MultiPage1.Pages(0).T1S4Notes.Value = [SECTION1].Offset(4, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S4.Visible = False
Qs.MultiPage1.Pages(0).T1S4Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S4Notes.Visible = False
End If
'-------
If [SECTION1].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S5.Caption = [SECTION1].Offset(5, 1).Value
Qs.MultiPage1.Pages(0).T1S5Ver.Value = [SECTION1].Offset(5, 2).Value
Qs.MultiPage1.Pages(0).T1S5Notes.Value = [SECTION1].Offset(5, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S5.Visible = False
Qs.MultiPage1.Pages(0).T1S5Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S5Notes.Visible = False
End If
'-------
If [SECTION1].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S6.Caption = [SECTION1].Offset(6, 1).Value
Qs.MultiPage1.Pages(0).T1S6Ver.Value = [SECTION1].Offset(6, 2).Value
Qs.MultiPage1.Pages(0).T1S6Notes.Value = [SECTION1].Offset(6, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S6.Visible = False
Qs.MultiPage1.Pages(0).T1S6Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S6CertBy.Visible = False
Qs.MultiPage1.Pages(0).T1S6Date.Visible = False
Qs.MultiPage1.Pages(0).T1S6Notes.Visible = False
End If
'-------
If [SECTION1].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S7.Caption = [SECTION1].Offset(7, 1).Value
Qs.MultiPage1.Pages(0).T1S7Ver.Value = [SECTION1].Offset(7, 2).Value
Qs.MultiPage1.Pages(0).T1S7Notes.Value = [SECTION1].Offset(7, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S7.Visible = False
Qs.MultiPage1.Pages(0).T1S7Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S7Notes.Visible = False
End If
'-------
If [SECTION1].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(0).T1S8.Caption = [SECTION1].Offset(8, 1).Value
Qs.MultiPage1.Pages(0).T1S8Ver.Value = [SECTION1].Offset(8, 2).Value
Qs.MultiPage1.Pages(0).T1S8Notes.Value = [SECTION1].Offset(8, 3).Value
Else
Qs.MultiPage1.Pages(0).T1S8.Visible = False
Qs.MultiPage1.Pages(0).T1S8Ver.Visible = False
Qs.MultiPage1.Pages(0).T1S8Notes.Visible = False
End If
'-------
End Sub

Sub GetDataT2()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(1).Caption = [SECTION2].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(1).Frame2.Caption = [SECTION2].Offset(0, 1).Value
If [SECTION2].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY1.Value = [SECTION2].Offset(1, -3).Value
Qs.MultiPage1.Pages(1).T2SN1.Value = [SECTION2].Offset(1, -2).Value
Qs.MultiPage1.Pages(1).T2SNA1.Value = [SECTION2].Offset(1, -1).Value
Qs.MultiPage1.Pages(1).T2NS1.Caption = [SECTION2].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S1.Caption = [SECTION2].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY1.Visible = False
Qs.MultiPage1.Pages(1).T2SN1.Visible = False
Qs.MultiPage1.Pages(1).T2SNA1.Visible = False
Qs.MultiPage1.Pages(1).T2NS1.Visible = False
Qs.MultiPage1.Pages(1).T2S1.Visible = False
End If
'-------
If [SECTION2].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY2.Value = [SECTION2].Offset(2, -3).Value
Qs.MultiPage1.Pages(1).T2SN2.Value = [SECTION2].Offset(2, -2).Value
Qs.MultiPage1.Pages(1).T2SNA2.Value = [SECTION2].Offset(2, -1).Value
Qs.MultiPage1.Pages(1).T2NS2.Caption = [SECTION2].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S2.Caption = [SECTION2].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY2.Visible = False
Qs.MultiPage1.Pages(1).T2SN2.Visible = False
Qs.MultiPage1.Pages(1).T2SNA2.Visible = False
Qs.MultiPage1.Pages(1).T2NS2.Visible = False
Qs.MultiPage1.Pages(1).T2S2.Visible = False
End If
'-------
If [SECTION2].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY3.Value = [SECTION2].Offset(3, -3).Value
Qs.MultiPage1.Pages(1).T2SN3.Value = [SECTION2].Offset(3, -2).Value
Qs.MultiPage1.Pages(1).T2SNA3.Value = [SECTION2].Offset(3, -1).Value
Qs.MultiPage1.Pages(1).T2NS3.Caption = [SECTION2].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S3.Caption = [SECTION2].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY3.Visible = False
Qs.MultiPage1.Pages(1).T2SN3.Visible = False
Qs.MultiPage1.Pages(1).T2SNA3.Visible = False
Qs.MultiPage1.Pages(1).T2NS3.Visible = False
Qs.MultiPage1.Pages(1).T2S3.Visible = False
End If
'-------
If [SECTION2].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY4.Value = [SECTION2].Offset(4, -3).Value
Qs.MultiPage1.Pages(1).T2SN4.Value = [SECTION2].Offset(4, -2).Value
Qs.MultiPage1.Pages(1).T2SNA4.Value = [SECTION2].Offset(4, -1).Value
Qs.MultiPage1.Pages(1).T2NS4.Caption = [SECTION2].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S4.Caption = [SECTION2].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY4.Visible = False
Qs.MultiPage1.Pages(1).T2SN4.Visible = False
Qs.MultiPage1.Pages(1).T2SNA4.Visible = False
Qs.MultiPage1.Pages(1).T2NS4.Visible = False
Qs.MultiPage1.Pages(1).T2S4.Visible = False
End If
'-------
If [SECTION2].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY5.Value = [SECTION2].Offset(5, -3).Value
Qs.MultiPage1.Pages(1).T2SN5.Value = [SECTION2].Offset(5, -2).Value
Qs.MultiPage1.Pages(1).T2SNA5.Value = [SECTION2].Offset(5, -1).Value
Qs.MultiPage1.Pages(1).T2NS5.Caption = [SECTION2].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S5.Caption = [SECTION2].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY5.Visible = False
Qs.MultiPage1.Pages(1).T2SN5.Visible = False
Qs.MultiPage1.Pages(1).T2SNA5.Visible = False
Qs.MultiPage1.Pages(1).T2NS5.Visible = False
Qs.MultiPage1.Pages(1).T2S5.Visible = False
End If
'-------
If [SECTION2].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY6.Value = [SECTION2].Offset(6, -3).Value
Qs.MultiPage1.Pages(1).T2SN6.Value = [SECTION2].Offset(6, -2).Value
Qs.MultiPage1.Pages(1).T2SNA6.Value = [SECTION2].Offset(6, -1).Value
Qs.MultiPage1.Pages(1).T2NS6.Caption = [SECTION2].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S6.Caption = [SECTION2].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY6.Visible = False
Qs.MultiPage1.Pages(1).T2SN6.Visible = False
Qs.MultiPage1.Pages(1).T2SNA6.Visible = False
Qs.MultiPage1.Pages(1).T2NS6.Visible = False
Qs.MultiPage1.Pages(1).T2S6.Visible = False
End If
'-------
If [SECTION2].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY7.Value = [SECTION2].Offset(7, -3).Value
Qs.MultiPage1.Pages(1).T2SN7.Value = [SECTION2].Offset(7, -2).Value
Qs.MultiPage1.Pages(1).T2SNA7.Value = [SECTION2].Offset(7, -1).Value
Qs.MultiPage1.Pages(1).T2NS7.Caption = [SECTION2].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S7.Caption = [SECTION2].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY7.Visible = False
Qs.MultiPage1.Pages(1).T2SN7.Visible = False
Qs.MultiPage1.Pages(1).T2SNA7.Visible = False
Qs.MultiPage1.Pages(1).T2NS7.Visible = False
Qs.MultiPage1.Pages(1).T2S7.Visible = False
End If
'-------
If [SECTION2].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(1).T2SY8.Value = [SECTION2].Offset(8, -3).Value
Qs.MultiPage1.Pages(1).T2SN8.Value = [SECTION2].Offset(8, -2).Value
Qs.MultiPage1.Pages(1).T2SNA8.Value = [SECTION2].Offset(8, -1).Value
Qs.MultiPage1.Pages(1).T2NS8.Caption = [SECTION2].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(1).T2S8.Caption = [SECTION2].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(1).T2SY8.Visible = False
Qs.MultiPage1.Pages(1).T2SN8.Visible = False
Qs.MultiPage1.Pages(1).T2SNA8.Visible = False
Qs.MultiPage1.Pages(1).T2NS8.Visible = False
Qs.MultiPage1.Pages(1).T2S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION2].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(1).T2TB1.Text = [SECTION2].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(1).T2TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT3()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(2).Caption = [SECTION3].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(2).Frame3.Caption = [SECTION3].Offset(0, 1).Value
If [SECTION3].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY1.Value = [SECTION3].Offset(1, -3).Value
Qs.MultiPage1.Pages(2).T3SN1.Value = [SECTION3].Offset(1, -2).Value
Qs.MultiPage1.Pages(2).T3SNA1.Value = [SECTION3].Offset(1, -1).Value
Qs.MultiPage1.Pages(2).T3NS1.Caption = [SECTION3].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S1.Caption = [SECTION3].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY1.Visible = False
Qs.MultiPage1.Pages(2).T3SN1.Visible = False
Qs.MultiPage1.Pages(2).T3SNA1.Visible = False
Qs.MultiPage1.Pages(2).T3NS1.Visible = False
Qs.MultiPage1.Pages(2).T3S1.Visible = False
End If
'-------
If [SECTION3].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY2.Value = [SECTION3].Offset(2, -3).Value
Qs.MultiPage1.Pages(2).T3SN2.Value = [SECTION3].Offset(2, -2).Value
Qs.MultiPage1.Pages(2).T3SNA2.Value = [SECTION3].Offset(2, -1).Value
Qs.MultiPage1.Pages(2).T3NS2.Caption = [SECTION3].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S2.Caption = [SECTION3].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY2.Visible = False
Qs.MultiPage1.Pages(2).T3SN2.Visible = False
Qs.MultiPage1.Pages(2).T3SNA2.Visible = False
Qs.MultiPage1.Pages(2).T3NS2.Visible = False
Qs.MultiPage1.Pages(2).T3S2.Visible = False
End If
'-------
If [SECTION3].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY3.Value = [SECTION3].Offset(3, -3).Value
Qs.MultiPage1.Pages(2).T3SN3.Value = [SECTION3].Offset(3, -2).Value
Qs.MultiPage1.Pages(2).T3SNA3.Value = [SECTION3].Offset(3, -1).Value
Qs.MultiPage1.Pages(2).T3NS3.Caption = [SECTION3].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S3.Caption = [SECTION3].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY3.Visible = False
Qs.MultiPage1.Pages(2).T3SN3.Visible = False
Qs.MultiPage1.Pages(2).T3SNA3.Visible = False
Qs.MultiPage1.Pages(2).T3NS3.Visible = False
Qs.MultiPage1.Pages(2).T3S3.Visible = False
End If
'-------
If [SECTION3].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY4.Value = [SECTION3].Offset(4, -3).Value
Qs.MultiPage1.Pages(2).T3SN4.Value = [SECTION3].Offset(4, -2).Value
Qs.MultiPage1.Pages(2).T3SNA4.Value = [SECTION3].Offset(4, -1).Value
Qs.MultiPage1.Pages(2).T3NS4.Caption = [SECTION3].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S4.Caption = [SECTION3].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY4.Visible = False
Qs.MultiPage1.Pages(2).T3SN4.Visible = False
Qs.MultiPage1.Pages(2).T3SNA4.Visible = False
Qs.MultiPage1.Pages(2).T3NS4.Visible = False
Qs.MultiPage1.Pages(2).T3S4.Visible = False
End If
'-------
If [SECTION3].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY5.Value = [SECTION3].Offset(5, -3).Value
Qs.MultiPage1.Pages(2).T3SN5.Value = [SECTION3].Offset(5, -2).Value
Qs.MultiPage1.Pages(2).T3SNA5.Value = [SECTION3].Offset(5, -1).Value
Qs.MultiPage1.Pages(2).T3NS5.Caption = [SECTION3].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S5.Caption = [SECTION3].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY5.Visible = False
Qs.MultiPage1.Pages(2).T3SN5.Visible = False
Qs.MultiPage1.Pages(2).T3SNA5.Visible = False
Qs.MultiPage1.Pages(2).T3NS5.Visible = False
Qs.MultiPage1.Pages(2).T3S5.Visible = False
End If
'-------
If [SECTION3].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY6.Value = [SECTION3].Offset(6, -3).Value
Qs.MultiPage1.Pages(2).T3SN6.Value = [SECTION3].Offset(6, -2).Value
Qs.MultiPage1.Pages(2).T3SNA6.Value = [SECTION3].Offset(6, -1).Value
Qs.MultiPage1.Pages(2).T3NS6.Caption = [SECTION3].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S6.Caption = [SECTION3].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY6.Visible = False
Qs.MultiPage1.Pages(2).T3SN6.Visible = False
Qs.MultiPage1.Pages(2).T3SNA6.Visible = False
Qs.MultiPage1.Pages(2).T3NS6.Visible = False
Qs.MultiPage1.Pages(2).T3S6.Visible = False
End If
'-------
If [SECTION3].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY7.Value = [SECTION3].Offset(7, -3).Value
Qs.MultiPage1.Pages(2).T3SN7.Value = [SECTION3].Offset(7, -2).Value
Qs.MultiPage1.Pages(2).T3SNA7.Value = [SECTION3].Offset(7, -1).Value
Qs.MultiPage1.Pages(2).T3NS7.Caption = [SECTION3].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S7.Caption = [SECTION3].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY7.Visible = False
Qs.MultiPage1.Pages(2).T3SN7.Visible = False
Qs.MultiPage1.Pages(2).T3SNA7.Visible = False
Qs.MultiPage1.Pages(2).T3NS7.Visible = False
Qs.MultiPage1.Pages(2).T3S7.Visible = False
End If
'-------
If [SECTION3].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(2).T3SY8.Value = [SECTION3].Offset(8, -3).Value
Qs.MultiPage1.Pages(2).T3SN8.Value = [SECTION3].Offset(8, -2).Value
Qs.MultiPage1.Pages(2).T3SNA8.Value = [SECTION3].Offset(8, -1).Value
Qs.MultiPage1.Pages(2).T3NS8.Caption = [SECTION3].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(2).T3S8.Caption = [SECTION3].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(2).T3SY8.Visible = False
Qs.MultiPage1.Pages(2).T3SN8.Visible = False
Qs.MultiPage1.Pages(2).T3SNA8.Visible = False
Qs.MultiPage1.Pages(2).T3NS8.Visible = False
Qs.MultiPage1.Pages(2).T3S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION3].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(2).T3TB1.Text = [SECTION3].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(2).T3TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT4()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(3).Caption = [SECTION4].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(3).Frame4.Caption = [SECTION4].Offset(0, 1).Value
If [SECTION4].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY1.Value = [SECTION4].Offset(1, -3).Value
Qs.MultiPage1.Pages(3).T4SN1.Value = [SECTION4].Offset(1, -2).Value
Qs.MultiPage1.Pages(3).T4SNA1.Value = [SECTION4].Offset(1, -1).Value
Qs.MultiPage1.Pages(3).T4NS1.Caption = [SECTION4].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S1.Caption = [SECTION4].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY1.Visible = False
Qs.MultiPage1.Pages(3).T4SN1.Visible = False
Qs.MultiPage1.Pages(3).T4SNA1.Visible = False
Qs.MultiPage1.Pages(3).T4NS1.Visible = False
Qs.MultiPage1.Pages(3).T4S1.Visible = False
End If
'-------
If [SECTION4].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY2.Value = [SECTION4].Offset(2, -3).Value
Qs.MultiPage1.Pages(3).T4SN2.Value = [SECTION4].Offset(2, -2).Value
Qs.MultiPage1.Pages(3).T4SNA2.Value = [SECTION4].Offset(2, -1).Value
Qs.MultiPage1.Pages(3).T4NS2.Caption = [SECTION4].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S2.Caption = [SECTION4].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY2.Visible = False
Qs.MultiPage1.Pages(3).T4SN2.Visible = False
Qs.MultiPage1.Pages(3).T4SNA2.Visible = False
Qs.MultiPage1.Pages(3).T4NS2.Visible = False
Qs.MultiPage1.Pages(3).T4S2.Visible = False
End If
'-------
If [SECTION4].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY3.Value = [SECTION4].Offset(3, -3).Value
Qs.MultiPage1.Pages(3).T4SN3.Value = [SECTION4].Offset(3, -2).Value
Qs.MultiPage1.Pages(3).T4SNA3.Value = [SECTION4].Offset(3, -1).Value
Qs.MultiPage1.Pages(3).T4NS3.Caption = [SECTION4].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S3.Caption = [SECTION4].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY3.Visible = False
Qs.MultiPage1.Pages(3).T4SN3.Visible = False
Qs.MultiPage1.Pages(3).T4SNA3.Visible = False
Qs.MultiPage1.Pages(3).T4NS3.Visible = False
Qs.MultiPage1.Pages(3).T4S3.Visible = False
End If
'-------
If [SECTION4].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY4.Value = [SECTION4].Offset(4, -3).Value
Qs.MultiPage1.Pages(3).T4SN4.Value = [SECTION4].Offset(4, -2).Value
Qs.MultiPage1.Pages(3).T4SNA4.Value = [SECTION4].Offset(4, -1).Value
Qs.MultiPage1.Pages(3).T4NS4.Caption = [SECTION4].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S4.Caption = [SECTION4].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY4.Visible = False
Qs.MultiPage1.Pages(3).T4SN4.Visible = False
Qs.MultiPage1.Pages(3).T4SNA4.Visible = False
Qs.MultiPage1.Pages(3).T4NS4.Visible = False
Qs.MultiPage1.Pages(3).T4S4.Visible = False
End If
'-------
If [SECTION4].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY5.Value = [SECTION4].Offset(5, -3).Value
Qs.MultiPage1.Pages(3).T4SN5.Value = [SECTION4].Offset(5, -2).Value
Qs.MultiPage1.Pages(3).T4SNA5.Value = [SECTION4].Offset(5, -1).Value
Qs.MultiPage1.Pages(3).T4NS5.Caption = [SECTION4].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S5.Caption = [SECTION4].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY5.Visible = False
Qs.MultiPage1.Pages(3).T4SN5.Visible = False
Qs.MultiPage1.Pages(3).T4SNA5.Visible = False
Qs.MultiPage1.Pages(3).T4NS5.Visible = False
Qs.MultiPage1.Pages(3).T4S5.Visible = False
End If
'-------
If [SECTION4].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY6.Value = [SECTION4].Offset(6, -3).Value
Qs.MultiPage1.Pages(3).T4SN6.Value = [SECTION4].Offset(6, -2).Value
Qs.MultiPage1.Pages(3).T4SNA6.Value = [SECTION4].Offset(6, -1).Value
Qs.MultiPage1.Pages(3).T4NS6.Caption = [SECTION4].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S6.Caption = [SECTION4].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY6.Visible = False
Qs.MultiPage1.Pages(3).T4SN6.Visible = False
Qs.MultiPage1.Pages(3).T4SNA6.Visible = False
Qs.MultiPage1.Pages(3).T4NS6.Visible = False
Qs.MultiPage1.Pages(3).T4S6.Visible = False
End If
'-------
If [SECTION4].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY7.Value = [SECTION4].Offset(7, -3).Value
Qs.MultiPage1.Pages(3).T4SN7.Value = [SECTION4].Offset(7, -2).Value
Qs.MultiPage1.Pages(3).T4SNA7.Value = [SECTION4].Offset(7, -1).Value
Qs.MultiPage1.Pages(3).T4NS7.Caption = [SECTION4].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S7.Caption = [SECTION4].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY7.Visible = False
Qs.MultiPage1.Pages(3).T4SN7.Visible = False
Qs.MultiPage1.Pages(3).T4SNA7.Visible = False
Qs.MultiPage1.Pages(3).T4NS7.Visible = False
Qs.MultiPage1.Pages(3).T4S7.Visible = False
End If
'-------
If [SECTION4].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(3).T4SY8.Value = [SECTION4].Offset(8, -3).Value
Qs.MultiPage1.Pages(3).T4SN8.Value = [SECTION4].Offset(8, -2).Value
Qs.MultiPage1.Pages(3).T4SNA8.Value = [SECTION4].Offset(8, -1).Value
Qs.MultiPage1.Pages(3).T4NS8.Caption = [SECTION4].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(3).T4S8.Caption = [SECTION4].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(3).T4SY8.Visible = False
Qs.MultiPage1.Pages(3).T4SN8.Visible = False
Qs.MultiPage1.Pages(3).T4SNA8.Visible = False
Qs.MultiPage1.Pages(3).T4NS8.Visible = False
Qs.MultiPage1.Pages(3).T4S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION4].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(3).T4TB1.Text = [SECTION4].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(3).T4TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT5()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(4).Caption = [SECTION5].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(4).Frame5.Caption = [SECTION5].Offset(0, 1).Value
If [SECTION5].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY1.Value = [SECTION5].Offset(1, -3).Value
Qs.MultiPage1.Pages(4).T5SN1.Value = [SECTION5].Offset(1, -2).Value
Qs.MultiPage1.Pages(4).T5SNA1.Value = [SECTION5].Offset(1, -1).Value
Qs.MultiPage1.Pages(4).T5NS1.Caption = [SECTION5].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S1.Caption = [SECTION5].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY1.Visible = False
Qs.MultiPage1.Pages(4).T5SN1.Visible = False
Qs.MultiPage1.Pages(4).T5SNA1.Visible = False
Qs.MultiPage1.Pages(4).T5NS1.Visible = False
Qs.MultiPage1.Pages(4).T5S1.Visible = False
End If
'-------
If [SECTION5].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY2.Value = [SECTION5].Offset(2, -3).Value
Qs.MultiPage1.Pages(4).T5SN2.Value = [SECTION5].Offset(2, -2).Value
Qs.MultiPage1.Pages(4).T5SNA2.Value = [SECTION5].Offset(2, -1).Value
Qs.MultiPage1.Pages(4).T5NS2.Caption = [SECTION5].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S2.Caption = [SECTION5].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY2.Visible = False
Qs.MultiPage1.Pages(4).T5SN2.Visible = False
Qs.MultiPage1.Pages(4).T5SNA2.Visible = False
Qs.MultiPage1.Pages(4).T5NS2.Visible = False
Qs.MultiPage1.Pages(4).T5S2.Visible = False
End If
'-------
If [SECTION5].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY3.Value = [SECTION5].Offset(3, -3).Value
Qs.MultiPage1.Pages(4).T5SN3.Value = [SECTION5].Offset(3, -2).Value
Qs.MultiPage1.Pages(4).T5SNA3.Value = [SECTION5].Offset(3, -1).Value
Qs.MultiPage1.Pages(4).T5NS3.Caption = [SECTION5].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S3.Caption = [SECTION5].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY3.Visible = False
Qs.MultiPage1.Pages(4).T5SN3.Visible = False
Qs.MultiPage1.Pages(4).T5SNA3.Visible = False
Qs.MultiPage1.Pages(4).T5NS3.Visible = False
Qs.MultiPage1.Pages(4).T5S3.Visible = False
End If
'-------
If [SECTION5].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY4.Value = [SECTION5].Offset(4, -3).Value
Qs.MultiPage1.Pages(4).T5SN4.Value = [SECTION5].Offset(4, -2).Value
Qs.MultiPage1.Pages(4).T5SNA4.Value = [SECTION5].Offset(4, -1).Value
Qs.MultiPage1.Pages(4).T5NS4.Caption = [SECTION5].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S4.Caption = [SECTION5].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY4.Visible = False
Qs.MultiPage1.Pages(4).T5SN4.Visible = False
Qs.MultiPage1.Pages(4).T5SNA4.Visible = False
Qs.MultiPage1.Pages(4).T5NS4.Visible = False
Qs.MultiPage1.Pages(4).T5S4.Visible = False
End If
'-------
If [SECTION5].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY5.Value = [SECTION5].Offset(5, -3).Value
Qs.MultiPage1.Pages(4).T5SN5.Value = [SECTION5].Offset(5, -2).Value
Qs.MultiPage1.Pages(4).T5SNA5.Value = [SECTION5].Offset(5, -1).Value
Qs.MultiPage1.Pages(4).T5NS5.Caption = [SECTION5].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S5.Caption = [SECTION5].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY5.Visible = False
Qs.MultiPage1.Pages(4).T5SN5.Visible = False
Qs.MultiPage1.Pages(4).T5SNA5.Visible = False
Qs.MultiPage1.Pages(4).T5NS5.Visible = False
Qs.MultiPage1.Pages(4).T5S5.Visible = False
End If
'-------
If [SECTION5].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY6.Value = [SECTION5].Offset(6, -3).Value
Qs.MultiPage1.Pages(4).T5SN6.Value = [SECTION5].Offset(6, -2).Value
Qs.MultiPage1.Pages(4).T5SNA6.Value = [SECTION5].Offset(6, -1).Value
Qs.MultiPage1.Pages(4).T5NS6.Caption = [SECTION5].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S6.Caption = [SECTION5].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY6.Visible = False
Qs.MultiPage1.Pages(4).T5SN6.Visible = False
Qs.MultiPage1.Pages(4).T5SNA6.Visible = False
Qs.MultiPage1.Pages(4).T5NS6.Visible = False
Qs.MultiPage1.Pages(4).T5S6.Visible = False
End If
'-------
If [SECTION5].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY7.Value = [SECTION5].Offset(7, -3).Value
Qs.MultiPage1.Pages(4).T5SN7.Value = [SECTION5].Offset(7, -2).Value
Qs.MultiPage1.Pages(4).T5SNA7.Value = [SECTION5].Offset(7, -1).Value
Qs.MultiPage1.Pages(4).T5NS7.Caption = [SECTION5].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S7.Caption = [SECTION5].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY7.Visible = False
Qs.MultiPage1.Pages(4).T5SN7.Visible = False
Qs.MultiPage1.Pages(4).T5SNA7.Visible = False
Qs.MultiPage1.Pages(4).T5NS7.Visible = False
Qs.MultiPage1.Pages(4).T5S7.Visible = False
End If
'-------
If [SECTION5].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(4).T5SY8.Value = [SECTION5].Offset(8, -3).Value
Qs.MultiPage1.Pages(4).T5SN8.Value = [SECTION5].Offset(8, -2).Value
Qs.MultiPage1.Pages(4).T5SNA8.Value = [SECTION5].Offset(8, -1).Value
Qs.MultiPage1.Pages(4).T5NS8.Caption = [SECTION5].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(4).T5S8.Caption = [SECTION5].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(4).T5SY8.Visible = False
Qs.MultiPage1.Pages(4).T5SN8.Visible = False
Qs.MultiPage1.Pages(4).T5SNA8.Visible = False
Qs.MultiPage1.Pages(4).T5NS8.Visible = False
Qs.MultiPage1.Pages(4).T5S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION5].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(4).T5TB1.Text = [SECTION5].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(4).T5TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT6()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(5).Caption = [SECTION6].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(5).Frame6.Caption = [SECTION6].Offset(0, 1).Value
If [SECTION6].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY1.Value = [SECTION6].Offset(1, -3).Value
Qs.MultiPage1.Pages(5).T6SN1.Value = [SECTION6].Offset(1, -2).Value
Qs.MultiPage1.Pages(5).T6SNA1.Value = [SECTION6].Offset(1, -1).Value
Qs.MultiPage1.Pages(5).T6NS1.Caption = [SECTION6].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S1.Caption = [SECTION6].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY1.Visible = False
Qs.MultiPage1.Pages(5).T6SN1.Visible = False
Qs.MultiPage1.Pages(5).T6SNA1.Visible = False
Qs.MultiPage1.Pages(5).T6NS1.Visible = False
Qs.MultiPage1.Pages(5).T6S1.Visible = False
End If
'-------
If [SECTION6].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY2.Value = [SECTION6].Offset(2, -3).Value
Qs.MultiPage1.Pages(5).T6SN2.Value = [SECTION6].Offset(2, -2).Value
Qs.MultiPage1.Pages(5).T6SNA2.Value = [SECTION6].Offset(2, -1).Value
Qs.MultiPage1.Pages(5).T6NS2.Caption = [SECTION6].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S2.Caption = [SECTION6].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY2.Visible = False
Qs.MultiPage1.Pages(5).T6SN2.Visible = False
Qs.MultiPage1.Pages(5).T6SNA2.Visible = False
Qs.MultiPage1.Pages(5).T6NS2.Visible = False
Qs.MultiPage1.Pages(5).T6S2.Visible = False
End If
'-------
If [SECTION6].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY3.Value = [SECTION6].Offset(3, -3).Value
Qs.MultiPage1.Pages(5).T6SN3.Value = [SECTION6].Offset(3, -2).Value
Qs.MultiPage1.Pages(5).T6SNA3.Value = [SECTION6].Offset(3, -1).Value
Qs.MultiPage1.Pages(5).T6NS3.Caption = [SECTION6].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S3.Caption = [SECTION6].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY3.Visible = False
Qs.MultiPage1.Pages(5).T6SN3.Visible = False
Qs.MultiPage1.Pages(5).T6SNA3.Visible = False
Qs.MultiPage1.Pages(5).T6NS3.Visible = False
Qs.MultiPage1.Pages(5).T6S3.Visible = False
End If
'-------
If [SECTION6].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY4.Value = [SECTION6].Offset(4, -3).Value
Qs.MultiPage1.Pages(5).T6SN4.Value = [SECTION6].Offset(4, -2).Value
Qs.MultiPage1.Pages(5).T6SNA4.Value = [SECTION6].Offset(4, -1).Value
Qs.MultiPage1.Pages(5).T6NS4.Caption = [SECTION6].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S4.Caption = [SECTION6].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY4.Visible = False
Qs.MultiPage1.Pages(5).T6SN4.Visible = False
Qs.MultiPage1.Pages(5).T6SNA4.Visible = False
Qs.MultiPage1.Pages(5).T6NS4.Visible = False
Qs.MultiPage1.Pages(5).T6S4.Visible = False
End If
'-------
If [SECTION6].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY5.Value = [SECTION6].Offset(5, -3).Value
Qs.MultiPage1.Pages(5).T6SN5.Value = [SECTION6].Offset(5, -2).Value
Qs.MultiPage1.Pages(5).T6SNA5.Value = [SECTION6].Offset(5, -1).Value
Qs.MultiPage1.Pages(5).T6NS5.Caption = [SECTION6].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S5.Caption = [SECTION6].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY5.Visible = False
Qs.MultiPage1.Pages(5).T6SN5.Visible = False
Qs.MultiPage1.Pages(5).T6SNA5.Visible = False
Qs.MultiPage1.Pages(5).T6NS5.Visible = False
Qs.MultiPage1.Pages(5).T6S5.Visible = False
End If
'-------
If [SECTION6].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY6.Value = [SECTION6].Offset(6, -3).Value
Qs.MultiPage1.Pages(5).T6SN6.Value = [SECTION6].Offset(6, -2).Value
Qs.MultiPage1.Pages(5).T6SNA6.Value = [SECTION6].Offset(6, -1).Value
Qs.MultiPage1.Pages(5).T6NS6.Caption = [SECTION6].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S6.Caption = [SECTION6].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY6.Visible = False
Qs.MultiPage1.Pages(5).T6SN6.Visible = False
Qs.MultiPage1.Pages(5).T6SNA6.Visible = False
Qs.MultiPage1.Pages(5).T6NS6.Visible = False
Qs.MultiPage1.Pages(5).T6S6.Visible = False
End If
'-------
If [SECTION6].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY7.Value = [SECTION6].Offset(7, -3).Value
Qs.MultiPage1.Pages(5).T6SN7.Value = [SECTION6].Offset(7, -2).Value
Qs.MultiPage1.Pages(5).T6SNA7.Value = [SECTION6].Offset(7, -1).Value
Qs.MultiPage1.Pages(5).T6NS7.Caption = [SECTION6].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S7.Caption = [SECTION6].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY7.Visible = False
Qs.MultiPage1.Pages(5).T6SN7.Visible = False
Qs.MultiPage1.Pages(5).T6SNA7.Visible = False
Qs.MultiPage1.Pages(5).T6NS7.Visible = False
Qs.MultiPage1.Pages(5).T6S7.Visible = False
End If
'-------
If [SECTION6].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(5).T6SY8.Value = [SECTION6].Offset(8, -3).Value
Qs.MultiPage1.Pages(5).T6SN8.Value = [SECTION6].Offset(8, -2).Value
Qs.MultiPage1.Pages(5).T6SNA8.Value = [SECTION6].Offset(8, -1).Value
Qs.MultiPage1.Pages(5).T6NS8.Caption = [SECTION6].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(5).T6S8.Caption = [SECTION6].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(5).T6SY8.Visible = False
Qs.MultiPage1.Pages(5).T6SN8.Visible = False
Qs.MultiPage1.Pages(5).T6SNA8.Visible = False
Qs.MultiPage1.Pages(5).T6NS8.Visible = False
Qs.MultiPage1.Pages(5).T6S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION6].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(5).T6TB1.Text = [SECTION6].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(5).T6TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT7()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(6).Caption = [SECTION7].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(6).Frame7.Caption = [SECTION7].Offset(0, 1).Value
If [SECTION7].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY1.Value = [SECTION7].Offset(1, -3).Value
Qs.MultiPage1.Pages(6).T7SN1.Value = [SECTION7].Offset(1, -2).Value
Qs.MultiPage1.Pages(6).T7SNA1.Value = [SECTION7].Offset(1, -1).Value
Qs.MultiPage1.Pages(6).T7NS1.Caption = [SECTION7].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S1.Caption = [SECTION7].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY1.Visible = False
Qs.MultiPage1.Pages(6).T7SN1.Visible = False
Qs.MultiPage1.Pages(6).T7SNA1.Visible = False
Qs.MultiPage1.Pages(6).T7NS1.Visible = False
Qs.MultiPage1.Pages(6).T7S1.Visible = False
End If
'-------
If [SECTION7].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY2.Value = [SECTION7].Offset(2, -3).Value
Qs.MultiPage1.Pages(6).T7SN2.Value = [SECTION7].Offset(2, -2).Value
Qs.MultiPage1.Pages(6).T7SNA2.Value = [SECTION7].Offset(2, -1).Value
Qs.MultiPage1.Pages(6).T7NS2.Caption = [SECTION7].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S2.Caption = [SECTION7].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY2.Visible = False
Qs.MultiPage1.Pages(6).T7SN2.Visible = False
Qs.MultiPage1.Pages(6).T7SNA2.Visible = False
Qs.MultiPage1.Pages(6).T7NS2.Visible = False
Qs.MultiPage1.Pages(6).T7S2.Visible = False
End If
'-------
If [SECTION7].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY3.Value = [SECTION7].Offset(3, -3).Value
Qs.MultiPage1.Pages(6).T7SN3.Value = [SECTION7].Offset(3, -2).Value
Qs.MultiPage1.Pages(6).T7SNA3.Value = [SECTION7].Offset(3, -1).Value
Qs.MultiPage1.Pages(6).T7NS3.Caption = [SECTION7].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S3.Caption = [SECTION7].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY3.Visible = False
Qs.MultiPage1.Pages(6).T7SN3.Visible = False
Qs.MultiPage1.Pages(6).T7SNA3.Visible = False
Qs.MultiPage1.Pages(6).T7NS3.Visible = False
Qs.MultiPage1.Pages(6).T7S3.Visible = False
End If
'-------
If [SECTION7].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY4.Value = [SECTION7].Offset(4, -3).Value
Qs.MultiPage1.Pages(6).T7SN4.Value = [SECTION7].Offset(4, -2).Value
Qs.MultiPage1.Pages(6).T7SNA4.Value = [SECTION7].Offset(4, -1).Value
Qs.MultiPage1.Pages(6).T7NS4.Caption = [SECTION7].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S4.Caption = [SECTION7].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY4.Visible = False
Qs.MultiPage1.Pages(6).T7SN4.Visible = False
Qs.MultiPage1.Pages(6).T7SNA4.Visible = False
Qs.MultiPage1.Pages(6).T7NS4.Visible = False
Qs.MultiPage1.Pages(6).T7S4.Visible = False
End If
'-------
If [SECTION7].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY5.Value = [SECTION7].Offset(5, -3).Value
Qs.MultiPage1.Pages(6).T7SN5.Value = [SECTION7].Offset(5, -2).Value
Qs.MultiPage1.Pages(6).T7SNA5.Value = [SECTION7].Offset(5, -1).Value
Qs.MultiPage1.Pages(6).T7NS5.Caption = [SECTION7].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S5.Caption = [SECTION7].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY5.Visible = False
Qs.MultiPage1.Pages(6).T7SN5.Visible = False
Qs.MultiPage1.Pages(6).T7SNA5.Visible = False
Qs.MultiPage1.Pages(6).T7NS5.Visible = False
Qs.MultiPage1.Pages(6).T7S5.Visible = False
End If
'-------
If [SECTION7].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY6.Value = [SECTION7].Offset(6, -3).Value
Qs.MultiPage1.Pages(6).T7SN6.Value = [SECTION7].Offset(6, -2).Value
Qs.MultiPage1.Pages(6).T7SNA6.Value = [SECTION7].Offset(6, -1).Value
Qs.MultiPage1.Pages(6).T7NS6.Caption = [SECTION7].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S6.Caption = [SECTION7].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY6.Visible = False
Qs.MultiPage1.Pages(6).T7SN6.Visible = False
Qs.MultiPage1.Pages(6).T7SNA6.Visible = False
Qs.MultiPage1.Pages(6).T7NS6.Visible = False
Qs.MultiPage1.Pages(6).T7S6.Visible = False
End If
'-------
If [SECTION7].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY7.Value = [SECTION7].Offset(7, -3).Value
Qs.MultiPage1.Pages(6).T7SN7.Value = [SECTION7].Offset(7, -2).Value
Qs.MultiPage1.Pages(6).T7SNA7.Value = [SECTION7].Offset(7, -1).Value
Qs.MultiPage1.Pages(6).T7NS7.Caption = [SECTION7].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S7.Caption = [SECTION7].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY7.Visible = False
Qs.MultiPage1.Pages(6).T7SN7.Visible = False
Qs.MultiPage1.Pages(6).T7SNA7.Visible = False
Qs.MultiPage1.Pages(6).T7NS7.Visible = False
Qs.MultiPage1.Pages(6).T7S7.Visible = False
End If
'-------
If [SECTION7].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(6).T7SY8.Value = [SECTION7].Offset(8, -3).Value
Qs.MultiPage1.Pages(6).T7SN8.Value = [SECTION7].Offset(8, -2).Value
Qs.MultiPage1.Pages(6).T7SNA8.Value = [SECTION7].Offset(8, -1).Value
Qs.MultiPage1.Pages(6).T7NS8.Caption = [SECTION7].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(6).T7S8.Caption = [SECTION7].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(6).T7SY8.Visible = False
Qs.MultiPage1.Pages(6).T7SN8.Visible = False
Qs.MultiPage1.Pages(6).T7SNA8.Visible = False
Qs.MultiPage1.Pages(6).T7NS8.Visible = False
Qs.MultiPage1.Pages(6).T7S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION7].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(6).T7TB1.Text = [SECTION7].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(6).T7TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT8()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(7).Caption = [SECTION8].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(7).Frame8.Caption = [SECTION8].Offset(0, 1).Value
If [SECTION8].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY1.Value = [SECTION8].Offset(1, -3).Value
Qs.MultiPage1.Pages(7).T8SN1.Value = [SECTION8].Offset(1, -2).Value
Qs.MultiPage1.Pages(7).T8SNA1.Value = [SECTION8].Offset(1, -1).Value
Qs.MultiPage1.Pages(7).T8NS1.Caption = [SECTION8].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S1.Caption = [SECTION8].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY1.Visible = False
Qs.MultiPage1.Pages(7).T8SN1.Visible = False
Qs.MultiPage1.Pages(7).T8SNA1.Visible = False
Qs.MultiPage1.Pages(7).T8NS1.Visible = False
Qs.MultiPage1.Pages(7).T8S1.Visible = False
End If
'-------
If [SECTION8].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY2.Value = [SECTION8].Offset(2, -3).Value
Qs.MultiPage1.Pages(7).T8SN2.Value = [SECTION8].Offset(2, -2).Value
Qs.MultiPage1.Pages(7).T8SNA2.Value = [SECTION8].Offset(2, -1).Value
Qs.MultiPage1.Pages(7).T8NS2.Caption = [SECTION8].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S2.Caption = [SECTION8].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY2.Visible = False
Qs.MultiPage1.Pages(7).T8SN2.Visible = False
Qs.MultiPage1.Pages(7).T8SNA2.Visible = False
Qs.MultiPage1.Pages(7).T8NS2.Visible = False
Qs.MultiPage1.Pages(7).T8S2.Visible = False
End If
'-------
If [SECTION8].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY3.Value = [SECTION8].Offset(3, -3).Value
Qs.MultiPage1.Pages(7).T8SN3.Value = [SECTION8].Offset(3, -2).Value
Qs.MultiPage1.Pages(7).T8SNA3.Value = [SECTION8].Offset(3, -1).Value
Qs.MultiPage1.Pages(7).T8NS3.Caption = [SECTION8].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S3.Caption = [SECTION8].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY3.Visible = False
Qs.MultiPage1.Pages(7).T8SN3.Visible = False
Qs.MultiPage1.Pages(7).T8SNA3.Visible = False
Qs.MultiPage1.Pages(7).T8NS3.Visible = False
Qs.MultiPage1.Pages(7).T8S3.Visible = False
End If
'-------
If [SECTION8].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY4.Value = [SECTION8].Offset(4, -3).Value
Qs.MultiPage1.Pages(7).T8SN4.Value = [SECTION8].Offset(4, -2).Value
Qs.MultiPage1.Pages(7).T8SNA4.Value = [SECTION8].Offset(4, -1).Value
Qs.MultiPage1.Pages(7).T8NS4.Caption = [SECTION8].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S4.Caption = [SECTION8].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY4.Visible = False
Qs.MultiPage1.Pages(7).T8SN4.Visible = False
Qs.MultiPage1.Pages(7).T8SNA4.Visible = False
Qs.MultiPage1.Pages(7).T8NS4.Visible = False
Qs.MultiPage1.Pages(7).T8S4.Visible = False
End If
'-------
If [SECTION8].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY5.Value = [SECTION8].Offset(5, -3).Value
Qs.MultiPage1.Pages(7).T8SN5.Value = [SECTION8].Offset(5, -2).Value
Qs.MultiPage1.Pages(7).T8SNA5.Value = [SECTION8].Offset(5, -1).Value
Qs.MultiPage1.Pages(7).T8NS5.Caption = [SECTION8].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S5.Caption = [SECTION8].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY5.Visible = False
Qs.MultiPage1.Pages(7).T8SN5.Visible = False
Qs.MultiPage1.Pages(7).T8SNA5.Visible = False
Qs.MultiPage1.Pages(7).T8NS5.Visible = False
Qs.MultiPage1.Pages(7).T8S5.Visible = False
End If
'-------
If [SECTION8].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY6.Value = [SECTION8].Offset(6, -3).Value
Qs.MultiPage1.Pages(7).T8SN6.Value = [SECTION8].Offset(6, -2).Value
Qs.MultiPage1.Pages(7).T8SNA6.Value = [SECTION8].Offset(6, -1).Value
Qs.MultiPage1.Pages(7).T8NS6.Caption = [SECTION8].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S6.Caption = [SECTION8].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY6.Visible = False
Qs.MultiPage1.Pages(7).T8SN6.Visible = False
Qs.MultiPage1.Pages(7).T8SNA6.Visible = False
Qs.MultiPage1.Pages(7).T8NS6.Visible = False
Qs.MultiPage1.Pages(7).T8S6.Visible = False
End If
'-------
If [SECTION8].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY7.Value = [SECTION8].Offset(7, -3).Value
Qs.MultiPage1.Pages(7).T8SN7.Value = [SECTION8].Offset(7, -2).Value
Qs.MultiPage1.Pages(7).T8SNA7.Value = [SECTION8].Offset(7, -1).Value
Qs.MultiPage1.Pages(7).T8NS7.Caption = [SECTION8].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S7.Caption = [SECTION8].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY7.Visible = False
Qs.MultiPage1.Pages(7).T8SN7.Visible = False
Qs.MultiPage1.Pages(7).T8SNA7.Visible = False
Qs.MultiPage1.Pages(7).T8NS7.Visible = False
Qs.MultiPage1.Pages(7).T8S7.Visible = False
End If
'-------
If [SECTION8].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(7).T8SY8.Value = [SECTION8].Offset(8, -3).Value
Qs.MultiPage1.Pages(7).T8SN8.Value = [SECTION8].Offset(8, -2).Value
Qs.MultiPage1.Pages(7).T8SNA8.Value = [SECTION8].Offset(8, -1).Value
Qs.MultiPage1.Pages(7).T8NS8.Caption = [SECTION8].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(7).T8S8.Caption = [SECTION8].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(7).T8SY8.Visible = False
Qs.MultiPage1.Pages(7).T8SN8.Visible = False
Qs.MultiPage1.Pages(7).T8SNA8.Visible = False
Qs.MultiPage1.Pages(7).T8NS8.Visible = False
Qs.MultiPage1.Pages(7).T8S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION8].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(7).T8TB1.Text = [SECTION8].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(7).T8TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT9()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(8).Caption = [SECTION9].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(8).Frame9.Caption = [SECTION9].Offset(0, 1).Value
If [SECTION9].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY1.Value = [SECTION9].Offset(1, -3).Value
Qs.MultiPage1.Pages(8).T9SN1.Value = [SECTION9].Offset(1, -2).Value
Qs.MultiPage1.Pages(8).T9SNA1.Value = [SECTION9].Offset(1, -1).Value
Qs.MultiPage1.Pages(8).T9NS1.Caption = [SECTION9].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S1.Caption = [SECTION9].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY1.Visible = False
Qs.MultiPage1.Pages(8).T9SN1.Visible = False
Qs.MultiPage1.Pages(8).T9SNA1.Visible = False
Qs.MultiPage1.Pages(8).T9NS1.Visible = False
Qs.MultiPage1.Pages(8).T9S1.Visible = False
End If
'-------
If [SECTION9].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY2.Value = [SECTION9].Offset(2, -3).Value
Qs.MultiPage1.Pages(8).T9SN2.Value = [SECTION9].Offset(2, -2).Value
Qs.MultiPage1.Pages(8).T9SNA2.Value = [SECTION9].Offset(2, -1).Value
Qs.MultiPage1.Pages(8).T9NS2.Caption = [SECTION9].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S2.Caption = [SECTION9].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY2.Visible = False
Qs.MultiPage1.Pages(8).T9SN2.Visible = False
Qs.MultiPage1.Pages(8).T9SNA2.Visible = False
Qs.MultiPage1.Pages(8).T9NS2.Visible = False
Qs.MultiPage1.Pages(8).T9S2.Visible = False
End If
'-------
If [SECTION9].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY3.Value = [SECTION9].Offset(3, -3).Value
Qs.MultiPage1.Pages(8).T9SN3.Value = [SECTION9].Offset(3, -2).Value
Qs.MultiPage1.Pages(8).T9SNA3.Value = [SECTION9].Offset(3, -1).Value
Qs.MultiPage1.Pages(8).T9NS3.Caption = [SECTION9].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S3.Caption = [SECTION9].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY3.Visible = False
Qs.MultiPage1.Pages(8).T9SN3.Visible = False
Qs.MultiPage1.Pages(8).T9SNA3.Visible = False
Qs.MultiPage1.Pages(8).T9NS3.Visible = False
Qs.MultiPage1.Pages(8).T9S3.Visible = False
End If
'-------
If [SECTION9].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY4.Value = [SECTION9].Offset(4, -3).Value
Qs.MultiPage1.Pages(8).T9SN4.Value = [SECTION9].Offset(4, -2).Value
Qs.MultiPage1.Pages(8).T9SNA4.Value = [SECTION9].Offset(4, -1).Value
Qs.MultiPage1.Pages(8).T9NS4.Caption = [SECTION9].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S4.Caption = [SECTION9].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY4.Visible = False
Qs.MultiPage1.Pages(8).T9SN4.Visible = False
Qs.MultiPage1.Pages(8).T9SNA4.Visible = False
Qs.MultiPage1.Pages(8).T9NS4.Visible = False
Qs.MultiPage1.Pages(8).T9S4.Visible = False
End If
'-------
If [SECTION9].Offset(5, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY5.Value = [SECTION9].Offset(5, -3).Value
Qs.MultiPage1.Pages(8).T9SN5.Value = [SECTION9].Offset(5, -2).Value
Qs.MultiPage1.Pages(8).T9SNA5.Value = [SECTION9].Offset(5, -1).Value
Qs.MultiPage1.Pages(8).T9NS5.Caption = [SECTION9].Offset(5, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S5.Caption = [SECTION9].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY5.Visible = False
Qs.MultiPage1.Pages(8).T9SN5.Visible = False
Qs.MultiPage1.Pages(8).T9SNA5.Visible = False
Qs.MultiPage1.Pages(8).T9NS5.Visible = False
Qs.MultiPage1.Pages(8).T9S5.Visible = False
End If
'-------
If [SECTION9].Offset(6, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY6.Value = [SECTION9].Offset(6, -3).Value
Qs.MultiPage1.Pages(8).T9SN6.Value = [SECTION9].Offset(6, -2).Value
Qs.MultiPage1.Pages(8).T9SNA6.Value = [SECTION9].Offset(6, -1).Value
Qs.MultiPage1.Pages(8).T9NS6.Caption = [SECTION9].Offset(6, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S6.Caption = [SECTION9].Offset(6, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY6.Visible = False
Qs.MultiPage1.Pages(8).T9SN6.Visible = False
Qs.MultiPage1.Pages(8).T9SNA6.Visible = False
Qs.MultiPage1.Pages(8).T9NS6.Visible = False
Qs.MultiPage1.Pages(8).T9S6.Visible = False
End If
'-------
If [SECTION9].Offset(7, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY7.Value = [SECTION9].Offset(7, -3).Value
Qs.MultiPage1.Pages(8).T9SN7.Value = [SECTION9].Offset(7, -2).Value
Qs.MultiPage1.Pages(8).T9SNA7.Value = [SECTION9].Offset(7, -1).Value
Qs.MultiPage1.Pages(8).T9NS7.Caption = [SECTION9].Offset(7, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S7.Caption = [SECTION9].Offset(7, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY7.Visible = False
Qs.MultiPage1.Pages(8).T9SN7.Visible = False
Qs.MultiPage1.Pages(8).T9SNA7.Visible = False
Qs.MultiPage1.Pages(8).T9NS7.Visible = False
Qs.MultiPage1.Pages(8).T9S7.Visible = False
End If
'-------
If [SECTION9].Offset(8, 0) <> "" Then
Qs.MultiPage1.Pages(8).T9SY8.Value = [SECTION9].Offset(8, -3).Value
Qs.MultiPage1.Pages(8).T9SN8.Value = [SECTION9].Offset(8, -2).Value
Qs.MultiPage1.Pages(8).T9SNA8.Value = [SECTION9].Offset(8, -1).Value
Qs.MultiPage1.Pages(8).T9NS8.Caption = [SECTION9].Offset(8, 0).Value & ")"
Qs.MultiPage1.Pages(8).T9S8.Caption = [SECTION9].Offset(8, 1).Value
Else
Qs.MultiPage1.Pages(8).T9SY8.Visible = False
Qs.MultiPage1.Pages(8).T9SN8.Visible = False
Qs.MultiPage1.Pages(8).T9SNA8.Visible = False
Qs.MultiPage1.Pages(8).T9NS8.Visible = False
Qs.MultiPage1.Pages(8).T9S8.Visible = False
End If
'------Tab Text Box----------
If [SECTION9].Offset(9, 1) <> "" Then
Qs.MultiPage1.Pages(8).T9TB1.Text = [SECTION9].Offset(9, 1).Value
Else
Qs.MultiPage1.Pages(8).T9TB1.Visible = False
End If
'-------
End Sub

Sub GetDataT0()
'----------Tab Name Text Box ----------
Qs.MultiPage1.Pages(9).Caption = [SECTION0].Value
'----------Tab Header Text Box ----------
Qs.MultiPage1.Pages(9).Frame10.Caption = [SECTION0].Offset(0, 1).Value
If [SECTION0].Offset(1, 0) <> "" Then
Qs.MultiPage1.Pages(9).T0SY1.Value = [SECTION0].Offset(1, -3).Value
Qs.MultiPage1.Pages(9).T0SN1.Value = [SECTION0].Offset(1, -2).Value
Qs.MultiPage1.Pages(9).T0SNA1.Value = [SECTION0].Offset(1, -1).Value
Qs.MultiPage1.Pages(9).T0NS1.Caption = [SECTION0].Offset(1, 0).Value & ")"
Qs.MultiPage1.Pages(9).T0S1.Caption = [SECTION0].Offset(1, 1).Value
Else
Qs.MultiPage1.Pages(9).T0SY1.Visible = False
Qs.MultiPage1.Pages(9).T0SN1.Visible = False
Qs.MultiPage1.Pages(9).T0SNA1.Visible = False
Qs.MultiPage1.Pages(9).T0NS1.Visible = False
Qs.MultiPage1.Pages(9).T0S1.Visible = False
End If
'-------
If [SECTION0].Offset(2, 0) <> "" Then
Qs.MultiPage1.Pages(9).T0SY2.Value = [SECTION0].Offset(2, -3).Value
Qs.MultiPage1.Pages(9).T0SN2.Value = [SECTION0].Offset(2, -2).Value
Qs.MultiPage1.Pages(9).T0SNA2.Value = [SECTION0].Offset(2, -1).Value
Qs.MultiPage1.Pages(9).T0NS2.Caption = [SECTION0].Offset(2, 0).Value & ")"
Qs.MultiPage1.Pages(9).T0S2.Caption = [SECTION0].Offset(2, 1).Value
Else
Qs.MultiPage1.Pages(9).T0SY2.Visible = False
Qs.MultiPage1.Pages(9).T0SN2.Visible = False
Qs.MultiPage1.Pages(9).T0SNA2.Visible = False
Qs.MultiPage1.Pages(9).T0NS2.Visible = False
Qs.MultiPage1.Pages(9).T0S2.Visible = False
End If
'-------
If [SECTION0].Offset(3, 0) <> "" Then
Qs.MultiPage1.Pages(9).T0SY3.Value = [SECTION0].Offset(3, -3).Value
Qs.MultiPage1.Pages(9).T0SN3.Value = [SECTION0].Offset(3, -2).Value
Qs.MultiPage1.Pages(9).T0SNA3.Value = [SECTION0].Offset(3, -1).Value
Qs.MultiPage1.Pages(9).T0NS3.Caption = [SECTION0].Offset(3, 0).Value & ")"
Qs.MultiPage1.Pages(9).T0S3.Caption = [SECTION0].Offset(3, 1).Value
Else
Qs.MultiPage1.Pages(9).T0SY3.Visible = False
Qs.MultiPage1.Pages(9).T0SN3.Visible = False
Qs.MultiPage1.Pages(9).T0SNA3.Visible = False
Qs.MultiPage1.Pages(9).T0NS3.Visible = False
Qs.MultiPage1.Pages(9).T0S3.Visible = False
End If
'-------
If [SECTION0].Offset(4, 0) <> "" Then
Qs.MultiPage1.Pages(9).T0SY4.Value = [SECTION0].Offset(4, -3).Value
Qs.MultiPage1.Pages(9).T0SN4.Value = [SECTION0].Offset(4, -2).Value
Qs.MultiPage1.Pages(9).T0SNA4.Value = [SECTION0].Offset(4, -1).Value
Qs.MultiPage1.Pages(9).T0NS4.Caption = [SECTION0].Offset(4, 0).Value & ")"
Qs.MultiPage1.Pages(9).T0S4.Caption = [SECTION0].Offset(4, 1).Value
Else
Qs.MultiPage1.Pages(9).T0SY4.Visible = False
Qs.MultiPage1.Pages(9).T0SN4.Visible = False
Qs.MultiPage1.Pages(9).T0SNA4.Visible = False
Qs.MultiPage1.Pages(9).T0NS4.Visible = False
Qs.MultiPage1.Pages(9).T0S4.Visible = False
End If

'------Tab Text Box----------
If [SECTION0].Offset(5, 1) <> "" Then
Qs.MultiPage1.Pages(9).T0TB1.Text = [SECTION0].Offset(5, 1).Value
Else
Qs.MultiPage1.Pages(9).T0TB1.Visible = False
End If
'-------
End Sub

Sub SendDataT1()
'------------
[SECTION1].Offset(1, 2).Value = Qs.MultiPage1.Pages(0).T1S1Ver.Value
[SECTION1].Offset(1, 3).Value = Qs.MultiPage1.Pages(0).T1S1Notes.Value
'------------
[SECTION1].Offset(2, 2).Value = Qs.MultiPage1.Pages(0).T1S2Ver.Value
[SECTION1].Offset(2, 3).Value = Qs.MultiPage1.Pages(0).T1S2Notes.Value
'------------
[SECTION1].Offset(3, 2).Value = Qs.MultiPage1.Pages(0).T1S3Ver.Value
[SECTION1].Offset(3, 3).Value = Qs.MultiPage1.Pages(0).T1S3Notes.Value
'------------
[SECTION1].Offset(4, 2).Value = Qs.MultiPage1.Pages(0).T1S4Ver.Value
[SECTION1].Offset(4, 3).Value = Qs.MultiPage1.Pages(0).T1S4Notes.Value
'------------
[SECTION1].Offset(5, 2).Value = Qs.MultiPage1.Pages(0).T1S5Ver.Value
[SECTION1].Offset(5, 3).Value = Qs.MultiPage1.Pages(0).T1S5Notes.Value
'------------
[SECTION1].Offset(6, 2).Value = Qs.MultiPage1.Pages(0).T1S6Ver.Value
[SECTION1].Offset(6, 3).Value = Qs.MultiPage1.Pages(0).T1S6Notes.Value
'------------
[SECTION1].Offset(7, 2).Value = Qs.MultiPage1.Pages(0).T1S7Ver.Value
[SECTION1].Offset(7, 3).Value = Qs.MultiPage1.Pages(0).T1S7Notes.Value
'------------
[SECTION1].Offset(8, 2).Value = Qs.MultiPage1.Pages(0).T1S8Ver.Value
[SECTION1].Offset(8, 3).Value = Qs.MultiPage1.Pages(0).T1S8Notes.Value
'------------

End Sub


Sub SendDataT2()
'------------
[SECTION2].Offset(1, -3).Value = Qs.MultiPage1.Pages(1).T2SY1.Value
[SECTION2].Offset(1, -2).Value = Qs.MultiPage1.Pages(1).T2SN1.Value
[SECTION2].Offset(1, -1).Value = Qs.MultiPage1.Pages(1).T2SNA1.Value
'------------
[SECTION2].Offset(2, -3).Value = Qs.MultiPage1.Pages(1).T2SY2.Value
[SECTION2].Offset(2, -2).Value = Qs.MultiPage1.Pages(1).T2SN2.Value
[SECTION2].Offset(2, -1).Value = Qs.MultiPage1.Pages(1).T2SNA2.Value
'------------
[SECTION2].Offset(3, -3).Value = Qs.MultiPage1.Pages(1).T2SY3.Value
[SECTION2].Offset(3, -2).Value = Qs.MultiPage1.Pages(1).T2SN3.Value
[SECTION2].Offset(3, -1).Value = Qs.MultiPage1.Pages(1).T2SNA3.Value
'------------
[SECTION2].Offset(4, -3).Value = Qs.MultiPage1.Pages(1).T2SY4.Value
[SECTION2].Offset(4, -2).Value = Qs.MultiPage1.Pages(1).T2SN4.Value
[SECTION2].Offset(4, -1).Value = Qs.MultiPage1.Pages(1).T2SNA4.Value
'------------
[SECTION2].Offset(5, -3).Value = Qs.MultiPage1.Pages(1).T2SY5.Value
[SECTION2].Offset(5, -2).Value = Qs.MultiPage1.Pages(1).T2SN5.Value
[SECTION2].Offset(5, -1).Value = Qs.MultiPage1.Pages(1).T2SNA5.Value
'------------
[SECTION2].Offset(6, -3).Value = Qs.MultiPage1.Pages(1).T2SY6.Value
[SECTION2].Offset(6, -2).Value = Qs.MultiPage1.Pages(1).T2SN6.Value
[SECTION2].Offset(6, -1).Value = Qs.MultiPage1.Pages(1).T2SNA6.Value
'------------
[SECTION2].Offset(7, -3).Value = Qs.MultiPage1.Pages(1).T2SY7.Value
[SECTION2].Offset(7, -2).Value = Qs.MultiPage1.Pages(1).T2SN7.Value
[SECTION2].Offset(7, -1).Value = Qs.MultiPage1.Pages(1).T2SNA7.Value
'------------
[SECTION2].Offset(8, -3).Value = Qs.MultiPage1.Pages(1).T2SY8.Value
[SECTION2].Offset(8, -2).Value = Qs.MultiPage1.Pages(1).T2SN8.Value
[SECTION2].Offset(8, -1).Value = Qs.MultiPage1.Pages(1).T2SNA8.Value
'----------Tab Text Box----------
[SECTION2].Offset(9, 1).Value = Qs.MultiPage1.Pages(1).T2TB1.Text
End Sub


Sub SendDataT3()
'------------
[SECTION3].Offset(1, -3).Value = Qs.MultiPage1.Pages(2).T3SY1.Value
[SECTION3].Offset(1, -2).Value = Qs.MultiPage1.Pages(2).T3SN1.Value
[SECTION3].Offset(1, -1).Value = Qs.MultiPage1.Pages(2).T3SNA1.Value
'------------
[SECTION3].Offset(2, -3).Value = Qs.MultiPage1.Pages(2).T3SY2.Value
[SECTION3].Offset(2, -2).Value = Qs.MultiPage1.Pages(2).T3SN2.Value
[SECTION3].Offset(2, -1).Value = Qs.MultiPage1.Pages(2).T3SNA2.Value
'------------
[SECTION3].Offset(3, -3).Value = Qs.MultiPage1.Pages(2).T3SY3.Value
[SECTION3].Offset(3, -2).Value = Qs.MultiPage1.Pages(2).T3SN3.Value
[SECTION3].Offset(3, -1).Value = Qs.MultiPage1.Pages(2).T3SNA3.Value
'------------
[SECTION3].Offset(4, -3).Value = Qs.MultiPage1.Pages(2).T3SY4.Value
[SECTION3].Offset(4, -2).Value = Qs.MultiPage1.Pages(2).T3SN4.Value
[SECTION3].Offset(4, -1).Value = Qs.MultiPage1.Pages(2).T3SNA4.Value
'------------
[SECTION3].Offset(5, -3).Value = Qs.MultiPage1.Pages(2).T3SY5.Value
[SECTION3].Offset(5, -2).Value = Qs.MultiPage1.Pages(2).T3SN5.Value
[SECTION3].Offset(5, -1).Value = Qs.MultiPage1.Pages(2).T3SNA5.Value
'------------
[SECTION3].Offset(6, -3).Value = Qs.MultiPage1.Pages(2).T3SY6.Value
[SECTION3].Offset(6, -2).Value = Qs.MultiPage1.Pages(2).T3SN6.Value
[SECTION3].Offset(6, -1).Value = Qs.MultiPage1.Pages(2).T3SNA6.Value
'------------
[SECTION3].Offset(7, -3).Value = Qs.MultiPage1.Pages(2).T3SY7.Value
[SECTION3].Offset(7, -2).Value = Qs.MultiPage1.Pages(2).T3SN7.Value
[SECTION3].Offset(7, -1).Value = Qs.MultiPage1.Pages(2).T3SNA7.Value
'------------
[SECTION3].Offset(8, -3).Value = Qs.MultiPage1.Pages(2).T3SY8.Value
[SECTION3].Offset(8, -2).Value = Qs.MultiPage1.Pages(2).T3SN8.Value
[SECTION3].Offset(8, -1).Value = Qs.MultiPage1.Pages(2).T3SNA8.Value
'----------Tab Text Box----------
[SECTION3].Offset(9, 1).Value = Qs.MultiPage1.Pages(2).T3TB1.Text
End Sub

Sub SendDataT4()
'------------
[SECTION4].Offset(1, -3).Value = Qs.MultiPage1.Pages(3).T4SY1.Value
[SECTION4].Offset(1, -2).Value = Qs.MultiPage1.Pages(3).T4SN1.Value
[SECTION4].Offset(1, -1).Value = Qs.MultiPage1.Pages(3).T4SNA1.Value
'------------
[SECTION4].Offset(2, -3).Value = Qs.MultiPage1.Pages(3).T4SY2.Value
[SECTION4].Offset(2, -2).Value = Qs.MultiPage1.Pages(3).T4SN2.Value
[SECTION4].Offset(2, -1).Value = Qs.MultiPage1.Pages(3).T4SNA2.Value
'------------
[SECTION4].Offset(3, -3).Value = Qs.MultiPage1.Pages(3).T4SY3.Value
[SECTION4].Offset(3, -2).Value = Qs.MultiPage1.Pages(3).T4SN3.Value
[SECTION4].Offset(3, -1).Value = Qs.MultiPage1.Pages(3).T4SNA3.Value
'------------
[SECTION4].Offset(4, -3).Value = Qs.MultiPage1.Pages(3).T4SY4.Value
[SECTION4].Offset(4, -2).Value = Qs.MultiPage1.Pages(3).T4SN4.Value
[SECTION4].Offset(4, -1).Value = Qs.MultiPage1.Pages(3).T4SNA4.Value
'------------
[SECTION4].Offset(5, -3).Value = Qs.MultiPage1.Pages(3).T4SY5.Value
[SECTION4].Offset(5, -2).Value = Qs.MultiPage1.Pages(3).T4SN5.Value
[SECTION4].Offset(5, -1).Value = Qs.MultiPage1.Pages(3).T4SNA5.Value
'------------
[SECTION4].Offset(6, -3).Value = Qs.MultiPage1.Pages(3).T4SY6.Value
[SECTION4].Offset(6, -2).Value = Qs.MultiPage1.Pages(3).T4SN6.Value
[SECTION4].Offset(6, -1).Value = Qs.MultiPage1.Pages(3).T4SNA6.Value
'------------
[SECTION4].Offset(7, -3).Value = Qs.MultiPage1.Pages(3).T4SY7.Value
[SECTION4].Offset(7, -2).Value = Qs.MultiPage1.Pages(3).T4SN7.Value
[SECTION4].Offset(7, -1).Value = Qs.MultiPage1.Pages(3).T4SNA7.Value
'------------
[SECTION4].Offset(8, -3).Value = Qs.MultiPage1.Pages(3).T4SY8.Value
[SECTION4].Offset(8, -2).Value = Qs.MultiPage1.Pages(3).T4SN8.Value
[SECTION4].Offset(8, -1).Value = Qs.MultiPage1.Pages(3).T4SNA8.Value
'----------Tab Text Box----------
[SECTION4].Offset(9, 1).Value = Qs.MultiPage1.Pages(3).T4TB1.Text
End Sub

Sub SendDataT5()
'------------
[SECTION5].Offset(1, -3).Value = Qs.MultiPage1.Pages(4).T5SY1.Value
[SECTION5].Offset(1, -2).Value = Qs.MultiPage1.Pages(4).T5SN1.Value
[SECTION5].Offset(1, -1).Value = Qs.MultiPage1.Pages(4).T5SNA1.Value
'------------
[SECTION5].Offset(2, -3).Value = Qs.MultiPage1.Pages(4).T5SY2.Value
[SECTION5].Offset(2, -2).Value = Qs.MultiPage1.Pages(4).T5SN2.Value
[SECTION5].Offset(2, -1).Value = Qs.MultiPage1.Pages(4).T5SNA2.Value
'------------
[SECTION5].Offset(3, -3).Value = Qs.MultiPage1.Pages(4).T5SY3.Value
[SECTION5].Offset(3, -2).Value = Qs.MultiPage1.Pages(4).T5SN3.Value
[SECTION5].Offset(3, -1).Value = Qs.MultiPage1.Pages(4).T5SNA3.Value
'------------
[SECTION5].Offset(4, -3).Value = Qs.MultiPage1.Pages(4).T5SY4.Value
[SECTION5].Offset(4, -2).Value = Qs.MultiPage1.Pages(4).T5SN4.Value
[SECTION5].Offset(4, -1).Value = Qs.MultiPage1.Pages(4).T5SNA4.Value
'------------
[SECTION5].Offset(5, -3).Value = Qs.MultiPage1.Pages(4).T5SY5.Value
[SECTION5].Offset(5, -2).Value = Qs.MultiPage1.Pages(4).T5SN5.Value
[SECTION5].Offset(5, -1).Value = Qs.MultiPage1.Pages(4).T5SNA5.Value
'------------
[SECTION5].Offset(6, -3).Value = Qs.MultiPage1.Pages(4).T5SY6.Value
[SECTION5].Offset(6, -2).Value = Qs.MultiPage1.Pages(4).T5SN6.Value
[SECTION5].Offset(6, -1).Value = Qs.MultiPage1.Pages(4).T5SNA6.Value
'------------
[SECTION5].Offset(7, -3).Value = Qs.MultiPage1.Pages(4).T5SY7.Value
[SECTION5].Offset(7, -2).Value = Qs.MultiPage1.Pages(4).T5SN7.Value
[SECTION5].Offset(7, -1).Value = Qs.MultiPage1.Pages(4).T5SNA7.Value
'------------
[SECTION5].Offset(8, -3).Value = Qs.MultiPage1.Pages(4).T5SY8.Value
[SECTION5].Offset(8, -2).Value = Qs.MultiPage1.Pages(4).T5SN8.Value
[SECTION5].Offset(8, -1).Value = Qs.MultiPage1.Pages(4).T5SNA8.Value
'----------Tab Text Box----------
[SECTION5].Offset(9, 1).Value = Qs.MultiPage1.Pages(4).T5TB1.Text
End Sub


Sub SendDataT6()
'------------
[SECTION6].Offset(1, -3).Value = Qs.MultiPage1.Pages(5).T6SY1.Value
[SECTION6].Offset(1, -2).Value = Qs.MultiPage1.Pages(5).T6SN1.Value
[SECTION6].Offset(1, -1).Value = Qs.MultiPage1.Pages(5).T6SNA1.Value
'------------
[SECTION6].Offset(2, -3).Value = Qs.MultiPage1.Pages(5).T6SY2.Value
[SECTION6].Offset(2, -2).Value = Qs.MultiPage1.Pages(5).T6SN2.Value
[SECTION6].Offset(2, -1).Value = Qs.MultiPage1.Pages(5).T6SNA2.Value
'------------
[SECTION6].Offset(3, -3).Value = Qs.MultiPage1.Pages(5).T6SY3.Value
[SECTION6].Offset(3, -2).Value = Qs.MultiPage1.Pages(5).T6SN3.Value
[SECTION6].Offset(3, -1).Value = Qs.MultiPage1.Pages(5).T6SNA3.Value
'------------
[SECTION6].Offset(4, -3).Value = Qs.MultiPage1.Pages(5).T6SY4.Value
[SECTION6].Offset(4, -2).Value = Qs.MultiPage1.Pages(5).T6SN4.Value
[SECTION6].Offset(4, -1).Value = Qs.MultiPage1.Pages(5).T6SNA4.Value
'------------
[SECTION6].Offset(5, -3).Value = Qs.MultiPage1.Pages(5).T6SY5.Value
[SECTION6].Offset(5, -2).Value = Qs.MultiPage1.Pages(5).T6SN5.Value
[SECTION6].Offset(5, -1).Value = Qs.MultiPage1.Pages(5).T6SNA5.Value
'------------
[SECTION6].Offset(6, -3).Value = Qs.MultiPage1.Pages(5).T6SY6.Value
[SECTION6].Offset(6, -2).Value = Qs.MultiPage1.Pages(5).T6SN6.Value
[SECTION6].Offset(6, -1).Value = Qs.MultiPage1.Pages(5).T6SNA6.Value
'------------
[SECTION6].Offset(7, -3).Value = Qs.MultiPage1.Pages(5).T6SY7.Value
[SECTION6].Offset(7, -2).Value = Qs.MultiPage1.Pages(5).T6SN7.Value
[SECTION6].Offset(7, -1).Value = Qs.MultiPage1.Pages(5).T6SNA7.Value
'------------
[SECTION6].Offset(8, -3).Value = Qs.MultiPage1.Pages(5).T6SY8.Value
[SECTION6].Offset(8, -2).Value = Qs.MultiPage1.Pages(5).T6SN8.Value
[SECTION6].Offset(8, -1).Value = Qs.MultiPage1.Pages(5).T6SNA8.Value
'----------Tab Text Box----------
[SECTION6].Offset(9, 1).Value = Qs.MultiPage1.Pages(5).T6TB1.Text
End Sub

Sub SendDataT7()
'------------
[SECTION7].Offset(1, -3).Value = Qs.MultiPage1.Pages(6).T7SY1.Value
[SECTION7].Offset(1, -2).Value = Qs.MultiPage1.Pages(6).T7SN1.Value
[SECTION7].Offset(1, -1).Value = Qs.MultiPage1.Pages(6).T7SNA1.Value
'------------
[SECTION7].Offset(2, -3).Value = Qs.MultiPage1.Pages(6).T7SY2.Value
[SECTION7].Offset(2, -2).Value = Qs.MultiPage1.Pages(6).T7SN2.Value
[SECTION7].Offset(2, -1).Value = Qs.MultiPage1.Pages(6).T7SNA2.Value
'------------
[SECTION7].Offset(3, -3).Value = Qs.MultiPage1.Pages(6).T7SY3.Value
[SECTION7].Offset(3, -2).Value = Qs.MultiPage1.Pages(6).T7SN3.Value
[SECTION7].Offset(3, -1).Value = Qs.MultiPage1.Pages(6).T7SNA3.Value
'------------
[SECTION7].Offset(4, -3).Value = Qs.MultiPage1.Pages(6).T7SY4.Value
[SECTION7].Offset(4, -2).Value = Qs.MultiPage1.Pages(6).T7SN4.Value
[SECTION7].Offset(4, -1).Value = Qs.MultiPage1.Pages(6).T7SNA4.Value
'------------
[SECTION7].Offset(5, -3).Value = Qs.MultiPage1.Pages(6).T7SY5.Value
[SECTION7].Offset(5, -2).Value = Qs.MultiPage1.Pages(6).T7SN5.Value
[SECTION7].Offset(5, -1).Value = Qs.MultiPage1.Pages(6).T7SNA5.Value
'------------
[SECTION7].Offset(6, -3).Value = Qs.MultiPage1.Pages(6).T7SY6.Value
[SECTION7].Offset(6, -2).Value = Qs.MultiPage1.Pages(6).T7SN6.Value
[SECTION7].Offset(6, -1).Value = Qs.MultiPage1.Pages(6).T7SNA6.Value
'------------
[SECTION7].Offset(7, -3).Value = Qs.MultiPage1.Pages(6).T7SY7.Value
[SECTION7].Offset(7, -2).Value = Qs.MultiPage1.Pages(6).T7SN7.Value
[SECTION7].Offset(7, -1).Value = Qs.MultiPage1.Pages(6).T7SNA7.Value
'------------
[SECTION7].Offset(8, -3).Value = Qs.MultiPage1.Pages(6).T7SY8.Value
[SECTION7].Offset(8, -2).Value = Qs.MultiPage1.Pages(6).T7SN8.Value
[SECTION7].Offset(8, -1).Value = Qs.MultiPage1.Pages(6).T7SNA8.Value
'----------Tab Text Box----------
[SECTION7].Offset(9, 1).Value = Qs.MultiPage1.Pages(6).T7TB1.Text
End Sub

Sub SendDataT8()
'------------
[SECTION8].Offset(1, -3).Value = Qs.MultiPage1.Pages(7).T8SY1.Value
[SECTION8].Offset(1, -2).Value = Qs.MultiPage1.Pages(7).T8SN1.Value
[SECTION8].Offset(1, -1).Value = Qs.MultiPage1.Pages(7).T8SNA1.Value
'------------
[SECTION8].Offset(2, -3).Value = Qs.MultiPage1.Pages(7).T8SY2.Value
[SECTION8].Offset(2, -2).Value = Qs.MultiPage1.Pages(7).T8SN2.Value
[SECTION8].Offset(2, -1).Value = Qs.MultiPage1.Pages(7).T8SNA2.Value
'------------
[SECTION8].Offset(3, -3).Value = Qs.MultiPage1.Pages(7).T8SY3.Value
[SECTION8].Offset(3, -2).Value = Qs.MultiPage1.Pages(7).T8SN3.Value
[SECTION8].Offset(3, -1).Value = Qs.MultiPage1.Pages(7).T8SNA3.Value
'------------
[SECTION8].Offset(4, -3).Value = Qs.MultiPage1.Pages(7).T8SY4.Value
[SECTION8].Offset(4, -2).Value = Qs.MultiPage1.Pages(7).T8SN4.Value
[SECTION8].Offset(4, -1).Value = Qs.MultiPage1.Pages(7).T8SNA4.Value
'------------
[SECTION8].Offset(5, -3).Value = Qs.MultiPage1.Pages(7).T8SY5.Value
[SECTION8].Offset(5, -2).Value = Qs.MultiPage1.Pages(7).T8SN5.Value
[SECTION8].Offset(5, -1).Value = Qs.MultiPage1.Pages(7).T8SNA5.Value
'------------
[SECTION8].Offset(6, -3).Value = Qs.MultiPage1.Pages(7).T8SY6.Value
[SECTION8].Offset(6, -2).Value = Qs.MultiPage1.Pages(7).T8SN6.Value
[SECTION8].Offset(6, -1).Value = Qs.MultiPage1.Pages(7).T8SNA6.Value
'------------
[SECTION8].Offset(7, -3).Value = Qs.MultiPage1.Pages(7).T8SY7.Value
[SECTION8].Offset(7, -2).Value = Qs.MultiPage1.Pages(7).T8SN7.Value
[SECTION8].Offset(7, -1).Value = Qs.MultiPage1.Pages(7).T8SNA7.Value
'------------
[SECTION8].Offset(8, -3).Value = Qs.MultiPage1.Pages(7).T8SY8.Value
[SECTION8].Offset(8, -2).Value = Qs.MultiPage1.Pages(7).T8SN8.Value
[SECTION8].Offset(8, -1).Value = Qs.MultiPage1.Pages(7).T8SNA8.Value
'----------Tab Text Box----------
[SECTION8].Offset(9, 1).Value = Qs.MultiPage1.Pages(7).T8TB1.Text
End Sub

Sub SendDataT9()
'------------
[SECTION9].Offset(1, -3).Value = Qs.MultiPage1.Pages(8).T9SY1.Value
[SECTION9].Offset(1, -2).Value = Qs.MultiPage1.Pages(8).T9SN1.Value
[SECTION9].Offset(1, -1).Value = Qs.MultiPage1.Pages(8).T9SNA1.Value
'------------
[SECTION9].Offset(2, -3).Value = Qs.MultiPage1.Pages(8).T9SY2.Value
[SECTION9].Offset(2, -2).Value = Qs.MultiPage1.Pages(8).T9SN2.Value
[SECTION9].Offset(2, -1).Value = Qs.MultiPage1.Pages(8).T9SNA2.Value
'------------
[SECTION9].Offset(3, -3).Value = Qs.MultiPage1.Pages(8).T9SY3.Value
[SECTION9].Offset(3, -2).Value = Qs.MultiPage1.Pages(8).T9SN3.Value
[SECTION9].Offset(3, -1).Value = Qs.MultiPage1.Pages(8).T9SNA3.Value
'------------
[SECTION9].Offset(4, -3).Value = Qs.MultiPage1.Pages(8).T9SY4.Value
[SECTION9].Offset(4, -2).Value = Qs.MultiPage1.Pages(8).T9SN4.Value
[SECTION9].Offset(4, -1).Value = Qs.MultiPage1.Pages(8).T9SNA4.Value
'------------
[SECTION9].Offset(5, -3).Value = Qs.MultiPage1.Pages(8).T9SY5.Value
[SECTION9].Offset(5, -2).Value = Qs.MultiPage1.Pages(8).T9SN5.Value
[SECTION9].Offset(5, -1).Value = Qs.MultiPage1.Pages(8).T9SNA5.Value
'------------
[SECTION9].Offset(6, -3).Value = Qs.MultiPage1.Pages(8).T9SY6.Value
[SECTION9].Offset(6, -2).Value = Qs.MultiPage1.Pages(8).T9SN6.Value
[SECTION9].Offset(6, -1).Value = Qs.MultiPage1.Pages(8).T9SNA6.Value
'------------
[SECTION9].Offset(7, -3).Value = Qs.MultiPage1.Pages(8).T9SY7.Value
[SECTION9].Offset(7, -2).Value = Qs.MultiPage1.Pages(8).T9SN7.Value
[SECTION9].Offset(7, -1).Value = Qs.MultiPage1.Pages(8).T9SNA7.Value
'------------
[SECTION9].Offset(8, -3).Value = Qs.MultiPage1.Pages(8).T9SY8.Value
[SECTION9].Offset(8, -2).Value = Qs.MultiPage1.Pages(8).T9SN8.Value
[SECTION9].Offset(8, -1).Value = Qs.MultiPage1.Pages(8).T9SNA8.Value
'----------Tab Text Box----------
[SECTION9].Offset(9, 1).Value = Qs.MultiPage1.Pages(8).T9TB1.Text
End Sub

Sub SendDataT0()
'------------
[SECTION0].Offset(1, -3).Value = Qs.MultiPage1.Pages(9).T0SY1.Value
[SECTION0].Offset(1, -2).Value = Qs.MultiPage1.Pages(9).T0SN1.Value
[SECTION0].Offset(1, -1).Value = Qs.MultiPage1.Pages(9).T0SNA1.Value
'------------
[SECTION0].Offset(2, -3).Value = Qs.MultiPage1.Pages(9).T0SY2.Value
[SECTION0].Offset(2, -2).Value = Qs.MultiPage1.Pages(9).T0SN2.Value
[SECTION0].Offset(2, -1).Value = Qs.MultiPage1.Pages(9).T0SNA2.Value
'------------
[SECTION0].Offset(3, -3).Value = Qs.MultiPage1.Pages(9).T0SY3.Value
[SECTION0].Offset(3, -2).Value = Qs.MultiPage1.Pages(9).T0SN3.Value
[SECTION0].Offset(3, -1).Value = Qs.MultiPage1.Pages(9).T0SNA3.Value
'------------
[SECTION0].Offset(4, -3).Value = Qs.MultiPage1.Pages(9).T0SY4.Value
[SECTION0].Offset(4, -2).Value = Qs.MultiPage1.Pages(9).T0SN4.Value
[SECTION0].Offset(4, -1).Value = Qs.MultiPage1.Pages(9).T0SNA4.Value
'------------
'----------Tab Text Box----------
[SECTION0].Offset(5, 1).Value = Qs.MultiPage1.Pages(9).T0TB1.Text
End Sub

Sub MakeAllVisible()
'--------- Set All Visible - Tab 1
Qs.MultiPage1.Pages(0).T1S1.Visible = True
Qs.MultiPage1.Pages(0).T1S1Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S1Notes.Visible = True
Qs.MultiPage1.Pages(0).T1S2.Visible = True
Qs.MultiPage1.Pages(0).T1S2Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S2Notes.Visible = True
Qs.MultiPage1.Pages(0).T1S3.Visible = True
Qs.MultiPage1.Pages(0).T1S3Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S3Notes.Visible = True
Qs.MultiPage1.Pages(0).T1S4.Visible = True
Qs.MultiPage1.Pages(0).T1S4Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S4Notes.Visible = True
Qs.MultiPage1.Pages(0).T1S5.Visible = True
Qs.MultiPage1.Pages(0).T1S5Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S5Notes.Visible = True
Qs.MultiPage1.Pages(0).T1S6.Visible = True
Qs.MultiPage1.Pages(0).T1S6Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S6Notes.Visible = True
Qs.MultiPage1.Pages(0).T1S7.Visible = True
Qs.MultiPage1.Pages(0).T1S7Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S7Notes.Visible = True
Qs.MultiPage1.Pages(0).T1S8.Visible = True
Qs.MultiPage1.Pages(0).T1S8Ver.Visible = True
Qs.MultiPage1.Pages(0).T1S8Notes.Visible = True
'------------ End Set All Visible - Tab 1


'--------- Set All Visible - Tab 2
Qs.MultiPage1.Pages(1).T2SY1.Visible = True
Qs.MultiPage1.Pages(1).T2SN1.Visible = True
Qs.MultiPage1.Pages(1).T2SNA1.Visible = True
Qs.MultiPage1.Pages(1).T2NS1.Visible = True
Qs.MultiPage1.Pages(1).T2S1.Visible = True
Qs.MultiPage1.Pages(1).T2SY2.Visible = True
Qs.MultiPage1.Pages(1).T2SN2.Visible = True
Qs.MultiPage1.Pages(1).T2SNA2.Visible = True
Qs.MultiPage1.Pages(1).T2NS2.Visible = True
Qs.MultiPage1.Pages(1).T2S2.Visible = True
Qs.MultiPage1.Pages(1).T2SY3.Visible = True
Qs.MultiPage1.Pages(1).T2SN3.Visible = True
Qs.MultiPage1.Pages(1).T2SNA3.Visible = True
Qs.MultiPage1.Pages(1).T2NS3.Visible = True
Qs.MultiPage1.Pages(1).T2S3.Visible = True
Qs.MultiPage1.Pages(1).T2SY4.Visible = True
Qs.MultiPage1.Pages(1).T2SN4.Visible = True
Qs.MultiPage1.Pages(1).T2SNA4.Visible = True
Qs.MultiPage1.Pages(1).T2NS4.Visible = True
Qs.MultiPage1.Pages(1).T2S4.Visible = True
Qs.MultiPage1.Pages(1).T2SY5.Visible = True
Qs.MultiPage1.Pages(1).T2SN5.Visible = True
Qs.MultiPage1.Pages(1).T2SNA5.Visible = True
Qs.MultiPage1.Pages(1).T2NS5.Visible = True
Qs.MultiPage1.Pages(1).T2S5.Visible = True
Qs.MultiPage1.Pages(1).T2SY6.Visible = True
Qs.MultiPage1.Pages(1).T2SN6.Visible = True
Qs.MultiPage1.Pages(1).T2SNA6.Visible = True
Qs.MultiPage1.Pages(1).T2NS6.Visible = True
Qs.MultiPage1.Pages(1).T2S6.Visible = True
Qs.MultiPage1.Pages(1).T2SY7.Visible = True
Qs.MultiPage1.Pages(1).T2SN7.Visible = True
Qs.MultiPage1.Pages(1).T2SNA7.Visible = True
Qs.MultiPage1.Pages(1).T2NS7.Visible = True
Qs.MultiPage1.Pages(1).T2S7.Visible = True
Qs.MultiPage1.Pages(1).T2SY8.Visible = True
Qs.MultiPage1.Pages(1).T2SN8.Visible = True
Qs.MultiPage1.Pages(1).T2SNA8.Visible = True
Qs.MultiPage1.Pages(1).T2NS8.Visible = True
Qs.MultiPage1.Pages(1).T2S8.Visible = True
Qs.MultiPage1.Pages(1).T2TB1.Visible = True
'------------ End Set All Visible - Tab 2


'--------- Set All Visible - Tab 3
Qs.MultiPage1.Pages(2).T3SY1.Visible = True
Qs.MultiPage1.Pages(2).T3SN1.Visible = True
Qs.MultiPage1.Pages(2).T3SNA1.Visible = True
Qs.MultiPage1.Pages(2).T3NS1.Visible = True
Qs.MultiPage1.Pages(2).T3S1.Visible = True
Qs.MultiPage1.Pages(2).T3SY2.Visible = True
Qs.MultiPage1.Pages(2).T3SN2.Visible = True
Qs.MultiPage1.Pages(2).T3SNA2.Visible = True
Qs.MultiPage1.Pages(2).T3NS2.Visible = True
Qs.MultiPage1.Pages(2).T3S2.Visible = True
Qs.MultiPage1.Pages(2).T3SY3.Visible = True
Qs.MultiPage1.Pages(2).T3SN3.Visible = True
Qs.MultiPage1.Pages(2).T3SNA3.Visible = True
Qs.MultiPage1.Pages(2).T3NS3.Visible = True
Qs.MultiPage1.Pages(2).T3S3.Visible = True
Qs.MultiPage1.Pages(2).T3SY4.Visible = True
Qs.MultiPage1.Pages(2).T3SN4.Visible = True
Qs.MultiPage1.Pages(2).T3SNA4.Visible = True
Qs.MultiPage1.Pages(2).T3NS4.Visible = True
Qs.MultiPage1.Pages(2).T3S4.Visible = True
Qs.MultiPage1.Pages(2).T3SY5.Visible = True
Qs.MultiPage1.Pages(2).T3SN5.Visible = True
Qs.MultiPage1.Pages(2).T3SNA5.Visible = True
Qs.MultiPage1.Pages(2).T3NS5.Visible = True
Qs.MultiPage1.Pages(2).T3S5.Visible = True
Qs.MultiPage1.Pages(2).T3SY6.Visible = True
Qs.MultiPage1.Pages(2).T3SN6.Visible = True
Qs.MultiPage1.Pages(2).T3SNA6.Visible = True
Qs.MultiPage1.Pages(2).T3NS6.Visible = True
Qs.MultiPage1.Pages(2).T3S6.Visible = True
Qs.MultiPage1.Pages(2).T3SY7.Visible = True
Qs.MultiPage1.Pages(2).T3SN7.Visible = True
Qs.MultiPage1.Pages(2).T3SNA7.Visible = True
Qs.MultiPage1.Pages(2).T3NS7.Visible = True
Qs.MultiPage1.Pages(2).T3S7.Visible = True
Qs.MultiPage1.Pages(2).T3SY8.Visible = True
Qs.MultiPage1.Pages(2).T3SN8.Visible = True
Qs.MultiPage1.Pages(2).T3SNA8.Visible = True
Qs.MultiPage1.Pages(2).T3NS8.Visible = True
Qs.MultiPage1.Pages(2).T3S8.Visible = True
Qs.MultiPage1.Pages(2).T3TB1.Visible = True
'------------ End Set All Visible - Tab 3


'--------- Set All Visible - Tab 4
Qs.MultiPage1.Pages(3).T4SY1.Visible = True
Qs.MultiPage1.Pages(3).T4SN1.Visible = True
Qs.MultiPage1.Pages(3).T4SNA1.Visible = True
Qs.MultiPage1.Pages(3).T4NS1.Visible = True
Qs.MultiPage1.Pages(3).T4S1.Visible = True
Qs.MultiPage1.Pages(3).T4SY2.Visible = True
Qs.MultiPage1.Pages(3).T4SN2.Visible = True
Qs.MultiPage1.Pages(3).T4SNA2.Visible = True
Qs.MultiPage1.Pages(3).T4NS2.Visible = True
Qs.MultiPage1.Pages(3).T4S2.Visible = True
Qs.MultiPage1.Pages(3).T4SY3.Visible = True
Qs.MultiPage1.Pages(3).T4SN3.Visible = True
Qs.MultiPage1.Pages(3).T4SNA3.Visible = True
Qs.MultiPage1.Pages(3).T4NS3.Visible = True
Qs.MultiPage1.Pages(3).T4S3.Visible = True
Qs.MultiPage1.Pages(3).T4SY4.Visible = True
Qs.MultiPage1.Pages(3).T4SN4.Visible = True
Qs.MultiPage1.Pages(3).T4SNA4.Visible = True
Qs.MultiPage1.Pages(3).T4NS4.Visible = True
Qs.MultiPage1.Pages(3).T4S4.Visible = True
Qs.MultiPage1.Pages(3).T4SY5.Visible = True
Qs.MultiPage1.Pages(3).T4SN5.Visible = True
Qs.MultiPage1.Pages(3).T4SNA5.Visible = True
Qs.MultiPage1.Pages(3).T4NS5.Visible = True
Qs.MultiPage1.Pages(3).T4S5.Visible = True
Qs.MultiPage1.Pages(3).T4SY6.Visible = True
Qs.MultiPage1.Pages(3).T4SN6.Visible = True
Qs.MultiPage1.Pages(3).T4SNA6.Visible = True
Qs.MultiPage1.Pages(3).T4NS6.Visible = True
Qs.MultiPage1.Pages(3).T4S6.Visible = True
Qs.MultiPage1.Pages(3).T4SY7.Visible = True
Qs.MultiPage1.Pages(3).T4SN7.Visible = True
Qs.MultiPage1.Pages(3).T4SNA7.Visible = True
Qs.MultiPage1.Pages(3).T4NS7.Visible = True
Qs.MultiPage1.Pages(3).T4S7.Visible = True
Qs.MultiPage1.Pages(3).T4SY8.Visible = True
Qs.MultiPage1.Pages(3).T4SN8.Visible = True
Qs.MultiPage1.Pages(3).T4SNA8.Visible = True
Qs.MultiPage1.Pages(3).T4NS8.Visible = True
Qs.MultiPage1.Pages(3).T4S8.Visible = True
Qs.MultiPage1.Pages(3).T4TB1.Visible = True
'------------ End Set All Visible - Tab 4


'--------- Set All Visible - Tab 5
Qs.MultiPage1.Pages(4).T5SY1.Visible = True
Qs.MultiPage1.Pages(4).T5SN1.Visible = True
Qs.MultiPage1.Pages(4).T5SNA1.Visible = True
Qs.MultiPage1.Pages(4).T5NS1.Visible = True
Qs.MultiPage1.Pages(4).T5S1.Visible = True
Qs.MultiPage1.Pages(4).T5SY2.Visible = True
Qs.MultiPage1.Pages(4).T5SN2.Visible = True
Qs.MultiPage1.Pages(4).T5SNA2.Visible = True
Qs.MultiPage1.Pages(4).T5NS2.Visible = True
Qs.MultiPage1.Pages(4).T5S2.Visible = True
Qs.MultiPage1.Pages(4).T5SY3.Visible = True
Qs.MultiPage1.Pages(4).T5SN3.Visible = True
Qs.MultiPage1.Pages(4).T5SNA3.Visible = True
Qs.MultiPage1.Pages(4).T5NS3.Visible = True
Qs.MultiPage1.Pages(4).T5S3.Visible = True
Qs.MultiPage1.Pages(4).T5SY4.Visible = True
Qs.MultiPage1.Pages(4).T5SN4.Visible = True
Qs.MultiPage1.Pages(4).T5SNA4.Visible = True
Qs.MultiPage1.Pages(4).T5NS4.Visible = True
Qs.MultiPage1.Pages(4).T5S4.Visible = True
Qs.MultiPage1.Pages(4).T5SY5.Visible = True
Qs.MultiPage1.Pages(4).T5SN5.Visible = True
Qs.MultiPage1.Pages(4).T5SNA5.Visible = True
Qs.MultiPage1.Pages(4).T5NS5.Visible = True
Qs.MultiPage1.Pages(4).T5S5.Visible = True
Qs.MultiPage1.Pages(4).T5SY6.Visible = True
Qs.MultiPage1.Pages(4).T5SN6.Visible = True
Qs.MultiPage1.Pages(4).T5SNA6.Visible = True
Qs.MultiPage1.Pages(4).T5NS6.Visible = True
Qs.MultiPage1.Pages(4).T5S6.Visible = True
Qs.MultiPage1.Pages(4).T5SY7.Visible = True
Qs.MultiPage1.Pages(4).T5SN7.Visible = True
Qs.MultiPage1.Pages(4).T5SNA7.Visible = True
Qs.MultiPage1.Pages(4).T5NS7.Visible = True
Qs.MultiPage1.Pages(4).T5S7.Visible = True
Qs.MultiPage1.Pages(4).T5SY8.Visible = True
Qs.MultiPage1.Pages(4).T5SN8.Visible = True
Qs.MultiPage1.Pages(4).T5SNA8.Visible = True
Qs.MultiPage1.Pages(4).T5NS8.Visible = True
Qs.MultiPage1.Pages(4).T5S8.Visible = True
Qs.MultiPage1.Pages(4).T5TB1.Visible = True
'------------ End Set All Visible - Tab 5


'--------- Set All Visible - Tab 6
Qs.MultiPage1.Pages(5).T6SY1.Visible = True
Qs.MultiPage1.Pages(5).T6SN1.Visible = True
Qs.MultiPage1.Pages(5).T6SNA1.Visible = True
Qs.MultiPage1.Pages(5).T6NS1.Visible = True
Qs.MultiPage1.Pages(5).T6S1.Visible = True
Qs.MultiPage1.Pages(5).T6SY2.Visible = True
Qs.MultiPage1.Pages(5).T6SN2.Visible = True
Qs.MultiPage1.Pages(5).T6SNA2.Visible = True
Qs.MultiPage1.Pages(5).T6NS2.Visible = True
Qs.MultiPage1.Pages(5).T6S2.Visible = True
Qs.MultiPage1.Pages(5).T6SY3.Visible = True
Qs.MultiPage1.Pages(5).T6SN3.Visible = True
Qs.MultiPage1.Pages(5).T6SNA3.Visible = True
Qs.MultiPage1.Pages(5).T6NS3.Visible = True
Qs.MultiPage1.Pages(5).T6S3.Visible = True
Qs.MultiPage1.Pages(5).T6SY4.Visible = True
Qs.MultiPage1.Pages(5).T6SN4.Visible = True
Qs.MultiPage1.Pages(5).T6SNA4.Visible = True
Qs.MultiPage1.Pages(5).T6NS4.Visible = True
Qs.MultiPage1.Pages(5).T6S4.Visible = True
Qs.MultiPage1.Pages(5).T6SY5.Visible = True
Qs.MultiPage1.Pages(5).T6SN5.Visible = True
Qs.MultiPage1.Pages(5).T6SNA5.Visible = True
Qs.MultiPage1.Pages(5).T6NS5.Visible = True
Qs.MultiPage1.Pages(5).T6S5.Visible = True
Qs.MultiPage1.Pages(5).T6SY6.Visible = True
Qs.MultiPage1.Pages(5).T6SN6.Visible = True
Qs.MultiPage1.Pages(5).T6SNA6.Visible = True
Qs.MultiPage1.Pages(5).T6NS6.Visible = True
Qs.MultiPage1.Pages(5).T6S6.Visible = True
Qs.MultiPage1.Pages(5).T6SY7.Visible = True
Qs.MultiPage1.Pages(5).T6SN7.Visible = True
Qs.MultiPage1.Pages(5).T6SNA7.Visible = True
Qs.MultiPage1.Pages(5).T6NS7.Visible = True
Qs.MultiPage1.Pages(5).T6S7.Visible = True
Qs.MultiPage1.Pages(5).T6SY8.Visible = True
Qs.MultiPage1.Pages(5).T6SN8.Visible = True
Qs.MultiPage1.Pages(5).T6SNA8.Visible = True
Qs.MultiPage1.Pages(5).T6NS8.Visible = True
Qs.MultiPage1.Pages(5).T6S8.Visible = True
Qs.MultiPage1.Pages(5).T6TB1.Visible = True
'------------ End Set All Visible - Tab 6


'--------- Set All Visible - Tab 7
Qs.MultiPage1.Pages(6).T7SY1.Visible = True
Qs.MultiPage1.Pages(6).T7SN1.Visible = True
Qs.MultiPage1.Pages(6).T7SNA1.Visible = True
Qs.MultiPage1.Pages(6).T7NS1.Visible = True
Qs.MultiPage1.Pages(6).T7S1.Visible = True
Qs.MultiPage1.Pages(6).T7SY2.Visible = True
Qs.MultiPage1.Pages(6).T7SN2.Visible = True
Qs.MultiPage1.Pages(6).T7SNA2.Visible = True
Qs.MultiPage1.Pages(6).T7NS2.Visible = True
Qs.MultiPage1.Pages(6).T7S2.Visible = True
Qs.MultiPage1.Pages(6).T7SY3.Visible = True
Qs.MultiPage1.Pages(6).T7SN3.Visible = True
Qs.MultiPage1.Pages(6).T7SNA3.Visible = True
Qs.MultiPage1.Pages(6).T7NS3.Visible = True
Qs.MultiPage1.Pages(6).T7S3.Visible = True
Qs.MultiPage1.Pages(6).T7SY4.Visible = True
Qs.MultiPage1.Pages(6).T7SN4.Visible = True
Qs.MultiPage1.Pages(6).T7SNA4.Visible = True
Qs.MultiPage1.Pages(6).T7NS4.Visible = True
Qs.MultiPage1.Pages(6).T7S4.Visible = True
Qs.MultiPage1.Pages(6).T7SY5.Visible = True
Qs.MultiPage1.Pages(6).T7SN5.Visible = True
Qs.MultiPage1.Pages(6).T7SNA5.Visible = True
Qs.MultiPage1.Pages(6).T7NS5.Visible = True
Qs.MultiPage1.Pages(6).T7S5.Visible = True
Qs.MultiPage1.Pages(6).T7SY6.Visible = True
Qs.MultiPage1.Pages(6).T7SN6.Visible = True
Qs.MultiPage1.Pages(6).T7SNA6.Visible = True
Qs.MultiPage1.Pages(6).T7NS6.Visible = True
Qs.MultiPage1.Pages(6).T7S6.Visible = True
Qs.MultiPage1.Pages(6).T7SY7.Visible = True
Qs.MultiPage1.Pages(6).T7SN7.Visible = True
Qs.MultiPage1.Pages(6).T7SNA7.Visible = True
Qs.MultiPage1.Pages(6).T7NS7.Visible = True
Qs.MultiPage1.Pages(6).T7S7.Visible = True
Qs.MultiPage1.Pages(6).T7SY8.Visible = True
Qs.MultiPage1.Pages(6).T7SN8.Visible = True
Qs.MultiPage1.Pages(6).T7SNA8.Visible = True
Qs.MultiPage1.Pages(6).T7NS8.Visible = True
Qs.MultiPage1.Pages(6).T7S8.Visible = True
Qs.MultiPage1.Pages(6).T7TB1.Visible = True
'------------ End Set All Visible - Tab 7


'--------- Set All Visible - Tab 8
Qs.MultiPage1.Pages(7).T8SY1.Visible = True
Qs.MultiPage1.Pages(7).T8SN1.Visible = True
Qs.MultiPage1.Pages(7).T8SNA1.Visible = True
Qs.MultiPage1.Pages(7).T8NS1.Visible = True
Qs.MultiPage1.Pages(7).T8S1.Visible = True
Qs.MultiPage1.Pages(7).T8SY2.Visible = True
Qs.MultiPage1.Pages(7).T8SN2.Visible = True
Qs.MultiPage1.Pages(7).T8SNA2.Visible = True
Qs.MultiPage1.Pages(7).T8NS2.Visible = True
Qs.MultiPage1.Pages(7).T8S2.Visible = True
Qs.MultiPage1.Pages(7).T8SY3.Visible = True
Qs.MultiPage1.Pages(7).T8SN3.Visible = True
Qs.MultiPage1.Pages(7).T8SNA3.Visible = True
Qs.MultiPage1.Pages(7).T8NS3.Visible = True
Qs.MultiPage1.Pages(7).T8S3.Visible = True
Qs.MultiPage1.Pages(7).T8SY4.Visible = True
Qs.MultiPage1.Pages(7).T8SN4.Visible = True
Qs.MultiPage1.Pages(7).T8SNA4.Visible = True
Qs.MultiPage1.Pages(7).T8NS4.Visible = True
Qs.MultiPage1.Pages(7).T8S4.Visible = True
Qs.MultiPage1.Pages(7).T8SY5.Visible = True
Qs.MultiPage1.Pages(7).T8SN5.Visible = True
Qs.MultiPage1.Pages(7).T8SNA5.Visible = True
Qs.MultiPage1.Pages(7).T8NS5.Visible = True
Qs.MultiPage1.Pages(7).T8S5.Visible = True
Qs.MultiPage1.Pages(7).T8SY6.Visible = True
Qs.MultiPage1.Pages(7).T8SN6.Visible = True
Qs.MultiPage1.Pages(7).T8SNA6.Visible = True
Qs.MultiPage1.Pages(7).T8NS6.Visible = True
Qs.MultiPage1.Pages(7).T8S6.Visible = True
Qs.MultiPage1.Pages(7).T8SY7.Visible = True
Qs.MultiPage1.Pages(7).T8SN7.Visible = True
Qs.MultiPage1.Pages(7).T8SNA7.Visible = True
Qs.MultiPage1.Pages(7).T8NS7.Visible = True
Qs.MultiPage1.Pages(7).T8S7.Visible = True
Qs.MultiPage1.Pages(7).T8SY8.Visible = True
Qs.MultiPage1.Pages(7).T8SN8.Visible = True
Qs.MultiPage1.Pages(7).T8SNA8.Visible = True
Qs.MultiPage1.Pages(7).T8NS8.Visible = True
Qs.MultiPage1.Pages(7).T8S8.Visible = True
Qs.MultiPage1.Pages(7).T8TB1.Visible = True
'------------ End Set All Visible - Tab 8


'--------- Set All Visible - Tab 9
Qs.MultiPage1.Pages(8).T9SY1.Visible = True
Qs.MultiPage1.Pages(8).T9SN1.Visible = True
Qs.MultiPage1.Pages(8).T9SNA1.Visible = True
Qs.MultiPage1.Pages(8).T9NS1.Visible = True
Qs.MultiPage1.Pages(8).T9S1.Visible = True
Qs.MultiPage1.Pages(8).T9SY2.Visible = True
Qs.MultiPage1.Pages(8).T9SN2.Visible = True
Qs.MultiPage1.Pages(8).T9SNA2.Visible = True
Qs.MultiPage1.Pages(8).T9NS2.Visible = True
Qs.MultiPage1.Pages(8).T9S2.Visible = True
Qs.MultiPage1.Pages(8).T9SY3.Visible = True
Qs.MultiPage1.Pages(8).T9SN3.Visible = True
Qs.MultiPage1.Pages(8).T9SNA3.Visible = True
Qs.MultiPage1.Pages(8).T9NS3.Visible = True
Qs.MultiPage1.Pages(8).T9S3.Visible = True
Qs.MultiPage1.Pages(8).T9SY4.Visible = True
Qs.MultiPage1.Pages(8).T9SN4.Visible = True
Qs.MultiPage1.Pages(8).T9SNA4.Visible = True
Qs.MultiPage1.Pages(8).T9NS4.Visible = True
Qs.MultiPage1.Pages(8).T9S4.Visible = True
Qs.MultiPage1.Pages(8).T9SY5.Visible = True
Qs.MultiPage1.Pages(8).T9SN5.Visible = True
Qs.MultiPage1.Pages(8).T9SNA5.Visible = True
Qs.MultiPage1.Pages(8).T9NS5.Visible = True
Qs.MultiPage1.Pages(8).T9S5.Visible = True
Qs.MultiPage1.Pages(8).T9SY6.Visible = True
Qs.MultiPage1.Pages(8).T9SN6.Visible = True
Qs.MultiPage1.Pages(8).T9SNA6.Visible = True
Qs.MultiPage1.Pages(8).T9NS6.Visible = True
Qs.MultiPage1.Pages(8).T9S6.Visible = True
Qs.MultiPage1.Pages(8).T9SY7.Visible = True
Qs.MultiPage1.Pages(8).T9SN7.Visible = True
Qs.MultiPage1.Pages(8).T9SNA7.Visible = True
Qs.MultiPage1.Pages(8).T9NS7.Visible = True
Qs.MultiPage1.Pages(8).T9S7.Visible = True
Qs.MultiPage1.Pages(8).T9SY8.Visible = True
Qs.MultiPage1.Pages(8).T9SN8.Visible = True
Qs.MultiPage1.Pages(8).T9SNA8.Visible = True
Qs.MultiPage1.Pages(8).T9NS8.Visible = True
Qs.MultiPage1.Pages(8).T9S8.Visible = True
Qs.MultiPage1.Pages(8).T9TB1.Visible = True
'------------ End Set All Visible - Tab 9
End Sub
Attribute VB_Name = "SaveAsFormat"
Attribute VB_Base = "0{3A44853E-0A4A-481D-B21E-1A7F25BD9059}{BCF494B3-5627-4812-A9E2-2EB7B8760E7C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub approve_Click()
SaveAsFormat.Hide
End Sub

Private Sub Label1_Click()

End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DeleteMilestoneButton, 249, 10, MSForms, CommandButton"
Attribute VB_Control = "AddMilestoneButton, 248, 11, MSForms, CommandButton"
Attribute VB_Control = "DeletePhaseButton, 246, 12, MSForms, CommandButton"
Attribute VB_Control = "AddPhaseButton, 244, 13, MSForms, CommandButton"
Attribute VB_Control = "MDMTemplate, 243, 14, MSForms, CommandButton"
Attribute VB_Control = "MOCTemplate, 241, 15, MSForms, CommandButton"
Attribute VB_Control = "Templates, 239, 16, MSForms, Label"
Attribute VB_Control = "ConsolidateProjectPlan, 238, 17, MSForms, CommandButton"
Attribute VB_Control = "BoxFrame1, 237, 18, MSForms, Label"
Attribute VB_Control = "GoHome, 228, 19, MSForms, CommandButton"
Attribute VB_Control = "NavBox1, 227, 20, MSForms, ComboBox"
Attribute VB_Control = "QuickJumpFrame, 205, 21, MSForms, Label"
Attribute VB_Control = "QuosalTab, 174, 22, MSForms, CommandButton"
Attribute VB_Control = "Product, 78, 23, MSForms, CommandButton"
Attribute VB_Control = "ClientInfoView, 103, 24, MSForms, CommandButton"
Attribute VB_Control = "TotalsView, 104, 25, MSForms, CommandButton"
Attribute VB_Control = "FinishTaskButton, 116, 26, MSForms, CommandButton"
Attribute VB_Control = "HeadersView, 140, 27, MSForms, CommandButton"
Attribute VB_Control = "AddLinesButton, 164, 28, MSForms, CommandButton"
Attribute VB_Control = "ReviewChecklist, 177, 29, MSForms, CommandButton"
Attribute VB_Control = "TaskFrame, 196, 30, MSForms, Label"
Attribute VB_Control = "AddTaskButton, 200, 31, MSForms, CommandButton"
Attribute VB_Control = "DeleteTaskButton, 201, 32, MSForms, CommandButton"
Attribute VB_Control = "DellEncryptionTemplate, 250, 33, MSForms, CommandButton"

Private Sub AddMilestoneButton_Click()
    Application.ScreenUpdating = False
    Call Milestones.AddMilestone
    Application.ScreenUpdating = True
End Sub

Private Sub AddTaskButton_Click()
Call Layout.AddNewTask
End Sub

Private Sub AddPhaseButton_Click()
Call Layout.AddNewPhase
End Sub

Private Sub ClientInfoView_Click()
Application.ScreenUpdating = False
Call Layout.GeneralInfoView
Application.ScreenUpdating = True
End Sub

Private Sub ConsolidateProjectPlan_Click()
        ConsolidateSure.Show
End Sub

Private Sub DeleteMilestoneButton_Click()
    Application.ScreenUpdating = False
    Call Milestones.DeleteMilestone
    Application.ScreenUpdating = True
End Sub

Private Sub DeletePhaseButton_Click()
    Application.ScreenUpdating = False
    Call DeletePhaseFormPage
    Application.ScreenUpdating = True
End Sub

Private Sub DellEncryptionTemplate_Click()
Call Templates_DellEncryOverwrite.Show
End Sub

Private Sub HeadersView_Click()
Application.ScreenUpdating = False
Call Layout.HeadersView
Application.ScreenUpdating = True
End Sub


Private Sub MDMTemplate_Click()
    Call Templates_MDMOverwriteWarning.Show
End Sub

Private Sub MOCTemplate_Click()
Call Templates_MOCOverwriteWarning.Show
End Sub

Private Sub EncryptionTemplate_Click()
    Call Templates_EncryOverwriteWarning.Show
End Sub

Private Sub TotalsView_Click()
Application.ScreenUpdating = False
Call Layout.TotalsView
Application.ScreenUpdating = True
End Sub

Private Sub DeleteTaskButton_Click()
    Application.ScreenUpdating = False
    Call DeleteTaskFormPage
    Application.ScreenUpdating = True
End Sub


Private Sub FinishTaskButton_Click()
Call Layout.DeleteExtraTaskLines
End Sub

Private Sub AddLinesButton_Click()
Call Layout.AddNewLines
End Sub

Private Sub NavBox1_Change()
    Call Navigation.Move
End Sub

Private Sub GoHome_Click()
     Dim RGBColor As Long
     GoHome.BackColor = RGB(Red:=0, Green:=146, Blue:=207)
     Application.Goto Reference:="TEMPLATETYPE"
End Sub

Private Sub NotesToReviewer_Click()
    Application.Goto Reference:="REVIEWER"
End Sub

Private Sub ProjectManagement_Click()
Application.ScreenUpdating = False
Sheets("Proj Mgmt").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub QuosalTab_Click()
Application.ScreenUpdating = False
Sheets("Quosal Export").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ReviewChecklist_Click()
Application.ScreenUpdating = False
    Call GetData
Application.ScreenUpdating = True
End Sub

Private Sub Product_Click()
Application.ScreenUpdating = False
Sheets("Product").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ViewRevisions_Click()
Call Layout.GoToRevisions
End Sub

Private Sub Resources_Click()
Application.Goto Reference:="RATESCHEDULE"
Application.Goto Reference:="RATESCHEDULEHOME"
End Sub

Private Sub ProjectAssumptions_Click()
    Application.Goto Reference:="ASSUMPTIONS"
    Application.Goto Reference:="ASSUMPTIONSHOME"
End Sub
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "NavBox1, 185, 56, MSForms, ComboBox"
Attribute VB_Control = "ReviewChecklist, 184, 57, MSForms, CommandButton"
Attribute VB_Control = "QuosalTab, 183, 58, MSForms, CommandButton"
Attribute VB_Control = "Product, 181, 59, MSForms, CommandButton"
Attribute VB_Control = "QuickJumpFrame, 180, 60, MSForms, Label"
Attribute VB_Control = "EstTotalHours, 179, 61, MSForms, Label"
Attribute VB_Control = "EstProjectCost, 178, 62, MSForms, Label"
Attribute VB_Control = "EstTotalHoursLabel, 177, 63, MSForms, Label"
Attribute VB_Control = "EstProjectCostLabel, 176, 64, MSForms, Label"
Attribute VB_Control = "BoxFrame1, 175, 65, MSForms, Label"
Attribute VB_Control = "GoHome, 174, 66, MSForms, CommandButton"

Private Sub NavBox1_Change()
    Call Navigation.Move
End Sub

Private Sub GoHome_Click()
    Application.ScreenUpdating = False
     Dim RGBColor As Long
     GoHome.BackColor = RGB(Red:=0, Green:=146, Blue:=207)
     Sheets("Form").Select
    Application.ScreenUpdating = True
End Sub

Private Sub NotesToReviewer_Click()
    Application.Goto Reference:="REVIEWER"
End Sub

Private Sub ProjectManagement_Click()
Application.ScreenUpdating = False
Sheets("Proj Mgmt").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub QuosalTab_Click()
Application.ScreenUpdating = False
Sheets("Quosal Export").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ReviewChecklist_Click()
Application.ScreenUpdating = False
    Call GetData
Application.ScreenUpdating = True
End Sub

Private Sub Product_Click()
Application.ScreenUpdating = False
Sheets("Product").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ViewRevisions_Click()
Call Layout.GoToRevisions
End Sub

Private Sub Resources_Click()
Application.Goto Reference:="RATESCHEDULE"
Application.Goto Reference:="RATESCHEDULEHOME"
End Sub

Private Sub ProjectAssumptions_Click()
    Application.Goto Reference:="ASSUMPTIONS"
    Application.Goto Reference:="ASSUMPTIONSHOME"
End Sub
Attribute VB_Name = "Sheet14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "NavBox1, 67, 30, MSForms, ComboBox"
Attribute VB_Control = "ReviewChecklist, 66, 31, MSForms, CommandButton"
Attribute VB_Control = "QuosalTab, 65, 32, MSForms, CommandButton"
Attribute VB_Control = "Product, 63, 33, MSForms, CommandButton"
Attribute VB_Control = "QuickJumpFrame, 62, 34, MSForms, Label"
Attribute VB_Control = "EstTotalHours, 61, 35, MSForms, Label"
Attribute VB_Control = "EstProjectCost, 60, 36, MSForms, Label"
Attribute VB_Control = "EstTotalHoursLabel, 59, 37, MSForms, Label"
Attribute VB_Control = "EstProjectCostLabel, 58, 38, MSForms, Label"
Attribute VB_Control = "BoxFrame1, 57, 39, MSForms, Label"
Attribute VB_Control = "GoHome, 56, 40, MSForms, CommandButton"

Private Sub NavBox1_Change()
    Call Navigation.Move
End Sub

Private Sub GoHome_Click()
    Application.ScreenUpdating = False
     Dim RGBColor As Long
     GoHome.BackColor = RGB(Red:=0, Green:=146, Blue:=207)
     Sheets("Form").Select
    Application.ScreenUpdating = True
End Sub

Private Sub NotesToReviewer_Click()
    Application.Goto Reference:="REVIEWER"
End Sub

Private Sub ProjectManagement_Click()
Application.ScreenUpdating = False
Sheets("Proj Mgmt").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub QuosalTab_Click()
Application.ScreenUpdating = False
Sheets("Quosal Export").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ReviewChecklist_Click()
Application.ScreenUpdating = False
    Call GetData
Application.ScreenUpdating = True
End Sub

Private Sub Product_Click()
Application.ScreenUpdating = False
Sheets("Product").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ViewRevisions_Click()
Call Layout.GoToRevisions
End Sub

Private Sub Resources_Click()
Application.Goto Reference:="RATESCHEDULE"
Application.Goto Reference:="RATESCHEDULEHOME"
End Sub

Private Sub ProjectAssumptions_Click()
    Application.Goto Reference:="ASSUMPTIONS"
    Application.Goto Reference:="ASSUMPTIONSHOME"
End Sub
Attribute VB_Name = "Sheet17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "NavBox1, 72, 27, MSForms, ComboBox"
Attribute VB_Control = "ReviewChecklist, 71, 28, MSForms, CommandButton"
Attribute VB_Control = "QuosalTab, 70, 29, MSForms, CommandButton"
Attribute VB_Control = "Product, 68, 30, MSForms, CommandButton"
Attribute VB_Control = "QuickJumpFrame, 67, 31, MSForms, Label"
Attribute VB_Control = "EstTotalHours, 66, 32, MSForms, Label"
Attribute VB_Control = "EstProjectCost, 65, 33, MSForms, Label"
Attribute VB_Control = "EstTotalHoursLabel, 64, 34, MSForms, Label"
Attribute VB_Control = "EstProjectCostLabel, 63, 35, MSForms, Label"
Attribute VB_Control = "BoxFrame1, 62, 36, MSForms, Label"
Attribute VB_Control = "GoHome, 61, 37, MSForms, CommandButton"

Private Sub NavBox1_Change()
    Call Navigation.Move
End Sub

Private Sub GoHome_Click()
    Application.ScreenUpdating = False
     Dim RGBColor As Long
     GoHome.BackColor = RGB(Red:=0, Green:=146, Blue:=207)
     Sheets("Form").Select
    Application.ScreenUpdating = True
End Sub

Private Sub NotesToReviewer_Click()
    Application.Goto Reference:="REVIEWER"
End Sub

Private Sub ProjectManagement_Click()
Application.ScreenUpdating = False
Sheets("Proj Mgmt").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub QuosalTab_Click()
Application.ScreenUpdating = False
Sheets("Quosal Export").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ReviewChecklist_Click()
Application.ScreenUpdating = False
    Call GetData
Application.ScreenUpdating = True
End Sub

Private Sub Product_Click()
Application.ScreenUpdating = False
Sheets("Product").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ViewRevisions_Click()
Call Layout.GoToRevisions
End Sub

Private Sub Resources_Click()
Application.Goto Reference:="RATESCHEDULE"
Application.Goto Reference:="RATESCHEDULEHOME"
End Sub

Private Sub ProjectAssumptions_Click()
    Application.Goto Reference:="ASSUMPTIONS"
    Application.Goto Reference:="ASSUMPTIONSHOME"
End Sub
Attribute VB_Name = "Sheet19"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "NavBox1, 256, 15, MSForms, ComboBox"
Attribute VB_Control = "ReviewChecklist, 255, 16, MSForms, CommandButton"
Attribute VB_Control = "QuosalTab, 254, 17, MSForms, CommandButton"
Attribute VB_Control = "Product, 252, 18, MSForms, CommandButton"
Attribute VB_Control = "QuickJumpFrame, 251, 19, MSForms, Label"
Attribute VB_Control = "EstTotalHours, 250, 20, MSForms, Label"
Attribute VB_Control = "EstProjectCost, 249, 21, MSForms, Label"
Attribute VB_Control = "EstTotalHoursLabel, 248, 22, MSForms, Label"
Attribute VB_Control = "EstProjectCostLabel, 247, 23, MSForms, Label"
Attribute VB_Control = "BoxFrame1, 246, 24, MSForms, Label"
Attribute VB_Control = "GoHome, 245, 25, MSForms, CommandButton"
Attribute VB_Control = "QuosalExport, 208, 26, MSForms, CommandButton"
Attribute VB_Control = "Label1, 257, 27, MSForms, Label"
Attribute VB_Control = "TextExport, 258, 28, MSForms, Label"
Attribute VB_Control = "TextExportButton, 259, 29, MSForms, CommandButton"



Private Sub NavBox1_Change()
    Call Navigation.Move
End Sub

Private Sub GoHome_Click()
    Application.ScreenUpdating = False
     Dim RGBColor As Long
     GoHome.BackColor = RGB(Red:=0, Green:=146, Blue:=207)
     Sheets("Form").Select
    Application.ScreenUpdating = True
End Sub

Private Sub NotesToReviewer_Click()
    Application.Goto Reference:="REVIEWER"
End Sub

Private Sub ProjectManagement_Click()
Application.ScreenUpdating = False
Sheets("Proj Mgmt").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub QuosalTab_Click()
Application.ScreenUpdating = False
Sheets("Quosal Export").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ReviewChecklist_Click()
Application.ScreenUpdating = False
    Call GetData
Application.ScreenUpdating = True
End Sub

Private Sub Product_Click()
Application.ScreenUpdating = False
Sheets("Product").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ViewRevisions_Click()
Call Layout.GoToRevisions
End Sub

Private Sub Resources_Click()
Application.Goto Reference:="RATESCHEDULE"
Application.Goto Reference:="RATESCHEDULEHOME"
End Sub

Private Sub ProjectAssumptions_Click()
    Application.Goto Reference:="ASSUMPTIONS"
    Application.Goto Reference:="ASSUMPTIONSHOME"
End Sub

Private Sub QuosalExport_Click()
    Application.ScreenUpdating = False
        QuosalExport.BackColor = RGB(Red:=0, Green:=0, Blue:=0)
        Call COMPLETEFormatProjectPlan
    Application.ScreenUpdating = True
End Sub

Private Sub TextExportButton_Click()
Call QuosalTextExport.CompleteTextProjectPlan
End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "NavBox1, 85, 33, MSForms, ComboBox"
Attribute VB_Control = "ReviewChecklist, 84, 34, MSForms, CommandButton"
Attribute VB_Control = "QuosalTab, 83, 35, MSForms, CommandButton"
Attribute VB_Control = "Product, 81, 36, MSForms, CommandButton"
Attribute VB_Control = "QuickJumpFrame, 80, 37, MSForms, Label"
Attribute VB_Control = "EstTotalHours, 79, 38, MSForms, Label"
Attribute VB_Control = "EstProjectCost, 78, 39, MSForms, Label"
Attribute VB_Control = "EstTotalHoursLabel, 77, 40, MSForms, Label"
Attribute VB_Control = "EstProjectCostLabel, 76, 41, MSForms, Label"
Attribute VB_Control = "BoxFrame1, 75, 42, MSForms, Label"
Attribute VB_Control = "GoHome, 74, 43, MSForms, CommandButton"
Private Sub NavBox1_Change()
    Call Navigation.Move
End Sub

Private Sub GoHome_Click()
    Application.ScreenUpdating = False
     Dim RGBColor As Long
     GoHome.BackColor = RGB(Red:=0, Green:=146, Blue:=207)
     Sheets("Form").Select
    Application.ScreenUpdating = True
End Sub

Private Sub NotesToReviewer_Click()
    Application.Goto Reference:="REVIEWER"
End Sub

Private Sub ProjectManagement_Click()
Application.ScreenUpdating = False
Sheets("Proj Mgmt").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub QuosalTab_Click()
Application.ScreenUpdating = False
Sheets("Quosal Export").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ReviewChecklist_Click()
Application.ScreenUpdating = False
    Call GetData
Application.ScreenUpdating = True
End Sub

Private Sub Product_Click()
Application.ScreenUpdating = False
Sheets("Product").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ViewRevisions_Click()
Call Layout.GoToRevisions
End Sub

Private Sub Resources_Click()
Application.Goto Reference:="RATESCHEDULE"
Application.Goto Reference:="RATESCHEDULEHOME"
End Sub

Private Sub ProjectAssumptions_Click()
    Application.Goto Reference:="ASSUMPTIONS"
    Application.Goto Reference:="ASSUMPTIONSHOME"
End Sub
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "NavBox1, 314, 69, MSForms, ComboBox"
Attribute VB_Control = "ReviewChecklist, 305, 70, MSForms, CommandButton"
Attribute VB_Control = "QuosalTab, 304, 71, MSForms, CommandButton"
Attribute VB_Control = "Product, 302, 72, MSForms, CommandButton"
Attribute VB_Control = "QuickJumpFrame, 301, 73, MSForms, Label"
Attribute VB_Control = "BoxFrame1, 300, 74, MSForms, Label"
Attribute VB_Control = "GoHome, 299, 75, MSForms, CommandButton"
Attribute VB_Control = "EstTotalHours, 260, 76, MSForms, Label"
Attribute VB_Control = "EstTotalHoursLabel, 259, 77, MSForms, Label"
Attribute VB_Control = "EstProjectCost, 258, 78, MSForms, Label"
Attribute VB_Control = "EstProjectCostLabel, 257, 79, MSForms, Label"
Private Sub NavBox1_Change()
    Call Navigation.Move
End Sub

Private Sub GoHome_Click()
    Application.ScreenUpdating = False
     Dim RGBColor As Long
     GoHome.BackColor = RGB(Red:=0, Green:=146, Blue:=207)
     Sheets("Form").Select
    Application.ScreenUpdating = True
End Sub

Private Sub NotesToReviewer_Click()
    Application.Goto Reference:="REVIEWER"
End Sub

Private Sub ProjectManagement_Click()
Application.ScreenUpdating = False
Sheets("Proj Mgmt").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub QuosalTab_Click()
Application.ScreenUpdating = False
Sheets("Quosal Export").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ReviewChecklist_Click()
Application.ScreenUpdating = False
    Call GetData
Application.ScreenUpdating = True
End Sub

Private Sub Product_Click()
Application.ScreenUpdating = False
Sheets("Product").Select
Call Quosal.GoToA2
Application.ScreenUpdating = True
End Sub

Private Sub ViewRevisions_Click()
Call Layout.GoToRevisions
End Sub

Private Sub Resources_Click()
Application.Goto Reference:="RATESCHEDULE"
Application.Goto Reference:="RATESCHEDULEHOME"
End Sub

Private Sub ProjectAssumptions_Click()
    Application.Goto Reference:="ASSUMPTIONS"
    Application.Goto Reference:="ASSUMPTIONSHOME"
End Sub
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "DiskSizeComboBox, 1, 0, MSForms, ComboBox"
Private Sub DiskSizeComboBox_Change()

End Sub
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Templates"
Sub SetTemplatePoints()
    'Find First Phase. This is reserved for PM. Therefore, find the next phase.
    [PHASETOP].Select
     Selection.End(xlDown).Select
    'If ActiveCell is a "Phase", this is where the TemplateStart will be located.
    If Left(ActiveCell.Value, 6) = "Phase:" Then
    ActiveWorkbook.Names.Add Name:="TEMPLATESTART", RefersToR1C1:=Selection
    Else
    [PHASEBOTTOM].Offset(-1, 0).Select
    ActiveWorkbook.Names.Add Name:="TEMPLATESTART", RefersToR1C1:=Selection
    End If
    
    'One cell up from the PhaseBottom is the TemplateEnd cell.
    [PHASEBOTTOM].Offset(-1, 0).Select
    ActiveWorkbook.Names.Add Name:="TEMPLATEEND", RefersToR1C1:=Selection
End Sub

Sub DeleteTemplatePoints()
    On Error Resume Next
    ActiveWorkbook.Names("TEMPLATESTART").Delete
    ActiveWorkbook.Names("TEMPLATEEND").Delete
End Sub


Sub DeleteExistingPlanForTemplate()
    Range([TEMPLATESTART], [TEMPLATEEND]).EntireRow.Delete
End Sub

Sub ImportMOCTemplate()
Application.ScreenUpdating = False
    Sheets("Form").Select
    
    'Set up Form page for template import
    Call DeleteTemplatePoints
    Call SetTemplatePoints
    Call DeleteExistingPlanForTemplate
    

    Sheets("802.11X").Select
    
    'Create 802.11X Backup Sheet
    Call CreateMOCBackupSheet
    
    'Cut Template from 802.11 Sheet
    Range([MOCTEMPLATESTART], [MOCTEMPLATEEND]).Select
    Range(Selection, Selection.Offset(0, 10)).Select
    Selection.Cut
    Sheets("Form").Select
    
    'Set entry point for new Template
    [PHASEBOTTOM].Select
    Selection.Insert Shift:=xlDown
    Call Layout.UpdateProjectTotalCost
    Call Layout.ResetProjectHoursAndRatesRange
    
    'Delete old MOC Sheet and Make MOC Backup the new MAC Sheet
    Call MakeMOCBackupSheetTheNewMOCSheet
    
    'Return Home
    Sheets("Form").Select
    [PHASETOP].Select
Application.ScreenUpdating = True
End Sub

Sub CreateMOCBackupSheet()
    Application.DisplayAlerts = False
    Sheets("802.11X").Select
    Sheets("802.11X").Copy Before:=Sheets(8)
    ActiveSheet.Name = "802.11X Backup"
    Sheets("802.11X").Select
    Application.DisplayAlerts = True
End Sub


Sub MakeMOCBackupSheetTheNewMOCSheet()
    Application.DisplayAlerts = False
    Sheets("802.11X").Delete
    Application.DisplayAlerts = True
    Sheets("802.11X Backup").Name = "802.11X"
    Sheets("802.11X").Select
    Range("B2").Select
    ActiveWorkbook.Names.Add Name:="MOCTEMPLATESTART", RefersToR1C1:=Selection
    Range("B38").Select
    ActiveWorkbook.Names.Add Name:="MOCTEMPLATEEND", RefersToR1C1:=Selection
End Sub

Sub GetMOCTemplateData()
Templates_MOC.SitesText.Value = [SITES].Value
Templates_MOC.SwitchesText.Value = [Switches].Value
Templates_MOC.DomainsText.Value = [Domains].Value
Templates_MOC.PrintersText.Value = [PRINTERS].Value
End Sub

Sub ImportEncryptionTemplate()
Application.ScreenUpdating = False
    Sheets("Form").Select
    
    'Set up Form page for template import
    Call DeleteTemplatePoints
    Call SetTemplatePoints
    Call DeleteExistingPlanForTemplate
    Sheets("Encryption").Select
    
    'Create 802.11X Backup Sheet
    Call CreateEncryptionBackupSheet
    
    'Cut Template from 802.11 Sheet
    Range([ENCRYTEMPLATESTART], [ENCRYTEMPLATEEND]).Select
    Range(Selection, Selection.Offset(0, 10)).Select
    Selection.Cut
    Sheets("Form").Select
    
    'Set entry point for new Template
    [PHASEBOTTOM].Select
    Selection.Insert Shift:=xlDown
    Call Layout.UpdateProjectTotalCost
    Call Layout.ResetProjectHoursAndRatesRange
    
    'Delete old MOC Sheet and Make MOC Backup the new MAC Sheet
    Call MakeEncryptionBackupSheetTheNewEncryptionSheet
    
    'Return Home
    Sheets("Form").Select
    [PHASETOP].Select
Application.ScreenUpdating = True
End Sub

Sub ImportDellEncryptionTemplate()
Application.ScreenUpdating = False
    Sheets("Form").Select
    
    'Set up Form page for template import
    Call DeleteTemplatePoints
    Call SetTemplatePoints
    Call DeleteExistingPlanForTemplate
         
    Sheets("Dell Encryption").Select
    
    'Create Dell Encryption Backup Sheet
    Call CreateDellEncryptionBackupSheet
    
    'Cut Template from Dell Encryption Sheet
    Range([DELLENCRYPTIONSTART], [DELLENCRYPTIONEND]).Select
    Range(Selection, Selection.Offset(0, 10)).Select
    Selection.Cut
    Sheets("Form").Select
    
    'Set entry point for new Template
    [PHASEBOTTOM].Select
    Selection.Insert Shift:=xlDown
    Call Layout.UpdateProjectTotalCost
    Call Layout.ResetProjectHoursAndRatesRange
    
    Call Templates.SetDellEncryptionRanges
    
    'Delete old Dell Encryption Sheet and Make Dell Encryption Backup the new Dell Encryption Sheet
    Call MakeDellEncryptionBackupSheetTheNewDellEncryptionSheet
    
    'Return Home
    Sheets("Form").Select
    [PHASETOP].Select
Application.ScreenUpdating = True
End Sub


Sub CreateEncryptionBackupSheet()
    Application.DisplayAlerts = False
    Sheets("Encryption").Select
    Sheets("Encryption").Copy Before:=Sheets(8)
    ActiveSheet.Name = "Encryption Backup"
    Sheets("Encryption").Select
    Application.DisplayAlerts = True
End Sub

Sub MakeEncryptionBackupSheetTheNewEncryptionSheet()
    Application.DisplayAlerts = False
    Sheets("Encryption").Delete
    Application.DisplayAlerts = True
    Sheets("Encryption Backup").Name = "Encryption"
    Sheets("Encryption").Select
    Range("B2").Select
    ActiveWorkbook.Names.Add Name:="ENCRYTEMPLATESTART", RefersToR1C1:=Selection
    Range("B30").Select
    ActiveWorkbook.Names.Add Name:="ENCRYTEMPLATEEND", RefersToR1C1:=Selection
End Sub

Sub CreateDellEncryptionBackupSheet()
    Application.DisplayAlerts = False
    Sheets("Dell Encryption").Select
    Sheets("Dell Encryption").Copy Before:=Sheets(8)
    ActiveSheet.Name = "Dell Encryption Backup"
    Sheets("Dell Encryption").Select
    Application.DisplayAlerts = True
End Sub

Sub MakeDellEncryptionBackupSheetTheNewDellEncryptionSheet()
    Application.DisplayAlerts = False
    Sheets("Dell Encryption").Delete
    Application.DisplayAlerts = True
    Sheets("Dell Encryption Backup").Name = "Dell Encryption"
    Sheets("Dell Encryption").Select
    Range("B2").Select
    ActiveWorkbook.Names.Add Name:="DELLENCRYPTIONSTART", RefersToR1C1:=Selection
    Range("B26").Select
    ActiveWorkbook.Names.Add Name:="DELLENCRYPTIONEND", RefersToR1C1:=Selection
End Sub

Sub ImportMDMTemplate()
Application.ScreenUpdating = False
    Sheets("Form").Select
    
    'Set up Form page for template import
    Call DeleteTemplatePoints
    Call SetTemplatePoints
    Call DeleteExistingPlanForTemplate
    

    Sheets("MDM").Select
    
    'Create 802.11X Backup Sheet
    Call CreateMDMBackupSheet
    
    'Cut Template from 802.11 Sheet
    Range([MDMTEMPLATESTART], [MDMTEMPLATEEND]).Select
    Range(Selection, Selection.Offset(0, 10)).Select
    Selection.Cut
    Sheets("Form").Select
    
    'Set entry point for new Template
    [PHASEBOTTOM].Select
    Selection.Insert Shift:=xlDown
    Call Layout.UpdateProjectTotalCost
    Call Layout.ResetProjectHoursAndRatesRange
    
    'Delete old MOC Sheet and Make MOC Backup the new MAC Sheet
    Call MakeMDMBackupSheetTheNewMDMSheet
    
    'Return Home
    Sheets("Form").Select
    [ASSUMPTIONSHOME].Value = "A policy to whitelist applications will be billed on a T&M basis."
    [PHASETOP].Select
Application.ScreenUpdating = True
End Sub
Sub CreateMDMBackupSheet()
    On Error Resume Next
    Application.DisplayAlerts = False
    Sheets("MDM").Select
    Sheets("MDM").Copy Before:=Sheets(8)
    ActiveSheet.Name = "MDM Backup"
    Sheets("MDM").Select
    Application.DisplayAlerts = True
End Sub
Sub MakeMDMBackupSheetTheNewMDMSheet()
    Application.DisplayAlerts = False
    Sheets("MDM").Delete
    Application.DisplayAlerts = True
    Sheets("MDM Backup").Name = "MDM"
    Sheets("MDM").Select
    Range("B2").Select
    ActiveWorkbook.Names.Add Name:="MDMTEMPLATESTART", RefersToR1C1:=Selection
    Range("B43").Select
    ActiveWorkbook.Names.Add Name:="MDMTEMPLATEEND", RefersToR1C1:=Selection
End Sub

Sub GetMDMTemplateData()
Templates_MDM.MDMDevicesText.Value = [MDMDEVICES].Value
End Sub

Sub SetDellEncryptionRanges()
    On Error Resume Next
    ActiveWorkbook.Names("PREQUAL").Delete
    ActiveWorkbook.Names("SERVERCONFIG").Delete
    ActiveWorkbook.Names("ROLLOUT").Delete
    Range("F27").Select
     ActiveWorkbook.Names.Add Name:="PREQUAL", RefersToR1C1:=Selection
    Range("F33").Select
     ActiveWorkbook.Names.Add Name:="SERVERCONFIG", RefersToR1C1:=Selection
    Range("F45").Select
     ActiveWorkbook.Names.Add Name:="ROLLOUT", RefersToR1C1:=Selection
End Sub

Attribute VB_Name = "Templates_DellEncryOverwrite"
Attribute VB_Base = "0{1FDCCB28-339F-4D1A-B4B9-70601ED0B2D3}{042F164B-2B51-4077-BFEB-0125F37DF48A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CancelFix_Click()
   Call Templates_DellEncryOverwrite.Hide
End Sub

Private Sub YesOverwrite_Click()
    Call Templates_DellEncryOverwrite.Hide
    Call Templates.ImportDellEncryptionTemplate
    Call Templates_DellEncryption.Show
End Sub

Attribute VB_Name = "Templates_DellEncryption"
Attribute VB_Base = "0{72C11E3A-CC53-4FD9-B822-272D28266F9F}{8E8CAC45-B954-4B85-839A-DF54DE4B2BB6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Sub Be()
Templates_DellEncryption.Show

End Sub

Private Sub DellCancel_Click()
    Templates_DellEncryption.Hide
End Sub

Private Sub DellCreatePlan_Click()
Dim workstations As Integer
'Make sure every question has an answer.
    If Templates_DellEncryption.DellQ1.Value = "" Or Templates_DellEncryption.DellQ2.Value = "" Or Templates_DellEncryption.DellQ3.Value = "" Or Templates_DellEncryption.DellQ4.Value = "" Or Templates_DellEncryption.DellQ5.Value = "" Then
        MsgBox "Please fill out an answer to every question."
        GoTo Ending
    End If
    
    Templates_DellEncryption.Hide
'Question 1
    If Templates_DellEncryption.DellQ1.Value = "Yes" Then
            [PREQUAL].Value = "1"
        ElseIf Templates_DellEncryption.DellQ1.Value = "No" Then
            [PREQUAL].Value = "4"
    End If
'Question 2
    If Templates_DellEncryption.DellQ2.Value = "Flat Roll-out" Then
            [SERVERCONFIG].Value = "8"
        ElseIf Templates_DellEncryption.DellQ2.Value = "Customized" Then
            [SERVERCONFIG].Value = "12"
    End If
 'Question 3 - Set Workstation Value
    If Templates_DellEncryption.DellQ3.Value = "1-50" Then
            workstations = 1
        ElseIf Templates_DellEncryption.DellQ3.Value = "51-100" Then
            workstations = 2
        ElseIf Templates_DellEncryption.DellQ3.Value = "101-150" Then
            workstations = 3
        ElseIf Templates_DellEncryption.DellQ3.Value = "151-200" Then
            workstations = 4
    End If
    
'Question 4 - Are Workstations Being Managed?
    If Templates_DellEncryption.DellQ4.Value = "Yes" Then
            [ROLLOUT].Value = workstations
        ElseIf Templates_DellEncryption.DellQ4.Value = "No" And Templates_DellEncryption.DellQ5.Value = "Yes" Then
            [ROLLOUT].Value = workstations
        ElseIf Templates_DellEncryption.DellQ4.Value = "No" And Templates_DellEncryption.DellQ5.Value = "No" Then
            [ROLLOUT].Value = workstations * 6
    End If

Ending:

    
End Sub

Private Sub UserForm_Initialize()
   DellQ1.AddItem "Yes"
   DellQ1.AddItem "No"
   DellQ2.AddItem "Flat Roll-out"
   DellQ2.AddItem "Customized"
   DellQ3.AddItem "1-50"
   DellQ3.AddItem "51-100"
   DellQ3.AddItem "101-150"
   DellQ3.AddItem "151-200"
   DellQ4.AddItem "Yes"
   DellQ4.AddItem "No"
   DellQ5.AddItem "Yes"
   DellQ5.AddItem "No"
   DellQ5.AddItem "N/A"
End Sub



Attribute VB_Name = "Templates_EncryOverwriteWarning"
Attribute VB_Base = "0{79B6E4A3-8786-4D5F-A9B7-A7F53C03E906}{70E92CE2-FF50-4CAE-AA26-554435AB2E87}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CancelFix_Click()
   Call Templates_EncryOverwriteWarning.Hide
End Sub

Private Sub YesOverwrite_Click()
    Call Templates_EncryOverwriteWarning.Hide
    Call Templates.ImportEncryptionTemplate
    Call Templates_Encryption.Show
End Sub

Attribute VB_Name = "Templates_Encryption"
Attribute VB_Base = "0{29D25A6E-FC74-4EF9-B6A8-CF914C703AAA}{11B10661-4D8D-48EA-8459-D40C891207F3}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub GoToProjectPlan_Click()
    If EncryWorkstationsText.Value = "0" Or EncryWorkstationsText.Value = "" Then
        [ENCRYWORKSTATIONS].Value = ""
    ElseIf EncryWorkstationsText.Value > "0" And EncryWorkstationsText.Value < "25" Then
        [ENCRYWORKSTATIONS].Offset(0, 1).Value = "98FNXZF0-EI1EA"
        [ENCRYWORKSTATIONS].Offset(0, 2).Value = EncryWorkstationsText.Value
        [ENCRYWORKSTATIONS].Offset(0, 3).Value = "Symantec Drive Encryption v.1.3 Flex Choice with Encryption"
        Range("F38").Value = "4.0"
    ElseIf EncryWorkstationsText.Value > "24" And EncryWorkstationsText.Value < "50" Then
        [ENCRYWORKSTATIONS].Offset(0, 1).Value = "98FNXZF0-EI1EB"
        [ENCRYWORKSTATIONS].Offset(0, 2).Value = EncryWorkstationsText.Value
        [ENCRYWORKSTATIONS].Offset(0, 3).Value = "Symantec Drive Encryption v.1.3 Flex Choice with Encryption"
        Range("F38").Value = "6.0"
    ElseIf EncryWorkstationsText.Value > "49" Then
        [ENCRYWORKSTATIONS].Offset(0, 1).Value = "98FNXZF0-EI1EC"
        [ENCRYWORKSTATIONS].Offset(0, 2).Value = EncryWorkstationsText.Value
        [ENCRYWORKSTATIONS].Offset(0, 3).Value = "Symantec Drive Encryption v.1.3 Flex Choice with Encryption"
        Range("F38").Value = "8.0"
    End If
    Call Templates_Encryption.Hide
    [PHASETOP].Select
End Sub




Attribute VB_Name = "Templates_MDM"
Attribute VB_Base = "0{D43FBCC8-486D-45E5-83F4-B3DA13A359E4}{8B85C994-A981-4C92-AAC9-03E9B1BF06EE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub GoToProjectPlan_Click()
    [MDMDEVICES].Value = MDMDevicesText.Value
    Call Templates_MDM.Hide
    [PHASETOP].Select
End Sub
Attribute VB_Name = "Templates_MDMOverwriteWarning"
Attribute VB_Base = "0{6DA7A514-37A0-467B-A1CA-45234A18E41F}{291FAABF-4288-42D9-96A5-07437BD02FFC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False


Private Sub CancelFix_Click()
   Call Templates_MDMOverwriteWarning.Hide
End Sub

Private Sub YesOverwrite_Click()
    Call Templates_MDMOverwriteWarning.Hide
    Call Templates.ImportMDMTemplate
    Call Templates_MDM.Show
End Sub

Attribute VB_Name = "Templates_MOC"
Attribute VB_Base = "0{7BCC1D24-032E-4BC5-8252-E4B75FA50755}{DFA940C7-BC4F-4FBE-AF26-51BEC2104936}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub GoToProjectPlan_Click()
    [SITES].Value = SitesText.Value
    [Switches].Value = SwitchesText.Value
    [Domains].Value = DomainsText.Value
    [PRINTERS].Value = PrintersText.Value
    Call Templates_MOC.Hide
    [PHASETOP].Select
End Sub


Attribute VB_Name = "Templates_MOCOverwriteWarning"
Attribute VB_Base = "0{4613B810-0E80-4914-88BF-FC35D4567D83}{56CC1D6B-AD28-495D-BFE6-5F3755916A2B}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub CancelFix_Click()
   Call Templates_MOCOverwriteWarning.Hide
End Sub

Private Sub YesOverwrite_Click()
    Call Templates_MOCOverwriteWarning.Hide
    Call Templates.ImportMOCTemplate
    Call Templates.GetMOCTemplateData
    Call Templates_MOC.Show
End Sub

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
Call Navigation.SetAllNavBoxesOnOpen
Application.CommandBars("Standard").FindControl(ID:=3).Enabled = False
Call OnSaveRestrictions.ClearPublicVar1
Call ClientInfoUpdate.Show
[PROJDATE].Value = Now()
[PROJDATE].NumberFormat = "MMMM D, yyyy"
Range("D7").Select
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
Application.Goto Reference:="TEMPLATETYPE"
Dim hours As Range
If PublicVar1 = 1 Then
PublicVar1 = 0
GoTo Revisions
End If

Range([ESTHOURSTOP].Offset(1, 0), [PROJTOTALHOURS].Offset(-1, 0)).Select
For Each hours In Selection
    If InStr(1, hours.Offset(0, -3).Value, "Task", 1) And hours.Offset(0, -1).Value <> "" And hours.Value = "" Then
        hours.Select
        IncompleteTaskOnSave.Show
        If PublicVar1 = 1 Then
            GoTo Revisions
        Else
            Cancel = True
            Exit Sub
        End If
    ElseIf InStr(1, hours.Offset(0, -3).Value, "Task", 1) And hours.Offset(0, -1).Value <> "" And hours.Value <> "" And hours.Offset(0, 1).Value = "" Then
            hours.Offset(0, 1).Select
            IncompleteTaskOnSave.Show
        If PublicVar1 = 1 Then
            GoTo Revisions
        Else
            Cancel = True
            Exit Sub
        End If
    'hours.Offset(0, -3).Value, "Task", 1) And hours.Offset(0, -1).Value <> "" And hours.Offset(0, 1).Value = "" Then
    'hours.Offset(0, 1).Select
    'MsgBox "Error: No Rate Code Entered for Task " & hours.Offset(0, -2).Value
    'Cancel = True
    'Exit Sub
    Else
    hours.Value = hours.Value
    End If
Next hours
GoTo Revisions


Revisions:
[PHASETOP].Select
Call OnSaveRestrictions.ClearPublicVar1
Call Layout.RevisionBeforeSave
SaveAsFormat.Show

End Sub

' InQuest injected base64 decoded content
' :-jP
' "w+y
' 'x*.
' 't*,
' (^rIb
' (^rIb
' pZrK
' CzYD
' pZrK

INQUEST-PP=macro
