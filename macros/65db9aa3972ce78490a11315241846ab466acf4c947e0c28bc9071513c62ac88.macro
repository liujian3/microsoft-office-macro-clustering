Attribute VB_Name = "Module1"
Option Explicit

'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public ParamName() As String
'|fffd||fffd||fffd|c|fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public ParamValue() As String
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Public SQLParams() As String
Public sDSN As String, sUserName As String, sUserPass As String, sSQLParamsString As String, sProcName As String
Public Answer As Long
'|fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
Public nTypeParams() As Integer

Public bOkConnect As Boolean, bCloseConnect As Boolean, bUser As Boolean, bOkFromFile As Boolean, bIsExistInDOC As Boolean
Public cnASystem As ADODB.Connection
Public ConnectStr As String
Public rstASystem As ADODB.Recordset

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
Public Const PE_PF_NUMBER As Integer = 0
Public Const PE_PF_CURRENCY As Integer = 1
Public Const PE_PF_BOOLEAN As Integer = 2
Public Const PE_PF_DATE As Integer = 3
Public Const PE_PF_STRING As Integer = 4
Public Const PE_PF_DATETIME As Integer = 5

Public Const PROC_NAME As String = "proc_rpt_ul_contract"
Public FieldNameArray As Variant
Public sParamNameInDOC As Variant
Public nParamTypeInDoc As Variant
Public sAppPath As String

Public Sub SetFieldNameArray()
    FieldNameArray = Array("AS_ID_CONTRACT", "AS_ID_UL", "AS_ID_OWN_ENTERP", "AS_ID_CONTACT_PERSON", "AS_CONTRACT_NUM", _
        "AS_CONTRACT_DATE_BEGIN", "AS_UL_OFFICIAL_NAME", "AS_OWN_ENTERP_FULL_OFFICIAL_NAME", "AS_UL_CHIEF_POST", "AS_UL_CHIEF_FIO", _
        "AS_UL_DOC", "AS_SUPPLIER_REPR", "AS_USER_EMAIL", "AS_CONTRACT_MAX_DEBT", "AS_CONTRACT_CURR", "AS_CONTACT_PERSON_PHONE", _
        "AS_CONTACT_PERSON_FAX", "AS_CONTACT_PERSON_EMAIL", "AS_CONTACT_PERSON_LASTNAME", _
        "AS_CONTACT_PERSON_FIRSTNAME", "AS_CONTACT_PERSON_MIDDLENAME", "AS_CONTACT_DATE_END", "AS_OWN_ENTERP_OFFICIAL_NAME", _
        "AS_OWN_ENTERP_JUR_ADDRESS", "AS_OWN_ENTERP_PHONE", "AS_OWN_ENTERP_FAX", "AS_OWN_ENTERP_INN", "AS_OWN_ENTERP_KPP", _
        "AS_OWN_ENTERP_OGRN", "AS_OWN_ENTERP_OKPO", "AS_OWN_ENTERP_OKVED", _
        "AS_UL_JUR_ADDRESS", "AS_UL_PHONE", "AS_UL_FAX", "AS_UL_INN", _
        "AS_UL_KPP", "AS_UL_OKPO", "AS_UL_OKVED", "AS_UL_OGRN", "AS_CONTRACT_MAX_DEBT_WORD")
End Sub
Public Sub SetParamNameArray()
    sParamNameInDOC = Array("@nObjectID", "@nObjectType")
    nParamTypeInDoc = Array(PE_PF_NUMBER, PE_PF_NUMBER)
End Sub

Sub OpenConnectDB()
  Dim ConnectStr As String
  Dim Answer As Integer
   
  On Error GoTo Error_Connect
  
  ConnectStr = "DSN=" & sDSN & ";UID=" & sUserName & ";PWD=" & sUserPass
  
  Set cnASystem = New ADODB.Connection
  cnASystem.Provider = "MSDASQL"
  cnASystem.ConnectionString = ConnectStr
  cnASystem.Open
  bOkConnect = True
      
Error_Connect:
  If (Err.Number = -2147467259) Then
    Answer = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|!", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| MS SQL |fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
    ElseIf (Err.Number <> 0) Then MsgBox ("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - " & Str(Err.Number) & Chr(13) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Description)
  End If
End Sub
Public Sub CloseConnectDB()
  If (cnASystem.State = ObjectStateEnum.adStateOpen) Then cnASystem.Close
  bCloseConnect = True
End Sub
Public Sub SetParams()
    Dim i As Integer, j As Integer
    Dim sDate  As String, sTime As String, sDateTime As String
    Dim strParamValueForSQL As String

    j = 0
   
    If IsInitialArray(ParamName) Then
        For i = 0 To UBound(ParamName)
            If Left$(ParamName(i), 1) = "@" Then
                ReDim Preserve SQLParams(j)
                strParamValueForSQL = ""
            
                If nTypeParams(i) = PE_PF_STRING Then
                    strParamValueForSQL = "'" & ParamValue(i) & "'"
                    SQLParams(j) = ParamName(i) & "=" & strParamValueForSQL
                End If
                If nTypeParams(i) = PE_PF_DATE Then
                    strParamValueForSQL = Left(ParamValue(i), 4) & Mid(ParamValue(i), 5, 2) & Mid(ParamValue(i), 7, 2)
                    strParamValueForSQL = "'" & strParamValueForSQL & "'"
                    SQLParams(j) = ParamName(i) & "=" & strParamValueForSQL
                End If
                If nTypeParams(i) = PE_PF_DATETIME Then
                    sDate = ""
                    sTime = ""
                    sDate = Left(ParamValue(i), 4) & Mid(ParamValue(i), 5, 2) & Mid(ParamValue(i), 7, 2)
                    If InStr(1, ParamValue(i), ":") > 0 Then
                    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
                        sTime = Mid(ParamValue(i), InStr(ParamValue(i), " ") + 1, Len(ParamValue(i)) - InStr(ParamValue(i), " "))
                    End If
                    sDateTime = sDate & IIf(sTime <> "", " " & sTime, "")
                   
                    strParamValueForSQL = "'" & sDateTime & "'"
                    SQLParams(j) = ParamName(i) & "=" & strParamValueForSQL
                End If
                If nTypeParams(i) = PE_PF_NUMBER Or nTypeParams(i) = PE_PF_CURRENCY Then
                    SQLParams(j) = ParamName(i) & "=" & ParamValue(i)
                End If
                j = j + 1
            End If
        Next i
    End If
   
    sSQLParamsString = ""
    If IsInitialArray(SQLParams) Then
        For i = 0 To UBound(SQLParams)
            If sSQLParamsString <> "" Then sSQLParamsString = sSQLParamsString & ", "
            sSQLParamsString = sSQLParamsString & SQLParams(i)
        Next i
    End If
End Sub
Public Sub CheckParam(strParamName As String)
    Dim i As Integer
   
    If IsInitialArray(sParamNameInDOC) Then
        For i = 0 To UBound(sParamNameInDOC)
            If sParamNameInDOC(i) = strParamName Then
                bIsExistInDOC = True
                Exit Sub
            End If
        Next i
    End If
End Sub
Public Sub ExecStoredProcedure()
    Dim sSQL As String, sText As String
    Dim RowAffected As Long
    Dim i As Integer
    '|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| CustomDocumentProperties
    Dim objDP As DocumentProperty
  
    On Error GoTo Error_Report
  
    sProcName = PROC_NAME
  
    If Not (bUser) Then Exit Sub
  
    Application.StatusBar = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| SQL Server"
    Call OpenConnectDB

    '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| SQL |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    sSQL = "exec " & sProcName & " " & sSQLParamsString
    cnASystem.CommandTimeout = 10000
    Set rstASystem = cnASystem.Execute(sSQL, RowAffected, CommandTypeEnum.adCmdText)
   
    If RecordsetIsEmpty(rstASystem) = False Then
        SetFieldNameArray
    
        If IsInitialArray(FieldNameArray) Then
            For Each objDP In ThisDocument.CustomDocumentProperties
                For i = 0 To UBound(FieldNameArray)
                    If objDP.Name = FieldNameArray(i) Then
                        If Not IsNull(rstASystem.Fields(i).Value) Then
                            objDP.Value = rstASystem.Fields(i).Value
                        Else
                            objDP.Value = ""
                        End If
                        Exit For
                    End If
                Next i
            Next objDP
        End If
                
        ThisDocument.Fields.Update
    End If
    Call MoreActions
    Call CloseConnectDB
Error_Report:
    If (Err.Number = -2147217900) Then
        sText = "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|." & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & sProcName & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd| ASystem |fffd||fffd||fffd| " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem" & Chr(13) & _
             " " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| support@monorhythm.ru" & Chr(13) & _
             " " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| SQL |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| " & Chr(13) & _
             "|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| CTRL + SHIFT + T"
        Answer = MsgBox(sText, vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem.")
    ElseIf (Err.Number <> 0) Then MsgBox ("|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - " & Str(Err.Number) & Chr(13) & " |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|: " & Err.Description)
    End If
 End Sub
 
Public Sub MoreActions()
    CreateAccountTable
End Sub
Public Sub ResetUserPass()
    bUser = False
    sUserName = ""
    sUserPass = ""
    sDSN = ""
End Sub
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 'AS', |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|. |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| FieldNameArray, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| - |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd| |fffd||fffd|
'|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|.
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|: |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| SetFieldNameArray |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|,
'|fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| MakeField |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|!!!
Public Sub MakeField()
    Dim objDP As DocumentProperty
    Dim i As Integer
    
    For Each objDP In ActiveDocument.CustomDocumentProperties
        If Mid(objDP.Name, 1, 2) = "AS" Then objDP.Delete
    Next objDP
    SetFieldNameArray
    If IsInitialArray(FieldNameArray) Then
        For i = 0 To UBound(FieldNameArray)
            Set objDP = ActiveDocument.CustomDocumentProperties.Add(Name:=FieldNameArray(i), LinkToContent:=False, Type:=msoPropertyTypeString, Value:=FieldNameArray(i))
            'objDP.Name = FieldNameArray(i)
            'objDP.Value = rstASystem.Fields(i).Value
            'objDP.Value = FieldNameArray(i)
        Next i
    End If
End Sub

'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| true, |fffd||fffd||fffd||fffd| recordset |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|)
Public Function RecordsetIsClosed(rstRecordset As Recordset)
    If rstRecordset.State = adStateClosed Then
        RecordsetIsClosed = True
    Else
        RecordsetIsClosed = False
    End If
End Function
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| true, |fffd||fffd||fffd||fffd| recordset |fffd||fffd||fffd||fffd||fffd||fffd| (|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|) |fffd||fffd||fffd|
'|fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Public Function RecordsetIsEmpty(rstRecordset As Recordset)
    If RecordsetIsClosed(rstRecordset) Then
        RecordsetIsEmpty = True
    Else
        If rstRecordset.BOF = True And rstRecordset.BOF = True Then
            RecordsetIsEmpty = True
        Else
            RecordsetIsEmpty = False
        End If
    End If
End Function

Public Sub SetWindowCaption(strTitle As String)
    ActiveWindow.Caption = strTitle
End Sub
Public Sub SetVarFromFile()
    Dim i As Integer
    
    If IsInitialArray(ParamName) Then
        For i = 0 To UBound(ParamName)
            If ParamName(i) = "dsn" Then sDSN = ParamValue(i)
            If ParamName(i) = "user" Then sUserName = ParamValue(i)
            If ParamName(i) = "password" Then sUserPass = ParamValue(i)
            If ParamName(i) = "app-path" Then sAppPath = ParamValue(i)
        Next i
    End If
    If sUserName <> "" Then bUser = True
End Sub

Public Function IsInitialArray(arArray As Variant)
    IsInitialArray = False
    On Error GoTo Error
    If LBound(arArray) <= UBound(arArray) Then IsInitialArray = True
Error:
End Function

Attribute VB_Name = "Module2"
Option Explicit

Public iIdContract As Integer
Public iIdUl As Integer
Public iIdOwnEnterp As Integer
Public iIdCommonAccountDirectory As Integer
Public iAccountName As Integer
Public iAccountNum As Integer
Public iAccountBankName As Integer
Public iAccountCorrNum As Integer
Public iAccountBik As Integer
Public iAccountUlType As Integer
Public iCountOwnAcc As Integer
Public iCountUlAcc As Integer

Public Const PROC_NAME_ACCOUNT_LIST As String = "proc_rpt_ul_contract_account"
Public Const BOOKMARK_ACCOUNT_LIST As String = "BookmarkAccountList"

Public Sub CreateAccountTable()
    Dim sContractId As String
    Dim sSQL As String
    
    sContractId = ActiveDocument.CustomDocumentProperties.Item("AS_ID_CONTRACT")
    sSQL = "exec " & PROC_NAME_ACCOUNT_LIST & " " & sContractId
    cnASystem.CommandTimeout = 10000
    Set rstASystem = cnASystem.Execute(sSQL, , CommandTypeEnum.adCmdText)
    If RecordsetIsEmpty(rstASystem) = True Then Exit Sub
    GiveNumSqlRecordsetAccountList
    CreateTableAccountList
End Sub
Public Sub CreateTableAccountList()
    Dim lRowTable As Long
    Dim lRowCount As Long
    Dim tTable As Table
    Dim rRange As RANGE
    Dim bFirstRow As Boolean
    Dim i As Integer, j As Integer '|fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Dim iAccType As Integer
    Dim iCol As Integer
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    If ActiveDocument.Bookmarks.Exists(BOOKMARK_ACCOUNT_LIST) = False Then Exit Sub
    Set rRange = ActiveDocument.RANGE(ActiveDocument.Bookmarks(BOOKMARK_ACCOUNT_LIST).Start, ActiveDocument.Bookmarks(BOOKMARK_ACCOUNT_LIST).End)
    Set tTable = ActiveDocument.Tables.Add(rRange, 1, 2, , AutoFitBehavior:=wdAutoFitContent)

    lRowTable = 1
    bFirstRow = True
    rstASystem.MoveFirst
    
    i = 0
    j = 0
    Do While rstASystem.EOF <> True
        If rstASystem.Fields(iAccountUlType).Value = 1 Then
            iAccType = 1
            iCol = 1
        Else
            iAccType = 2
            iCol = 2
        End If
            
        With tTable
            If (iAccType = 1 And rstASystem.Fields(iCountOwnAcc).Value > 1) _
                Or (iAccType = 2 And rstASystem.Fields(iCountUlAcc).Value > 1) Then
                If Not IsNull(rstASystem.Fields(iAccountName).Value) Then
                    'If Not bFirstRow Then
                        lRowTable = SetRowTable(tTable, iAccType, i, j)
                    'End If
                    With .Cell(lRowTable, iCol).RANGE
                        .InsertAfter rstASystem.Fields(iAccountName).Value
                        .Font.Bold = True
                    End With
                    If iAccType = 1 Then i = lRowTable Else j = lRowTable
                End If
            End If
            
            If Not IsNull(rstASystem.Fields(iAccountNum).Value) Then
                'If Not bFirstRow Then
                    lRowTable = SetRowTable(tTable, iAccType, i, j)
                'End If
               ' sheet.Cells(lRowRep, lColRep).Characters(Start:=Len(sheet.Cells(lRowRep, lColRep).Value) - Len(Str) + 1, Length:=Len(Str)).Font.Bold = True
                With .Cell(lRowTable, iCol)
                    .RANGE.InsertAfter "|fffd|/c " & rstASystem.Fields(iAccountNum).Value
                    .RANGE.Font.Bold = False
                    ActiveDocument.RANGE(tTable.Cell(lRowTable, iCol).RANGE.Words(1).Start, tTable.Cell(lRowTable, iCol).RANGE.Words(3).End).Font.Bold = True
                End With
                If iAccType = 1 Then i = lRowTable Else j = lRowTable
            End If
            
            'If bFirstRow Then bFirstRow = False
            If Not IsNull(rstASystem.Fields(iAccountBankName).Value) Then
                lRowTable = SetRowTable(tTable, iAccType, i, j)
                With .Cell(lRowTable, iCol).RANGE
                    .InsertAfter rstASystem.Fields(iAccountBankName).Value
                    .Font.Bold = False
                End With
                If iAccType = 1 Then i = lRowTable Else j = lRowTable
            End If
            If Not IsNull(rstASystem.Fields(iAccountCorrNum).Value) Then
                lRowTable = SetRowTable(tTable, iAccType, i, j)
                With .Cell(lRowTable, iCol)
                    .RANGE.InsertAfter "|fffd|/c " & rstASystem.Fields(iAccountCorrNum).Value
                    .RANGE.Font.Bold = False
                End With
                ActiveDocument.RANGE(tTable.Cell(lRowTable, iCol).RANGE.Words(1).Start, tTable.Cell(lRowTable, iCol).RANGE.Words(3).End).Font.Bold = True
                If iAccType = 1 Then i = lRowTable Else j = lRowTable
            End If
            If Not IsNull(rstASystem.Fields(iAccountBik).Value) Then
                lRowTable = SetRowTable(tTable, iAccType, i, j)
                With .Cell(lRowTable, iCol)
                    .RANGE.InsertAfter "|fffd||fffd||fffd| " & rstASystem.Fields(iAccountBik).Value
                    .RANGE.Font.Bold = False
                End With
                ActiveDocument.RANGE(tTable.Cell(lRowTable, iCol).RANGE.Words(1).Start, tTable.Cell(lRowTable, iCol).RANGE.Words(1).End).Font.Bold = True
                If iAccType = 1 Then i = lRowTable Else j = lRowTable
            End If
            
            If (iAccType = 1 And rstASystem.Fields(iCountOwnAcc).Value > 1) _
                Or (iAccType = 2 And rstASystem.Fields(iCountUlAcc).Value > 1) Then
                lRowTable = TableInsertRowBelow(tTable)
                If iAccType = 1 Then i = lRowTable Else j = lRowTable
            End If
        End With
        
        rstASystem.MoveNext
    Loop
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
    'SetRowHorizontalAlignment tTable, 1, "Center"
    'tTable.AutoFitBehavior wdAutoFitContent
    tTable.Columns.Width = CentimetersToPoints(8.5)
    'SetTableAllBorders tTable
    '|fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd|
    'If tTable.Rows.Count = 1 Then tTable.Delete
    
    '|fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Selection.EndOf
End Sub


Public Sub GiveNumSqlRecordsetAccountList()
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 0
    iIdContract = 0
    iIdUl = 1
    iIdOwnEnterp = 2
    iIdCommonAccountDirectory = 3
    iAccountName = 4
    iAccountNum = 5
    iAccountBankName = 6
    iAccountCorrNum = 7
    iAccountBik = 8
    iAccountUlType = 9
    iCountOwnAcc = 10
    iCountUlAcc = 11
End Sub
'|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
Public Function TableInsertRowBelow(tTable As Table)
    Dim lRowCount As Long
    
    lRowCount = tTable.Rows.Count
    tTable.Rows(lRowCount).Select
    Selection.InsertRowsBelow
    
    TableInsertRowBelow = lRowCount + 1
End Function

Public Sub SetColumnHorizontalAlignment(tTable As Table, iColumn As Integer, sAlignment As String)
    Dim rColumnRange As Object
    Dim rCell As Object
    Dim sAlignmentConst As String
    Dim i As Integer
    
    Select Case sAlignment
        Case "Left"
            sAlignmentConst = wdAlignParagraphLeft
        Case "Right"
            sAlignmentConst = wdAlignParagraphRight
        Case "Center"
            sAlignmentConst = wdAlignParagraphCenter
    End Select
    i = 1
    Do While i <= tTable.Rows.Count
        tTable.Cell(i, iColumn).RANGE.ParagraphFormat.Alignment = sAlignmentConst
        i = i + 1
    Loop
End Sub
Public Sub SetRowHorizontalAlignment(tTable As Table, iRow As Integer, sAlignment As String)
    Dim sAlignmentConst As String
    Dim i As Integer
    
    Select Case sAlignment
        Case "Left"
            sAlignmentConst = wdAlignRowLeft
        Case "Right"
            sAlignmentConst = wdAlignRowRight
        Case "Center"
            sAlignmentConst = wdAlignRowCenter
    End Select
    
    i = 1
    Do While i <= tTable.Columns.Count
        tTable.Cell(iRow, i).RANGE.ParagraphFormat.Alignment = sAlignmentConst
        i = i + 1
    Loop
End Sub
Public Sub SetTableAllBorders(tTable As Table)
    With tTable
        With .Borders(wdBorderLeft)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderRight)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderTop)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderBottom)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderHorizontal)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
        With .Borders(wdBorderVertical)
            .LineStyle = wdLineStyleSingle
            .LineWidth = wdLineWidth050pt
            .Color = wdColorAutomatic
        End With
    End With
End Sub

Private Function SetRowTable(tTable As Table, iAccType As Integer, i As Integer, j As Integer)
    If (iAccType = 1 And i + 1 > tTable.Rows.Count) Or (iAccType = 2 And j >= tTable.Rows.Count) Then
        SetRowTable = TableInsertRowBelow(tTable)
    Else
        SetRowTable = IIf(iAccType = 1, i + 1, j + 1)
    End If
End Function


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit

Function GetFileName() As String
    Dim sFileName, sFilePath As String
      
    sFilePath = Left(ThisDocument.FullName, InStr(1, ThisDocument.FullName, ThisDocument.Name) - 1)
    sFileName = Left(ThisDocument.Name, Len(ThisDocument.Name) - 4) & ".ini"
    GetFileName = sFilePath & sFileName
End Function
Function LoadTextFile(ByVal sFileName As String) As Boolean
    Dim nUnit As Integer
    Dim nNum As Long
    Dim sBuffer As String, sParam As String, sParamValue As String, sParamNameForCheck As String
    Dim vntBuf As Variant
    Dim bIsParam As Boolean, sIsSQLParam As Boolean
    
    On Error GoTo Error_File
    
    If Dir(sFileName) = "" Then
        LoadTextFile = False
        Exit Function
    End If
    nUnit = FreeFile
    Open sFileName For Input As #nUnit
    
    nNum = 0
    Do While Not EOF(nUnit)
        Line Input #nUnit, sBuffer
        vntBuf = Split(sBuffer, "")
        sParam = vntBuf(0)
        
        If InStr(1, sParam, "=") = 0 And bIsParam = True And sIsSQLParam = True Then
            ParamValue(nNum - 1) = ParamValue(nNum - 1) & vbCr & sParam
        End If
        
        bIsExistInDOC = False
        bIsParam = False
        sIsSQLParam = False
        
        If InStr(1, sParam, "=") <> 0 Then
            sParamNameForCheck = Left(sParam, InStr(1, sParam, "=") - 1)
            sParamValue = Mid(sParam, InStr(1, sParam, "=") + 1, Len(sParam))
            '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| @nObjectID |fffd| @nObjectType, |fffd||fffd| |fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|
            '|fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| @nOrderId, |fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If sParamNameForCheck = "@nOrderId" Then
                sParamNameForCheck = "@nObjectID"
            End If
            
            If Left(sParamNameForCheck, 1) = "@" Then
                sIsSQLParam = True
              Call CheckParam(sParamNameForCheck)
              If bIsExistInDOC = True Then bIsParam = True
            Else
                bIsParam = True
            End If
            
            If bIsParam = True Then
                ReDim Preserve ParamName(nNum)
                ReDim Preserve ParamValue(nNum)
                ReDim Preserve nTypeParams(nNum)
                
                ParamName(nNum) = sParamNameForCheck
                ParamValue(nNum) = sParamValue
                If sIsSQLParam = True Then
                    nTypeParams(nNum) = GetSQLParamType(sParamNameForCheck)
                Else
                    nTypeParams(nNum) = PE_PF_STRING
                End If
                nNum = nNum + 1
            End If
        End If
    Loop
    Close nUnit
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Open sFileName For Output As #nUnit
    Print #nUnit, "**********"
    Close nUnit
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd|
    If Dir(sFileName) <> "" Then Kill sFileName
    
Error_File:
    If Err.Number <> 0 Then
        Select Case Err.Number    ' Evaluate error number.
            Case 54
                Answer = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| 54." & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|, |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| VBA |fffd||fffd||fffd||fffd||fffd||fffd|," & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd|." & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| " & Chr(13) & _
                "|fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem")
            Case Else
                Answer = MsgBox("|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd| " & Err.Number & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| : " & Err.Description & Chr(13) & _
                "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", vbExclamation, "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| ASystem")
        End Select
    Else
        LoadTextFile = True
    End If
End Function

Public Sub ReadParamsFromFile()
  Dim sFullFileName As String, CellsNum As String
  Dim bOk As Boolean
      
  sFullFileName = GetFileName()
  SetParamNameArray
  bOk = LoadTextFile(sFullFileName)

  If bOk Then
     bOkFromFile = True
     Call SetParams
  End If
End Sub


Private Sub Document_Open()
    Call ReadParamsFromFile
    
    SetWindowCaption "|fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd| |fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    If bOkFromFile Then
        SetVarFromFile
        Application.ScreenUpdating = False
        Call ExecStoredProcedure
        Application.ScreenUpdating = True
        ActiveWindow.ActivePane.VerticalPercentScrolled = 0
        ActiveDocument.Save
    End If
End Sub

Public Function GetSQLParamType(strParamName As String)
    Dim i As Integer
    
    If IsInitialArray(sParamNameInDOC) Then
        For i = 0 To UBound(sParamNameInDOC)
            If sParamNameInDOC(i) = strParamName Then
                GetSQLParamType = nParamTypeInDoc(i)
            End If
        Next i
    End If
End Function









' InQuest injected base64 decoded content
' z{Rr

INQUEST-PP=macro
