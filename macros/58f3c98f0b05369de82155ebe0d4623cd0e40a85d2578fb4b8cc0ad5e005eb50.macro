Attribute VB_Name = "Func"
Function SoChu(ByVal NumCurrency As Currency) As String
If NumCurrency = 0 Then
SoChu = "Kho|fffd|ng |fffd|o|fffd|ng"
Exit Function
End If
If NumCurrency > 922337203685477# Then ' So|fffd| l|fffd||fffd|n nha|fffd|t cu|fffd|a loa|fffd|i CURRENCY
SoChu = "Kho|fffd|ng |fffd|o|fffd|i |fffd||fffd||fffd||fffd|c so|fffd| l|fffd||fffd|n h|fffd|n 922,337,203,685,477"
Exit Function
End If
'-------------------------------------------------
Static CharVND(9) As String, BangChu As String, I As Integer
Dim SoLe, SoDoi As Integer, PhanChan, ten As String
CharVND(1) = "mo|fffd|t"
CharVND(2) = "hai"
CharVND(3) = "ba"
CharVND(4) = "bo|fffd|n"
CharVND(5) = "na|fffd|m"
CharVND(6) = "sa|fffd|u"
CharVND(7) = "ba|fffd|y"
CharVND(8) = "ta|fffd|m"
CharVND(9) = "ch|fffd|n"
'-------------------------------------------------
SoLe = Int((NumCurrency - Int(NumCurrency)) * 100) '2 k|fffd| so|fffd| le|fffd|
I = 1
PhanChan = Trim$(Str$(Int(NumCurrency)))
While Len(PhanChan) > 0
Select Case I
Case 1 'Dong
dong = Val(Right$(PhanChan, 3))
PhanChan = Left$(PhanChan, Len(PhanChan) - Len(Right$(PhanChan, 3))) 'Len(Trim$(Str$(Dong)))
Case 2 'Ngan
Ngan = Val(Right$(PhanChan, 3))
PhanChan = Left$(PhanChan, Len(PhanChan) - Len(Right$(PhanChan, 3)))
Case 3 'Trieu
Trieu = Val(Right$(PhanChan, 3))
PhanChan = Left$(PhanChan, Len(PhanChan) - Len(Right$(PhanChan, 3)))
Case 4 'Ty
Ty = Val(Right$(PhanChan, 3))
PhanChan = Left$(PhanChan, Len(PhanChan) - Len(Right$(PhanChan, 3)))
Case 5 'Ngan Ty
NganTy = Val(Right$(PhanChan, 3))
PhanChan = Left$(PhanChan, Len(PhanChan) - Len(Right$(PhanChan, 3)))
End Select
I = I + 1
Wend
If NganTy = 0 And Ty = 0 And Trieu = 0 And Ngan = 0 And dong = 0 Then
BangChu = "kho|fffd|ng |fffd|o|fffd|ng "
I = 5
Else
BangChu = ""
I = 0
End If
While I <= 5 ' Ba|fffd|t |fffd|a|fffd|u |fffd|o|fffd|i
Select Case I
Case 0
SoDoi = NganTy
ten = "nga|fffd|n ty|fffd|"
Case 1
SoDoi = Ty
ten = "ty|fffd|"
Case 2
SoDoi = Trieu
ten = "trie|fffd|u"
Case 3
SoDoi = Ngan
ten = "nga|fffd|n"
Case 4
SoDoi = dong
ten = "|fffd|o|fffd|ng"
Case 5
SoDoi = SoLe
ten = "xu"
End Select
If SoDoi <> 0 Then
Tram = Int(SoDoi / 100)
Muoi = Int((SoDoi - Tram * 100) / 10)
DonVi = (SoDoi - Tram * 100) - Muoi * 10
BangChu = BangChu + IIf(Tram <> 0, CharVND(Tram) + " tra|fffd|m ", "")
If Muoi = 0 And Tram <> 0 And DonVi <> 0 Then
BangChu = BangChu + "le|fffd| "
Else
If Muoi <> 0 Then
BangChu = BangChu + IIf(Muoi <> 0 And Muoi <> 1, CharVND(Muoi) + " m|fffd||fffd|i ", "m|fffd||fffd||fffd|i ")
End If
End If
If Muoi <> 0 And DonVi = 5 Then
BangChu = BangChu + "la|fffd|m " + ten + " "
Else
If Muoi <> 0 And Muoi <> 1 And DonVi = 1 Then
BangChu = BangChu + "mo|fffd|t " + ten + " "
Else
BangChu = BangChu + IIf(DonVi <> 0, CharVND(DonVi) + " " + ten + " ", ten + " ")
End If
End If
Else
BangChu = BangChu + IIf(I = 4, "|fffd|o|fffd|ng ", "")
End If
I = I + 1
Wend
If SoLe = 0 Then
BangChu = BangChu + "cha|fffd|n"
End If
Mid$(BangChu, 1, 1) = UCase$(Mid$(BangChu, 1, 1))
SoChu = BangChu
End Function

Function vni2uni(text As String) As String
    iUNI = Array(225, 224, 7843, 227, 7841, 226, 7845, 7847, 7849, 7851, 7853, 259, 7855, 7857, 7859, _
    7861, 7863, 273, 233, 232, 7867, 7869, 7865, 234, 7871, 7873, 7875, 7877, 7879, 237, 236, 7881, 297, _
    7883, 243, 242, 7887, 245, 7885, 244, 7889, 7891, 7893, 7895, 7897, 417, 7899, 7901, 7903, 7905, 7907, _
    250, 249, 7911, 361, 7909, 432, 7913, 7915, 7917, 7919, 7921, 253, 7923, 7927, 7929, 7925, 193, 192, 7842, _
    195, 7840, 194, 7844, 7846, 7848, 7850, 7852, 258, 7854, 7856, 7858, 7860, 7862, 272, 201, 200, 7866, 7868, _
    7864, 202, 7870, 7872, 7874, 7876, 7878, 205, 204, 7880, 296, 7882, 211, 210, 7886, 213, 7884, 212, 7888, _
    7890, 7892, 7894, 7896, 416, 7898, 7900, 7902, 7904, 7906, 218, 217, 7910, 360, 7908, 431, 7912, 7914, 7916, _
    7918, 7920, 221, 7922, 7926, 7928, 7924)
    
    itextVNI = ",a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,a|fffd|,|fffd| ,e|fffd|,e|fffd|,e|fffd|,e|fffd|,e|fffd|,e|fffd|,e|fffd|,e|fffd|,e|fffd|,e|fffd|,e|fffd|,|fffd| ,|fffd| ,|fffd| ,|fffd| ,|fffd| ,o|fffd|,o|fffd|,o|fffd|,o|fffd|,o|fffd|,o|fffd|,o|fffd|,o|fffd|,o|fffd|,o|fffd|,o|fffd|,|fffd| ,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,u|fffd|,u|fffd|,u|fffd|,u|fffd|,u|fffd|,|fffd| ,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,y|fffd|,y|fffd|,y|fffd|,y|fffd|,|fffd| ,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,A|fffd|,|fffd| ,E|fffd|,E|fffd|,E|fffd|,E|fffd|,E|fffd|,E|fffd|,E|fffd|,E|fffd|,E|fffd|,E|fffd|,E|fffd|,|fffd| ,|fffd| ,|fffd| ,|fffd| ,|fffd| ,O|fffd|,O|fffd|,O|fffd|,O|fffd|,O|fffd|,O|fffd|,O|fffd|,O|fffd|,O|fffd|,O|fffd|,O|fffd|,|fffd| ,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,U|fffd|,U|fffd|,U|fffd|,U|fffd|,U|fffd|,|fffd| ,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,|fffd||fffd|,Y|fffd|,Y|fffd|,Y|fffd|,Y|fffd|,|fffd| ,"
    sText = (text)
    sText = Replace(sText, "0|fffd|", "|fffd|")
    sText = Replace(sText, "1|fffd|", "|fffd|")
    sText = Replace(sText, "2|fffd|", "|fffd|")
    sText = Replace(sText, "3|fffd|", "|fffd|")
    For I = 1 To Len(sText)
        Doup = False
        istr = Mid(sText, I, 1)
        If InStr("aeo|fffd|u|fffd|yAEO|fffd|U|fffd|Y|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|", istr) > 0 Then
            If I < Len(sText) Then
                istr2 = Mid(sText, I + 1, 1)
                Select Case AscW(istr2)
                    Case 227
                        istr2 = "|fffd|"
                    Case 245
                        istr2 = "|fffd|"
                    Case 195
                        istr2 = "|fffd|"
                    Case 213
                        istr2 = "|fffd|"
                End Select
                If istr2 Like "[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]" = True _
                        Or istr2 Like "[|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]" = True Then
                    Doup = True
                End If
            End If
            If Doup Then
                istr = istr + istr2 'Mid(sText, I, 2)
                istrtam = "," + istr + ","
            Else
                istr = Mid(sText, I, 1)
                istrtam = "," + istr + " ,"
            End If
            If InStr(itextVNI, istrtam) > 0 Then
                istr = ChrW(iUNI((InStr(itextVNI, istrtam) + 2) / 3 - 1))
            End If
        End If
        vni2uni = vni2uni + istr
        If Len(sText) > 2 And Doup = True Then
            I = I + 1
        ElseIf Len(sText) = 2 And Doup = True Then
            Exit Function
        End If
    Next
End Function

Function uni2vni(text As String) As String
    itextUNI = ",225 ,224 ,7843,227 ,7841,226 ,7845,7847,7849,7851,7853,259 ,7855,7857,7859,7861,7863,273 ,233 ,232 ,7867,7869,7865,234 ,7871,7873,7875,7877,7879,237 ,236 ,7881,297 ,7883,243 ,242 ,7887,245 ,7885,244 ,7889,7891,7893,7895,7897,417 ,7899,7901,7903,7905,7907,250 ,249 ,7911,361 ,7909,432 ,7913,7915,7917,7919,7921,253 ,7923,7927,7929,7925,193 ,192 ,7842,195 ,7840,194 ,7844,7846,7848,7850,7852,258 ,7854,7856,7858,7860,7862,272 ,201 ,200 ,7866,7868,7864,202 ,7870,7872,7874,7876,7878,205 ,204 ,7880,296 ,7882,211 ,210 ,7886,213 ,7884,212 ,7888,7890,7892,7894,7896,416 ,7898,7900,7902,7904,7906,218 ,217 ,7910,360 ,7908,431 ,7912,7914,7916,7918,7920,221 ,7922,7926,7928,7924,"
    
    iVNI = Array("a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", "a|fffd|", _
    "a|fffd|", "|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "e|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "o|fffd|", "o|fffd|", _
    "o|fffd|", "o|fffd|", "o|fffd|", "o|fffd|", "o|fffd|", "o|fffd|", "o|fffd|", "o|fffd|", "o|fffd|", "|fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "u|fffd|", "u|fffd|", "u|fffd|", "u|fffd|", _
    "u|fffd|", "|fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "y|fffd|", "y|fffd|", "y|fffd|", "y|fffd|", "|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", _
    "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "A|fffd|", "|fffd|", "E|fffd|", "E|fffd|", "E|fffd|", "E|fffd|", "E|fffd|", "E|fffd|", "E|fffd|", "E|fffd|", _
    "E|fffd|", "E|fffd|", "E|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "O|fffd|", "|fffd|", _
    "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "U|fffd|", "U|fffd|", "U|fffd|", "U|fffd|", "U|fffd|", "|fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "|fffd||fffd|", "Y|fffd|", "Y|fffd|", "Y|fffd|", _
    "Y|fffd|", "|fffd|")
            
    sText = (text)
    For I = 1 To Len(sText)
        istr = Mid(sText, I, 1)
        bienchuoimauni = AscW(istr)
        If bienchuoimauni >= 192 Then
            istr = iVNI((InStr(itextUNI, "," + Left(Trim(Str(bienchuoimauni)) + " ", 4) + ",") - 1) / 5)
        End If
        uni2vni = uni2vni + istr
    Next
    uni2vni = Replace(uni2vni, "|fffd|", "0|fffd|")
    uni2vni = Replace(uni2vni, "|fffd|", "1|fffd|")
    uni2vni = Replace(uni2vni, "|fffd|", "2|fffd|")
    uni2vni = Replace(uni2vni, "|fffd|", "3|fffd|")
End Function


Attribute VB_Name = "Module"
Sub subvni2uni()
For Each ohienhanh In Selection
    If Left(ohienhanh.Formula, 1) <> "=" Then
        ohienhanh.Value = vni2uni(ohienhanh.Value)
    End If
Next ohienhanh
End Sub
Sub doima()
    Application.Goto Reference:="DuToanTenCVDVT"
    Application.Run "subvni2uni"
    Application.Goto Reference:="VatTuDuLieu"
    Application.Run "subvni2uni"
    Application.Goto Reference:="m2XDDuLieu"
    Application.Run "subvni2uni"
End Sub
Attribute VB_Name = "Module1"
Sub Macro1()
Attribute Macro1.VB_Description = "Macro recorded 02-07-2017 by Windows User"
Attribute Macro1.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Macro1 Macro
' Macro recorded 02-07-2017 by Windows User
'

'
    Application.Goto Reference:="DuToanDuLieu"
    Application.Run "subvni2uni"
End Sub
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True


INQUEST-PP=macro
