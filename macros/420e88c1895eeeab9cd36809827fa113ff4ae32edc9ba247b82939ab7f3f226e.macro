Attribute VB_Name = "Module1"
Public Declare PtrSafe Function MultiByteToWideChar Lib "kernel32" (ByVal CodePage As Long, ByVal dwFlags As Long, ByRef lpMultiByteStr As Any, ByVal cchMultiByte As Long, ByVal lpWideCharStr As Long, ByVal cchWideChar As Long) As Long
Public Const CP_UTF8 = 65001
Public Const CMax = 1000
Public Declare PtrSafe Function WideCharToMultiByte Lib "kernel32" ( _
        ByVal CodePage As Long, _
        ByVal dwFlags As Long, _
        ByVal lpWideCharStr As LongPtr, _
        ByVal cchWideChar As Long, _
        ByRef lpMultiByteStr As Any, _
        ByVal cchMultiByte As Long, _
        ByVal lpDefaultChar As String, _
        ByVal lpUsedDefaultChar As Long) As Long


Public Sub WriteOut(str As String, strPath As String)
    Dim lBufSize As Long
    Dim lRest As Long
    Dim bUTF8() As Byte
    Dim TLen As Long
    Dim Type1 As Integer '|fffd||3e4||fffd||fffd||26e||5e4|T|fffd||4f0||3f6||fffd|
    Dim Type2 As Integer '|fffd|O|fffd||fffd||fffd||fffd||fffd||26c|O|fffd|_|fffd||fffd||fffd||fffd||fffd|`
    Dim T1 As String     '|fffd|O|fffd||fffd||fffd||32b||fffd||fffd||fffd||fffd|Msg|fffd||fffd||fffd|T|fffd||fffd|
    'Set myRng = Range("A1").CurrentRegion '|fffd|w|fffd|q|fffd|n|fffd||fffd||fffd||fffd||fffd||fffd|d|fffd||fffd|
    
    'Donal
    Dim sHead As String
    Dim sTrail As String
    Dim bComma As String
    Dim sType As String
    Dim sCurrency As String
    Dim sData As String
    Dim sData2 As String
    Dim cZero As Byte
    Dim ipayroll As Integer
    Dim iCount As Integer
    Dim iColumn As Integer
    Dim SEmailin As String
    Dim SEmailout As String
    Dim sDate As String
    Dim sPaydate As String
    Dim iSkip As Integer
'    Dim sSwift As String
    Dim sAdd1 As String
    Dim sAdd2 As String
    Dim sAdd3 As String
    Dim Addlen As String
    '2017.3.14 |fffd|s|fffd|W DoOo |fffd||5e6||730||a93a| |fffd||5e6||730||fffd|~
    Dim DoOo As String
       ' Dim lAmount As Long
    
    
    
    Sheets("parameter").Select
    
    sType = Trim(Cells(3, 2).Text)
    sCurrency = Trim(Cells(4, 2).Text)
    cZero = Trim(Cells(5, 2).Text)
    spayroll = Trim(Val(Cells(6, 2).Text))
    bComma = Trim(Cells(9, 2).Text)
    sDate = Trim(Val(Cells(10, 4).Text))
    sHead = Trim(Cells(12, 2).Text)
    sData = Trim(Cells(13, 2).Text)
    sTrail = Trim(Cells(14, 2).Text)
    sData2 = Trim(Cells(16, 2).Text)
    
    Sheets("Main").Select
    iCount = Trim(Cells(2, 7).Text)
    lAmount = Trim(Cells(1, 12).Text)
    sPaydate = Trim(Cells(2, 2).Text)
    
    iSkip = 0
    
    strPath = Application.GetSaveAsFilename("DBS_ACH_Payment_" & sDate, FileFilter:="Text, *.txt")
        Open strPath For Binary As #1

        
    
    T1 = sHead + vbCrLf
         
    'For I = 1 To myRng.Rows.Count  '|fffd|P|fffd|_|fffd||fffd||fffd||fffd||1b2||fffd||fffd|`
    'Next
    'If Len(T1) > 0 Then
    '   MsgBox "|fffd||26e||fffd||fffd||2ec|d|fffd||fffd||fffd||fffd||fffd|~|fffd||fffd||fffd|,|fffd||fffd||fffd||5e5|X|fffd||fffd||fffd||fffd||fffd|!! " + vbCrLf + T1
    '   Close #1
    '   Exit Sub
    'End If
    
        
    For i = 1 To iCount  '|fffd|g|fffd|JUTF-8|fffd||fffd||fffd|
        iColumn = i + 4 + iSkip
        If Trim(Cells(iColumn, 1).Text) = "Y" And i < CMax Then
        
         SEmailin = Trim(Cells(iColumn, 13).Text)
        Call separation(SEmailin, SEmailout)
        
'        If StrComp(Left(Trim(Cells(iColumn, 2).Text), 2), "//") = 1 Then
 '           If Len(Trim(Cells(iColumn, 2).Text)) = 8 Then
  '          sSwift = Trim(Cells(iColumn, 2).Text) + "XXX,,,"
   '         ElseIf Len(Trim(Cells(iColumn, 2).Text)) = 11 Then
    '        sSwift = Trim(Cells(iColumn, 2).Text) + ",,,"
     '       End If
      '  Else
       '     sSwift = "," + Mid(Trim(Cells(iColumn, 2).Text), 3, Len(Trim(Cells(iColumn, 2).Text)))
            
      '  End If
        
        '2017.9.11 |fffd||5e7||fffd|a|fffd|} |fffd|W|fffd|[ |fffd||fffd||fffd||5e5||fffd||fffd|W|fffd|L|fffd||26a||fffd||fffd|B|fffd|z |fffd|H Select Case |fffd|B|fffd|z
'        Addlen = Trim(Cells(iColumn, 11).Text)
        Select Case Len(Addlen)
          Case Is <= 35
            sAdd1 = Left(Addlen, 35)
            sAdd2 = ""
            sAdd3 = ""
          Case 36 To 70
            sAdd1 = Left(Addlen, 35)
            sAdd2 = Mid(Addlen, 36, 35)
            sAdd3 = ""
          Case Is > 70
            sAdd1 = Left(Addlen, 35)
            sAdd2 = Mid(Addlen, 36, 35)
            sAdd3 = Mid(Addlen, 71, 35)
        End Select
            
        '2017.9.11 |fffd||fffd|if |fffd||4f3|B|fffd|z|fffd|a|fffd|}
        'If Len(Trim(Cells(iColumn, 11).Text)) > 70 Then
        'sAdd3 = Mid(Trim(Cells(iColumn, 11).Text), 71, 35)
        'Else: sAdd3 = ""
        'End If
        
        'If Len(Trim(Cells(iColumn, 11).Text)) > 35 Then
        'sAdd2 = Mid(Trim(Cells(iColumn, 11).Text), 36, 35)
        'Else
        'sAdd2 = ""
        'End If
        
        'If Len(Trim(Cells(iColumn, 11).Text)) > 0 Then
        'sAdd1 = Left(Trim(Cells(iColumn, 11).Text), 35)
        'End If
        
        '2017.3.14 |fffd|s|fffd|W|fffd||5e6||730||a93a| |fffd||5e6||730||fffd|~
'        If Trim(Cells(iColumn, 18).Text) = "|fffd||5e6||730||a93a|(Domestic Remittance)" Then
 '          DoOo = "DO"
  '      Else
   '        DoOo = "OO"
    '    End If
        
       
           T1 = T1 + sData + Trim(Cells(iColumn, 10).Text) + bComma + "TWD" + bComma + Trim(Cells(iColumn, 11).Text) + bComma + sPaydate + bComma + Trim(Cells(iColumn, 8).Text) + bComma + bComma + Replace(Trim(Cells(iColumn, 15).Text), ",", " ") + bComma + bComma + sAdd1 + bComma + sAdd2 + bComma + sAdd3 + bComma
           T1 = T1 + Trim(Cells(iColumn, 4).Text) + bComma + bComma + Trim(Cells(iColumn, 2).Text) + bComma + Trim(Cells(iColumn, 3).Text) + bComma + bComma + bComma + bComma + bComma + bComma + bComma + bComma + bComma
           T1 = T1 + Trim(Cells(iColumn, 6).Text) + bComma + bComma + bComma + bComma + bComma + Trim(Cells(iColumn, 7).Text) + bComma + Trim(Cells(iColumn, 5).Text) + bComma + Trim(Cells(iColumn, 16).Text) + bComma
           '|fffd|~|fffd||5e7||fffd|5|fffd||fffd|
           T1 = T1 + Trim(Cells(iColumn, 12).Text) + bComma + bComma + bComma + bComma + bComma + bComma + bComma + bComma + bComma + SEmailout + Trim(Cells(iColumn, 14).Text) + bComma + bComma + bComma + bComma + bComma + bComma + bComma + Trim(Cells(iColumn, 17).Text) + bComma + Trim(Cells(iColumn, 18).Text) + bComma + Trim(Cells(iColumn, 19).Text) + bComma + bComma + vbCrLf
           
        
        SEmailout = ""

        Else
            If i > CMax Then
            i = iCount
            Else
             iSkip = iSkip + 1
             i = i - 1
             End If
             
        End If
    Next
           T1 = T1 + sTrail
            str = T1
            TLen = Len(str)
            lBufSize = TLen * 3 + 1
            ReDim bUTF8(lBufSize - 1)
            lRest = WideCharToMultiByte(CP_UTF8, 0, StrPtr(str), TLen, bUTF8(0), lBufSize, vbNullString, 0)
            If lRest Then
                lRest = lRest - 1
                ReDim Preserve bUTF8(lRest)
                
                                
                Put #1, , bUTF8
                Put #1, , ""
            End If
    
    
    Close #1
End Sub

Private Sub separation(strin As String, sStrout As String)


Dim x As Integer
Dim add() As String

If Len(Trim(strin)) = 0 Then
sStrout = ",,,,,,,,,,,,,,,,,,,"

Else
    add = Split(strin, ",")
     x = UBound(add)

    For i = 0 To x
        sStrout = sStrout + add(i) + ","
    Next
    
    If (4 - x) > 0 Then
        For j = 1 To 4 - x
        sStrout = sStrout + ","
        Next
    End If
   
    If InStr(sStrout, "@") <> 0 Then
    sStrout = "E,,,,,,,,," + sStrout + ",,,,,"
    Else
    sStrout = "F,,,,,,,,,,,,,," + sStrout
    End If
    
   
End If



End Sub


Attribute VB_Name = "Module2"
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Sub Button_Click()
Call complice
End Sub
Sub reset()
Call reset_to_N
End Sub

Private Sub reset_to_N()
Dim vend_i
 vendi_i = 4
 
 Do While vendi_i < CMax
      
  If Trim(Cells(vendi_i, 1).Text) = "Y" Then
    Cells(vendi_i, 1).Value = "N"
  End If
          vendi_i = vendi_i + 1
 Loop
 

End Sub

Private Sub complice()
Dim cnit_i
Dim vend_i
Dim errmsg
Dim TRANSamt
'
' Macro2 Macro
'
'
 CNT_I = 0
 vendi_i = 4
 TRANSamt = 0
 Dim sCurrency()
 sCurrency = Array("USD", "EUR", "CAN", "CNH", "CNY", "CHY", "JPY", "HKD")
 Sheets("Main").Select
 errmsg = ""
 
 
 
 Do While vendi_i < CMax
      
  If Trim(Cells(vendi_i, 1).Text) = "Y" Then
       
'       If Len(Trim(Cells(vendi_i, 2).Text)) <> 8 Then
 '           If Len(Trim(Cells(vendi_i, 2).Text)) <> 11 Then
  '              If Left(Trim(Cells(vendi_i, 2).Text), 2) <> "//" Then
   '              errmsg = errmsg & "|fffd||fffd||fffd||6a4|HSWIFT|fffd|N|fffd|X|fffd||fffd||fffd|~ Invalid SWIFT Code" & vbCrLf
    '            End If
     '       End If
      ' End If
        
 '      If Len(Trim(Cells(vendi_i, 5).Text)) <> 3 Then
  '         errmsg = errmsg & "|fffd||fffd||fffd||6a4|H|fffd||fffd||fffd|O|fffd||fffd||fffd|~ Invalid Currency Code" & vbCrLf
   '    End If
       
   '     For Each str In sCurrency
     '   If str.Contains(Trim(Cells(vendi_i, 4).Text)) Then
      '      MsgBox ("Found " & FindThisString & " at index " & _
       '     str.IndexOf(Trim(Cells(vendi_i, 4).Text)))
       ' End If
       ' Next

'|fffd||fffd|W|fffd|^|fffd||fffd|i|fffd||fffd|ASC|fffd||2f9||fffd|
       '|fffd|i|fffd|[|fffd|J|fffd||fffd||fffd|P|fffd||fffd||fffd|O|fffd||2ee||fffd|
       
       
       ' add by don 2012.03.27
 '      If Len(Trim(Cells(vendi_i, 9).Text)) > 0 Then
 '           alfa = InStr(1, Trim(Cells(vendi_i, 8).Text), "@")
 '               errmsg = errmsg & "|fffd||fffd||fffd||6a4|HE-mail-|fffd||fffd||fffd|~" & vbCrLf
            'End If

       
      If Not IsNumeric(Trim(Cells(vendi_i, 6).Text)) Then
           errmsg = errmsg & "|fffd||fffd||fffd|B|fffd||fffd||fffd|~ Invalid Amount" & vbCrLf
       End If
       
      
      If InStr(Trim(Cells(vendi_i, 15).Text), ",") <> 0 Then
          errmsg = errmsg & "|fffd|G|fffd||fffd|W|fffd||fffd||fffd|r|fffd||fffd|" & "(,) |fffd||432||fffd||fffd||fffd|" & vbCrLf & "Please remove comma(,) from the beneficiary name" & vbCrLf
      Else
          If Len(Trim(Cells(vendi_i, 15).Text)) > 35 Then
           errmsg = errmsg & "|fffd||fffd||fffd||6a4|H|fffd||fffd|W|fffd|W|fffd|L|fffd|^|fffd||fffd|35|fffd|r|fffd||fffd||fffd|A|fffd||431|N|fffd|W|fffd|X|fffd||fffd||fffd||fffd||fffd||fffd|a|fffd|}|fffd||fffd||fffd|J" & vbCrLf & "The beneficiary name exceeds 35 characters. Please input the exceeding part on the address field" & vbCrLf
          End If
      End If
       
'      If InStr(Trim(Cells(vendi_i, 11).Text), ",") <> 0 Then
 '         errmsg = errmsg & "|fffd||fffd||fffd||6a4|H|fffd|a|fffd|}|fffd||fffd||fffd|r|fffd||fffd|" & "(,) |fffd||432||fffd||fffd||fffd|" & vbCrLf & "Please remove comma(,) from the beneficiary address" & vbCrLf
  '     Else
   '      If Len(Trim(Cells(vendi_i, 11).Text)) > 105 Then
    '       errmsg = errmsg & "|fffd|a|fffd|}|fffd|W|fffd|L|fffd||fffd||fffd||fffd| The address exceeds allowed length" & vbCrLf
     '    End If
      ' End If
       
       If Len(Trim(Cells(vendi_i, 12).Text)) > 78 Then
           errmsg = errmsg & "|fffd|I|fffd||6a9||fffd||fffd||4f6|W|fffd|L|fffd||fffd||fffd||fffd| The Payment Detail exceeds allowed length" & vbCrLf
       End If
       
       If Len(Trim(Cells(vendi_i, 13).Text)) <> 0 And Len(Trim(Cells(vendi_i, 15).Text)) = 0 Then
           errmsg = errmsg & "|fffd|o|fffd||fffd||fffd||fffd||fffd||4e5||fffd||fffd||fffd| Please enter the invoice details" & vbCrLf
       End If
       

End If

    
    If Len(errmsg) > 0 Then
       MsgBox ("|fffd||fffd|" & vendi_i & "|fffd||69b3||fffd|~, |fffd||fffd||fffd||6a4|H:" & Cells(vendi_i, 15).Text & vbCrLf & _
       "There is an error in row " & vendi_i & "  , Beneficiary:  " & Cells(vendi_i, 15).Text _
       & vbCrLf & errmsg)
       Exit Do

    End If
    vendi_i = vendi_i + 1

 Loop
 
 If Len(Trim(errmsg)) = 0 Then
    If MsgBox("|fffd|T|fffd|w|fffd||fffd||fffd||fffd|?" & vbCrLf & "|fffd||fffd||fffd||1a6|@ " & Cells(2, 7).Text & "|fffd||fffd| " & vbCrLf & "Convert?" & vbCrLf & "The number of transactions is: " & Cells(2, 7).Text, vbYesNo) = vbYes Then
       Call WriteOut("", "")
    ' MsgBox ("HERE")
    End If
 End If

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

End Sub
Attribute VB_Name = "Sheet2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True

Private Sub Workbook_Open()
MsgBox ("|fffd|w|fffd||fffd||3e5||3ac|P|fffd|i|fffd||226||fffd|(|fffd|x|fffd|W)|fffd|C|fffd||fffd||6d2b| |fffd||fffd||fffd||275|{|fffd||fffd| UFF|fffd||fffd||fffd||fffd|1.4.1" & vbCrLf & "Welcome to use DBS Bank (Taiwan) ACH Electric Software ToolKit!! Version UFF 1.4.1" & vbCrLf & vbCrLf & "The Copyright is belong to DBS bank(Taiwan) (September, 2017)")
End Sub

' 201303.27 Donal   fix     Address for sunlight use



INQUEST-PP=macro
