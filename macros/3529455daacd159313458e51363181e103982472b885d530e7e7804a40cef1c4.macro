Attribute VB_Name = "Barcode"
Option Explicit

Public Sub Generate()

Dim prefix As String
prefix = GeneratePrefix

'barcode_code
'ThisDocument.barcode_code.Caption = Encode(prefix)

'barcode_label
ThisDocument.barcode_label.Caption = prefix

'barcode_bookmark - label wasn't able to embed font (even when font was changed in Before_Open)
Call Barcode.ReplaceBookmark("barcode_bookmark", Encode(prefix))

End Sub

Public Sub ReplaceBookmark(bkmName As String, newCode As String)        'replace bookmark (without deleting it)

Dim bkmRange As Range

On Error GoTo err
Set bkmRange = ThisDocument.Bookmarks(bkmName).Range
If ThisDocument.ProtectionType = wdNoProtection Then
    bkmRange.Text = newCode
Else
    Application.ScreenUpdating = False
    ThisDocument.Unprotect
    bkmRange.Text = newCode
    ThisDocument.Protect wdAllowOnlyFormFields, True
    Application.ScreenUpdating = True
End If

ThisDocument.Bookmarks.Add bkmName, bkmRange

Exit Sub

err:
    Application.ScreenUpdating = True
    MsgBox "Nastala chyba p|fffd|i generov|fffd|n|fffd| |fffd||fffd|rov|fffd|ho k|fffd|du." & vbNewLine & err.Description, vbCritical

End Sub


Function GeneratePrefix() As String

Dim prefix As String
prefix = "UCB91" & Format(Now(), "yymmddhhMMss") & UCase(Environ("username"))

GeneratePrefix = prefix

End Function


Function Encode(value As String) As String

    ' Parameters : a string
    ' Return     : a string which give the bar code when it is dispayed with CODE128.TTF font
    '              : an empty string if the supplied parameter is no good
    Dim charPos As Integer, minCharPos As Integer
    Dim currentChar As Integer, checksum As Integer
    Dim isTableB As Boolean, isValid As Boolean
    isTableB = True
    isValid = True
    Dim returnValue As String
    returnValue = ""
    
    If Len(value) > 0 Then
        
        ' Check for valid characters
        Dim charCount As Integer
        For charCount = 0 To Len(value) - 1
        
            'currentChar = char.GetNumericValue(value, charPos);
'            currentChar = AscW(StrConv(Mid(value, charCount + 1, 1), vbUnicode))
            currentChar = AscW(Mid(value, charCount + 1, 1))
            If Not (currentChar >= 32 And currentChar <= 126) Then
                isValid = False
                Exit For
            End If
        Next charCount
        

        ' Barcode is full of ascii characters, we can now process it
        If isValid Then
            charPos = 0
            Do While charPos < Len(value)
                If isTableB Then
                
                    ' See if interesting to switch to table C
                    ' yes for 4 digits at start or end, else if 6 digits
                    If charPos = 0 Or charPos + 4 = Len(value) Then
                        minCharPos = 4
                    Else
                        minCharPos = 6
                    End If

                    minCharPos = IsNumber(value, charPos, minCharPos)

                    If minCharPos < 0 Then
                        ' Choice table C
                        If charPos = 0 Then
                            ' Starting with table C
                            returnValue = ChrW(205) ' char.ConvertFromUtf32(205);
                        Else
                            ' Switch to table C
                            returnValue = returnValue & ChrW(199)
                        End If
                        isTableB = False
                     Else
                        If charPos = 0 Then
                             ' Starting with table B
                            returnValue = ChrW(204) ' char.ConvertFromUtf32(204);
                        End If

                    End If
                End If

                If Not isTableB Then
                    ' We are on table C, try to process 2 digits
                    minCharPos = 2
                    minCharPos = IsNumber(value, charPos, minCharPos)
                    If (minCharPos < 0) Then ' OK for 2 digits, process it
                            'currentChar = int.Parse(value.Substring(charPos, 2));
                        currentChar = CInt(Mid(value, charPos + 1, 2))
                        currentChar = IIf(currentChar < 95, currentChar + 32, currentChar + 100)
                        returnValue = returnValue & ChrW(currentChar)
                        charPos = charPos + 2
                    Else
                         ' We haven't 2 digits, switch to table B
                        returnValue = returnValue & ChrW(200)
                        isTableB = True
                    End If
                End If
                
                
                If isTableB Then
                    ' Process 1 digit with table B
                    returnValue = returnValue + Mid(value, charPos + 1, 1)
                    charPos = charPos + 1
                End If
            Loop

                           
            ' Calculation of the checksum
            checksum = 0
            Dim loopp As Integer
            For loopp = 0 To Len(returnValue) - 1
                currentChar = AscW(Mid(returnValue, loopp + 1, 1)) 'AscW(StrConv(Mid(returnValue, loopp + 1, 1), vbUnicode))
                  currentChar = IIf(currentChar < 127, currentChar - 32, currentChar - 100)
                If loopp = 0 Then
                    checksum = currentChar
                Else
                    checksum = (checksum + (loopp * currentChar)) Mod 103
                End If
            Next loopp
                       

            ' Calculation of the checksum ASCII code
            checksum = IIf(checksum < 95, checksum + 32, checksum + 100)
            ' Add the checksum and the STOP
            returnValue = returnValue & ChrW(checksum) & ChrW(206)
                                
        End If
        
    End If

    Encode = returnValue
End Function



Function Encode_old(value As String) As String

    ' Parameters : a string
    ' Return     : a string which give the bar code when it is dispayed with CODE128.TTF font
    '              : an empty string if the supplied parameter is no good
    Dim charPos As Integer, minCharPos As Integer
    Dim currentChar As Integer, checksum As Integer
    Dim isTableB As Boolean, isValid As Boolean
    isTableB = True
    isValid = True
    Dim returnValue As String
    returnValue = ""
    
    If Len(value) > 0 Then
        
        ' Check for valid characters
        Dim charCount As Integer
        For charCount = 0 To Len(value) - 1
        
            'currentChar = char.GetNumericValue(value, charPos);
'            currentChar = AscW(StrConv(Mid(value, charCount + 1, 1), vbUnicode))
            currentChar = AscW(Mid(value, charCount + 1, 1))
            If Not (currentChar >= 32 And currentChar <= 126) Then
                isValid = False
                Exit For
            End If
        Next charCount
        

        ' Barcode is full of ascii characters, we can now process it
        If isValid Then
            charPos = 0
            Do While charPos < Len(value)
                If isTableB Then
                
                    ' See if interesting to switch to table C
                    ' yes for 4 digits at start or end, else if 6 digits
                    If charPos = 0 Or charPos + 4 = Len(value) Then
                        minCharPos = 4
                    Else
                        minCharPos = 6
                    End If

                    minCharPos = IsNumber(value, charPos, minCharPos)

                    If minCharPos < 0 Then
                        ' Choice table C
                        If charPos = 0 Then
                            ' Starting with table C
                            returnValue = ChrW(205) ' char.ConvertFromUtf32(205);
                        Else
                            ' Switch to table C
                            returnValue = returnValue & ChrW(199)
                        End If
                        isTableB = False
                     Else
                        If charPos = 0 Then
                             ' Starting with table B
                            returnValue = ChrW(204) ' char.ConvertFromUtf32(204);
                        End If

                    End If
                End If

                If Not isTableB Then
                    ' We are on table C, try to process 2 digits
                    minCharPos = 2
                    minCharPos = IsNumber(value, charPos, minCharPos)
                    If (minCharPos < 0) Then ' OK for 2 digits, process it
                            'currentChar = int.Parse(value.Substring(charPos, 2));
                        currentChar = CInt(Mid(value, charPos + 1, 2))
                        currentChar = IIf(currentChar < 95, currentChar + 32, currentChar + 100)
                        returnValue = returnValue & ChrW(currentChar)
                        charPos = charPos + 2
                    Else
                         ' We haven't 2 digits, switch to table B
                        returnValue = returnValue & ChrW(200)
                        isTableB = True
                    End If
                End If
                
                
                If isTableB Then
                    ' Process 1 digit with table B
                    returnValue = returnValue + Mid(value, charPos + 1, 1)
                    charPos = charPos + 1
                End If
            Loop

                           
            ' Calculation of the checksum
            checksum = 0
            Dim loopp As Integer
            For loopp = 0 To Len(returnValue) - 1
                currentChar = AscW(Mid(returnValue, loopp + 1, 1)) 'AscW(StrConv(Mid(returnValue, loopp + 1, 1), vbUnicode))
                  currentChar = IIf(currentChar < 127, currentChar - 32, currentChar - 100)
                If loopp = 0 Then
                    checksum = currentChar
                Else
                    checksum = (checksum + (loopp * currentChar)) Mod 103
                End If
            Next loopp
                       

            ' Calculation of the checksum ASCII code
            checksum = IIf(checksum < 95, checksum + 32, checksum + 100)
            ' Add the checksum and the STOP
            returnValue = returnValue & ChrW(checksum) & ChrW(206)
                                
        End If
        
    End If

    Encode = returnValue
End Function



Function IsNumber(InputValue As String, charPos As Integer, minCharPos As Integer) As Integer

    ' if the MinCharPos characters from CharPos are numeric, then MinCharPos = -1
    minCharPos = minCharPos - 1
    If charPos + minCharPos < Len(InputValue) Then
        Do While (minCharPos >= 0)
'            if ((int)char.Parse(InputValue.Substring(CharPos + MinCharPos, 1)) < 48
'                or (int)char.Parse(InputValue.Substring(CharPos + MinCharPos, 1)) > 57) then

'            If AscW(StrConv(Mid(InputValue, charPos + minCharPos, 1), vbUnicode)) < 48 Or AscW(StrConv(Mid(InputValue, charPos + minCharPos, 1), vbUnicode)) > 57 Then
            If AscW(Mid(InputValue, charPos + minCharPos + 1, 1)) < 48 Or AscW(Mid(InputValue, charPos + minCharPos + 1, 1)) > 57 Then
                GoTo ending
            End If
            minCharPos = minCharPos - 1
        Loop
    End If
    
ending:
    IsNumber = minCharPos
    
End Function
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Control = "barcode_label, 1, 1, MSForms, Label2"
Attribute VB_Control = "btn_generate_barcode, 0, 2, MSForms, CommandButton2"
Private Sub Document_Open()
ThisDocument.EmbedTrueTypeFonts = True
Application.OnTime Now + TimeValue("00:00:00"), "Msg_Info_Barcode"
End Sub

Public Sub Msg_Info_Barcode()
MsgBox "P|fffd|ed tiskem nebo zasl|fffd|n|fffd|m elektronick|fffd| verze |fffd|ablony nezapome|fffd|te kliknout na GENER|fffd|TOR HORN|fffd|HO |fffd||fffd|ROV|fffd|HO K|fffd|DU." & vbNewLine & "Pokud tak neu|fffd|in|fffd|te, hroz|fffd| riziko duplicitn|fffd| hodnoty v aplikaci Filenet.", vbInformation
End Sub

Private Sub btn_generate_barcode_Click()
Call Barcode.Generate
End Sub



INQUEST-PP=macro
